//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión del motor en tiempo de ejecución:2.0.50727.5485
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=2.0.50727.5485.
// 
#pragma warning disable 1591

namespace ServicesProxy.MetaHome {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MH_ExternoSoap", Namespace="http:/www.rhpro.com/")]
    public partial class MH_Externo : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback TokenAutorizadoOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_Data_TokenAccesoOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_UsuarioLogueadoOperationCompleted;
        
        private System.Threading.SendOrPostCallback WS_Actualizar_Multiples_BasesOperationCompleted;
        
        private System.Threading.SendOrPostCallback logout_TempLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_BasesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MH_Externo() {
            this.Url = global::ServicesProxy.Properties.Settings.Default.ServicesProxy_MetaHome_MH_Metricas;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetTokenCompletedEventHandler GetTokenCompleted;
        
        /// <remarks/>
        public event TokenAutorizadoCompletedEventHandler TokenAutorizadoCompleted;
        
        /// <remarks/>
        public event get_Data_TokenAccesoCompletedEventHandler get_Data_TokenAccesoCompleted;
        
        /// <remarks/>
        public event get_UsuarioLogueadoCompletedEventHandler get_UsuarioLogueadoCompleted;
        
        /// <remarks/>
        public event WS_Actualizar_Multiples_BasesCompletedEventHandler WS_Actualizar_Multiples_BasesCompleted;
        
        /// <remarks/>
        public event logout_TempLoginCompletedEventHandler logout_TempLoginCompleted;
        
        /// <remarks/>
        public event get_BasesCompletedEventHandler get_BasesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http:/www.rhpro.com/GetToken", RequestNamespace="http:/www.rhpro.com/", ResponseNamespace="http:/www.rhpro.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetToken() {
            object[] results = this.Invoke("GetToken", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTokenAsync() {
            this.GetTokenAsync(null);
        }
        
        /// <remarks/>
        public void GetTokenAsync(object userState) {
            if ((this.GetTokenOperationCompleted == null)) {
                this.GetTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTokenOperationCompleted);
            }
            this.InvokeAsync("GetToken", new object[0], this.GetTokenOperationCompleted, userState);
        }
        
        private void OnGetTokenOperationCompleted(object arg) {
            if ((this.GetTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTokenCompleted(this, new GetTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http:/www.rhpro.com/TokenAutorizado", RequestNamespace="http:/www.rhpro.com/", ResponseNamespace="http:/www.rhpro.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TokenAutorizado(string key) {
            object[] results = this.Invoke("TokenAutorizado", new object[] {
                        key});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TokenAutorizadoAsync(string key) {
            this.TokenAutorizadoAsync(key, null);
        }
        
        /// <remarks/>
        public void TokenAutorizadoAsync(string key, object userState) {
            if ((this.TokenAutorizadoOperationCompleted == null)) {
                this.TokenAutorizadoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTokenAutorizadoOperationCompleted);
            }
            this.InvokeAsync("TokenAutorizado", new object[] {
                        key}, this.TokenAutorizadoOperationCompleted, userState);
        }
        
        private void OnTokenAutorizadoOperationCompleted(object arg) {
            if ((this.TokenAutorizadoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TokenAutorizadoCompleted(this, new TokenAutorizadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http:/www.rhpro.com/get_Data_TokenAcceso", RequestNamespace="http:/www.rhpro.com/", ResponseNamespace="http:/www.rhpro.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] get_Data_TokenAcceso(string key, string token) {
            object[] results = this.Invoke("get_Data_TokenAcceso", new object[] {
                        key,
                        token});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void get_Data_TokenAccesoAsync(string key, string token) {
            this.get_Data_TokenAccesoAsync(key, token, null);
        }
        
        /// <remarks/>
        public void get_Data_TokenAccesoAsync(string key, string token, object userState) {
            if ((this.get_Data_TokenAccesoOperationCompleted == null)) {
                this.get_Data_TokenAccesoOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_Data_TokenAccesoOperationCompleted);
            }
            this.InvokeAsync("get_Data_TokenAcceso", new object[] {
                        key,
                        token}, this.get_Data_TokenAccesoOperationCompleted, userState);
        }
        
        private void Onget_Data_TokenAccesoOperationCompleted(object arg) {
            if ((this.get_Data_TokenAccesoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_Data_TokenAccesoCompleted(this, new get_Data_TokenAccesoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http:/www.rhpro.com/get_UsuarioLogueado", RequestNamespace="http:/www.rhpro.com/", ResponseNamespace="http:/www.rhpro.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet get_UsuarioLogueado(string key, string nroTemp) {
            object[] results = this.Invoke("get_UsuarioLogueado", new object[] {
                        key,
                        nroTemp});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void get_UsuarioLogueadoAsync(string key, string nroTemp) {
            this.get_UsuarioLogueadoAsync(key, nroTemp, null);
        }
        
        /// <remarks/>
        public void get_UsuarioLogueadoAsync(string key, string nroTemp, object userState) {
            if ((this.get_UsuarioLogueadoOperationCompleted == null)) {
                this.get_UsuarioLogueadoOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_UsuarioLogueadoOperationCompleted);
            }
            this.InvokeAsync("get_UsuarioLogueado", new object[] {
                        key,
                        nroTemp}, this.get_UsuarioLogueadoOperationCompleted, userState);
        }
        
        private void Onget_UsuarioLogueadoOperationCompleted(object arg) {
            if ((this.get_UsuarioLogueadoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_UsuarioLogueadoCompleted(this, new get_UsuarioLogueadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http:/www.rhpro.com/WS_Actualizar_Multiples_Bases", RequestNamespace="http:/www.rhpro.com/", ResponseNamespace="http:/www.rhpro.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string WS_Actualizar_Multiples_Bases(string key, string usuario, string PassEncript, string InitialCatalog, string DataSource, string keyConnStr, string URL) {
            object[] results = this.Invoke("WS_Actualizar_Multiples_Bases", new object[] {
                        key,
                        usuario,
                        PassEncript,
                        InitialCatalog,
                        DataSource,
                        keyConnStr,
                        URL});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WS_Actualizar_Multiples_BasesAsync(string key, string usuario, string PassEncript, string InitialCatalog, string DataSource, string keyConnStr, string URL) {
            this.WS_Actualizar_Multiples_BasesAsync(key, usuario, PassEncript, InitialCatalog, DataSource, keyConnStr, URL, null);
        }
        
        /// <remarks/>
        public void WS_Actualizar_Multiples_BasesAsync(string key, string usuario, string PassEncript, string InitialCatalog, string DataSource, string keyConnStr, string URL, object userState) {
            if ((this.WS_Actualizar_Multiples_BasesOperationCompleted == null)) {
                this.WS_Actualizar_Multiples_BasesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWS_Actualizar_Multiples_BasesOperationCompleted);
            }
            this.InvokeAsync("WS_Actualizar_Multiples_Bases", new object[] {
                        key,
                        usuario,
                        PassEncript,
                        InitialCatalog,
                        DataSource,
                        keyConnStr,
                        URL}, this.WS_Actualizar_Multiples_BasesOperationCompleted, userState);
        }
        
        private void OnWS_Actualizar_Multiples_BasesOperationCompleted(object arg) {
            if ((this.WS_Actualizar_Multiples_BasesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WS_Actualizar_Multiples_BasesCompleted(this, new WS_Actualizar_Multiples_BasesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http:/www.rhpro.com/logout_TempLogin", RequestNamespace="http:/www.rhpro.com/", ResponseNamespace="http:/www.rhpro.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void logout_TempLogin(string key, string nroTemp) {
            this.Invoke("logout_TempLogin", new object[] {
                        key,
                        nroTemp});
        }
        
        /// <remarks/>
        public void logout_TempLoginAsync(string key, string nroTemp) {
            this.logout_TempLoginAsync(key, nroTemp, null);
        }
        
        /// <remarks/>
        public void logout_TempLoginAsync(string key, string nroTemp, object userState) {
            if ((this.logout_TempLoginOperationCompleted == null)) {
                this.logout_TempLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.Onlogout_TempLoginOperationCompleted);
            }
            this.InvokeAsync("logout_TempLogin", new object[] {
                        key,
                        nroTemp}, this.logout_TempLoginOperationCompleted, userState);
        }
        
        private void Onlogout_TempLoginOperationCompleted(object arg) {
            if ((this.logout_TempLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logout_TempLoginCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http:/www.rhpro.com/get_Bases", RequestNamespace="http:/www.rhpro.com/", ResponseNamespace="http:/www.rhpro.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] get_Bases(string key, string URL, string Usuario, string passEncriptado, string TipoFiltroLogin) {
            object[] results = this.Invoke("get_Bases", new object[] {
                        key,
                        URL,
                        Usuario,
                        passEncriptado,
                        TipoFiltroLogin});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void get_BasesAsync(string key, string URL, string Usuario, string passEncriptado, string TipoFiltroLogin) {
            this.get_BasesAsync(key, URL, Usuario, passEncriptado, TipoFiltroLogin, null);
        }
        
        /// <remarks/>
        public void get_BasesAsync(string key, string URL, string Usuario, string passEncriptado, string TipoFiltroLogin, object userState) {
            if ((this.get_BasesOperationCompleted == null)) {
                this.get_BasesOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_BasesOperationCompleted);
            }
            this.InvokeAsync("get_Bases", new object[] {
                        key,
                        URL,
                        Usuario,
                        passEncriptado,
                        TipoFiltroLogin}, this.get_BasesOperationCompleted, userState);
        }
        
        private void Onget_BasesOperationCompleted(object arg) {
            if ((this.get_BasesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_BasesCompleted(this, new get_BasesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void GetTokenCompletedEventHandler(object sender, GetTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void TokenAutorizadoCompletedEventHandler(object sender, TokenAutorizadoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TokenAutorizadoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TokenAutorizadoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void get_Data_TokenAccesoCompletedEventHandler(object sender, get_Data_TokenAccesoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_Data_TokenAccesoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_Data_TokenAccesoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void get_UsuarioLogueadoCompletedEventHandler(object sender, get_UsuarioLogueadoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_UsuarioLogueadoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_UsuarioLogueadoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void WS_Actualizar_Multiples_BasesCompletedEventHandler(object sender, WS_Actualizar_Multiples_BasesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WS_Actualizar_Multiples_BasesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WS_Actualizar_Multiples_BasesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void logout_TempLoginCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void get_BasesCompletedEventHandler(object sender, get_BasesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_BasesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_BasesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591