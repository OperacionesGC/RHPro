/*.........................................................................
 Archivo       : rsuesin03.p                          fecha ini. : 23/4/97
 Nombre progr. : rep07.p                              fecha rev. : 99/99/99
 autor         : Mauricio Heidt
 Sistema       : personal
 Base de datos : per
 Descripcion   : configuraci¢n de los Sindicatos (ex rep07)
               :
               :
..........................................................................*/

def input parameter nro-sindicato like tercero.ternro.
def input parameter nroliq like periodo.pliqnro.
def input parameter nropro like per.proceso.pronro.
def input parameter todos-pro as logical.
def input parameter proc-aprob as logical.

def var arreglo as decimal format "->>>>>>>>.99" extent 15 initial 0.
def var i as int.

{def-rep.i}  /* define la variable nro-reporte como compartida */ 
{headcom.i}

/*for each gremio where (gremio.ternro = nro-sindicato or nro-sindicato = ?) NO-LOCK,
    each empleado where empleado.gremio = gremio.ternro NO-LOCK,
    each cabliq where cabliq.empleado = empleado.ternro NO-LOCK,
    each per.proceso where per.proceso.pronro = cabliq.pronro 
                       and ((per.proceso.pronro = nropro or todos-pro or
                            (per.proceso.proaprob and proc-aprob))) NO-LOCK,
    each periodo where (periodo.pliqnro = per.proceso.pliqnro 
                   and (periodo.pliqnro = nroliq or nroliq = ?)) NO-LOCK
    break by empleado.ternro:*/
 
find first per.periodo where per.periodo.pliqnro = nroliq no-lock no-error.
if not avail(per.periodo)
  then
    leave.
for each per.proceso of per.periodo where ((per.proceso.pronro = nropro or todos-pro or
                                             (per.proceso.proaprob and proc-aprob))) no-lock,
      each per.cabliq of per.proceso no-lock,
      each per.empleado where per.empleado.ternro = per.cabliq.empleado no-lock,
      FIRST per.gremio where (per.gremio.ternro = per.empleado.gremio) and
                            ((per.gremio.ternro = nro-sindicato) or
                             (nro-sindicato = ?)) NO-LOCK BREAK BY empleado.ternro:


    for each confrep where confrep.repnro = 7 NO-LOCK :
    
        if confrep.conftipo = 'AC'
          then do:
             find first acu_liq of cabliq where acu_liq.acunro = confrep.confval NO-LOCK no-error.
              if available acu_liq
               then
                 arreglo[confrep.confnrocol] = arreglo[confrep.confnrocol] + acu_liq.almonto.
           end.
         if confrep.conftipo = 'CO'
          then do:                                      
             find first concepto where Concepto.concimp and concepto.conccod = STRING(confrep.confval) no-lock no-error.
             if available concepto
             then do :
             find first detliq of cabliq where detliq.concnro = concepto.concnro NO-LOCK no-error.
             if available detliq
                then
                 arreglo[confrep.confnrocol] = arreglo[confrep.confnrocol] + detliq.dlimonto.
             end.    
           end.
         if confrep.conftipo = 'EDR' /* empleador */
           then do:
             find first concepto where not concepto.concpuente and concepto.conccod = STRING(confrep.confval) no-lock no-error.
             if available concepto
             then do :
               find first conliq of cabliq where conliq.concnro = concepto.concnro NO-LOCK no-error.
               if available conliq
                  then
                    arreglo[confrep.confnrocol] = arreglo[confrep.confnrocol] + conliq.dlimonto.
             end.       
           end.
      end.

    find first rep06 where rep06.ternro   = empleado.ternro and 
                           rep06.sessnro = Nro-Session and
                           rep06.secrep  = Nro-Reporte no-error.
    if not available rep06
      then do:


        {busreg.i &Nro-Rep = 06}      

        assign rep06.ternro    = empleado.ternro
               rep06.sindicato = gremio.ternro
               rep06.bruto     = arreglo[1]
               rep06.msr       = arreglo[2]
               rep06.empleado  = arreglo[3]
               rep06.empleador = arreglo[4]
               rep06.cuota     = arreglo[5]
               rep06.aux1      = arreglo[6]
               rep06.aux2      = arreglo[7]
               rep06.aux3      = arreglo[8]
               rep06.total     = arreglo[9].


       /******************* carga la provincia para cortar por provincia *****/
  
       find first cabdom of empleado where cabdom.domdefault NO-LOCK NO-ERROR.
       IF AVAILABLE cabdom 
       THEN DO: 
          find first detdom of cabdom NO-LOCK NO-ERROR.
          IF AVAILABLE detdom 
          THEN DO:
             FIND FIRST provincia of detdom NO-LOCK NO-ERROR.
             IF AVAILABLE provincia THEN
             ASSIGN rep06.provnro  = detdom.provnro
                    rep06.provdesc = provincia.provdesc.      
          END. /* THEN */
       END.  /* THEN */
       
  
      end.
      else
        assign rep06.bruto     = rep06.bruto     + arreglo[1]
               rep06.msr       = rep06.msr       + arreglo[2]
               rep06.empleado  = rep06.empleado  + arreglo[3]
               rep06.empleador = rep06.empleador + arreglo[4]
               rep06.cuota     = rep06.cuota     + arreglo[5]
               rep06.aux1      = rep06.aux1      + arreglo[6] 
               rep06.aux2      = rep06.aux2      + arreglo[7]
               rep06.aux3      = rep06.aux3      + arreglo[8]
               rep06.total     = rep06.total     + arreglo[9].


   do i = 1 to 15:
        arreglo[i] = 0.
   end.
   
end. 
