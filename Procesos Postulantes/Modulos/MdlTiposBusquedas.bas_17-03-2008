Attribute VB_Name = "MdlTiposBusquedas"
Option Explicit

' ---------------------------------------------------------------------------------------------
' Descripcion:Modulo de Busquedas
' Autor      :FGZ
' Fecha      :05/08/2003
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------

' Procedimienos de Busqueda de Parámetros
Public Sub Guardar_Nov_Hist()
   
    guarda_nov = True

End Sub

Public Sub Buscar(p_valor As Double, p_retro As Date, p_bien As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Veificar si está en el cache.
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
If objCache.EsSimboloDefinido(CStr(NroConce)) Then
    p_valor = objCache.Valor(CStr(NroConce))
    p_retro = C_Date("")
    p_bien = True
Else
    ' Ejecutar la busqueda
    Call bus_Acum
    
    ' Insertar la informacion en el cahce
    If Bien Then
        objCache.Insertar_Simbolo CStr(NroConce), Valor
    End If
End If


End Sub

Public Sub EjecutarBusqueda(ByVal tipoBus As Long, ByVal concnro As Long, ByVal prog As Long, ByRef val As Double, ByRef Fecha As Date, ByRef OK As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Simula  el RUN VALUE (programa.progarch) (buliq-cabliq.empleado,nrogrupo,buliq-concepto.concnro,for_tpa.tpanro,buliq-cabliq.cliqnro, OUTPUT val,OUTPUT fec, OUTPUT ok) NO-ERROR.
'              Este es el procedimiento llamador dependiendo del tipo de Busqueda
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim nombre As String
Dim Rastreo As Boolean

Dim antdia As Integer
Dim antmes As Integer
Dim antanio As Integer

Dim TpoInicialBus
Dim TpoFinalBus

    
    TpoInicialBus = GetTickCount

NroProg = prog

Select Case tipoBus
Case 1: ' Det. Automática - Novedad
            ' ???????????????????????
    nombre = "Det. Automática - Novedad"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & " no implementada "
    End If
Case 2:     'Búsqueda interna
    nombre = "Búsqueda interna"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_interna
Case 3:     'Escalas
    nombre = "Escalas"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Grilla(tipoBus, concnro, prog)
Case 4:     'Acumulador Liq. Actual
    nombre = "Acumulador Liq. Actual"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Acum0
Case 5:     'Concepto Liq. Actual
    nombre = "Concepto Liq. Actual"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Concep0
Case 6:     'Fc. S/ acumulador procesos
    nombre = "Fc. S/ acumulador procesos"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Acum
Case 7:     'Acum. Mensual meses fijos
    nombre = "Acum. Mensual meses fijos"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Acum3
Case 8:     'Acum. Mensual meses variables
    nombre = "Acum. Mensual meses variables"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Acum4
Case 9:     'Novedad de otro concepto
    nombre = "Novedad de otro concepto"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Concep1
Case 10:    'Antiguedad del empleado
    nombre = "Antiguedad del empleado"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Anti0(antdia, antmes, antanio)
Case 11:    'Remuneración p/Ganancias
    nombre = "Remuneración p/Ganancias"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Remun0
Case 12:    'Prom. Asig. Familiares
    nombre = "Prom. Asig. Familiares"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Acum5
Case 13:    'Campo de la Base de Datos
    nombre = "Campo de la Base de Datos"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Campo0
Case 14:    'Prestamos
    nombre = "Prestamos"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Prestamos
Case 15:    'PreCalculo de parametros
    nombre = "PreCalculo de parametros"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Tcotpa0
Case 16:    'Conceptos Mese Fijos
    nombre = "Conceptos Mese Fijos"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Concep3
Case 17:    'no existe
    nombre = "no existe"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
Case 18:    'Calculo de Vacaciones
    nombre = "Calculo de Vacaciones"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Anti0(antdia, antmes, antanio)
Case 19:    'Calculo de indemnización
    nombre = "Calculo de indemnización"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Anti0(antdia, antmes, antanio)
Case 20:    'Cotización de Monedas
    nombre = "Cotización de Monedas"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Cotmon1
Case 21:    'Acumuladores Imponibles Mensuales
    nombre = "Acumuladores Imponibles Mensuales"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_ImponiblesMensuales
Case 22:    'Embargos
    nombre = "Embargos"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Embargos
Case 23:    'Descuentos de Mutuales y Sindicatos
    nombre = "Descuentos de Mutuales y Sindicatos"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    'Call bus_
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & " no implementada "
    End If
Case 24:    'Estructuras a una Fecha
    nombre = "Estructuras a una Fecha"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Estructura
Case 25:    'Antiguedad en la estructura
    nombre = "Antiguedad en la estructura"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_AntEstructura
Case 26:    'Zona de Domicilio
    nombre = "Zona de Domicilio"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_ZonaDom
Case 27:    'Pago / Descuento de Licencias
    nombre = "Pago / Descuento de Licencias"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_PagoDtoLic
Case 28:    'Novedades de GTI
    nombre = "Novedades de GTI"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_NovGTI
Case 29:    ' Imponibles del proceso
    nombre = "Acumuladores Imponibles del Proceso Actual"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_ImponiblesDelProceso
Case 30: 'Dias habiles del Mes
    nombre = "Calculo de dias habiles entre dos fechas"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_DiasHabiles
Case 31: 'Licencias
    nombre = "Licencias"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Licencias
Case 32: 'Vales
    nombre = "Vales"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Vales
Case 33: 'Valores Constantes
    nombre = "Valores Constantes"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Constantes
Case 34: 'Parametro de un Concepto
    nombre = "Parametro de un concepto"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_ParametroConcepto
Case 35: 'Remuneracion del Empleado
    nombre = "Remuneracion del Empleado"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_SueldoRemun
Case 36: 'Mes Liquidacion Actual
    nombre = "Mes Liquidacion Actual"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Sis_MesActual
Case 37: 'Año Liquidacion Actual
    nombre = "Año Liquidacion Actual"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Sis_AnioActual
Case 38: 'Semestre Liquidacion Actual
    nombre = "Semestre Liquidacion Actual"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Sis_SemestreActual
Case 39: 'Modelo de la Liquidacion Actual
    nombre = "Modelo de la Liquidacion Actual"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Sis_ModeloLiqActual
Case 40: 'Dias del mes
    nombre = "Cantidad de dias del mes"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Sis_Dias_Mes
Case 41: 'Dias Correspondientes de Vacaciones por escala
    nombre = "Dias Correspondientes de Vac"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_DiasVac
Case 42: 'Dias Correspondientes de Vacaciones
    nombre = "Dias Correspondientes de Vac por vacdiascor"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_DiasVac2
Case 43: 'Licencias sin Tope, es decir, por mes calendario
    nombre = "Licencias Mes Calendario"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_LicenciasMesCalendario
Case 44: 'Dias Mes Calendario en la estructura
    nombre = "Dias Mes Calendario en la estructura"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_DiasMesCalendario_enEstructura
Case 45: 'Asignaciones Familiares
    nombre = "Asignaciones Familiares"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_AsignacionesFliares
Case 46: 'Dias habiles Mes otra liquidacion
    nombre = "Calculo de dias habiles entre dos fechas correspondientes a meses anteriores o posteriores a la liq actual "
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_DiasHabilesMesLiquidacion
Case 47: 'Promedio de Vacaciones
    nombre = "Promedio de Vacaciones"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_PromedioVacaciones
Case 48: 'Licencias segun periodo GTI
    nombre = "Licencias segun periodo GTI"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_LicenciasPeriodoGTI
Case 49: 'Dias para SAC
    nombre = "Dias para SAC"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_DiasSAC
Case 50: 'Vacaciones no Gozadas
    nombre = "Vacaciones no Gozadas"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Vac_No_Gozadas(concnro, prog)
Case 51: 'Vacaciones no Gozadas Pendientes
    nombre = "Vacaciones no Gozadas Pendientes"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Vac_No_Gozadas_Pendientes(concnro, prog)
Case 52: 'Edad del Empleado
    nombre = "Edad del Empleado"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call Bus_Edad_Empleado
Case 53: 'SAC Proporcional
    nombre = "SAC Proporcional"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_DiasSAC_Proporcional
Case 54: 'Dias de Ingreso
    nombre = "Dias de Ingreso"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_DiasDeIngreso
Case 55: 'Base Licencias
    nombre = "Base Licencias"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_BaseLicencias
Case 56: 'Acumulador o concepto en otro Legajo
    nombre = "Acumulador o concepto en otro Legajo"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_ValorEnOtroLegajo
Case 57: 'Dias en Mes Segun Fase
    nombre = "Dias en Mes Segun Fase"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_DiasEnMesSegunFase
Case 58: 'Antiguedad segun acumulador
    nombre = "Antiguedad segun acumulador"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Antiguedad_Por_Acumulador
Case 59: 'Vacaciones no Gozadas a Pagar
    nombre = "Vacaciones no Gozadas a Pagar"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Vac_No_Gozadas_A_Pagar(concnro, prog)
Case 60: 'Horas a Justificar
    nombre = "Horas a Justificar"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Licencias_Horas_A_Justificar
Case 61: 'Feriados en Quincena
    nombre = "Feriados en Quincena"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Feriados_Quincena
Case 62: 'Dias Correspondientes de Vacaciones(Antiguedad a Fecha de alta)
    nombre = "Dias Correspondientes de Vacaciones(Antiguedad a Fecha de alta)"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_DiasVac_Antig2
Case 63: 'Mes de Fecha de pago del proceso de liq
    nombre = "Mes de Fecha de pago del proceso de liq"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_MesPagoProceso
Case 64: 'Dias habiles con Fases
    nombre = "Calculo de dias habiles entre dos fechas con fases"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_DiasHabiles_ConFases
Case 65: 'Partes Diario
    nombre = "Calculo de partes para un periodo"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Partes_Diarios
Case 66: 'BAE
    nombre = "Calculo de BAE para  un periodo"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_BAE
Case 67: 'Movilidad
    nombre = "Calculo de movilidad para un proceso"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Movilidad
Case 68: 'Busqueda de escala, tiene que hacer nada
    nombre = "Busqueda de escala"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    'reservada, se utiliza en una escala
Case 69: 'Cantidad de empleados en la estructura
    nombre = "Calculo de empleados en la estructura"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Cant_Empl_Estr
Case 70: 'Vacaciones Pendientes por Escala
    nombre = "Vacaciones Pendientes por Escala"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Vac_Pendientes_Escala(concnro, prog)
Case 71: 'Vacaciones Pendientes por Dias Correspondientes
    nombre = "Vacaciones Pendientes por Dias Correspondientes"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Vac_Pendientes_DiasCorr(concnro, prog)
Case 72: 'Refrigerios de TTI
    nombre = "Refrigerios"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Refrigerios
Case 73: 'Horas Feriados (Customizacion REDEPA)
    nombre = "Horas Feriados"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Horas_Feriados
Case 74: 'Ajuste de SAC retroactivo
    nombre = "Ajuste de SAC retroactivo"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_SAC_Retroactivo
Case 75: 'Dias Anuales para Vac
    nombre = "Dias Anuales para Vac"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_DiasAnualesVac
Case 76:    'Antiguedad del empleado (Glencore)
    nombre = "Antiguedad del empleado Glencore"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Anti_G(antdia, antmes, antanio)
Case 77:     'Acum. Mensual meses fijos. (Glencore)
    nombre = "Acum. Mensual meses fijos Glencore"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Acum3_G
Case 78: 'SAC Proporcional tope de 30 x mes
    nombre = "SAC Proporcional Tope 30 mensual"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_DiasSAC_Proporcional_Tope30
    'Call bus_DiasSAC_Proporcional_Tope30_Winsy
Case 79:     'Acum. Mensual meses Variables. (Glencore)
    nombre = "Acum. Mensual meses Variables Glencore"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Acum4_G
Case 80:     'Titulos
    nombre = "Busca los titulos del legajo"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Titulos
Case 81: 'Dias de Ingreso Contempla mes anterior
    nombre = "Dias de Ingreso Contempla mes anterior"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_DiasDeIngreso_ContemplaMesAnterior
Case 82: 'Licencias Integradas New
    nombre = "Licencias new"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Licencias_Integradas
Case 83: 'Dias Habiles Trabajados
    nombre = "Dias Habiles Trabajados"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_DiasHabiles_Trabajados
Case 84: 'Datos de Ganancias
    nombre = "Datos de Ganancias"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Datos_Ganancias
Case 85: 'Fecha en formato numerico
    nombre = "Fecha en formato numerico"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Fecha
Case 86: 'Acum. Mensual meses variables con Ajuste de aumentos
    nombre = "Acum. Mensual meses variables con Ajuste de aumentos"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Acum_Con_Ajuste
Case 87: 'Deduccion Fliares para IRPF
    nombre = "Deduccion Fliares para IRPF"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_DeduccionFliaresIRPF
Case 88: 'BPC para IRPF
    nombre = "BPC para IRPF"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_BPC_IRPF
Case 89: 'Licencias en otros periodos
    nombre = "Licencias en otros periodos"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Licencias_OtrosPer
Case 90: 'Licencias en otros periodos
    nombre = "Licencias en Horas"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_Licencias_Horas
Case 91: 'Impuesto Unico
    nombre = "Recalculo Impuesto Unico"
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de busqueda " & nombre
    End If
    Call bus_ImpuestoUnico
Case Else
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & " Tipo de busqueda desconocido " & tipoBus
    End If
End Select

val = Valor
OK = Bien

'' FGZ - para sacar estadisticas de las busquedas ejecutadas
'' Este codigo no va activo. es solo para testear
'Rastreo = True
'If Rastreo Then
'    If Borrar_Estadisticas Then
'        StrSql = "DELETE FROM tipobus_Ejecutadas"
'        objConn.Execute StrSql, , adExecuteNoRecords
'
'        Borrar_Estadisticas = False
'    End If
'
'    TpoFinalBus = GetTickCount
'    ' Inserto en TipoBusEjecutadas
'    StrSql = "INSERT INTO tipobus_Ejecutadas (" & _
'             "tipobusnro,nombre,concnro,prognro,exito,fechaej,tiempo_ej" & _
'             ") VALUES (" & tipoBus & _
'             ",'" & Left(nombre, 30) & _
'             "'," & Concnro & _
'             "," & prog & _
'             "," & CInt(ok) & _
'             "," & ConvFecha(Date) & _
'             "," & (TpoFinalBus - TpoInicialBus) & _
'             " )"
'    objConn.Execute StrSql, , adExecuteNoRecords
'End If

' SQL para ver los resultados
'SELECT     tipobusnro, COUNT(tipobusnro) AS Cantidad, SUM(tiempo_ej) AS Tiempo
'From tipobus_ejecutadas
'Where (tiempo_ej <> 0) And (exito = -1)
'GROUP BY tipobusnro
'ORDER BY tipobusnro

End Sub


' --------------------------------------------------------
' Procedimientos Específicos de las Busquedas
' --------------------------------------------------------


Public Sub bus_Concep0()
' ---------------------------------------------------------------------------------------------
' Descripcion: Concepto de liquidacion actual. gconcep0.p
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------

Dim NroConc As Long         'concepto.concnro
Dim Oblig As Boolean        ' Obligatorio retornar valor
Dim cant As Integer         ' 1 - Cantidad
                            ' 2 - Monto
                            
'Dim Param_cur As New ADODB.Recordset
Dim rs_Detliq As New ADODB.Recordset

    Bien = False
    Valor = 0

    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda "
    End If
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        NroConc = Arr_Programa(NroProg).Auxint2
        Oblig = CBool(Arr_Programa(NroProg).Auxlog1)
        cant = Arr_Programa(NroProg).Auxint1
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busqueda no encontrada " & NroProg
        End If
        Exit Sub
    End If

    ' FGZ - 09/02/2004
    'Busco en el cache de concepto del empleado
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Busco en el cache de concepto del empleado "
    End If
    
    If objCache_detliq_Monto.EsSimboloDefinido(CStr(NroConc)) Then
        If cant = 1 Then
            Valor = objCache_detliq_Cantidad.Valor(CStr(NroConc))
        Else
            Valor = objCache_detliq_Monto.Valor(CStr(NroConc))
        End If
        Bien = True
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "encontró en Cache con valor " & Valor
        End If
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No encontró en Cache "
        End If
        
        If CBool(Oblig) Then
            Bien = False
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Concepto " & NroConc & " no encontrado "
                Flog.writeline Espacios(Tabulador * 4) & "Retorna Falso porque es obligatorio "
            End If
        Else
            Valor = 0
            Bien = True
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Concepto " & NroConc & " no encontrado "
                Flog.writeline Espacios(Tabulador * 4) & "Retorna Verdadero y cero porque no es obligatorio "
            End If
        End If
    End If

'    StrSql = "SELECT dlicant, dlimonto FROM detliq " & _
'                 " WHERE cliqnro =" & buliq_cabliq!cliqnro & _
'                 " AND concnro =" & NroConc
'        OpenRecordset StrSql, rs_Detliq
'
'    If Not rs_Detliq.EOF Then
'        If cant = 1 Then
'            Valor = rs_Detliq!dlicant
'        Else
'            Valor = rs_Detliq!dlimonto
'        End If
'        Bien = True
'    Else
'        Bien = False
'    End If
            

' Cierro todo y libero
'If Param_cur.State = adStateOpen Then Param_cur.Close
If rs_Detliq.State = adStateOpen Then rs_Detliq.Close
'Set Param_cur = Nothing
Set rs_Detliq = Nothing

End Sub


Public Sub bus_Concep0_old()
' ---------------------------------------------------------------------------------------------
' Descripcion: Concepto de liquidacion actual. gconcep0.p
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------

Dim NroConc As Long         'concepto.concnro
Dim Oblig As Boolean        ' Obligatorio retornar valor
Dim cant As Integer         ' 1 - Cantidad
                            ' 2 - Monto
                            
'Dim Param_cur As New ADODB.Recordset
Dim rs_Detliq As New ADODB.Recordset

    Bien = False
    Valor = 0

    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        NroConc = Arr_Programa(NroProg).Auxint2
        Oblig = CBool(Arr_Programa(NroProg).Auxlog1)
        cant = Arr_Programa(NroProg).Auxint1
    Else
        Exit Sub
    End If

    StrSql = "SELECT dlicant, dlimonto FROM detliq " & _
                 " WHERE cliqnro =" & buliq_cabliq!cliqnro & _
                 " AND concnro =" & NroConc
        OpenRecordset StrSql, rs_Detliq
        
    If Not rs_Detliq.EOF Then
        If cant = 1 Then
            Valor = rs_Detliq!dlicant
        Else
            Valor = rs_Detliq!dlimonto
        End If
        Bien = True
    Else
        Bien = False
    End If
            

' Cierro todo y libero
'If Param_cur.State = adStateOpen Then Param_cur.Close
If rs_Detliq.State = adStateOpen Then rs_Detliq.Close
'Set Param_cur = Nothing
Set rs_Detliq = Nothing

End Sub

Public Sub bus_Concep3()
' ---------------------------------------------------------------------------------------------
' Descripcion: conceptos meses fijos. gconcep3.p
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim NroConc As Long         'concepto.concnro
Dim Oblig As Boolean        ' Obligatorio
Dim cant As Boolean         ' true - Cantidad
                            ' false - Monto
Dim Semestral As Integer    ' 1 - Semestral
                            ' 2 - Anual
                            ' 3 - Meses
Dim Meses As Integer
Dim Opcion As Long          ' 1 - Sumatoria
                            ' 2 - Maximo
                            ' 3 - Promedio
                            ' 4 - Promedio sin 0
                            ' 5 - Minimo

Dim Incluye As Integer      ' 0  - No Incluye
                            ' 1  - Proceso Actual
                            ' 2  - Periodo Actual con Proceso actual
                            ' 3  - Periodo Actual sin proceso actual
                            
Dim MesDeInicioSemestre As Integer 'Mes de Inicio (en caso de que sea Semestral)

Dim nro_desde As Long
Dim nro_hasta As Long
Dim Cant_per As Double
Dim CantMeses As Integer
Dim MesHasta As Integer
Dim AnioHasta As Integer
Dim MesDesde As Integer
Dim AnioDesde As Integer

Dim I As Integer
Dim pliqAnterior As Long

Dim UsaActual As Boolean
Dim PrimeraVes As Boolean
Dim aux As String

'Dim Param_cur As New ADODB.Recordset
'Dim rs_Detliq As New ADODB.Recordset
Dim rs_Periodos As New ADODB.Recordset
Dim Valor_Aux As Double

Bien = False
Valor = 0

    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda "
    End If
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        Meses = CInt(Arr_Programa(NroProg).Auxint1)
        NroConc = CLng(Arr_Programa(NroProg).Auxint2)
        Opcion = CInt(Arr_Programa(NroProg).Auxint3)
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Parametros cargados "
        End If
        Semestral = CInt(Arr_Programa(NroProg).Auxint4)
        Incluye = Arr_Programa(NroProg).Auxint5
        Oblig = CBool(Arr_Programa(NroProg).Auxlog1)
        cant = CBool(Arr_Programa(NroProg).Auxlog2)
        If Semestral = 1 Then
            MesDeInicioSemestre = Arr_Programa(NroProg).Auxchar1
        End If
        
        'FGZ - 21/10/2005
        If Not CLng(Arr_Programa(NroProg).Auxchar1) = 0 Then
            MesDeInicioSemestre = Arr_Programa(NroProg).Auxchar1
        Else
            If buliq_periodo!pliqmes > 6 Then
                MesDeInicioSemestre = 7 'segundo semestre
            Else
                MesDeInicioSemestre = 1 'primer semestre
            End If
        End If
        
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Parametros cargados "
        End If
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontró la Busqueda " & NroProg
        End If
        Exit Sub
    End If

    If CBool(USA_DEBUG) Then
        Select Case Semestral
        Case 1:
            aux = "semestral, Mes de inicio: " & MesDeInicioSemestre
        Case 2:
            aux = "Anual "
        Case 3:
            aux = " mensual (" & Meses & " meses) "
        End Select
        Flog.writeline Espacios(Tabulador * 4) & "Busqueda " & aux
        aux = ""
        Flog.writeline Espacios(Tabulador * 4) & "Concepto: " & NroConc
        
        Select Case Opcion
        Case 1:
            aux = "Sumatoria"
        Case 2:
            aux = "Maximo"
        Case 3:
            aux = "Promedio"
        Case 4:
            aux = "Promedio sin 0"
        Case 5:
            aux = "Minimo"
        End Select
        Flog.writeline Espacios(Tabulador * 4) & "Operacion: " & aux
        aux = ""
        
        Select Case Incluye
        Case 0:
            aux = "No Incluye el periodo actual ni proceso actual"
        Case 1:
            aux = "No Incluye el periodo actual pero si el proceso actual"
        Case 2:
            aux = "Incluye el periodo actual y proceso actual"
        Case 3:
            aux = "Incluye el periodo actual pero no el proceso actual"
        End Select
        Flog.writeline Espacios(Tabulador * 4) & aux
        aux = ""
        
        If Oblig Then
            aux = "Es Obligatorio retornar "
            If cant Then
                aux = aux & "cantidad "
            Else
                aux = aux & "Monto "
            End If
        Else
            aux = "No es Obligatorio retornar "
            If cant Then
                aux = aux & "cantidad "
            Else
                aux = aux & "Monto "
            End If
        End If
        Flog.writeline Espacios(Tabulador * 4) & aux
    End If

Select Case Semestral
Case 1: ' Semestral
    MesDesde = MesDeInicioSemestre
    AnioDesde = buliq_periodo!pliqanio
    Select Case Incluye
    Case 0: 'Semestre actual y No Incluye ni Proceso actual ni periodo actual
        If buliq_periodo!pliqmes > 6 Then
            If MesDeInicioSemestre > 6 Then
                Meses = (buliq_periodo!pliqmes - 7 - 1) + (MesDeInicioSemestre - 7)
            Else
                Meses = (buliq_periodo!pliqmes - 7 - 1)
            End If
            MesHasta = buliq_periodo!pliqmes - 1
            AnioHasta = buliq_periodo!pliqanio
        Else
            If Not MesDeInicioSemestre > 6 Then
                Meses = (buliq_periodo!pliqmes - 1 - 1) + (MesDeInicioSemestre - 1)
            Else
                Meses = (buliq_periodo!pliqmes - 1 - 1)
            End If
            MesHasta = buliq_periodo!pliqmes - 1
            AnioHasta = buliq_periodo!pliqanio
        End If
        UsaActual = False
    Case 1: 'Semestre actual y Incluye el proceso actual pero no el periodo actual
        If buliq_periodo!pliqmes > 6 Then
            If MesDeInicioSemestre > 6 Then
                Meses = (buliq_periodo!pliqmes - 7 - 1) + (MesDeInicioSemestre - 7)
            Else
                Meses = (buliq_periodo!pliqmes - 7 - 1)
            End If
            MesHasta = buliq_periodo!pliqmes - 1
            AnioHasta = buliq_periodo!pliqanio
        Else
            If Not MesDeInicioSemestre > 6 Then
                Meses = (buliq_periodo!pliqmes - 1 - 1) + (MesDeInicioSemestre - 1)
            Else
                Meses = (buliq_periodo!pliqmes - 1 - 1)
            End If
            MesHasta = buliq_periodo!pliqmes - 1
            AnioHasta = buliq_periodo!pliqanio
        End If
        UsaActual = True
    Case 2: 'Semestre actual y Incluye el Periodo actual y el proceso actual
        If buliq_periodo!pliqmes > 6 Then
            If MesDeInicioSemestre > 6 Then
                Meses = (buliq_periodo!pliqmes - 7) + (MesDeInicioSemestre - 7)
            Else
                Meses = (buliq_periodo!pliqmes - 7)
            End If
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
        Else
            If Not MesDeInicioSemestre > 6 Then
                Meses = (buliq_periodo!pliqmes - 1) + (MesDeInicioSemestre - 1)
            Else
                Meses = (buliq_periodo!pliqmes - 1)
            End If
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
        End If
        UsaActual = True
    Case 3: 'Semestre actual y Incluye el Periodo actual pero no el proceso actual
        If buliq_periodo!pliqmes > 6 Then
            If MesDeInicioSemestre > 6 Then
                Meses = (buliq_periodo!pliqmes - 7) + (MesDeInicioSemestre - 7)
            Else
                Meses = (buliq_periodo!pliqmes - 7)
            End If
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
        Else
            If Not MesDeInicioSemestre > 6 Then
                Meses = (buliq_periodo!pliqmes - 1) + (MesDeInicioSemestre - 1)
            Else
                Meses = (buliq_periodo!pliqmes - 1)
            End If
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
        End If
        UsaActual = False
        
    Case 4: 'Semestre anterior
        If buliq_periodo!pliqmes > 6 Then
            If MesDeInicioSemestre > 6 Then
                Meses = 5 + (MesDeInicioSemestre - 1)
            Else
                Meses = 5
            End If
            MesHasta = 6
            AnioHasta = buliq_periodo!pliqanio
        Else
            If Not MesDeInicioSemestre > 6 Then
                Meses = 7 + (MesDeInicioSemestre - 7)
            Else
                Meses = 7
            End If
            MesHasta = 12
            AnioHasta = buliq_periodo!pliqanio - 1
        End If
        UsaActual = False
    End Select
Case 2: ' Anual
    MesDesde = 1
    AnioDesde = buliq_periodo!pliqanio
    Select Case Incluye
    Case 0: 'Año actual y No Incluye ni Proceso actual ni periodo actual
            Meses = buliq_periodo!pliqmes - 1 - 1
            MesHasta = buliq_periodo!pliqmes - 1
            AnioHasta = buliq_periodo!pliqanio
            UsaActual = False
    Case 1: 'Año actual y Incluye el proceso actual pero no el periodo actual
            Meses = buliq_periodo!pliqmes - 1 - 1
            MesHasta = buliq_periodo!pliqmes - 1
            AnioHasta = buliq_periodo!pliqanio
            UsaActual = True
    Case 2: 'Año actual y Incluye el Periodo actual y el proceso actual
            Meses = buliq_periodo!pliqmes - 1
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
            UsaActual = True
    Case 3: 'Año actual y Incluye el Periodo actual pero no el proceso actual
            Meses = buliq_periodo!pliqmes - 1
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
            UsaActual = False
    Case 4: 'Año anterior
            Meses = 11
            MesHasta = 12
            AnioHasta = buliq_periodo!pliqanio - 1
            UsaActual = False
    End Select

Case 3:     ' Meses
'    nro_desde = buliq_periodo!pliqnro - 1
'    nro_hasta = buliq_periodo!pliqnro - 1   ' para tener un default
    
    Select Case Incluye
    Case 0: 'No Incluye ni Proceso actual ni periodo actual
        If buliq_periodo!pliqmes >= Meses Then
            MesDesde = buliq_periodo!pliqmes - Meses
            AnioDesde = buliq_periodo!pliqanio
            If MesDesde = 0 Then
                MesDesde = 12
                AnioDesde = buliq_periodo!pliqanio - 1
            End If
            MesHasta = buliq_periodo!pliqmes - 1
            AnioHasta = buliq_periodo!pliqanio
            If MesHasta = 0 Then
                MesHasta = 12
                AnioHasta = buliq_periodo!pliqanio - 1
            End If
        Else
            MesDesde = 12 + (buliq_periodo!pliqmes - Meses)
            MesHasta = buliq_periodo!pliqmes - 1
            AnioDesde = buliq_periodo!pliqanio - 1
            AnioHasta = buliq_periodo!pliqanio
            If MesHasta = 0 Then
                MesHasta = 12
                AnioHasta = buliq_periodo!pliqanio - 1
            End If
        End If
        UsaActual = False
    Case 1: 'Incluye el proceso actual pero no el periodo actual
        If buliq_periodo!pliqmes >= Meses Then
            MesDesde = buliq_periodo!pliqmes - Meses
            AnioDesde = buliq_periodo!pliqanio
            If MesDesde = 0 Then
                MesDesde = 12
                AnioDesde = buliq_periodo!pliqanio - 1
            End If
            MesHasta = buliq_periodo!pliqmes - 1
            AnioHasta = buliq_periodo!pliqanio
            If MesHasta = 0 Then
                MesHasta = 12
                AnioHasta = buliq_periodo!pliqanio - 1
            End If
        Else
            MesDesde = 12 + (buliq_periodo!pliqmes - Meses)
            MesHasta = buliq_periodo!pliqmes - 1
            AnioDesde = buliq_periodo!pliqanio - 1
            AnioHasta = buliq_periodo!pliqanio
            If MesHasta = 0 Then
                MesHasta = 12
                AnioHasta = buliq_periodo!pliqanio - 1
            End If
        End If
        UsaActual = True
    Case 2: 'Incluye el Periodo actual y el proceso actual
    
        If buliq_periodo!pliqmes >= Meses Then
            MesDesde = buliq_periodo!pliqmes - Meses + 1
            AnioDesde = buliq_periodo!pliqanio
            If MesDesde = 0 Then
                MesDesde = 12
                AnioDesde = buliq_periodo!pliqanio - 1
            End If
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
        Else
            MesDesde = 12 - (Meses - buliq_periodo!pliqmes) + 1
            AnioDesde = buliq_periodo!pliqanio - 1
            If MesDesde = 0 Then
                MesDesde = 12
                AnioDesde = buliq_periodo!pliqanio - 1
            End If
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
        End If
        UsaActual = False
      
        
    Case 3: 'Incluye el Periodo actual y no el proceso actual
        If buliq_periodo!pliqmes >= Meses Then
            MesDesde = buliq_periodo!pliqmes - Meses + 1
            AnioDesde = buliq_periodo!pliqanio
            If MesDesde = 0 Then
                MesDesde = 12
                AnioDesde = buliq_periodo!pliqanio - 1
            End If
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
        Else
            MesDesde = 12 - (Meses - buliq_periodo!pliqmes + 1)
            AnioDesde = buliq_periodo!pliqanio - 1
            If MesDesde = 0 Then
                MesDesde = 12
                AnioDesde = buliq_periodo!pliqanio - 1
            End If
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
        End If
        UsaActual = False
    Case 4: 'no disponible (no tiene sentido)
        If buliq_periodo!pliqmes >= Meses Then
            MesDesde = buliq_periodo!pliqmes - Meses
            AnioDesde = buliq_periodo!pliqanio
            If MesDesde = 0 Then
                MesDesde = 12
                AnioDesde = buliq_periodo!pliqanio - 1
            End If
            MesHasta = buliq_periodo!pliqmes - 1
            AnioHasta = buliq_periodo!pliqanio
        Else
            MesDesde = 12 - (buliq_periodo!pliqmes - Meses)
            MesHasta = buliq_periodo!pliqmes - 1
            AnioDesde = buliq_periodo!pliqanio - 1
            AnioHasta = buliq_periodo!pliqanio
        End If
        UsaActual = False
    End Select
End Select


If CBool(USA_DEBUG) Then
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 4) & "Busco todos los detliq "
    Flog.writeline Espacios(Tabulador * 4) & "Desde el mes  " & MesDesde & " del año " & AnioDesde
    Flog.writeline Espacios(Tabulador * 4) & "hasta el mes  " & MesHasta & " del año " & AnioHasta
End If

' Busco todos lod detliq entre los meses
StrSql = "SELECT * FROM periodo "
StrSql = StrSql & " INNER JOIN proceso ON periodo.pliqnro = proceso.pliqnro "
StrSql = StrSql & " INNER JOIN cabliq ON proceso.pronro = cabliq.pronro "
StrSql = StrSql & " INNER JOIN detliq ON cabliq.cliqnro = detliq.cliqnro "
StrSql = StrSql & " WHERE cabliq.empleado = " & NroEmple
StrSql = StrSql & " AND detliq.concnro = " & NroConc
StrSql = StrSql & " AND proceso.pronro <> " & buliq_proceso!pronro
If AnioDesde = AnioHasta Then
    If MesDesde = MesHasta Then
        StrSql = StrSql & " AND (" & MesDesde & " = periodo.pliqmes AND periodo.pliqanio = " & AnioDesde & ")"
    Else
        StrSql = StrSql & " AND (" & MesDesde & " <= periodo.pliqmes AND " & MesHasta & " >= periodo.pliqmes AND periodo.pliqanio = " & AnioDesde & " )"
    End If
Else
    StrSql = StrSql & " AND ( (" & MesDesde & " <= periodo.pliqmes AND periodo.pliqanio = " & AnioDesde & ")"
    StrSql = StrSql & " OR (periodo.pliqanio < " & AnioHasta & " AND periodo.pliqanio > " & AnioDesde & ")"
    StrSql = StrSql & " OR (periodo.pliqanio = " & AnioHasta & " AND periodo.pliqmes <= " & MesHasta & ") )"
End If
StrSql = StrSql & " ORDER by periodo.pliqnro"
OpenRecordset StrSql, rs_Periodos

Cant_per = 0
pliqAnterior = 0

If Opcion = 5 Then ' Minimo
    If Not rs_Periodos.EOF Then
        rs_Periodos.MoveFirst
        
        If cant Then
            Valor = rs_Periodos!dlicant
        Else
            Valor = rs_Periodos!dlimonto
        End If
        rs_Periodos.MoveNext
    End If
End If

Do While Not rs_Periodos.EOF
    Select Case Opcion
    Case 1:     'Sumatoria
        If cant Then
            Valor = Valor + rs_Periodos!dlicant
        Else
            Valor = Valor + rs_Periodos!dlimonto
        End If
    
    Case 2:     ' Maximo
        If cant Then
            If rs_Periodos!dlicant > Valor Then
                Valor = rs_Periodos!dlicant
            End If
        Else
            If rs_Periodos!dlimonto > Valor Then
                Valor = rs_Periodos!dlimonto
            End If
        End If
    
    Case 3:     ' Promedio
        ' Cuento la cantidad de periodos
        ' if first-of(periodo.pliqnro) tehn
        If pliqAnterior <> rs_Periodos!PliqNro Then
            pliqAnterior = rs_Periodos!PliqNro
            Cant_per = Cant_per + 1
        End If
        If cant Then
            Valor = Valor + rs_Periodos!dlicant
        Else
            Valor = Valor + rs_Periodos!dlimonto
        End If
        If Cant_per = 0 Then
            Valor = 0
        Else
            Valor = Valor / Cant_per
        End If
    Case 4:     ' Promedio si 0
        ' Cuento la cantidad de periodos
        ' if first-of(periodo.pliqnro) tehn
        If pliqAnterior <> rs_Periodos!PliqNro Then
            pliqAnterior = rs_Periodos!PliqNro
            
            If cant Then
                If rs_Periodos!dlicant <> 0 Then
                    Cant_per = Cant_per + 1
                End If
            Else
                If rs_Periodos!dlimonto <> 0 Then
                    Cant_per = Cant_per + 1
                End If
            End If
        End If
        If cant Then
            Valor = Valor + rs_Periodos!dlicant
        Else
            Valor = Valor + rs_Periodos!dlimonto
        End If
        
        If Cant_per = 0 Then
            Valor = 0
        Else
            Valor = Valor / Cant_per
        End If
    
    Case 5:     ' Minimo
        If cant Then
            If rs_Periodos!dlicant < Valor Then
                Valor = rs_Periodos!dlicant
            End If
        Else
            If rs_Periodos!dlimonto < Valor Then
                Valor = rs_Periodos!dlimonto
            End If
        End If
    
    Case Else
    End Select
    
    ' Siguiente registro
    rs_Periodos.MoveNext
Loop


' Si tiene en cuenta la liquidacion actual
If UsaActual Then
    If objCache_detliq_Monto.EsSimboloDefinido(CStr(NroConc)) Then
        If cant Then
            Valor_Aux = objCache_detliq_Cantidad.Valor(CStr(NroConc))
        Else
            Valor_Aux = objCache_detliq_Monto.Valor(CStr(NroConc))
        End If
    Else
        Valor_Aux = 0
    End If

    Select Case Opcion
    Case 1:     'Sumatoria
        Valor = Valor + Valor_Aux
    Case 2:     ' Maximo
        If Valor_Aux > Valor Then
            Valor = Valor_Aux
        End If
    Case 3: ' Promedio
        If PrimeraVes Then
            Cant_per = Cant_per + 1
            PrimeraVes = False
        End If
        Valor = Valor + Valor_Aux
        If Cant_per = 0 Then
            Valor = 0
        Else
            Valor = Valor / Cant_per
        End If
    Case 4: ' Promedio si 0
        If PrimeraVes Then
            PrimeraVes = False
            If Valor_Aux <> 0 Then
                Cant_per = Cant_per + 1
            End If
        End If
        Valor = Valor + Valor_Aux
        If Cant_per = 0 Then
            Valor = 0
        Else
            Valor = Valor / Cant_per
        End If
    Case 5:     ' Minimo
        If Valor_Aux < Valor Then
            Valor = Valor_Aux
        End If
    Case Else
    End Select
End If

'' Si tiene en cuenta la liquidacion actual
'If UsaActual Then
'    StrSql = "SELECT * FROM detliq " & _
'             " INNER JOIN cabliq ON cabliq.cliqnro = detliq.cliqnro " & _
'             " WHERE cabliq.empleado = " & NroEmple & _
'             " AND cabliq.cliqnro = " & buliq_cabliq!cliqnro & _
'             " AND detliq.concnro = " & NroConc & _
'             " ORDER by cabliq.cliqnro"
'    OpenRecordset StrSql, rs_Detliq
'
'
'PrimeraVes = True
'Do While Not rs_Detliq.EOF
'    Select Case Opcion
'    Case 1:     'Sumatoria
'        If cant Then
'            Valor = Valor + rs_Detliq!dlicant
'        Else
'            Valor = Valor + rs_Detliq!dlimonto
'        End If
'
'    Case 2:     ' Maximo
'        If cant Then
'            If rs_Detliq!dlicant > Valor Then
'                Valor = rs_Detliq!dlicant
'            End If
'        Else
'            If rs_Detliq!dlimonto > Valor Then
'                Valor = rs_Detliq!dlimonto
'            End If
'        End If
'
'    Case 3: ' Promedio
'        If PrimeraVes Then
'            Cant_per = Cant_per + 1
'            PrimeraVes = False
'        End If
'        If cant Then
'            Valor = Valor + rs_Detliq!dlicant
'        Else
'            Valor = Valor + rs_Detliq!dlimonto
'        End If
'        If Cant_per = 0 Then
'            Valor = 0
'        Else
'            Valor = Valor / Cant_per
'        End If
'    Case 4: ' Promedio si 0
'        If PrimeraVes Then
'            PrimeraVes = False
'
'            If cant Then
'                If rs_Detliq!dlicant <> 0 Then
'                    Cant_per = Cant_per + 1
'                End If
'            Else
'                If rs_Detliq!dlimonto <> 0 Then
'                    Cant_per = Cant_per + 1
'                End If
'            End If
'        End If
'        If cant Then
'            Valor = Valor + rs_Detliq!dlicant
'        Else
'            Valor = Valor + rs_Detliq!dlimonto
'        End If
'
'        If Cant_per = 0 Then
'            Valor = 0
'        Else
'            Valor = Valor / Cant_per
'        End If
'
'    Case 5:     ' Minimo
'        If cant Then
'            If rs_Detliq!dlicant < Valor Then
'                Valor = rs_Detliq!dlicant
'            End If
'        Else
'            If rs_Detliq!dlimonto < Valor Then
'                Valor = rs_Detliq!dlimonto
'            End If
'        End If
'
'    Case Else
'    End Select
'
'    ' Siguiente registro
'    rs_Detliq.MoveNext
'Loop
'End If

Bien = True

' Cierro todo y libero
'If Param_cur.State = adStateOpen Then Param_cur.Close
If rs_Periodos.State = adStateOpen Then rs_Periodos.Close
'If rs_Detliq.State = adStateOpen Then rs_Detliq.Close
'Set Param_cur = Nothing
Set rs_Periodos = Nothing
'Set rs_Detliq = Nothing

End Sub


Public Sub bus_Acum()
'Fc. S/ acumulador Procesos
Dim nroAcu As Long      ' Nro de Acumulador
Dim Meses As Integer    ' Ultimos X Mese
Dim cant As Boolean     ' True  - Cantidad
                        ' False - Monto
Dim Opcion As Long      ' 1 - Sumatoria
                        ' 2 - Maximo
                        ' 3 - Promedio
Dim tipo_mes As Boolean ' True  = Mes Anterior a la Licencia
                        ' False = Mes Anterior a la Liquidacion Actual

    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda "
    End If
    
    ' Obtener los parametros de la Busqueda
    If Arr_Programa(NroProg).Prognro <> 0 Then
        nroAcu = Arr_Programa(NroProg).Auxint1
        Meses = Arr_Programa(NroProg).Auxint2
        cant = CBool(Arr_Programa(NroProg).Auxlog2)
        Opcion = Arr_Programa(NroProg).Auxint3
        tipo_mes = CBool(Arr_Programa(NroProg).Auxlog1)
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busqueda no encontrada " & NroProg
        End If
        Exit Sub
    End If

If CBool(USA_DEBUG) Then
    Flog.writeline Espacios(Tabulador * 4) & "SEGUN CONDICION LLAMA A bus_acum1 o bus_acum2 "
End If

'SEGUN CONDICION LLAMA A bus_acum1 o bus_acum2
If tipo_mes Then
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Mes Anterior a la Licencia. Llama a bus_acum1 "
    End If
    Call bus_Acum1(nroAcu, Meses, cant)
Else
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Mes Anterior a la Liquidacion Actual. Llama a bus_acum1 "
    End If
    Call bus_Acum2(nroAcu, Meses, cant, Opcion, tipo_mes)
End If

' Cierro todo y libero
'If Param_cur.State = adStateOpen Then Param_cur.Close
'Set Param_cur = Nothing

End Sub

Public Sub bus_Acum0()
' ---------------------------------------------------------------------------------------------
' Descripcion: Concepto de liquidacion actual. gacum0.p
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------

Dim nroAcu As Long          ' acumulador.acunro
Dim Oblig As Boolean        ' Obligatorio retornar valor
Dim cant As Integer         ' 1 - Cantidad
                            ' 2 - Monto
'Dim Param_cur As New ADODB.Recordset
'Dim rs_AcuLiq As New ADODB.Recordset

    
    Bien = False
    Valor = 0

    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda " & NroProg
    End If

    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        nroAcu = Arr_Programa(NroProg).Auxint1
        Oblig = CBool(Arr_Programa(NroProg).Auxlog1)
        cant = Arr_Programa(NroProg).Auxint2
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busqueda no encontrada "
        End If
        Exit Sub
    End If

    'FGZ  - 09/02/204
    'desde ahora busco en el cache(si no está es que no se liquidó)
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Busco en el cache(si no está es que no se liquidó) "
    End If

    If objCache_Acu_Liq_Monto.EsSimboloDefinido(CStr(nroAcu)) Then
        If cant = 1 Then
            Valor = objCache_Acu_Liq_Cantidad.Valor(CStr(nroAcu))
        Else
            Valor = objCache_Acu_Liq_Monto.Valor(CStr(nroAcu))
        End If
        Bien = True
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Encontró en el cache con valor " & Valor
        End If
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No encontró en el cache"
        End If
    
        If Oblig Then
            Bien = False
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Acumulador " & nroAcu & " no encontrado y es obligatorio. Retorna Falso. "
            End If
        Else
            Bien = True
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Acumulador " & nroAcu & " no encontrado pero no es obligatorio. Retorna Verdadero. "
            End If
        End If
    End If

'    StrSql = "SELECT alcant, almonto FROM acu_liq " & _
'                 " WHERE cliqnro =" & buliq_cabliq!cliqnro & _
'                 " AND acunro =" & NroAcu
'        OpenRecordset StrSql, rs_AcuLiq
'
'    If Not rs_AcuLiq.EOF Then
'        If cant = 1 Then
'            Valor = rs_AcuLiq!alcant
'        Else
'            Valor = rs_AcuLiq!almonto
'        End If
'        Bien = True
'    Else
'        Bien = False
'    End If
            

' Cierro todo y libero
'If Param_cur.State = adStateOpen Then Param_cur.Close
'If rs_AcuLiq.State = adStateOpen Then rs_AcuLiq.Close
'Set Param_cur = Nothing
'Set rs_AcuLiq = Nothing

End Sub



Public Sub bus_Acum1(nroAcu As Long, Meses As Integer, cant As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Busca los acumuladores de la licencia con cantidad o monto. gacum1.p
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
                     
Dim nro_desde As Long
Dim nro_hasta As Long
Dim I As Integer
Dim Cant_per As Double
Dim fecinicio As Date

Dim rs_Emp_Lic As New ADODB.Recordset
Dim rs_Periodo As New ADODB.Recordset
Dim rs_Acu As New ADODB.Recordset
    
    Bien = False
    Valor = 0
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Controlo que la licencia este entre las fechas del periodo o "
        Flog.writeline Espacios(Tabulador * 4) & "que la licencia termine en el periodo o "
        Flog.writeline Espacios(Tabulador * 4) & "que la licencia empiece en el periodo o "
        Flog.writeline Espacios(Tabulador * 4) & "que la licencia empiece antes y no termine en el periodo"
    End If
  
    ' Controlar que la licencia este entre las fechas del periodo o
    ' que la licencia termine en el periodo o
    ' que la licencia empiece en el periodo o
    ' que la licencia empiece antes y no termine en el periodo
    StrSql = "SELECT * FROM emp_lic INNER JOIN tipdia ON emp_lic.tdnro = tipdia.tdnro " & _
             " WHERE empleado = " & NroEmple & _
             " AND elfechadesde <= " & ConvFecha(buliq_periodo!pliqhasta) & _
             " AND " & buliq_periodo!pliqdesde & "<= elfechahasta " & _
             " AND tipdia.tdconliq = " & NroConce & _
             " ORDER BY emp_lic.elfechadesde "
    OpenRecordset StrSql, rs_Emp_Lic
    
    If Not rs_Emp_Lic.EOF Then
        fecinicio = rs_Emp_Lic!elfechadesde
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Inicio de la licencia " & fecinicio
        End If
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontraron Licencias"
        End If
    End If

    If CStr(fecinicio) <> "0:00:00" Then
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busco el periodo Inicial al que pertenece la licencia"
        End If
        StrSql = "SELECT * FROM periodo WHERE periodo.pliqdesde <= " & ConvFecha(fecinicio) & _
                 " AND " & ConvFecha(fecinicio) & " <= periodo.pliqhasta"
        OpenRecordset StrSql, rs_Periodo
    
        If Not rs_Periodo.EOF Then
            nro_desde = rs_Periodo!PliqNro
            nro_hasta = rs_Periodo!PliqNro - 1
            Cant_per = 0
        Else
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "No se encontró el periodo"
            End If
            ' deberia setear lo valores que retorna
            Exit Sub
        End If
    Else
        ' deberia setear lo valores que retorna
        Exit Sub
    End If
    
    If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
    
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Busco el periodo Final segun la cantidad de Meses a Buscar"
    End If
    StrSql = "SELECT * FROM periodo WHERE pliqnro >= " & nro_desde - Meses & _
             " AND pliqnro <= " & nro_desde & _
             " ORDER BY pliqnro"
    OpenRecordset StrSql, rs_Periodo
    
    ' Seteo la cantidad de periodos encontrados
    Cant_per = rs_Periodo.RecordCount
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & Cant_per & " periodos encontrados"
        Flog.writeline Espacios(Tabulador * 4) & " Busco el acumulador " & nroAcu & " en esos periodos "
    End If
    
    StrSql = "SELECT acu_liq.alcant, acu_liq.almonto FROM periodo " & _
             " INNER JOIN proceso ON periodo.pliqnro = proceso.pliqnro " & _
             " INNER JOIN cabliq ON proceso.pronro = cabliq.pronro " & _
             " INNER JOIN acu_liq ON cabliq.cliqnro = acu_liq.cliqnro " & _
             " WHERE cabliq.empleado = " & NroEmple & "AND periodo.pliqnro >= " & nro_desde - Meses & _
             " AND periodo.pliqnro <= " & nro_desde & _
             " AND acu_liq.acunro = " & nroAcu & _
             " ORDER by periodo.pliqnro"
    OpenRecordset StrSql, rs_Acu
    
    If rs_Acu.EOF Then
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontro ninguna liquidacion con ese acumulador en esos periodos para este empleado " & NroEmple
        End If
    End If
    
    Do While Not rs_Acu.EOF
        If cant Then
            Valor = Valor + rs_Acu!alcant
        Else
            Valor = Valor + rs_Acu!almonto
        End If
    
        rs_Acu.MoveNext
    Loop
    
    Bien = True
    If Cant_per = 0 Then
        Valor = 0
    Else
        Valor = Valor / Cant_per
    End If
    
    If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
    If rs_Acu.State = adStateOpen Then rs_Acu.Close
    If rs_Emp_Lic.State = adStateOpen Then rs_Emp_Lic.Close
    
    Set rs_Periodo = Nothing
    Set rs_Acu = Nothing
    Set rs_Emp_Lic = Nothing
End Sub


Public Sub bus_Acum2(nroAcu As Long, Meses As Integer, cant As Boolean, Op As Long, tmes As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Busca los acumuladores de la licencia con cantidad o monto. gacum2.p
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------

                     
Dim nro_desde As Long
Dim nro_hasta As Long
Dim I As Integer
Dim Cant_per As Double

Dim rs_Periodo As New ADODB.Recordset
Dim rs_Acu As New ADODB.Recordset
    
    Bien = False
    
    If Op = 2 Then
        Valor = -1
    Else
        Valor = 0
    End If
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Busco el periodo anterior "
    End If
    
    ' Encontrar el periodo anterior
    StrSql = "SELECT * FROM periodo WHERE periodo.pliqnro = " & buliq_proceso!PliqNro
    OpenRecordset StrSql, rs_Periodo
    
    If Not rs_Periodo.EOF Then
        nro_desde = rs_Periodo!PliqNro - 1
        nro_hasta = rs_Periodo!PliqNro - 1
        Cant_per = 0
    Else
        ' deberia setear lo valores que retorna
        Bien = False
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontró el periodo anterior al periodo " & rs_Periodo!PliqNro
        End If
        Exit Sub
    End If
    
    If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
    
    StrSql = "SELECT * FROM periodo WHERE pliqnro >= " & nro_desde - Meses & _
             " AND pliqnro <= " & nro_desde & _
             " ORDER BY pliqnro"
    OpenRecordset StrSql, rs_Periodo
    
    If Not rs_Periodo.EOF Then
        rs_Periodo.MoveLast
        nro_hasta = rs_Periodo!PliqNro
    End If
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Cantidad de periodos encontrados " & rs_Periodo.RecordCount
        Flog.writeline Espacios(Tabulador * 4) & " Busco el acumulador " & nroAcu & " en esos periodos "
    End If
    
    ' Seteo la cantidad de periodos encontrados
    Cant_per = rs_Periodo.RecordCount
    
    StrSql = "SELECT acu_liq.alcant, acu_liq.almonto FROM periodo " & _
             " INNER JOIN proceso ON periodo.pliqnro = proceso.pliqnro " & _
             " INNER JOIN cabliq ON proceso.pronro = cabliq.pronro " & _
             " INNER JOIN acu_liq ON cabliq.cliqnro = acu_liq.cliqnro " & _
             " WHERE cabliq.empleado = " & NroEmple & "AND periodo.pliqnro >= " & nro_desde - Meses & _
             " AND periodo.pliqnro <= " & nro_desde & _
             " AND acu_liq.acunro = " & nroAcu & _
             " ORDER by periodo.pliqnro"
    OpenRecordset StrSql, rs_Acu
    
    If rs_Acu.EOF Then
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontro ninguna liquidacion con ese acumulador en esos periodos para este empleado " & NroEmple
        End If
    End If
    
    If CBool(USA_DEBUG) Then
        Select Case Op
        Case 1:
            Flog.writeline Espacios(Tabulador * 4) & "Operacion: Sumatoria"
        Case 2:
            Flog.writeline Espacios(Tabulador * 4) & "Operacion: Maximo"
        Case 3:
            Flog.writeline Espacios(Tabulador * 4) & "Operacion: Promedio"
        End Select
    End If
    
    Do While Not rs_Acu.EOF
        Select Case Op
        Case 1: ' Sumatoria
            If cant Then
                Valor = Valor + rs_Acu!alcant
            Else
                Valor = Valor + rs_Acu!almonto
            End If
    
        Case 2: ' Maximo
            If cant Then
                If Valor = -1 Then
                    Valor = rs_Acu!alcant
                Else
                    If Valor < rs_Acu!alcant Then
                        Valor = rs_Acu!alcant
                    End If
                End If
            Else
                If Valor = -1 Then
                    Valor = rs_Acu!almonto
                Else
                    If Valor < rs_Acu!almonto Then
                        Valor = rs_Acu!almonto
                    End If
                End If
            End If
            
        Case 3: 'Promedio
            If cant Then
                Valor = rs_Acu!alcant
            Else
                Valor = rs_Acu!almonto
            End If
                      
        Case Else ' no puede ser
        
        End Select
        rs_Acu.MoveNext
    Loop
    
    ' si es promedio ==> lo calculo, sino valor ya trae el valor a retornar
    If Op = 3 Then
        If Cant_per = 0 Then
            Valor = 0
        Else
            Valor = Valor / Cant_per
        End If
    End If
    Bien = True

' Cierro todo y libero
    If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
    If rs_Acu.State = adStateOpen Then rs_Acu.Close
    
    Set rs_Periodo = Nothing
    Set rs_Acu = Nothing
End Sub


Public Sub bus_Acum3()
' ---------------------------------------------------------------------------------------------
' Descripcion: Acum.Mens.Meses Fijos. gacum3.p
'              Obtencion del Acumulador  1 - Semestral    a) Liq Actual
'                                                         b) Liq. Anterior
'
'                                        2 - Anual        a) Liq Actual
'                                                         b) Liq. Anterior
' Autor      : FGZ
' Fecha      :
' Ultima Mod.: FGZ - 17/06/2006
' Descripcion:  si la busqueda no es a mes completo ==> Dividepor lo paso en cero para que se calcule en AM_Prom
' Ultima Mod.: FGZ - 19/06/2006
' Descripcion:  Anual, con periodo actual sin proces actual andaba mal
' Ultima Mod.: FGZ - 03/10/2006 - le puse este control porque aveces se pasaba de meses. Cuando el mes de inicio es fijo y no son ni Julio ni Enero
' Ultima Mod.: Martin Ferraro - 15/08/2007 - Estaba mal como calculaba la cantidad de meses para Anual, con periodo actual sin proces actual andaba mal
' ---------------------------------------------------------------------------------------------

Dim nroAcu As Long          ' Nro de Acumulador
Dim Incluye As Integer      ' 0  - No Incluye
                            ' 1  - Proceso Actual
                            ' 2  - Periodo Actual con Proceso actual
                            ' 3  - Periodo Actual sin proceso actual
                            ' 4  - Anterior
Dim Monto As Boolean        ' True  - MOnto
                            ' False - Cantidad
Dim Opcion As Long          ' 1 - Sumatoria
                            ' 2 - Maximo
                            ' 3 - Promedio
                            ' 4 - Promedio sin 0
                            ' 5 - Minimo
Dim Semestral As Boolean    ' True  = Semestral
                            ' False = Anual
Dim Con_Fases As Boolean    ' True  - Calculo con Fases
                            ' False - Calculo sin Fases
                            
Dim MesDeInicioSemestre As Integer 'Mes de Inicio (en caso de que sea Semestral)

Dim CantMeses As Integer
Dim MesHasta As Integer
Dim AnioHasta As Integer
Dim Cantidad As Double
Dim CantAnios As Integer
Dim BusquedaCompleta As Boolean
Dim DividePor As Integer
Dim UsaActual As Boolean
Dim UsaPeriodoActual As Boolean
Dim MesesFuera As Integer
Dim Aux_MesDesde As Integer
Dim rs_Fases As New ADODB.Recordset

    Bien = False
    Valor = 0
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda " & NroProg
    End If
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        nroAcu = Arr_Programa(NroProg).Auxint1
        Opcion = Arr_Programa(NroProg).Auxint2
        If Opcion = 3 Then
            If Not EsNulo(Arr_Programa(NroProg).Auxint4) Then
                BusquedaCompleta = IIf(Arr_Programa(NroProg).Auxint4 = 0, True, False)
            Else
                BusquedaCompleta = False
            End If
        End If
        Semestral = CBool(Arr_Programa(NroProg).Auxlog1)
        'Nuevo
        'If Semestral Then
            MesDeInicioSemestre = Arr_Programa(NroProg).Auxchar1
        'End If
        'FGZ - 26/07/2005
        If Not CLng(Arr_Programa(NroProg).Auxchar1) = 0 Then
            MesDeInicioSemestre = Arr_Programa(NroProg).Auxchar1
        Else
            If Semestral Then
                If buliq_periodo!pliqmes > 6 Then
                    MesDeInicioSemestre = 7 'segundo semestre
                Else
                    MesDeInicioSemestre = 1 'primer semestre
                End If
            Else
                MesDeInicioSemestre = 1 'primer semestre
            End If
        End If
        
        'Nuevo
        Incluye = Arr_Programa(NroProg).Auxint3
        Monto = CBool(Arr_Programa(NroProg).Auxlog3)
        Con_Fases = CBool(Arr_Programa(NroProg).Auxlog4)
        
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontró la Busqueda " & NroProg
        End If
        Exit Sub
    End If

'FGZ - 18/05/2006
'Calculo la cantidad de meses fuera del periodo
If Con_Fases Then
    Aux_MesDesde = MesDeInicioSemestre
    StrSql = "SELECT * FROM fases WHERE real = -1 AND empleado = " & buliq_empleado!ternro
    StrSql = StrSql & " ORDER BY altfec"
    OpenRecordset StrSql, rs_Fases
    If Not rs_Fases.EOF Then
        rs_Fases.MoveLast
        If rs_Fases!altfec > C_Date("01/" & MesDeInicioSemestre & "/" & buliq_periodo!pliqanio) Then
            Aux_MesDesde = Month(rs_Fases!altfec)
        End If
    End If
    MesesFuera = Aux_MesDesde - MesDeInicioSemestre
End If


If Semestral Then
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Semestral "
    End If
    Select Case Incluye
    Case 0: 'Semestre actual y no icluye ni periodo ni proceso
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Semestre actual y no icluye ni periodo ni proceso "
        End If
        If buliq_periodo!pliqmes > 6 Then
            If MesDeInicioSemestre <= buliq_periodo!pliqmes Then
                CantMeses = buliq_periodo!pliqmes - MesDeInicioSemestre
            Else
                CantMeses = buliq_periodo!pliqmes - 1
            End If
            MesHasta = buliq_periodo!pliqmes - 1
            AnioHasta = buliq_periodo!pliqanio
        Else
            If MesDeInicioSemestre <= buliq_periodo!pliqmes Then
                CantMeses = buliq_periodo!pliqmes - MesDeInicioSemestre
            Else
                CantMeses = buliq_periodo!pliqmes - 1
            End If
            MesHasta = buliq_periodo!pliqmes - 1
            AnioHasta = buliq_periodo!pliqanio
        End If
        If MesDeInicioSemestre >= 6 Then
            CantMeses = CantMeses + IIf(MesDeInicioSemestre > buliq_periodo!pliqmes, (12 - MesDeInicioSemestre) + 1, (6 - MesDeInicioSemestre) + 1)
        Else
            CantMeses = CantMeses + IIf(MesDeInicioSemestre > buliq_periodo!pliqmes, (6 - MesDeInicioSemestre) + 1, 0)
        End If
        If MesDeInicioSemestre = buliq_periodo!pliqmes Then
            CantMeses = 0
        End If
        'FGZ - 03/10/2006 - le puse este control poqrue aveces se pasaba de meses
        If Semestral And CantMeses > 6 And Not (MesDeInicioSemestre = 7 Or MesDeInicioSemestre = 1) Then
            CantMeses = 6
        End If
        UsaActual = False
        UsaPeriodoActual = False
    Case 1: 'Semestre actual y Incluye Proceso Actual y no el priodo
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Semestre actual y Incluye Proceso Actual y no el priodo "
        End If
        If buliq_periodo!pliqmes > 6 Then
            If MesDeInicioSemestre <= buliq_periodo!pliqmes Then
                CantMeses = buliq_periodo!pliqmes - MesDeInicioSemestre
            Else
                CantMeses = buliq_periodo!pliqmes - 1
            End If
            MesHasta = buliq_periodo!pliqmes - 1
            AnioHasta = buliq_periodo!pliqanio
        Else
            If MesDeInicioSemestre <= buliq_periodo!pliqmes Then
                CantMeses = buliq_periodo!pliqmes - MesDeInicioSemestre
            Else
                CantMeses = buliq_periodo!pliqmes - 1
            End If
            MesHasta = buliq_periodo!pliqmes - 1
            AnioHasta = buliq_periodo!pliqanio
        End If
        If MesDeInicioSemestre >= 6 Then
            CantMeses = CantMeses + IIf(MesDeInicioSemestre > buliq_periodo!pliqmes, (12 - MesDeInicioSemestre) + 1, 0)
        Else
            CantMeses = CantMeses + IIf(MesDeInicioSemestre > buliq_periodo!pliqmes, (6 - MesDeInicioSemestre) + 1, 0)
        End If
        If MesDeInicioSemestre = buliq_periodo!pliqmes Then
            CantMeses = 0
        End If
        UsaActual = True
        UsaPeriodoActual = False
    Case 2: 'Semestre actual y Incluye Periodo Actual con proceso actual
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Semestre actual y Incluye Periodo Actual con proceso actual "
        End If
        If buliq_periodo!pliqmes > 6 Then
            If MesDeInicioSemestre <= buliq_periodo!pliqmes Then
                CantMeses = buliq_periodo!pliqmes - MesDeInicioSemestre + 1
            Else
                CantMeses = buliq_periodo!pliqmes
            End If
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
        Else
            If MesDeInicioSemestre <= buliq_periodo!pliqmes Then
                CantMeses = buliq_periodo!pliqmes - MesDeInicioSemestre + 1
            Else
                CantMeses = buliq_periodo!pliqmes
            End If
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
        End If
        If MesDeInicioSemestre >= 6 Then
            CantMeses = CantMeses + IIf(MesDeInicioSemestre > buliq_periodo!pliqmes, (12 - MesDeInicioSemestre) + 1, 0)
        Else
            CantMeses = CantMeses + IIf(MesDeInicioSemestre > buliq_periodo!pliqmes, (6 - MesDeInicioSemestre) + 1, 0)
        End If
        If MesDeInicioSemestre = buliq_periodo!pliqmes Then
            CantMeses = 1
        End If
        UsaActual = True
        UsaPeriodoActual = True
    Case 3: 'Semestre actual y Incluye Periodo Actual sin Proceso Actual
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Semestre actual y Incluye Periodo Actual sin Proceso Actual "
        End If
        If buliq_periodo!pliqmes > 6 Then
            CantMeses = buliq_periodo!pliqmes - 6
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
        Else
            CantMeses = buliq_periodo!pliqmes
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
        End If
        If MesDeInicioSemestre >= 6 Then
            CantMeses = CantMeses + IIf(MesDeInicioSemestre > buliq_periodo!pliqmes, (12 - MesDeInicioSemestre) + 1, 0)
        Else
            CantMeses = CantMeses + IIf(MesDeInicioSemestre > buliq_periodo!pliqmes, (6 - MesDeInicioSemestre) + 1, 0)
        End If
        If MesDeInicioSemestre = buliq_periodo!pliqmes Then
            CantMeses = 1
        End If
        UsaActual = False
        UsaPeriodoActual = True
    Case 4: 'Semestre Anterior
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Semestre Anterior "
        End If
        If buliq_periodo!pliqmes > 6 Then
            CantMeses = 6
            MesHasta = MesDeInicioSemestre - 1
            AnioHasta = buliq_periodo!pliqanio
        Else
            CantMeses = 6
            MesHasta = MesDeInicioSemestre - 1
            AnioHasta = buliq_periodo!pliqanio - 1
        End If
'        If MesDeInicioSemestre >= 6 Then
'            CantMeses = CantMeses + IIf(MesDeInicioSemestre > buliq_periodo!pliqmes, (12 - MesDeInicioSemestre) + 1, 0)
'        Else
'            CantMeses = CantMeses + IIf(MesDeInicioSemestre > buliq_periodo!pliqmes, (6 - MesDeInicioSemestre) + 1, 0)
'        End If
        UsaActual = False
        UsaPeriodoActual = False
    End Select
    If Opcion = 3 And BusquedaCompleta Then
        DividePor = 6
    Else
'        If MesDeInicioSemestre >= 6 Then
'            DividePor = CantMeses
'        Else
'            DividePor = CantMeses
'        End If
        'FGZ - 17/06/2006
        If Con_Fases Then
            DividePor = CantMeses - MesesFuera
        Else
            DividePor = 0
        End If
    End If
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Divide Por " & DividePor
    End If
    
Else ' Anual
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Anual "
    End If
    Select Case Incluye
    Case 0: ' Año Actual y No incluye periodo ni proceso actual
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Año Actual y No incluye periodo ni proceso actual "
        End If
        If buliq_periodo!pliqmes > 6 Then
            If MesDeInicioSemestre > buliq_periodo!pliqmes Then
                CantMeses = buliq_periodo!pliqmes - 1
            Else
                CantMeses = buliq_periodo!pliqmes - 1 - 12
            End If
            MesHasta = buliq_periodo!pliqmes - 1
            AnioHasta = buliq_periodo!pliqanio
        Else
            If MesDeInicioSemestre > buliq_periodo!pliqmes Then
                CantMeses = buliq_periodo!pliqmes - 1
            Else
                CantMeses = buliq_periodo!pliqmes - 1 - 12
            End If
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
        End If
        If MesDeInicioSemestre >= 6 Then
            CantMeses = CantMeses + IIf(MesDeInicioSemestre >= buliq_periodo!pliqmes, (12 - MesDeInicioSemestre) + 1, (12 - MesDeInicioSemestre) + 1)
        Else
            CantMeses = CantMeses + IIf(MesDeInicioSemestre >= buliq_periodo!pliqmes, (12 - MesDeInicioSemestre), (12 - MesDeInicioSemestre) + 1)
        End If
        If MesDeInicioSemestre = buliq_periodo!pliqmes Then
            CantMeses = 0
        End If
        UsaActual = False
        UsaPeriodoActual = False
    Case 1: 'Año actual y Incluye Proceso Actual y no el periodo actual
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Año actual y Incluye Proceso Actual y no el periodo actual "
        End If
        If buliq_periodo!pliqmes >= 6 Then
            If MesDeInicioSemestre > buliq_periodo!pliqmes Then
                CantMeses = buliq_periodo!pliqmes - 1
            Else
                CantMeses = buliq_periodo!pliqmes - 1 - 12
            End If
            MesHasta = buliq_periodo!pliqmes - 1
            AnioHasta = buliq_periodo!pliqanio
        Else
            If MesDeInicioSemestre > buliq_periodo!pliqmes Then
                CantMeses = buliq_periodo!pliqmes - 1
            Else
                CantMeses = buliq_periodo!pliqmes - 1 - 12
            End If
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
        End If
        If MesDeInicioSemestre >= 6 Then
            CantMeses = CantMeses + IIf(MesDeInicioSemestre >= buliq_periodo!pliqmes, (12 - MesDeInicioSemestre) + 1, (12 - MesDeInicioSemestre) + 1)
        Else
            CantMeses = CantMeses + IIf(MesDeInicioSemestre >= buliq_periodo!pliqmes, (12 - MesDeInicioSemestre), (12 - MesDeInicioSemestre) + 1)
        End If
        If MesDeInicioSemestre = buliq_periodo!pliqmes Then
            CantMeses = 0
        End If
        UsaActual = True
        UsaPeriodoActual = False
    Case 2: 'Año actual y Incluye Periodo Actual con proceso actual
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Año actual y Incluye Periodo Actual con proceso actual "
        End If
        If buliq_periodo!pliqmes >= 6 Then
            If MesDeInicioSemestre > buliq_periodo!pliqmes Then
                CantMeses = buliq_periodo!pliqmes
            Else
                CantMeses = buliq_periodo!pliqmes - 12
            End If
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
        Else
            If MesDeInicioSemestre > buliq_periodo!pliqmes Then
                CantMeses = buliq_periodo!pliqmes
            Else
                CantMeses = buliq_periodo!pliqmes - 12
            End If
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
        End If
        If MesDeInicioSemestre >= 6 Then
            CantMeses = CantMeses + IIf(MesDeInicioSemestre >= buliq_periodo!pliqmes, (12 - MesDeInicioSemestre) + 1, (12 - MesDeInicioSemestre) + 1)
        Else
            'FGZ -19/05/2006
            CantMeses = CantMeses + IIf(MesDeInicioSemestre > buliq_periodo!pliqmes, (12 - MesDeInicioSemestre), (12 - MesDeInicioSemestre) + 1)
        End If
        If MesDeInicioSemestre = buliq_periodo!pliqmes Then
            CantMeses = 1
        End If
        UsaActual = True
        UsaPeriodoActual = True
    Case 3: 'Año actual y Incluye Periodo Actual sin proceso actual
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Año actual y Incluye Periodo Actual sin proceso actual "
        End If
'       -----------------------------------------------------------------------------
'        15/08/2007 - Martin Ferraro - Estaba mal como calculaba la cantidad de meses
'       -----------------------------------------------------------------------------
'        If buliq_periodo!pliqmes >= 6 Then
'            If MesDeInicioSemestre > buliq_periodo!pliqmes Then
'                CantMeses = buliq_periodo!pliqmes
'            Else
'                CantMeses = buliq_periodo!pliqmes - 12
'            End If
'            MesHasta = buliq_periodo!pliqmes
'            AnioHasta = buliq_periodo!pliqanio
'        Else
'            CantMeses = buliq_periodo!pliqmes
'            MesHasta = buliq_periodo!pliqmes
'            AnioHasta = buliq_periodo!pliqanio
'        End If
'        If MesDeInicioSemestre >= 6 Then
'            CantMeses = CantMeses + IIf(MesDeInicioSemestre >= buliq_periodo!pliqmes, (12 - MesDeInicioSemestre) + 1, (12 - MesDeInicioSemestre) + 1)
'        Else
'            'CantMeses = CantMeses + IIf(MesDeInicioSemestre > buliq_periodo!pliqmes, (12 - MesDeInicioSemestre) + 1, (12 - MesDeInicioSemestre) + 1)
'            'FGZ - 19/05/2006
'            CantMeses = CantMeses + IIf(MesDeInicioSemestre > buliq_periodo!pliqmes, (12 - MesDeInicioSemestre) + 1, 0)
'        End If
'        If MesDeInicioSemestre = buliq_periodo!pliqmes Then
'            CantMeses = 1
'        End If
'        UsaActual = False
'        UsaPeriodoActual = True
        
        If MesDeInicioSemestre > buliq_periodo!pliqmes Then
            CantMeses = 0
        Else
            'Menor o igual
            CantMeses = (buliq_periodo!pliqmes - MesDeInicioSemestre) + 1
        End If
        UsaActual = False
        UsaPeriodoActual = True
        MesHasta = buliq_periodo!pliqmes
        AnioHasta = buliq_periodo!pliqanio
        
        
    Case 4: 'Año Anterior
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Año anterior "
        End If
        CantMeses = 12
        If MesDeInicioSemestre = 1 Then
            MesHasta = 12
        Else
            MesHasta = MesDeInicioSemestre - 1
        End If
        AnioHasta = buliq_periodo!pliqanio - 1
        UsaActual = False
        UsaPeriodoActual = False
    End Select
    If Opcion = 3 And BusquedaCompleta Then
        DividePor = 12
    Else
'        If MesDeInicioSemestre > 6 Then
'            DividePor = CantMeses
'        Else
'            DividePor = CantMeses
'        End If
        'FGZ - 17/06/2006
        If Con_Fases Then
            DividePor = CantMeses - MesesFuera
        Else
            DividePor = 0
        End If
    End If
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Divide Por " & DividePor
    End If
End If


Select Case Opcion
Case 1: 'Sumatoria
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Sumatoria "
    End If
    Call AM_Sum(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, UsaPeriodoActual)
Case 2: 'Maximo
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Maximo (NroAcu =" & nroAcu & ", MesHasta=" & MesHasta & ", AnioHasta=" & AnioHasta & ", CantMeses =" & CantMeses & ", CantAnios=" & CantAnios & ", Con_Fases=" & Con_Fases & ", Valor=" & Valor & ", Cantidad=" & Cantidad & ", False, UsaActual=" & UsaActual & ", UsaPeriodoActual=" & UsaPeriodoActual & " )"
    End If
    Call AM_Max(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, UsaPeriodoActual)
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Maximo terminado"
    End If
Case 3: 'Promedio
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Promedio "
    End If

    Call AM_Prom(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, DividePor, UsaPeriodoActual)
Case 4: 'Promedio sin cero
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Promedio sin cero "
    End If

    Call AM_PromSin0(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, UsaPeriodoActual)
Case 5: 'Minimo
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Minimo "
    End If

    Call AM_Min(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, UsaPeriodoActual)
Case Else
End Select


Bien = True
If Not Monto Then
    Valor = Cantidad
End If

' Cierro todo y libero
'If Param_cur.State = adStateOpen Then Param_cur.Close
'Set Param_cur = Nothing
If rs_Fases.State = adStateOpen Then rs_Fases.Close
Set rs_Fases = Nothing
End Sub


Public Sub bus_Acum3_oldnew()
' ---------------------------------------------------------------------------------------------
' Descripcion: Acum.Mens.Meses Fijos. gacum3.p
'              Obtencion del Acumulador  1 - Semestral    a) Liq Actual
'                                                         b) Liq. Anterior
'
'                                        2 - Anual        a) Liq Actual
'                                                         b) Liq. Anterior
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------

Dim nroAcu As Long          ' Nro de Acumulador
Dim Incluye As Integer      ' 0  - No Incluye
                            ' 1  - Proceso Actual
                            ' 2  - Periodo Actual con Proceso actual
                            ' 3  - Periodo Actual sin proceso actual
                            ' 4  - Anterior
Dim Monto As Boolean        ' True  - MOnto
                            ' False - Cantidad
Dim Opcion As Long          ' 1 - Sumatoria
                            ' 2 - Maximo
                            ' 3 - Promedio
                            ' 4 - Promedio sin 0
                            ' 5 - Minimo
Dim Semestral As Boolean    ' True  = Semestral
                            ' False = Anual
Dim Con_Fases As Boolean    ' True  - Calculo con Fases
                            ' False - Calculo sin Fases
                            
Dim MesDeInicioSemestre As Integer 'Mes de Inicio (en caso de que sea Semestral)

Dim CantMeses As Integer
Dim MesHasta As Integer
Dim AnioHasta As Integer
Dim Cantidad As Double
Dim CantAnios As Integer
Dim BusquedaCompleta As Boolean
Dim DividePor As Integer
Dim UsaActual As Boolean
Dim UsaPeriodoActual As Boolean
    
    Bien = False
    Valor = 0
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda " & NroProg
    End If
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        nroAcu = Arr_Programa(NroProg).Auxint1
        Opcion = Arr_Programa(NroProg).Auxint2
        If Opcion = 3 Then
            If Not EsNulo(Arr_Programa(NroProg).Auxint4) Then
                BusquedaCompleta = IIf(Arr_Programa(NroProg).Auxint4 = 0, True, False)
            Else
                BusquedaCompleta = False
            End If
        End If
        Semestral = CBool(Arr_Programa(NroProg).Auxlog1)
        'Nuevo
        'If Semestral Then
            MesDeInicioSemestre = Arr_Programa(NroProg).Auxchar1
        'End If
        'Nuevo
        Incluye = Arr_Programa(NroProg).Auxint3
        Monto = CBool(Arr_Programa(NroProg).Auxlog3)
        Con_Fases = CBool(Arr_Programa(NroProg).Auxlog4)
        
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontró la Busqueda " & NroProg
        End If
        Exit Sub
    End If


If Semestral Then
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Semestral "
    End If
    Select Case Incluye
    Case 0: 'Semestre actual y no icluye ni periodo ni proceso
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Semestre actual y no icluye ni periodo ni proceso "
        End If
        If buliq_periodo!pliqmes > 6 Then
            If MesDeInicioSemestre >= 6 Then
                CantMeses = (buliq_periodo!pliqmes - 7) - (MesDeInicioSemestre - 7)
            Else
                CantMeses = (buliq_periodo!pliqmes - 7 - 1)
            End If
            MesHasta = buliq_periodo!pliqmes - 1
            AnioHasta = buliq_periodo!pliqanio
        Else
            If Not MesDeInicioSemestre > 6 Then
                CantMeses = (buliq_periodo!pliqmes - 1) - (MesDeInicioSemestre - 1)
            Else
                CantMeses = (buliq_periodo!pliqmes - 1 - 1)
            End If
            MesHasta = buliq_periodo!pliqmes - 1
            AnioHasta = buliq_periodo!pliqanio
        End If
'        If buliq_periodo!pliqmes > 6 Then
'            CantMeses = buliq_periodo!pliqmes - 7
'            MesHasta = buliq_periodo!pliqmes - 1
'            AnioHasta = buliq_periodo!pliqanio
'        Else
'            CantMeses = buliq_periodo!pliqmes - 1
'            MesHasta = buliq_periodo!pliqmes - 1
'            AnioHasta = buliq_periodo!pliqanio
'        End If
        UsaActual = False
        UsaPeriodoActual = False
    Case 1: 'Semestre actual y Incluye Proceso Actual y no el priodo
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Semestre actual y Incluye Proceso Actual y no el priodo "
        End If
        If buliq_periodo!pliqmes > 6 Then
            If MesDeInicioSemestre >= 6 Then
                CantMeses = (buliq_periodo!pliqmes - 7) - (MesDeInicioSemestre - 7)
            Else
                CantMeses = (buliq_periodo!pliqmes - 7 - 1)
            End If
            MesHasta = buliq_periodo!pliqmes - 1
            AnioHasta = buliq_periodo!pliqanio
        Else
            If Not MesDeInicioSemestre >= 6 Then
                CantMeses = (buliq_periodo!pliqmes - 1) - (MesDeInicioSemestre - 1)
            Else
                CantMeses = (buliq_periodo!pliqmes - 1) + (12 - MesDeInicioSemestre) + 1
            End If
            MesHasta = buliq_periodo!pliqmes - 1
            AnioHasta = buliq_periodo!pliqanio
        End If
'        If buliq_periodo!pliqmes > 6 Then
'            CantMeses = buliq_periodo!pliqmes - 7
'            MesHasta = buliq_periodo!pliqmes - 1
'            AnioHasta = buliq_periodo!pliqanio
'        Else
'            CantMeses = buliq_periodo!pliqmes - 1
'            MesHasta = buliq_periodo!pliqmes - 1
'            AnioHasta = buliq_periodo!pliqanio
'        End If
        UsaActual = True
        UsaPeriodoActual = False
    Case 2: 'Semestre actual y Incluye Periodo Actual con proceso actual
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Semestre actual y Incluye Periodo Actual con proceso actual "
        End If
        If buliq_periodo!pliqmes > 6 Then
            If MesDeInicioSemestre >= 6 Then
                CantMeses = (buliq_periodo!pliqmes - 6) - (MesDeInicioSemestre - 7)
            Else
                CantMeses = (buliq_periodo!pliqmes - 7)
            End If
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
        Else
            If Not MesDeInicioSemestre >= 6 Then
                CantMeses = (buliq_periodo!pliqmes) - (MesDeInicioSemestre - 1)
            Else
                CantMeses = (buliq_periodo!pliqmes - 1)
            End If
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
        End If
'        If buliq_periodo!pliqmes > 6 Then
'            CantMeses = buliq_periodo!pliqmes - 6
'            MesHasta = buliq_periodo!pliqmes
'            AnioHasta = buliq_periodo!pliqanio
'        Else
'            CantMeses = buliq_periodo!pliqmes
'            MesHasta = buliq_periodo!pliqmes
'            AnioHasta = buliq_periodo!pliqanio
'        End If
        UsaActual = True
        UsaPeriodoActual = True
    Case 3: 'Semestre actual y Incluye Periodo Actual sin Proceso Actual
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Semestre actual y Incluye Periodo Actual sin Proceso Actual "
        End If
        If buliq_periodo!pliqmes > 6 Then
            If MesDeInicioSemestre >= 6 Then
                CantMeses = (buliq_periodo!pliqmes - 6) - (MesDeInicioSemestre - 7)
            Else
                CantMeses = (buliq_periodo!pliqmes - 7)
            End If
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
        Else
            If Not MesDeInicioSemestre >= 6 Then
                CantMeses = (buliq_periodo!pliqmes) - (MesDeInicioSemestre - 1)
            Else
                CantMeses = (buliq_periodo!pliqmes - 1)
            End If
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
        End If
'        If buliq_periodo!pliqmes > 6 Then
'            CantMeses = buliq_periodo!pliqmes - 6
'            MesHasta = buliq_periodo!pliqmes
'            AnioHasta = buliq_periodo!pliqanio
'        Else
'            CantMeses = buliq_periodo!pliqmes
'            MesHasta = buliq_periodo!pliqmes
'            AnioHasta = buliq_periodo!pliqanio
'        End If
        UsaActual = False
        UsaPeriodoActual = True
    Case 4: 'Semestre Anterior
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Semestre Anterior "
        End If
        If buliq_periodo!pliqmes > 6 Then
            'Segundo semestre
            If MesDeInicioSemestre >= 6 Then
                CantMeses = 6
                MesHasta = MesDeInicioSemestre - 7
                AnioHasta = buliq_periodo!pliqanio
            Else
                CantMeses = 6
                MesHasta = 6 + CantMeses - 1
                AnioHasta = buliq_periodo!pliqanio - 1
            End If
        Else
            'Primer semestre
            If Not MesDeInicioSemestre >= 6 Then
                CantMeses = 6
                MesHasta = MesDeInicioSemestre + CantMeses
                AnioHasta = buliq_periodo!pliqanio - 1
            Else
                CantMeses = 6
                MesHasta = MesDeInicioSemestre - 7
                AnioHasta = buliq_periodo!pliqanio
            End If
        End If
'        If buliq_periodo!pliqmes > 6 Then
'            CantMeses = 6
'            MesHasta = 6
'            AnioHasta = buliq_periodo!pliqanio
'        Else
'            CantMeses = 6
'            MesHasta = 12
'            AnioHasta = buliq_periodo!pliqanio - 1
'        End If
        UsaActual = False
        UsaPeriodoActual = False
    End Select
    If Opcion = 3 And BusquedaCompleta Then
        DividePor = 6
    Else
        If MesDeInicioSemestre >= 6 Then
            DividePor = CantMeses
        Else
            DividePor = CantMeses
        End If
    End If
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Divide Por " & DividePor
    End If
    
Else ' Anual
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Anual "
    End If
    Select Case Incluye
    Case 0: ' Año Actual y No incluye periodo ni proceso actual
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Año Actual y No incluye periodo ni proceso actual "
        End If
'        CantMeses = buliq_periodo!pliqmes - 1 - 1
'        MesHasta = buliq_periodo!pliqmes - 1
'        AnioHasta = buliq_periodo!pliqanio

        If buliq_periodo!pliqmes > 6 Then
            'If MesDeInicioSemestre >= 6 Then
            If MesDeInicioSemestre >= buliq_periodo!pliqmes Then
                'CantMeses = (buliq_periodo!pliqmes - 13) - (MesDeInicioSemestre - 13)
                CantMeses = 12 - MesDeInicioSemestre + buliq_periodo!pliqmes
            Else
                CantMeses = buliq_periodo!pliqmes - MesDeInicioSemestre
                'CantMeses = (buliq_periodo!pliqmes - 13 - 1)
            End If
            MesHasta = buliq_periodo!pliqmes - 1
            AnioHasta = buliq_periodo!pliqanio
        Else
            If Not MesDeInicioSemestre > 6 Then
                CantMeses = 12 - MesDeInicioSemestre + buliq_periodo!pliqmes
            Else
                CantMeses = 12 - MesDeInicioSemestre + buliq_periodo!pliqmes
            End If
            MesHasta = buliq_periodo!pliqmes - 1
            AnioHasta = buliq_periodo!pliqanio
        End If

        UsaActual = False
        UsaPeriodoActual = False
    Case 1: 'Año actual y Incluye Proceso Actual y no el periodo actual
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Año actual y Incluye Proceso Actual y no el periodo actual "
        End If
'        CantMeses = buliq_periodo!pliqmes - 1
'        MesHasta = buliq_periodo!pliqmes - 1
'        AnioHasta = buliq_periodo!pliqanio
        If buliq_periodo!pliqmes > 6 Then
            If MesDeInicioSemestre >= 6 Then
                CantMeses = buliq_periodo!pliqmes - MesDeInicioSemestre
            Else
                CantMeses = buliq_periodo!pliqmes - MesDeInicioSemestre
            End If
            MesHasta = buliq_periodo!pliqmes - 1
            AnioHasta = buliq_periodo!pliqanio
        Else
            If MesDeInicioSemestre > 6 Then
                CantMeses = 12 - buliq_periodo!pliqmes - (12 - MesDeInicioSemestre + 2)
            Else
                CantMeses = 12 - buliq_periodo!pliqmes - (MesDeInicioSemestre + 2)
            End If
            MesHasta = buliq_periodo!pliqmes - 1
            AnioHasta = buliq_periodo!pliqanio
        End If
        
        UsaActual = True
        UsaPeriodoActual = False
    Case 2: 'Año actual y Incluye Periodo Actual con proceso actual
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Año actual y Incluye Periodo Actual con proceso actual "
        End If
'        CantMeses = buliq_periodo!pliqmes
'        MesHasta = buliq_periodo!pliqmes
'        AnioHasta = buliq_periodo!pliqanio

        If buliq_periodo!pliqmes > 6 Then
            If MesDeInicioSemestre >= 6 Then
                CantMeses = buliq_periodo!pliqmes - MesDeInicioSemestre + 1
            Else
                CantMeses = buliq_periodo!pliqmes - MesDeInicioSemestre + 1
            End If
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
        Else
            If MesDeInicioSemestre >= 6 Then
                CantMeses = 12 - buliq_periodo!pliqmes - (12 - MesDeInicioSemestre + 1)
            Else
                CantMeses = 12 - buliq_periodo!pliqmes - (MesDeInicioSemestre + 1)
            End If
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
        End If
        
        UsaActual = True
        UsaPeriodoActual = True
    Case 3: 'Año actual y Incluye Periodo Actual sin proceso actual
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Año actual y Incluye Periodo Actual sin proceso actual "
        End If
'        CantMeses = buliq_periodo!pliqmes
'        MesHasta = buliq_periodo!pliqmes
'        AnioHasta = buliq_periodo!pliqanio
        If buliq_periodo!pliqmes > 6 Then
            If MesDeInicioSemestre >= 6 Then
                CantMeses = buliq_periodo!pliqmes - MesDeInicioSemestre + 1
            Else
                CantMeses = buliq_periodo!pliqmes - MesDeInicioSemestre + 1
            End If
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
        Else
            If Not MesDeInicioSemestre >= 6 Then
                CantMeses = (buliq_periodo!pliqmes) - (MesDeInicioSemestre - 1)
            Else
                CantMeses = (buliq_periodo!pliqmes - 1)
            End If
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
        End If
        UsaActual = False
        UsaPeriodoActual = True
    Case 4: 'Año Anterior
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Año anterior "
        End If
        CantMeses = 12 - (MesDeInicioSemestre - 1)
'        If MesDeInicioSemestre > 6 Then
'            MesHasta = 12 - (12 - MesDeInicioSemestre + 1)
'            AnioHasta = buliq_periodo!pliqanio
'        Else
'            MesHasta = 12 - (12 - MesDeInicioSemestre) - 1
'            If MesDeInicioSemestre <= 2 Then
'                AnioHasta = buliq_periodo!pliqanio - 1
'            Else
'                AnioHasta = buliq_periodo!pliqanio - 1
'            End If
'        End If
        MesHasta = 12
        AnioHasta = buliq_periodo!pliqanio - 1
        UsaActual = False
        UsaPeriodoActual = False
    End Select
    If Opcion = 3 And BusquedaCompleta Then
        DividePor = 12
    Else
        If MesDeInicioSemestre > 6 Then
            DividePor = CantMeses
        Else
            DividePor = CantMeses
        End If
    End If
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Divide Por " & DividePor
    End If
End If


Select Case Opcion
Case 1: 'Sumatoria
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Sumatoria "
    End If
    Call AM_Sum(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, UsaPeriodoActual)
Case 2: 'Maximo
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Maximo (NroAcu =" & nroAcu & ", MesHasta=" & MesHasta & ", AnioHasta=" & AnioHasta & ", CantMeses =" & CantMeses & ", CantAnios=" & CantAnios & ", Con_Fases=" & Con_Fases & ", Valor=" & Valor & ", Cantidad=" & Cantidad & ", False, UsaActual=" & UsaActual & ", UsaPeriodoActual=" & UsaPeriodoActual & " )"
    End If
    Call AM_Max(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, UsaPeriodoActual)
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Maximo terminado"
    End If
Case 3: 'Promedio
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Promedio "
    End If

    Call AM_Prom(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, DividePor, UsaPeriodoActual)
Case 4: 'Promedio sin cero
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Promedio sin cero "
    End If

    Call AM_PromSin0(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, UsaPeriodoActual)
Case 5: 'Minimo
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Minimo "
    End If

    Call AM_Min(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, UsaPeriodoActual)
Case Else
End Select


Bien = True
If Not Monto Then
    Valor = Cantidad
End If

' Cierro todo y libero
'If Param_cur.State = adStateOpen Then Param_cur.Close
'Set Param_cur = Nothing

End Sub

Public Sub bus_Acum3_old()
' ---------------------------------------------------------------------------------------------
' Descripcion: Acum.Mens.Meses Fijos. gacum3.p
'              Obtencion del Acumulador  1 - Semestral    a) Liq Actual
'                                                         b) Liq. Anterior
'
'                                        2 - Anual        a) Liq Actual
'                                                         b) Liq. Anterior
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------

Dim nroAcu As Long          ' Nro de Acumulador
Dim Incluye As Integer      ' 0  - No Incluye
                            ' 1  - Proceso Actual
                            ' 2  - Periodo Actual con Proceso actual
                            ' 3  - Periodo Actual sin proceso actual
                            ' 4  - Anterior
Dim Monto As Boolean        ' True  - MOnto
                            ' False - Cantidad
Dim Opcion As Long          ' 1 - Sumatoria
                            ' 2 - Maximo
                            ' 3 - Promedio
                            ' 4 - Promedio sin 0
                            ' 5 - Minimo
Dim Semestral As Boolean    ' True  = Semestral
                            ' False = Anual
Dim Con_Fases As Boolean    ' True  - Calculo con Fases
                            ' False - Calculo sin Fases
                            
Dim CantMeses As Integer
Dim MesHasta As Integer
Dim AnioHasta As Integer
Dim Cantidad As Double
Dim CantAnios As Integer
Dim BusquedaCompleta As Boolean
Dim DividePor As Integer
Dim UsaActual As Boolean
Dim UsaPeriodoActual As Boolean
'Dim Param_cur As New ADODB.Recordset
    
    
    Bien = False
    Valor = 0
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda " & NroProg
    End If
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        nroAcu = Arr_Programa(NroProg).Auxint1
        Opcion = Arr_Programa(NroProg).Auxint2
        If Opcion = 3 Then
            If Not EsNulo(Arr_Programa(NroProg).Auxint4) Then
                BusquedaCompleta = IIf(Arr_Programa(NroProg).Auxint4 = 0, True, False)
            Else
                BusquedaCompleta = False
            End If
        End If
        Semestral = CBool(Arr_Programa(NroProg).Auxlog1)
        Incluye = Arr_Programa(NroProg).Auxint3
        'Actual = CBool(Arr_Programa(nroprog).auxlog2)
        Monto = CBool(Arr_Programa(NroProg).Auxlog3)
        Con_Fases = CBool(Arr_Programa(NroProg).Auxlog4)
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontró la Busqueda " & NroProg
        End If
        Exit Sub
    End If


'If Semestral Then
'    If Actual Then
'        If buliq_periodo!pliqmes > 6 Then
'            CantMeses = buliq_periodo!pliqmes - 7
'            MesHasta = buliq_periodo!pliqmes
'            AnioHasta = buliq_periodo!pliqanio
'        Else
'            CantMeses = buliq_periodo!pliqmes - 1
'            MesHasta = buliq_periodo!pliqmes
'            AnioHasta = buliq_periodo!pliqanio
'        End If
'    Else ' Anterior
'        If buliq_periodo!pliqmes > 6 Then
'            CantMeses = 5
'            MesHasta = 6
'            AnioHasta = buliq_periodo!pliqanio
'        Else
'            CantMeses = 7
'            MesHasta = 12
'            AnioHasta = buliq_periodo!pliqanio - 1
'        End If
'    End If
'Else ' Anual
'    If Actual Then
'        CantMeses = buliq_periodo!pliqmes - 1
'        MesHasta = buliq_periodo!pliqmes
'        AnioHasta = buliq_periodo!pliqanio
'    Else
'        CantMeses = 11
'        MesHasta = 12
'        AnioHasta = buliq_periodo!pliqanio - 1
'    End If
'End If

If Semestral Then
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Semestral "
    End If
    
    Select Case Incluye
    Case 0: 'Semestre actual y no icluye ni periodo ni proceso
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Semestre actual y no icluye ni periodo ni proceso "
        End If
        
        If buliq_periodo!pliqmes > 6 Then
            CantMeses = buliq_periodo!pliqmes - 7
            MesHasta = buliq_periodo!pliqmes - 1
            AnioHasta = buliq_periodo!pliqanio
        Else
            CantMeses = buliq_periodo!pliqmes - 1
            MesHasta = buliq_periodo!pliqmes - 1
            AnioHasta = buliq_periodo!pliqanio
        End If
        UsaActual = False
        UsaPeriodoActual = False
    Case 1: 'Semestre actual y Incluye Proceso Actual y no el priodo
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Semestre actual y Incluye Proceso Actual y no el priodo "
        End If
    
        If buliq_periodo!pliqmes > 6 Then
            CantMeses = buliq_periodo!pliqmes - 7
            MesHasta = buliq_periodo!pliqmes - 1
            AnioHasta = buliq_periodo!pliqanio
        Else
            CantMeses = buliq_periodo!pliqmes - 1
            MesHasta = buliq_periodo!pliqmes - 1
            AnioHasta = buliq_periodo!pliqanio
        End If
        UsaActual = True
        UsaPeriodoActual = False
    Case 2: 'Semestre actual y Incluye Periodo Actual con proceso actual
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Semestre actual y Incluye Periodo Actual con proceso actual "
        End If
    
        If buliq_periodo!pliqmes > 6 Then
            CantMeses = buliq_periodo!pliqmes - 6
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
        Else
            CantMeses = buliq_periodo!pliqmes
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
        End If
        UsaActual = True
        UsaPeriodoActual = True
    Case 3: 'Semestre actual y Incluye Periodo Actual sin Proceso Actual
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Semestre actual y Incluye Periodo Actual sin Proceso Actual "
        End If
    
        If buliq_periodo!pliqmes > 6 Then
            CantMeses = buliq_periodo!pliqmes - 6
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
        Else
            CantMeses = buliq_periodo!pliqmes
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
        End If
        UsaActual = False
        UsaPeriodoActual = True
    Case 4: 'Semestre Anterior
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Semestre Anterior "
        End If
    
        If buliq_periodo!pliqmes > 6 Then
            CantMeses = 6
            MesHasta = 6
            AnioHasta = buliq_periodo!pliqanio
        Else
            CantMeses = 6
            MesHasta = 12
            AnioHasta = buliq_periodo!pliqanio - 1
        End If
        UsaActual = False
        UsaPeriodoActual = False
    End Select
    If Opcion = 3 And BusquedaCompleta Then
        DividePor = 6
    Else
        DividePor = CantMeses + 1
    End If
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Divide Por " & DividePor
    End If
    
Else ' Anual
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Anual "
    End If
    Select Case Incluye
    Case 0: ' Año Actual y No incluye periodo ni proceso actual
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Año Actual y No incluye periodo ni proceso actual "
        End If
    
        CantMeses = buliq_periodo!pliqmes - 1
        MesHasta = buliq_periodo!pliqmes - 1
        AnioHasta = buliq_periodo!pliqanio
        UsaActual = False
        UsaPeriodoActual = False
    Case 1: 'Año actual y Incluye Proceso Actual y no el periodo actual
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Año actual y Incluye Proceso Actual y no el periodo actual "
        End If
    
        CantMeses = buliq_periodo!pliqmes - 1
        MesHasta = buliq_periodo!pliqmes - 1
        AnioHasta = buliq_periodo!pliqanio
        UsaActual = True
        UsaPeriodoActual = False
    Case 2: 'Año actual y Incluye Periodo Actual con proceso actual
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Año actual y Incluye Periodo Actual con proceso actual "
        End If
    
        CantMeses = buliq_periodo!pliqmes
        MesHasta = buliq_periodo!pliqmes
        AnioHasta = buliq_periodo!pliqanio
        UsaActual = True
        UsaPeriodoActual = True
    Case 3: 'Año actual y Incluye Periodo Actual sin proceso actual
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Año actual y Incluye Periodo Actual sin proceso actual "
        End If
    
        CantMeses = buliq_periodo!pliqmes
        MesHasta = buliq_periodo!pliqmes
        AnioHasta = buliq_periodo!pliqanio
        UsaActual = False
        UsaPeriodoActual = True
    Case 4: 'Año Anterior
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Año anterior "
        End If
    
        CantMeses = 12
        MesHasta = 12
        AnioHasta = buliq_periodo!pliqanio - 1
        UsaActual = False
        UsaPeriodoActual = False
    End Select
    If Opcion = 3 And BusquedaCompleta Then
        DividePor = 12
    Else
        DividePor = CantMeses + 1
    End If
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Divide Por " & DividePor
    End If
End If

Select Case Opcion
Case 1: 'Sumatoria
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Sumatoria "
    End If
    Call AM_Sum(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, UsaPeriodoActual)
Case 2: 'Maximo
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Maximo (NroAcu =" & nroAcu & ", MesHasta=" & MesHasta & ", AnioHasta=" & AnioHasta & ", CantMeses =" & CantMeses & ", CantAnios=" & CantAnios & ", Con_Fases=" & Con_Fases & ", Valor=" & Valor & ", Cantidad=" & Cantidad & ", False, UsaActual=" & UsaActual & ", UsaPeriodoActual=" & UsaPeriodoActual & " )"
    End If
    Call AM_Max(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, UsaPeriodoActual)
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Maximo terminado"
    End If
Case 3: 'Promedio
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Promedio "
    End If

    Call AM_Prom(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, DividePor, UsaPeriodoActual)
Case 4: 'Promedio sin cero
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Promedio sin cero "
    End If

    Call AM_PromSin0(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, UsaPeriodoActual)
Case 5: 'Minimo
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Minimo "
    End If

    Call AM_Min(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, UsaPeriodoActual)
Case Else
End Select


Bien = True
If Not Monto Then
    Valor = Cantidad
End If

' Cierro todo y libero
'If Param_cur.State = adStateOpen Then Param_cur.Close
'Set Param_cur = Nothing

End Sub


Public Sub bus_Acum4()
' ---------------------------------------------------------------------------------------------
' Descripcion: Acum.Mens.Meses Variables. gacum4.p
'              Obtencion del Acumulador  1 - Semestral    a) Liq Actual
'                                                         b) Liq. Anterior
'
'                                        2 - Anual        a) Liq Actual
'                                                         b) Liq. Anterior
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------

Dim nroAcu As Long          ' Nro de Acumulador
Dim CantMeses As Integer    ' Cantidad de Meses
Dim Opcion As Long          ' 1 - Sumatoria
                            ' 2 - Maximo
                            ' 3 - Promedio
                            ' 4 - Promedio sin 0
                            ' 5 - Minimo
                            
Dim Con_Fases As Boolean     ' True  - Calculo con Fases
                            ' False - Calculo sin Fases
Dim Monto As Boolean        ' True  - MOnto
                            ' False - Cantidad
Dim Incluye As Integer      ' 0  - No Incluye
                            ' 1  - Proceso Actual
                            ' 2  - Periodo Actual sin proceso actual
                            ' 3  - Periodo Actual con Proceso actual
Dim MesHasta As Integer
Dim AnioHasta As Integer
Dim Cantidad As Double
Dim CantAnios As Integer
Dim mesActual1
Dim anioActual1
Dim cantidadDeMeses
Dim K
Dim rsConsult As New ADODB.Recordset
Dim FDesde1
Dim FHasta1

Dim UsaActual As Boolean
Dim UsaPeriodoActual As Boolean
'Dim Param_cur As New ADODB.Recordset
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda " & NroProg
    End If
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        nroAcu = Arr_Programa(NroProg).Auxint1
        CantMeses = Arr_Programa(NroProg).Auxint2
        Opcion = Arr_Programa(NroProg).Auxint3
        Monto = IIf(Arr_Programa(NroProg).Auxint5 = -1 Or Arr_Programa(NroProg).Auxint5 = 2, True, False)
        Incluye = CInt(Arr_Programa(NroProg).Auxint4)
        Con_Fases = CBool(Arr_Programa(NroProg).Auxlog1)
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontré la Busqueda " & NroProg
        End If
        Exit Sub
    End If


Select Case Incluye
Case 0: 'No icluye ni Periodo actual ni proceso actual
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "No icluye ni Periodo actual ni proceso actual "
    End If

    If buliq_periodo!pliqmes = 1 Then
        MesHasta = 12
        AnioHasta = buliq_periodo!pliqanio - 1
    Else
        MesHasta = buliq_periodo!pliqmes - 1
        AnioHasta = buliq_periodo!pliqanio
    End If
    UsaActual = False
    UsaPeriodoActual = False
Case 1: ' Incluye Proceso Actual y no periodo actual
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Incluye Proceso Actual y no periodo actual "
    End If

    If buliq_periodo!pliqmes = 1 Then
        MesHasta = 12
        AnioHasta = buliq_periodo!pliqanio - 1
    Else
        MesHasta = buliq_periodo!pliqmes - 1
        AnioHasta = buliq_periodo!pliqanio
    End If
    UsaActual = True
    UsaPeriodoActual = False
Case 2: 'Incluye Periodo Actual y el Proceso Actual
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Incluye Periodo Actual y el Proceso Actual "
    End If

    MesHasta = buliq_periodo!pliqmes
    AnioHasta = buliq_periodo!pliqanio
    UsaActual = True
    UsaPeriodoActual = True
Case 3: 'Incluye Periodo Actual y no el Proceso Actual
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Incluye Periodo Actual y no el Proceso Actual "
    End If

    MesHasta = buliq_periodo!pliqmes
    AnioHasta = buliq_periodo!pliqanio
    UsaActual = False
    UsaPeriodoActual = True
End Select

    Bien = False
    Valor = 0

CantAnios = Int(CantMeses / 12)
CantMeses = CantMeses - (CantAnios * 12)

' Maxi: restaba 2 años cuando la combinacion era 1 anio y 0 meses
If CantAnios = 1 And CantMeses = 0 Then
     CantAnios = 0
     CantMeses = 12
End If

Select Case Opcion
Case 1: 'Sumatoria
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Sumatoria "
    End If

    Call AM_Sum(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, UsaPeriodoActual)
Case 2: 'Maximo
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Maximo "
    End If

    Call AM_Max(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, UsaPeriodoActual)
Case 3: 'Promedio
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Promedio "
    End If
    
    If Con_Fases Then
        'Busco cuantos meses estubo activo el empleado
        cantidadDeMeses = 0
        mesActual1 = MesHasta
        anioActual1 = AnioHasta
        
        For K = 1 To ((CantAnios * 12) + CantMeses)
            
            'Controlo si para el mes actual estubo activo
            FDesde1 = C_Date("01/" & mesActual1 & "/" & anioActual1)
            If mesActual1 = 12 Then
               FHasta1 = "01/01/" & (anioActual1 + 1)
            Else
               FHasta1 = "01/" & (mesActual1 + 1) & "/" & anioActual1
            End If
            FHasta1 = DateAdd("d", -1, C_Date(FHasta1))
            
            StrSql = " SELECT * FROM fases"
            StrSql = StrSql & " Where real= -1 AND Empleado = " & buliq_empleado!ternro
            StrSql = StrSql & " AND ("
            StrSql = StrSql & "      (altfec <= " & ConvFecha(FHasta1) & " AND bajfec IS NULL)"
            StrSql = StrSql & "  OR  (altfec <= " & ConvFecha(FHasta1) & " AND bajfec >= " & ConvFecha(FDesde1) & ")"
            StrSql = StrSql & "     )"
        
            OpenRecordset StrSql, rsConsult
            
            If Not rsConsult.EOF Then
               cantidadDeMeses = cantidadDeMeses + 1
            End If
            
            rsConsult.Close
            
            mesActual1 = mesActual1 - 1
            If mesActual1 = 0 Then
                 mesActual1 = 12
                 anioActual1 = anioActual1 - 1
            End If
        Next
    Else
        cantidadDeMeses = (CantAnios * 12) + CantMeses
        'cantidadDeMeses = 0
    End If
    
    Call AM_Prom(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, cantidadDeMeses, UsaPeriodoActual)
'    Call AM_Prom(NroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, ((CantAnios * 12) + CantMeses), UsaPeriodoActual)
Case 4: 'Promedio sin cero
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Promedio sin cero "
    End If

    Call AM_PromSin0(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, UsaPeriodoActual)
Case 5: 'Minimo
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Minimo "
    End If

    Call AM_Min(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, UsaPeriodoActual)
Case Else
End Select

If Not Monto Then
    Valor = Cantidad
End If
Bien = True

' Cierro todo y libero
'If Param_cur.State = adStateOpen Then Param_cur.Close
'Set Param_cur = Nothing

End Sub

Public Sub bus_ImponiblesMensuales()
' ---------------------------------------------------------------------------------------------
' Descripcion: Imponibles Mensuales
'              Obtencion del Acumulador  1 - Semestral    a) Liq Actual
'                                                         b) Liq. Anterior
'
'                                        2 - Anual        a) Liq Actual
'                                                         b) Liq. Anterior
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim nroAcu As Long           ' Nro de Acumulador
Dim CantMeses As Integer     ' Cantidad de Meses
Dim Opcion As Long           ' 1 - Sumatoria
                             ' 2 - Maximo
                             ' 3 - Promedio
                             ' 4 - Promedio sin 0
                             ' 5 - Minimo
                            
Dim Con_Fases As Boolean     ' True  - Calculo con Fases
                             ' False - Calculo sin Fases
Dim Monto As Boolean         ' True  - MOnto
                             ' False - Cantidad
Dim Incluye As Integer       ' 0  - No Incluye
                             ' 1  - Proceso Actual y no periodo
                             ' 2  - Periodo Actual y no proceso
                             ' 3  - Periodo Actual y proceso

Dim MesHasta As Integer
Dim AnioHasta As Integer
Dim Cantidad As Double
Dim CantAnios As Integer
Dim OpcionValor As String 'Suelgo = A
                            'SAC = B
                            'LAR = C
                            'Todos = T
                            
Dim TipoAcum As Integer     '1 - SUELDO
                            '2 - LAR
                            '3 - SAC
                            '0 - Todos
Dim UsaActual As Boolean
    
    Bien = False
    Valor = 0
        
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda "
    End If
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        nroAcu = Arr_Programa(NroProg).Auxint1
        CantMeses = Arr_Programa(NroProg).Auxint2
        Opcion = Arr_Programa(NroProg).Auxint3
        Monto = Arr_Programa(NroProg).Auxint5
        Incluye = CInt(Arr_Programa(NroProg).Auxint4)
        Con_Fases = CBool(Arr_Programa(NroProg).Auxlog1)
        OpcionValor = Arr_Programa(NroProg).Auxchar1
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busqueda no encontrada " & NroProg
        End If
        Exit Sub
    End If

If CBool(USA_DEBUG) Then
    Flog.writeline Espacios(Tabulador * 4) & "Tiene en cuenta las fases "
    Flog.writeline Espacios(Tabulador * 4) & "Tipo de acumulador "
End If

Select Case UCase(OpcionValor)
Case "A":
    TipoAcum = 1
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 5) & "Sueldo "
    End If
Case "B":
    TipoAcum = 3
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 5) & "SAC "
    End If
Case "C":
    TipoAcum = 2
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 5) & "LAR "
    End If
Case Else:
    TipoAcum = 0
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 5) & "TODOS "
    End If
End Select

If CBool(USA_DEBUG) Then
    Flog.writeline Espacios(Tabulador * 4) & "Incluye"
End If
Select Case Incluye
Case 0: 'No icluye ni Periodo actual ni proceso actual
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "No icluye ni Periodo actual ni proceso actual"
    End If
    If buliq_periodo!pliqmes = 1 Then
        MesHasta = 12
        AnioHasta = buliq_periodo!pliqanio - 1
    Else
        MesHasta = buliq_periodo!pliqmes - 1
        AnioHasta = buliq_periodo!pliqanio
    End If
    UsaActual = False
Case 1: 'Incluye Proceso Actual y no periodo actual
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Incluye Proceso Actual y no periodo actual"
    End If
    If buliq_periodo!pliqmes = 1 Then
        MesHasta = 12
        AnioHasta = buliq_periodo!pliqanio - 1
    Else
        MesHasta = buliq_periodo!pliqmes - 1
        AnioHasta = buliq_periodo!pliqanio
    End If
    UsaActual = True
Case 2: 'Incluye Periodo Actual y el Proceso Actual
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Incluye Periodo Actual y el Proceso Actual"
    End If
    MesHasta = buliq_periodo!pliqmes
    AnioHasta = buliq_periodo!pliqanio
    UsaActual = True
Case 3: 'Incluye Periodo Actual y no el Proceso Actual
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Incluye Periodo Actual y no el Proceso Actual"
    End If
    MesHasta = buliq_periodo!pliqmes
    AnioHasta = buliq_periodo!pliqanio
    UsaActual = False
End Select



CantAnios = Int(CantMeses / 12)
CantMeses = CantMeses - (CantAnios * 12)

If CBool(USA_DEBUG) Then
    Flog.writeline Espacios(Tabulador * 4) & "Operacion: "
End If
Select Case Opcion
Case 1: 'Sumatoria
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 5) & "Sumatoria"
    End If
    Call AM_Sum_Nuevo(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, True, UsaActual, TipoAcum)
Case 2: 'Maximo
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 5) & "Maximo"
    End If
    Call AM_Max_Nuevo(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, True, UsaActual, TipoAcum)
Case 3: 'Promedio
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 5) & "Promedio"
    End If
    Call AM_Prom_Nuevo(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, True, UsaActual, TipoAcum, (CantAnios * 12) + CantMeses)
Case 4: 'Promedio sin cero
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 5) & "Promedio sin cero"
    End If
    Call AM_PromSin0_Nuevo(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, True, UsaActual, TipoAcum)
Case 5: 'Minimo
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 5) & "Minimo"
    End If
    Call AM_Min_Nuevo(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, True, UsaActual, TipoAcum)
Case Else
End Select

If Not Monto Then
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Retorna cantidad"
    End If
    Valor = Cantidad
Else
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Retorna monto"
    End If
End If
Bien = True
End Sub

Public Sub bus_ImponiblesDelProceso()
' ---------------------------------------------------------------------------------------------
' Descripcion: Acumuladores Imponibles del Proceso
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim nroAcu As Long           ' Nro de Acumulador

Dim Monto As Integer         ' 1 - Cantidad
                             ' 2 - Monto
                             
                             
Dim Obligatorio As Boolean   'Obligatorio retornar valor

Dim TipoAcu As Integer     '1 - SUELDO
                            '2 - SAC
                            '3 - LAR
                            '4 - Todos

'Dim Param_cur As New ADODB.Recordset
Dim rs_ImpPro As New ADODB.Recordset
    
    Valor = 0
    Bien = False
    
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        nroAcu = Arr_Programa(NroProg).Auxint1
        Monto = Arr_Programa(NroProg).Auxint2
        Obligatorio = CBool(Arr_Programa(NroProg).Auxlog1)
        TipoAcu = Arr_Programa(NroProg).Auxint3
    Else
        Exit Sub
    End If

'busco el acu_liq de este proceso
If TipoAcu = 4 Then 'Todos los tipos
    StrSql = "SELECT * FROM impproarg WHERE cliqnro = " & buliq_cabliq!cliqnro & _
             " AND acunro =" & nroAcu
Else
    StrSql = "SELECT * FROM impproarg WHERE cliqnro = " & buliq_cabliq!cliqnro & _
             " AND acunro =" & nroAcu & " AND tconnro = " & TipoAcu
End If
OpenRecordset StrSql, rs_ImpPro
If Not rs_ImpPro.EOF Then
    If Monto = 1 Then
        Valor = rs_ImpPro!ipacant
    Else
        Valor = rs_ImpPro!ipamonto
    End If
    Bien = True
Else
    If Obligatorio Then
        Bien = False
    Else
        Bien = True
    End If
End If

' Cierro todo y libero
'If Param_cur.State = adStateOpen Then Param_cur.Close
'Set Param_cur = Nothing

If rs_ImpPro.State = adStateOpen Then rs_ImpPro.Close
Set rs_ImpPro = Nothing

End Sub


Public Sub AM_Sum(ByVal Acu As Long, ByVal MesHasta As Integer, ByVal AnioHasta As Integer, ByVal CantMeses As Integer, ByVal CantAnios As Integer, ByVal ConFases As Boolean, ByRef Valor As Double, ByRef Cantidad As Double, ByVal Imponibles As Boolean, ByVal UsaActual As Boolean, ByVal UsaPeriodoActual As Boolean)
' sumariza los meses anteriores, INCLUYENDO ACTUAL.
' Parametros : 1) Nro Acumulador                            -  Acu
'              2) Mes  hasta (mes en el que estoy parado)   -
'              3) Anio hasta (anio que estoy parado)        -
'              4) Cant meses anteriores                     -
'              5) Cant Anios anteriores                     -
'              6) con-fases                                 -
'              7) cantidad                                  -
'              8) monto.                                    -


Dim Hasta As Integer
Dim cantProm As Integer
Dim MesDesde As Integer
Dim AnioDesde As Integer

Dim rs_Fases As New ADODB.Recordset
Dim rs_Acu_Mes As New ADODB.Recordset
Dim rs_Acu_Liq As New ADODB.Recordset

If CantMeses > 12 Or MesHasta > 12 Or CantAnios > AnioHasta Then
    Exit Sub
End If

MesDesde = MesHasta - CantMeses + 1
AnioDesde = AnioHasta - CantAnios

If MesDesde <= 0 Then
    MesDesde = MesHasta + 12 - CantMeses + 1
    AnioDesde = AnioDesde - 1
End If

If MesDesde > 12 Then
    MesDesde = MesDesde - 12
    AnioDesde = AnioDesde - 1
End If

' Modificado para que tome el promedio para los jornales
If ConFases Then
    'FGZ - 16/04/2004
    'Busco la ultima fase activa
    StrSql = "SELECT * FROM fases WHERE real = -1 AND empleado = " & buliq_empleado!ternro
    StrSql = StrSql & " ORDER BY altfec"
    OpenRecordset StrSql, rs_Fases
    
    If Not rs_Fases.EOF Then
        'rs_Fases.MoveFirst
        rs_Fases.MoveLast
        If rs_Fases!altfec > C_Date("01/" & MesDesde & "/" & AnioDesde) Then
            MesDesde = Month(rs_Fases!altfec)
            AnioDesde = Year(rs_Fases!altfec)
        End If
    End If
Else
    'FGZ - 15/12/2004
    ' Se le saco esto porque traia problemas
'    If buliq_empleado!empfaltagr > c_date("01/" & MesDesde & "/" & AnioDesde) Then
'        If CBool(USA_DEBUG) Then
'            Flog.writeline Espacios(Tabulador * 4) & "la empfaltagr del empleado es > a " & c_date("01/" & MesDesde & "/" & AnioDesde)
'        End If
'        MesDesde = Month(buliq_empleado!empfaltagr)
'        AnioDesde = Year(buliq_empleado!empfaltagr)
'    End If
End If

If CBool(USA_DEBUG) Then
    Flog.writeline Espacios(Tabulador * 4) & "Busca desde el mes " & MesDesde & " del año " & AnioDesde & " hasta el mes " & MesHasta & " del año " & AnioHasta
End If

If Not Imponibles Then
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes =" & MesDesde
        Else
            StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes >= " & MesDesde & " AND  ammes <=" & MesHasta
        End If
    Else
'        StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
'                 " AND acunro =" & Acu & _
'                 " AND " & AnioDesde & " <= amanio AND amanio <= " & AnioHasta & _
'                 " AND (( ammes >=" & MesDesde & " AND " & AnioDesde & " <= amanio) OR ( ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))"
        StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                 " AND acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = amanio AND ammes >= " & MesDesde & ") OR " & _
                 " (amanio > " & AnioDesde & " AND amanio < " & AnioHasta & ") OR " & _
                 " (ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))"
    End If
Else
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM acu_mes " & _
                     " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acu_mes.acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes =" & MesHasta & _
                     " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
        Else
            StrSql = "SELECT * FROM acu_mes " & _
                     " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acu_mes.acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes >= " & MesDesde & " AND  ammes <=" & MesHasta & _
                     " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
        End If
    Else
'        StrSql = "SELECT * FROM acu_mes " & _
'                 " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
'                 " WHERE ternro = " & buliq_empleado!ternro & _
'                 " AND acu_mes.acunro =" & Acu & _
'                 " AND " & AnioDesde & " <= amanio AND amanio <= " & AnioHasta & _
'                 " AND (( ammes >=" & MesDesde & " AND " & AnioDesde & " <= amanio) OR ( ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))" & _
'                 " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
        StrSql = "SELECT * FROM acu_mes " & _
                 " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                 " WHERE ternro = " & buliq_empleado!ternro & _
                 " AND acu_mes.acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = amanio AND ammes >= " & MesDesde & ") OR " & _
                 " (amanio > " & AnioDesde & " AND amanio < " & AnioHasta & ") OR " & _
                 " (ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))" & _
                 " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
    End If
End If
StrSql = StrSql & " ORDER BY amanio, ammes"
OpenRecordset StrSql, rs_Acu_Mes

If CBool(USA_DEBUG) Then
    Flog.writeline Espacios(Tabulador * 4) & "SQL " & StrSql
End If
If Not rs_Acu_Mes.EOF Then
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Acumulando ..."
    End If
End If

Do While Not rs_Acu_Mes.EOF
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Suma Monto " & IIf(Not EsNulo(rs_Acu_Mes!ammonto), rs_Acu_Mes!ammonto, 0)
            Flog.writeline Espacios(Tabulador * 4) & "Suma Cantidad " & IIf(Not EsNulo(rs_Acu_Mes!amcant), rs_Acu_Mes!amcant, 0)
        End If
        
        Valor = Valor + IIf(Not EsNulo(rs_Acu_Mes!ammonto), rs_Acu_Mes!ammonto, 0)
        Cantidad = Cantidad + IIf(Not EsNulo(rs_Acu_Mes!amcant), rs_Acu_Mes!amcant, 0)
    rs_Acu_Mes.MoveNext
Loop

' Si es desde el mes actual ==> busco el acu_liq de este proceso
'If (MesHasta = buliq_periodo!pliqmes And AnioHasta = buliq_periodo!pliqanio) Or UsaActual Then
If UsaActual Then
    ' FGZ - 09/02/2004
    If objCache_Acu_Liq_Monto.EsSimboloDefinido(CStr(Acu)) Then
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Suma Proceso Actual: "
                Flog.writeline Espacios(Tabulador * 5) & "Monto " & objCache_Acu_Liq_Monto.Valor(CStr(Acu))
                Flog.writeline Espacios(Tabulador * 6) & "Cantidad " & objCache_Acu_Liq_Cantidad.Valor(CStr(Acu))
            End If
    
            Valor = Valor + objCache_Acu_Liq_Monto.Valor(CStr(Acu))
            Cantidad = Cantidad + objCache_Acu_Liq_Cantidad.Valor(CStr(Acu))
    End If

'    StrSql = "SELECT * FROM acu_liq WHERE cliqnro = " & buliq_cabliq!cliqnro & _
'             " AND acunro =" & Acu
'    OpenRecordset StrSql, rs_Acu_Liq
'    If Not rs_Acu_Liq.EOF Then
'        Valor = Valor + rs_Acu_Liq!almonto
'        Cantidad = Cantidad + rs_Acu_Liq!alcant
'    End If
End If

' Cierro todo y libero
If rs_Fases.State = adStateOpen Then rs_Fases.Close
If rs_Acu_Mes.State = adStateOpen Then rs_Acu_Mes.Close
'If rs_Acu_liq.State = adStateOpen Then rs_Acu_Liq.Close
Set rs_Fases = Nothing
Set rs_Acu_Mes = Nothing
'Set rs_Acu_Liq = Nothing

End Sub

Public Sub AM_Sum_Nuevo(ByVal Acu As Long, ByVal MesHasta As Integer, ByVal AnioHasta As Integer, ByVal CantMeses As Integer, ByVal CantAnios As Integer, ByVal ConFases As Boolean, ByRef Valor As Double, ByRef Cantidad As Double, ByVal Imponibles As Boolean, ByVal UsaActual As Boolean, ByVal TipoAcu As Integer)
' sumariza los meses anteriores, INCLUYENDO ACTUAL.
' Parametros : 1) Nro Acumulador                            -  Acu
'              2) Mes  hasta (mes en el que estoy parado)   -
'              3) Anio hasta (anio que estoy parado)        -
'              4) Cant meses anteriores                     -
'              5) Cant Anios anteriores                     -
'              6) con-fases                                 -
'              7) cantidad                                  -
'              8) monto.                                    -


Dim Hasta As Integer
Dim cantProm As Integer
Dim MesDesde As Integer
Dim AnioDesde As Integer

Dim rs_Fases As New ADODB.Recordset
Dim rs_ImpMes As New ADODB.Recordset
Dim rs_ImpPro As New ADODB.Recordset

If CantMeses > 12 Or MesHasta > 12 Or CantAnios > AnioHasta Then
    Exit Sub
End If

MesDesde = MesHasta - CantMeses + 1
AnioDesde = AnioHasta - CantAnios


If MesDesde <= 0 Then
    MesDesde = MesHasta + 12 - CantMeses + 1
    AnioDesde = AnioDesde - 1
End If

If MesDesde > 12 Then
    MesDesde = MesDesde - 12
    AnioDesde = AnioDesde - 1
End If


' Modificado para que tome el promedio para los jornales
If ConFases Then
    'FGZ - 16/04/2004
    'Busco la ultima fase activa
    StrSql = "SELECT * FROM fases WHERE real = -1 AND empleado = " & buliq_empleado!ternro
    StrSql = StrSql & " ORDER BY altfec"
    OpenRecordset StrSql, rs_Fases
    
    If Not rs_Fases.EOF Then
        'rs_Fases.MoveFirst
        rs_Fases.MoveLast
        If rs_Fases!altfec > C_Date("01/" & MesDesde & "/" & AnioDesde) Then
            MesDesde = Month(rs_Fases!altfec)
            AnioDesde = Year(rs_Fases!altfec)
        End If
    End If
Else
    'FGZ - 15/12/2004
    ' Se le saco esto porque traia problemas
'    If buliq_empleado!empfaltagr > c_date("01/" & MesDesde & "/" & AnioDesde) Then
'        MesDesde = Month(buliq_empleado!empfaltagr)
'        AnioDesde = Year(buliq_empleado!empfaltagr)
'    End If
End If

If TipoAcu = 0 Then 'Todos los tipos
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM impmesarg " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = imaanio " & _
                     " AND imames =" & MesHasta
        Else
            StrSql = "SELECT * FROM impmesarg " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = imaanio " & _
                     " AND imames >= " & MesDesde & " AND imames <=" & MesHasta
        End If
    Else
        StrSql = "SELECT * FROM impmesarg " & _
                 " WHERE ternro = " & buliq_empleado!ternro & _
                 " AND acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = imaanio AND imames >= " & MesDesde & ") OR " & _
                 " (imaanio > " & AnioDesde & " AND imaanio < " & AnioHasta & ") OR " & _
                 " (imames <=" & MesHasta & " AND imaanio = " & AnioHasta & "))"
    End If
Else
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM impmesarg " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND impmesarg.tconnro =" & TipoAcu & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = imaanio " & _
                     " AND imames =" & MesHasta
        Else
            StrSql = "SELECT * FROM impmesarg " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND impmesarg.tconnro =" & TipoAcu & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = imaanio " & _
                     " AND imames >= " & MesDesde & " AND imames <=" & MesHasta
        End If
    Else
        StrSql = "SELECT * FROM impmesarg " & _
                 " WHERE ternro = " & buliq_empleado!ternro & _
                 " AND impmesarg.tconnro =" & TipoAcu & _
                 " AND acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = imaanio AND imames >= " & MesDesde & ") OR " & _
                 " (imaanio > " & AnioDesde & " AND imaanio < " & AnioHasta & ") OR " & _
                 " (imames <=" & MesHasta & " AND imaanio = " & AnioHasta & "))"
    End If
End If
StrSql = StrSql & " ORDER BY imaanio, imames"
OpenRecordset StrSql, rs_ImpMes
If Not rs_ImpMes.EOF Then
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 5) & "Datos encontrados "
    End If
Else
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 5) & "No se encontraron Datos "
        Flog.writeline Espacios(Tabulador * 5) & "SQL:  " & StrSql
    End If
End If

Do While Not rs_ImpMes.EOF
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 6) & "Monto " & rs_ImpMes!imamonto & " Cantidad " & rs_ImpMes!imacant
    End If
    Valor = Valor + IIf(Not EsNulo(rs_ImpMes!imamonto), rs_ImpMes!imamonto, 0)
    Cantidad = Cantidad + IIf(Not EsNulo(rs_ImpMes!imacant), rs_ImpMes!imacant, 0)
   
    rs_ImpMes.MoveNext
Loop

' Si es desde el mes actual ==> busco el acu_liq de este proceso
'If (MesHasta = buliq_periodo!pliqmes And AnioHasta = buliq_periodo!pliqanio) Or UsaActual Then
If UsaActual Then
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 5) & "Actual "
    End If

    If TipoAcu = 0 Then 'Todos los tipos
        StrSql = "SELECT * FROM impproarg WHERE cliqnro = " & buliq_cabliq!cliqnro & _
                 " AND acunro =" & Acu
    Else
        StrSql = "SELECT * FROM impproarg WHERE cliqnro = " & buliq_cabliq!cliqnro & _
                 " AND acunro =" & Acu & " AND tconnro = " & TipoAcu
    End If
    OpenRecordset StrSql, rs_ImpPro
    If Not rs_ImpPro.EOF Then
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 6) & "Monto " & IIf(Not EsNulo(rs_ImpPro!ipamonto), rs_ImpPro!ipamonto, 0)
            Flog.writeline Espacios(Tabulador * 6) & "Cantidad " & IIf(Not EsNulo(rs_ImpPro!ipacant), rs_ImpPro!ipacant, 0)
        End If
        Valor = Valor + IIf(Not EsNulo(rs_ImpPro!ipamonto), rs_ImpPro!ipamonto, 0)
        Cantidad = Cantidad + IIf(Not EsNulo(rs_ImpPro!ipacant), rs_ImpPro!ipacant, 0)
    End If
End If

' Cierro todo y libero
If rs_Fases.State = adStateOpen Then rs_Fases.Close
If rs_ImpPro.State = adStateOpen Then rs_ImpPro.Close
If rs_ImpMes.State = adStateOpen Then rs_ImpMes.Close
Set rs_Fases = Nothing
Set rs_ImpMes = Nothing
Set rs_ImpPro = Nothing

End Sub

Public Sub AM_Max_Nuevo(ByVal Acu As Long, ByVal MesHasta As Integer, ByVal AnioHasta As Integer, ByVal CantMeses As Integer, ByVal CantAnios As Integer, ByVal ConFases As Boolean, ByRef Valor As Double, ByRef Cantidad As Double, ByVal Imponibles As Boolean, ByVal UsaActual As Boolean, ByVal TipoAcu As Integer)
' sumariza los meses anteriores, INCLUYENDO ACTUAL.
' Parametros : 1) Nro Acumulador                            -  Acu
'              2) Mes  hasta (mes en el que estoy parado)   -
'              3) Anio hasta (anio que estoy parado)        -
'              4) Cant meses anteriores                     -
'              5) Cant Anios anteriores                     -
'              6) con-fases                                 -
'              7) cantidad                                  -
'              8) monto.                                    -


Dim Hasta As Integer
Dim cantProm As Integer
Dim MesDesde As Integer
Dim AnioDesde As Integer

Dim rs_Fases As New ADODB.Recordset
Dim rs_ImpMes As New ADODB.Recordset
Dim rs_ImpPro As New ADODB.Recordset

Valor = 0
Cantidad = 0

If CantMeses > 12 Or MesHasta > 12 Or CantAnios > AnioHasta Then
    Exit Sub
End If

MesDesde = MesHasta - CantMeses + 1
AnioDesde = AnioHasta - CantAnios

If MesDesde <= 0 Then
    MesDesde = MesHasta + 12 - CantMeses + 1
    AnioDesde = AnioDesde - 1
End If

If MesDesde > 12 Then
    MesDesde = MesDesde - 12
    AnioDesde = AnioDesde - 1
End If
If CBool(USA_DEBUG) Then
    Flog.writeline Espacios(Tabulador * 5) & "Mes desde " & MesDesde & " año desde " & AnioDesde
    Flog.writeline Espacios(Tabulador * 5) & "Mes Hasta " & MesHasta & " año hasta " & AnioHasta
End If

' Modificado para que tome el promedio para los jornales
If ConFases Then
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 5) & "Busco la ultima fase activa"
    End If
    'FGZ - 16/04/2004
    'Busco la ultima fase activa
    StrSql = "SELECT * FROM fases WHERE real = -1 AND empleado = " & buliq_empleado!ternro
    StrSql = StrSql & " ORDER BY altfec"
    OpenRecordset StrSql, rs_Fases
    
    If Not rs_Fases.EOF Then
        'rs_Fases.MoveFirst
        rs_Fases.MoveLast
        If CBool(USA_DEBUG) Then
            Flog.Write Espacios(Tabulador * 5) & "Fase desde " & rs_Fases!altfec
            If Not EsNulo(rs_Fases!bajfec) Then
                Flog.writeline Espacios(Tabulador * 5) & " hasta " & rs_Fases!bajfec
            Else
                Flog.writeline Espacios(Tabulador * 5) & " hasta NULL "
            End If
        End If
        If rs_Fases!altfec > C_Date("01/" & MesDesde & "/" & AnioDesde) Then
            MesDesde = Month(rs_Fases!altfec)
            AnioDesde = Year(rs_Fases!altfec)
        End If
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 5) & "No se encontró fase activa"
        End If
    End If
Else
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 5) & "Emleado empfaltagr " & buliq_empleado!empfaltagr
    End If
    'FGZ - 15/12/2004
    ' Se le saco esto porque traia problemas
'    If buliq_empleado!empfaltagr > c_date("01/" & MesDesde & "/" & AnioDesde) Then
'        MesDesde = Month(buliq_empleado!empfaltagr)
'        AnioDesde = Year(buliq_empleado!empfaltagr)
'    End If
End If

If TipoAcu = 0 Then 'Todos los tipos
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM impmesarg " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = imaanio " & _
                     " AND imames =" & MesHasta
        Else
            StrSql = "SELECT * FROM impmesarg " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = imaanio " & _
                     " AND imames >= " & MesDesde & " AND imames <=" & MesHasta
        End If
    Else
'        StrSql = "SELECT * FROM impmesarg " & _
'                 " WHERE ternro = " & buliq_empleado!ternro & _
'                 " AND acunro =" & Acu & _
'                 " AND " & AnioDesde & " <= imaanio AND imaanio <= " & AnioHasta & _
'                 " AND (( imames >=" & MesDesde & " AND " & AnioDesde & " <= imaanio) OR ( imames <=" & MesHasta & " AND imaanio = " & AnioHasta & "))"
        StrSql = "SELECT * FROM impmesarg " & _
                 " WHERE ternro = " & buliq_empleado!ternro & _
                 " AND acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = imaanio AND imames >= " & MesDesde & ") OR " & _
                 " (imaanio > " & AnioDesde & " AND imaanio < " & AnioHasta & ") OR " & _
                 " (imames <=" & MesHasta & " AND imaanio = " & AnioHasta & "))"
    End If
Else
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM impmesarg " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND impmesarg.tconnro =" & TipoAcu & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = imaanio " & _
                     " AND imames =" & MesHasta
        Else
            StrSql = "SELECT * FROM impmesarg " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND impmesarg.tconnro =" & TipoAcu & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = imaanio " & _
                     " AND imames >= " & MesDesde & " AND imames <=" & MesHasta
        End If
    Else
        StrSql = "SELECT * FROM impmesarg " & _
                 " WHERE ternro = " & buliq_empleado!ternro & _
                 " AND impmesarg.tconnro =" & TipoAcu & _
                 " AND acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = imaanio AND imames >= " & MesDesde & ") OR " & _
                 " (imaanio > " & AnioDesde & " AND imaanio < " & AnioHasta & ") OR " & _
                 " (imames <=" & MesHasta & " AND imaanio = " & AnioHasta & "))"
    End If
End If
StrSql = StrSql & " ORDER BY imaanio, imames"
OpenRecordset StrSql, rs_ImpMes

'' FGZ - 18/04/2004
'If TipoAcu = 0 Then 'Todos los tipos
'        StrSql = "SELECT * FROM impmesarg " & _
'                 " WHERE ternro = " & buliq_empleado!ternro & _
'                 " AND acunro =" & Acu & _
'                 " AND " & AnioDesde & " <= imaanio AND imaanio <= " & AnioHasta & _
'                 " AND (( imames >=" & MesDesde & " AND " & AnioDesde & " <= imaanio) OR ( imames <=" & MesHasta & " AND imaanio = " & AnioHasta & "))"
'Else
'        StrSql = "SELECT * FROM impmesarg " & _
'                 " WHERE ternro = " & buliq_empleado!ternro & _
'                 " AND impmesarg.tconnro =" & TipoAcu & _
'                 " AND acunro =" & Acu & _
'                 " AND " & AnioDesde & " <= imaanio AND imaanio <= " & AnioHasta & _
'                 " AND (( imames >=" & MesDesde & " AND " & AnioDesde & " <= imaanio) OR ( imames <=" & MesHasta & " AND imaanio = " & AnioHasta & "))"
'End If
'StrSql = StrSql & " ORDER BY imaanio, imames"
'OpenRecordset StrSql, rs_ImpMes
If Not rs_ImpMes.EOF Then
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 5) & "Datos encontrados "
    End If
Else
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 5) & "No se encontraron Datos "
        Flog.writeline Espacios(Tabulador * 5) & "SQL:  " & StrSql
    End If
End If

Do While Not rs_ImpMes.EOF
    If Not EsNulo(rs_ImpMes!imamonto) Then
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 6) & "Monto " & rs_ImpMes!imamonto
        End If
        If rs_ImpMes!imamonto > Valor Then
            Valor = rs_ImpMes!imamonto
            Cantidad = IIf(Not EsNulo(rs_ImpMes!imacant), rs_ImpMes!imacant, 0)
        End If
    End If
    rs_ImpMes.MoveNext
Loop

' Si es desde el mes actual ==> busco el acu_liq de este proceso
If UsaActual Then
    If TipoAcu = 0 Then 'Todos los tipos
        StrSql = "SELECT * FROM impproarg WHERE cliqnro = " & buliq_cabliq!cliqnro & _
                 " AND acunro =" & Acu
    Else
        StrSql = "SELECT * FROM impproarg WHERE cliqnro = " & buliq_cabliq!cliqnro & _
                 " AND acunro =" & Acu & " AND tconnro = " & TipoAcu
    End If
    OpenRecordset StrSql, rs_ImpPro
    If Not rs_ImpPro.EOF Then
        If Not EsNulo(rs_ImpPro!ipamonto) Then
            If rs_ImpPro!ipamonto > Valor Then
                Valor = rs_ImpPro!ipamonto
                Cantidad = IIf(Not EsNulo(rs_ImpPro!ipacant), rs_ImpPro!ipacant, 0)
            End If
        End If
    End If
End If

' Cierro todo y libero
If rs_Fases.State = adStateOpen Then rs_Fases.Close
If rs_ImpMes.State = adStateOpen Then rs_ImpMes.Close
If rs_ImpPro.State = adStateOpen Then rs_ImpPro.Close
Set rs_Fases = Nothing
Set rs_ImpMes = Nothing
Set rs_ImpPro = Nothing

End Sub

Public Sub AM_Max(ByVal Acu As Long, ByVal MesHasta As Integer, ByVal AnioHasta As Integer, ByVal CantMeses As Integer, ByVal CantAnios As Integer, ByVal ConFases As Boolean, ByRef Valor As Double, ByRef Cantidad As Double, ByVal Imponibles As Boolean, ByVal UsaActual As Boolean, ByVal UsaPeriodoActual As Boolean)
' sumariza los meses anteriores, INCLUYENDO ACTUAL.
' Parametros : 1) Nro Acumulador                            -  Acu
'              2) Mes  hasta (mes en el que estoy parado)   -
'              3) Anio hasta (anio que estoy parado)        -
'              4) Cant meses anteriores                     -
'              5) Cant Anios anteriores                     -
'              6) con-fases                                 -
'              7) cantidad                                  -
'              8) monto.                                    -


Dim Hasta As Integer
Dim cantProm As Integer
Dim MesDesde As Integer
Dim AnioDesde As Integer

Dim rs_Fases As New ADODB.Recordset
Dim rs_Acu_Mes As New ADODB.Recordset
Dim rs_Acu_Liq As New ADODB.Recordset
Dim Aux_Valor As Double
Dim Aux_Cant As Double

Valor = 0
Cantidad = 0
Aux_Valor = 0
Aux_Cant = 0

If CantMeses > 12 Or MesHasta > 12 Or CantAnios > AnioHasta Then
    Exit Sub
End If

MesDesde = MesHasta - CantMeses + 1
AnioDesde = AnioHasta - CantAnios

If MesDesde <= 0 Then
    MesDesde = MesHasta + 12 - CantMeses + 1
    AnioDesde = AnioDesde - 1
End If

If MesDesde > 12 Then
    MesDesde = MesDesde - 12
    AnioDesde = AnioDesde - 1
End If

' Modificado para que tome el promedio para los jornales
If ConFases Then
    'FGZ - 16/04/2004
    'Busco la ultima fase activa
    StrSql = "SELECT * FROM fases WHERE real = -1 AND empleado = " & buliq_empleado!ternro
    StrSql = StrSql & " ORDER BY altfec"
    OpenRecordset StrSql, rs_Fases
    
    If Not rs_Fases.EOF Then
        'rs_Fases.MoveFirst
        rs_Fases.MoveLast
        If rs_Fases!altfec > C_Date("01/" & MesDesde & "/" & AnioDesde) Then
            MesDesde = Month(rs_Fases!altfec)
            AnioDesde = Year(rs_Fases!altfec)
        End If
    End If
Else
    'FGZ - 15/12/2004
    ' Se le saco esto porque traia problemas
'    If buliq_empleado!empfaltagr > c_date("01/" & MesDesde & "/" & AnioDesde) Then
'        MesDesde = Month(buliq_empleado!empfaltagr)
'        AnioDesde = Year(buliq_empleado!empfaltagr)
'    End If
End If

If Not Imponibles Then
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes =" & MesDesde
        Else
            StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes >= " & MesDesde & " AND  ammes <=" & MesHasta
        End If
    Else
        StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                 " AND acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = amanio AND ammes >= " & MesDesde & ") OR " & _
                 " (amanio > " & AnioDesde & " AND amanio < " & AnioHasta & ") OR " & _
                 " (ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))"
    End If
Else
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM acu_mes " & _
                     " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acu_mes.acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes =" & MesHasta & _
                     " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
        Else
            StrSql = "SELECT * FROM acu_mes " & _
                     " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acu_mes.acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes >= " & MesDesde & " AND  ammes <=" & MesHasta & _
                     " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
        End If
    Else
        StrSql = "SELECT * FROM acu_mes " & _
                 " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                 " WHERE ternro = " & buliq_empleado!ternro & _
                 " AND acu_mes.acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = amanio AND ammes >= " & MesDesde & ") OR " & _
                 " (amanio > " & AnioDesde & " AND amanio < " & AnioHasta & ") OR " & _
                 " (ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))" & _
                 " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
    End If
End If
StrSql = StrSql & " ORDER BY amanio, ammes"
OpenRecordset StrSql, rs_Acu_Mes

'    If Not Imponibles Then
'        StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
'                 " AND acunro =" & Acu & _
'                 " AND " & AnioDesde & " <= amanio AND amanio <= " & AnioHasta & _
'                 " AND (( ammes >=" & MesDesde & " AND " & AnioDesde & " <= amanio) OR ( ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))"
'    Else
'        StrSql = "SELECT * FROM acu_mes " & _
'                 " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
'                 " WHERE ternro = " & buliq_empleado!ternro & _
'                 " AND acu_mes.acunro =" & Acu & _
'                 " AND " & AnioDesde & " <= amanio AND amanio <= " & AnioHasta & _
'                 " AND (( ammes >=" & MesDesde & " AND " & AnioDesde & " <= amanio) OR ( ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))" & _
'                 " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
'    End If
'StrSql = StrSql & " ORDER BY amanio, ammes"
'OpenRecordset StrSql, rs_Acu_Mes

If rs_Acu_Mes.EOF Then
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 5) & "no se encontraron registros. SQL: " & StrSql
    End If
Else
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 5) & "Buscando los acumuladores mensuales"
    End If
End If

Do While Not rs_Acu_Mes.EOF
    If Not EsNulo(rs_Acu_Mes!ammonto) Then
        If UsaPeriodoActual Then
            If CBool(USA_DEBUG) Then
                Flog.Write Espacios(Tabulador * 6) & "Analizando Mes: " & rs_Acu_Mes!ammes
                Flog.writeline " Analizando Mes: " & rs_Acu_Mes!ammes & "Mes actual: " & buliq_periodo!pliqmes
            End If
            If rs_Acu_Mes!ammes = buliq_periodo!pliqmes Then
                Aux_Valor = Aux_Valor + rs_Acu_Mes!ammonto
                'Aux_Cant = Aux_Cant + rs_Acu_Mes!amcant
                Aux_Cant = IIf(Not EsNulo(rs_Acu_Mes!amcant), rs_Acu_Mes!amcant, 0)
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 6) & "Valor: " & rs_Acu_Mes!ammonto
                    If EsNulo(rs_Acu_Mes!amcant) Then
                        Flog.writeline Espacios(Tabulador * 6) & "cantidad nula"
                    Else
                        Flog.writeline Espacios(Tabulador * 6) & "cantidad: " & rs_Acu_Mes!amcant
                    End If
                End If
            End If
        End If
        If rs_Acu_Mes!ammonto > Valor Then
            Valor = rs_Acu_Mes!ammonto
            Cantidad = IIf(Not EsNulo(rs_Acu_Mes!amcant), rs_Acu_Mes!amcant, 0)
        End If
    End If
    rs_Acu_Mes.MoveNext
Loop

' Si es desde el mes actual ==> busco el acu_liq de este proceso
If UsaActual Then
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 5) & "Busco el acu_liq de este proceso"
    End If
    
    ' FGZ - 09/02/2004
    If objCache_Acu_Liq_Monto.EsSimboloDefinido(CStr(Acu)) Then
        If objCache_Acu_Liq_Monto.Valor(CStr(Acu)) + Aux_Valor > Valor Then
            Valor = objCache_Acu_Liq_Monto.Valor(CStr(Acu)) + Aux_Valor
            Cantidad = objCache_Acu_Liq_Cantidad.Valor(CStr(Acu)) + Aux_Cant
        End If
    End If
End If

'FGZ - 09/02/2004
' esto se saca porque ahora estan en el cahce de acu_liq

'    StrSql = "SELECT * FROM acu_liq WHERE cliqnro = " & buliq_cabliq!cliqnro & _
'             " AND acunro =" & Acu
'    OpenRecordset StrSql, rs_Acu_Liq
'    If Not rs_Acu_Liq.EOF Then
'        If rs_Acu_Liq!ammonto > Valor Then
'            Valor = rs_Acu_Liq!ammonto
'            Cantidad = rs_Acu_Liq!amcant
'        End If
'    End If
'End If


' Cierro todo y libero
If rs_Fases.State = adStateOpen Then rs_Fases.Close
If rs_Acu_Mes.State = adStateOpen Then rs_Acu_Mes.Close
'If rs_Acu_Liq.State = adStateOpen Then rs_Acu_Liq.Close
Set rs_Fases = Nothing
Set rs_Acu_Mes = Nothing
'Set rs_Acu_Liq = Nothing
End Sub


Public Sub AM_Min(ByVal Acu As Long, ByVal MesHasta As Integer, ByVal AnioHasta As Integer, ByVal CantMeses As Integer, ByVal CantAnios As Integer, ByVal ConFases As Boolean, ByRef Valor As Double, ByRef Cantidad As Double, ByVal Imponibles As Boolean, ByVal UsaActual As Boolean, ByVal UsaPeriodoActual As Boolean)
' Busca en los meses anteriores, INCLUYENDO ACTUAL.
' Parametros : 1) Nro Acumulador                            -  Acu
'              2) Mes  hasta (mes en el que estoy parado)   -
'              3) Anio hasta (anio que estoy parado)        -
'              4) Cant meses anteriores                     -
'              5) Cant Anios anteriores                     -
'              6) con-fases                                 -
'              7) cantidad                                  -
'              8) monto.                                    -


Dim Hasta As Integer
Dim cantProm As Integer
Dim MesDesde As Integer
Dim AnioDesde As Integer

Dim rs_Fases As New ADODB.Recordset
Dim rs_Acu_Mes As New ADODB.Recordset
Dim rs_Acu_Liq As New ADODB.Recordset

Dim Encontro As Boolean
Dim Aux_Valor As Double
Dim Aux_Cant As Double


Encontro = False

Valor = 0
Cantidad = 0
Aux_Valor = 0
Aux_Cant = 0


If CantMeses > 12 Or MesHasta > 12 Or CantAnios > AnioHasta Then
    Exit Sub
End If

MesDesde = MesHasta - CantMeses + 1
AnioDesde = AnioHasta - CantAnios

If MesDesde <= 0 Then
    MesDesde = MesHasta + 12 - CantMeses + 1
    AnioDesde = AnioDesde - 1
End If

If MesDesde > 12 Then
    MesDesde = MesDesde - 12
    AnioDesde = AnioDesde - 1
End If


' Modificado para que tome el promedio para los jornales
If ConFases Then
    'FGZ - 16/04/2004
    'Busco la ultima fase activa
    StrSql = "SELECT * FROM fases WHERE real = -1 AND empleado = " & buliq_empleado!ternro
    StrSql = StrSql & " ORDER BY altfec"
    OpenRecordset StrSql, rs_Fases
    
    If Not rs_Fases.EOF Then
        'rs_Fases.MoveFirst
        rs_Fases.MoveLast
        If rs_Fases!altfec > C_Date("01/" & MesDesde & "/" & AnioDesde) Then
            MesDesde = Month(rs_Fases!altfec)
            AnioDesde = Year(rs_Fases!altfec)
        End If
    End If
Else
    'FGZ - 15/12/2004
    ' Se le saco esto porque traia problemas
'    If buliq_empleado!empfaltagr > c_date("01/" & MesDesde & "/" & AnioDesde) Then
'        MesDesde = Month(buliq_empleado!empfaltagr)
'        AnioDesde = Year(buliq_empleado!empfaltagr)
'    End If
End If

If Not Imponibles Then
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes =" & MesDesde
        Else
            StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes >= " & MesDesde & " AND  ammes <=" & MesHasta
        End If
    Else
        StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                 " AND acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = amanio AND ammes >= " & MesDesde & ") OR " & _
                 " (amanio > " & AnioDesde & " AND amanio < " & AnioHasta & ") OR " & _
                 " (ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))"
    End If
Else
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM acu_mes " & _
                     " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acu_mes.acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes =" & MesHasta & _
                     " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
        Else
            StrSql = "SELECT * FROM acu_mes " & _
                     " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acu_mes.acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes >= " & MesDesde & " AND  ammes <=" & MesHasta & _
                     " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
        End If
    Else
        StrSql = "SELECT * FROM acu_mes " & _
                 " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                 " WHERE ternro = " & buliq_empleado!ternro & _
                 " AND acu_mes.acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = amanio AND ammes >= " & MesDesde & ") OR " & _
                 " (amanio > " & AnioDesde & " AND amanio < " & AnioHasta & ") OR " & _
                 " (ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))" & _
                 " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
    End If
End If
StrSql = StrSql & " ORDER BY amanio, ammes"
OpenRecordset StrSql, rs_Acu_Mes

'If Not Imponibles Then
'    StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
'             " AND acunro =" & Acu & _
'             " AND " & AnioDesde & " <= amanio AND amanio <= " & AnioHasta & _
'             " AND (( ammes >=" & MesDesde & " AND " & AnioDesde & " <= amanio) OR ( ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))"
'Else
'    StrSql = "SELECT * FROM acu_mes " & _
'             " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
'             " WHERE ternro = " & buliq_empleado!ternro & _
'             " AND acu_mes.acunro =" & Acu & _
'             " AND " & AnioDesde & " <= amanio AND amanio <= " & AnioHasta & _
'             " AND (( ammes >=" & MesDesde & " AND " & AnioDesde & " <= amanio) OR ( ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))" & _
'             " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
'End If
'StrSql = StrSql & " ORDER BY amanio, ammes"
'OpenRecordset StrSql, rs_Acu_Mes

If Not rs_Acu_Mes.EOF Then
    'Me muevo al primero
    rs_Acu_Mes.MoveFirst
    If Not EsNulo(rs_Acu_Mes!ammonto) Then
        Encontro = True
        Valor = rs_Acu_Mes!ammonto
        Cantidad = rs_Acu_Mes!amcant
    End If
    rs_Acu_Mes.MoveNext
End If


Do While Not rs_Acu_Mes.EOF
    If Not EsNulo(rs_Acu_Mes!ammonto) Then
        If UsaPeriodoActual Then
            If rs_Acu_Mes!ammes = buliq_periodo!pliqmes Then
                Aux_Valor = Aux_Valor + rs_Acu_Mes!ammonto
                'Aux_Cant = Aux_Cant + rs_Acu_Mes!amcant
                Aux_Cant = IIf(Not EsNulo(rs_Acu_Mes!amcant), rs_Acu_Mes!amcant, 0)
            End If
        End If
        If rs_Acu_Mes!ammonto < Valor Then
            Valor = rs_Acu_Mes!ammonto
            Cantidad = IIf(Not EsNulo(rs_Acu_Mes!amcant), rs_Acu_Mes!amcant, 0)
        End If
    End If
    rs_Acu_Mes.MoveNext
Loop

' Si es desde el mes actual ==> busco el acu_liq de este proceso
If UsaActual Then
    ' FGZ - 09/02/2004
    If objCache_Acu_Liq_Monto.EsSimboloDefinido(CStr(Acu)) Then
        If Not Encontro Then
            Valor = objCache_Acu_Liq_Monto.Valor(CStr(Acu))
            Cantidad = objCache_Acu_Liq_Cantidad.Valor(CStr(Acu))
        Else
            If objCache_Acu_Liq_Monto.Valor(CStr(Acu)) + Aux_Valor < Valor Then
                Valor = objCache_Acu_Liq_Monto.Valor(CStr(Acu)) + Aux_Valor
                Cantidad = objCache_Acu_Liq_Cantidad.Valor(CStr(Acu)) + Aux_Cant
            End If
        End If
    End If
End If
    
' FGZ - 09/02/2004
' esto se saco porque ahora esta en el cache de acu_liq

'    StrSql = "SELECT * FROM acu_liq WHERE cliqnro = " & buliq_cabliq!cliqnro & _
'             " AND acunro =" & Acu
'    OpenRecordset StrSql, rs_Acu_Liq
'    If Not rs_Acu_Liq.EOF Then
'        If Not Encontro Then ' valor todavia no se seteo ==> retorno el del acu_liq de este proceso
'            Valor = rs_Acu_Liq!ammonto
'            Cantidad = rs_Acu_Liq!amcant
'        Else
'            If rs_Acu_Liq!ammonto < Valor Then
'                Valor = rs_Acu_Liq!ammonto
'                Cantidad = rs_Acu_Liq!amcant
'            End If
'        End If
'    End If
'End If

' Cierro todo y libero
If rs_Fases.State = adStateOpen Then rs_Fases.Close
If rs_Acu_Mes.State = adStateOpen Then rs_Acu_Mes.Close
'If rs_Acu_Liq.State = adStateOpen Then rs_Acu_Liq.Close
Set rs_Fases = Nothing
Set rs_Acu_Mes = Nothing
'Set rs_Acu_Liq = Nothing

End Sub


Public Sub AM_Min_Nuevo(ByVal Acu As Long, ByVal MesHasta As Integer, ByVal AnioHasta As Integer, ByVal CantMeses As Integer, ByVal CantAnios As Integer, ByVal ConFases As Boolean, ByRef Valor As Double, ByRef Cantidad As Double, ByVal Imponibles As Boolean, ByVal UsaActual As Boolean, ByVal TipoAcu As Integer)
' Busca en los meses anteriores, INCLUYENDO ACTUAL.
' Parametros : 1) Nro Acumulador                            -  Acu
'              2) Mes  hasta (mes en el que estoy parado)   -
'              3) Anio hasta (anio que estoy parado)        -
'              4) Cant meses anteriores                     -
'              5) Cant Anios anteriores                     -
'              6) con-fases                                 -
'              7) cantidad                                  -
'              8) monto.                                    -


Dim Hasta As Integer
Dim cantProm As Integer
Dim MesDesde As Integer
Dim AnioDesde As Integer

Dim rs_Fases As New ADODB.Recordset
Dim rs_ImpMes As New ADODB.Recordset
Dim rs_ImpPro As New ADODB.Recordset

Dim Encontro As Boolean

Encontro = False

Valor = 0
Cantidad = 0

If CantMeses > 12 Or MesHasta > 12 Or CantAnios > AnioHasta Then
    Exit Sub
End If

MesDesde = MesHasta - CantMeses + 1
AnioDesde = AnioHasta - CantAnios

If MesDesde <= 0 Then
    MesDesde = MesHasta + 12 - CantMeses + 1
    AnioDesde = AnioDesde - 1
End If

If MesDesde > 12 Then
    MesDesde = MesDesde - 12
    AnioDesde = AnioDesde - 1
End If


' Modificado para que tome el promedio para los jornales
If ConFases Then
    'FGZ - 16/04/2004
    'Busco la ultima fase activa
    StrSql = "SELECT * FROM fases WHERE real = -1 AND empleado = " & buliq_empleado!ternro
    StrSql = StrSql & " ORDER BY altfec"
    OpenRecordset StrSql, rs_Fases
    
    If Not rs_Fases.EOF Then
        'rs_Fases.MoveFirst
        rs_Fases.MoveLast
        If rs_Fases!altfec > C_Date("01/" & MesDesde & "/" & AnioDesde) Then
            MesDesde = Month(rs_Fases!altfec)
            AnioDesde = Year(rs_Fases!altfec)
        End If
    End If
Else
    'FGZ - 15/12/2004
    ' Se le saco esto porque traia problemas
'    If buliq_empleado!empfaltagr > c_date("01/" & MesDesde & "/" & AnioDesde) Then
'        MesDesde = Month(buliq_empleado!empfaltagr)
'        AnioDesde = Year(buliq_empleado!empfaltagr)
'    End If
End If

If TipoAcu = 0 Then 'Todos los tipos
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM impmesarg " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = imaanio " & _
                     " AND imames =" & MesHasta
        Else
            StrSql = "SELECT * FROM impmesarg " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = imaanio " & _
                     " AND imames >= " & MesDesde & " AND imames <=" & MesHasta
        End If
    Else
        StrSql = "SELECT * FROM impmesarg " & _
                 " WHERE ternro = " & buliq_empleado!ternro & _
                 " AND acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = imaanio AND imames >= " & MesDesde & ") OR " & _
                 " (imaanio > " & AnioDesde & " AND imaanio < " & AnioHasta & ") OR " & _
                 " (imames <=" & MesHasta & " AND imaanio = " & AnioHasta & "))"
    End If
Else
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM impmesarg " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND impmesarg.tconnro =" & TipoAcu & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = imaanio " & _
                     " AND imames =" & MesHasta
        Else
            StrSql = "SELECT * FROM impmesarg " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND impmesarg.tconnro =" & TipoAcu & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = imaanio " & _
                     " AND imames >= " & MesDesde & " AND imames <=" & MesHasta
        End If
    Else
        StrSql = "SELECT * FROM impmesarg " & _
                 " WHERE ternro = " & buliq_empleado!ternro & _
                 " AND impmesarg.tconnro =" & TipoAcu & _
                 " AND acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = imaanio AND imames >= " & MesDesde & ") OR " & _
                 " (imaanio > " & AnioDesde & " AND imaanio < " & AnioHasta & ") OR " & _
                 " (imames <=" & MesHasta & " AND imaanio = " & AnioHasta & "))"
    End If
End If
StrSql = StrSql & " ORDER BY imaanio, imames"
OpenRecordset StrSql, rs_ImpMes

'If TipoAcu = 0 Then 'Todos los tipos
'        StrSql = "SELECT * FROM impmesarg " & _
'                 " WHERE ternro = " & buliq_empleado!ternro & _
'                 " AND acunro =" & Acu & _
'                 " AND " & AnioDesde & " <= imaanio AND imaanio <= " & AnioHasta & _
'                 " AND (( imames >=" & MesDesde & " AND " & AnioDesde & " <= imaanio) OR ( imames <=" & MesHasta & " AND imaanio = " & AnioHasta & "))"
'Else
'        StrSql = "SELECT * FROM impmesarg " & _
'                 " WHERE ternro = " & buliq_empleado!ternro & _
'                 " AND impmesarg.tconnro =" & TipoAcu & _
'                 " AND acunro =" & Acu & _
'                 " AND " & AnioDesde & " <= imaanio AND imaanio <= " & AnioHasta & _
'                 " AND (( imames >=" & MesDesde & " AND " & AnioDesde & " <= imaanio) OR ( imames <=" & MesHasta & " AND imaanio = " & AnioHasta & "))"
'End If
'StrSql = StrSql & " ORDER BY imaanio, imames"
'OpenRecordset StrSql, rs_ImpMes

If Not rs_ImpMes.EOF Then
    'Me muevo al primero
    rs_ImpMes.MoveFirst
    If Not EsNulo(rs_ImpMes!imamonto) Then
        Encontro = True
        Valor = rs_ImpMes!imamonto
        Cantidad = IIf(Not EsNulo(rs_ImpMes!imacant), rs_ImpMes!imacant, 0)
    End If
    rs_ImpMes.MoveNext
End If

Do While Not rs_ImpMes.EOF
        If rs_ImpMes!imamonto < Valor Then
            Valor = rs_ImpMes!imamonto
            Cantidad = rs_ImpMes!imacant
        End If
    rs_ImpMes.MoveNext
Loop

' Si es desde el mes actual ==> busco el acu_liq de este proceso
If UsaActual Then
    If TipoAcu = 0 Then 'Todos los tipos
        StrSql = "SELECT * FROM impproarg WHERE cliqnro = " & buliq_cabliq!cliqnro & _
                 " AND acunro =" & Acu
    Else
        StrSql = "SELECT * FROM impproarg WHERE cliqnro = " & buliq_cabliq!cliqnro & _
                 " AND acunro =" & Acu & " AND tconnro = " & TipoAcu
    End If
    OpenRecordset StrSql, rs_ImpPro
    If Not rs_ImpPro.EOF Then
        If Not Encontro Then ' valor todavia no se seteo ==> retorno el del acu_liq de este proceso
            Valor = IIf(Not EsNulo(rs_ImpPro!ipamonto), rs_ImpPro!ipamonto, 0)
            Cantidad = IIf(Not EsNulo(rs_ImpPro!ipacant), rs_ImpPro!ipacant, 0)
        Else
            If Not EsNulo(rs_ImpPro!ipamonto) Then
                If rs_ImpPro!ipamonto < Valor Then
                    Valor = rs_ImpPro!ipamonto
                    Cantidad = IIf(Not EsNulo(rs_ImpPro!ipacant), rs_ImpPro!ipacant, 0)
                End If
            End If
        End If
    End If
End If

' Cierro todo y libero
If rs_Fases.State = adStateOpen Then rs_Fases.Close
If rs_ImpMes.State = adStateOpen Then rs_ImpMes.Close
If rs_ImpPro.State = adStateOpen Then rs_ImpPro.Close
Set rs_Fases = Nothing
Set rs_ImpPro = Nothing
Set rs_ImpMes = Nothing

End Sub


Public Sub bus_Acum5()
' ---------------------------------------------------------------------------------------------
' Descripcion: Obtencion del promedio del acumulador para asignaciones familiares. gacum5.p
' Autor      : FGZ
' Fecha      :
' Ultima Mod.: FGZ - 02/04/2004
' Descripcion: se agregó un parametro. Promedio con o sin Cero.
'              Si este parametro es nulo utiliza promedio sin 0 y sino
'              se evalua y se usa la funcion que corresponda
' ---------------------------------------------------------------------------------------------

Dim nroAcu As Long          ' Nro de Acumulador - acumulador.acunro
Dim Con_Fases As Boolean    ' True  - Calculo con fases

Dim CantMeses As Integer
Dim CantAnios As Integer
Dim MesHasta As Integer
Dim AnioHasta As Integer
Dim Aux_Anio As Integer
Dim Cantidad As Double
Dim Con_cero As Boolean

'Dim Param_cur As New ADODB.Recordset
Dim rs_Periodo As New ADODB.Recordset
Dim rs_Acu As New ADODB.Recordset
    
    Bien = False
    Valor = 0

    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        nroAcu = Arr_Programa(NroProg).Auxint1
        Con_Fases = CBool(Arr_Programa(NroProg).Auxlog1)
        Con_cero = Not IIf(Not EsNulo(Arr_Programa(NroProg).Auxlog2), CBool(Arr_Programa(NroProg).Auxlog2), True)
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontró la Busqueda "
        End If
        Exit Sub
    End If


    If buliq_periodo!pliqmes > 8 Then
        Aux_Anio = buliq_periodo!pliqanio
    Else
        Aux_Anio = buliq_periodo!pliqanio - 1
    End If
    
    CantMeses = 6
    
    If buliq_periodo!pliqmes >= 3 And buliq_periodo!pliqmes <= 8 Then
        MesHasta = 12
    Else
        MesHasta = 6
    End If
    AnioHasta = Aux_Anio
    
    ' Promedio de los meses anteriores
    If Con_cero Then
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Promedio con ceros de los meses anteriores "
        End If
        Call AM_Prom(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, False, CantMeses, False)
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Promedio sin ceros de los meses anteriores "
        End If
        Call AM_PromSin0(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, False, False)
    End If

    If Valor = 0 Then
        ' FGZ - 09/02/2004
        If objCache_Acu_Liq_Monto.EsSimboloDefinido(CStr(nroAcu)) Then
            Valor = objCache_Acu_Liq_Monto.Valor(CStr(nroAcu))
            Cantidad = objCache_Acu_Liq_Cantidad.Valor(CStr(nroAcu))
        End If
        
'        StrSql = "SELECT * FROM acu_liq " & _
'                 " AND acu_liq.cliqnro = " & buliq_cabliq!cliqnro & _
'                 " AND acu_liq.acunro = " & NroAcu
'        OpenRecordset StrSql, RS_Acu
'
'        If Not RS_Acu.EOF Then
'            Valor = RS_Acu!almonto
'            Cantidad = RS_Acu!alcant
'        End If
    End If
    
    Bien = True
    
    
' Cierro todo y libero
'If Param_cur.State = adStateOpen Then Param_cur.Close
If rs_Acu.State = adStateOpen Then rs_Acu.Close
'Set Param_cur = Nothing
Set rs_Acu = Nothing

End Sub

Public Sub AM_Prom(ByVal Acu As Long, ByVal MesHasta As Integer, ByVal AnioHasta As Integer, ByVal CantMeses As Integer, ByVal CantAnios As Integer, ByVal ConFases As Boolean, ByRef Valor As Double, ByRef Cantidad As Double, ByVal Imponibles As Boolean, ByVal UsaActual As Boolean, ByVal DividePor As Integer, ByVal UsaPeriodoActual As Boolean)
' Promedio de los meses anteriores, incluyendo el actual, toma en cuenta
' la primera fase del empleado o la fecha de alta del empleado
' -------------------------------------------------------------
'Parametros
    '1 - Nro de acumulador                          - Acu
    '2 - Mes Hasta, el mes en el que estoy parado   - MesHasta
    '3 - Año hasta, año en el que estoy parado      - AnioHasta
    '4 - Cantidad de Meses anteiores                - CantMeses
    '5 - Cantidad de Años anteriores                - CantAnios
    '6 - Con fases                                  - ConFases
    '7 - Monto                                      - ByRef Valor
    '8 - Cantidad                                   - Byref Cantidad
    '10 - Por la cantidad de Meses que divide
'Ultima Mod:
'    FGZ 17/05/2006 - si el parametro DividePor viene en 0 ==> divido por cantProm
' ------------------------------------------------------------
Dim I As Integer
Dim j As Integer
Dim Hasta As Integer
Dim cantProm As Integer
Dim MesDesde As Integer
Dim AnioDesde As Integer

Dim rs_Fases As New ADODB.Recordset
Dim rs_Acu_Mes As New ADODB.Recordset
Dim rs_Acu_Liq As New ADODB.Recordset

If CantMeses > 12 Or MesHasta > 12 Or CantAnios > AnioHasta Then
    Exit Sub
End If

MesDesde = MesHasta - CantMeses + 1
AnioDesde = AnioHasta - CantAnios


If MesDesde <= 0 Then
    MesDesde = MesHasta + 12 - CantMeses + 1
    AnioDesde = AnioDesde - 1
End If

If MesDesde > 12 Then
    MesDesde = MesDesde - 12
    AnioDesde = AnioDesde - 1
End If


' Modificado para que tome el promedio para los jornales
If ConFases Then
    'FGZ - 16/04/2004
    'Busco la ultima fase activa
    StrSql = "SELECT * FROM fases WHERE real = -1 AND empleado = " & buliq_empleado!ternro
    StrSql = StrSql & " ORDER BY altfec"
    OpenRecordset StrSql, rs_Fases
    
    If Not rs_Fases.EOF Then
        'rs_Fases.MoveFirst
        rs_Fases.MoveLast
        If rs_Fases!altfec > C_Date("01/" & MesDesde & "/" & AnioDesde) Then
            MesDesde = Month(rs_Fases!altfec)
            AnioDesde = Year(rs_Fases!altfec)
        End If
    End If
Else
    'FGZ - 15/12/2004
    ' Se le saco esto porque traia problemas
'    If buliq_empleado!empfaltagr > c_date("01/" & MesDesde & "/" & AnioDesde) Then
'        MesDesde = Month(buliq_empleado!empfaltagr)
'        AnioDesde = Year(buliq_empleado!empfaltagr)
'    End If
End If

If Not Imponibles Then
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes =" & MesDesde
        Else
            StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes >= " & MesDesde & " AND  ammes <=" & MesHasta
        End If
    Else
        StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                 " AND acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = amanio AND ammes >= " & MesDesde & ") OR " & _
                 " (amanio > " & AnioDesde & " AND amanio < " & AnioHasta & ") OR " & _
                 " (ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))"
    End If
Else
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM acu_mes " & _
                     " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acu_mes.acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes =" & MesHasta & _
                     " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
        Else
            StrSql = "SELECT * FROM acu_mes " & _
                     " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acu_mes.acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes >= " & MesDesde & " AND  ammes <=" & MesHasta & _
                     " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
        End If
    Else
        StrSql = "SELECT * FROM acu_mes " & _
                 " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                 " WHERE ternro = " & buliq_empleado!ternro & _
                 " AND acu_mes.acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = amanio AND ammes >= " & MesDesde & ") OR " & _
                 " (amanio > " & AnioDesde & " AND amanio < " & AnioHasta & ") OR " & _
                 " (ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))" & _
                 " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
    End If
End If
StrSql = StrSql & " ORDER BY amanio, ammes"
OpenRecordset StrSql, rs_Acu_Mes

'If Not Imponibles Then
'    StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
'             " AND acunro =" & Acu & _
'             " AND " & AnioDesde & " <= amanio AND amanio <= " & AnioHasta & _
'             " AND (( ammes >=" & MesDesde & " AND " & AnioDesde & " <= amanio) OR ( ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))"
'Else
'    StrSql = "SELECT * FROM acu_mes " & _
'             " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
'             " WHERE ternro = " & buliq_empleado!ternro & _
'             " AND acu_mes.acunro =" & Acu & _
'             " AND " & AnioDesde & " <= amanio AND amanio <= " & AnioHasta & _
'             " AND (( ammes >=" & MesDesde & " AND " & AnioDesde & " <= amanio) OR ( ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))" & _
'             " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
'End If
'StrSql = StrSql & " ORDER BY amanio, ammes"
'OpenRecordset StrSql, rs_Acu_Mes

cantProm = 0
Do While Not rs_Acu_Mes.EOF
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Acumula Monto " & IIf(Not EsNulo(rs_Acu_Mes!ammonto), rs_Acu_Mes!ammonto, 0)
            Flog.writeline Espacios(Tabulador * 4) & "Acumula Cantidad " & IIf(Not EsNulo(rs_Acu_Mes!amcant), rs_Acu_Mes!amcant, 0)
        End If

        Valor = Valor + IIf(Not EsNulo(rs_Acu_Mes!ammonto), rs_Acu_Mes!ammonto, 0)
        Cantidad = Cantidad + IIf(Not EsNulo(rs_Acu_Mes!amcant), rs_Acu_Mes!amcant, 0)
        cantProm = cantProm + 1
    rs_Acu_Mes.MoveNext
Loop

' Si es desde el mes actual ==> busco el acu_liq de este proceso
If UsaActual Then
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Busco el actual "
    End If

    ' FGZ - 09/02/2004
    If objCache_Acu_Liq_Monto.EsSimboloDefinido(CStr(Acu)) Then
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Acumula Monto " & objCache_Acu_Liq_Monto.Valor(CStr(Acu))
            Flog.writeline Espacios(Tabulador * 4) & "Acumula Cantidad " & objCache_Acu_Liq_Cantidad.Valor(CStr(Acu))
        End If
        
        Valor = Valor + objCache_Acu_Liq_Monto.Valor(CStr(Acu))
        Cantidad = Cantidad + objCache_Acu_Liq_Cantidad.Valor(CStr(Acu))
        cantProm = cantProm + 1
    End If

'    StrSql = "SELECT * FROM acu_liq WHERE cliqnro = " & buliq_cabliq!cliqnro & _
'             " AND acunro =" & Acu
'    OpenRecordset StrSql, rs_Acu_Liq
'    If Not rs_Acu_Liq.EOF Then
'        Valor = Valor + rs_Acu_Liq!almonto
'        Cantidad = Cantidad + rs_Acu_Liq!alcant
'        cantProm = cantProm + 1
'    End If
End If
If CBool(USA_DEBUG) Then
    Flog.writeline Espacios(Tabulador * 4) & "Meses evaluados " & cantProm
End If


If CBool(USA_DEBUG) Then
    Flog.writeline Espacios(Tabulador * 4) & "Acumulado Monto " & Valor
    Flog.writeline Espacios(Tabulador * 4) & "Acumulado Cantidad " & Cantidad
End If

If DividePor <> 0 Then
    'Valor = Valor / cantProm
    Valor = Valor / DividePor
    'Cantidad = Cantidad / cantProm
    Cantidad = Cantidad / DividePor
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Divide por " & DividePor
        Flog.writeline Espacios(Tabulador * 4) & "Total Monto " & Valor
        Flog.writeline Espacios(Tabulador * 4) & "Total Cantidad " & Cantidad
    End If
Else
    'FGZ - 17/05/2006
    If cantProm <> 0 Then
        Valor = Valor / cantProm
        Cantidad = Cantidad / cantProm
    Else
        Valor = 0
        Cantidad = 0
    End If
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Divide por " & cantProm
        Flog.writeline Espacios(Tabulador * 4) & "Total Monto " & Valor
        Flog.writeline Espacios(Tabulador * 4) & "Total Cantidad " & Cantidad
    End If
End If


' Cierro todo y libero
If rs_Fases.State = adStateOpen Then rs_Fases.Close
If rs_Acu_Mes.State = adStateOpen Then rs_Acu_Mes.Close
'If rs_Acu_liq.State = adStateOpen Then rs_Acu_Liq.Close
Set rs_Fases = Nothing
Set rs_Acu_Mes = Nothing
'Set rs_Acu_Liq = Nothing

End Sub

Public Sub AM_Prom_Nuevo(ByVal Acu As Long, ByVal MesHasta As Integer, ByVal AnioHasta As Integer, ByVal CantMeses As Integer, ByVal CantAnios As Integer, ByVal ConFases As Boolean, ByRef Valor As Double, ByRef Cantidad As Double, ByVal Imponibles As Boolean, ByVal UsaActual As Boolean, ByVal TipoAcu As Integer, ByVal DividePor As Integer)
' Promedio de los meses anteriores, incluyendo el actual, toma en cuenta
' la primera fase del empleado o la fecha de alta del empleado
' -------------------------------------------------------------
'Parametros
    '1 - Nro de acumulador                          - Acu
    '2 - Mes Hasta, el mes en el que estoy parado   - MesHasta
    '3 - Año hasta, año en el que estoy parado      - AnioHasta
    '4 - Cantidad de Meses anteiores                - CantMeses
    '5 - Cantidad de Años anteriores                - CantAnios
    '6 - Con fases                                  - ConFases
    '7 - Monto                                      - ByRef Valor
    '8 - Cantidad                                   - Byref Cantidad
' ------------------------------------------------------------

Dim I As Integer
Dim j As Integer
Dim Hasta As Integer
Dim cantProm As Integer
Dim MesDesde As Integer
Dim AnioDesde As Integer

Dim rs_Fases As New ADODB.Recordset
Dim rs_ImpMes As New ADODB.Recordset
Dim rs_ImpPro As New ADODB.Recordset

If CantMeses > 12 Or MesHasta > 12 Or CantAnios > AnioHasta Then
    Exit Sub
End If

MesDesde = MesHasta - CantMeses + 1
AnioDesde = AnioHasta - CantAnios


If MesDesde <= 0 Then
    MesDesde = MesHasta + 12 - CantMeses + 1
    AnioDesde = AnioDesde - 1
End If

If MesDesde > 12 Then
    MesDesde = MesDesde - 12
    AnioDesde = AnioDesde - 1
End If


' Modificado para que tome el promedio para los jornales
If ConFases Then
    'FGZ - 16/04/2004
    'Busco la ultima fase activa
    StrSql = "SELECT * FROM fases WHERE real = -1 AND empleado = " & buliq_empleado!ternro
    StrSql = StrSql & " ORDER BY altfec"
    OpenRecordset StrSql, rs_Fases
    
    If Not rs_Fases.EOF Then
        'rs_Fases.MoveFirst
        rs_Fases.MoveLast
        If rs_Fases!altfec > C_Date("01/" & MesDesde & "/" & AnioDesde) Then
            MesDesde = Month(rs_Fases!altfec)
            AnioDesde = Year(rs_Fases!altfec)
        End If
    End If
Else
    'FGZ - 15/12/2004
    ' Se le saco esto porque traia problemas
'    If buliq_empleado!empfaltagr > c_date("01/" & MesDesde & "/" & AnioDesde) Then
'        MesDesde = Month(buliq_empleado!empfaltagr)
'        AnioDesde = Year(buliq_empleado!empfaltagr)
'    End If
End If

If TipoAcu = 0 Then 'Todos los tipos
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM impmesarg " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = imaanio " & _
                     " AND imames =" & MesHasta
        Else
            StrSql = "SELECT * FROM impmesarg " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = imaanio " & _
                     " AND imames >= " & MesDesde & " AND imames <=" & MesHasta
        End If
    Else
        StrSql = "SELECT * FROM impmesarg " & _
                 " WHERE ternro = " & buliq_empleado!ternro & _
                 " AND acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = imaanio AND imames >= " & MesDesde & ") OR " & _
                 " (imaanio > " & AnioDesde & " AND imaanio < " & AnioHasta & ") OR " & _
                 " (imames <=" & MesHasta & " AND imaanio = " & AnioHasta & "))"
    End If
Else
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM impmesarg " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND impmesarg.tconnro =" & TipoAcu & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = imaanio " & _
                     " AND imames =" & MesHasta
        Else
            StrSql = "SELECT * FROM impmesarg " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND impmesarg.tconnro =" & TipoAcu & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = imaanio " & _
                     " AND imames >= " & MesDesde & " AND imames <=" & MesHasta
        End If
    Else
        StrSql = "SELECT * FROM impmesarg " & _
                 " WHERE ternro = " & buliq_empleado!ternro & _
                 " AND impmesarg.tconnro =" & TipoAcu & _
                 " AND acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = imaanio AND imames >= " & MesDesde & ") OR " & _
                 " (imaanio > " & AnioDesde & " AND imaanio < " & AnioHasta & ") OR " & _
                 " (imames <=" & MesHasta & " AND imaanio = " & AnioHasta & "))"
    End If
End If
StrSql = StrSql & " ORDER BY imaanio, imames"
OpenRecordset StrSql, rs_ImpMes


'If TipoAcu = 0 Then 'Todos los tipos
'        StrSql = "SELECT * FROM impmesarg " & _
'                 " WHERE ternro = " & buliq_empleado!ternro & _
'                 " AND acunro =" & Acu & _
'                 " AND " & AnioDesde & " <= imaanio AND imaanio <= " & AnioHasta & _
'                 " AND (( imames >=" & MesDesde & " AND " & AnioDesde & " <= imaanio) OR ( imames <=" & MesHasta & " AND imaanio = " & AnioHasta & "))"
'Else
'        StrSql = "SELECT * FROM impmesarg " & _
'                 " WHERE ternro = " & buliq_empleado!ternro & _
'                 " AND impmesarg.tconnro =" & TipoAcu & _
'                 " AND acunro =" & Acu & _
'                 " AND " & AnioDesde & " <= imaanio AND imaanio <= " & AnioHasta & _
'                 " AND (( imames >=" & MesDesde & " AND " & AnioDesde & " <= imaanio) OR ( imames <=" & MesHasta & " AND imaanio = " & AnioHasta & "))"
'End If
'StrSql = StrSql & " ORDER BY imaanio, imames"
'OpenRecordset StrSql, rs_ImpMes

cantProm = 0
Do While Not rs_ImpMes.EOF
    Valor = Valor + IIf(Not EsNulo(rs_ImpMes!imamonto), rs_ImpMes!imamonto, 0)
    Cantidad = Cantidad + IIf(Not EsNulo(rs_ImpMes!imacant), rs_ImpMes!imacant, 0)
    cantProm = cantProm + 1
    
    rs_ImpMes.MoveNext
Loop

' Si es desde el mes actual ==> busco el acu_liq de este proceso
If UsaActual Then
    If TipoAcu = 0 Then 'Todos los tipos
        StrSql = "SELECT * FROM impproarg WHERE cliqnro = " & buliq_cabliq!cliqnro & _
                 " AND acunro =" & Acu
    Else
        StrSql = "SELECT * FROM impproarg WHERE cliqnro = " & buliq_cabliq!cliqnro & _
                 " AND acunro =" & Acu & " AND tconnro = " & TipoAcu
    End If
    OpenRecordset StrSql, rs_ImpPro
    If Not rs_ImpPro.EOF Then
        If Not EsNulo(rs_ImpPro!ipamonto) Then
            Valor = Valor + rs_ImpPro!ipamonto
            Cantidad = Cantidad + IIf(Not EsNulo(rs_ImpPro!ipacant), rs_ImpPro!ipacant, 0)
            cantProm = cantProm + 1
        End If
    End If
End If

If cantProm <> 0 Then
    'Valor = Valor / cantProm
    Valor = Valor / DividePor
    'Cantidad = Cantidad / cantProm
    Cantidad = Cantidad / DividePor
Else
    Valor = 0
    Cantidad = 0
End If


' Cierro todo y libero
If rs_Fases.State = adStateOpen Then rs_Fases.Close
If rs_ImpPro.State = adStateOpen Then rs_ImpPro.Close
If rs_ImpMes.State = adStateOpen Then rs_ImpMes.Close
Set rs_Fases = Nothing
Set rs_ImpPro = Nothing
Set rs_ImpMes = Nothing

End Sub

Public Sub AM_PromSin0(ByVal Acu As Long, ByVal MesHasta As Integer, ByVal AnioHasta As Integer, ByVal CantMeses As Integer, ByVal CantAnios As Integer, ByVal ConFases As Boolean, ByRef Valor As Double, ByRef Cantidad As Double, ByVal Imponibles As Boolean, ByVal UsaActual As Boolean, ByVal UsaPeriodoActual As Boolean)
' Promedio de los meses anteriores, incluyendo el actual, toma en cuenta
' la primera fase del empleado o la fecha de alta del empleado
' Sin tener en cuenta los que son 0
' -------------------------------------------------------------
'Parametros
    '1 - Nro de acumulador                          - Acu
    '2 - Mes Hasta, el mes en el que estoy parado   - MesHasta
    '3 - Año hasta, año en el que estoy parado      - AnioHasta
    '4 - Cantidad de Meses anteiores                - CantMeses
    '5 - Cantidad de Años anteriores                - CantAnios
    '6 - Con fases                                  - ConFases
    '7 - Monto                                      - ByRef Valor
    '8 - Cantidad                                   - Byref Cantidad
' ------------------------------------------------------------

Dim I As Integer
Dim j As Integer
Dim Hasta As Integer
Dim cantProm As Integer
Dim MesDesde As Integer
Dim AnioDesde As Integer

Dim rs_Fases As New ADODB.Recordset
Dim rs_Acu_Mes As New ADODB.Recordset
Dim rs_Acu_Liq As New ADODB.Recordset

If CantMeses > 12 Or MesHasta > 12 Or CantAnios > AnioHasta Then
    Exit Sub
End If

MesDesde = MesHasta - CantMeses + 1
AnioDesde = AnioHasta - CantAnios

If MesDesde <= 0 Then
    MesDesde = MesHasta + 12 - CantMeses + 1
    AnioDesde = AnioDesde - 1
End If

If MesDesde > 12 Then
    MesDesde = MesDesde - 12
    AnioDesde = AnioDesde - 1
End If


' Modificado para que tome el promedio para los jornales
If ConFases Then
    'FGZ - 16/04/2004
    'Busco la ultima fase activa
    StrSql = "SELECT * FROM fases WHERE real = -1 AND empleado = " & buliq_empleado!ternro
    StrSql = StrSql & " ORDER BY altfec"
    OpenRecordset StrSql, rs_Fases
    
    If Not rs_Fases.EOF Then
        'rs_Fases.MoveFirst
        rs_Fases.MoveLast
        If rs_Fases!altfec > C_Date("01/" & MesDesde & "/" & AnioDesde) Then
            MesDesde = Month(rs_Fases!altfec)
            AnioDesde = Year(rs_Fases!altfec)
        End If
    End If
Else
    'FGZ - 15/12/2004
    ' Se le saco esto porque traia problemas
'    If buliq_empleado!empfaltagr > c_date("01/" & MesDesde & "/" & AnioDesde) Then
'        MesDesde = Month(buliq_empleado!empfaltagr)
'        AnioDesde = Year(buliq_empleado!empfaltagr)
'    End If
End If

If Not Imponibles Then
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes =" & MesDesde
        Else
            StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes >= " & MesDesde & " AND  ammes <=" & MesHasta
        End If
    Else
        StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                 " AND acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = amanio AND ammes >= " & MesDesde & ") OR " & _
                 " (amanio > " & AnioDesde & " AND amanio < " & AnioHasta & ") OR " & _
                 " (ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))"
    End If
Else
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM acu_mes " & _
                     " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acu_mes.acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes =" & MesHasta & _
                     " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
        Else
            StrSql = "SELECT * FROM acu_mes " & _
                     " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acu_mes.acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes >= " & MesDesde & " AND  ammes <=" & MesHasta & _
                     " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
        End If
    Else
        StrSql = "SELECT * FROM acu_mes " & _
                 " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                 " WHERE ternro = " & buliq_empleado!ternro & _
                 " AND acu_mes.acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = amanio AND ammes >= " & MesDesde & ") OR " & _
                 " (amanio > " & AnioDesde & " AND amanio < " & AnioHasta & ") OR " & _
                 " (ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))" & _
                 " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
    End If
End If
StrSql = StrSql & " ORDER BY amanio, ammes"
OpenRecordset StrSql, rs_Acu_Mes

'If Not Imponibles Then
'    StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
'             " AND acunro =" & Acu & _
'             " AND " & AnioDesde & " <= amanio AND amanio <= " & AnioHasta & _
'             " AND (( ammes >=" & MesDesde & " AND " & AnioDesde & " <= amanio) OR ( ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))"
'Else
'    StrSql = "SELECT * FROM acu_mes " & _
'             " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
'             " WHERE ternro = " & buliq_empleado!ternro & _
'             " AND acu_mes.acunro =" & Acu & _
'             " AND " & AnioDesde & " <= amanio AND amanio <= " & AnioHasta & _
'             " AND (( ammes >=" & MesDesde & " AND " & AnioDesde & " <= amanio) OR ( ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))" & _
'             " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
'End If
'StrSql = StrSql & " ORDER BY amanio, ammes"
'OpenRecordset StrSql, rs_Acu_Mes

cantProm = 0
Do While Not rs_Acu_Mes.EOF
    If Not EsNulo(rs_Acu_Mes!ammonto) Then
        If rs_Acu_Mes!ammonto <> 0 Then ' si el monto es cero ==> no lo tengo en cuenta
            Valor = Valor + rs_Acu_Mes!ammonto
            Cantidad = Cantidad + IIf(Not EsNulo(rs_Acu_Mes!amcant), rs_Acu_Mes!amcant, 0)
            cantProm = cantProm + 1
        End If
    End If
    rs_Acu_Mes.MoveNext
Loop

' Si es desde el mes actual ==> busco el acu_liq de este proceso
If UsaActual Then
    ' FGZ - 09/02/2004
    If objCache_Acu_Liq_Monto.EsSimboloDefinido(CStr(Acu)) Then
        If objCache_Acu_Liq_Monto.Valor(CStr(Acu)) <> 0 Then
            Valor = Valor + objCache_Acu_Liq_Monto.Valor(CStr(Acu))
            Cantidad = Cantidad + objCache_Acu_Liq_Cantidad.Valor(CStr(Acu))
            cantProm = cantProm + 1
        End If
    End If

'    StrSql = "SELECT * FROM acu_liq WHERE cliqnro = " & buliq_cabliq!cliqnro & _
'             " AND acunro =" & Acu
'    OpenRecordset StrSql, rs_Acu_Liq
'    If Not rs_Acu_Liq.EOF Then
'        If rs_Acu_Liq!almonto <> 0 Then ' si el monto es cero ==> no lo tengo en cuenta
'            Valor = Valor + rs_Acu_Liq!almonto
'            Cantidad = Cantidad + rs_Acu_Liq!alcant
'            cantProm = cantProm + 1
'        End If
'    End If
End If

If cantProm <> 0 Then
    Valor = Valor / cantProm
    Cantidad = Cantidad / cantProm
Else
    Valor = 0
    Cantidad = 0
End If


' Cierro todo y libero
If rs_Fases.State = adStateOpen Then rs_Fases.Close
If rs_Acu_Mes.State = adStateOpen Then rs_Acu_Mes.Close
'If rs_Acu_Liq.State = adStateOpen Then rs_Acu_Liq.Close
Set rs_Fases = Nothing
Set rs_Acu_Mes = Nothing
'Set rs_Acu_Liq = Nothing

End Sub

Public Sub AM_PromSin0_Nuevo(ByVal Acu As Long, ByVal MesHasta As Integer, ByVal AnioHasta As Integer, ByVal CantMeses As Integer, ByVal CantAnios As Integer, ByVal ConFases As Boolean, ByRef Valor As Double, ByRef Cantidad As Double, ByVal Imponibles As Boolean, ByVal UsaActual As Boolean, ByVal TipoAcu As Integer)
' Promedio de los meses anteriores, incluyendo el actual, toma en cuenta
' la primera fase del empleado o la fecha de alta del empleado
' Sin tener en cuenta los que son 0
' -------------------------------------------------------------
'Parametros
    '1 - Nro de acumulador                          - Acu
    '2 - Mes Hasta, el mes en el que estoy parado   - MesHasta
    '3 - Año hasta, año en el que estoy parado      - AnioHasta
    '4 - Cantidad de Meses anteiores                - CantMeses
    '5 - Cantidad de Años anteriores                - CantAnios
    '6 - Con fases                                  - ConFases
    '7 - Monto                                      - ByRef Valor
    '8 - Cantidad                                   - Byref Cantidad
' ------------------------------------------------------------

Dim I As Integer
Dim j As Integer
Dim Hasta As Integer
Dim cantProm As Integer
Dim MesDesde As Integer
Dim AnioDesde As Integer

Dim rs_Fases As New ADODB.Recordset
Dim rs_ImpMes As New ADODB.Recordset
Dim rs_ImpPro As New ADODB.Recordset

If CantMeses > 12 Or MesHasta > 12 Or CantAnios > AnioHasta Then
    Exit Sub
End If

MesDesde = MesHasta - CantMeses + 1
AnioDesde = AnioHasta - CantAnios


If MesDesde <= 0 Then
    MesDesde = MesHasta + 12 - CantMeses + 1
    AnioDesde = AnioDesde - 1
End If

If MesDesde > 12 Then
    MesDesde = MesDesde - 12
    AnioDesde = AnioDesde - 1
End If


' Modificado para que tome el promedio para los jornales
If ConFases Then
    'FGZ - 16/04/2004
    'Busco la ultima fase activa
    StrSql = "SELECT * FROM fases WHERE real = -1 AND empleado = " & buliq_empleado!ternro
    StrSql = StrSql & " ORDER BY altfec"
    OpenRecordset StrSql, rs_Fases
    
    If Not rs_Fases.EOF Then
        'rs_Fases.MoveFirst
        rs_Fases.MoveLast
        If rs_Fases!altfec > C_Date("01/" & MesDesde & "/" & AnioDesde) Then
            MesDesde = Month(rs_Fases!altfec)
            AnioDesde = Year(rs_Fases!altfec)
        End If
    End If
Else
    'FGZ - 15/12/2004
    ' Se le saco esto porque traia problemas
'    If buliq_empleado!empfaltagr > c_date("01/" & MesDesde & "/" & AnioDesde) Then
'        MesDesde = Month(buliq_empleado!empfaltagr)
'        AnioDesde = Year(buliq_empleado!empfaltagr)
'    End If
End If

If TipoAcu = 0 Then 'Todos los tipos
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM impmesarg " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = imaanio " & _
                     " AND imames =" & MesHasta
        Else
            StrSql = "SELECT * FROM impmesarg " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = imaanio " & _
                     " AND imames >= " & MesDesde & " AND imames <=" & MesHasta
        End If
    Else
        StrSql = "SELECT * FROM impmesarg " & _
                 " WHERE ternro = " & buliq_empleado!ternro & _
                 " AND acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = imaanio AND imames >= " & MesDesde & ") OR " & _
                 " (imaanio > " & AnioDesde & " AND imaanio < " & AnioHasta & ") OR " & _
                 " (imames <=" & MesHasta & " AND imaanio = " & AnioHasta & "))"
    End If
Else
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM impmesarg " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND impmesarg.tconnro =" & TipoAcu & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = imaanio " & _
                     " AND imames =" & MesHasta
        Else
            StrSql = "SELECT * FROM impmesarg " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND impmesarg.tconnro =" & TipoAcu & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = imaanio " & _
                     " AND imames >= " & MesDesde & " AND imames <=" & MesHasta
        End If
    Else
        StrSql = "SELECT * FROM impmesarg " & _
                 " WHERE ternro = " & buliq_empleado!ternro & _
                 " AND impmesarg.tconnro =" & TipoAcu & _
                 " AND acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = imaanio AND imames >= " & MesDesde & ") OR " & _
                 " (imaanio > " & AnioDesde & " AND imaanio < " & AnioHasta & ") OR " & _
                 " (imames <=" & MesHasta & " AND imaanio = " & AnioHasta & "))"
    End If
End If
StrSql = StrSql & " ORDER BY imaanio, imames"
OpenRecordset StrSql, rs_ImpMes


'If TipoAcu = 0 Then 'Todos los tipos
'        StrSql = "SELECT * FROM impmesarg " & _
'                 " WHERE ternro = " & buliq_empleado!ternro & _
'                 " AND acunro =" & Acu & _
'                 " AND " & AnioDesde & " <= imaanio AND imaanio <= " & AnioHasta & _
'                 " AND (( imames >=" & MesDesde & " AND " & AnioDesde & " <= imaanio) OR ( imames <=" & MesHasta & " AND imaanio = " & AnioHasta & "))"
'Else
'        StrSql = "SELECT * FROM impmesarg " & _
'                 " WHERE ternro = " & buliq_empleado!ternro & _
'                 " AND impmesarg.tconnro =" & TipoAcu & _
'                 " AND acunro =" & Acu & _
'                 " AND " & AnioDesde & " <= imaanio AND imaanio <= " & AnioHasta & _
'                 " AND (( imames >=" & MesDesde & " AND " & AnioDesde & " <= imaanio) OR ( imames <=" & MesHasta & " AND imaanio = " & AnioHasta & "))"
'End If
'StrSql = StrSql & " ORDER BY imaanio, imames"
'OpenRecordset StrSql, rs_ImpMes

cantProm = 0
Do While Not rs_ImpMes.EOF
    If Not EsNulo(rs_ImpMes!imamonto) Then
        If rs_ImpMes!imamonto <> 0 Then ' si el monto es cero ==> no lo tengo en cuenta
            Valor = Valor + rs_ImpMes!imamonto
            Cantidad = Cantidad + IIf(Not EsNulo(rs_ImpMes!imacant), rs_ImpMes!imacant, 0)
            cantProm = cantProm + 1
        End If
    End If
    rs_ImpMes.MoveNext
Loop

' Si es desde el mes actual ==> busco el acu_liq de este proceso
If UsaActual Then
    If TipoAcu = 0 Then 'Todos los tipos
        StrSql = "SELECT * FROM impproarg WHERE cliqnro = " & buliq_cabliq!cliqnro & _
                 " AND acunro =" & Acu
    Else
        StrSql = "SELECT * FROM impproarg WHERE cliqnro = " & buliq_cabliq!cliqnro & _
                 " AND acunro =" & Acu & " AND tconnro = " & TipoAcu
    End If
    OpenRecordset StrSql, rs_ImpPro
    If Not rs_ImpPro.EOF Then
        If Not EsNulo(rs_ImpPro!ipamonto) Then
            If rs_ImpPro!ipamonto <> 0 Then ' si el monto es cero ==> no lo tengo en cuenta
                Valor = Valor + rs_ImpPro!ipamonto
                Cantidad = Cantidad + IIf(Not EsNulo(rs_ImpPro!ipacant), rs_ImpPro!ipacant, 0)
                cantProm = cantProm + 1
            End If
        End If
    End If
End If

If cantProm <> 0 Then
    Valor = Valor / cantProm
    Cantidad = Cantidad / cantProm
Else
    Valor = 0
    Cantidad = 0
End If


' Cierro todo y libero
If rs_Fases.State = adStateOpen Then rs_Fases.Close
If rs_ImpMes.State = adStateOpen Then rs_ImpMes.Close
If rs_ImpPro.State = adStateOpen Then rs_ImpPro.Close
Set rs_Fases = Nothing
Set rs_ImpMes = Nothing
Set rs_ImpPro = Nothing

End Sub


Public Sub bus_Campo0()
' ---------------------------------------------------------------------------------------------
' Descripcion: Busca un campo en la BD. gcampo0.p
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim NroCampo As Long    'buscampo.bcnro

'Dim Param_cur As New ADODB.Recordset
Dim rs_campo As New ADODB.Recordset

    Bien = False
    Valor = 0

    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        NroCampo = Arr_Programa(NroProg).Auxint1
    Else
        Exit Sub
    End If

    StrSql = "SELECT * FROM buscampo WHERE bcnro = " & NroCampo
    OpenRecordset StrSql, rs_campo
    
    If Not rs_campo.EOF Then
        Bien = True
    End If


' Cierro todo y libero
'If Param_cur.State = adStateOpen Then Param_cur.Close
If rs_campo.State = adStateOpen Then rs_campo.Close
Set rs_campo = Nothing
'Set Param_cur = Nothing

End Sub


Public Sub bus_Remun0()
' ---------------------------------------------------------------------------------------------
' Descripcion: Sumatoria de las Remuneraciones de las Ganancias, a partir de
'              Fecha de Pago ó Mes/Año del periodo. gremun0.p
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------

Dim FecPago As Boolean  ' True  - Mes/Año del Periodo
                        ' False - Fecha de Pago

'Dim Param_cur As New ADODB.Recordset
Dim rs_FichaRem As New ADODB.Recordset
    
'Definiciones Auxiliares
Dim Anio As Integer
Dim Rem_Per As Double
Dim ded_per As Double
Dim FechaPago As Date
Dim FechaAux As Date
Dim AuxDia As Integer
Dim AuxMes As Integer
Dim AuxAnio As Integer

    Bien = False
    Valor = 0

    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        FecPago = CBool(Arr_Programa(NroProg).Auxint1)
    Else
        Exit Sub
    End If

If FecPago Then
    If Not EsNulo(buliq_proceso!profecpago) Then
        FechaPago = buliq_proceso!profecpago
    Else
        FechaPago = Date ' La fecha de hoy
    End If
    
    AuxDia = 1
    If Month(FechaPago) = 12 Then
        AuxMes = 1
        AuxAnio = Year(FechaPago) + 1
    Else
        AuxMes = Month(FechaPago) + 1
        AuxAnio = Year(FechaPago) - 1
    End If
    
    FechaAux = C_Date(AuxDia & "/" & AuxMes & "/" & AuxAnio)
Else
    AuxDia = 1
    If buliq_periodo!pliqmes = 12 Then
        AuxMes = 1
        AuxAnio = buliq_periodo!pliqanio + 1
    Else
        AuxMes = buliq_periodo!pliqmes + 1
        AuxAnio = buliq_periodo!pliqanio - 1
    End If
    
    FechaAux = C_Date(AuxDia & "/" & AuxMes & "/" & AuxAnio)
    
    Anio = buliq_periodo!pliqanio
End If

' Calculo de Remuneaciones del año
If FecPago Then
    StrSql = "SELECT * FROM ficharem WHERE empleado = " & buliq_cabliq!Empleado & _
             " fecha <= " & FechaAux
Else
    StrSql = "SELECT * FROM ficharem WHERE empleado = " & buliq_cabliq!Empleado & _
             " fecha <= " & FechaAux & _
             " AND fecha >= " & C_Date("01/01/" & Anio) & _
             " AND fecha <= " & C_Date("31/12/" & Anio)
End If
OpenRecordset StrSql, rs_FichaRem

Rem_Per = 0
Do While Not rs_FichaRem.EOF
    Rem_Per = Rem_Per + rs_FichaRem!sujapor + rs_FichaRem!nsujapor + rs_FichaRem!nremgcias
        
    rs_FichaRem.MoveNext
Loop

Bien = True
Valor = Rem_Per

' Cierro todo y libero
'If Param_cur.State = adStateOpen Then Param_cur.Close
If rs_FichaRem.State = adStateOpen Then rs_FichaRem.Close
'Set Param_cur = Nothing
Set rs_FichaRem = Nothing

End Sub


Public Sub bus_Concep1()
' ---------------------------------------------------------------------------------------------
' Descripcion: Genera la novedad a nivel Global, Grupal o Individual. gconcep1.p
' Autor      : FGZ
' Fecha      :
' Ultima Mod.: FGZ - 28/09/2004
' Descripcion: vigencias
' ---------------------------------------------------------------------------------------------

Dim CodConc As Long       ' Nro de Concepto
Dim NroTpar As Long       ' Nro de parametro
Dim General As Boolean    ' Global
Dim Grupal As Boolean     ' Grupal
Dim Individual As Boolean ' Individual

Dim Firmado As Boolean
Dim Vigencia_Activa As Boolean
Dim Encontro As Boolean

Dim rs_NovEmp As New ADODB.Recordset
Dim rs_NovEstr As New ADODB.Recordset
Dim rs_NovGral As New ADODB.Recordset
Dim rs_firmas As New ADODB.Recordset
Dim rs_His_Estructura As New ADODB.Recordset

    Bien = False
    Valor = 0
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda " & NroProg
    End If
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    General = False
    Grupal = False
    Individual = False
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        CodConc = Arr_Programa(NroProg).Auxint1
        NroTpar = Arr_Programa(NroProg).Auxint2
        General = CBool(Arr_Programa(NroProg).Auxlog3)
        Grupal = CBool(Arr_Programa(NroProg).Auxlog2)
        Individual = CBool(Arr_Programa(NroProg).Auxlog1)
        
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busca la novedad de otro concepto " & IIf(General, "Global ", "") & IIf(Grupal, "Estructura ", "") & IIf(Individual, "Individual ", "")
        End If
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontró la busqueda la Busqueda " & NroProg
        End If
        Exit Sub
    End If

    If Individual Then
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Individual, por empleado "
        End If
    
        StrSql = "SELECT * FROM novemp WHERE " & _
                 " concnro = " & CodConc & _
                 " AND tpanro = " & NroTpar & _
                 " AND empleado = " & buliq_cabliq!Empleado & _
                 " AND ((nevigencia = -1 " & _
                 " AND nedesde < " & ConvFecha(Fecha_Fin) & _
                 " AND (nehasta >= " & ConvFecha(Fecha_Inicio) & _
                 " OR nehasta is null )) " & _
                 " OR nevigencia = 0)" & _
                 " ORDER BY nevigencia, nedesde, nehasta "
        OpenRecordset StrSql, rs_NovEmp
        
        Valor = 0
        Do While Not rs_NovEmp.EOF
            If FirmaActiva5 Then
                '/* Verificar si esta en el NIVEL FINAL DE FIRMA */
                StrSql = "select * from cysfirmas where cysfirfin = -1 " & _
                         " AND cysfircodext = '" & rs_NovEmp!nenro & "' and cystipnro = 5"
                OpenRecordset StrSql, rs_firmas
                If rs_firmas.EOF Then
                    Firmado = False
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "NIVEL FINAL DE FIRMA No Activo "
                    End If
                Else
                    Firmado = True
                End If
                If rs_firmas.State = adStateOpen Then rs_firmas.Close
            Else
                Firmado = True
            End If

            If Firmado Then
                If CBool(rs_NovEmp!nevigencia) Then
                    Vigencia_Activa = True
                    If Not EsNulo(rs_NovEmp!nehasta) Then
                        If (rs_NovEmp!nehasta < Fecha_Inicio) Or (Fecha_Fin < rs_NovEmp!nedesde) Then
                            'Exit Sub
                            Vigencia_Activa = False
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovEmp!nedesde & " Hasta " & rs_NovEmp!nehasta & " INACTIVA con valor " & rs_NovEmp!nevalor
                            End If
                        Else
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovEmp!nedesde & " Hasta " & rs_NovEmp!nehasta & " ACTIVA con valor " & rs_NovEmp!nevalor
                            End If
                        End If
                    Else
                        If (Fecha_Fin < rs_NovEmp!nedesde) Then
                            'Exit Sub
                            Vigencia_Activa = False
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovEmp!nedesde & " Hasta indeterminado INACTIVA con valor " & rs_NovEmp!nevalor
                            End If
                        Else
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovEmp!nedesde & " Hasta indeterminado ACTIVA con valor " & rs_NovEmp!nevalor
                            End If
                        End If
                    End If
                Else
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "Novedad sin vigencia con valor " & rs_NovEmp!nevalor
                    End If
                End If
                
                If Vigencia_Activa Or Not CBool(rs_NovEmp!nevigencia) Then
                    Valor = Valor + rs_NovEmp!nevalor
                End If
                If Not EsNulo(rs_NovEmp!neretro) Then
                    Retro = rs_NovEmp!neretro
                End If
                
                Encontro = True
            End If 'If Firmado Then
        
            rs_NovEmp.MoveNext
        Loop
        If Not Encontro Then
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "No se encontró ninguna Novedad Individual "
            End If
        End If
        If Encontro Then
            Bien = True
            Exit Sub
        End If
    End If
'------------------------------------------------------------------------------------------------
'------------------------------------------------------------------------------------------------
    
    If Grupal Then
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Por estructura "
        End If
    
        StrSql = "SELECT * FROM novestr WHERE " & _
                 " concnro = " & CodConc & _
                 " AND tpanro = " & NroTpar & _
                 " AND ((ntevigencia = -1 " & _
                 " AND ntedesde < " & ConvFecha(Fecha_Fin) & _
                 " AND (ntehasta >= " & ConvFecha(Fecha_Inicio) & " " & _
                 " OR ntehasta is null)) " & _
                 " OR ntevigencia = 0) " & _
                 " ORDER BY ntevigencia, ntedesde, ntehasta "
        OpenRecordset StrSql, rs_NovEstr
        
        Encontro = False
        If rs_NovEstr.EOF Then
            Firmado = False
        End If
        Valor = 0
        Do While Not rs_NovEstr.EOF 'And Not Encontro
            If FirmaActiva15 Then
                '/* Verificar si esta en el NIVEL FINAL DE FIRMA */
                    StrSql = "select * from cysfirmas where cysfirfin = -1 " & _
                             " AND cysfircodext = '" & rs_NovEstr!estrnro & "' and cystipnro = 15"
                    OpenRecordset StrSql, rs_firmas
                    If rs_firmas.EOF Then
                        Firmado = False
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "NIVEL FINAL DE FIRMA No Activo "
                        End If
                    Else
                        Firmado = True
                    End If
                If rs_firmas.State = adStateOpen Then rs_firmas.Close
            Else
                Firmado = True
            End If
            
            If Firmado Then
                If CBool(rs_NovEstr!ntevigencia) Then
                    Vigencia_Activa = True
                    If Not EsNulo(rs_NovEstr!ntehasta) Then
                        If (rs_NovEstr!ntehasta < Fecha_Inicio) Or (Fecha_Fin < rs_NovEstr!ntedesde) Then
                            'Exit Sub
                            Vigencia_Activa = False
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovEstr!ntedesde & " Hasta " & rs_NovEstr!ntehasta & " INACTIVA con valor " & rs_NovEstr!ntevalor
                            End If
                        Else
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovEstr!ntedesde & " Hasta " & rs_NovEstr!ntehasta & " ACTIVA con valor " & rs_NovEstr!ntevalor
                            End If
                        End If
                    Else
                        If (Fecha_Fin < rs_NovEstr!ntedesde) Then
                            Vigencia_Activa = False
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovEstr!ntedesde & " Hasta indeterminado INACTIVA con valor " & rs_NovEstr!ntevalor
                            End If
                        Else
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovEstr!ntedesde & " Hasta indeterminado ACTIVA con valor " & rs_NovEstr!ntevalor
                            End If
                        End If
                    End If
                End If
                
                If Vigencia_Activa Or Not CBool(rs_NovEstr!ntevigencia) Then
                    Encontro = False
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "busco que el empleado tenga la estructura " & rs_NovEstr!estrnro & " activa"
                    End If
                    
                    'busco que el empleado tenga esa estructura activa
                    StrSql = " SELECT tenro, estrnro FROM his_estructura " & _
                             " WHERE ternro = " & buliq_empleado!ternro & " AND " & _
                             " estrnro =" & rs_NovEstr!estrnro & _
                             " AND (htetdesde <= " & ConvFecha(Empleado_Fecha_Fin) & ") AND " & _
                             " ((" & ConvFecha(Empleado_Fecha_Fin) & " <= htethasta) or (htethasta is null))"
                    OpenRecordset StrSql, rs_His_Estructura
                    If Not rs_His_Estructura.EOF Then
                        Valor = Valor + rs_NovEstr!ntevalor
                        If Not EsNulo(rs_NovEstr!nteretro) Then
                            Retro = rs_NovEstr!nteretro
                        End If
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "Estructura " & rs_NovEstr!estrnro & " activa"
                        End If
                        
                        Encontro = True
                    Else
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "Estructura " & rs_NovEstr!estrnro & " No activa"
                        End If
                    End If
                End If
            End If 'firmado
            
            rs_NovEstr.MoveNext
        Loop
        If Not Encontro Then
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "No se encontró ninguna Novedad por Estructura"
            End If
        End If
        If Encontro Then
            Bien = True
            Exit Sub
        End If
    End If
'------------------------------------------------------------------------------------------------
'------------------------------------------------------------------------------------------------

    If General Then
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Global "
        End If
    
        If objCache_NovGlobales.EsSimboloDefinido(CStr(CodConc & "-" & NroTpar)) Then
            Valor = objCache_NovGlobales.Valor(CStr(CodConc & "-" & NroTpar))
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Novedad en Cache con valor " & Valor
            End If
            
            Encontro = True
        Else
            StrSql = "SELECT * FROM novgral WHERE " & _
                     " concnro = " & CodConc & _
                     " AND tpanro = " & NroTpar & _
                     " AND ((ngravigencia = -1 " & _
                     " AND ngradesde < " & ConvFecha(Fecha_Fin) & " " & _
                     " AND (ngrahasta >= " & ConvFecha(Fecha_Inicio) & " " & _
                     " OR ngrahasta is null)) " & _
                     " OR ngravigencia = 0) " & _
                     " ORDER BY ngravigencia, ngradesde, ngrahasta "
            OpenRecordset StrSql, rs_NovGral
               
            Do While Not rs_NovGral.EOF
                If FirmaActiva19 Then
                    '/* Verificar si esta en el NIVEL FINAL DE FIRMA */
                        StrSql = "select * from cysfirmas where cysfirfin = -1 " & _
                                 " AND cysfircodext = '" & rs_NovGral!ngranro & "' and cystipnro = 19"
                        OpenRecordset StrSql, rs_firmas
                        If rs_firmas.EOF Then
                            Firmado = False
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "NIVEL FINAL DE FIRMA No Activo "
                            End If
                        Else
                            Firmado = True
                        End If
                    If rs_firmas.State = adStateOpen Then rs_firmas.Close
                Else
                    Firmado = True
                End If
            
                If Firmado Then
                    If CBool(rs_NovGral!ngravigencia) Then
                        Vigencia_Activa = True
                        If Not EsNulo(rs_NovGral!ngrahasta) Then
                            If (rs_NovGral!ngrahasta < Fecha_Inicio) Or (Fecha_Fin < rs_NovGral!ngradesde) Then
                                 Vigencia_Activa = False
                                If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovGral!ngradesde & " Hasta " & rs_NovGral!ngrahasta & " INACTIVA con valor " & rs_NovGral!ngravalor
                                End If
                            Else
                                If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovGral!ngradesde & " Hasta " & rs_NovGral!ngrahasta & " ACTIVA con valor " & rs_NovGral!ngravalor
                                End If
                            End If
                        Else
                            If (Fecha_Fin < rs_NovGral!ngradesde) Then
                                 Vigencia_Activa = False
                                If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovGral!ngradesde & " Hasta indeterminado INACTIVA con valor " & rs_NovGral!ngravalor
                                End If
                            Else
                                If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovGral!ngradesde & " Hasta indeterminado ACTIVA con valor " & rs_NovGral!ngravalor
                                End If
                            End If
                        End If
                    End If
                    
                    If Vigencia_Activa Or Not CBool(rs_NovGral!ngravigencia) Then
                        Valor = Valor + rs_NovGral!ngravalor
                        
                        If Not EsNulo(rs_NovGral!ngraretro) Then
                            Retro = rs_NovGral!ngraretro
                        End If
                        
                        Encontro = True
                    End If
                End If 'If Firmado Then
                
                rs_NovGral.MoveNext
            Loop
        End If
        If Not Encontro Then
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "No se encontró ninguna Novedad global"
            End If
        Else
            'inserto la novedad en el cache
            Call objCache_NovGlobales.Insertar_Simbolo(CStr(CodConc & "-" & NroTpar & "0"), Valor)
        End If
        Bien = True
        Exit Sub
    End If

' cierro todo y libero
    If rs_NovEmp.State = adStateOpen Then rs_NovEmp.Close
    If rs_NovEstr.State = adStateOpen Then rs_NovEstr.Close
    If rs_NovGral.State = adStateOpen Then rs_NovGral.Close
    If rs_firmas.State = adStateOpen Then rs_firmas.Close
    If rs_His_Estructura.State = adStateOpen Then rs_His_Estructura.Close
        
    Set rs_NovEmp = Nothing
    Set rs_NovEstr = Nothing
    Set rs_NovGral = Nothing
    Set rs_firmas = Nothing
    Set rs_His_Estructura = Nothing
    
End Sub


Public Sub bus_Prestamos()
' ---------------------------------------------------------------------------------------------
' Descripcion: Obtencion de los prestamos de cualquier tipo de prestamos.
'              Mensuales, 1era o 2da quincena.
'       gprest00.p
' Autor      : FGZ
' Fecha      : 04/06/2004
' Ultima Mod.: 15/09/2005
' Descripcion: Se agregó la opcion de retornar: 1)Todo, 2)solo cuota pura ó 3)solo interes
' ---------------------------------------------------------------------------------------------
Dim Final As Boolean        'Liquidacion Final
Dim Cancela As Boolean      'Si cancela las cuaotas y prestamos o no
Dim Nrotp As Long           'Tipo de Prestamos
Dim CodMone As Integer      ' Moneda.monnro
Dim Opcion As Integer       ' 1 - Mensual
                            ' 2 - 1er Quincena
                            ' 3 - 2da Quincena
Dim Tipo_Monto As Integer   ' 1 - Todo
                            ' 2 - Solo la cuota pura
                            ' 3 - Solo los intereses

'Dim Param_cur As New ADODB.Recordset
Dim rs_Prestamo As New ADODB.Recordset
Dim rs_Cuota As New ADODB.Recordset
Dim rs_Aux_Cuota As New ADODB.Recordset

    Bien = False
    Valor = 0
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda "
    End If
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        If EsNulo(Arr_Programa(NroProg).Auxint1) Then
            Nrotp = -1 ' Todos
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Todos los Acumuladores "
            End If
        Else
            If Arr_Programa(NroProg).Auxint1 = 0 Then
                Nrotp = -1 ' Todos
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "Todos los Tipos de Prestamos "
                End If
            Else
                Nrotp = Arr_Programa(NroProg).Auxint1
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "Acumulador " & Nrotp
                End If
            End If
        End If
        
        If EsNulo(Arr_Programa(NroProg).Auxint2) Then
            CodMone = -1 ' Todas
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Para Todas las Monedas "
            End If
        Else
            If Arr_Programa(NroProg).Auxint2 = 0 Then
                CodMone = -1 ' Todas
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "Para Todas las Monedas "
                End If
            Else
                CodMone = Arr_Programa(NroProg).Auxint2
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "Para la Moneda " & CodMone
                End If
            End If
        End If
        
        Opcion = Arr_Programa(NroProg).Auxint3
        
        Final = CBool(Arr_Programa(NroProg).Auxlog1)
        
        If EsNulo(Arr_Programa(NroProg).Auxint4) Then
            Tipo_Monto = 1  'Valor por default
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Retorna Monto completo (cuota + interes) "
            End If
        Else
            If Arr_Programa(NroProg).Auxint4 = 0 Then
                Tipo_Monto = 1  'Valor por default
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "Retorna Monto completo (cuota + interes) "
                End If
            Else
                Tipo_Monto = Arr_Programa(NroProg).Auxint4
                If CBool(USA_DEBUG) Then
                    Select Case Tipo_Monto
                    Case 1:
                        Flog.writeline Espacios(Tabulador * 4) & "Retorna Monto completo (cuota + interes) "
                    Case 2:
                        Flog.writeline Espacios(Tabulador * 4) & "Retorna Cuota Pura "
                    Case 3:
                        Flog.writeline Espacios(Tabulador * 4) & "Retorna solo los interes "
                    Case Else
                        Tipo_Monto = 1
                        Flog.writeline Espacios(Tabulador * 4) & "Retorna Monto completo (cuota + interes) "
                    End Select
                End If
            End If
        End If
        
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Parametros cargados "
        End If
        
        Cancela = IIf(Not EsNulo(Arr_Programa(NroProg).Auxlog2), CBool(Arr_Programa(NroProg).Auxlog2), True)
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontró la busqueda " & NroProg
        End If
        Exit Sub
    End If


If Final Then 'se trata de una liq. final se descuentan todas las cuotas
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "se trata de una liq. final se descuentan todas las cuotas "
    End If

    Select Case Opcion
    Case 1: 'Prestamos Mensuales
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busco los prestamos mensuales "
        End If
        StrSql = "SELECT * FROM prestamo "
        StrSql = StrSql & " INNER JOIN pre_linea ON pre_linea.lnprenro = prestamo.lnprenro "
        StrSql = StrSql & " WHERE prestamo.ternro = " & buliq_empleado!ternro
        StrSql = StrSql & " AND  prestamo.estnro = 3 "
        StrSql = StrSql & " AND prestamo.quincenal = 0 "
        If CodMone <> -1 Then
            StrSql = StrSql & " AND prestamo.monnro =" & CodMone
        End If
        If Nrotp <> -1 Then
            StrSql = StrSql & " AND pre_linea.tpnro =" & Nrotp
        End If
        OpenRecordset StrSql, rs_Prestamo
        
        If CBool(USA_DEBUG) Then
            If rs_Prestamo.EOF Then
                Flog.writeline Espacios(Tabulador * 4) & "No se encontraron prestamos "
            End If
        End If
        Do While Not rs_Prestamo.EOF
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Busco las cuotas para el prestamo " & rs_Prestamo!prenro
            End If
            StrSql = "SELECT * FROM pre_cuota "
            StrSql = StrSql & " WHERE pre_cuota.prenro =" & rs_Prestamo!prenro
            StrSql = StrSql & " AND pre_cuota.cuocancela = 0 "
            OpenRecordset StrSql, rs_Cuota
            
            If CBool(USA_DEBUG) Then
                If rs_Cuota.EOF Then
                    Flog.writeline Espacios(Tabulador * 4) & "No se encontraron cuotas "
                End If
            End If
            Do While Not rs_Cuota.EOF
                Select Case Tipo_Monto
                Case 1:
                    Valor = Valor + rs_Cuota!cuototal
                Case 2:
                    Valor = Valor + (rs_Cuota!cuoimp - rs_Cuota!cuointeres)
                Case 3:
                    Valor = Valor + rs_Cuota!cuointeres
                Case Else
                    Valor = Valor + rs_Cuota!cuototal
                End Select
                
                If Cancela Then
                    StrSql = "UPDATE pre_cuota SET pronro =" & buliq_proceso!pronro
                    StrSql = StrSql & ", cuocancela = -1 "
                    StrSql = StrSql & " WHERE pre_cuota.cuonro = " & rs_Cuota!cuonro
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "Cuota " & rs_Cuota!cuonro & " cancelada."
                    End If
                End If
                
                Bien = True
                rs_Cuota.MoveNext
            Loop
            
'            StrSql = "SELECT * FROM pre_cuota "
'            StrSql = StrSql & " WHERE pre_cuota.prenro =" & rs_Prestamo!prenro
'            StrSql = StrSql & " AND pre_cuota.cuocancela = 0 "
'            OpenRecordset StrSql, rs_Aux_Cuota
'            If rs_Aux_Cuota.EOF Then
            If Cancela Then
                StrSql = "UPDATE prestamo SET estnro = 6"
                StrSql = StrSql & " WHERE prenro = " & rs_Prestamo!prenro
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
'            End If
            
            rs_Prestamo.MoveNext
        Loop
        
    Case 2, 3: 'Prestamos de la Primera y Segunda Quincena
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busco los prestamos de la primera y segunda quincena "
        End If
    
        StrSql = "SELECT * FROM prestamo "
        StrSql = StrSql & " INNER JOIN pre_linea ON pre_linea.lnprenro = prestamo.lnprenro "
        StrSql = StrSql & " WHERE prestamo.ternro = " & buliq_empleado!ternro
        StrSql = StrSql & " AND  prestamo.estnro = 3 "
        StrSql = StrSql & " AND prestamo.quincenal = -1 "
        If CodMone <> -1 Then
            StrSql = StrSql & " AND prestamo.monnro =" & CodMone
        End If
        If Nrotp <> -1 Then
            StrSql = StrSql & " AND pre_linea.tpnro =" & Nrotp
        End If
        OpenRecordset StrSql, rs_Prestamo
        
        If CBool(USA_DEBUG) Then
            If rs_Prestamo.EOF Then
                Flog.writeline Espacios(Tabulador * 4) & "No se encontraron prestamos "
            End If
        End If
        
        Do While Not rs_Prestamo.EOF
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Busco las cuotas para el prestamo " & rs_Prestamo!prenro
            End If
            StrSql = "SELECT * FROM pre_cuota "
            StrSql = StrSql & " WHERE pre_cuota.prenro =" & rs_Prestamo!prenro
            StrSql = StrSql & " AND pre_cuota.cuocancela = 0 "
            OpenRecordset StrSql, rs_Cuota
            
            If CBool(USA_DEBUG) Then
                If rs_Cuota.EOF Then
                    Flog.writeline Espacios(Tabulador * 4) & "No se encontraron cuotas "
                End If
            End If
            
            Do While Not rs_Cuota.EOF
                Select Case Tipo_Monto
                Case 1:
                    Valor = Valor + rs_Cuota!cuototal
                Case 2:
                    Valor = Valor + (rs_Cuota!cuoimp - rs_Cuota!cuointeres)
                Case 3:
                    Valor = Valor + rs_Cuota!cuointeres
                Case Else
                    Valor = Valor + rs_Cuota!cuototal
                End Select
                
                If Cancela Then
                    StrSql = "UPDATE pre_cuota SET pronro =" & buliq_proceso!pronro
                    StrSql = StrSql & ", cuocancela = -1 "
                    StrSql = StrSql & " WHERE pre_cuota.cuonro = " & rs_Cuota!cuonro
                    objConn.Execute StrSql, , adExecuteNoRecords
                End If
                Bien = True
                
                rs_Cuota.MoveNext
            Loop
            
'            StrSql = "SELECT * FROM pre_cuota "
'            StrSql = StrSql & " WHERE pre_cuota.prenro =" & rs_Prestamo!prenro
'            StrSql = StrSql & " AND pre_cuota.cuocancela = 0 "
'            OpenRecordset StrSql, rs_Aux_Cuota
'            If rs_Aux_Cuota.EOF Then
            If Cancela Then
                StrSql = "UPDATE prestamo SET estnro = 6"
                StrSql = StrSql & " WHERE prenro = " & rs_Prestamo!prenro
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
'            End If
            
            rs_Prestamo.MoveNext
        Loop
    End Select
Else 'liquidacion mensual o quincenal
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "se trata de una liquidacion mensual o quincenal "
    End If

    Select Case Opcion
    Case 1: 'Prestamos Mensuales
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busco los prestamos mensuales "
        End If
        StrSql = "SELECT * FROM prestamo "
        StrSql = StrSql & " INNER JOIN pre_linea ON pre_linea.lnprenro = prestamo.lnprenro "
        StrSql = StrSql & " WHERE prestamo.ternro = " & buliq_empleado!ternro
        StrSql = StrSql & " AND  prestamo.estnro = 3 "
        StrSql = StrSql & " AND prestamo.quincenal = 0 "
        If CodMone <> -1 Then
            StrSql = StrSql & " AND prestamo.monnro =" & CodMone
        End If
        If Nrotp <> -1 Then
            StrSql = StrSql & " AND pre_linea.tpnro =" & Nrotp
        End If
        OpenRecordset StrSql, rs_Prestamo
        
        If CBool(USA_DEBUG) Then
            If rs_Prestamo.EOF Then
                Flog.writeline Espacios(Tabulador * 4) & "No se encontraron prestamos "
            End If
        End If
        
        Do While Not rs_Prestamo.EOF
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Busco las cuotas para el prestamo " & rs_Prestamo!prenro
            End If
        
            StrSql = "SELECT * FROM pre_cuota "
            StrSql = StrSql & " WHERE pre_cuota.prenro =" & rs_Prestamo!prenro
            StrSql = StrSql & " AND pre_cuota.cuocancela = 0 "
            StrSql = StrSql & " AND pre_cuota.cuoano = " & buliq_periodo!pliqanio
            StrSql = StrSql & " AND pre_cuota.cuomes = " & buliq_periodo!pliqmes
            OpenRecordset StrSql, rs_Cuota
            
            If CBool(USA_DEBUG) Then
                If rs_Cuota.EOF Then
                    Flog.writeline Espacios(Tabulador * 4) & "No se encontraron cuotas "
                End If
            End If
            
            Do While Not rs_Cuota.EOF
                Select Case Tipo_Monto
                Case 1:
                    Valor = Valor + rs_Cuota!cuototal
                Case 2:
                    Valor = Valor + (rs_Cuota!cuoimp - rs_Cuota!cuointeres)
                Case 3:
                    Valor = Valor + rs_Cuota!cuointeres
                Case Else
                    Valor = Valor + rs_Cuota!cuototal
                End Select
                
                If Cancela Then
                    StrSql = "UPDATE pre_cuota SET pronro =" & buliq_proceso!pronro
                    StrSql = StrSql & ", cuocancela = -1 "
                    StrSql = StrSql & " WHERE pre_cuota.cuonro = " & rs_Cuota!cuonro
                    objConn.Execute StrSql, , adExecuteNoRecords
                End If
                Bien = True
                
                rs_Cuota.MoveNext
            Loop
            
'            StrSql = "SELECT * FROM pre_cuota "
'            StrSql = StrSql & " WHERE pre_cuota.prenro =" & rs_Prestamo!prenro
'            StrSql = StrSql & " AND pre_cuota.cuocancela = 0 "
'            OpenRecordset StrSql, rs_Aux_Cuota
'            If rs_Aux_Cuota.EOF Then
'                StrSql = "UPDATE prestamo SET estnro = 6"
'                StrSql = StrSql & " WHERE prenro = " & rs_Prestamo!prenro
'                StrSql = StrSql & " AND pre_cuota.cuoano = " & buliq_periodo!pliqanio
'                StrSql = StrSql & " AND pre_cuota.cuomes = " & buliq_periodo!pliqmes
'                objConn.Execute StrSql, , adExecuteNoRecords
'            End If
            
            rs_Prestamo.MoveNext
        Loop
        
    Case 2: 'Prestamos de la Primera quincena
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busco los prestamos de la primera quincena "
        End If
    
        StrSql = "SELECT * FROM prestamo "
        StrSql = StrSql & " INNER JOIN pre_linea ON pre_linea.lnprenro = prestamo.lnprenro "
        StrSql = StrSql & " WHERE prestamo.ternro = " & buliq_empleado!ternro
        StrSql = StrSql & " AND  prestamo.estnro = 3 "
        StrSql = StrSql & " AND prestamo.quincenal = -1 "
        If CodMone <> -1 Then
            StrSql = StrSql & " AND prestamo.monnro =" & CodMone
        End If
        If Nrotp <> -1 Then
            StrSql = StrSql & " AND pre_linea.tpnro =" & Nrotp
        End If
        OpenRecordset StrSql, rs_Prestamo
        
        If CBool(USA_DEBUG) Then
            If rs_Prestamo.EOF Then
                Flog.writeline Espacios(Tabulador * 4) & "No se encontraron prestamos "
            End If
        End If
        Do While Not rs_Prestamo.EOF
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Busco las cuotas para el prestamo " & rs_Prestamo!prenro
            End If
        
            StrSql = "SELECT * FROM pre_cuota "
            StrSql = StrSql & " WHERE pre_cuota.prenro =" & rs_Prestamo!prenro
            StrSql = StrSql & " AND pre_cuota.cuocancela = 0 "
            StrSql = StrSql & " AND pre_cuota.cuoquin = 1 "
            StrSql = StrSql & " AND pre_cuota.cuoano = " & buliq_periodo!pliqanio
            StrSql = StrSql & " AND pre_cuota.cuomes = " & buliq_periodo!pliqmes
            OpenRecordset StrSql, rs_Cuota
            
            If CBool(USA_DEBUG) Then
                If rs_Cuota.EOF Then
                    Flog.writeline Espacios(Tabulador * 4) & "No se encontraron cuotas "
                End If
            End If
            
            Do While Not rs_Cuota.EOF
                Select Case Tipo_Monto
                Case 1:
                    Valor = Valor + rs_Cuota!cuototal
                Case 2:
                    Valor = Valor + (rs_Cuota!cuoimp - rs_Cuota!cuointeres)
                Case 3:
                    Valor = Valor + rs_Cuota!cuointeres
                Case Else
                    Valor = Valor + rs_Cuota!cuototal
                End Select
                
                If Cancela Then
                    StrSql = "UPDATE pre_cuota SET pronro =" & buliq_proceso!pronro
                    StrSql = StrSql & ", cuocancela = -1 "
                    StrSql = StrSql & " WHERE pre_cuota.cuonro = " & rs_Cuota!cuonro
                    objConn.Execute StrSql, , adExecuteNoRecords
                End If
                Bien = True
                
                rs_Cuota.MoveNext
            Loop
            
'            StrSql = "SELECT * FROM pre_cuota "
'            StrSql = StrSql & " WHERE pre_cuota.prenro =" & rs_Prestamo!prenro
'            StrSql = StrSql & " AND pre_cuota.cuocancela = 0 "
'            OpenRecordset StrSql, rs_Aux_Cuota
'            If rs_Aux_Cuota.EOF Then
'                StrSql = "UPDATE prestamo SET estnro = 6"
'                StrSql = StrSql & " WHERE prenro = " & rs_Prestamo!prenro
'                objConn.Execute StrSql, , adExecuteNoRecords
'            End If
            
            rs_Prestamo.MoveNext
        Loop
    Case 3: 'Prestamos de la Segunda quincena
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busco los prestamos de la segunda quincena "
        End If
    
        StrSql = "SELECT * FROM prestamo "
        StrSql = StrSql & " INNER JOIN pre_linea ON pre_linea.lnprenro = prestamo.lnprenro "
        StrSql = StrSql & " WHERE prestamo.ternro = " & buliq_empleado!ternro
        StrSql = StrSql & " AND  prestamo.estnro = 3 "
        StrSql = StrSql & " AND prestamo.quincenal = -1 "
        If CodMone <> -1 Then
            StrSql = StrSql & " AND prestamo.monnro =" & CodMone
        End If
        If Nrotp <> -1 Then
            StrSql = StrSql & " AND pre_linea.tpnro =" & Nrotp
        End If
        OpenRecordset StrSql, rs_Prestamo
        
        If CBool(USA_DEBUG) Then
            If rs_Prestamo.EOF Then
                Flog.writeline Espacios(Tabulador * 4) & "No se encontraron prestamos "
            End If
        End If
        
        Do While Not rs_Prestamo.EOF
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Busco las cuotas para el prestamo " & rs_Prestamo!prenro
            End If
        
            StrSql = "SELECT * FROM pre_cuota "
            StrSql = StrSql & " WHERE pre_cuota.prenro =" & rs_Prestamo!prenro
            StrSql = StrSql & " AND pre_cuota.cuocancela = 0 "
            StrSql = StrSql & " AND pre_cuota.cuoquin = 2 "
            StrSql = StrSql & " AND pre_cuota.cuoano = " & buliq_periodo!pliqanio
            StrSql = StrSql & " AND pre_cuota.cuomes = " & buliq_periodo!pliqmes
            OpenRecordset StrSql, rs_Cuota
            
            If CBool(USA_DEBUG) Then
                If rs_Cuota.EOF Then
                    Flog.writeline Espacios(Tabulador * 4) & "No se encontraron cuotas "
                End If
            End If
            
            Do While Not rs_Cuota.EOF
                Select Case Tipo_Monto
                Case 1:
                    Valor = Valor + rs_Cuota!cuototal
                Case 2:
                    Valor = Valor + (rs_Cuota!cuoimp - rs_Cuota!cuointeres)
                Case 3:
                    Valor = Valor + rs_Cuota!cuointeres
                Case Else
                    Valor = Valor + rs_Cuota!cuototal
                End Select

                
                If Cancela Then
                    StrSql = "UPDATE pre_cuota SET pronro =" & buliq_proceso!pronro
                    StrSql = StrSql & ", cuocancela = -1 "
                    StrSql = StrSql & " WHERE pre_cuota.cuonro = " & rs_Cuota!cuonro
                    objConn.Execute StrSql, , adExecuteNoRecords
                End If
                Bien = True
                
                rs_Cuota.MoveNext
            Loop
            
'            StrSql = "SELECT * FROM pre_cuota "
'            StrSql = StrSql & " WHERE pre_cuota.prenro =" & rs_Prestamo!prenro
'            StrSql = StrSql & " AND pre_cuota.cuocancela = 0 "
'            OpenRecordset StrSql, rs_Aux_Cuota
'            If rs_Aux_Cuota.EOF Then
'                StrSql = "UPDATE prestamo SET estnro = 6"
'                StrSql = StrSql & " WHERE prenro = " & rs_Prestamo!prenro
'                objConn.Execute StrSql, , adExecuteNoRecords
'            End If
            
            rs_Prestamo.MoveNext
        Loop
    End Select
End If
Bien = True

' cierro todo y libero
'If Param_cur.State = adStateOpen Then Param_cur.Close
If rs_Cuota.State = adStateOpen Then rs_Cuota.Close
If rs_Prestamo.State = adStateOpen Then rs_Prestamo.Close
If rs_Aux_Cuota.State = adStateOpen Then rs_Aux_Cuota.Close
        
'Set Param_cur = Nothing
Set rs_Prestamo = Nothing
Set rs_Cuota = Nothing
Set rs_Aux_Cuota = Nothing

End Sub


Public Sub bus_Anti0(ByRef antdia As Integer, ByRef antmes As Integer, ByRef antanio As Integer)
' ---------------------------------------------------------------------------------------------
' Descripcion: Busca la Antiguedad de un Empleado, dependiendo de si es con tope o no,
'               o si es a una fecha o no. ganti0.p
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------

Dim Tope As Integer         ' 1 - con tope
                            ' 2 - sin tope
                            
Dim Fecha As Date           ' Fecha Hasta
Dim Tipo_Fase As Integer    ' 1 - Sueldo
                            ' 2 - Indemnisacion
                            ' 3 - Vacaciones
                            ' 4 - Real
                            ' 5 - Desde la Fecha de Alta reconocida (sin Fases)
                            
Dim Hasta As Integer        ' 1 - A fin de Mes
                            ' 2 - A la fecha
                            ' 3 - A la fecha de baja
                            ' 4 - A Fecha de baja prevista
                            ' 5 - A Fin de año
                            ' 6 - Al primer dia del siguiente mes de liquidacion
                            ' 7 - A fin de 1ra quincena
                            
' estao es nuevo (10/11/2003)
Dim Cant_Tope As Integer    ' la cantidad de tope
Dim Resultado As Integer    ' 1 - en dias
                            ' 2 - en meses
                            ' 3 - en años
                            
Dim inicioMes As Boolean    ' Controla si tiene que tomar los extremos del mes para calcular la antiguedad

'Dim antdia As Integer
'Dim antmes As Integer
'Dim antanio As Integer
Dim q As Integer

Dim FechaAux As Date

'Dim Param_cur As New ADODB.Recordset
Dim rs_Fases  As New ADODB.Recordset

    Bien = False
    Valor = 0
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda " & NroProg
    End If
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        Tope = CInt(Arr_Programa(NroProg).Auxint1)
        Hasta = CInt(Arr_Programa(NroProg).Auxint2)
        Cant_Tope = CInt(Arr_Programa(NroProg).Auxint3)
        
        If Not EsNulo(Arr_Programa(NroProg).Auxchar1) Then
            Fecha = C_Date(Arr_Programa(NroProg).Auxchar1)
        End If
        
        Tipo_Fase = CInt(Arr_Programa(NroProg).Auxint4)
        Resultado = CInt(Arr_Programa(NroProg).Auxint5)
        
        inicioMes = CBool(Arr_Programa(NroProg).Auxlog1)
        
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busca la Antiguedad de un Empleado " & IIf(Tope = 1, "con tope ", "sin tope ")
            Select Case Hasta
                Case 1:
                    StrLog = "a fin de mes "
                Case 2:
                    StrLog = "a la fecha " & Fecha
                Case 3:
                    StrLog = "a la fecha de baja de la fase "
                    Select Case Tipo_Fase
                        Case 1:
                            StrLog = StrLog & " Sueldo "
                        Case 2:
                            StrLog = StrLog & " Indemnizacion "
                        Case 3:
                            StrLog = StrLog & " Vacacion "
                        Case 4:
                            StrLog = StrLog & " real "
                        Case 5:
                            StrLog = StrLog & " Fecha de alta reconocida "
                    End Select
                Case 4:
                    StrLog = "a la fecha de baja prevista "
                Case 5:
                    StrLog = "a la finde año "
                Case 7:
                    StrLog = "a fin de la 1ra quincena "
            End Select
            Flog.writeline Espacios(Tabulador * 4) & StrLog
            Select Case Resultado
                Case 1:
                    Flog.writeline Espacios(Tabulador * 4) & "el resultado en dias "
                Case 2:
                    Flog.writeline Espacios(Tabulador * 4) & "el resultado en meses "
                Case 3:
                    Flog.writeline Espacios(Tabulador * 4) & "el resultado en años "
            End Select
        End If
        
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontró la Busqueda " & NroProg
        End If
        Exit Sub
    End If

    Select Case Tipo_Fase
    Case 1: 'Sueldo
            Select Case Hasta
            Case 1: 'Fin de mes
                If buliq_proceso!tprocnro = 9 Then  'Quincenal
                   FechaAux = C_Date("15/" & buliq_periodo!pliqmes & "/" & buliq_periodo!pliqanio)
                Else
                    If buliq_periodo!pliqmes = 12 Then
                        FechaAux = C_Date("1/1/" & buliq_periodo!pliqanio + 1) - 1
                    Else
                        FechaAux = C_Date("01/" & buliq_periodo!pliqmes + 1 & "/" & buliq_periodo!pliqanio) - 1
                    End If
                End If
                Call bus_Antiguedad("SUELDO", FechaAux, antdia, antmes, antanio, q, inicioMes)
            Case 2: 'A la Fecha
                Call bus_Antiguedad("SUELDO", Fecha, antdia, antmes, antanio, q, inicioMes)
            Case 3: 'A fecha de Baja
                StrSql = "SELECT * FROM fases WHERE estado = 0 AND empleado = " & buliq_empleado!ternro & _
                         " AND sueldo = -1 " & _
                         " AND not altfec is null " & _
                         " AND not bajfec is null " & _
                         " ORDER BY altfec "
                OpenRecordset StrSql, rs_Fases
                If Not rs_Fases.EOF Then
                    rs_Fases.MoveLast
                    FechaAux = rs_Fases!bajfec
                Else
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "No se encontro ninguna fase cerrada "
                    End If
                    Exit Sub
                End If
                Call bus_Antiguedad("SUELDO", FechaAux, antdia, antmes, antanio, q, inicioMes)
            Case 4: 'A fecha de baja prevista
                If Not EsNulo(buliq_empleado!empfbajaprev) Then
                    FechaAux = buliq_empleado!empfbajaprev
                    Call bus_Antiguedad("SUELDO", FechaAux, antdia, antmes, antanio, q, inicioMes)
                Else
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "Fecha de baja prevista nula "
                    End If
                    Exit Sub
                End If
            Case 5: 'A fin de año
                    FechaAux = C_Date("31/12/" & buliq_periodo!pliqanio)
                    Call bus_Antiguedad("SUELDO", FechaAux, antdia, antmes, antanio, q, inicioMes)
            Case 6: 'Al primer dia del siguiente mes de liquidacion
                If buliq_periodo!pliqmes = 12 Then
                    FechaAux = C_Date("1/1/" & buliq_periodo!pliqanio + 1)
                Else
                    FechaAux = C_Date("01/" & buliq_periodo!pliqmes + 1 & "/" & buliq_periodo!pliqanio)
                End If
                Call bus_Antiguedad("SUELDO", FechaAux, antdia, antmes, antanio, q, inicioMes)
            Case 7: 'Fin de quincena
                    FechaAux = C_Date("15/" & buliq_periodo!pliqmes & "/" & buliq_periodo!pliqanio)
                    Call bus_Antiguedad("SUELDO", FechaAux, antdia, antmes, antanio, q, inicioMes)
            End Select
    Case 2: 'Indemnización
            Select Case Hasta
            Case 1: 'Fin de mes
                If buliq_proceso!tprocnro = 9 Then  'Quincenal
                    FechaAux = C_Date("15/" & buliq_periodo!pliqmes & "/" & buliq_periodo!pliqanio)
                Else
                    If buliq_periodo!pliqmes = 12 Then
                        FechaAux = C_Date("1/1/" & buliq_periodo!pliqanio + 1) - 1
                    Else
                        FechaAux = C_Date("01/" & buliq_periodo!pliqmes + 1 & "/" & buliq_periodo!pliqanio) - 1
                    End If
                End If
                Call bus_Antiguedad("INDEMNIZACION", FechaAux, antdia, antmes, antanio, q, inicioMes)
            Case 2: 'A la Fecha
                Call bus_Antiguedad("INDEMNIZACION", Fecha, antdia, antmes, antanio, q)
            Case 3: 'A fecha de Baja
                StrSql = "SELECT * FROM fases WHERE estado = 0 AND empleado = " & buliq_empleado!ternro & _
                         " AND indemnizacion = -1 " & _
                         " AND not altfec is null " & _
                         " AND not bajfec is null " & _
                         " ORDER BY altfec "
                OpenRecordset StrSql, rs_Fases
                If Not rs_Fases.EOF Then
                    rs_Fases.MoveLast
                    FechaAux = rs_Fases!bajfec
                Else
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "No se encontro ninguna fase cerrada "
                    End If
                    Exit Sub
                End If
                Call bus_Antiguedad("INDEMNIZACION", FechaAux, antdia, antmes, antanio, q, inicioMes)
            Case 4: 'A fecha de baja prevista
                If Not EsNulo(buliq_empleado!empfbajaprev) Then
                    FechaAux = buliq_empleado!empfbajaprev
                    Call bus_Antiguedad("INDEMNIZACION", FechaAux, antdia, antmes, antanio, q, inicioMes)
                Else
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "Fecha de baja prevista nula "
                    End If
                    Exit Sub
                End If
            Case 5: 'A fin de año
                    FechaAux = C_Date("31/12/" & buliq_periodo!pliqanio)
                    Call bus_Antiguedad("INDEMNIZACION", FechaAux, antdia, antmes, antanio, q, inicioMes)
            Case 6: 'Al primer dia del siguiente mes de liquidacion
                If buliq_periodo!pliqmes = 12 Then
                    FechaAux = C_Date("1/1/" & buliq_periodo!pliqanio + 1)
                Else
                    FechaAux = C_Date("01/" & buliq_periodo!pliqmes + 1 & "/" & buliq_periodo!pliqanio)
                End If
                Call bus_Antiguedad("INDEMNIZACION", FechaAux, antdia, antmes, antanio, q, inicioMes)
            Case 7: 'Fin de quincena
                    FechaAux = C_Date("15/" & buliq_periodo!pliqmes & "/" & buliq_periodo!pliqanio)
                    Call bus_Antiguedad("INDEMNIZACION", FechaAux, antdia, antmes, antanio, q, inicioMes)
            End Select
    Case 3: 'Vacaciones
            Select Case Hasta
            Case 1: 'Fin de mes
                If buliq_proceso!tprocnro = 9 Then  'Quincenal
                    FechaAux = C_Date("15/" & buliq_periodo!pliqmes & "/" & buliq_periodo!pliqanio)
                Else
                    If buliq_periodo!pliqmes = 12 Then
                        FechaAux = C_Date("1/1/" & buliq_periodo!pliqanio + 1) - 1
                    Else
                        FechaAux = C_Date("01/" & buliq_periodo!pliqmes + 1 & "/" & buliq_periodo!pliqanio) - 1
                    End If
                End If
                Call bus_Antiguedad("VACACIONES", FechaAux, antdia, antmes, antanio, q, inicioMes)
            Case 2: 'A la Fecha
                Call bus_Antiguedad("VACACIONES", Fecha, antdia, antmes, antanio, q, inicioMes)
            Case 3: 'A fecha de Baja
                StrSql = "SELECT * FROM fases WHERE estado = 0 AND empleado = " & buliq_empleado!ternro & _
                         " AND vacaciones = -1 " & _
                         " AND not altfec is null " & _
                         " AND not bajfec is null " & _
                         " ORDER BY altfec "
                OpenRecordset StrSql, rs_Fases
                If Not rs_Fases.EOF Then
                    rs_Fases.MoveLast
                    FechaAux = rs_Fases!bajfec
                Else
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "No se encontro ninguna fase cerrada "
                    End If
                    Exit Sub
                End If
                Call bus_Antiguedad("VACACIONES", FechaAux, antdia, antmes, antanio, q, inicioMes)
            Case 4: 'A fecha de baja prevista
                If Not EsNulo(buliq_empleado!empfbajaprev) Then
                    FechaAux = buliq_empleado!empfbajaprev
                    Call bus_Antiguedad("VACACIONES", FechaAux, antdia, antmes, antanio, q, inicioMes)
                Else
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "Fecha de baja prevista nula "
                    End If
                    Exit Sub
                End If
            Case 5: 'A fin de año
                    FechaAux = C_Date("31/12/" & buliq_periodo!pliqanio)
                    Call bus_Antiguedad("VACACIONES", FechaAux, antdia, antmes, antanio, q, inicioMes)
            Case 6: 'Al primer dia del siguiente mes de liquidacion
                If buliq_periodo!pliqmes = 12 Then
                    FechaAux = C_Date("1/1/" & buliq_periodo!pliqanio + 1)
                Else
                    FechaAux = C_Date("01/" & buliq_periodo!pliqmes + 1 & "/" & buliq_periodo!pliqanio)
                End If
                Call bus_Antiguedad("VACACIONES", FechaAux, antdia, antmes, antanio, q, inicioMes)
            Case 7: 'Fin de quincena
                    FechaAux = C_Date("15/" & buliq_periodo!pliqmes & "/" & buliq_periodo!pliqanio)
                    Call bus_Antiguedad("VACACIONES", FechaAux, antdia, antmes, antanio, q, inicioMes)
            End Select
    Case 4: 'Real
            Select Case Hasta
            Case 1: 'Fin de mes
                If buliq_proceso!tprocnro = 9 Then  'Quincenal
                   FechaAux = C_Date("15/" & buliq_periodo!pliqmes & "/" & buliq_periodo!pliqanio)
                Else
                    If buliq_periodo!pliqmes = 12 Then
                        FechaAux = C_Date("1/1/" & buliq_periodo!pliqanio + 1) - 1
                    Else
                        FechaAux = C_Date("01/" & buliq_periodo!pliqmes + 1 & "/" & buliq_periodo!pliqanio) - 1
                    End If
                End If
                Call bus_Antiguedad("REAL", FechaAux, antdia, antmes, antanio, q, inicioMes)
            Case 2: 'A la Fecha
                Call bus_Antiguedad("REAL", Fecha, antdia, antmes, antanio, q, inicioMes)
            Case 3: 'A fecha de Baja
                StrSql = "SELECT * FROM fases WHERE estado = 0 AND empleado = " & buliq_empleado!ternro & _
                         " AND real = -1 " & _
                         " AND not altfec is null " & _
                         " AND not bajfec is null " & _
                         " ORDER BY altfec "
                OpenRecordset StrSql, rs_Fases
                If Not rs_Fases.EOF Then
                    rs_Fases.MoveLast
                    FechaAux = rs_Fases!bajfec
                Else
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "No se encontro ninguna fase cerrada "
                    End If
                    Exit Sub
                End If
                Call bus_Antiguedad("REAL", FechaAux, antdia, antmes, antanio, q, inicioMes)
            Case 4: 'A fecha de baja prevista
                If Not EsNulo(buliq_empleado!empfbajaprev) Then
                    FechaAux = buliq_empleado!empfbajaprev
                    Call bus_Antiguedad("REAL", FechaAux, antdia, antmes, antanio, q, inicioMes)
                Else
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "Fecha de baja prevista nula "
                    End If
                    Exit Sub
                End If
            Case 5: 'A fin de año
                    FechaAux = C_Date("31/12/" & buliq_periodo!pliqanio)
                    Call bus_Antiguedad("REAL", FechaAux, antdia, antmes, antanio, q, inicioMes)
            Case 6: 'Al primer dia del siguiente mes de liquidacion
                If buliq_periodo!pliqmes = 12 Then
                    FechaAux = C_Date("1/1/" & buliq_periodo!pliqanio + 1)
                Else
                    FechaAux = C_Date("01/" & buliq_periodo!pliqmes + 1 & "/" & buliq_periodo!pliqanio)
                End If
                Call bus_Antiguedad("REAL", FechaAux, antdia, antmes, antanio, q, inicioMes)
            Case 7: 'Fin de quincena
                    FechaAux = C_Date("15/" & buliq_periodo!pliqmes & "/" & buliq_periodo!pliqanio)
                    Call bus_Antiguedad("REAL", FechaAux, antdia, antmes, antanio, q, inicioMes)
            End Select
    Case 5: 'Desde la fecha de alta reconocida
            Select Case Hasta
            Case 1: 'Fin de mes
                If buliq_proceso!tprocnro = 9 Then  'Quincenal
                    FechaAux = C_Date("15/" & buliq_periodo!pliqmes & "/" & buliq_periodo!pliqanio)
                Else
                    If buliq_periodo!pliqmes = 12 Then
                        FechaAux = C_Date("1/1/" & buliq_periodo!pliqanio + 1) - 1
                    Else
                        FechaAux = C_Date("01/" & buliq_periodo!pliqmes + 1 & "/" & buliq_periodo!pliqanio) - 1
                    End If
                End If
            Case 2: 'A la Fecha
                FechaAux = Fecha
            Case 3: 'A fecha de Baja
                StrSql = "SELECT * FROM fases WHERE estado = 0 AND empleado = " & buliq_empleado!ternro & _
                         " AND sueldo = -1 " & _
                         " AND not altfec is null " & _
                         " AND not bajfec is null " & _
                         " ORDER BY altfec "
                OpenRecordset StrSql, rs_Fases
                If Not rs_Fases.EOF Then
                    rs_Fases.MoveLast
                    FechaAux = rs_Fases!bajfec
                Else
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "No se encontro ninguna fase cerrada "
                    End If
                    Exit Sub
                End If
            Case 4: 'A fecha de baja prevista
                If Not EsNulo(buliq_empleado!empfbajaprev) Then
                    FechaAux = buliq_empleado!empfbajaprev
                Else
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "Fecha de baja prevista nula "
                    End If
                    Exit Sub
                End If
            Case 5: 'A fin de año
                    FechaAux = C_Date("31/12/" & buliq_periodo!pliqanio)
            Case 6: 'Al primer dia del siguiente mes de liquidacion
                If buliq_periodo!pliqmes = 12 Then
                    FechaAux = C_Date("1/1/" & buliq_periodo!pliqanio + 1)
                Else
                    FechaAux = C_Date("01/" & buliq_periodo!pliqmes + 1 & "/" & buliq_periodo!pliqanio)
                End If
            'FGZ - 24/10/2006
            'Esto es un error, el end select debe ir al final de todos los case
            'End Select
            Case 7: 'Fin de quincena
                    FechaAux = C_Date("15/" & buliq_periodo!pliqmes & "/" & buliq_periodo!pliqanio)
            End Select
            Call bus_Antiguedad_FechaAltaReconocida(FechaAux, antdia, antmes, antanio, q, inicioMes)
    End Select
    
    ' FGZ
    ' 10/1/2003
    ' esto es nuevo
    Select Case Resultado
    Case 1: ' En dias
        Valor = antdia + antmes * 30 + antanio * 360
    Case 2: ' En meses
        Valor = antmes + antanio * 12
    Case 3: ' en años
        Valor = antanio
    End Select
         
    If Tope = 1 Then
        If Valor > Cant_Tope Then
            Valor = Cant_Tope
        End If
    End If
         
    Bien = True
    
' cierro todo y libero
    'If Param_cur.State = adStateOpen Then Param_cur.Close
    'Set Param_cur = Nothing
End Sub

Public Sub bus_Antiguedad(ByVal TipoAnt As String, ByVal FechaFin As Date, ByRef dia As Integer, ByRef mes As Integer, ByRef Anio As Integer, ByRef DiasHabiles As Integer, Optional ByVal inicioMes As Boolean = False)
' ---------------------------------------------------------------------------------------------
' Descripcion: Calcula la antiguedad al dia de hoy de un empleado en :
'              dias hábiles(si es menor que un año) o en dias, meses y años en caso contrario.
'              antiguedad.p
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Aux1 As Long
Dim Aux2 As Long
Dim Aux3 As Long
Dim fecalta As Date
Dim fecbaja As Date
Dim seguir As Date
Dim q As Integer

Dim NombreCampo As String

Dim rs_Fases As New ADODB.Recordset


NombreCampo = ""
DiasHabiles = 0

Select Case UCase(TipoAnt)
Case "SUELDO":
    NombreCampo = "sueldo"
Case "INDEMNIZACION":
    NombreCampo = "indemnizacion"
Case "VACACIONES":
    NombreCampo = "vacaciones"
Case "REAL":
    NombreCampo = "real"
Case Else
End Select

dia = 0
mes = 0
Anio = 0

'StrSql = "SELECT * FROM fases WHERE empleado = " & buliq_empleado!ternro & _
'         " AND " & NombreCampo & " = -1 "
'OpenRecordset StrSql, rs_Fases

' FGZ -27/01/2004
StrSql = "SELECT * FROM fases WHERE empleado = " & buliq_empleado!ternro & _
         " AND " & NombreCampo & " = -1 " & _
         " AND not altfec is null " & _
         " AND not (bajfec is null AND estado = 0)" & _
         " AND altfec <= " & ConvFecha(Fecha_Fin)
OpenRecordset StrSql, rs_Fases

Do While Not rs_Fases.EOF
'    If (EsNulo(rs_Fases!altfec)) Or (EsNulo(rs_Fases!bajfec) And rs_Fases!estado = 0) Or (rs_Fases!altfec >= FechaFin) Then
'        GoTo siguiente
'    Else
        fecalta = rs_Fases!altfec
'    End If
    If inicioMes Then
       If Day(C_Date(fecalta)) <= 15 Then
          fecalta = C_Date("01" & "/" & Month(C_Date(fecalta)) & "/" & Year(C_Date(fecalta)))
       Else
         If Month(C_Date(fecalta)) = 12 Then
            fecalta = C_Date("01/01/" & (Year(C_Date(fecalta)) + 1))
         Else
            fecalta = C_Date("01" & "/" & (Month(C_Date(fecalta)) + 1) & "/" & Year(C_Date(fecalta)))
         End If
       End If
    End If
    
    ' Verificar si se trata de un registro completo (alta/baja) o solo de un alta
    If rs_Fases!estado Then
        fecbaja = FechaFin ' solo es un alta, tomar el fecha-fin
    ElseIf rs_Fases!bajfec <= FechaFin Then
        fecbaja = rs_Fases!bajfec  ' se trata de un registro completo
    Else
        fecbaja = FechaFin ' hasta la fecha ingresada
    End If
    
'    Call Dif_Fechas(fecalta, fecbaja, aux1, aux2, aux3)
'    Dia = Dia + aux1
'    Mes = Mes + aux2 + Int(Dia / 30)
'    Anio = Anio + aux3 + Int(Mes / 12)
'    Dia = Dia Mod 30
'    Mes = Mes Mod 12
        
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "fase de " & fecalta & " a " & fecbaja
    End If
        
    'FGZ - 27/06/2007 ---- estaba dando un dia de menos ---
    'Call DIF_FECHAS2(fecalta, fecbaja, Aux1, Aux2, Aux3)
    Call DIF_FECHAS3(fecalta, fecbaja, Aux1, Aux2, Aux3)
    'FGZ - 27/06/2007 ---- estaba dando un dia de menos ---
    
    'Call Dif_Fechas(fecalta, fecbaja, Aux1, Aux2, Aux3)
    If rs_Fases.RecordCount = 1 Then
'        dia = aux1
'        mes = aux2
'        anio = aux3
        dia = dia + Aux1
        mes = mes + Aux2 + Int(dia / 30)
        Anio = Anio + Aux3 + Int(mes / 12)
        dia = dia Mod 30
        mes = mes Mod 12
    Else
        dia = dia + Aux1
        mes = mes + Aux2 + Int(dia / 30)
        Anio = Anio + Aux3 + Int(mes / 12)
        dia = dia Mod 30
        mes = mes Mod 12
    End If
        
    If Anio = 0 Then
        Call DiasTrab(fecalta, fecbaja, Aux1)
        DiasHabiles = DiasHabiles + Aux1
    End If
    
siguiente:
    rs_Fases.MoveNext
Loop

If Anio <> 0 Then
    DiasHabiles = 0
End If


' Cierro todo y Libero
If rs_Fases.State = adStateOpen Then rs_Fases.Close
Set rs_Fases = Nothing

End Sub

Public Sub bus_Antiguedad_FechaAltaReconocida(ByVal FechaFin As Date, ByRef dia As Integer, ByRef mes As Integer, ByRef Anio As Integer, ByRef DiasHabiles As Integer, Optional ByVal inicioMes As Boolean = False)
' ---------------------------------------------------------------------------------------------
' Descripcion: Calcula la antiguedad al dia del empleado desde la fecha de alta reconocida (sin fases) en :
'              dias hábiles(si es menor que un año) o en dias, meses y años en caso contrario.
'              antiguedad.p
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Aux1 As Long
Dim Aux2 As Long
Dim Aux3 As Long
Dim fecalta As Date
Dim fecbaja As Date
Dim seguir As Date
Dim q As Integer

Dim rs_Fases As New ADODB.Recordset
DiasHabiles = 0

    StrSql = "SELECT * FROM fases WHERE empleado = " & buliq_empleado!ternro
    StrSql = StrSql & " AND fasrecofec = -1 "
    StrSql = StrSql & " ORDER BY altfec "
    OpenRecordset StrSql, rs_Fases
    
    If Not rs_Fases.EOF Then
        fecalta = C_Date(rs_Fases!altfec)
    Else
        If EsNulo(buliq_empleado!empfaltagr) Then
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "La fecha de alta reconocida es Nula"
            End If
            Exit Sub
        Else
            fecalta = C_Date(buliq_empleado!empfaltagr)
        End If
    End If
    fecbaja = FechaFin
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Desde " & fecalta & " a " & fecbaja
    End If
        
    'FGZ - 27/06/2007 ---- estaba dando un dia de menos ---
    'Call DIF_FECHAS2(fecalta, fecbaja, Aux1, Aux2, Aux3)
    Call DIF_FECHAS3(fecalta, fecbaja, Aux1, Aux2, Aux3)
    'FGZ - 27/06/2007 ---- estaba dando un dia de menos ---
    'Call Dif_Fechas(fecalta, fecbaja, aux1, aux2, aux3)
    dia = dia + Aux1
    mes = mes + Aux2 + Int(dia / 30)
    Anio = Anio + Aux3 + Int(mes / 12)
    dia = dia Mod 30
    mes = mes Mod 12
        
    If Anio = 0 Then
        Call DiasTrab(fecalta, fecbaja, Aux1)
        DiasHabiles = DiasHabiles + Aux1
    End If
    
    If Anio <> 0 Then
        DiasHabiles = 0
    End If
    
    If rs_Fases.State = adStateOpen Then rs_Fases.Close
    Set rs_Fases = Nothing
End Sub


Public Sub bus_Antiguedad_A_FechaAlta(ByRef dia As Integer, ByRef mes As Integer, ByRef Anio As Integer)
' ---------------------------------------------------------------------------------------------
' Descripcion: Calcula la antiguedad al dia de hoy de un empleado en :
'              dias hábiles(si es menor que un año) o en dias, meses y años en caso contrario.
' Autor      : FGZ
' Fecha      : 21/10/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Aux1 As Long
Dim Aux2 As Long
Dim Aux3 As Long
Dim fecalta As Date
Dim fecbaja As Date
Dim seguir As Date
Dim q As Integer
Dim DiasHabiles As Integer

DiasHabiles = 0

    fecalta = C_Date(buliq_empleado!empfaltagr)
    fecbaja = C_Date("31/12/" & buliq_periodo!pliqanio)
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Desde " & fecalta & " a " & fecbaja
    End If
        
    'FGZ - 27/06/2007 ---- estaba dando un dia de menos ---
    'Call DIF_FECHAS2(fecalta, fecbaja, Aux1, Aux2, Aux3)
    Call DIF_FECHAS3(fecalta, fecbaja, Aux1, Aux2, Aux3)
    'FGZ - 27/06/2007 ---- estaba dando un dia de menos ---
    
    dia = dia + Aux1
    mes = mes + Aux2 + Int(dia / 30)
    Anio = Anio + Aux3 + Int(mes / 12)
    dia = dia Mod 30
    mes = mes Mod 12
        
    If Anio = 0 Then
        Call DiasTrab(fecalta, fecbaja, Aux1)
        DiasHabiles = DiasHabiles + Aux1
    End If
    
If Anio <> 0 Then
    DiasHabiles = 0
End If

'resultado en meses
Valor = mes + Anio * 12

'    Select Case Resultado
'    Case 1: ' En dias
'        Valor = antdia + antmes * 30 + antanio * 360
'    Case 2: ' En meses
'        Valor = antmes + antanio * 12
'    Case 3: ' en años
'        Valor = antanio
'    End Select
'
'    If Tope = 1 Then
'        If Valor > Cant_Tope Then
'            Valor = Cant_Tope
'        End If
'    End If
Bien = True
End Sub



'Public Sub bus_Anti1()
'' ---------------------------------------------------------------------------------------------
'' Descripcion: Busca la Antiguedad de un Empleado, dependiendo de si es con tope o no,
''               o si es a una fecha o no. ganti1.p
'' Autor      : FGZ
'' Fecha      :
'' Ultima Mod.:
'' Descripcion:
'' ---------------------------------------------------------------------------------------------
'
'Dim Tope As Integer         ' 1 - Con Tope
'                            ' 2 - Sin Tope
'Dim fecha As Date           ' Fecha Hasta
'Dim Hasta As Integer        ' 1 - A fin de Mes
'                            ' 2 - A la fecha
'
'' estao es nuevo (10/11/2003)
'Dim Cant_Tope As Integer    ' la cantidad de tope
'Dim Resultado As Integer    ' 1 - en dias
'                            ' 2 - en meses
'                            ' 3 - en años
'
'Dim antdia As Integer
'Dim antmes As Integer
'Dim antanio As Integer
'Dim q As Integer
'
'Dim FechaAux As Date
'
''Dim Param_cur As New ADODB.Recordset
'
'    Bien = False
'    valor = 0
'
'    ' Obtener los parametros de la Busqueda
'    strsql = "SELECT auxint1, auxlog1, auxlog2, auxlog3 FROM programa WHERE prognro = " & CStr(NroProg)
'    'OpenRecordset StrSql, Param_cur
'
'    If Arr_Programa(NroProg).Prognro <> 0 Then
'        Tope = CInt(Arr_Programa(nroprog).auxint1)
'        Hasta = Arr_Programa(nroprog).auxint2
'        Cant_Tope = CInt(Arr_Programa(nroprog).auxint3)
'        If Not EsNulo(Arr_Programa(nroprog).auxchar1) Then
'            fecha = c_date(Arr_Programa(nroprog).auxchar1)
'        End If
'    Else
'        Exit Sub
'    End If
'
'    'Vacaciones
'    If Not Hasta Then
'        If buliq_periodo!pliqmes = 12 Then
'            FechaAux = c_date("1/1/" & buliq_periodo!pliqanio)
'        Else
'            FechaAux = c_date(buliq_periodo!pliqmes + 1 & "/1/" & buliq_periodo!pliqanio - 1)
'        End If
'
'        Call bus_Antiguedad("VACACIONES", FechaAux, antdia, antmes, antanio, q)
'    Else
'        Call bus_Antiguedad("VACACIONES", fecha, antdia, antmes, antanio, q)
'    End If
'
'    If antmes > 3 Then
'        If antanio > Tope Then
'            valor = Tope
'        Else
'            valor = antanio ' antiguedad en años
'        End If
'    Else
'        valor = antanio 'Antiguedad en años
'    End If
'    Bien = True
'
'
'' cierro todo y libero
'    'If Param_cur.State = adStateOpen Then Param_cur.Close
'    'Set Param_cur = Nothing
'End Sub
'
'
'Public Sub bus_Anti2()
'' ---------------------------------------------------------------------------------------------
'' Descripcion: Busca la Antiguedad de un Empleado, dependiendo de si es con tope o no,
''               o si es a una fecha o no. ganti2.p
'' Autor      : FGZ
'' Fecha      :
'' Ultima Mod.:
'' Descripcion:
'' ---------------------------------------------------------------------------------------------
'
'Dim Tope As Boolean         ' si usa tope o no
'Dim fecha As Date           ' Fecha Hasta
'Dim Hasta As Integer        ' 1 - A fin de Mes
'                            ' 2 - A la fecha
'
'Dim antdia As Integer
'Dim antmes As Integer
'Dim antanio As Integer
'Dim q As Integer
'
'Dim FechaAux As Date
'
''Dim Param_cur As New ADODB.Recordset
'
'    Bien = False
'    valor = 0
'
'    ' Obtener los parametros de la Busqueda
'    strsql = "SELECT auxint1, auxlog1, auxlog2, auxlog3 FROM programa WHERE prognro = " & CStr(NroProg)
'    'OpenRecordset StrSql, Param_cur
'
'    If Arr_Programa(NroProg).Prognro <> 0 Then
'        Tope = CBool(Arr_Programa(nroprog).auxint1)
'        Hasta = Arr_Programa(nroprog).auxint2
'
'        If Not EsNulo(Arr_Programa(nroprog).auxchar1) Then
'            fecha = c_date(Arr_Programa(nroprog).auxchar1)
'        End If
'    Else
'        Exit Sub
'    End If
'
'    'Indemnizacion
'    If Not Hasta Then
'        If buliq_periodo!pliqmes = 12 Then
'            FechaAux = c_date("1/1/" & buliq_periodo!pliqanio)
'        Else
'            FechaAux = c_date(buliq_periodo!pliqmes + 1 & "/1/" & buliq_periodo!pliqanio - 1)
'        End If
'
'        Call bus_Antiguedad("INDEMNIZACION", FechaAux, antdia, antmes, antanio, q)
'    Else
'        Call bus_Antiguedad("INDEMNIZACION", fecha, antdia, antmes, antanio, q)
'    End If
'
'    If antmes > 3 Then
'        If antanio > Tope Then
'            valor = Tope
'        Else
'            valor = antanio ' antiguedad en años
'        End If
'    Else
'        valor = antanio 'Antiguedad en años
'    End If
'    Bien = True
'
'
'' cierro todo y libero
'    'If Param_cur.State = adStateOpen Then Param_cur.Close
'    'Set Param_cur = Nothing
'End Sub

Public Sub DiasTrab(ByVal Desde As Date, ByVal Hasta As Date, ByRef DiasH As Long)
' ---------------------------------------------------------------------------------------------
' Descripcion: Calcula la cantidad de dias trabajados de acuerdo al turno en que se trabaja y
'              de acuerdo a los dias que figuran como feriados en la tabla de feriados.
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------

Dim d1 As Integer
Dim d2 As Integer
Dim aux As Integer
Dim Aux2 As Integer
Dim dxsem As Integer

Dim rs_pais As New ADODB.Recordset
Dim rs_feriados As New ADODB.Recordset

    dxsem = 5
    
    d1 = Weekday(Desde)
    d2 = Weekday(Hasta)
    
    aux = DateDiff("d", Desde, Hasta) + 1
    If aux < 7 Then
        DiasH = Minimo(aux, dxsem)
    Else
        If aux = 7 Then
            DiasH = dxsem
        Else
            Aux2 = 8 - d1 + d2
            If Aux2 < 7 Then
                Aux2 = Minimo(Aux2, dxsem)
            Else
                If Aux2 = 7 Then
                    Aux2 = dxsem
                End If
            End If
            
            If Aux2 >= 7 Then
                Aux2 = Abs(Aux2 - 7) + Int(Aux2 / 7) * dxsem
            Else
                Aux2 = Aux2 + Int((Aux2 - Aux2) / 7) * dxsem
            End If
        End If
    End If
    
    aux = 0
    
    StrSql = "SELECT * FROM pais INNER JOIN tercero ON tercero.paisnro = pais.paisnro WHERE tercero.ternro = " & buliq_empleado!ternro
    OpenRecordset StrSql, rs_pais
    
    If Not rs_pais.EOF Then
        ' Resto los Feriados Nacionales
        StrSql = "SELECT * FROM feriado WHERE tipferinro = 2 " & _
                 " AND fericodext = '" & rs_pais!paisnro & "'" & _
                 " AND ferifecha >= " & ConvFecha(Desde) & _
                 " AND ferifecha < " & ConvFecha(Hasta)
        OpenRecordset StrSql, rs_feriados
        
        Do While Not rs_feriados.EOF
            If Weekday(rs_feriados!ferifecha) > 1 Then
                DiasH = DiasH - 1
            End If
            
            ' Siguiente Feriado
            rs_feriados.MoveNext
        Loop
    End If


    ' Resto los feriados por Convenio
    StrSql = "SELECT * FROM empleado INNER JOIN his_estructura ON empleado.ternro = his_estructura.ternro " & _
             " INNER JOIN fer_estr ON fer_estr.tenro = his_estructura.tenro " & _
             " INNER JOIN feriado ON fer_estr.ferinro = feriado.ferinro " & _
             " WHERE empleado.ternro = " & buliq_empleado!ternro & _
             " AND feriado.tipferinro = 2" & _
             " AND feriado.ferifecha >= " & ConvFecha(Desde) & _
             " AND feriado.ferifecha < " & ConvFecha(Hasta)
    OpenRecordset StrSql, rs_feriados
    
    Do While Not rs_feriados.EOF
        If Weekday(rs_feriados!ferifecha) > 1 Then
            DiasH = DiasH - 1
        End If
        
        ' Siguiente Feriado
        rs_feriados.MoveNext
    Loop
    
    
    ' cierro todo y libero
    If rs_pais.State = adStateOpen Then rs_pais.Close
    If rs_feriados.State = adStateOpen Then rs_feriados.Close
        
    Set rs_feriados = Nothing
    Set rs_pais = Nothing

End Sub

Public Sub DiasTrab_old(ByVal Desde As Date, ByVal Hasta As Date, ByRef DiasH As Integer)
' ---------------------------------------------------------------------------------------------
' Descripcion: Calcula la cantidad de dias trabajados de acuerdo al turno en que se trabaja y
'              de acuerdo a los dias que figuran como feriados en la tabla de feriados.
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------

Dim d1 As Integer
Dim d2 As Integer
Dim aux As Integer
Dim Aux2 As Integer
Dim dxsem As Integer

Dim rs_pais As New ADODB.Recordset
Dim rs_feriados As New ADODB.Recordset

    dxsem = 5
    
    d1 = Weekday(Desde)
    d2 = Weekday(Hasta)
    
    aux = DateDiff("d", Hasta, Desde) + 1
    If aux < 7 Then
        DiasH = Minimo(aux, dxsem)
    Else
        If aux = 7 Then
            DiasH = dxsem
        Else
            Aux2 = 8 - d1 + d2
            If Aux2 < 7 Then
                Aux2 = Minimo(Aux2, dxsem)
            Else
                If Aux2 = 7 Then
                    Aux2 = dxsem
                End If
            End If
            
            If Aux2 >= 7 Then
                Aux2 = Abs(Aux2 - 7) + Int(Aux2 / 7) * dxsem
            Else
                Aux2 = Aux2 + Int((Aux2 - Aux2) / 7) * dxsem
            End If
        End If
    End If
    
    aux = 0
    
    StrSql = "SELECT * FROM pais INNER JOIN tercero ON tercero.paisnro = pais.paisnro WHERE tercero.ternro = " & buliq_empleado!ternro
    OpenRecordset StrSql, rs_pais
    
    If Not rs_pais Then
        ' Resto los Feriados Nacionales
        StrSql = "SELECT * FROM feriado WHERE tipferinro = 2 " & _
                 " AND fericodext = " & rs_pais!paisnro & _
                 " AND ferifecha >= " & ConvFecha(Desde) & _
                 " AND ferifecha < " & ConvFecha(Hasta)
        OpenRecordset StrSql, rs_feriados
        
        Do While Not rs_feriados.EOF
            If Weekday(rs_feriados!ferifecha) > 1 Then
                DiasH = DiasH - 1
            End If
            
            ' Siguiente Feriado
            rs_feriados.MoveNext
        Loop
    End If


    ' Resto los feriados por Convenio
    StrSql = "SELECT * FROM empleado INNER JOIN his_estrucra ON empleado.ternro = his_estructura.ternro " & _
             " INNER JOIN fer_estr ON fer_estr.tenro = his_estructura.tenro " & _
             " INNER JOIN feriado ON fer_estr.ferinro = feriado.ferinro " & _
             " WHERE empleado.ternro = " & buliq_empleado!ternro & _
             " AND feriado.tipferinro = 2" & _
             " AND feriado.ferifecha >= " & ConvFecha(Desde) & _
             " AND feriado.ferifecha < " & ConvFecha(Hasta)
    OpenRecordset StrSql, rs_feriados
    
    Do While Not rs_feriados.EOF
        If Weekday(rs_feriados!ferifecha) > 1 Then
            DiasH = DiasH - 1
        End If
        
        ' Siguiente Feriado
        rs_feriados.MoveNext
    Loop
    
    
    ' cierro todo y libero
    If rs_pais.State = adStateOpen Then rs_pais.Close
    If rs_feriados.State = adStateOpen Then rs_feriados.Close
        
    Set rs_feriados = Nothing
    Set rs_pais = Nothing

End Sub



Public Sub bus_Cotmon1()
' ---------------------------------------------------------------------------------------------
' Descripcion: Obtención de la cotización de la Moneda. gcotmon1.p
' Autor      : FGZ
' Fecha      :
' Ultima Mod.: FGZ - 17/03/2006
' Descripcion: faltaba el convfecha en el sql
' ---------------------------------------------------------------------------------------------
Dim NroMon As Long          'moneda.monnro
Dim Opcion As Long          '1-fecha desde del proceso
                            '2-fecha hasta del proceso
                            '3-fecha de pago del proceso
                            '4-fecha desde del periodo
                            '5-fecha hasta del periodo
                            '6-today

'Dim Param_cur As New ADODB.Recordset
Dim rs_cotizacion As New ADODB.Recordset
Dim AFecha As Date

    Bien = False
    Valor = 0
    
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        NroMon = Arr_Programa(NroProg).Auxint1
        Opcion = Arr_Programa(NroProg).Auxint2
    Else
        Exit Sub
    End If

Select Case Opcion
Case 1: 'fecha desde del proceso
    AFecha = buliq_proceso!profecini
Case 2: 'fecha hasta del proceso
    AFecha = buliq_proceso!profecfin
Case 3: 'fecha de pago del proceso
    AFecha = buliq_proceso!profecpago
Case 4: 'fecha desde del periodo
    AFecha = buliq_periodo!pliqdesde
Case 5: 'fecha hasta del periodo
    AFecha = buliq_periodo!pliqhasta
Case 6: 'Today
    AFecha = Date
Case Else
    'tipo de fecha no valido
End Select


    ' Busco la ultima cotización
    'FGZ - 17/03/2006 - faltaba el convfecha
    StrSql = "SELECT * FROM cotizamon WHERE monnro = " & NroMon & _
             " AND cotfecha <= " & ConvFecha(AFecha) & _
             " ORDER BY cotfecha"
    OpenRecordset StrSql, rs_cotizacion
    
    If Not rs_cotizacion.EOF Then
        rs_cotizacion.MoveLast
        
'        If Opcion = 1 Then
'            valor = rs_cotizacion!cotvalororigen
'        Else
'            valor = rs_cotizacion!cotvalorinternac
'        End If
        
        Valor = rs_cotizacion!cotvalororigen
        Bien = True
    Else
        Valor = 0
        Bien = False
    End If

' Cierro y libero
'If Param_cur.State = adStateOpen Then Param_cur.Close
If rs_cotizacion.State = adStateOpen Then rs_cotizacion.Close
Set rs_cotizacion = Nothing
'Set Param_cur = Nothing

End Sub



Public Sub bus_Tcotpa0()
' ---------------------------------------------------------------------------------------------
' Descripcion: Evalua para todos los conceptos de dicho tipo la búsqueda asociada
'              segun el alcance de resolución para el empleado y Sumariza todos
'              los resultados. gtcotpa0.p
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim NroTipoCon As Long  'tipconcep.tconnro
Dim NroTipoPar As Long  'tipopar.tpanro
Dim val As Double
Dim fec As Date
Dim OK As Boolean

Dim param_cur       As New ADODB.Recordset
Dim rs_buf_concepto As New ADODB.Recordset
Dim rs_Concepto     As New ADODB.Recordset
Dim rs_Formula      As New ADODB.Recordset
Dim rs_cft          As New ADODB.Recordset
Dim rs_Con_For_Tpa  As New ADODB.Recordset
Dim rs_Programa     As New ADODB.Recordset

    Bien = False
    Valor = 0
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Evalua para todos los conceptos de dicho tipo la búsqueda asociada "
        Flog.writeline Espacios(Tabulador * 4) & "segun el alcance de resolución para el empleado y Sumariza todos los resultados."
    End If
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda "
    End If
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        NroTipoCon = Arr_Programa(NroProg).Auxint1
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Tipo de Concepto (tipconcep.tconnro) " & NroTipoCon
        End If
        
        NroTipoPar = Arr_Programa(NroProg).Auxint2
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Tipo de Parametro (tipopar.tpanro) " & NroTipoPar
        End If
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Parametros cargados "
        End If
        
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontró la Busqueda " & NroProg
        End If
        Exit Sub
    End If
    
    
    Bien = True
    Valor = 0
     
    StrSql = "SELECT * FROM concepto WHERE tconnro = " & CStr(NroTipoCon)
    OpenRecordset StrSql, rs_buf_concepto
    
    Do While Not rs_buf_concepto.EOF
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Concepto " & rs_buf_concepto!concnro
        End If
    
        'posicionarse en cada pasada en el buliq a liquidar
        StrSql = "SELECT * FROM concepto " & _
                 " INNER JOIN formula ON concepto.fornro = formula.fornro " & _
                 " INNER JOIN for_tpa ON formula.fornro = for_tpa.fornro " & _
                 " WHERE concnro = " & rs_buf_concepto!concnro & _
                 " AND for_tpa.tpanro = " & NroTipoPar & _
                 " ORDER BY tpa_fornro, for_tpa.ftorden "
        OpenRecordset StrSql, rs_Concepto
        
        ' Resolución de los Parámetros de la Fórmula del Concepto
        Do While Not rs_Concepto.EOF
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 5) & "Parametro " & rs_Concepto!tpanro
            End If
        
            StrSql = "SELECT * FROM cft_segun WHERE concnro = " & rs_Concepto!concnro & _
                     " AND tpanro = & rs_concepto.tpanro " & _
                     " AND nivel = 1 " & _
                     " AND origen = " & NroGrupo
            OpenRecordset StrSql, rs_cft
            
            If rs_cft.EOF Then
                If rs_cft.State = adStateOpen Then rs_cft.Close
                    StrSql = "SELECT * FROM cft_segun WHERE concnro = " & rs_Concepto!concnro & _
                             " AND tpanro = & rs_concepto.tpanro " & _
                             " AND nivel = 2 "
                OpenRecordset StrSql, rs_cft
                
                If rs_cft.EOF Then
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 6) & "Sin alcance "
                    End If
                    GoTo SiguienteConcepto
                End If
            End If
            
            StrSql = "SELECT * FROM con_for_tpa WHERE concnro = " & rs_Concepto!concnro & _
                     " AND tpanro = & rs_concepto.tpanro " & _
                     " AND nivel = " & rs_cft!Nivel & _
                     " AND selecc = " & rs_cft!Selecc
            OpenRecordset StrSql, rs_Con_For_Tpa
                    
            If rs_Con_For_Tpa.EOF Then
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 6) & "Sin alcance "
                End If
                GoTo SiguienteConcepto
            End If
                
            StrSql = "SELECT * FROM programa WHERE programa.prognro = " & rs_Con_For_Tpa!Prognro
            OpenRecordset StrSql, rs_Programa
            
            If rs_Programa.EOF Then
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 6) & "Sin busqueda asociada "
                End If
                GoTo SiguienteConcepto
            End If
                
            val = 0
            ' Si es automático y la busqueda está marcada como que puede usar cache,
            ' --> verificar el cache del empleado
            If rs_Con_For_Tpa!auto And rs_Programa!Progcache Then
                If objCache.EsSimboloDefinido(CStr(rs_Programa!Prognro)) Then
                    val = objCache.Valor(CStr(rs_Programa!Prognro))
                    OK = True
                Else    ' Busqueda Automatica, Primera vez
                    Call EjecutarBusqueda(15, rs_Concepto!concnro, rs_Concepto!tpanro, val, fec, OK)
                    ' insertar en el cache del empleado
                    Call objCache.Insertar_Simbolo(CStr(rs_Programa!Prognro), val)
                End If
            Else    ' Busqueda NO automatica, Novedades: Buscar
                Call EjecutarBusqueda(15, rs_Concepto!concnro, rs_Concepto!tpanro, val, fec, OK)
            End If
                            
            If OK Then  ' Se obtuvo el parametro satisfactoriamente
                Valor = Valor + val
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 6) & "Se obtuvo el parametro satisfactoriamente. Valor = " & val
                End If
            Else
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 6) & "Busqueda no exitosa "
                End If
            End If
              
SiguienteConcepto:
            rs_Concepto.MoveNext
        Loop
        
        rs_buf_concepto.MoveNext
    Loop


' Cierro y libero
'If Param_cur.State = adStateOpen Then Param_cur.Close
If rs_buf_concepto.State = adStateOpen Then rs_buf_concepto.Close
If rs_Concepto.State = adStateOpen Then rs_Concepto.Close
If rs_Formula.State = adStateOpen Then rs_Formula.Close
If rs_cft.State = adStateOpen Then rs_cft.Close
If rs_Con_For_Tpa.State = adStateOpen Then rs_Con_For_Tpa.Close
If rs_Programa.State = adStateOpen Then rs_Programa.Close

'Set Param_cur = Nothing
Set rs_buf_concepto = Nothing
Set rs_Concepto = Nothing
Set rs_Formula = Nothing
Set rs_cft = Nothing
Set rs_Con_For_Tpa = Nothing
Set rs_Programa = Nothing

End Sub

Public Sub Bus_NovGegi(ByVal Prognro As Long, ByVal concepto As Long, ByVal tpanro As Long, ByVal Fecha_Inicio As Date, ByVal Fecha_Fin As Date, ByVal Grupo As Long, ByRef OK As Boolean, ByRef val As Double)
' ---------------------------------------------------------------------------------------------
' Descripcion: Obtencion de novedad a Nivel General/Grupal/Individual. novgegi.p
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim rs_NovEmp As New ADODB.Recordset
Dim rs_NovEstr As New ADODB.Recordset
Dim rs_NovGral As New ADODB.Recordset
Dim rs_His_Estructura As New ADODB.Recordset
Dim rs_HisNovEmp As New ADODB.Recordset
Dim rs_HisNovEstr As New ADODB.Recordset
Dim rs_HisNovGral As New ADODB.Recordset

Dim Encontro As Boolean
Dim Aux_Encontro As Boolean
Dim Vigencia_Activa As Boolean

'Dim ChequeaFirmas As Boolean
Dim Firmado As Boolean
Dim rs_firmas As New ADODB.Recordset

    Encontro = False
    OK = False
    
If Not Encontro And (Prognro = 3 Or Prognro = 12 Or Prognro = 13 Or Prognro = 14) Then
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Novedad Individual, por empleado "
    End If
    'Case 3, 12, 13, 14:
        StrSql = "SELECT * FROM novemp WHERE " & _
                 " concnro = " & concepto & _
                 " AND tpanro = " & tpanro & _
                 " AND empleado = " & buliq_cabliq!Empleado & _
                 " AND ((nevigencia = -1 " & _
                 " AND nedesde <= " & ConvFecha(Fecha_Fin) & _
                 " AND (nehasta >= " & ConvFecha(Fecha_Inicio) & _
                 " OR nehasta is null )) " & _
                 " OR nevigencia = 0)" & _
                 " ORDER BY nevigencia, nedesde, nehasta "
        OpenRecordset StrSql, rs_NovEmp
        
        val = 0
        Do While Not rs_NovEmp.EOF
            If FirmaActiva5 Then
                '/* Verificar si esta en el NIVEL FINAL DE FIRMA */
                StrSql = "select * from cysfirmas where cysfirfin = -1 " & _
                         " AND cysfircodext = '" & rs_NovEmp!nenro & "' and cystipnro = 5"
                OpenRecordset StrSql, rs_firmas
                If rs_firmas.EOF Then
                    Firmado = False
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "NIVEL FINAL DE FIRMA No Activo "
                    End If
                Else
                    Firmado = True
                End If
                If rs_firmas.State = adStateOpen Then rs_firmas.Close
            Else
                Firmado = True
            End If

        If Firmado Then
            If CBool(rs_NovEmp!nevigencia) Then
                Vigencia_Activa = True
                If Not EsNulo(rs_NovEmp!nehasta) Then
                    If (rs_NovEmp!nehasta < Fecha_Inicio) Or (Fecha_Fin < rs_NovEmp!nedesde) Then
                        'Exit Sub
                        Vigencia_Activa = False
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovEmp!nedesde & " Hasta " & rs_NovEmp!nehasta & " INACTIVA con valor " & rs_NovEmp!nevalor
                        End If
                    Else
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovEmp!nedesde & " Hasta " & rs_NovEmp!nehasta & " ACTIVA con valor " & rs_NovEmp!nevalor
                        End If
                    End If
                Else
                    If (Fecha_Fin < rs_NovEmp!nedesde) Then
                        'Exit Sub
                        Vigencia_Activa = False
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovEmp!nedesde & " Hasta indeterminado INACTIVA con valor " & rs_NovEmp!nevalor
                        End If
                    Else
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovEmp!nedesde & " Hasta indeterminado ACTIVA con valor " & rs_NovEmp!nevalor
                        End If
                    End If
                End If
            Else
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "Novedad sin vigencia con valor " & rs_NovEmp!nevalor
                End If
            End If
            
            If Vigencia_Activa Or Not CBool(rs_NovEmp!nevigencia) Then
                val = val + rs_NovEmp!nevalor
            End If
'            If Not EsNulo(rs_NovEmp!neretro) Then
'                fec = rs_NovEmp!neretro
'            End If
            
            If Not (EsNulo(rs_NovEmp!nepliqdesde) Or EsNulo(rs_NovEmp!nepliqhasta)) Then
                If rs_NovEmp!nepliqdesde <> 0 And rs_NovEmp!nepliqhasta <> 0 Then
                    Retroactivo = True
                    pliqdesde = rs_NovEmp!nepliqdesde
                    pliqhasta = rs_NovEmp!nepliqhasta
                Else
                    Retroactivo = False
                End If
            Else
                Retroactivo = False
            End If
            
            OK = True
            Encontro = True
            If guarda_nov Then
                'Crea la novedad hist¢rica
                StrSql = "SELECT * FROM hisnovemp WHERE" & _
                         " concnro = " & rs_NovEmp!concnro & _
                         " AND tpanro =" & rs_NovEmp!tpanro & _
                         " AND empleado =" & rs_NovEmp!Empleado & _
                         " AND pronro =" & buliq_proceso!pronro
                OpenRecordset StrSql, rs_HisNovEmp
                
                If rs_HisNovEmp.EOF Then
                    ' Inserta
                    If Not EsNulo(rs_NovEmp!nepliqdesde) Then
                        StrSql = "INSERT INTO hisnovemp ("
                        StrSql = StrSql & "concnro,nevalor,tpanro,empleado,pronro,fechis,nepliqdesde,nepliqhasta,nevigencia"
                        If Not EsNulo(rs_NovEmp!nedesde) Then
                            StrSql = StrSql & ",nedesde"
                        End If
                        If Not EsNulo(rs_NovEmp!nehasta) Then
                            StrSql = StrSql & ",nehasta"
                        End If
                        StrSql = StrSql & ") VALUES (" & rs_NovEmp!concnro
                        StrSql = StrSql & "," & rs_NovEmp!nevalor
                        StrSql = StrSql & "," & rs_NovEmp!tpanro
                        StrSql = StrSql & "," & rs_NovEmp!Empleado
                        StrSql = StrSql & "," & buliq_proceso!pronro
                        StrSql = StrSql & "," & ConvFecha(Date)
                        StrSql = StrSql & "," & rs_NovEmp!nepliqdesde
                        StrSql = StrSql & "," & rs_NovEmp!nepliqhasta
                        StrSql = StrSql & "," & CInt(rs_NovEmp!nevigencia)
                        If Not EsNulo(rs_NovEmp!nedesde) Then
                            StrSql = StrSql & "," & ConvFecha(rs_NovEmp!nedesde)
                        End If
                        If Not EsNulo(rs_NovEmp!nehasta) Then
                            StrSql = StrSql & "," & ConvFecha(rs_NovEmp!nehasta)
                        End If
                        StrSql = StrSql & " )"
                    Else
                        StrSql = "INSERT INTO hisnovemp ("
                        StrSql = StrSql & "concnro,nevalor,tpanro,empleado,pronro,fechis,nevigencia"
                        If Not EsNulo(rs_NovEmp!nedesde) Then
                            StrSql = StrSql & ",nedesde"
                        End If
                        If Not EsNulo(rs_NovEmp!nehasta) Then
                            StrSql = StrSql & ",nehasta"
                        End If
                        StrSql = StrSql & ") VALUES (" & rs_NovEmp!concnro
                        StrSql = StrSql & "," & rs_NovEmp!nevalor
                        StrSql = StrSql & "," & rs_NovEmp!tpanro
                        StrSql = StrSql & "," & rs_NovEmp!Empleado
                        StrSql = StrSql & "," & buliq_proceso!pronro
                        StrSql = StrSql & "," & ConvFecha(Date)
                        StrSql = StrSql & "," & CInt(rs_NovEmp!nevigencia)
                        If Not EsNulo(rs_NovEmp!nedesde) Then
                            StrSql = StrSql & "," & ConvFecha(rs_NovEmp!nedesde)
                        End If
                        If Not EsNulo(rs_NovEmp!nehasta) Then
                            StrSql = StrSql & "," & ConvFecha(rs_NovEmp!nehasta)
                        End If
                        StrSql = StrSql & " )"
                    End If
                    
                    objConn.Execute StrSql, , adExecuteNoRecords
                End If 'If Not rs_HisNovEmp.EOF Then
            End If 'If guarda_nov Then
        End If 'If Firmado Then
        
        rs_NovEmp.MoveNext
    Loop
    If Not Encontro Then
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontró ninguna Novedad Individual "
        End If
    End If
End If

If Not Encontro And (Prognro = 2 Or Prognro = 11 Or Prognro = 12 Or Prognro = 14) Then
'Case 2, 11, 12, 14:
        'buscar por Estructura
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Por estructura "
        End If
        StrSql = "SELECT * FROM novestr WHERE " & _
                 " concnro = " & concepto & _
                 " AND tpanro = " & tpanro & _
                 " AND ((ntevigencia = -1 " & _
                 " AND ntedesde <= " & ConvFecha(Fecha_Fin) & _
                 " AND (ntehasta >= " & ConvFecha(Fecha_Inicio) & " " & _
                 " OR ntehasta is null)) " & _
                 " OR ntevigencia = 0) " & _
                 " ORDER BY ntevigencia, ntedesde, ntehasta "
        OpenRecordset StrSql, rs_NovEstr
        
        OK = False
        Encontro = False
        Aux_Encontro = False
        If rs_NovEstr.EOF Then
            Firmado = False
        End If
        val = 0
        Do While Not rs_NovEstr.EOF 'And Not Encontro
            If FirmaActiva15 Then
                '/* Verificar si esta en el NIVEL FINAL DE FIRMA */
                    StrSql = "select * from cysfirmas where cysfirfin = -1 " & _
                             " AND cysfircodext = '" & rs_NovEstr!estrnro & "' and cystipnro = 15"
                    OpenRecordset StrSql, rs_firmas
                    If rs_firmas.EOF Then
                        Firmado = False
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "NIVEL FINAL DE FIRMA No Activo "
                        End If
                    Else
                        Firmado = True
                    End If
                If rs_firmas.State = adStateOpen Then rs_firmas.Close
            Else
                Firmado = True
            End If
            
            If Firmado Then
                If CBool(rs_NovEstr!ntevigencia) Then
                    Vigencia_Activa = True
                    If Not EsNulo(rs_NovEstr!ntehasta) Then
                        If (rs_NovEstr!ntehasta < Fecha_Inicio) Or (Fecha_Fin < rs_NovEstr!ntedesde) Then
                            'Exit Sub
                            Vigencia_Activa = False
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovEstr!ntedesde & " Hasta " & rs_NovEstr!ntehasta & " INACTIVA con valor " & rs_NovEstr!ntevalor
                            End If
                        Else
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovEstr!ntedesde & " Hasta " & rs_NovEstr!ntehasta & " ACTIVA con valor " & rs_NovEstr!ntevalor
                            End If
                        End If
                    Else
                        If (Fecha_Fin < rs_NovEstr!ntedesde) Then
                            'Exit Sub
                            Vigencia_Activa = False
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovEstr!ntedesde & " Hasta indeterminado INACTIVA con valor " & rs_NovEstr!ntevalor
                            End If
                        Else
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovEstr!ntedesde & " Hasta indeterminado ACTIVA con valor " & rs_NovEstr!ntevalor
                            End If
                        End If
                    End If
                End If
                
                If Vigencia_Activa Or Not CBool(rs_NovEstr!ntevigencia) Then
                    Encontro = False
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "busco que el empleado tenga la estructura " & rs_NovEstr!estrnro & " activa"
                    End If
                    
                    'busco que el empleado tenga esa estructura activa
                    StrSql = " SELECT tenro, estrnro FROM his_estructura " & _
                             " WHERE ternro = " & buliq_empleado!ternro & " AND " & _
                             " estrnro =" & rs_NovEstr!estrnro & _
                             " AND (htetdesde <= " & ConvFecha(Empleado_Fecha_Fin) & ") AND " & _
                             " ((" & ConvFecha(Empleado_Fecha_Fin) & " <= htethasta) or (htethasta is null))"
                    OpenRecordset StrSql, rs_His_Estructura
                    If Not rs_His_Estructura.EOF Then
                        val = val + rs_NovEstr!ntevalor
'                        If Not EsNulo(rs_NovEstr!nteretro) Then
'                            fec = rs_NovEstr!nteretro
'                        End If

                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "Estructura " & rs_NovEstr!estrnro & " activa"
                        End If
                        OK = True 'esta faltando retroactividad
                        Encontro = True
                        Aux_Encontro = True
                    Else
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "Estructura " & rs_NovEstr!estrnro & " No activa"
                        End If
                    End If
                End If
            End If 'firmado
           
            If Encontro And guarda_nov Then
                'Crea la novedad hist¢rica
                StrSql = "SELECT * FROM hisnovgru WHERE" & _
                         " concnro = " & rs_NovEstr!concnro & _
                         " AND tpanro =" & rs_NovEstr!tpanro & _
                         " AND grunro =" & rs_NovEstr!estrnro & _
                         " AND pronro =" & buliq_proceso!pronro
                OpenRecordset StrSql, rs_HisNovEstr
                
                If rs_HisNovEstr.EOF Then
                    ' Inserta
                    StrSql = "INSERT INTO hisnovgru (" & _
                             "concnro,ngvalor,tpanro,grunro,pronro,fechis,ngvigencia" & _
                             ") VALUES (" & rs_NovEstr!concnro & _
                             "," & rs_NovEstr!ntevalor & _
                             "," & rs_NovEstr!tpanro & _
                             "," & rs_NovEstr!estrnro & _
                             "," & buliq_proceso!pronro & _
                             "," & ConvFecha(Date) & _
                             " ,0)"
                             ' esta faltando retroactividad
                    objConn.Execute StrSql, , adExecuteNoRecords
                End If 'If Not rs_HisNovEstr.EOF Then
            End If 'If guarda_nov Then
            
            rs_NovEstr.MoveNext
        Loop
        Encontro = Aux_Encontro
        If Not Encontro Then
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "No se encontró ninguna Novedad por Estructura"
            End If
        End If
End If

If Not Encontro And (Prognro = 1 Or Prognro = 11 Or Prognro = 12 Or Prognro = 13) Then
'Case 1, 11, 12, 13:

    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Global "
    End If
    
' FGZ - 09/02/2004
    If objCache_NovGlobales.EsSimboloDefinido(CStr(concepto & "-" & tpanro)) Then
        val = objCache_NovGlobales.Valor(CStr(concepto & "-" & tpanro))
        
        OK = True 'esta faltando retroactividad
        Encontro = True
        If guarda_nov Then
            'Crea la novedad hist¢rica
            StrSql = "SELECT * FROM hisnovgral WHERE"
            StrSql = StrSql & " concnro = " & rs_NovGral!concnro
            StrSql = StrSql & " AND tpanro =" & rs_NovGral!tpanro
            StrSql = StrSql & " AND pronro =" & buliq_proceso!pronro
            OpenRecordset StrSql, rs_HisNovGral
            
            If rs_HisNovGral.EOF Then
                ' Inserta
                StrSql = "INSERT INTO hisnovgral ("
                StrSql = StrSql & "concnro,ngravalor,tpanro,pronro,fechis,ngravigencia"
                StrSql = StrSql & ") VALUES (" & rs_NovGral!concnro
                StrSql = StrSql & "," & rs_NovGral!ngravalor
                StrSql = StrSql & "," & rs_NovGral!tpanro
                StrSql = StrSql & "," & buliq_proceso!pronro
                StrSql = StrSql & "," & ConvFecha(Date)
                StrSql = StrSql & ",0 )"
                         ' esta faltando retroactividad
                objConn.Execute StrSql, , adExecuteNoRecords
            End If 'If Not rs_HisNovGral.EOF Then
        End If 'If guarda_nov Then
        
    Else
        StrSql = "SELECT * FROM novgral WHERE " & _
                 " concnro = " & concepto & _
                 " AND tpanro = " & tpanro & _
                 " AND ((ngravigencia = -1 " & _
                 " AND ngradesde < " & ConvFecha(Fecha_Fin) & " " & _
                 " AND (ngrahasta >= " & ConvFecha(Fecha_Inicio) & " " & _
                 " OR ngrahasta is null)) " & _
                 " OR ngravigencia = 0) " & _
                 " ORDER BY ngravigencia, ngradesde, ngrahasta "
        OpenRecordset StrSql, rs_NovGral
           
        Do While Not rs_NovGral.EOF
            If FirmaActiva19 Then
                '/* Verificar si esta en el NIVEL FINAL DE FIRMA */
                    StrSql = "select * from cysfirmas where cysfirfin = -1 " & _
                             " AND cysfircodext = '" & rs_NovGral!ngranro & "' and cystipnro = 19"
                    OpenRecordset StrSql, rs_firmas
                    If rs_firmas.EOF Then
                        Firmado = False
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "NIVEL FINAL DE FIRMA No Activo "
                        End If
                    Else
                        Firmado = True
                    End If
                If rs_firmas.State = adStateOpen Then rs_firmas.Close
            Else
                Firmado = True
            End If
        
            If Firmado Then
                If CBool(rs_NovGral!ngravigencia) Then
                    Vigencia_Activa = True
                    If Not EsNulo(rs_NovGral!ngrahasta) Then
                        If (rs_NovGral!ngrahasta < Fecha_Inicio) Or (Fecha_Fin < rs_NovGral!ngradesde) Then
                            'Exit Sub
                            Vigencia_Activa = False
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovGral!ngradesde & " Hasta " & rs_NovGral!ngrahasta & " INACTIVA con valor " & rs_NovGral!ngravalor
                            End If
                        Else
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovGral!ngradesde & " Hasta " & rs_NovGral!ngrahasta & " ACTIVA con valor " & rs_NovGral!ngravalor
                            End If
                        End If
                    Else
                        If (Fecha_Fin < rs_NovGral!ngradesde) Then
                            'Exit Sub
                            Vigencia_Activa = False
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovGral!ngradesde & " Hasta indeterminado INACTIVA con valor " & rs_NovGral!ngravalor
                            End If
                        Else
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovGral!ngradesde & " Hasta indeterminado ACTIVA con valor " & rs_NovGral!ngravalor
                            End If
                        End If
                    End If
                End If
                
                If Vigencia_Activa Or Not CBool(rs_NovGral!ngravigencia) Then
                    val = val + rs_NovGral!ngravalor
                    
'                    If Not EsNulo(rs_NovGral!ngraretro) Then
'                        fec = rs_NovGral!ngraretro
'                    End If
'                    If rs_NovGral!ngrapliqdesde <> 0 And rs_NovGral!ngrapliqhasta <> 0 Then
'                        Retroactivo = True
'                        pliqdesde = rs_NovGral!ngrapliqdesde
'                        pliqhasta = rs_NovGral!ngrapliqhasta

'                    Else
'                        Retroactivo = False
'                    End If
                    
                    
                    OK = True 'esta faltando retroactividad
                    Encontro = True
                    If guarda_nov Then
                        'Crea la novedad hist¢rica
                        StrSql = "SELECT * FROM hisnovgral WHERE"
                        StrSql = StrSql & " concnro = " & rs_NovGral!concnro
                        StrSql = StrSql & " AND tpanro =" & rs_NovGral!tpanro
                        StrSql = StrSql & " AND pronro =" & buliq_proceso!pronro
                        OpenRecordset StrSql, rs_HisNovGral
                        
                        If rs_HisNovGral.EOF Then
                            ' Inserta
                            StrSql = "INSERT INTO hisnovgral ("
                            StrSql = StrSql & "concnro,ngravalor,tpanro,pronro,fechis"
                            StrSql = StrSql & ") VALUES (" & rs_NovGral!concnro
                            StrSql = StrSql & "," & rs_NovGral!ngravalor
                            StrSql = StrSql & "," & rs_NovGral!tpanro
                            StrSql = StrSql & "," & buliq_proceso!pronro
                            StrSql = StrSql & "," & ConvFecha(Date)
                            StrSql = StrSql & " )"
                                     ' esta faltando retroactividad
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If 'If Not rs_HisNovGral.EOF Then
                    End If 'If guarda_nov Then
                End If
            End If 'If Firmado Then
            
            rs_NovGral.MoveNext
        Loop
        
        If Encontro Then
            'inserto la novedad en el cache
            Call objCache_NovGlobales.Insertar_Simbolo(CStr(concepto & "-" & tpanro & "0"), val)
        Else
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "No se encontró ninguna Novedad global"
            End If
        End If
    End If
End If

' Libero y cierro
If rs_NovEmp.State = adStateOpen Then rs_NovEmp.Close
Set rs_NovEmp = Nothing

If rs_NovEstr.State = adStateOpen Then rs_NovEstr.Close
Set rs_NovEstr = Nothing

If rs_NovGral.State = adStateOpen Then rs_NovGral.Close
Set rs_NovGral = Nothing

'Historicos
If rs_HisNovEmp.State = adStateOpen Then rs_HisNovEmp.Close
Set rs_HisNovEmp = Nothing

If rs_HisNovEstr.State = adStateOpen Then rs_HisNovEstr.Close
Set rs_HisNovEstr = Nothing

If rs_HisNovGral.State = adStateOpen Then rs_HisNovGral.Close
Set rs_HisNovGral = Nothing

End Sub

Public Sub Bus_NovGegi_Nuevo(ByVal Prognro As Long, ByVal concepto As Long, ByVal tpanro As Long, ByVal Fecha_Inicio As Date, ByVal Fecha_Fin As Date, ByVal Grupo As Long, ByRef OK As Boolean, ByRef val As Double, ByRef TipoNovedad As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Obtencion de novedad a Nivel General/Grupal/Individual. novgegi.p
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim rs_NovEmp As New ADODB.Recordset
Dim rs_NovEstr As New ADODB.Recordset
Dim rs_NovGral As New ADODB.Recordset

Dim rs_HisNovEmp As New ADODB.Recordset
Dim rs_HisNovEstr As New ADODB.Recordset
Dim rs_HisNovGral As New ADODB.Recordset

Dim Encontro As Boolean
    
Dim ChequeaFirmas As Boolean
Dim Firmado As Boolean
Dim rs_firmas As New ADODB.Recordset

    Encontro = False
    OK = False
    
BuscarIndividual:
If Not Encontro Then
    'Case 3, 12, 13, 14:
'    Call RevisarFirmas(5, ChequeaFirmas)
        StrSql = "SELECT * FROM novemp WHERE " & _
                 " concnro = " & concepto & _
                 " AND tpanro = " & tpanro & _
                 " AND empleado = " & buliq_cabliq!Empleado
        OpenRecordset StrSql, rs_NovEmp
        
        If Not rs_NovEmp.EOF Then
            If FirmaActiva5 Then
                '/* Verificar si esta en el NIVEL FINAL DE FIRMA */
                StrSql = "select * from cysfirmas where cysfirfin = -1 " & _
                         " AND cysfircodext = '" & rs_NovEmp!nenro & "' and cystipnro = 5"
                OpenRecordset StrSql, rs_firmas
                If rs_firmas.EOF Then
                    Firmado = False
                Else
                    Firmado = True
                End If
                If rs_firmas.State = adStateOpen Then rs_firmas.Close
            Else
                Firmado = True
            End If
        Else
            Firmado = False
        End If

        If Firmado Then
            If CBool(rs_NovEmp!nevigencia) Then
                If (rs_NovEmp!nehasta < Fecha_Inicio) Or (Fecha_Fin < rs_NovEmp!nedesde) Then
                    GoTo BuscarPorEstructura
                    'Exit Sub
                End If
            End If
            
            val = rs_NovEmp!nevalor
'            If Not EsNulo(rs_NovEmp!neretro) Then
'                fec = rs_NovEmp!neretro
'            End If
            
            If Not (EsNulo(rs_NovEmp!nepliqdesde) Or EsNulo(rs_NovEmp!nepliqhasta)) Then
                If rs_NovEmp!nepliqdesde <> 0 And rs_NovEmp!nepliqhasta <> 0 Then
                    Retroactivo = True
                    pliqdesde = rs_NovEmp!nepliqdesde
                    pliqhasta = rs_NovEmp!nepliqhasta
    
                Else
                    Retroactivo = False
                End If
            Else
                Retroactivo = False
            End If
            
            OK = True
            Encontro = True
            TipoNovedad = "Individual"
            
            If guarda_nov Then
                'Crea la novedad hist¢rica
                StrSql = "SELECT * FROM hisnovemp WHERE" & _
                         " concnro = " & rs_NovEmp!concnro & _
                         " AND tpanro =" & rs_NovEmp!tpanro & _
                         " AND empleado =" & rs_NovEmp!Empleado & _
                         " AND pronro =" & buliq_proceso!pronro
                OpenRecordset StrSql, rs_HisNovEmp
                
                If rs_HisNovEmp.EOF Then
                    ' Inserta
                    If Not EsNulo(rs_NovEmp!nepliqdesde) Then
                        StrSql = "INSERT INTO hisnovemp (" & _
                                 "concnro,nevalor,nevigencia,nedesde,nehsta,tpanro,empleado,pronro,fechis,nepliqdesde,nepliqhasta" & _
                                 ") VALUES (" & rs_NovEmp!concnro & _
                                 "," & rs_NovEmp!nevalor & _
                                 "," & rs_NovEmp!tpanro & _
                                 "," & rs_NovEmp!Empleado & _
                                 "," & buliq_proceso!pronro & _
                                 "," & ConvFecha(Date) & _
                                 "," & rs_NovEmp!nepliqdesde & _
                                 "," & rs_NovEmp!nepliqhasta & _
                                 " )"
                    Else
                        StrSql = "INSERT INTO hisnovemp (" & _
                                 "concnro,nevalor,tpanro,empleado,pronro,fechis" & _
                                 ") VALUES (" & rs_NovEmp!concnro & _
                                 "," & rs_NovEmp!nevalor & _
                                 "," & rs_NovEmp!tpanro & _
                                 "," & rs_NovEmp!Empleado & _
                                 "," & buliq_proceso!pronro & _
                                 "," & ConvFecha(Date) & _
                                 " )"
                    End If
                    
                    objConn.Execute StrSql, , adExecuteNoRecords
                End If 'If Not rs_HisNovEmp.EOF Then
            End If 'If guarda_nov Then
        End If 'If Firmado Then
End If

BuscarPorEstructura:
If Not Encontro Then
'Case 2, 11, 12, 14:
'buscar por Estructura
'    Call RevisarFirmas(15, ChequeaFirmas)
        StrSql = "SELECT * FROM novestr WHERE " & _
                 " concnro = " & concepto & _
                 " AND tpanro = " & tpanro & _
                 " AND estrnro = " & Grupo
        OpenRecordset StrSql, rs_NovEstr
        
        If Not rs_NovEstr.EOF Then
            If FirmaActiva15 Then
                '/* Verificar si esta en el NIVEL FINAL DE FIRMA */
                    StrSql = "select * from cysfirmas where cysfirfin = -1 " & _
                             " AND cysfircodext = '" & rs_NovEstr!nanro & "' and cystipnro = 15"
                    OpenRecordset StrSql, rs_firmas
                    If rs_firmas.EOF Then
                        Firmado = False
                    Else
                        Firmado = True
                    End If
                If rs_firmas.State = adStateOpen Then rs_firmas.Close
            Else
                Firmado = True
            End If
        Else
            Firmado = False
        End If
            
        If Firmado Then
            If CBool(rs_NovEstr!ntevigencia) Then
                If (rs_NovEstr!ntehasta < Fecha_Inicio) Or (Fecha_Fin < rs_NovEstr!ntedesde) Then
                    GoTo BuscarGlobal
                    'Exit Sub
                End If
            End If
            
            val = rs_NovEstr!ntevalor
'            If Not EsNulo(rs_NovEstr!nteretro) Then
'                fec = rs_NovEstr!nteretro
'            End If
            
            'If rs_NovEstr!nepliqdesde <> 0 And rs_NovEstr!nepliqhasta <> 0 Then
            '    retroactivo = True
            'Else
            '    retroactivo = False
            'End If
            '
            'pliqdesde = rs_NovEstr!nepliqdesde
            'pliqhasta = rs_NovEstr!nepliqhasta
            OK = True 'esta faltando retroactividad
            Encontro = True
            TipoNovedad = "Estructura"
            
            If guarda_nov Then
                'Crea la novedad hist¢rica
                StrSql = "SELECT * FROM hisnovgru WHERE" & _
                         " concnro = " & rs_NovEstr!concnro & _
                         " AND tpanro =" & rs_NovEstr!tpanro & _
                         " AND grunro =" & rs_NovEstr!estrnro & _
                         " AND pronro =" & buliq_proceso!pronro
                OpenRecordset StrSql, rs_HisNovEstr
                
                If Not rs_HisNovEstr.EOF Then
                    ' Inserta
                    StrSql = "INSERT INTO hisnovgru (" & _
                             "concnro,ngvalor,tpanro,grunro,pronro,fechis" & _
                             ") VALUES (" & rs_NovEstr!concnro & _
                             "," & rs_NovEstr!ntevalor & _
                             "," & rs_NovEstr!tpanro & _
                             "," & rs_NovEstr!estrnro & _
                             "," & rs_NovEstr!pronro & _
                             "," & ConvFecha(Date) & _
                             " )"
                             ' esta faltando retroactividad
                    objConn.Execute StrSql, , adExecuteNoRecords
                End If 'If Not rs_HisNovEstr.EOF Then
            End If 'If guarda_nov Then
    End If 'If Firmado Then
End If

BuscarGlobal:
If Not Encontro Then
'Case 1, 11, 12, 13:
' buscar general
'    Call RevisarFirmas(19, ChequeaFirmas)
    StrSql = "SELECT * FROM novgral WHERE " & _
             " concnro = " & concepto & _
             " AND tpanro = " & tpanro
    OpenRecordset StrSql, rs_NovGral
    
    If Not rs_NovGral.EOF Then
        If FirmaActiva19 Then
            '/* Verificar si esta en el NIVEL FINAL DE FIRMA */
                StrSql = "select * from cysfirmas where cysfirfin = -1 " & _
                         " AND cysfircodext = '" & rs_NovGral!nanro & "' and cystipnro = 19"
                OpenRecordset StrSql, rs_firmas
                If rs_firmas.EOF Then
                    Firmado = False
                Else
                    Firmado = True
                End If
            If rs_firmas.State = adStateOpen Then rs_firmas.Close
        Else
            Firmado = True
        End If
    Else
        Firmado = False
    End If
    
    If Firmado Then
            If CBool(rs_NovGral!ngravigencia) Then
                If (rs_NovGral!ngrahasta < Fecha_Inicio) Or (Fecha_Fin < rs_NovGral!ngradesde) Then
                    Exit Sub
                End If
            End If
            
            val = rs_NovGral!ngravalor
'            If Not EsNulo(rs_NovGral!ngraretro) Then
'                fec = rs_NovGral!ngraretro
'            End If
'            If rs_NovGral!ngrapliqdesde <> 0 And rs_NovGral!ngrapliqhasta <> 0 Then
'                Retroactivo = True
'                pliqdesde = rs_NovGral!ngrapliqdesde
'                pliqhasta = rs_NovGral!ngrapliqhasta
'            Else
'                Retroactivo = False
'            End If
            
            
            OK = True 'esta faltando retroactividad
            Encontro = True
            TipoNovedad = "Global"
            
            If guarda_nov Then
                'Crea la novedad hist¢rica
                StrSql = "SELECT * FROM hisnovgral WHERE" & _
                         " concnro = " & rs_NovGral!concnro & _
                         " AND tpanro =" & rs_NovGral!tpanro & _
                         " AND pronro =" & buliq_proceso!pronro
                OpenRecordset StrSql, rs_HisNovGral
                
                If Not rs_HisNovGral.EOF Then
                    ' Inserta
                    StrSql = "INSERT INTO hisnovgral (" & _
                             "concnro,ngravalor,tpanro,pronro,fechis" & _
                             ") VALUES (" & rs_NovGral!concnro & _
                             "," & rs_NovGral!ngravalor & _
                             "," & rs_NovGral!tpanro & _
                             "," & rs_NovGral!pronro & _
                             "," & ConvFecha(Date) & _
                             " )"
                             ' esta faltando retroactividad
                    objConn.Execute StrSql, , adExecuteNoRecords
                End If 'If Not rs_HisNovGral.EOF Then
            End If 'If guarda_nov Then
    End If 'If Firmado Then
End If

' Libero y cierro
If rs_NovEmp.State = adStateOpen Then rs_NovEmp.Close
Set rs_NovEmp = Nothing

If rs_NovEstr.State = adStateOpen Then rs_NovEstr.Close
Set rs_NovEstr = Nothing

If rs_NovGral.State = adStateOpen Then rs_NovGral.Close
Set rs_NovGral = Nothing

'Historicos
If rs_HisNovEmp.State = adStateOpen Then rs_HisNovEmp.Close
Set rs_HisNovEmp = Nothing

If rs_HisNovEstr.State = adStateOpen Then rs_HisNovEstr.Close
Set rs_HisNovEstr = Nothing

If rs_HisNovGral.State = adStateOpen Then rs_HisNovGral.Close
Set rs_HisNovGral = Nothing

End Sub


Public Sub Bus_NovGegiHis(ByVal Prognro As Long, ByVal concepto As Long, ByVal tpanro As Long, ByVal Fecha_Inicio As Date, ByVal Fecha_Fin As Date, ByVal Grupo As Long, ByRef OK As Boolean, ByRef val As Double)
' ---------------------------------------------------------------------------------------------
' Descripcion: Obtencion de novedad a Nivel General/Grupal/Individual. novgegi.p del Historico
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim rs_NovEmp As New ADODB.Recordset
Dim rs_NovEstr As New ADODB.Recordset
Dim rs_NovGral As New ADODB.Recordset
Dim rs_His_Estructura As New ADODB.Recordset
Dim rs_HisNovEmp As New ADODB.Recordset
Dim rs_HisNovEstr As New ADODB.Recordset
Dim rs_HisNovGral As New ADODB.Recordset

Dim Encontro As Boolean
Dim Aux_Encontro As Boolean
Dim Vigencia_Activa As Boolean

Dim Firmado As Boolean
Dim rs_firmas As New ADODB.Recordset

    Encontro = False
    OK = False
    
If Not Encontro And (Prognro = 3 Or Prognro = 12 Or Prognro = 13 Or Prognro = 14) Then
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Novedad Individual, por empleado "
    End If
    'Case 3, 12, 13, 14:
        StrSql = "SELECT * FROM hisnovemp WHERE " & _
                 " concnro = " & concepto & _
                 " AND tpanro = " & tpanro & _
                 " AND pronro = " & buliq_proceso!pronro & _
                 " AND empleado = " & buliq_cabliq!Empleado & _
                 " AND ((nevigencia = -1 " & _
                 " AND nedesde <= " & ConvFecha(Fecha_Fin) & _
                 " AND (nehasta >= " & ConvFecha(Fecha_Inicio) & _
                 " OR nehasta is null )) " & _
                 " OR nevigencia = 0)" & _
                 " ORDER BY nevigencia, nedesde, nehasta "
        OpenRecordset StrSql, rs_NovEmp
        
        val = 0
        Do While Not rs_NovEmp.EOF
            If FirmaActiva5 Then
                '/* Verificar si esta en el NIVEL FINAL DE FIRMA */
                StrSql = "select * from cysfirmas where cysfirfin = -1 " & _
                         " AND cysfircodext = '" & rs_NovEmp!nenro & "' and cystipnro = 5"
                OpenRecordset StrSql, rs_firmas
                If rs_firmas.EOF Then
                    Firmado = False
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "NIVEL FINAL DE FIRMA No Activo "
                    End If
                Else
                    Firmado = True
                End If
                If rs_firmas.State = adStateOpen Then rs_firmas.Close
            Else
                Firmado = True
            End If

        If Firmado Then
            If CBool(rs_NovEmp!nevigencia) Then
                Vigencia_Activa = True
                If Not EsNulo(rs_NovEmp!nehasta) Then
                    If (rs_NovEmp!nehasta < Fecha_Inicio) Or (Fecha_Fin < rs_NovEmp!nedesde) Then
                        'Exit Sub
                        Vigencia_Activa = False
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovEmp!nedesde & " Hasta " & rs_NovEmp!nehasta & " INACTIVA con valor " & rs_NovEmp!nevalor
                        End If
                    Else
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovEmp!nedesde & " Hasta " & rs_NovEmp!nehasta & " ACTIVA con valor " & rs_NovEmp!nevalor
                        End If
                    End If
                Else
                    If (Fecha_Fin < rs_NovEmp!nedesde) Then
                        'Exit Sub
                        Vigencia_Activa = False
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovEmp!nedesde & " Hasta indeterminado INACTIVA con valor " & rs_NovEmp!nevalor
                        End If
                    Else
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovEmp!nedesde & " Hasta indeterminado ACTIVA con valor " & rs_NovEmp!nevalor
                        End If
                    End If
                End If
            Else
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "Novedad sin vigencia con valor " & rs_NovEmp!nevalor
                End If
            End If
            
            If Vigencia_Activa Or Not CBool(rs_NovEmp!nevigencia) Then
                val = val + rs_NovEmp!nevalor
            End If
            
            If Not (EsNulo(rs_NovEmp!nepliqdesde) Or EsNulo(rs_NovEmp!nepliqhasta)) Then
                If rs_NovEmp!nepliqdesde <> 0 And rs_NovEmp!nepliqhasta <> 0 Then
                    Retroactivo = True
                    pliqdesde = rs_NovEmp!nepliqdesde
                    pliqhasta = rs_NovEmp!nepliqhasta
                Else
                    Retroactivo = False
                End If
            Else
                Retroactivo = False
            End If
            
            OK = True
            Encontro = True
        End If 'If Firmado Then
        
        rs_NovEmp.MoveNext
    Loop
    If Not Encontro Then
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontró ninguna Novedad Individual "
        End If
    End If
End If

If Not Encontro And (Prognro = 2 Or Prognro = 11 Or Prognro = 12 Or Prognro = 14) Then
'Case 2, 11, 12, 14:
        'buscar por Estructura
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Por estructura "
        End If
        StrSql = "SELECT * FROM hisnovgru WHERE " & _
                 " concnro = " & concepto & _
                 " AND tpanro = " & tpanro & _
                 " AND pronro = " & buliq_proceso!pronro & _
                 " ORDER BY ngvigencia, ngdesde, nghasta "
        
        'StrSql = "SELECT * FROM hisnovgru WHERE " & _
        '         " concnro = " & concepto & _
        '         " AND tpanro = " & tpanro & _
        '         " AND pronro = " & buliq_proceso!pronro & _
        '         " AND ((ngvigencia = -1 " & _
        '         " AND ngdesde <= " & ConvFecha(Fecha_Fin) & _
        '         " AND (nghasta >= " & ConvFecha(Fecha_inicio) & " " & _
        '         " OR nghasta is null)) " & _
        '         " OR ngvigencia = 0) " & _
        '         " ORDER BY ngvigencia, ngdesde, nghasta "
        OpenRecordset StrSql, rs_NovEstr
        
        OK = False
        Encontro = False
        Aux_Encontro = False
        If rs_NovEstr.EOF Then
            Firmado = False
        End If
        val = 0
        Do While Not rs_NovEstr.EOF 'And Not Encontro
            If FirmaActiva15 Then
                '/* Verificar si esta en el NIVEL FINAL DE FIRMA */
                    StrSql = "select * from cysfirmas where cysfirfin = -1 " & _
                             " AND cysfircodext = '" & rs_NovEstr!grunro & "' and cystipnro = 15"
                    OpenRecordset StrSql, rs_firmas
                    If rs_firmas.EOF Then
                        Firmado = False
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "NIVEL FINAL DE FIRMA No Activo "
                        End If
                    Else
                        Firmado = True
                    End If
                If rs_firmas.State = adStateOpen Then rs_firmas.Close
            Else
                Firmado = True
            End If
            
            If Firmado Then
                If CBool(rs_NovEstr!ngvigencia) Then
                    Vigencia_Activa = True
                    If Not EsNulo(rs_NovEstr!nghasta) Then
                        If (rs_NovEstr!nghasta < Fecha_Inicio) Or (Fecha_Fin < rs_NovEstr!ngdesde) Then
                            'Exit Sub
                            Vigencia_Activa = False
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovEstr!ngdesde & " Hasta " & rs_NovEstr!nghasta & " INACTIVA con valor " & rs_NovEstr!ngvalor
                            End If
                        Else
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovEstr!ngdesde & " Hasta " & rs_NovEstr!nghasta & " ACTIVA con valor " & rs_NovEstr!ngvalor
                            End If
                        End If
                    Else
                        If (Fecha_Fin < rs_NovEstr!ngdesde) Then
                            'Exit Sub
                            Vigencia_Activa = False
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovEstr!ngdesde & " Hasta indeterminado INACTIVA con valor " & rs_NovEstr!ngvalor
                            End If
                        Else
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovEstr!ngdesde & " Hasta indeterminado ACTIVA con valor " & rs_NovEstr!ngvalor
                            End If
                        End If
                    End If
                End If
                
                If Vigencia_Activa Or Not CBool(rs_NovEstr!ngvigencia) Then
                    Encontro = False
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "busco que el empleado tenga la estructura " & rs_NovEstr!grunro & " activa"
                    End If
                    
                    'busco que el empleado tenga esa estructura activa
                    StrSql = " SELECT tenro, estrnro FROM his_estructura " & _
                             " WHERE ternro = " & buliq_empleado!ternro & " AND " & _
                             " estrnro =" & rs_NovEstr!grunro & _
                             " AND (htetdesde <= " & ConvFecha(Empleado_Fecha_Fin) & ") AND " & _
                             " ((" & ConvFecha(Empleado_Fecha_Fin) & " <= htethasta) or (htethasta is null))"
                    OpenRecordset StrSql, rs_His_Estructura
                    If Not rs_His_Estructura.EOF Then
                        val = val + rs_NovEstr!ngvalor

                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "Estructura " & rs_NovEstr!grunro & " activa"
                        End If
                        OK = True 'esta faltando retroactividad
                        Encontro = True
                        Aux_Encontro = True
                    Else
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "Estructura " & rs_NovEstr!estrnro & " No activa"
                        End If
                    End If
                End If
            End If 'firmado
           
            rs_NovEstr.MoveNext
        Loop
        Encontro = Aux_Encontro
        If Not Encontro Then
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "No se encontró ninguna Novedad por Estructura"
            End If
        End If
End If

If Not Encontro And (Prognro = 1 Or Prognro = 11 Or Prognro = 12 Or Prognro = 13) Then
'Case 1, 11, 12, 13:

    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Global "
    End If
    
' FGZ - 09/02/2004
    If objCache_NovGlobales.EsSimboloDefinido(CStr(concepto & "-" & tpanro)) Then
        val = objCache_NovGlobales.Valor(CStr(concepto & "-" & tpanro))
        
        OK = True 'esta faltando retroactividad
        Encontro = True
    Else
        StrSql = "SELECT * FROM novgral WHERE " & _
                 " concnro = " & concepto & _
                 " AND tpanro = " & tpanro & _
                 " AND ((ngravigencia = -1 " & _
                 " AND ngradesde < " & ConvFecha(Fecha_Fin) & " " & _
                 " AND (ngrahasta >= " & ConvFecha(Fecha_Inicio) & " " & _
                 " OR ngrahasta is null)) " & _
                 " OR ngravigencia = 0) " & _
                 " ORDER BY ngravigencia, ngradesde, ngrahasta "
        OpenRecordset StrSql, rs_NovGral
           
        Do While Not rs_NovGral.EOF
            If FirmaActiva19 Then
                '/* Verificar si esta en el NIVEL FINAL DE FIRMA */
                    StrSql = "select * from cysfirmas where cysfirfin = -1 " & _
                             " AND cysfircodext = '" & rs_NovGral!ngranro & "' and cystipnro = 19"
                    OpenRecordset StrSql, rs_firmas
                    If rs_firmas.EOF Then
                        Firmado = False
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "NIVEL FINAL DE FIRMA No Activo "
                        End If
                    Else
                        Firmado = True
                    End If
                If rs_firmas.State = adStateOpen Then rs_firmas.Close
            Else
                Firmado = True
            End If
        
            If Firmado Then
                If CBool(rs_NovGral!ngravigencia) Then
                    Vigencia_Activa = True
                    If Not EsNulo(rs_NovGral!ngrahasta) Then
                        If (rs_NovGral!ngrahasta < Fecha_Inicio) Or (Fecha_Fin < rs_NovGral!ngradesde) Then
                            'Exit Sub
                            Vigencia_Activa = False
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovGral!ngradesde & " Hasta " & rs_NovGral!ngrahasta & " INACTIVA con valor " & rs_NovGral!ngravalor
                            End If
                        Else
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovGral!ngradesde & " Hasta " & rs_NovGral!ngrahasta & " ACTIVA con valor " & rs_NovGral!ngravalor
                            End If
                        End If
                    Else
                        If (Fecha_Fin < rs_NovGral!ngradesde) Then
                            Vigencia_Activa = False
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovGral!ngradesde & " Hasta indeterminado INACTIVA con valor " & rs_NovGral!ngravalor
                            End If
                        Else
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovGral!ngradesde & " Hasta indeterminado ACTIVA con valor " & rs_NovGral!ngravalor
                            End If
                        End If
                    End If
                End If
                
                If Vigencia_Activa Or Not CBool(rs_NovGral!ngravigencia) Then
                    val = val + rs_NovGral!ngravalor
                    
                    OK = True 'esta faltando retroactividad
                    Encontro = True
                End If
            End If 'If Firmado Then
            
            rs_NovGral.MoveNext
        Loop
        
        If Encontro Then
            'inserto la novedad en el cache
            Call objCache_NovGlobales.Insertar_Simbolo(CStr(concepto & "-" & tpanro & "0"), val)
        Else
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "No se encontró ninguna Novedad global"
            End If
        End If
    End If
End If

' Libero y cierro
If rs_NovEmp.State = adStateOpen Then rs_NovEmp.Close
Set rs_NovEmp = Nothing

If rs_NovEstr.State = adStateOpen Then rs_NovEstr.Close
Set rs_NovEstr = Nothing

If rs_NovGral.State = adStateOpen Then rs_NovGral.Close
Set rs_NovGral = Nothing

'Historicos
If rs_HisNovEmp.State = adStateOpen Then rs_HisNovEmp.Close
Set rs_HisNovEmp = Nothing

If rs_HisNovEstr.State = adStateOpen Then rs_HisNovEstr.Close
Set rs_HisNovEstr = Nothing

If rs_HisNovGral.State = adStateOpen Then rs_HisNovGral.Close
Set rs_HisNovGral = Nothing

End Sub



Public Sub Bus_NovGegiHis_old(ByVal Prognro As Long, ByVal concepto As Long, ByVal tpanro As Long, ByVal Fecha_Inicio As Date, ByVal Fecha_Fin As Date, ByVal Grupo As Long, ByRef OK As Boolean, ByRef val As Double)
' ---------------------------------------------------------------------------------------------
' Descripcion: Obtencion de novedad Historicas a Nivel General/Grupal/Individual.
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim rs_NovEmp As New ADODB.Recordset
Dim rs_NovEstr As New ADODB.Recordset
Dim rs_NovGral As New ADODB.Recordset
Dim rs_His_Estructura As New ADODB.Recordset
Dim Encontro As Boolean
    

Encontro = False
OK = False
    
If Not Encontro And (Prognro = 3 Or Prognro = 12 Or Prognro = 13 Or Prognro = 14) Then
    'Case 3, 12, 13, 14:
        StrSql = "SELECT * FROM hisnovemp WHERE " & _
                 " concnro = " & concepto & _
                 " AND tpanro = " & tpanro & _
                 " AND pronro =" & buliq_proceso!tpanro & _
                 " AND empleado = " & buliq_cabliq!Empleado
        OpenRecordset StrSql, rs_NovEmp
        
        If Not rs_NovEmp.EOF Then
            val = rs_NovEmp!nevalor
'            If Not EsNulo(rs_NovEmp!neretro) Then
'                fec = rs_NovEmp!neretro
'            End If
            
            If rs_NovEmp!nepliqdesde <> 0 And rs_NovEmp!nepliqhasta <> 0 Then
                Retroactivo = True
                pliqdesde = rs_NovEmp!nepliqdesde
                pliqhasta = rs_NovEmp!nepliqhasta
            Else
                Retroactivo = False
            End If
        End If
End If

If Not Encontro And (Prognro = 2 Or Prognro = 11 Or Prognro = 12 Or Prognro = 14) Then
'Case 2, 11, 12, 14:
'/* buscar por GRUPO */
'        StrSql = "SELECT * FROM hisnovgrup WHERE " & _
'                 " concnro = " & concepto & _
'                 " AND tpanro = " & tpanro & _
'                 " AND grunro = " & Grupo & _
'                 " AND pronro =" & buliq_proceso!tpanro
        
        StrSql = "SELECT * FROM hisnovgrup WHERE " & _
                 " concnro = " & concepto & _
                 " AND tpanro = " & tpanro & _
                 " AND pronro =" & buliq_proceso!tpanro
        OpenRecordset StrSql, rs_NovEstr
        
        If Not rs_NovEstr.EOF Then
            'busco que el empleado tenga esa estructura activa
            StrSql = " SELECT tenro, estrnro FROM his_estructura " & _
                     " WHERE ternro = " & buliq_empleado!ternro & " AND " & _
                     " (htetdesde <= " & ConvFecha(Empleado_Fecha_Fin) & ") AND " & _
                     " ((" & ConvFecha(Empleado_Fecha_Fin) & " <= htethasta) or (htethasta is null))"
            OpenRecordset StrSql, rs_His_Estructura
            If Not rs_His_Estructura.EOF Then
                val = rs_NovEstr!ntevalor
'                If Not EsNulo(rs_NovEstr!nteretro) Then
'                    fec = rs_NovEstr!nteretro
'                End If
                
                
                OK = True 'esta faltando retroactividad
                Encontro = True
            Else
                OK = False 'esta faltando retroactividad
                Encontro = False
            End If
        End If
End If

If Not Encontro And (Prognro = 1 Or Prognro = 11 Or Prognro = 12 Or Prognro = 13) Then
'Case 1, 11, 12, 13:
' buscar general
        StrSql = "SELECT * FROM hisnovgral WHERE " & _
                 " concnro = " & concepto & _
                 " AND tpanro = " & tpanro & _
                 " AND pronro =" & buliq_proceso!tpanro
        OpenRecordset StrSql, rs_NovGral
        
        If Not rs_NovGral.EOF Then
            val = rs_NovGral!ngravalor
'            If Not EsNulo(rs_NovGral!ngraretro) Then
'                fec = rs_NovGral!ngraretro
'            End If
           
            OK = True 'esta faltando retroactividad
            Encontro = True
        End If
End If

' Libero y cierro
If rs_NovEmp.State = adStateOpen Then rs_NovEmp.Close
Set rs_NovEmp = Nothing

If rs_NovEstr.State = adStateOpen Then rs_NovEstr.Close
Set rs_NovEstr = Nothing

If rs_NovGral.State = adStateOpen Then rs_NovGral.Close
Set rs_NovGral = Nothing

End Sub


Public Sub bus_Grilla(ByVal tipoBus As Long, ByVal concnro As Long, ByVal prog As Long)
' ---------------------------------------------------------------------------------------------
' Descripcion: Obtencion del valor de la escala. Ggrilla0.p
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------

Dim NroGrilla As Long               ' cabgrilla.cgrnro
Dim Cero_No_Encuentra As Boolean    ' True - Devuelve 0 si no encuentra?
Dim Operacion As Long               ' 1 - Sumatoria
                                    ' 2 - Maximo
                                    ' 3 - Promedio
                                    ' 4 - Promedio sin 0
                                    ' 5 - Minimo
                                    ' 6 - Primer valor no vacio desde abajo
                                    ' 7 - Primer valor no vacio desde arriba
                                    
Dim Acumulativa As Boolean          ' True
                                    ' False
Dim Valor_Grilla(10) As Boolean     ' Elemento de una coordenada de una grilla

'Dim Param_cur As New ADODB.Recordset
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & " Busca el valor de una escala "
    End If
    
    
    ' Obtener los parametros de la Busqueda
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda " & NroProg
    End If
    
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'If Param_cur.State = adStateOpen Then Param_cur.Close
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        NroGrilla = Arr_Programa(NroProg).Auxint1
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Nro de escala a buscar  " & NroGrilla
        End If
        
        Acumulativa = CBool(Arr_Programa(NroProg).Auxlog1)
        Operacion = Arr_Programa(NroProg).Auxint2
        Cero_No_Encuentra = CBool(Arr_Programa(NroProg).Auxlog2)
        ' valores de la grilla
        Valor_Grilla(1) = CBool(Arr_Programa(NroProg).Auxlog3)
        Valor_Grilla(2) = CBool(Arr_Programa(NroProg).Auxlog4)
        Valor_Grilla(3) = CBool(Arr_Programa(NroProg).Auxlog5)
        Valor_Grilla(4) = CBool(Arr_Programa(NroProg).Auxlog6)
        Valor_Grilla(5) = CBool(Arr_Programa(NroProg).Auxlog7)
        Valor_Grilla(6) = CBool(Arr_Programa(NroProg).Auxlog8)
        Valor_Grilla(7) = CBool(Arr_Programa(NroProg).Auxlog9)
        Valor_Grilla(8) = CBool(Arr_Programa(NroProg).Auxlog10)
        Valor_Grilla(9) = CBool(Arr_Programa(NroProg).Auxlog11)
        Valor_Grilla(10) = CBool(Arr_Programa(NroProg).Auxlog12)
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontró la Busqueda " & NroProg
        End If
        Exit Sub
    End If

'SEGUN CONDICION LLAMA A bus_grilla0 o bus_grilla1
If Not Acumulativa Then
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Grilla No Acumulativa "
        Flog.writeline Espacios(Tabulador * 4) & "Procediiento Grilla0 "
    End If
    
    Call bus_grilla0(NroGrilla, Cero_No_Encuentra, Valor_Grilla, Operacion, Acumulativa, tipoBus, concnro, prog)
Else
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Grilla Acumulativa "
        Flog.writeline Espacios(Tabulador * 4) & "Procediiento Grilla1 "
    End If

    'Call bus_grilla1(NroGrilla, Cero_No_Encuentra, Valor_Grilla, Operacion, Acumulativa)
    Call bus_grilla1(NroGrilla, Cero_No_Encuentra, Valor_Grilla, Operacion, Acumulativa, tipoBus, concnro, prog)
End If

' Cierro todo y libero
'If Param_cur.State = adStateOpen Then Param_cur.Close
'Set Param_cur = Nothing
End Sub


Private Sub CargarValoresdelaGrilla(ByVal rs As ADODB.Recordset, ByRef Arreglo)
' ---------------------------------------------------------------------------------------------
' Descripcion: Llena un arreglo con los valores de los registros de ValGrilla.
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim I As Integer
Dim Fin As Boolean

Fin = False
rs.MoveFirst
I = 1
    Do While Not rs.EOF And Not Fin
        If Not EsNulo(rs!vgrvalor) Then
            Arreglo(I) = rs!vgrvalor
            I = I + 1
            If I > 10 Then
                Fin = True
            End If
        End If
        
        rs.MoveNext
    Loop

End Sub


Public Sub bus_grilla0(ByVal NroGrilla As Long, ByVal Cero_No_Encuentra As Boolean, ByVal Valor_Grilla, ByVal Operacion As Integer, ByVal Acumulativa As Boolean, ByVal tipoBus As Long, ByVal concnro As Long, ByVal prog As Long)
' ---------------------------------------------------------------------------------------------
' Descripcion: Obtencion del valor de la escala. Ggrilla0.p
' Autor      : FGZ
' Fecha      :
' Ultima Mod.: 29/11/2007 - Martin Ferraro
' Descripcion: No especificaba cual de los ordenes tomar de la escala
' ---------------------------------------------------------------------------------------------
Dim ValAnt As Double
Dim Busq As Integer

Dim j As Integer
Dim antig As Boolean
Dim pvariable As Boolean
Dim pvar As Integer
Dim ant As Integer
Dim Continuar As Boolean
Dim Parametros(1 To 5) As Double
Dim grilla_val(1 To 10) As Double     ' para alojar los valores de:  valgrilla.val(i)

Dim TipoBase As Long
Dim TipoBaseVariable As Long

Dim vgrcoor_ant As Long
Dim vgrcoor_pvar As Long

Dim rs_valgrilla As New ADODB.Recordset
Dim rs_cabgrilla As New ADODB.Recordset
Dim rs_tbase As New ADODB.Recordset
Dim rs_Busqueda As New ADODB.Recordset

Dim NroBusqueda As Long
Dim TipoBusqueda As Long
Dim Encontro As Boolean

'29/11/2007 - Martin Ferraro
Dim valorOrden As Integer
Dim encontroValorOrden As Boolean


    StrSql = "SELECT * FROM cabgrilla " & _
             " WHERE cabgrilla.cgrnro = " & NroGrilla
    OpenRecordset StrSql, rs_cabgrilla

'    ' Buscar el tipo Base de la antiguedad
'    StrSql = "SELECT tipoprog.tprogbase FROM programa " & _
'             " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
'             " WHERE tipoprog.tprogbase = 4"
'    OpenRecordset StrSql, rs_tbase
'
'    If Not rs_tbase.EOF Then
'        TipoBase = rs_tbase!tprogbase
'    End If
    'El tipo Base de la antiguedad
    TipoBase = 4
    
    'FGZ - 22/01/2004
    TipoBaseVariable = 15
    
    Continuar = True
    ant = 1
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Grilla de " & rs_cabgrilla!cgrdimension & " dimensiones "
    End If
    
    Do While (ant <= rs_cabgrilla!cgrdimension) And Continuar
        Select Case ant
        Case 1:
            StrSql = "SELECT tipoprog.tprogbase,tipoprog.tprognro FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_1
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBase = rs_tbase!tprogbase Then
                    Continuar = False
                    antig = True
                Else
                    ant = ant + 1
                End If
            Else
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "programa " & rs_cabgrilla!grparnro_1 & " inexistente en dimension " & 1
                End If
                Exit Sub
            End If
        Case 2:
            StrSql = "SELECT tipoprog.tprogbase,tipoprog.tprognro FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_2
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBase = rs_tbase!tprogbase Then
                    Continuar = False
                    antig = True
                Else
                    ant = ant + 1
                End If
            Else
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "programa " & rs_cabgrilla!grparnro_2 & " inexistente en dimension " & 2
                End If
                Exit Sub
            End If
        Case 3:
            StrSql = "SELECT tipoprog.tprogbase,tipoprog.tprognro FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_3
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBase = rs_tbase!tprogbase Then
                    Continuar = False
                    antig = True
                Else
                    ant = ant + 1
                End If
            Else
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "programa " & rs_cabgrilla!grparnro_3 & " inexistente en dimension " & 3
                End If
                Exit Sub
            End If
        Case 4:
            StrSql = "SELECT tipoprog.tprogbase,tipoprog.tprognro FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_4
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBase = rs_tbase!tprogbase Then
                    Continuar = False
                    antig = True
                Else
                    ant = ant + 1
                End If
            Else
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "programa " & rs_cabgrilla!grparnro_4 & " inexistente en dimension " & 4
                End If
                Exit Sub
            End If
        Case 5:
            StrSql = "SELECT tipoprog.tprogbase,tipoprog.tprognro FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_5
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBase = rs_tbase!tprogbase Then
                    Continuar = False
                    antig = True
                Else
                    ant = ant + 1
                End If
            Else
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "programa " & rs_cabgrilla!grparnro_5 & " inexistente en dimension " & 5
                End If
                Exit Sub
            End If
        End Select
    Loop
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Indice Antiguedad " & ant
    End If



' FGZ - 22/01/2004
'Parametros Variables
' busco que parametro es el parametro del concepto
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "busco que parametro es el parametro del concepto "
    End If

    Continuar = True
    pvar = 1
    Do While (pvar <= rs_cabgrilla!cgrdimension) And Continuar
        Select Case pvar
        Case 1:
            StrSql = "SELECT tipoprog.tprogbase,tipoprog.tprognro FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_1
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBaseVariable = rs_tbase!tprogbase Then
                    Continuar = False
                    pvariable = True
                Else
                    pvar = pvar + 1
                End If
            End If
        Case 2:
            StrSql = "SELECT tipoprog.tprogbase,tipoprog.tprognro FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_2
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBaseVariable = rs_tbase!tprogbase Then
                    Continuar = False
                    pvariable = True
                Else
                    pvar = pvar + 1
                End If
            End If
        Case 3:
            StrSql = "SELECT tipoprog.tprogbase,tipoprog.tprognro FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_3
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBaseVariable = rs_tbase!tprogbase Then
                    Continuar = False
                    pvariable = True
                Else
                    pvar = pvar + 1
                End If
            End If
        Case 4:
            If rs_cabgrilla!grparnro_4 = 15 Then 'si es el param. variable
                Continuar = False
                pvariable = True
            Else
                pvar = pvar + 1
            End If
        Case 5:
            If rs_cabgrilla!grparnro_5 = 15 Then 'si es el param. variable
                Continuar = False
                pvariable = True
            Else
                pvar = pvar + 1
            End If
        End Select
    Loop
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Indice variable " & pvar
    End If


    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Resuelvo los indices de la grilla segun las busquedas por cada dimension"
    End If
   
    For j = 1 To rs_cabgrilla!cgrdimension
        ' rs_cabgrilla!grparnro_x tiene el nro de programa

        Select Case j
        Case 1:
            NroBusqueda = rs_cabgrilla!grparnro_1
        Case 2:
            NroBusqueda = rs_cabgrilla!grparnro_2
        Case 3:
            NroBusqueda = rs_cabgrilla!grparnro_3
        Case 4:
            NroBusqueda = rs_cabgrilla!grparnro_4
        Case 5:
            NroBusqueda = rs_cabgrilla!grparnro_5
        Case Else
        End Select
        
        StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroBusqueda)
        OpenRecordset StrSql, rs_Busqueda
    
        If Not rs_Busqueda.EOF Then
            TipoBusqueda = rs_Busqueda!Tprognro
        Else
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Error. no se encontro el nro de busqueda "
            End If
            'Error. no se encontro el nro de busqueda
            Exit Sub
        End If
        
        Call EjecutarBusqueda(TipoBusqueda, concnro, NroBusqueda, Valor, fec, False)
        Parametros(j) = Valor
    Next j

    If Not antig Then
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No busca antiguedad "
        End If
    
        StrSql = "SELECT * FROM valgrilla WHERE cgrnro = " & NroGrilla
'        For j = 1 To rs_cabgrilla!cgrdimension
'            StrSql = StrSql & " AND vgrcoor_" & j & "= " & Parametros(j)
'        Next j
' FGZ - 22/01/2004
        For j = 1 To rs_cabgrilla!cgrdimension
            If j <> ant And j <> pvar Then
                StrSql = StrSql & " AND vgrcoor_" & j & "= " & Parametros(j)
            Else
                If pvariable Then
                    StrSql = StrSql & " AND vgrcoor_" & j & "<= " & Parametros(j)
                End If
            End If
                    
            'StrSql = StrSql & " AND vgrcoor_" & j & "= " & Parametros(j)
        Next j
        If pvariable Then
            StrSql = StrSql & " ORDER BY vgrcoor_" & pvar & " DESC "
        End If
        OpenRecordset StrSql, rs_valgrilla
    
        If Not rs_valgrilla.EOF Then
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Cargo los Valores de la Grilla "
            End If
            Call CargarValoresdelaGrilla(rs_valgrilla, grilla_val)
            
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Busco el valor segun la operacion "
            End If
            Call BusValor(Operacion, Valor_Grilla, grilla_val, Valor)
        Else
            If Cero_No_Encuentra Then
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "No se encontró valor en grilla "
                    Flog.writeline Espacios(Tabulador * 4) & "Esta configurado que retorne cero si no lo encuentra "
                End If
            
                 Valor = 0
                 Bien = True
            Else
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "No se encontró valor en grilla "
                    Flog.writeline Espacios(Tabulador * 4) & "Retorna Falso "
                End If
                Bien = False
            End If
       End If
    Else 'Antig
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busca antiguedad "
        End If
    
        If Not Cero_No_Encuentra Then
            Bien = False
        Else
            Bien = True
            Valor = 0
        End If
    
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busco la primera antiguedad de la escala menor a la del empleado "
            Flog.writeline Espacios(Tabulador * 4) & "de abajo hacia arriba "
        End If
        
        
        '29/11/2007 - Martin Ferraro-------------------------------------------
        'Busco la primer componente marcada de en valgrilla para saber cual es el valor del salida seleccionado
        encontroValorOrden = False
        For valorOrden = 1 To 10
            If Valor_Grilla(valorOrden) Then
                encontroValorOrden = True
                Exit For
            End If
        Next valorOrden
        
        'Esto no deneria darse
        If Not encontroValorOrden Then
            valorOrden = 1
        End If
        '----------------------------------------------------------------------
        
        'Busco la primera antiguedad de la escala menor a la del empleado
        ' de abajo hacia arriba
        StrSql = "SELECT * FROM valgrilla WHERE cgrnro = " & NroGrilla
        For j = 1 To rs_cabgrilla!cgrdimension
            If j <> ant Then
                StrSql = StrSql & " AND vgrcoor_" & j & "= " & Parametros(j)
            End If
        Next j
            '29/11/2007 - Martin Ferraro---------------------
            StrSql = StrSql & " AND vgrorden = " & valorOrden
            '------------------------------------------------
            StrSql = StrSql & " ORDER BY vgrcoor_" & ant & " DESC "
        OpenRecordset StrSql, rs_valgrilla
        
        Encontro = False
        
        Do While Not rs_valgrilla.EOF And Not Encontro
            'Call CargarValoresdelaGrilla(rs_valgrilla, grilla_val)
            '--------------------------
            Select Case ant
            Case 1:
                If Parametros(ant) >= rs_valgrilla!vgrcoor_1 Then
                     If rs_valgrilla!vgrvalor <> 0 Then
                        Valor = rs_valgrilla!vgrvalor
                        Encontro = True
                     End If
                End If
            Case 2:
                If Parametros(ant) >= rs_valgrilla!vgrcoor_2 Then
                     If rs_valgrilla!vgrvalor <> 0 Then
                        Valor = rs_valgrilla!vgrvalor
                        Encontro = True
                     End If
                End If
            Case 3:
                If Parametros(ant) >= rs_valgrilla!vgrcoor_3 Then
                     If rs_valgrilla!vgrvalor <> 0 Then
                        Valor = rs_valgrilla!vgrvalor
                        Encontro = True
                     End If
                End If
            Case 4:
                If Parametros(ant) >= rs_valgrilla!vgrcoor_4 Then
                     If rs_valgrilla!vgrvalor <> 0 Then
                        Valor = rs_valgrilla!vgrvalor
                        Encontro = True
                     End If
                End If
            Case 5:
                If Parametros(ant) >= rs_valgrilla!vgrcoor_5 Then
                     If rs_valgrilla!vgrvalor <> 0 Then
                        Valor = rs_valgrilla!vgrvalor
                        Encontro = True
                     End If
                End If
            End Select
            '--------------------------
            
'            If Parametros(ant) >= rs_valgrilla(ant) Then
'                Call BusValor(Operacion, Valor_Grilla, grilla_val, valor)
'                Bien = True
'            End If
            
            rs_valgrilla.MoveNext
        Loop
        
        If CBool(USA_DEBUG) Then
            If Encontro Then
                Flog.writeline Espacios(Tabulador * 4) & "Valor encontrado "
            Else
                Flog.writeline Espacios(Tabulador * 4) & "Valor no encontrado "
                If Cero_No_Encuentra Then
                    Flog.writeline Espacios(Tabulador * 4) & "Esta configurado que retorne cero si no lo encuentra "
                Else
                    Flog.writeline Espacios(Tabulador * 4) & "No Esta configurado que retorne cero si no lo encuentra. Retorna Falso "
                End If
            End If
        End If
    End If
    
    
' Cierro todo y libero
If rs_cabgrilla.State = adStateOpen Then rs_cabgrilla.Close
If rs_valgrilla.State = adStateOpen Then rs_valgrilla.Close

Set rs_cabgrilla = Nothing
Set rs_valgrilla = Nothing
End Sub


Private Sub BusValor(ByVal Op As Integer, ByVal valorGrilla, ByVal valgrilla, ByRef Valor As Double)
Dim cant As Integer
Dim Continuar As Boolean
Dim I As Integer


Select Case Op
Case 1:     'Sumatoria
    Valor = 0
    For I = 1 To 10
        If valorGrilla(I) Then
            Valor = Valor + valgrilla(I)
        End If
    Next I

Case 2:     'Maximo
    Valor = 0
    For I = 1 To 10
        If valorGrilla(I) Then
            If valgrilla(I) > Valor Then
                Valor = valgrilla(I)
            End If
        End If
    Next I
    
Case 3:     'Promedio
    Valor = 0
    cant = 0
    For I = 1 To 10
        If valorGrilla(I) Then
            Valor = Valor + valgrilla(I)
            cant = cant + 1
        End If
    Next I

    If cant <> 0 Then
        Valor = Valor / cant
    End If

Case 4:     'Promedio sin cero
    Valor = 0
    cant = 0
    For I = 1 To 10
        If valorGrilla(I) Then
            If valgrilla(I) <> 0 Then
                Valor = Valor + valgrilla(I)
                cant = cant + 1
            End If
        End If
    Next I

    If cant <> 0 Then
        Valor = Valor / cant
    End If

Case 5:     'Minimo
    Valor = 0
    For I = 1 To 10
        If valorGrilla(I) Then
            If Valor = 0 Or valgrilla(I) < Valor Then
                Valor = valgrilla(I)
            End If
        End If
    Next I

Case 6:     'Primer valor no vacio desde el primero
    Valor = 0
    I = 1
    Continuar = True
    Do While I <= 10 And Continuar
        If valorGrilla(I) Then
            If valgrilla(I) <> 0 Then
                Valor = valgrilla(I)
                Continuar = False
            End If
        End If
        I = I + 1
    Loop

Case 7:     'Primer valor no vacio desde el ultimo
    Valor = 0
    I = 10
    Continuar = True
    Do While I >= 0 And Continuar
        If valorGrilla(I) Then
            If valgrilla(I) <> 0 Then
                Valor = valgrilla(I)
                Continuar = False
            End If
        End If
        I = I - 1
    Loop

End Select

End Sub

Public Sub bus_grilla1(ByVal NroGrilla As Long, ByVal Cero_No_Encuentra As Boolean, ByVal Valor_Grilla, ByVal Operacion As Integer, ByVal Acumulativa As Boolean, ByVal tipoBus As Long, ByVal concnro As Long, ByVal prog As Long)
' ---------------------------------------------------------------------------------------------
' Descripcion: Obtencion del valor de la escala. Ggrilla0.p
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim ValAnt As Double
Dim Busq As Integer

Dim j As Integer
Dim antig As Boolean
Dim pvariable As Boolean
Dim pvar As Integer
Dim ant As Integer
Dim Continuar As Boolean
Dim Parametros(1 To 5) As Double
Dim grilla_val(1 To 10) As Double     ' para alojar los valores de:  valgrilla.val(i)

Dim TipoBase As Long

Dim vgrcoor_ant As Long
Dim vgrcoor_pvar As Long

Dim rs_valgrilla As New ADODB.Recordset
Dim rs_cabgrilla As New ADODB.Recordset
Dim rs_tbase As New ADODB.Recordset
Dim rs_Busqueda As New ADODB.Recordset

Dim NroBusqueda As Long
Dim TipoBusqueda As Long
Dim Encontro As Boolean

    StrSql = "SELECT * FROM cabgrilla " & _
             " WHERE cabgrilla.cgrnro = " & NroGrilla
    OpenRecordset StrSql, rs_cabgrilla

    ' Buscar el tipo Base de la antiguedad
    StrSql = "SELECT tipoprog.tprogbase FROM programa " & _
             " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
             " WHERE tipoprog.tprogbase = 4"
    OpenRecordset StrSql, rs_tbase

    If Not rs_tbase.EOF Then
        TipoBase = rs_tbase!tprogbase
    End If

    'El tipo Base de la antiguedad
    TipoBase = 4
    
    Continuar = True
    ant = 1
    Do While (ant <= rs_cabgrilla!cgrdimension) And Continuar
        Select Case ant
        Case 1:
            StrSql = "SELECT tipoprog.tprogbase,tipoprog.tprognro FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_1
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBase = rs_tbase!tprogbase Then
                    Continuar = False
                    antig = True
                Else
                    ant = ant + 1
                End If
            End If
        Case 2:
            StrSql = "SELECT tipoprog.tprogbase,tipoprog.tprognro FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_2
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBase = rs_tbase!tprogbase Then
                    Continuar = False
                    antig = True
                Else
                    ant = ant + 1
                End If
            End If
        Case 3:
            StrSql = "SELECT tipoprog.tprogbase,tipoprog.tprognro FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_3
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBase = rs_tbase!tprogbase Then
                    Continuar = False
                    antig = True
                Else
                    ant = ant + 1
                End If
            End If
        Case 4:
            StrSql = "SELECT tipoprog.tprogbase,tipoprog.tprognro FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_4
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBase = rs_tbase!tprogbase Then
                    Continuar = False
                    antig = True
                Else
                    ant = ant + 1
                End If
            End If
        Case 5:
            StrSql = "SELECT tipoprog.tprogbase,tipoprog.tprognro FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_5
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBase = rs_tbase!tprogbase Then
                    Continuar = False
                    antig = True
                Else
                    ant = ant + 1
                End If
            End If
        End Select
    Loop
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Indice Antiguedad " & ant
    End If

    
'Parametros Variables
' busco que parametro es el par metro del concepto
    Continuar = True
    pvar = 1
    Do While (pvar <= rs_cabgrilla!cgrdimension) And Continuar
        Select Case pvar
        Case 1:
            If rs_cabgrilla!grparnro_1 = 15 Then 'si es el param. variable
                Continuar = False
                pvariable = True
            Else
                pvar = pvar + 1
            End If
        Case 2:
            If rs_cabgrilla!grparnro_2 = 15 Then 'si es el param. variable
                Continuar = False
                pvariable = True
            Else
                pvar = pvar + 1
            End If
        Case 3:
            If rs_cabgrilla!grparnro_1 = 15 Then 'si es el param. variable
                Continuar = False
                pvariable = True
            Else
                pvar = pvar + 1
            End If
        Case 4:
            If rs_cabgrilla!grparnro_4 = 15 Then 'si es el param. variable
                Continuar = False
                pvariable = True
            Else
                pvar = pvar + 1
            End If
        Case 5:
            If rs_cabgrilla!grparnro_5 = 15 Then 'si es el param. variable
                Continuar = False
                pvariable = True
            Else
                pvar = pvar + 1
            End If
        End Select
    Loop
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Indice parametro variable " & pvar
    End If
    
    
    For j = 1 To rs_cabgrilla!cgrdimension
        ' rs_cabgrilla!grparnro_x tiene el nro de programa

        Select Case j
        Case 1:
            NroBusqueda = rs_cabgrilla!grparnro_1
        Case 2:
            NroBusqueda = rs_cabgrilla!grparnro_2
        Case 3:
            NroBusqueda = rs_cabgrilla!grparnro_3
        Case 4:
            NroBusqueda = rs_cabgrilla!grparnro_4
        Case 5:
            NroBusqueda = rs_cabgrilla!grparnro_5
        Case Else
        End Select
        
        StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroBusqueda)
        OpenRecordset StrSql, rs_Busqueda
    
        If Not rs_Busqueda.EOF Then
            TipoBusqueda = rs_Busqueda!Tprognro
        Else
            'Error. no se encontro el nro de busqueda
            Exit Sub
        End If
        
        Call EjecutarBusqueda(TipoBusqueda, concnro, NroBusqueda, Valor, fec, False)
        'Call bus_Estructura(rs_cabgrilla!grparnro_1)
        'Call EjecutarBusqueda(rs_Programa!tprognro, rs_Conceptos!concnro, rs_Con_For_Tpa!prognro, val, fec, ok)
        'Call CalcularBusqueda(NroGrilla, j, NroBusqueda, valor, tipoBus, concnro)
        Parametros(j) = Valor
    Next j




    If Not antig Then
        StrSql = "SELECT * FROM valgrilla WHERE cgrnro = " & NroGrilla
        For j = 1 To rs_cabgrilla!cgrdimension
            If j <> ant And j <> pvar Then
                StrSql = StrSql & " AND vgrcoor_" & j & "= " & Parametros(j)
            Else
                If pvariable Then
                    StrSql = StrSql & " AND vgrcoor_" & j & "<= " & Parametros(j)
                End If
            End If
                    
            'StrSql = StrSql & " AND vgrcoor_" & j & "= " & Parametros(j)
        Next j
        If pvariable Then
            StrSql = StrSql & " ORDER BY vgrcoor_" & pvar & " DESC "
        End If
        OpenRecordset StrSql, rs_valgrilla
    
        If Not rs_valgrilla.EOF Then
            Call CargarValoresdelaGrilla(rs_valgrilla, grilla_val)
    
            Call BusValor(Operacion, Valor_Grilla, grilla_val, Valor)
        Else
            If Cero_No_Encuentra Then
                 Valor = 0
                 Bien = True
            Else
                Bien = False
            End If
       End If
    Else 'Antig
        If Not Cero_No_Encuentra Then
            Bien = False
        Else
            Bien = True
            Valor = 0
        End If
    
        'Busco la primera antiguedad de la escala menor a la del empleado
        ' de abajo hacia arriba
        StrSql = "SELECT * FROM valgrilla WHERE cgrnro = " & NroGrilla
        For j = 1 To rs_cabgrilla!cgrdimension
            If j <> ant Then
                StrSql = StrSql & " AND vgrcoor_" & j & "= " & Parametros(j)
            End If
        Next j
            StrSql = StrSql & " ORDER BY vgrcoor_" & ant & " DESC "
        OpenRecordset StrSql, rs_valgrilla
        
        Encontro = False
        
        Do While Not rs_valgrilla.EOF And Not Encontro
            Select Case ant
            Case 1:
                If Parametros(ant) >= rs_valgrilla!vgrcoor_1 Then
                     If rs_valgrilla!vgrvalor <> 0 Then
                        Valor = rs_valgrilla!vgrvalor
                        Encontro = True
                     End If
                End If
            Case 2:
                If Parametros(ant) >= rs_valgrilla!vgrcoor_2 Then
                     If rs_valgrilla!vgrvalor <> 0 Then
                        Valor = rs_valgrilla!vgrvalor
                        Encontro = True
                     End If
                End If
            Case 3:
                If Parametros(ant) >= rs_valgrilla!vgrcoor_3 Then
                     If rs_valgrilla!vgrvalor <> 0 Then
                        Valor = rs_valgrilla!vgrvalor
                        Encontro = True
                     End If
                End If
            Case 4:
                If Parametros(ant) >= rs_valgrilla!vgrcoor_4 Then
                     If rs_valgrilla!vgrvalor <> 0 Then
                        Valor = rs_valgrilla!vgrvalor
                        Encontro = True
                     End If
                End If
            Case 5:
                If Parametros(ant) >= rs_valgrilla!vgrcoor_5 Then
                     If rs_valgrilla!vgrvalor <> 0 Then
                        Valor = rs_valgrilla!vgrvalor
                        Encontro = True
                     End If
                End If
            End Select
            
            rs_valgrilla.MoveNext
        Loop
    End If
    
    
' Cierro todo y libero
If rs_cabgrilla.State = adStateOpen Then rs_cabgrilla.Close
If rs_valgrilla.State = adStateOpen Then rs_valgrilla.Close

Set rs_cabgrilla = Nothing
Set rs_valgrilla = Nothing
End Sub


Public Sub bus_grilla1_old(ByVal NroGrilla As Long, ByVal Cero_No_Encuentra As Boolean, ByVal Valor_Grilla, ByVal Operacion As Integer, ByVal Acumulativa As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Obtencion del valor de la escala. Ggrilla1.p
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------

Dim ValAnt As Double
Dim Busq As Integer

Dim j As Integer
Dim antig As Boolean
Dim pvariable As Boolean
Dim pvar As Integer
Dim ant As Integer
Dim Continuar As Boolean
Dim Parametros(5) As Integer
Dim grilla_val(10) As Boolean     ' para alojar los valores de:  valgrilla.val(i)

Dim Desde As Double
Dim aux As Double

Dim vgrcoor_ant As Long
Dim vgrcoor_pvar As Long

Dim rs_valgrilla As New ADODB.Recordset
Dim rs_cabgrilla As New ADODB.Recordset
Dim rs_grparametro As New ADODB.Recordset

Dim NroBusqueda As Long
'
'If Not Bien Then
'    ' En la generacion de la busqueda atomica se selecciona una busqueda en la escala acumulativa
'    ' y en una escala no se encontró el parametro.
'    ' 15 - Parametro del concepto
'    Exit Sub
'End If
'
'    StrSql = "SELECT * FROM cabgrilla " & _
'             " WHERE cabgrilla.cgrnro = " & NroGrilla
'    OpenRecordset StrSql, rs_cabgrilla
'
'
'    For j = 1 To rs_cabgrilla!cgrdimension
'        ' rs_cabgrilla!grparnro_1 tiene el nro de programa
'
'        Select Case j
'        Case 1:
'            NroBusqueda = rs_cabgrilla!grparnro_1
'        Case 2:
'            NroBusqueda = rs_cabgrilla!grparnro_2
'        Case 3:
'            NroBusqueda = rs_cabgrilla!grparnro_3
'        Case 4:
'            NroBusqueda = rs_cabgrilla!grparnro_4
'        Case 5:
'            NroBusqueda = rs_cabgrilla!grparnro_5
'        Case Else
'        End Select
'        Call CalcularBusqueda(NroGrilla, j, NroBusqueda, valor)
'        Parametros(j) = valor
'    Next j
'
'
'    Bien = False
'
'    StrSql = "SELECT * FROM valgrilla WHERE cgrnro = " & NroGrilla
'    For j = 1 To rs_cabgrilla!cgrdimension
'        If j <> pvar Then
'            StrSql = StrSql & "AND vgrcoor_" & j & "= " & Parametros(j)
'        Else
'            StrSql = StrSql & "AND vgrcoor_" & j & "<= " & Parametros(j)
'        End If
'    Next j
'
'    StrSql = StrSql & " ORDER BY vgrcoor_" & pvar & "DESC"
'    OpenRecordset StrSql, rs_valgrilla
'
'    Do While Not rs_valgrilla.EOF
'        Call CargarValoresdelaGrilla(rs_valgrilla, grilla_val)
'
'        ' setea en vgrcoor_pvar el valor de lo que seria en progress:   vgrcoor[pvar]
'        Select Case pvar
'        Case 1:
'            vgrcoor_pvar = rs_valgrilla!vgrcoor_1
'        Case 2:
'            vgrcoor_pvar = rs_valgrilla!vgrcoor_2
'        Case 3:
'            vgrcoor_pvar = rs_valgrilla!vgrcoor_3
'        Case 4:
'            vgrcoor_pvar = rs_valgrilla!vgrcoor_4
'        Case 5:
'            vgrcoor_pvar = rs_valgrilla!vgrcoor_5
'        End Select
'
'        If vgrcoor_pvar <= Parametros(pvar) Then
'            Call BusValor(Operacion, Valor_Grilla, grilla_val, Aux)
'            valor = valor + ((vgrcoor_pvar - Desde) * Aux) / 100
'            If vgrcoor_pvar = Parametros(pvar) Then
'                Bien = True
'                Exit Sub
'            End If
'        Else
'            Call BusValor(Operacion, Valor_Grilla, grilla_val, Aux)
'            valor = valor + ((Parametros(pvar) - Desde) * Aux) / 100
'            Bien = True
'            Exit Sub
'        End If
'
'       rs_valgrilla.MoveNext
'    Loop
'
'
'' Cierro todo y libero
'If rs_cabgrilla.State = adStateOpen Then rs_cabgrilla.Close
'If rs_valgrilla.State = adStateOpen Then rs_valgrilla.Close
'If rs_grparametro.State = adStateOpen Then rs_grparametro.Close
'
'Set rs_cabgrilla = Nothing
'Set rs_valgrilla = Nothing
'Set rs_grparametro = Nothing
End Sub


Public Sub CalcularBusqueda_OLD(ByVal NroGrilla As Long, ByVal Posicion As Integer, ByVal paranro As Long, ByRef valorcor As Integer)
' -----------------------------------------------------------------------------------
' Descripcion: liqgrbus.p. Programa de busqueda de parametro de la grilla
' Autor: FGZ
' Fecha: 31/07/2003
' Ultima Modificacion:
' -----------------------------------------------------------------------------------
Dim antdia As Integer
Dim antmeses As Integer
Dim antanio As Integer
Dim diashab As Integer

Dim Aux_cgrtpg As String
Dim Ret As Integer

Dim rs_domicilio As New ADODB.Recordset
Dim rs_Sucursal As New ADODB.Recordset
Dim rs_cabgrilla As New ADODB.Recordset
Dim rs_grupo As New ADODB.Recordset
Dim rs_TipoEmpleador As New ADODB.Recordset


Select Case paranro
Case 1: '
    valorcor = buliq_empleado!catnro
Case 2: '
    valorcor = buliq_empleado!convnro
Case 3: '
    valorcor = buliq_empleado!tenro
Case 4: '
    valorcor = buliq_empleado!reghornro
Case 5: '
    Ret = Antiguedad(antdia, antmeses, antanio, diashab)
    If Ret = 0 Then ' sin errores
        valorcor = (antanio * 12) + antmeses
    End If
Case 6: '
    valorcor = buliq_empleado!puenro
Case 7: '
    valorcor = buliq_empleado!sucursal
Case 8: '
    valorcor = buliq_empleado!actnro
Case 9: '
    valorcor = buliq_empleado!gernro
Case 10: '
    valorcor = buliq_empleado!folinro
Case 11: '
    valorcor = buliq_empleado!mobrnro
Case 12: '
    valorcor = buliq_empleado!celulanro
Case 13: '
    valorcor = buliq_empleado!lineanro
Case 14: '
    valorcor = buliq_empleado!maqnro
Case 15: '
    ' WF_TPA
Case 16: 'Sector
    valorcor = buliq_empleado!secnro
Case 17: 'Concepto
    valorcor = Buliq_Concepto(Concepto_Actual).concnro
Case 18: 'Zona del domicilio de default de la sucursal

    StrSql = "SELECT zona.zonanro FROM tercero " & _
    " INNER JOIN cabdom ON tercero.ternro = cabdom.ternro " & _
    " INNER JOIN detdom ON detdom.domnro = cabdom.domnro " & _
    " INNER JOIN zona ON detdom.zonanro = zona.zonanro " & _
    " WHERE tercero.ternro = " & buliq_empleado!sucursal
    OpenRecordset StrSql, rs_domicilio

    If rs_domicilio.EOF Then
        Exit Sub
    Else
        valorcor = rs_domicilio!zonanro
    End If

Case 19: 'Zona del domicilio de la sucursal o del domicilio de trabajo del empleado: ESPECIAL MSD

    ' verificar el nro de sucursal, trato especial
    StrSql = "SELECT sucursal.succod, sucursal.ternro FROM sucursal " & _
    " INNER JOIN tercero ON tercero.ternro = sucursal.ternro " & _
    " WHERE sucursal.ternro = " & buliq_empleado!sucursal
    OpenRecordset StrSql, rs_Sucursal

    If rs_Sucursal.EOF Then
        Exit Sub
    Else
        If rs_Sucursal!succod <> 4 Then
            StrSql = "SELECT zona.zonanro FROM tercero " & _
            " INNER JOIN cabdom ON tercero.ternro = cabdom.ternro " & _
            " INNER JOIN detdom ON detdom.domnro = cabdom.domnro " & _
            " INNER JOIN zona ON detdom.zonanro = zona.zonanro " & _
            " WHERE tercero.ternro = " & rs_Sucursal!ternro & _
            " AND cabdom.domdefault = -1 AND cabdom.tidonro = 10 "
            OpenRecordset StrSql, rs_domicilio

            If rs_domicilio.EOF Then
                Exit Sub
            Else
                valorcor = rs_domicilio!zonanro
            End If
        Else
            StrSql = "SELECT zona.zonanro FROM tercero " & _
            " INNER JOIN cabdom ON tercero.ternro = cabdom.ternro " & _
            " INNER JOIN detdom ON detdom.domnro = cabdom.domnro " & _
            " INNER JOIN zona ON detdom.zonanro = zona.zonanro " & _
            " WHERE tercero.ternro = " & buliq_empleado!sucursal & _
            " AND cabdom.tidonro = 2 "
            OpenRecordset StrSql, rs_domicilio

            If rs_domicilio.EOF Then
                Exit Sub
            Else
                valorcor = rs_domicilio!zonanro
            End If
        End If
    End If

Case 20: '
    valorcor = buliq_empleado!ccosnro

Case 21: '
    valorcor = buliq_empleado!tprocnro

Case 27: 'Grupos
    StrSql = "SELECT * FROM cabgrilla " & _
             " WHERE cabgrilla.cgrnro = " & NroGrilla
    OpenRecordset StrSql, rs_cabgrilla
    If Not rs_cabgrilla.EOF Then

        ' seteo el nombre del parametro de la tabla cabgrilla segun posicion
        Select Case Posicion
        Case 1:
            Aux_cgrtpg = rs_cabgrilla!cgrtpg__1
        Case 2:
            Aux_cgrtpg = rs_cabgrilla!cgrtpg__2
        Case 3:
            Aux_cgrtpg = rs_cabgrilla!cgrtpg__3
        Case 4:
            Aux_cgrtpg = rs_cabgrilla!cgrtpg__4
        Case 5:
            Aux_cgrtpg = rs_cabgrilla!cgrtpg__5
        Case Else
        End Select

        StrSql = "SELECT * FROM tip_grup_ter " & _
                 " WHERE tgnro = " & Aux_cgrtpg & _
                 " AND ternro =" & buliq_empleado!ternro

        OpenRecordset StrSql, rs_grupo

        If Not rs_grupo.EOF Then
            valorcor = rs_grupo!grunro
        Else
            valorcor = 0
        End If
    Else
        StrSql = "SELECT * FROM tip_grup_ter " & _
                 " WHERE tgnro = " & Posicion & _
                 " AND ternro =" & buliq_empleado!ternro
        OpenRecordset StrSql, rs_grupo

        If Not rs_grupo.EOF Then
            valorcor = rs_grupo!grunro
        Else
            valorcor = 0
        End If
    End If

Case 40: 'Indemnizacion
    Call bus_Antiguedad("INDEMNIZACON", buliq_periodo!pliqhasta, antdia, antmeses, antanio, diashab)
    valorcor = (antanio * 12) + antmeses

Case 41: 'Vacaciones
    Call bus_Antiguedad("VACACIONES", buliq_periodo!pliqhasta, antdia, antmeses, antanio, diashab)
    valorcor = (antanio * 12) + antmeses

Case 42: 'Obra Social por Defecto
    valorcor = buliq_empleado!osocialxdef

Case 43: 'Obra Social elegida
    valorcor = buliq_empleado!Osocial

Case 44: 'Sindicato
    valorcor = buliq_empleado!gremio

Case 45: 'Departamento
    valorcor = buliq_empleado!depnro

Case 46: 'Direccion
    valorcor = buliq_empleado!dirnro

Case 48: 'Todos Concepto
    valorcor = Buliq_Concepto(Concepto_Actual).concnro

Case 49: 'Tipo de Empleador

        StrSql = "SELECT * FROM empresa " & _
                 " INNER JOIN tipempdor ON empresa.tipempnro = tipempdor.tipempnro " & _
                 " WHERE empnro = " & NroEmp

        OpenRecordset StrSql, rs_TipoEmpleador

        If Not rs_TipoEmpleador.EOF Then
            valorcor = rs_TipoEmpleador!tipempnro
        End If

Case 50: 'Situacion de Revista
    valorcor = buliq_empleado!srnro

Case 51: 'Condicion
    valorcor = buliq_empleado!csijpcod

Case Else

End Select
End Sub

'                            NroGrilla , j, NroBusqueda, valor, tipoBus, concnro
Public Sub CalcularBusqueda(ByVal NroGrilla As Long, ByVal Posicion As Integer, ByVal prog As Long, ByRef valorcor As Double, ByVal tipoBus As Long, ByVal concnro As Long)
' -----------------------------------------------------------------------------------
' Descripcion: liqgrbus.p. Programa de busqueda de parametro de la grilla
' Autor: FGZ
' Fecha: 31/07/2003
' Ultima Modificacion:
' -----------------------------------------------------------------------------------
' FGZ - 09/02/2004
If objCache.EsSimboloDefinido(CStr(prog)) Then
     Valor = objCache.Valor(CStr(prog))
     Bien = True
 Else
     Call EjecutarBusqueda(tipoBus, concnro, prog, Valor, fec, Bien)
     If Not Bien Then
         If HACE_TRAZA Then
             Call InsertarTraza(NroCab, concnro, prog, "Error Busqueda de Escala", 0)
         End If
     End If
     ' insertar en el cache del empleado
     Call objCache.Insertar_Simbolo(CStr(prog), Valor)
 End If

If Bien Then
    valorcor = Valor
End If


End Sub

Public Function Antiguedad(ByRef dia As Integer, ByRef mes As Integer, ByRef Anio As Integer, ByRef DiasHabiles As Integer) As Integer
' -----------------------------------------------------------------------------------
' Descripcion: Antigued.p. Calcula la antiguedad al dia de hoy de un empleado en :
'               dias hábiles(si es menor que un año) o en dias, meses y años en caso contrario.
'               Retorna 0 si no hubo error y <> 0 en caso contrario
' Autor: FGZ
' Fecha: 31/07/2003
' Ultima Modificacion:
' -----------------------------------------------------------------------------------
Dim Aux1 As Long
Dim Aux2 As Long
Dim Aux3 As Long
Dim fecalta As Date
Dim fecbaja As Date
Dim seguir As Date
Dim q As Integer
Dim NombreCampo As String
Dim rs_Fases As New ADODB.Recordset

DiasHabiles = 0

StrSql = "SELECT * FROM fases WHERE empleado = " & buliq_empleado!ternro
OpenRecordset StrSql, rs_Fases

If rs_Fases.EOF Then
    ' ERROR. El empleado no tiene fecha de alta en fases
    Antiguedad = 1
    Exit Function
Else
        fecalta = rs_Fases!altfec
        ' verificar si se trata de un registro completo(alta/baja) o solo de un alta
        If CBool(rs_Fases!estado) Then
            fecbaja = Date  ' solo es un alta ==> tomar el Today (Date)
        Else
            fecbaja = rs_Fases!bajfec   'se trata de un registro completo
        End If
        
        Call Dif_Fechas(fecalta, fecbaja, Aux1, Aux2, Aux3)
        dia = dia + Aux1
        mes = mes + Aux2 + Int(dia / 30)
        Anio = Anio + Aux3 + Int(mes / 12)
        dia = dia Mod 30
        mes = mes Mod 12
        
        If Anio = 0 Then
            Call DiasTrab(fecalta, fecbaja, Aux1)
            DiasHabiles = DiasHabiles + Aux1
        End If
        Antiguedad = 0
End If

If Anio <> 0 Then
    DiasHabiles = 0
End If

' Cierro todo y Libero
If rs_Fases.State = adStateOpen Then rs_Fases.Close
Set rs_Fases = Nothing

End Function


Public Sub bus_interna()
' Busqueda Interna
Dim CampoValor As String 'Campo de la consulta que carga el campo valor

'Dim Param_cur As New ADODB.Recordset
Dim rs_Bus As New ADODB.Recordset
Dim rs_liqvar As New ADODB.Recordset

Dim NuevoValor As String
Dim TipoDeDato As Integer
Dim I As Integer
Dim NombreBuliq As String
Dim NombreCampo As String
Dim Original As String
Dim StringSQL As String
Dim Cargo_Bien As Boolean
Dim pos

    Valor = 0
    Bien = False
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda " & NroProg
    End If
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        StringSQL = Trim(Arr_Programa(NroProg).Auxchar)
        ' tengo que eliminar todos los caracteres invalidos del string
        'StrSql = EliminarCHInvalidos(StrSql)
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "SQL base del la busqueda interna a ejecutar: " & StringSQL
        End If
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & " No se encontró el nro de busqueda " & NroProg
        End If
        Exit Sub
    End If

On Error GoTo 0 ' desactivo el manejador de errores que exista al momento
On Error GoTo ErrorSQL

If CBool(USA_DEBUG) Then
    Flog.writeline Espacios(Tabulador * 4) & "Reemplazo de los parametrso especificados en la sql por sus valores especificos "
End If

'FGZ - 19/08/2004
'pos = InStr(1, UCase(StringSQL), UCase("Buliq_concepto"))
'If pos <> 0 Then
    Call Establecer_Buliq_concepto(Buliq_Concepto(Concepto_Actual).concnro, Cargo_Bien)
    If Not Cargo_Bien Then
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se pudo cargar Buliq_Concepto para el concepto: " & Buliq_Concepto(Concepto_Actual).concnro
        End If
        Exit Sub
    End If
'End If

'Reemplazo de los parametrso especificados en la consulta por sus valores especificos
StrSql = "SELECT * FROM liqvar"
OpenRecordset StrSql, rs_liqvar

Do Until rs_liqvar.EOF
     Original = "[" & rs_liqvar!lvarnro & "]"
     I = InStr(1, rs_liqvar!lvtablacampo, ".")
     NombreBuliq = Mid(rs_liqvar!lvtablacampo, 1, I - 1)
     NombreCampo = Trim(Mid(rs_liqvar!lvtablacampo, I + 1, Len(rs_liqvar!lvtablacampo)))
     Select Case UCase(NombreBuliq)
     Case "BULIQ_PROCESO":
        TipoDeDato = VarType(buliq_proceso.Fields(NombreCampo))
        Select Case TipoDeDato
            Case 8: 'tipo cadena
                NuevoValor = "'" & buliq_proceso.Fields(NombreCampo) & "'"
            Case 7: 'tipo fecha
                NuevoValor = ConvFecha(buliq_proceso.Fields(NombreCampo))
                'FGZ - 19/03/2004
                If Not CBool(buliq_empleado!empest) Then
                    If buliq_proceso.Fields(NombreCampo) > Empleado_Fecha_Fin Then
                        NuevoValor = ConvFecha(Empleado_Fecha_Fin)
                    End If
                End If
            Case Else: 'cualquier otro tipo
                NuevoValor = buliq_proceso.Fields(NombreCampo)
        End Select
     Case "BULIQ_PERIODO":
        TipoDeDato = VarType(buliq_periodo.Fields(NombreCampo))
        Select Case TipoDeDato
            Case 8: 'tipo cadena
                NuevoValor = "'" & buliq_periodo.Fields(NombreCampo) & "'"
            Case 7: 'tipo fecha
                NuevoValor = ConvFecha(buliq_periodo.Fields(NombreCampo))
                'FGZ - 19/03/2004
                If Not CBool(buliq_empleado!empest) Then
                    If buliq_periodo.Fields(NombreCampo) > Empleado_Fecha_Fin Then
                        NuevoValor = ConvFecha(Empleado_Fecha_Fin)
                    End If
                End If
            Case Else: 'cualquier otro tipo
                NuevoValor = buliq_periodo.Fields(NombreCampo)
        End Select

     Case "BULIQ_EMPLEADO":
        TipoDeDato = VarType(buliq_empleado.Fields(NombreCampo))
        Select Case TipoDeDato
            Case 8: 'tipo cadena
                NuevoValor = "'" & buliq_empleado.Fields(NombreCampo) & "'"
            Case 7: 'tipo fecha
                NuevoValor = ConvFecha(buliq_empleado.Fields(NombreCampo))
            Case Else: 'cualquier otro tipo
                NuevoValor = buliq_empleado.Fields(NombreCampo)
        End Select

     Case "BULIQ_IMPGRALARG":
        TipoDeDato = VarType(buliq_impgralarg.Fields(NombreCampo))
        Select Case TipoDeDato
            Case 8: 'tipo cadena
                NuevoValor = "'" & buliq_impgralarg.Fields(NombreCampo) & "'"
            Case 7: 'tipo fecha
                NuevoValor = ConvFecha(buliq_impgralarg.Fields(NombreCampo))
            Case Else: 'cualquier otro tipo
                NuevoValor = buliq_impgralarg.Fields(NombreCampo)
        End Select

     Case "BULIQ_CABLIQ":
        TipoDeDato = VarType(buliq_cabliq.Fields(NombreCampo))
        Select Case TipoDeDato
            Case 8: 'tipo cadena
                NuevoValor = "'" & buliq_cabliq.Fields(NombreCampo) & "'"
            Case 7: 'tipo fecha
                NuevoValor = ConvFecha(buliq_cabliq.Fields(NombreCampo))
            Case Else: 'cualquier otro tipo
                NuevoValor = buliq_cabliq.Fields(NombreCampo)
        End Select

     Case "BULIQ_CONCEPTO":
        TipoDeDato = VarType(rs_Buliq_Concepto.Fields(NombreCampo))
        Select Case TipoDeDato
            Case 8: 'tipo cadena
                NuevoValor = "'" & rs_Buliq_Concepto.Fields(NombreCampo) & "'"
            Case 7: 'tipo fecha
                NuevoValor = ConvFecha(rs_Buliq_Concepto.Fields(NombreCampo))
            Case Else: 'cualquier otro tipo
                NuevoValor = rs_Buliq_Concepto.Fields(NombreCampo)
        End Select

     End Select
     
     StringSQL = Replace(StringSQL, Original, NuevoValor)

  rs_liqvar.MoveNext
Loop

If CBool(USA_DEBUG) Then
    Flog.writeline Espacios(Tabulador * 4) & "Ejecuto el sql que se pasó como parametro y cargo el parametro " & StringSQL
End If

' Ejecuto la consulta que se pasó como parametro y cargo el parametro en
OpenRecordset StringSQL, rs_Bus

If Not rs_Bus.EOF Then
    Bien = True
    'valor = rs_Bus.Fields(CampoValor)
    Valor = CDbl(rs_Bus.Fields(0)) ' el orden del campo que quiero
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Retorno el primer campo de la lista del SELECT del sql ejecutado " & Valor
    End If
Else
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "No se encontraron Registros. busqueda eecutada: " & StringSQL
    End If
    Bien = True
End If

Terminar:

' Cierro todo y libero
'If Param_cur.State = adStateOpen Then Param_cur.Close
'Set Param_cur = Nothing
If rs_Bus.State = adStateOpen Then rs_Bus.Close
Set rs_Bus = Nothing

Exit Sub

ErrorSQL:
    Bien = False
    If HACE_TRAZA Then
        Call InsertarTraza(NroCab, NroProg, 0, "Busqueda Interna = (" & NroProg & "). Error en el sql: " & Err.Description, 0)
    End If
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & " Falló la busqueda interna "
        Flog.writeline Espacios(Tabulador * 4) & " Error de sintaxis en el sql de la busqueda interna nro: " & NroProg
        Flog.writeline Espacios(Tabulador * 4) & " Error : " & Err.Description
    End If

    GoTo Terminar
End Sub


Public Sub bus_Estructura()
' ---------------------------------------------------------------------------------------------
' Descripcion: Estructura a una Fecha
' Autor      : FGZ
' Fecha      : 25/11/2003
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------

Dim TipoEstr As Long      ' Tipo de Estructura
Dim TipoFecha As Integer    ' 1 - Primer dia del año
                            ' 2 - Ultimo dia del año
                            ' 3 - Inicio del proceso
                            ' 4 - Fin del proceso
                            ' 5 - Inicio del Periodo
                            ' 6 - Fin del periodo
                            ' 7 - Today
Dim Text As String

'Dim Param_cur As New ADODB.Recordset
Dim rs_Estructura As New ADODB.Recordset

Dim Aux_fecha As Date

   
    Bien = False
    Valor = 0
   
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        TipoEstr = Arr_Programa(NroProg).Auxint1
        TipoFecha = Arr_Programa(NroProg).Auxint2
    Else
        Exit Sub
    End If


Select Case TipoFecha
Case 1: 'Primer dia del año
    Aux_fecha = C_Date("01/01/" & Year(Date))
    Texto = "Primer dia del año"
Case 2: 'Ultimo dia del año
    Aux_fecha = C_Date("31/12/" & Year(Date))
    Texto = "Ultimo dia del año"
Case 3: 'Inicio del proceso
    Aux_fecha = buliq_proceso!profecini
    Texto = "Inicio del proceso"
Case 4: 'Fin del proceso
    Aux_fecha = buliq_proceso!profecfin
    Texto = "Fin del proceso"
Case 5: 'Inicio del periodo
    Aux_fecha = buliq_periodo!pliqdesde
    Texto = "Inicio del periodo"
Case 6: 'Fin del periodo
    Aux_fecha = buliq_periodo!pliqhasta
    Texto = "Fin del periodo"
Case 7: 'Today
    Aux_fecha = Date
    Texto = "Today"
Case Else
    'tipo de fecha no valido
End Select

If CBool(USA_DEBUG) Then
    Flog.writeline Espacios(Tabulador * 4) & "Busca la estructura  a " & Texto & ": " & Aux_fecha
End If

'FGZ - 19/03/2004
If Not CBool(buliq_empleado!empest) Then
    If Aux_fecha > Empleado_Fecha_Fin Then
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "La fecha de baja del empleado es < a la fecha hasta " & Aux_fecha & ". Se corre la fecha hasta a: " & Empleado_Fecha_Fin
        End If
        Aux_fecha = Empleado_Fecha_Fin
    End If
End If

If Not EsNulo(Aux_fecha) Then
    ' Busco de estructura
        StrSql = " SELECT estrnro FROM his_estructura " & _
                 " WHERE ternro = " & buliq_empleado!ternro & " AND " & _
                 " tenro =" & TipoEstr & " AND " & _
                 " (htetdesde <= " & ConvFecha(Aux_fecha) & ") AND " & _
                 " ((" & ConvFecha(Aux_fecha) & " <= htethasta) or (htethasta is null))"
        OpenRecordset StrSql, rs_Estructura
    
        If Not rs_Estructura.EOF Then
            Valor = rs_Estructura!estrnro
            Bien = True
        Else
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "No se encontro la esructura."
                Flog.writeline Espacios(Tabulador * 4) & "SQL:"
                Flog.writeline Espacios(Tabulador * 5) & StrSql
            End If
        End If
End If
    

' Cierro todo y libero
'If Param_cur.State = adStateOpen Then Param_cur.Close
'Set Param_cur = Nothing

If rs_Estructura.State = adStateOpen Then rs_Estructura.Close
Set rs_Estructura = Nothing

End Sub


Public Sub bus_AntEstructura()
' ---------------------------------------------------------------------------------------------
' Descripcion: Antiguedad en la Estructura a una Fecha
' Autor      : FGZ
' Fecha      : 25/11/2003
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------

Dim TipoEstr As Long      ' Tipo de Estructura
Dim TipoFecha As Integer    ' 1 - Primer dia del año
                            ' 2 - Ultimo dia del año
                            ' 3 - Inicio del proceso
                            ' 4 - Fin del proceso
                            ' 5 - Inicio del Periodo
                            ' 6 - Fin del periodo
                            ' 7 - Today
Dim Resultado As Integer    ' Tipo de resultado devuelto
                            ' 1 - En dias
                            ' 2 - En Meses
                            ' 3 - En Años
                            
'Dim Param_cur As New ADODB.Recordset
Dim rs_Estructura As New ADODB.Recordset

Dim Aux_fecha As Date

Dim FechaDesde As Date
Dim FechaHasta As Date

Dim dia As Integer
Dim mes As Integer
Dim Anio As Integer
   
Dim Aux1 As Long
Dim Aux2 As Long
Dim Aux3 As Long
   
    Bien = False
    Valor = 0
   
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        TipoEstr = Arr_Programa(NroProg).Auxint1
        TipoFecha = Arr_Programa(NroProg).Auxint2
        Resultado = Arr_Programa(NroProg).Auxint3
    Else
        Exit Sub
    End If

Select Case TipoFecha
Case 1: 'Primer dia del año
    Aux_fecha = C_Date("01/01/" & Year(Date))
Case 2: 'Ultimo dia del año
    Aux_fecha = C_Date("31/12/" & Year(Date))
Case 3: 'Inicio del proceso
    Aux_fecha = buliq_proceso!profecini
Case 4: 'Fin del proceso
    Aux_fecha = buliq_proceso!profecfin
Case 5: 'Inicio del periodo
    Aux_fecha = buliq_periodo!pliqdesde
Case 6: 'Fin del periodo
    Aux_fecha = buliq_periodo!pliqhasta
Case 7: 'Today
    Aux_fecha = Date
Case Else
    'tipo de fecha no valido
End Select

'FGZ - 19/03/2004
If Not CBool(buliq_empleado!empest) Then
    If Aux_fecha > Empleado_Fecha_Fin Then
        Aux_fecha = Empleado_Fecha_Fin
    End If
End If

If Not EsNulo(Aux_fecha) Then
    ' Busco de estructura
        StrSql = " SELECT htetdesde,htethasta FROM his_estructura " & _
                 " WHERE ternro = " & buliq_empleado!ternro & " AND " & _
                 " tenro =" & TipoEstr & " AND " & _
                 " (htetdesde <= " & ConvFecha(Aux_fecha) & ") AND " & _
                 " ((" & ConvFecha(Aux_fecha) & " <= htethasta) or (htethasta is null))"
        OpenRecordset StrSql, rs_Estructura
    
        If Not rs_Estructura.EOF Then
            FechaDesde = rs_Estructura!htetdesde
            FechaHasta = IIf(EsNulo(rs_Estructura!htethasta), Date, rs_Estructura!htethasta)
        End If
        
        Call Dif_Fechas(FechaDesde, Aux_fecha, Aux1, Aux2, Aux3)
        dia = dia + Aux1
        mes = mes + Aux2 + Int(dia / 30)
        Anio = Anio + Aux3 + Int(mes / 12)
        dia = dia Mod 30
        mes = mes Mod 12
        
        Select Case Resultado
        Case 1: ' En dias
            Valor = dia
        Case 2: ' En meses
            Valor = mes
        Case 3: ' en años
            Valor = Anio
        End Select
        Bien = True
End If
    
' Cierro todo y libero
'If Param_cur.State = adStateOpen Then Param_cur.Close
'Set Param_cur = Nothing

If rs_Estructura.State = adStateOpen Then rs_Estructura.Close
Set rs_Estructura = Nothing

End Sub

Public Sub bus_ZonaDom()
' ---------------------------------------------------------------------------------------------
' Descripcion: Zona de Domicilio
' Autor      : FGZ
' Fecha      : 25/11/2003
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------

Dim TipoDomi As Long        ' Tipo de Domicilio
Dim TipoEstr As Long        ' Tipo de estructura
Dim Opcion As Long          ' 1 - Empleado
                            ' 2 - Sucursal
                            ' 3 - Empresa
Dim TipoFecha As Integer    ' 1 - Primer dia del año
                            ' 2 - Ultimo dia del año
                            ' 3 - Inicio del proceso
                            ' 4 - Fin del proceso
                            ' 5 - Inicio del Periodo
                            ' 6 - Fin del periodo
                            ' 7 - Today

'Dim Param_cur As New ADODB.Recordset
Dim rs_Zona As New ADODB.Recordset
Dim rs_Sucursal As New ADODB.Recordset
Dim rs_Estructura As New ADODB.Recordset

Dim Aux_fecha As Date

    Bien = False
    Valor = 0
   
    ' Obtener los parametros de la Busqueda
    StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        TipoDomi = Arr_Programa(NroProg).Auxint1
        Opcion = Arr_Programa(NroProg).Auxint2
        Select Case Opcion
        Case 1:
            TipoEstr = 1
        Case 2:
            TipoEstr = 1
            TipoFecha = Arr_Programa(NroProg).Auxint3
        Case 3:
            TipoEstr = 10
            TipoFecha = Arr_Programa(NroProg).Auxint3
        Case Else
        End Select
    Else
        Exit Sub
    End If

    
    Select Case TipoFecha
    Case 1: 'Primer dia del año
        Aux_fecha = C_Date("01/01/" & Year(Date))
    Case 2: 'Ultimo dia del año
        Aux_fecha = C_Date("31/12/" & Year(Date))
    Case 3: 'Inicio del proceso
        Aux_fecha = buliq_proceso!profecini
    Case 4: 'Fin del proceso
        Aux_fecha = buliq_proceso!profecfin
    Case 5: 'Inicio del periodo
        Aux_fecha = buliq_periodo!pliqdesde
    Case 6: 'Fin del periodo
        Aux_fecha = buliq_periodo!pliqhasta
    Case 7: 'Today
        Aux_fecha = Date
    Case Else
        'tipo de fecha no valido
    End Select

    'FGZ - 19/03/2004
    If Not CBool(buliq_empleado!empest) Then
        If Aux_fecha > Empleado_Fecha_Fin Then
            Aux_fecha = Empleado_Fecha_Fin
        End If
    End If
    
    ' De acuerdo a la opcion busco la zona
    Select Case Opcion
    Case 1: 'Empleado
        StrSql = " SELECT zonanro FROM detdom " & _
                 " INNER JOIN cabdom ON detdom.domnro = cabdom.domnro " & _
                 " WHERE cabdom.ternro = " & buliq_empleado!ternro & " AND " & _
                 " cabdom.domdefault = -1"
        OpenRecordset StrSql, rs_Zona
        If Not rs_Zona.EOF Then
            Valor = rs_Zona!zonanro
            Bien = True
        End If

    Case 2: 'Sucursal
        StrSql = " SELECT estrnro FROM his_estructura " & _
                 " WHERE ternro = " & buliq_empleado!ternro & " AND " & _
                 " tenro =" & TipoEstr & " AND " & _
                 " (htetdesde <= " & ConvFecha(Aux_fecha) & ") AND " & _
                 " ((" & ConvFecha(Aux_fecha) & " <= htethasta) or (htethasta is null))"
        OpenRecordset StrSql, rs_Estructura
    
        If Not rs_Estructura.EOF Then
            StrSql = " SELECT ternro FROM sucursal " & _
                     " WHERE estrnro =" & rs_Estructura!estrnro
            OpenRecordset StrSql, rs_Sucursal
            
            If Not rs_Sucursal.EOF Then
                StrSql = " SELECT zonanro FROM detdom " & _
                         " INNER JOIN cabdom ON detdom.domnro = cabdom.domnro " & _
                         " WHERE cabdom.ternro = " & rs_Sucursal!ternro & " AND " & _
                         " cabdom.domdefault = -1 "
                OpenRecordset StrSql, rs_Zona
                If Not rs_Zona.EOF Then
                    Valor = rs_Zona!zonanro
                    Bien = True
                End If
            End If  ' If Not rs_Sucursal.EOF Then
        End If ' If Not rs_Estructura.EOF Then
    
    Case 3: 'Empresa
        StrSql = " SELECT estrnro FROM his_estructura " & _
                 " WHERE ternro = " & buliq_empleado!ternro & " AND " & _
                 " tenro =" & TipoEstr & " AND " & _
                 " (htetdesde <= " & ConvFecha(Aux_fecha) & ") AND " & _
                 " ((" & ConvFecha(Aux_fecha) & " <= htethasta) or (htethasta is null))"
        OpenRecordset StrSql, rs_Estructura
    
        If Not rs_Estructura.EOF Then
            StrSql = " SELECT ternro FROM empresa " & _
                     " WHERE estrnro =" & rs_Estructura!estrnro
            OpenRecordset StrSql, rs_Sucursal
            
            If Not rs_Sucursal.EOF Then
                StrSql = " SELECT zonanro FROM detdom " & _
                         " INNER JOIN cabdom ON detdom.domnro = cabdom.domnro " & _
                         " WHERE cabdom.ternro = " & rs_Sucursal!ternro & " AND " & _
                         " cabdom.domdefault = -1 "
                OpenRecordset StrSql, rs_Zona
                If Not rs_Zona.EOF Then
                    Valor = rs_Zona!zonanro
                    Bien = True
                End If
            End If  ' If Not rs_Sucursal.EOF Then
        End If ' If Not rs_Estructura.EOF Then
    
    Case Else
    End Select
    
' Cierro todo y libero
'If Param_cur.State = adStateOpen Then Param_cur.Close
'Set Param_cur = Nothing

If rs_Zona.State = adStateOpen Then rs_Zona.Close
Set rs_Zona = Nothing

If rs_Sucursal.State = adStateOpen Then rs_Sucursal.Close
Set rs_Sucursal = Nothing

If rs_Estructura.State = adStateOpen Then rs_Estructura.Close
Set rs_Estructura = Nothing

End Sub


Public Sub bus_ZonaDom_old()
' ---------------------------------------------------------------------------------------------
' Descripcion: Zona de Domicilio
' Autor      : FGZ
' Fecha      : 25/11/2003
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------

Dim TipoDomi As Long        ' Tipo de Domicilio
Dim TipoEstr As Long        ' Tipo de estructura
Dim Opcion As Long          ' 1 - Empleado
                            ' 2 - Sucursal
                            ' 3 - Empresa
Dim TipoFecha As Integer    ' 1 - Primer dia del año
                            ' 2 - Ultimo dia del año
                            ' 3 - Inicio del proceso
                            ' 4 - Fin del proceso
                            ' 5 - Inicio del Periodo
                            ' 6 - Fin del periodo
                            ' 7 - Today

'Dim Param_cur As New ADODB.Recordset
Dim rs_Zona As New ADODB.Recordset
Dim rs_Sucursal As New ADODB.Recordset
Dim rs_Estructura As New ADODB.Recordset

Dim Aux_fecha As Date

    Bien = False
    Valor = 0
   
    ' Obtener los parametros de la Busqueda
    StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        TipoDomi = Arr_Programa(NroProg).Auxint1
        Opcion = Arr_Programa(NroProg).Auxint2
        Select Case Opcion
        Case 1:
            TipoEstr = 1
        Case 2:
            TipoEstr = 1
            TipoFecha = Arr_Programa(NroProg).Auxint3
        Case 3:
            TipoEstr = 10
            TipoFecha = Arr_Programa(NroProg).Auxint3
        Case Else
        End Select
    Else
        Exit Sub
    End If

    
    Select Case TipoFecha
    Case 1: 'Primer dia del año
        Aux_fecha = C_Date("01/01/" & Year(Date))
    Case 2: 'Ultimo dia del año
        Aux_fecha = C_Date("31/12/" & Year(Date))
    Case 3: 'Inicio del proceso
        Aux_fecha = buliq_proceso!profecini
    Case 4: 'Fin del proceso
        Aux_fecha = buliq_proceso!profecfin
    Case 5: 'Inicio del periodo
        Aux_fecha = buliq_periodo!pliqdesde
    Case 6: 'Fin del periodo
        Aux_fecha = buliq_periodo!pliqhasta
    Case 7: 'Today
        Aux_fecha = Date
    Case Else
        'tipo de fecha no valido
    End Select

    'FGZ - 19/03/2004
    If Not CBool(buliq_empleado!empest) Then
        If Aux_fecha > Empleado_Fecha_Fin Then
            Aux_fecha = Empleado_Fecha_Fin
        End If
    End If
    
    ' De acuerdo a la opcion busco la zona
    Select Case Opcion
    Case 1: 'Empleado
        StrSql = " SELECT zonanro FROM detdom " & _
                 " INNER JOIN cabdom ON detdom.domnro = cabdom.domnro " & _
                 " WHERE cabdom.ternro = " & buliq_empleado!ternro & " AND " & _
                 " cabdom.tipnro =" & TipoEstr
        OpenRecordset StrSql, rs_Zona
        If Not rs_Zona.EOF Then
            Valor = rs_Zona!Fields(0)
            Bien = True
        End If

    Case 2, 3: 'Sucursal o Empresa
        StrSql = " SELECT estrnro FROM his_estructura " & _
                 " WHERE ternro = " & buliq_empleado!ternro & " AND " & _
                 " tenro =" & TipoEstr & " AND " & _
                 " (htetdesde <= " & ConvFecha(Aux_fecha) & ") AND " & _
                 " ((" & ConvFecha(Aux_fecha) & " <= htethasta) or (htethasta is null))"
        OpenRecordset StrSql, rs_Estructura
    
        If Not rs_Estructura.EOF Then
            StrSql = " SELECT ternro FROM sucursal " & _
                     " WHERE estrnro =" & rs_Estructura!estrnro
            OpenRecordset StrSql, rs_Sucursal
            
            If Not rs_Sucursal.EOF Then
                StrSql = " SELECT zonanro FROM detdom " & _
                         " INNER JOIN cabdom ON detdom.domnro = cabdom.domnro " & _
                         " WHERE cabdom.ternro = " & rs_Sucursal!ternro & " AND " & _
                         " cabdom.tipnro =" & TipoEstr
                OpenRecordset StrSql, rs_Zona
                If Not rs_Zona.EOF Then
                    Valor = rs_Zona!zonanro
                    Bien = True
                End If
            End If  ' If Not rs_Sucursal.EOF Then
        End If ' If Not rs_Estructura.EOF Then
    Case Else
    End Select
    
' Cierro todo y libero
'If Param_cur.State = adStateOpen Then Param_cur.Close
'Set Param_cur = Nothing

If rs_Zona.State = adStateOpen Then rs_Zona.Close
Set rs_Zona = Nothing

If rs_Sucursal.State = adStateOpen Then rs_Sucursal.Close
Set rs_Sucursal = Nothing

If rs_Estructura.State = adStateOpen Then rs_Estructura.Close
Set rs_Estructura = Nothing

End Sub


Public Sub bus_PagoDtoLic()
' ---------------------------------------------------------------------------------------------
' Descripcion: Pago / Descuento de Licencias
' Autor      : FGZ
' Fecha      : 25/11/2003
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Opcion As Integer       ' 1 - Pago de adelanto
                            ' 2 - Descuento de adelanto
                            ' 3 - Pago de vacaciones
                            ' 4 - Descuento de vacaciones
Dim Todos As Boolean        'TRUE - Todas los tipos de licencias y
                            'FALSE - solo el tipo especificado en TipoLicencia
Dim TipoLicencia As Long    'tipdia.tdnro

'Dim Param_cur As New ADODB.Recordset
Dim rs_Vacpagdesc As New ADODB.Recordset
Dim Texto As String
   
    Bien = False
    Valor = 0
   
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
   
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda " & NroProg
    End If
    If Arr_Programa(NroProg).Prognro <> 0 Then
        Opcion = Arr_Programa(NroProg).Auxint1
        Todos = CBool(Arr_Programa(NroProg).Auxlog1)
        If Not Todos Then
            TipoLicencia = Arr_Programa(NroProg).Auxint2
        End If
        If CBool(USA_DEBUG) Then
            Select Case Opcion
                Case 1:
                    Texto = "Pago de adelanto"
                Case 2:
                    Texto = "Descuento de adelanto"
                Case 3:
                    Texto = "Pago de vacaciones"
                Case 4:
                    Texto = "Descuento de vacaciones"
            End Select
            Flog.writeline Espacios(Tabulador * 5) & "Busco " & Texto
            If Todos Then
                Flog.writeline Espacios(Tabulador * 5) & "para todos los tipos de licencias"
            Else
                Flog.writeline Espacios(Tabulador * 5) & "para el tipos de licencia " & TipoLicencia
            End If
        End If
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busqueda no encontrada " & NroProg
        End If
        Exit Sub
    End If

    If Todos Then
        StrSql = " SELECT vacpdnro,cantdias FROM vacpagdesc " & _
                 " WHERE ternro = " & buliq_empleado!ternro & " AND " & _
                 " pliqnro =" & buliq_proceso!PliqNro & " AND " & _
                 " tprocnro =" & buliq_proceso!tprocnro & " AND " & _
                 " pago_dto =" & Opcion & _
                 " AND (vacpagdesc.pronro = 0 OR vacpagdesc.pronro is null) "
    Else
        StrSql = " SELECT vacpdnro,cantdias FROM vacpagdesc " & _
                 " INNER JOIN emp_lic ON vacpagdesc.emp_licnro = emp_lic.emp_licnro " & _
                 " WHERE ternro = " & buliq_empleado!ternro & " AND " & _
                 " pliqnro =" & buliq_proceso!PliqNro & " AND " & _
                 " tprocnro =" & buliq_proceso!tprocnro & " AND " & _
                 " emp_lic.tdnro =" & TipoLicencia & " AND " & _
                 " pago_dto =" & Opcion & _
                 " AND (vacpagdesc.pronro = 0 OR vacpagdesc.pronro is null) "
    End If
    OpenRecordset StrSql, rs_Vacpagdesc

    If rs_Vacpagdesc.EOF Then
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontraron Pagos/Dtos "
        End If
        Valor = 0
        Bien = True
    Else
       
        Valor = 0
        Bien = True
           
        Do Until rs_Vacpagdesc.EOF
            
            Valor = Valor + rs_Vacpagdesc!cantdias
            
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Se encontró Pagos/Dtos por " & Valor & " dias "
                Flog.writeline Espacios(Tabulador * 4) & "Marco con el pronro del proceso actual"
            End If
            
            'Marco con el pronro del proceso actual
            StrSql = "UPDATE vacpagdesc SET pronro = " & buliq_proceso!pronro & _
                     " WHERE vacpdnro = " & rs_Vacpagdesc!vacpdnro
            objConn.Execute StrSql, , adExecuteNoRecords
            
            rs_Vacpagdesc.MoveNext
        Loop
        
    End If
' Cierro todo y libero
'If Param_cur.State = adStateOpen Then Param_cur.Close
'Set Param_cur = Nothing

If rs_Vacpagdesc.State = adStateOpen Then rs_Vacpagdesc.Close
Set rs_Vacpagdesc = Nothing

End Sub

Public Sub bus_PagoDtoLic_OLD()
' ---------------------------------------------------------------------------------------------
' Descripcion: Pago / Descuento de Licencias
' Autor      : FGZ
' Fecha      : 25/11/2003
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Opcion As Integer       ' 1 - Pago de adelanto
                            ' 2 - Descuento de adelanto
                            ' 3 - Descuento de vacaciones
                            ' 4 - Descuento de vacaciones
Dim Todos As Boolean        'TRUE - Todas los tipos de licencias y
                            'FALSE - solo el tipo especificado en TipoLicencia
Dim TipoLicencia As Long    'tipdia.tdnro

'Dim Param_cur As New ADODB.Recordset
Dim rs_Vacpagdesc As New ADODB.Recordset

   
    Bien = False
    Valor = 0
   
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        Opcion = Arr_Programa(NroProg).Auxint1
        Todos = CBool(Arr_Programa(NroProg).Auxlog1)
        If Not Todos Then
            TipoLicencia = Arr_Programa(NroProg).Auxint2
        End If
    Else
        Exit Sub
    End If

    If Todos Then
        StrSql = " SELECT cantdias FROM vacpagdesc " & _
                 " WHERE ternro = " & buliq_empleado!ternro & " AND " & _
                 " pliqnro =" & buliq_proceso!PliqNro & " AND " & _
                 " tprocnro =" & buliq_proceso!tprocnro & " AND " & _
                 " concnro =" & Buliq_Concepto(Concepto_Actual).concnro & " AND " & _
                 " pago_dto =" & Opcion
    Else
        StrSql = " SELECT cantdias FROM vacpagdesc " & _
                 " INNER JOIN emp_lic ON vacpagdesc.emp_licnro = emp_lic.emp_licnro " & _
                 " WHERE ternro = " & buliq_empleado!ternro & " AND " & _
                 " pliqnro =" & buliq_proceso!PliqNro & " AND " & _
                 " tprocnro =" & buliq_proceso!tprocnro & " AND " & _
                 " concnro =" & Buliq_Concepto(Concepto_Actual).concnro & " AND " & _
                 " emp_lic.tdnro =" & TipoLicencia & " AND " & _
                 " pago_dto =" & Opcion
    End If
    OpenRecordset StrSql, rs_Vacpagdesc

    If Not rs_Vacpagdesc.EOF Then
        Bien = True
        Valor = rs_Vacpagdesc!cantdias
    End If
        
    
' Cierro todo y libero
'If Param_cur.State = adStateOpen Then Param_cur.Close
'Set Param_cur = Nothing

If rs_Vacpagdesc.State = adStateOpen Then rs_Vacpagdesc.Close
Set rs_Vacpagdesc = Nothing

End Sub


Public Sub bus_NovGTI()
' ---------------------------------------------------------------------------------------------
' Descripcion: Novedades de GTI
' Autor      : FGZ
' Fecha      : 25/11/2003
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim NroConc As Long             ' concepto.concnro

Dim NroParametro As Long        ' tipopar.tpanro

Dim Opcion As Integer           ' 1 - Aprobadas
                                ' 2 - No Aprobadas
                                ' 3 - Todas
                                 
Dim DesdeHasta As Integer       ' 1- Proceso
                                ' 2- Periodo
                                
Dim ModeloGTI As Boolean        ' 0 - Uno
                                '-1 - Todos
                                
Dim Modelo As Long              'si ModeloGTI = 0 ==> gti_tipproc

'Dim Param_cur As New ADODB.Recordset
Dim rs_AcuNov As New ADODB.Recordset
Dim rs_gti_procacum As New ADODB.Recordset
 
Dim FechaDesde As Date
Dim FechaHasta As Date

Dim Aux_Suma As Double

    Bien = False
    Valor = 0
   
   
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        NroConc = Arr_Programa(NroProg).Auxint1
        NroParametro = Arr_Programa(NroProg).Auxint2
        Opcion = Arr_Programa(NroProg).Auxint3
        DesdeHasta = Arr_Programa(NroProg).Auxint4
        ModeloGTI = CBool(Arr_Programa(NroProg).Auxlog1)
        If Not ModeloGTI Then
            Modelo = Arr_Programa(NroProg).Auxlog5
        End If
    Else
        Exit Sub
    End If

    If DesdeHasta = 1 Then
        FechaDesde = buliq_proceso!profecini
        FechaHasta = buliq_proceso!profecfin
    Else
        FechaDesde = buliq_periodo!pliqdesde
        FechaHasta = buliq_periodo!pliqhasta
    End If
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Fecha Desde: " & FechaDesde
        Flog.writeline Espacios(Tabulador * 4) & "Fecha Hasta: " & FechaHasta
    End If

    If Not ModeloGTI Then
        StrSql = " SELECT gpanro, gpadesde, gpahasta " & _
                 " FROM gti_Procacum " & _
                 " WHERE  gpadesde >= " & FechaDesde & " AND gpahasta <= " & FechaHasta
    Else
        StrSql = " SELECT gpanro, gpadesde, gpahasta " & _
                 " FROM gti_Procacum " & _
                 " WHERE  gpadesde >= " & ConvFecha(FechaDesde) & " AND gpahasta <= " & ConvFecha(FechaHasta) & _
                 " AND gtprocnro = " & Modelo
    End If
    OpenRecordset StrSql, rs_gti_procacum

    Aux_Suma = 0
    If rs_gti_procacum.EOF Then
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontraron datos. "
            Flog.writeline Espacios(Tabulador * 4) & "SQL Ejecutado:  " & StrSql
        End If
    End If
    Do While Not rs_gti_procacum.EOF
                StrSql = "SELECT * FROM gti_acunov "
                StrSql = StrSql & " WHERE gti_acunov.concnro = " & NroConc
                StrSql = StrSql & " AND gti_acunov.tpanro = " & NroParametro
                StrSql = StrSql & " AND gti_acunov.tternro = " & buliq_empleado!ternro
                StrSql = StrSql & " AND gti_acunov.gpanro = " & rs_gti_procacum!gpanro
                     Select Case Opcion
                     Case 1:    'Aprobadas
                        StrSql = StrSql & " AND NOT gti_acunov.acnovfecaprob IS NULL "
                     Case 2:    'No aprobadas
                        StrSql = StrSql & " AND gti_acunov.acnovfecaprob IS NULL "
                     Case 3:    'Todas
                     Case Else:
                     End Select
                OpenRecordset StrSql, rs_AcuNov
                
                Do While Not rs_AcuNov.EOF
                
                    Aux_Suma = Aux_Suma + rs_AcuNov!acnovvalor
                    
                    rs_AcuNov.MoveNext
                Loop
                     
        rs_gti_procacum.MoveNext
    Loop

    Bien = True
    Valor = Aux_Suma


' Cierro todo y libero
'If Param_cur.State = adStateOpen Then Param_cur.Close
'Set Param_cur = Nothing

If rs_AcuNov.State = adStateOpen Then rs_AcuNov.Close
Set rs_AcuNov = Nothing

If rs_gti_procacum.State = adStateOpen Then rs_gti_procacum.Close
Set rs_gti_procacum = Nothing

End Sub

Public Sub bus_DiasHabiles_ConFases()
' ---------------------------------------------------------------------------------------------
' Descripcion: Calculo de Dias Habiles entre dos fechas teniendo en cuenta las fases
' Autor      : FGZ
' Fecha      : 05/01/2004
' Ultima Mod.: FGZ - 27/01/2005
' Descripcion: se le agrego que tenga en cuenta las fases
' ---------------------------------------------------------------------------------------------
Dim TipoFecha As Integer    '1- Periodo
                            '2- Proceso
Dim DiasHabiles As Double
Dim dia As Date
Dim EsFeriado As Boolean

Dim FechaDesde As Date
Dim FechaHasta As Date
Dim objFeriado As New Feriado
Dim ConFases As Boolean
Dim Aux_FechaDesde As Date
Dim Aux_FechaHasta As Date
Dim rs_Fases As New ADODB.Recordset

Dim IncluyeSabados As Boolean
Dim PorcentajeSabados As Double
Dim IncluyeFeriados As Boolean
Dim PorcentajeFeriados As Double

'inicializacion de variables
    ConFases = True
    DiasHabiles = 0
    Bien = False
    
    Set objFeriado.Conexion = objConn
    
    ' Obtener los parametros de la Busqueda
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda " & NroProg
    End If
    If Arr_Programa(NroProg).Prognro <> 0 Then
        TipoFecha = Arr_Programa(NroProg).Auxint1
        ConFases = CBool(Arr_Programa(NroProg).Auxlog1)
        IncluyeSabados = CBool(Arr_Programa(NroProg).Auxlog2)
        PorcentajeSabados = Arr_Programa(NroProg).Auxint2
        IncluyeFeriados = CBool(Arr_Programa(NroProg).Auxlog3)
        PorcentajeFeriados = Arr_Programa(NroProg).Auxint3
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busqueda no encontrada "
        End If
        Exit Sub
    End If

    If TipoFecha = 1 Then
        FechaDesde = buliq_periodo!pliqdesde
        FechaHasta = buliq_periodo!pliqhasta
    Else
        FechaDesde = buliq_proceso!profecini
        FechaHasta = buliq_proceso!profecfin
    End If
    
If ConFases Then
    'Busco las fases del periodo
    StrSql = "SELECT * FROM fases WHERE empleado = " & buliq_empleado!ternro & _
             " AND real = -1 AND Fases.altfec <= " & ConvFecha(FechaHasta) & _
             " AND (Fases.bajfec >= " & ConvFecha(FechaDesde) & " OR Fases.bajfec is null )" & _
             " ORDER BY altfec "
    OpenRecordset StrSql, rs_Fases
    
    Do While Not rs_Fases.EOF
        Aux_FechaDesde = IIf(rs_Fases!altfec < FechaDesde, FechaDesde, rs_Fases!altfec)
        If Not EsNulo(rs_Fases!bajfec) Then
            Aux_FechaHasta = IIf(rs_Fases!bajfec < FechaHasta, rs_Fases!bajfec, FechaHasta)
        Else
            Aux_FechaHasta = FechaHasta
        End If
        
        dia = Aux_FechaDesde
        Do While dia <= Aux_FechaHasta
            
            EsFeriado = objFeriado.Feriado(dia, buliq_empleado!ternro, False)
            
            If Not EsFeriado Then   'No es feriado
                If Not Weekday(dia) = 1 Then 'Domingo
                    If Weekday(dia) = 7 Then 'Sabado
                        If IncluyeSabados Then
                            DiasHabiles = DiasHabiles + (1 * PorcentajeSabados / 100)
                        End If
                    Else
                        DiasHabiles = DiasHabiles + 1
                    End If
                End If
            Else    'Incluye feriados
                DiasHabiles = DiasHabiles + (1 * PorcentajeFeriados / 100)
            End If
            
            dia = dia + 1
        Loop
        
       rs_Fases.MoveNext
    Loop
Else
    dia = FechaDesde
    Do While dia <= FechaHasta
        
        EsFeriado = objFeriado.Feriado(dia, buliq_empleado!ternro, False)
        If Not EsFeriado Then   'No es feriado
            If Not Weekday(dia) = 1 Then 'Domingo
                If Weekday(dia) = 7 Then 'Sabado
                    If IncluyeSabados Then
                        DiasHabiles = DiasHabiles + (1 * PorcentajeSabados / 100)
                    End If
                Else
                    DiasHabiles = DiasHabiles + 1
                End If
            End If
        Else    'Incluye feriados
            DiasHabiles = DiasHabiles + (1 * PorcentajeFeriados / 100)
        End If
        
        
'        If Not EsFeriado And Not Weekday(dia) = 1 Then
'            ' No es feriado no Domingo
'            If Weekday(dia) = 7 Then 'Sabado
'                DiasHabiles = DiasHabiles + 0.5
'            Else
'                DiasHabiles = DiasHabiles + 1
'            End If
'        End If
        dia = dia + 1
    Loop
End If

'FGZ - 22/07/2005
If DiasHabiles > 30 Then
    DiasHabiles = 30
End If
Bien = True
Valor = DiasHabiles

'Cierro y libero
If rs_Fases.State = adStateOpen Then rs_Fases.Close
Set rs_Fases = Nothing

End Sub




Public Sub bus_DiasHabiles()
' ---------------------------------------------------------------------------------------------
' Descripcion: Calculo de Dias Habiles entre dos fechas
' Autor      : FGZ
' Fecha      : 05/01/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim TipoFecha As Integer    '1- Periodo
                            '2- Proceso
Dim DiasHabiles As Double
Dim dia As Date
Dim EsFeriado As Boolean

Dim FechaDesde As Date
Dim FechaHasta As Date
Dim objFeriado As New Feriado

'Dim Param_cur As New ADODB.Recordset

   
' inicializacion de variables
    Set objFeriado.Conexion = objConn
    'Set objFeriado.ConexionTraza = objConn

    Bien = False
    
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda " & NroProg
    End If
    If Arr_Programa(NroProg).Prognro <> 0 Then
        TipoFecha = Arr_Programa(NroProg).Auxint1
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busqueda no encontrada "
        End If
        Exit Sub
    End If

    If TipoFecha = 1 Then
        FechaDesde = buliq_periodo!pliqdesde
        FechaHasta = buliq_periodo!pliqhasta
    Else
        FechaDesde = buliq_proceso!profecini
        FechaHasta = buliq_proceso!profecfin
    End If
    
dia = FechaDesde
Do While dia <= FechaHasta
    
    EsFeriado = objFeriado.Feriado(dia, buliq_empleado!ternro, False)
    
    If Not EsFeriado And Not Weekday(dia) = 1 Then
        ' No es feriado no Domingo
        If Weekday(dia) = 7 Then 'Sabado
            DiasHabiles = DiasHabiles + 0.5
        Else
            DiasHabiles = DiasHabiles + 1
        End If
    End If
    dia = dia + 1
Loop
Bien = True
Valor = DiasHabiles
End Sub



'Public Sub bus_GTI_DiasTrabajados()
'' ---------------------------------------------------------------------------------------------
'' Descripcion: Sumariza los dias trabajados (GTI)
'' segun empaque, productoy embalador y tercero
'' Autor      : FGZ
'' Fecha      : 05/01/2004
'' Ultima Mod.:
'' Descripcion:
'' ---------------------------------------------------------------------------------------------
'Dim NroProducto As Long                 ' de gti
'Dim NroEmpaque As Long                  ' de gti
'Dim HoraProduccion As Long              ' de gti
'Dim CategoriasEmbaladores As String     'GTI (210,211,212)
'
''Dim Param_cur As New ADODB.Recordset
'Dim rs_AcuNov As New ADODB.Recordset
'Dim rs_gti_achdiario As New ADODB.Recordset
'Dim rs_gti_achMensual As New ADODB.Recordset
'Dim rs_Estructura As New ADODB.Recordset
'
'Dim FechaDesde As Date
'Dim FechaHasta As Date
'
'Dim dias_trabajados As Integer
'
'    Bien = False
'    valor = 0
'    CategoriasEmbaladores = "210,211,212"
'
'    ' Obtener los parametros de la Busqueda
'    StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
'    'OpenRecordset StrSql, Param_cur
'
'    If Arr_Programa(NroProg).Prognro <> 0 Then
'        NroProducto = Arr_Programa(nroprog).auxint1
'        NroEmpaque = Arr_Programa(nroprog).auxint2
'        HoraProduccion = Arr_Programa(nroprog).auxint3
'        CategoriasEmbaladores = Arr_Programa(nroprog).auxchar1
'    Else
'        Exit Sub
'    End If
'
'    FechaDesde = buliq_periodo!pliqdesde
'    FechaHasta = buliq_periodo!pliqhasta
'
'    StrSql = " SELECT estrnro FROM his_estructura " & _
'             " WHERE ternro = " & buliq_empleado!Ternro & " AND " & _
'             " tenro = " & NroEmpaque & " AND " & _
'             " (htetdesde <= " & ConvFecha(FechaDesde) & ") AND " & _
'             " ((" & ConvFecha(FechaDesde) & " <= htethasta) or (htethasta is null))"
'    OpenRecordset StrSql, rs_Estructura
'
'    If rs_Estructura.EOF Then
'        'Flog "No se encuentra la sucursal"
'        Exit Sub
'    End If
'
'    'Recorriendo el desglose diario
'    StrSql = "SELECT * FROM gti_achdiario " & _
'         " WHERE (" & ConvFecha(FechaDesde) & " <= gti_achdiario.achdfecha) " & _
'         " AND (gti_achdiario.achdfecha <= " & ConvFecha(FechaHasta) & ")" & _
'         " AND (gti_achdiario.puenro = " & NroProducto & ") " & _
'         " AND (gti_achdiario.sucursal = " & rs_Estructura!estrnro & ")" & _
'         " AND (ternro = " & buliq_empleado!Ternro & ") AND (gti_achdiario.thnro =" & HoraProduccion & " )"
'    OpenRecordset StrSql, rs_gti_achdiario
'
'    Do While Not rs_gti_achdiario.EOF
'
'        dias_trabajados = dias_trabajados + rs_gti_achdiario!achdcanthoras
'
'        rs_gti_achdiario.MoveNext
'    Loop
'
'    'Recorriendo el desglose acumulado, teoricamente deberia ser un registro
'    ' Pendiente para mejorar performance
''    StrSql = "SELECT * FROM gti_achmensual " & _
''         " WHERE achmano = " & buliq_periodo!pliqnro & _
''         "AND catnro in (" & CategoriasEmbaladores & ")" & _
''         " AND (gti_achdiario.puenro = " & NroProducto & ") " & _
''         " AND (gti_achdiario.sucursal = " & rs_Estructura.estrnro & ")" & _
''         " AND (ternro = " & buliq_empleado!ternro & ")" & _
''         " AND (gti_achdiario.thnro =" & HoraProduccion & " )"
''    OpenRecordset StrSql, rs_gti_achMensual
''
''    Do While Not rs_gti_achMensual.EOF
''
''        dias_trabajados = dias_trabajados + rs_gti_achMensual!achmcanthoras
''
''        rs_gti_achMensual.MoveNext
''    Loop
'
'    valor = dias_trabajados
'    Bien = True
'
'' Cierro todo y libero
''If Param_cur.State = adStateOpen Then Param_cur.Close
''Set Param_cur = Nothing
'
'If rs_AcuNov.State = adStateOpen Then rs_AcuNov.Close
'Set rs_AcuNov = Nothing
'
'If rs_gti_achdiario.State = adStateOpen Then rs_gti_achdiario.Close
'Set rs_gti_achdiario = Nothing
'
'If rs_Estructura.State = adStateOpen Then rs_Estructura.Close
'Set rs_Estructura = Nothing
'
'End Sub




Public Sub bus_Licencias()
' ---------------------------------------------------------------------------------------------
' Descripcion: Dias de Licencias entre dos fechas (de un tipo o de todos los tipos)
' Autor      : FGZ
' Fecha      : 14/01/2004
' Ultima Mod.: 24/08/2006 - Martin Ferraro - Se agrego estado a las lic
' Descripcion:
' ---------------------------------------------------------------------------------------------

Dim TipoLicencia As Long    'Tipo de Estructura
Dim Todas As Boolean        'Todos los tipos

Dim dias As Integer
Dim SumaDias As Integer
Dim SumaDiasYaGenerados As Integer
Dim FechaDeInicio As Date
Dim FechaDeFin As Date
Dim TipoDia_Ok As Boolean
Dim Dias_Mes_Anterior As Integer
Dim Usa_Desborde As Boolean

Dim rs_Estructura As New ADODB.Recordset
Dim rs_tipd_con As New ADODB.Recordset
Dim rs_Lic As New ADODB.Recordset
Dim rs_Fases As New ADODB.Recordset

Dim Solo_Aprobadas As Integer

    Bien = False
    Valor = 0
   
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda "
    End If
    ' Obtener los parametros de la Busqueda
    If Arr_Programa(NroProg).Prognro <> 0 Then
        Todas = CBool(Arr_Programa(NroProg).Auxlog1)
        If Not Todas Then
            TipoLicencia = Arr_Programa(NroProg).Auxint1
        End If
        Usa_Desborde = IIf(Not EsNulo(Arr_Programa(NroProg).Auxlog2), CBool(Arr_Programa(NroProg).Auxlog2), -1)
        Solo_Aprobadas = IIf(Not EsNulo(Arr_Programa(NroProg).Auxlog4), CBool(Arr_Programa(NroProg).Auxlog4), 0)
    Else
        Exit Sub
    End If

'FGZ - 29/01/2004
FechaDeInicio = buliq_proceso!profecini
FechaDeFin = buliq_proceso!profecfin

'Controlo si el empleado esta dado de baja
StrSql = " SELECT * FROM fases WHERE empleado =" & buliq_empleado!ternro
StrSql = StrSql & " ORDER BY altfec DESC "

OpenRecordset StrSql, rs_Fases

If Not rs_Fases.EOF Then
   If Not IsNull(rs_Fases!bajfec) Then
      'Si tiene fecha de baja dentro del periodo seteo a esta como fecha tope
      If rs_Fases!bajfec < FechaDeFin Then
         FechaDeFin = rs_Fases!bajfec
      End If
   End If
End If

' Primero Busco  los tipos de dias asociados a los conceptos
If Todas Then 'Todos los tipos de Licencias
    StrSql = " SELECT * FROM tipd_con " & _
             " WHERE concnro =" & Buliq_Concepto(Concepto_Actual).concnro
Else 'Todos las Licencias del tipo especificado
    StrSql = " SELECT * FROM tipd_con " & _
             " WHERE concnro =" & Buliq_Concepto(Concepto_Actual).concnro & _
             " AND tdnro = " & TipoLicencia
End If
OpenRecordset StrSql, rs_tipd_con
If rs_tipd_con.EOF Then
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "no hay tipos de dias asociados a los conceptos "
    End If
End If

Do While Not rs_tipd_con.EOF
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tipo de dia: " & rs_tipd_con!tdnro
    End If
    TipoDia_Ok = True
    If Not EsNulo(rs_tipd_con!tenro) Then
        If rs_tipd_con!tenro <> 0 Then
            StrSql = " SELECT * FROM his_estructura " & _
                     " WHERE ternro = " & buliq_empleado!ternro & " AND " & _
                     " tenro =" & rs_tipd_con!tenro & " AND " & _
                     " estrnro = " & rs_tipd_con!estrnro & " AND " & _
                     " (htetdesde <= " & ConvFecha(FechaDeFin) & ") AND " & _
                     " ((" & ConvFecha(FechaDeFin) & " <= htethasta) or (htethasta is null))"
            OpenRecordset StrSql, rs_Estructura
            If rs_Estructura.EOF Then
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "Tipo de dia " & rs_tipd_con!tdnro & " no valido. No tiene estructura del tipo " & rs_tipd_con!tenro
                End If
                TipoDia_Ok = False
            End If
        End If
    End If

    If CBool(TipoDia_Ok) Then
        StrSql = "SELECT * FROM emp_lic WHERE (empleado = " & buliq_empleado!ternro & " )" & _
                 " AND tdnro =" & rs_tipd_con!tdnro & _
                 " AND elfechadesde <=" & ConvFecha(FechaDeFin) & _
                 " AND elfechahasta >= " & ConvFecha(FechaDeInicio)
        'MAF - Estado lic - 24/08/2006
        If Solo_Aprobadas = -1 Then
           StrSql = StrSql & " AND licestnro = 2 "
        End If
        OpenRecordset StrSql, rs_Lic
        
        dias = 0
        Do While Not rs_Lic.EOF
            If FechaDeFin = buliq_proceso!profecfin Then
                If rs_Lic!elfechahasta <= FechaDeFin Then
                    dias = CantidadDeDias(FechaDeInicio, FechaDeFin, rs_Lic!elfechadesde, rs_Lic!elfechahasta)
                Else
                    dias = CantidadDeDias(FechaDeInicio, FechaDeFin, rs_Lic!elfechadesde, rs_Lic!elfechahasta) - 1
                End If
            Else
                dias = CantidadDeDias(FechaDeInicio, FechaDeFin, rs_Lic!elfechadesde, rs_Lic!elfechahasta)
            End If
            'reviso si la licencia es completa
            If Todas Then 'Todos los tipos de Licencias
                Dias_Mes_Anterior = Dias_Licencias_Mes_Anterior(buliq_empleado!ternro, DateAdd("m", -1, FechaDeInicio), FechaDeInicio - 1)
                If Dias_Mes_Anterior = 30 Then
                    'calculo los dias reales del mes
                    If Usa_Desborde Then
                        Dias_Mes_Anterior = DateDiff("d", DateAdd("m", -1, FechaDeInicio), FechaDeInicio - 1) + 1
                    Else
                        Dias_Mes_Anterior = DateDiff("d", DateAdd("m", -1, FechaDeInicio), FechaDeInicio - 1)
                    End If
                    dias = dias + (Dias_Mes_Anterior - 30)
                End If
            Else
                ' solo este tipo
                If rs_Lic!elfechadesde <= DateAdd("m", -1, FechaDeInicio) Then
                    If rs_Lic!elfechahasta >= DateAdd("m", -1, FechaDeFin) Then
                        'Para ajustar la cantidad de dias cuando la lic sobrepasa al mes y fue topeada
                        If Usa_Desborde Then
                            Dias_Mes_Anterior = DateDiff("d", DateAdd("m", -1, FechaDeInicio), FechaDeInicio - 1) + 1
                        Else
                            Dias_Mes_Anterior = DateDiff("d", DateAdd("m", -1, FechaDeInicio), FechaDeInicio - 1)
                        End If
                        dias = dias + (Dias_Mes_Anterior - 30)
                    End If
                End If
            End If
            SumaDias = SumaDias + dias
            
            'Marco la licencia para que no se pueda Borrar
            StrSql = "UPDATE emp_lic SET pronro = " & NroProc & _
                     " WHERE emp_licnro = " & rs_Lic!emp_licnro
            objConn.Execute StrSql, , adExecuteNoRecords
            
            rs_Lic.MoveNext
        Loop
    End If
    rs_tipd_con.MoveNext
Loop

' --------------------------------------------
' FGZ - 29/01/2004
' Buscar todas las licencias
' Busco los detliq (campo dlicant "cantidad") del periodo cuyas licencias emp_lic esten marcadas (en pronro)
' este valor +  SumaDias no debe seperar 30 dias
' FGZ - 29/01/2004
' QUEDA PENDIENTE
' --------------------------------------------

If Month(FechaDeInicio) = 2 Then 'Febrero
    If Biciesto(Year(FechaDeInicio)) Then
        If SumaDias >= 29 Then
            Valor = 30
        Else
            Valor = SumaDias
        End If
    Else
        If SumaDias >= 28 Then
            Valor = 30
        Else
            Valor = SumaDias
        End If
    End If
Else
    If SumaDias > 30 Then
        Valor = 30
    Else
        Valor = SumaDias
    End If
End If
Bien = True
    
' Cierro todo y libero
If rs_Estructura.State = adStateOpen Then rs_Estructura.Close
Set rs_Estructura = Nothing

If rs_Lic.State = adStateOpen Then rs_Lic.Close
Set rs_Lic = Nothing

If rs_tipd_con.State = adStateOpen Then rs_tipd_con.Close
Set rs_tipd_con = Nothing

If rs_Fases.State = adStateOpen Then rs_Fases.Close
Set rs_Fases = Nothing


End Sub



Public Sub bus_LicenciasMesCalendario()
' ---------------------------------------------------------------------------------------------
' Descripcion: Dias de Licencias entre dos fechas (de un tipo o de todos los tipos), sin topeo de dias
' Autor      : FGZ
' Fecha      : 12/03/2004
' Ultima Mod.: 24/08/2006 - Martin Ferraro - Se agrego estado a las lic
' Descripcion:
' ---------------------------------------------------------------------------------------------

Dim TipoLicencia As Long    'Tipo de Estructura
Dim Todas As Boolean        'Todos los tipos

Dim dias As Integer
Dim SumaDias As Integer
Dim SumaDiasYaGenerados As Integer
Dim FechaDeInicio As Date
Dim FechaDeFin As Date
Dim TipoDia_Ok As Boolean

'Dim Param_cur As New ADODB.Recordset
Dim rs_Estructura As New ADODB.Recordset
Dim rs_tipd_con As New ADODB.Recordset
Dim rs_Lic As New ADODB.Recordset
Dim Solo_Aprobadas As Integer

    Bien = False
    Valor = 0
   
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        Todas = CBool(Arr_Programa(NroProg).Auxlog1)
        If Not Todas Then
            TipoLicencia = Arr_Programa(NroProg).Auxint1
        End If
        Solo_Aprobadas = IIf(Not EsNulo(Arr_Programa(NroProg).Auxlog4), CBool(Arr_Programa(NroProg).Auxlog4), 0)
    Else
        Exit Sub
    End If


'FechaDeInicio = buliq_periodo!pliqdesde
'FechaDeFin = buliq_periodo!pliqhasta

'FGZ - 29/01/2004
FechaDeInicio = buliq_proceso!profecini
FechaDeFin = buliq_proceso!profecfin

' Primero Busco  los tipos de dias asociados a los conceptos
If Todas Then 'Todos los tipos de Licencias
    StrSql = " SELECT * FROM tipd_con " & _
             " WHERE concnro =" & Buliq_Concepto(Concepto_Actual).concnro
Else 'Todos las Licencias del tipo especificado
    StrSql = " SELECT * FROM tipd_con " & _
             " WHERE concnro =" & Buliq_Concepto(Concepto_Actual).concnro & _
             " AND tdnro = " & TipoLicencia
End If
OpenRecordset StrSql, rs_tipd_con

Do While Not rs_tipd_con.EOF
    TipoDia_Ok = True
    If Not EsNulo(rs_tipd_con!tenro) Then
        StrSql = " SELECT * FROM his_estructura " & _
                 " WHERE ternro = " & buliq_empleado!ternro & " AND " & _
                 " tenro =" & rs_tipd_con!tenro & " AND " & _
                 " estrnro = " & rs_tipd_con!estrnro & " AND " & _
                 " (htetdesde <= " & ConvFecha(FechaDeFin) & ") AND " & _
                 " ((" & ConvFecha(FechaDeFin) & " <= htethasta) or (htethasta is null))"
        OpenRecordset StrSql, rs_Estructura
        
        If rs_Estructura.EOF Then
            TipoDia_Ok = False
        End If
    End If

    If CBool(TipoDia_Ok) Then
'        StrSql = "SELECT * FROM emp_lic WHERE (empleado = " & buliq_empleado!ternro & " )" & _
'                 " AND tdnro =" & rs_tipd_con!tdnro & _
'                 " AND elfechadesde >=" & ConvFecha(FechaDeInicio) & _
'                 " AND elfechahasta <= " & ConvFecha(FechaDeFin)
        
        StrSql = "SELECT * FROM emp_lic WHERE (empleado = " & buliq_empleado!ternro & " )" & _
                 " AND tdnro =" & rs_tipd_con!tdnro & _
                 " AND elfechadesde <=" & ConvFecha(FechaDeFin) & _
                 " AND elfechahasta >= " & ConvFecha(FechaDeInicio)
        'MAF - Estado lic - 24/08/2006
        If Solo_Aprobadas = -1 Then
           StrSql = StrSql & " AND licestnro = 2 "
        End If
                 
        OpenRecordset StrSql, rs_Lic
        
        dias = 0
        Do While Not rs_Lic.EOF
            dias = CantidadDeDias(FechaDeInicio, FechaDeFin, rs_Lic!elfechadesde, rs_Lic!elfechahasta)
            SumaDias = SumaDias + dias
            
            'Marco la licencia para que no se pueda Borrar
            StrSql = "UPDATE emp_lic SET pronro = " & NroProc & _
                     " WHERE emp_licnro = " & rs_Lic!emp_licnro
            objConn.Execute StrSql, , adExecuteNoRecords
            
            rs_Lic.MoveNext
        Loop
    End If
    rs_tipd_con.MoveNext
Loop

' --------------------------------------------
' FGZ - 29/01/2004
' Buscar todas las licencias
' Busco los detliq (campo dlicant "cantidad") del periodo cuyas licencias emp_lic esten marcadas (en pronro)
' este valor +  SumaDias no debe seperar 30 dias
' FGZ - 29/01/2004
' QUEDA PENDIENTE
' --------------------------------------------
'If Month(FechaDeInicio) = 2 Then 'Febrero
'    If Biciesto(Year(FechaDeInicio)) Then
'        If SumaDias >= 29 Then
'            Valor = 30
'        Else
'            Valor = SumaDias
'        End If
'    Else
'        If SumaDias >= 28 Then
'            Valor = 30
'        Else
'            Valor = SumaDias
'        End If
'    End If
'Else
'    If SumaDias > 30 Then
'        Valor = 30
'    Else
'        Valor = SumaDias
'    End If
'End If

Valor = SumaDias
Bien = True
    

' Cierro todo y libero
'If Param_cur.State = adStateOpen Then Param_cur.Close
'Set Param_cur = Nothing

If rs_Estructura.State = adStateOpen Then rs_Estructura.Close
Set rs_Estructura = Nothing

If rs_Lic.State = adStateOpen Then rs_Lic.Close
Set rs_Lic = Nothing

If rs_tipd_con.State = adStateOpen Then rs_tipd_con.Close
Set rs_tipd_con = Nothing

End Sub


Public Sub bus_LicenciasPeriodoGTI()
' ---------------------------------------------------------------------------------------------
' Descripcion: Dias de Licencias entre dos fechas (de un tipo o de todos los tipos), sin topeo de dias
'               segun periodo de GTI
' Autor      : FGZ
' Fecha      : 09/06/2004
' Ultima Mod.: 24/08/2006 - Martin Ferraro - Se agrego estado a las lic
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim TipoLicencia As Long    'Tipo de Estructura
Dim Todas As Boolean        'Todos los tipos

Dim dias As Integer
Dim SumaDias As Integer
Dim SumaDiasYaGenerados As Integer
Dim FechaDeInicio As Date
Dim FechaDeFin As Date
Dim TipoDia_Ok As Boolean

'Dim Param_cur As New ADODB.Recordset
Dim rs_Estructura As New ADODB.Recordset
Dim rs_tipd_con As New ADODB.Recordset
Dim rs_Lic As New ADODB.Recordset
Dim rs_PeriodoGTI As New ADODB.Recordset

Dim Solo_Aprobadas As Integer


    Bien = False
    Valor = 0
   
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        Todas = CBool(Arr_Programa(NroProg).Auxlog1)
        If Not Todas Then
            TipoLicencia = Arr_Programa(NroProg).Auxint1
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Tipos de Licencia: " & TipoLicencia
            End If
        Else
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Todos los tipos de Licencias"
            End If
        End If
        Solo_Aprobadas = IIf(Not EsNulo(Arr_Programa(NroProg).Auxlog4), CBool(Arr_Programa(NroProg).Auxlog4), 0)
    Else
        Exit Sub
    End If

' Busco el periodo de GTI
StrSql = "SELECT * FROM gti_per "
StrSql = StrSql & " WHERE pgtimes = " & buliq_periodo!pliqmes
StrSql = StrSql & " AND pgtianio = " & buliq_periodo!pliqanio
OpenRecordset StrSql, rs_PeriodoGTI

If Not rs_PeriodoGTI.EOF Then
    FechaDeInicio = rs_PeriodoGTI!pgtidesde
    FechaDeFin = rs_PeriodoGTI!pgtihasta
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Periodo de GTI encontrado. DESDE: " & rs_PeriodoGTI!pgtidesde & " HASTA: " & rs_PeriodoGTI!pgtihasta
    End If
Else
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "No existe Periodo de GTI para ese mes y año " & buliq_periodo!pliqmes & " del " & buliq_periodo!pliqanio
    End If
    Exit Sub
End If


' Primero Busco  los tipos de dias asociados a los conceptos
If Todas Then 'Todos los tipos de Licencias
    StrSql = " SELECT * FROM tipd_con " & _
             " WHERE concnro =" & Buliq_Concepto(Concepto_Actual).concnro
Else 'Todos las Licencias del tipo especificado
    StrSql = " SELECT * FROM tipd_con " & _
             " WHERE concnro =" & Buliq_Concepto(Concepto_Actual).concnro & _
             " AND tdnro = " & TipoLicencia
End If
OpenRecordset StrSql, rs_tipd_con
If rs_tipd_con.EOF Then
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "El concepto no tiene tipos de dias asociados. NO sigue Buscando."
    End If
End If

Do While Not rs_tipd_con.EOF
    TipoDia_Ok = True
    If Not EsNulo(rs_tipd_con!tenro) Then
        StrSql = " SELECT * FROM his_estructura " & _
                 " WHERE ternro = " & buliq_empleado!ternro & " AND " & _
                 " tenro =" & rs_tipd_con!tenro & " AND " & _
                 " estrnro = " & rs_tipd_con!estrnro & " AND " & _
                 " (htetdesde <= " & ConvFecha(FechaDeFin) & ") AND " & _
                 " ((" & ConvFecha(FechaDeFin) & " <= htethasta) or (htethasta is null))"
        OpenRecordset StrSql, rs_Estructura
        
        If rs_Estructura.EOF Then
            TipoDia_Ok = False
        Else
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Tipo de dia (" & rs_tipd_con!tdnro & ") Asociado a estructura (" & rs_tipd_con!estrnro & ") Sin Vigencia."
            End If
        End If
    End If

    If CBool(TipoDia_Ok) Then
        StrSql = "SELECT * FROM emp_lic WHERE (empleado = " & buliq_empleado!ternro & " )" & _
                 " AND tdnro =" & rs_tipd_con!tdnro & _
                 " AND elfechadesde <=" & ConvFecha(FechaDeFin) & _
                 " AND elfechahasta >= " & ConvFecha(FechaDeInicio)
        'MAF - Estado lic - 24/08/2006
        If Solo_Aprobadas = -1 Then
           StrSql = StrSql & " AND licestnro = 2 "
        End If
                 
        OpenRecordset StrSql, rs_Lic
        
        dias = 0
        Do While Not rs_Lic.EOF
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Licencia encontrada. Desde: " & rs_Lic!elfechadesde & " Hasta: " & rs_Lic!elfechahasta
            End If
            dias = CantidadDeDias(FechaDeInicio, FechaDeFin, rs_Lic!elfechadesde, rs_Lic!elfechahasta)
            SumaDias = SumaDias + dias
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Suma " & dias & " días."
            End If
            
            'Marco la licencia para que no se pueda Borrar
            StrSql = "UPDATE emp_lic SET pronro = " & NroProc & _
                     " WHERE emp_licnro = " & rs_Lic!emp_licnro
            objConn.Execute StrSql, , adExecuteNoRecords
            
            rs_Lic.MoveNext
        Loop
    End If
    rs_tipd_con.MoveNext
Loop

If Month(FechaDeInicio) = 2 Then 'Febrero
    If Biciesto(Year(FechaDeInicio)) Then
        If SumaDias >= 29 Then
            Valor = 30
        Else
            Valor = SumaDias
        End If
    Else
        If SumaDias >= 28 Then
            Valor = 30
        Else
            Valor = SumaDias
        End If
    End If
Else
    If SumaDias > 30 Then
        Valor = 30
    Else
        Valor = SumaDias
    End If
End If

Valor = SumaDias
Bien = True
    

' Cierro todo y libero
'If Param_cur.State = adStateOpen Then Param_cur.Close
'Set Param_cur = Nothing

If rs_Estructura.State = adStateOpen Then rs_Estructura.Close
Set rs_Estructura = Nothing

If rs_Lic.State = adStateOpen Then rs_Lic.Close
Set rs_Lic = Nothing

If rs_tipd_con.State = adStateOpen Then rs_tipd_con.Close
Set rs_tipd_con = Nothing

If rs_PeriodoGTI.State = adStateOpen Then rs_PeriodoGTI.Close
Set rs_PeriodoGTI = Nothing
End Sub


Public Sub bus_Vales()
' ---------------------------------------------------------------------------------------------
' Descripcion: Dtos de Vales
' Autor      : FGZ
' Fecha      : 14/01/2004
' Ultima Mod.: 26/02/2007 - Martin Ferraro - Agregue opcion todos/revisados
'              21/09/2007 - Martin Ferraro - Agregue seleccion tipo vales
' Descripcion:
' ---------------------------------------------------------------------------------------------

Dim Opcion As Integer   '1 - Primera Quincena
                        '2 - Segunda Quincena
                        '3 - Mensual

Dim Revisado As Integer '1 - Todos
                        '2 - Solo Revisados

Dim TipoVale As Integer '0        - Todos
                        'otro nro - El tipo de vale

Dim FechaDeInicio As Date
Dim FechaDeFin As Date

'Dim Param_cur As New ADODB.Recordset
Dim rs_Vales As New ADODB.Recordset
Dim PrimerDia As Integer
Dim UltimoDia As Integer

    Bien = False
    Valor = 0
   
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        Opcion = Arr_Programa(NroProg).Auxint1
        Revisado = Arr_Programa(NroProg).Auxint2
        TipoVale = Arr_Programa(NroProg).Auxint3
    Else
        Exit Sub
    End If

Select Case Opcion
Case 1: 'Primera Quincena
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Buscando en la primera quincena"
        If Revisado = 1 Then
            Flog.writeline Espacios(Tabulador * 4) & "Todos los Vales"
        Else
            Flog.writeline Espacios(Tabulador * 4) & "Solo vales Revisados"
        End If
        If TipoVale = 0 Then
            Flog.writeline Espacios(Tabulador * 4) & "Todos los Tipos de Vales"
        Else
            Flog.writeline Espacios(Tabulador * 4) & "Solo los Vales de Tipo " & TipoVale
        End If
    End If

    PrimerDia = 1
    UltimoDia = 15
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Primer dia: " & PrimerDia
        Flog.writeline Espacios(Tabulador * 4) & "Ultimo dia: " & UltimoDia
    End If
    
    StrSql = "SELECT * FROM vales " & _
             " WHERE empleado = " & buliq_empleado!ternro & _
             " AND pliqdto = " & buliq_periodo!PliqNro & _
             " AND (pronro is null OR pronro = 0) " & _
             " AND valfecped >= " & ConvFecha(C_Date(PrimerDia & "/" & Month(buliq_periodo!pliqdesde) & "/" & Year(buliq_periodo!pliqdesde))) & _
             " AND valfecped <= " & ConvFecha(C_Date(UltimoDia & "/" & Month(buliq_periodo!pliqdesde) & "/" & Year(buliq_periodo!pliqdesde)))
    If Revisado <> 1 Then
        StrSql = StrSql & " AND valrevis = -1"
    End If
    If TipoVale <> 0 Then
        StrSql = StrSql & " AND tvalenro = " & TipoVale
    End If
    
    
    OpenRecordset StrSql, rs_Vales
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Se encontraron " & rs_Vales.RecordCount & " vales"
    End If

    Do While Not rs_Vales.EOF
'        If 1 <= Day(rs_Vales!valfecped) And Day(rs_Vales!valfecped) <= 15 Then
            Valor = Valor + rs_Vales!valmonto
'        End If
        
        rs_Vales.MoveNext
    Loop

    'Actualiza Vales (Marca el vale)
    StrSql = "UPDATE vales SET pronro = " & NroProc & _
             " WHERE empleado = " & buliq_empleado!ternro & _
             " AND pliqdto = " & buliq_periodo!PliqNro & _
             " AND (pronro is null OR pronro = 0) " & _
             " AND valfecped >= " & ConvFecha(C_Date(PrimerDia & "/" & Month(buliq_periodo!pliqdesde) & "/" & Year(buliq_periodo!pliqdesde))) & _
             " AND valfecped <= " & ConvFecha(C_Date(UltimoDia & "/" & Month(buliq_periodo!pliqdesde) & "/" & Year(buliq_periodo!pliqdesde)))
    If Revisado <> 1 Then
        StrSql = StrSql & " AND valrevis = -1"
    End If
    objConn.Execute StrSql, , adExecuteNoRecords
    
    
Case 2: 'Segunda Quincena
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Buscando en la segunda quincena"
        If Revisado = 1 Then
            Flog.writeline Espacios(Tabulador * 4) & "Todos los Vales"
        Else
            Flog.writeline Espacios(Tabulador * 4) & "Solo vales Revisados"
        End If
        If TipoVale = 0 Then
            Flog.writeline Espacios(Tabulador * 4) & "Todos los Tipos de Vales"
        Else
            Flog.writeline Espacios(Tabulador * 4) & "Solo los Vales de Tipo " & TipoVale
        End If
    End If

    PrimerDia = 16
    If Month(buliq_periodo!pliqdesde) = 12 Then
        UltimoDia = 31
    Else
        'UltimoDia = Day(C_Date("01/" & (Month(buliq_periodo!pliqdesde) + 1) & "/" & Year(buliq_periodo!pliqdesde)) - 1)
        If (Month(buliq_periodo!pliqdesde) + 1) < 10 Then
           UltimoDia = Day(DateAdd("d", -1, C_Date("01/0" & (Month(buliq_periodo!pliqdesde) + 1) & "/" & Year(buliq_periodo!pliqdesde))))
        Else
           UltimoDia = Day(DateAdd("d", -1, C_Date("01/" & (Month(buliq_periodo!pliqdesde) + 1) & "/" & Year(buliq_periodo!pliqdesde))))
        End If
    End If
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Primer dia: " & PrimerDia
        Flog.writeline Espacios(Tabulador * 4) & "Ultimo dia: " & UltimoDia
    End If
    
    StrSql = "SELECT * FROM vales " & _
             " WHERE empleado = " & buliq_empleado!ternro & _
             " AND pliqdto = " & buliq_periodo!PliqNro & _
             " AND (pronro is null OR pronro = 0) " & _
             " AND valfecped >= " & ConvFecha(C_Date(PrimerDia & "/" & Month(buliq_periodo!pliqdesde) & "/" & Year(buliq_periodo!pliqdesde))) & _
             " AND valfecped <= " & ConvFecha(C_Date(UltimoDia & "/" & Month(buliq_periodo!pliqdesde) & "/" & Year(buliq_periodo!pliqdesde)))
    If Revisado <> 1 Then
        StrSql = StrSql & " AND valrevis = -1"
    End If
    If TipoVale <> 0 Then
        StrSql = StrSql & " AND tvalenro = " & TipoVale
    End If
    
    OpenRecordset StrSql, rs_Vales
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Se encontraron " & rs_Vales.RecordCount & " vales"
    End If

    Do While Not rs_Vales.EOF
'        If 16 <= Day(rs_Vales!valfecped) Then
            Valor = Valor + rs_Vales!valmonto
'        End If
        
        rs_Vales.MoveNext
    Loop
    
    'Actualiza los Vales (Marca el vale con el nro de proceso de Liquiacion)
    StrSql = "UPDATE vales SET pronro = " & NroProc & _
             " WHERE empleado = " & buliq_empleado!ternro & _
             " AND pliqdto = " & buliq_periodo!PliqNro & _
             " AND (pronro is null OR pronro = 0) " & _
             " AND valfecped >= " & ConvFecha(C_Date(PrimerDia & "/" & Month(buliq_periodo!pliqdesde) & "/" & Year(buliq_periodo!pliqdesde))) & _
             " AND valfecped <= " & ConvFecha(C_Date(UltimoDia & "/" & Month(buliq_periodo!pliqdesde) & "/" & Year(buliq_periodo!pliqdesde)))
    If Revisado <> 1 Then
        StrSql = StrSql & " AND valrevis = -1"
    End If
    objConn.Execute StrSql, , adExecuteNoRecords
    
Case 3: 'Mensual
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Buscando en el mes"
        If Revisado = 1 Then
            Flog.writeline Espacios(Tabulador * 4) & "Todos los Vales"
        Else
            Flog.writeline Espacios(Tabulador * 4) & "Solo vales Revisados"
        End If
        If TipoVale = 0 Then
            Flog.writeline Espacios(Tabulador * 4) & "Todos los Tipos de Vales"
        Else
            Flog.writeline Espacios(Tabulador * 4) & "Solo los Vales de Tipo " & TipoVale
        End If
    End If

    PrimerDia = 1
    If Month(buliq_periodo!pliqdesde) = 12 Then
        UltimoDia = 31
    Else
        UltimoDia = Day(C_Date("01/" & (Month(buliq_periodo!pliqdesde) + 1) & "/" & Year(buliq_periodo!pliqdesde)) - 1)
    End If
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Primer dia: " & PrimerDia
        Flog.writeline Espacios(Tabulador * 4) & "Ultimo dia: " & UltimoDia
    End If

'    StrSql = "SELECT * FROM vales " & _
'             " WHERE empleado = " & buliq_empleado!ternro & _
'             " AND pliqdto = " & buliq_periodo!PliqNro & _
'             " AND (pronro is null OR pronro = 0) " & _
'             " AND valfecped >= " & ConvFecha(c_date(PrimerDia & "/" & Month(buliq_periodo!pliqdesde) & "/" & Year(buliq_periodo!pliqdesde))) & _
'             " AND valfecped <= " & ConvFecha(c_date(UltimoDia & "/" & Month(buliq_periodo!pliqdesde) & "/" & Year(buliq_periodo!pliqdesde)))
    'FGZ - 24/06/2005
    StrSql = "SELECT * FROM vales " & _
             " WHERE empleado = " & buliq_empleado!ternro & _
             " AND pliqdto = " & buliq_periodo!PliqNro & _
             " AND (pronro is null OR pronro = 0)"
    If Revisado <> 1 Then
        StrSql = StrSql & " AND valrevis = -1"
    End If
    If TipoVale <> 0 Then
        StrSql = StrSql & " AND tvalenro = " & TipoVale
    End If
    
    OpenRecordset StrSql, rs_Vales
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Se encontraron " & rs_Vales.RecordCount & " vales"
    End If

    Do While Not rs_Vales.EOF
        Valor = Valor + rs_Vales!valmonto
       
        rs_Vales.MoveNext
    Loop
    
    'Actualiza los Vales (Marca el vale con el nro de proceso de Liquiacion)
'    StrSql = "UPDATE vales SET pronro = " & NroProc & _
'             " WHERE empleado = " & buliq_empleado!ternro & _
'             " AND pliqdto = " & buliq_periodo!PliqNro & _
'             " AND (pronro is null OR pronro = 0) " & _
'             " AND valfecped >= " & ConvFecha(c_date(PrimerDia & "/" & Month(buliq_periodo!pliqdesde) & "/" & Year(buliq_periodo!pliqdesde))) & _
'             " AND valfecped <= " & ConvFecha(c_date(UltimoDia & "/" & Month(buliq_periodo!pliqdesde) & "/" & Year(buliq_periodo!pliqdesde)))

    'FGZ - 24/06/2005
    StrSql = "UPDATE vales SET pronro = " & NroProc & _
             " WHERE empleado = " & buliq_empleado!ternro & _
             " AND pliqdto = " & buliq_periodo!PliqNro & _
             " AND (pronro is null OR pronro = 0) "
    If Revisado <> 1 Then
        StrSql = StrSql & " AND valrevis = -1"
    End If
    objConn.Execute StrSql, , adExecuteNoRecords
    
Case 4: 'Segun Fechas del proceso
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Buscando segun la fecha del proceso"
        If Revisado = 1 Then
            Flog.writeline Espacios(Tabulador * 4) & "Todos los Vales"
        Else
            Flog.writeline Espacios(Tabulador * 4) & "Solo vales Revisados"
        End If
        If TipoVale = 0 Then
            Flog.writeline Espacios(Tabulador * 4) & "Todos los Tipos de Vales"
        Else
            Flog.writeline Espacios(Tabulador * 4) & "Solo los Vales de Tipo " & TipoVale
        End If
    End If
    'Fecha desde
    If Not EsNulo(buliq_proceso!profecini) Then
        FechaDeInicio = buliq_proceso!profecini
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Fecha desde del proceso nula. Se tomará la fecha desde del periodo."
        End If
        FechaDeInicio = buliq_periodo!pliqdesde
    End If
    'Fecha hasta
    If Not EsNulo(buliq_proceso!profecfin) Then
        FechaDeFin = buliq_proceso!profecfin
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Fecha hasta del proceso nula. Se tomará la fecha hasta del periodo."
        End If
        FechaDeFin = buliq_periodo!pliqhasta
    End If
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Primer dia: " & FechaDeInicio
        Flog.writeline Espacios(Tabulador * 4) & "Ultimo dia: " & FechaDeFin
    End If
    
    StrSql = "SELECT * FROM vales " & _
             " WHERE empleado = " & buliq_empleado!ternro & _
             " AND pliqdto = " & buliq_periodo!PliqNro & _
             " AND (pronro is null OR pronro = 0) " & _
             " AND valfecped >= " & ConvFecha(FechaDeInicio) & " AND valfecped <= " & ConvFecha(FechaDeFin)
    If Revisado <> 1 Then
        StrSql = StrSql & " AND valrevis = -1"
    End If
    If TipoVale <> 0 Then
        StrSql = StrSql & " AND tvalenro = " & TipoVale
    End If
    
    OpenRecordset StrSql, rs_Vales
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Se encontraron " & rs_Vales.RecordCount & " vales"
    End If

    Do While Not rs_Vales.EOF
        Valor = Valor + rs_Vales!valmonto
        
        rs_Vales.MoveNext
    Loop
    
    'Actualiza los Vales (Marca el vale con el nro de proceso de Liquiacion)
    StrSql = "UPDATE vales SET pronro = " & NroProc & _
             " WHERE empleado = " & buliq_empleado!ternro & _
             " AND pliqdto = " & buliq_periodo!PliqNro & _
             " AND (pronro is null OR pronro = 0) " & _
             " AND valfecped >= " & ConvFecha(FechaDeInicio) & " AND valfecped <= " & ConvFecha(FechaDeFin)
    If Revisado <> 1 Then
        StrSql = StrSql & " AND valrevis = -1"
    End If
    objConn.Execute StrSql, , adExecuteNoRecords
    
End Select
Bien = True
    

' Cierro todo y libero
'If Param_cur.State = adStateOpen Then Param_cur.Close
'Set Param_cur = Nothing

If rs_Vales.State = adStateOpen Then rs_Vales.Close
Set rs_Vales = Nothing

End Sub



Public Sub bus_Constantes()
' ---------------------------------------------------------------------------------------------
' Descripcion: Valores Constantes
' Autor      : FGZ
' Fecha      : 20/01/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------

'Dim Param_cur As New ADODB.Recordset

    Bien = False
    Valor = 0
   
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        Valor = Arr_Programa(NroProg).Auxint1
    Else
        Exit Sub
    End If

    Bien = True

' Cierro todo y libero
'If Param_cur.State = adStateOpen Then Param_cur.Close
'Set Param_cur = Nothing

End Sub



Public Sub bus_ParametroConcepto()
' ---------------------------------------------------------------------------------------------
' Descripcion: Parametro de un concepto
' Autor      : FGZ
' Fecha      : 22/01/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------

Dim rs_wf_tpa As New ADODB.Recordset

    Bien = False
    Valor = 0
   
    StrSql = "SELECT * FROM " & TTempWF_tpa & _
             " ORDER BY ftorden DESC"
    OpenRecordset StrSql, rs_wf_tpa
    
    If Not rs_wf_tpa.EOF Then
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "valor encontrado = " & rs_wf_tpa!Valor
        End If
        Valor = rs_wf_tpa!Valor
        Bien = True
    End If
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Fin de busqueda"
    End If

' Cierro todo y libero
If rs_wf_tpa.State = adStateOpen Then rs_wf_tpa.Close
Set rs_wf_tpa = Nothing

End Sub


Public Sub bus_SueldoRemun()
' ---------------------------------------------------------------------------------------------
' Descripcion: Remuneracion del Empleado
' Autor      : FGZ
' Fecha      : 27/05/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Oblig As Boolean        ' Obligatorio retornar valor

'Dim Param_cur As New ADODB.Recordset
    
    Bien = False
    Valor = 0

    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        Oblig = CBool(Arr_Programa(NroProg).Auxlog1)
    Else
        Exit Sub
    End If
    
    If Not EsNulo(buliq_empleado!empremu) Then
        Valor = buliq_empleado!empremu
        Bien = True
    Else
        If Not Oblig Then
            Bien = True
        End If
    End If
    
' Cierro todo y libero
'If Param_cur.State = adStateOpen Then Param_cur.Close
'Set Param_cur = Nothing
    
End Sub


Public Sub bus_Sis_MesActual()
' ---------------------------------------------------------------------------------------------
' Descripcion: Busqueda de sistema. Mes de la Liquidacion Actual
' Autor      : FGZ
' Fecha      : 03/02/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
    Bien = False
    Valor = 0
   
    If Not EsNulo(buliq_periodo!pliqmes) Then
        Valor = buliq_periodo!pliqmes
        Bien = True
    End If
End Sub


Public Sub bus_Sis_AnioActual()
' ---------------------------------------------------------------------------------------------
' Descripcion: Busqueda de sistema. Año de la Liquidacion Actual
' Autor      : FGZ
' Fecha      : 03/02/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
    Bien = False
    Valor = 0
   
    If Not EsNulo(buliq_periodo!pliqanio) Then
        Valor = buliq_periodo!pliqanio
        Bien = True
    End If
End Sub

Public Sub bus_Sis_SemestreActual()
' ---------------------------------------------------------------------------------------------
' Descripcion: Busqueda de sistema. Semestre de la Liquidacion Actual
' Autor      : FGZ
' Fecha      : 03/02/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
    Bien = False
    Valor = 0
   
    If Not EsNulo(buliq_periodo!pliqmes) Then
        Select Case buliq_periodo!pliqmes
        Case 1, 2, 3, 4, 5, 6:
            Valor = 1
        Case 7, 8, 9, 10, 11, 12:
            Valor = 2
        Case Else
        End Select
        Bien = True
    End If
End Sub


Public Sub bus_Sis_ModeloLiqActual()
' ---------------------------------------------------------------------------------------------
' Descripcion: Busqueda de sistema. Modelo de la Liquidacion Actual
' Autor      : FGZ
' Fecha      : 05/02/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
    Bien = False
    Valor = 0
   
    If Not EsNulo(buliq_proceso!tprocnro) Then
        Valor = buliq_proceso!tprocnro
        Bien = True
    End If
End Sub


Public Sub bus_Sis_Dias_Mes()
' ---------------------------------------------------------------------------------------------
' Descripcion: Busqueda de sistema. Dias del Mes
' Autor      : FGZ
' Fecha      : 04/03/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
    Bien = False
    Valor = 0
   
    If buliq_periodo!pliqmes < 12 Then
        Valor = DateDiff("d", C_Date("01/" & buliq_periodo!pliqmes & "/" & buliq_periodo!pliqanio), C_Date("01/" & buliq_periodo!pliqmes + 1 & "/" & buliq_periodo!pliqanio))
    Else
        Valor = DateDiff("d", C_Date("01/" & buliq_periodo!pliqmes & "/" & buliq_periodo!pliqanio), C_Date("01/01/" & buliq_periodo!pliqanio + 1))
    End If
    Bien = True
End Sub


Public Sub bus_DiasVac()
' ---------------------------------------------------------------------------------------------
' Descripcion: Obtencion del valor de la escala para vacaciones.
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Valor_Grilla(10) As Boolean ' Elemento de una coordenada de una grilla
Dim tipoBus As Long
Dim concnro As Long
Dim prog As Long

Dim tdinteger3 As Integer

Dim ValAnt As Double
Dim Busq As Integer

Dim j As Integer
Dim antig As Boolean
Dim pvariable As Boolean
Dim pvar As Integer
Dim ant As Integer
Dim Continuar As Boolean
Dim Parametros(5) As Integer
Dim grilla_val(10) As Boolean     ' para alojar los valores de:  valgrilla.val(i)

Dim vgrcoor_ant As Long
Dim vgrcoor_pvar As Long

Dim rs_valgrilla As New ADODB.Recordset
Dim rs_cabgrilla As New ADODB.Recordset
Dim rs_tbase As New ADODB.Recordset
Dim TipoBase As Long
Dim VersionBaseAntig As Integer

Dim NroBusqueda As Long

Dim antdia As Integer
Dim antmes As Integer
Dim antanio As Integer
Dim q As Integer

Dim ValorCoord As Double
Dim Encontro As Boolean
Dim ternro As Long

Dim DiasProporcion As Integer
Dim FactorDivision As Integer

Dim NroVac As Long
Dim cantdias As Integer
Dim Columna As Integer
Dim NroGrilla As Long
'Dim Param_cur As New ADODB.Recordset
Dim dias_trabajados As Integer

Dim FechaAux As Date
Dim Grilla_Ok As Boolean

    Bien = False
    Valor = 0
    ternro = buliq_empleado!ternro
    
'    'Busco los parametros
'    ' Obtener los parametros de la Busqueda
'    StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
'    'OpenRecordset StrSql, Param_cur
'
'    If Arr_Programa(NroProg).Prognro <> 0 Then
'        DiasProporcion = Arr_Programa(nroprog).auxint1
'    Else
'        Exit Sub
'    End If
    
    Call Politica(1501, Empleado_Fecha_Fin, Grilla_Ok)
    If Not Grilla_Ok Then
        Flog.writeline "Error cargando configuracion de la Politica 1501"
        Exit Sub
    Else
        DiasProporcion = st_CantidadDias
        FactorDivision = st_FactorDivision
        If FactorDivision = 0 Then
            FactorDivision = 1
        End If
    End If
    
    Call Politica(1502, Empleado_Fecha_Fin, Grilla_Ok)
    If Not Grilla_Ok Then
        Flog.writeline "Error cargando configuracion de la Politica 1502"
        Exit Sub
    Else
        NroGrilla = st_Escala
    End If

    'FGZ - 01/08/2005
    Call Politica(1505, Empleado_Fecha_Fin, Grilla_Ok)
    If Not Grilla_Ok Then
        Flog.writeline "Error cargando configuracion de la Politica 1504. Tipo Base antiguedad estandar."
        VersionBaseAntig = 0
    Else
        VersionBaseAntig = st_BaseAntiguedad
    End If
    
    StrSql = "SELECT * FROM cabgrilla " & _
             " WHERE cabgrilla.cgrnro = " & NroGrilla
    OpenRecordset StrSql, rs_cabgrilla

    If rs_cabgrilla.EOF Then
        'La escala de Vacaciones no esta configurada en el tipo de dia para vacaciones
        Exit Sub
    End If
    
    'El tipo Base de la antiguedad
    TipoBase = 4
    
    Continuar = True
    ant = 1
    Do While (ant <= rs_cabgrilla!cgrdimension) And Continuar
        Select Case ant
        Case 1:
            StrSql = "SELECT tipoprog.tprogbase FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_1
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBase = rs_tbase!tprogbase Then
                    Continuar = False
                Else
                    ant = ant + 1
                End If
            End If
            
        Case 2:
            StrSql = "SELECT tipoprog.tprogbase FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_2
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBase = rs_tbase!tprogbase Then
                    Continuar = False
                Else
                    ant = ant + 1
                End If
            End If
        Case 3:
            StrSql = "SELECT tipoprog.tprogbase FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_3
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBase = rs_tbase!tprogbase Then
                    Continuar = False
                Else
                    ant = ant + 1
                End If
            End If
        Case 4:
            StrSql = "SELECT tipoprog.tprogbase FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_4
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBase = rs_tbase!tprogbase Then
                    Continuar = False
                Else
                    ant = ant + 1
                End If
            End If
        Case 5:
            StrSql = "SELECT tipoprog.tprogbase FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_5
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBase = rs_tbase!tprogbase Then
                    Continuar = False
                Else
                    ant = ant + 1
                End If
            End If
        End Select
    Loop


    For j = 1 To rs_cabgrilla!cgrdimension
        Select Case j
        Case ant:
            'la busqueda es la de antiguedad
            Select Case ant
            Case 1:
                NroProg = rs_cabgrilla!grparnro_1
                Select Case VersionBaseAntig
                Case 0:
                    Call bus_Anti0(antdia, antmes, antanio)
                Case 1:
                    Call bus_Anti_G(antdia, antmes, antanio)
                Case Else
                    Call bus_Anti0(antdia, antmes, antanio)
                End Select
            Case 2:
                NroProg = rs_cabgrilla!grparnro_2
                Select Case VersionBaseAntig
                Case 0:
                    Call bus_Anti0(antdia, antmes, antanio)
                Case 1:
                    Call bus_Anti_G(antdia, antmes, antanio)
                Case Else
                    Call bus_Anti0(antdia, antmes, antanio)
                End Select
            Case 3:
                NroProg = rs_cabgrilla!grparnro_3
                Select Case VersionBaseAntig
                Case 0:
                    Call bus_Anti0(antdia, antmes, antanio)
                Case 1:
                    Call bus_Anti_G(antdia, antmes, antanio)
                Case Else
                    Call bus_Anti0(antdia, antmes, antanio)
                End Select
            Case 4:
                NroProg = rs_cabgrilla!grparnro_4
                Select Case VersionBaseAntig
                Case 0:
                    Call bus_Anti0(antdia, antmes, antanio)
                Case 1:
                    Call bus_Anti_G(antdia, antmes, antanio)
                Case Else
                    Call bus_Anti0(antdia, antmes, antanio)
                End Select
            Case 5:
                NroProg = rs_cabgrilla!grparnro_5
                Select Case VersionBaseAntig
                Case 0:
                    Call bus_Anti0(antdia, antmes, antanio)
                Case 1:
                    Call bus_Anti_G(antdia, antmes, antanio)
                Case Else
                    Call bus_Anti0(antdia, antmes, antanio)
                End Select
            End Select
            
            'OJO - Supuestamente este tipo de busqueda esta retornando el resultado en meses
            ' si esta busqueda no retorna meses, no va a encontrar el valor
            Parametros(j) = Valor 'Valor trae cantidad de meses
            
'            Call bus_Antiguedad("VACACIONES", c_date("31/12/" & buliq_periodo!pliqanio), antdia, antmes, antanio, q)
'            Parametros(j) = (antanio * 12) + antmes
        Case Else:
            Select Case j
            Case 1:
                NroProg = rs_cabgrilla!grparnro_1
                Call bus_Estructura
            Case 2:
                NroProg = rs_cabgrilla!grparnro_2
                Call bus_Estructura
            Case 3:
                NroProg = rs_cabgrilla!grparnro_3
                Call bus_Estructura
            Case 4:
                NroProg = rs_cabgrilla!grparnro_4
                Call bus_Estructura
            Case 5:
                NroProg = rs_cabgrilla!grparnro_5
                Call bus_Estructura
            End Select
            Parametros(j) = Valor
        End Select
    Next j

    'Busco la primera antiguedad de la escala menor a la del empleado
    ' de abajo hacia arriba
    StrSql = "SELECT * FROM valgrilla WHERE cgrnro = " & NroGrilla
    For j = 1 To rs_cabgrilla!cgrdimension
        If j <> ant Then
            StrSql = StrSql & " AND vgrcoor_" & j & "= " & Parametros(j)
        End If
    Next j
        StrSql = StrSql & " ORDER BY vgrcoor_" & ant & " DESC "
    OpenRecordset StrSql, rs_valgrilla


    Encontro = False
    Do While Not rs_valgrilla.EOF And Not Encontro
'        Call CargarValoresdelaGrilla(rs_valgrilla, grilla_val)
'
'        If ValorCoord >= grilla_val(ant) Then
'            Call BusValor(7, Valor_Grilla, grilla_val, valor, Columna)
'            Bien = True
'        End If
'
'        rs_valgrilla.MoveNext
        Select Case ant
        Case 1:
            If Parametros(ant) >= rs_valgrilla!vgrcoor_1 Then
                 If rs_valgrilla!vgrvalor <> 0 Then
                    cantdias = rs_valgrilla!vgrvalor
                    Encontro = True
                    Columna = rs_valgrilla!vgrorden
                 End If
            End If
        Case 2:
            If Parametros(ant) >= rs_valgrilla!vgrcoor_2 Then
                 If rs_valgrilla!vgrvalor <> 0 Then
                    cantdias = rs_valgrilla!vgrvalor
                    Encontro = True
                    Columna = rs_valgrilla!vgrorden
                 End If
            End If
        Case 3:
            If Parametros(ant) >= rs_valgrilla!vgrcoor_3 Then
                 If rs_valgrilla!vgrvalor <> 0 Then
                    cantdias = rs_valgrilla!vgrvalor
                    Encontro = True
                    Columna = rs_valgrilla!vgrorden
                 End If
            End If
        Case 4:
            If Parametros(ant) >= rs_valgrilla!vgrcoor_4 Then
                 If rs_valgrilla!vgrvalor <> 0 Then
                    cantdias = rs_valgrilla!vgrvalor
                    Encontro = True
                    Columna = rs_valgrilla!vgrorden
                 End If
            End If
        Case 5:
            If Parametros(ant) >= rs_valgrilla!vgrcoor_5 Then
                 If rs_valgrilla!vgrvalor <> 0 Then
                    cantdias = rs_valgrilla!vgrvalor
                    Encontro = True
                    Columna = rs_valgrilla!vgrorden
                 End If
            End If
        End Select
                    
        rs_valgrilla.MoveNext
    Loop
    
    If Not Encontro Then
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No encontró valor en la escala "
        End If
    
        'Busco si existe algun valor para la estructura y ...
        'si hay que carga la columna correspondiente
        StrSql = "SELECT * FROM valgrilla WHERE cgrnro = " & NroGrilla
        StrSql = StrSql & " AND vgrvalor is not null"
        For j = 1 To rs_cabgrilla!cgrdimension
            If j <> ant Then
                StrSql = StrSql & " AND vgrcoor_" & j & "= " & Parametros(j)
            End If
        Next j
        'StrSql = StrSql & " ORDER BY vgrcoor_" & ant & " DESC "
        OpenRecordset StrSql, rs_valgrilla
        If Not rs_valgrilla.EOF Then
            Columna = rs_valgrilla!vgrorden
        Else
            Columna = 1
        End If
        
        
        dias_trabajados = ((antanio * 365) + (antmes * 30) + antdia)
    
        If Parametros(ant) <= 6 Then
            proporciono_bus_DiasVac = True
            'FactorDivision = 1
            If DiasProporcion = 20 Then
                If (dias_trabajados / DiasProporcion) / 7 * 5 > Fix((dias_trabajados / DiasProporcion) / 7 * 5) Then
                    cantdias = Fix((dias_trabajados / DiasProporcion) / 7 * 5) + 1
                Else
                    cantdias = Fix((dias_trabajados / DiasProporcion) / 7 * 5)
                End If
            Else
                cantdias = Round((dias_trabajados / DiasProporcion) / FactorDivision, 0)
            End If
            Valor = cantdias
            Bien = True
            
        Else
            Flog.writeline "No se encontro la escala para el convenio"
            Bien = False
        End If
    Else
        Valor = cantdias
        Bien = True
    End If
   
    
' Cierro todo y libero
If rs_cabgrilla.State = adStateOpen Then rs_cabgrilla.Close
If rs_valgrilla.State = adStateOpen Then rs_valgrilla.Close

Set rs_cabgrilla = Nothing
Set rs_valgrilla = Nothing
End Sub


Public Sub bus_DiasVac2()
' ---------------------------------------------------------------------------------------------
' Descripcion: Obtencion del valor de Diascorr.
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim rs_Vacacion As New ADODB.Recordset
Dim rs_vacdiascor As New ADODB.Recordset
    
    Valor = 0
    Bien = False
    
    StrSql = " SELECT * FROM vacacion WHERE vacacion.vacanio = " & buliq_periodo!pliqanio
    OpenRecordset StrSql, rs_Vacacion
    If Not rs_Vacacion.EOF Then
        StrSql = "SELECT * FROM vacdiascor WHERE vacnro = " & rs_Vacacion!vacnro & " AND Ternro = " & buliq_empleado!ternro
        OpenRecordset StrSql, rs_vacdiascor
        If Not rs_vacdiascor.EOF Then
            Valor = rs_vacdiascor!vdiascorcant
            Bien = True
        Else
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Na hoy dias correspondientes generados para el periodo"
            End If
            Exit Sub
        End If
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No existe el periodo de vacaciones"
        End If
        Exit Sub
    End If
    
   
    
' Cierro todo y libero
If rs_Vacacion.State = adStateOpen Then rs_Vacacion.Close
If rs_vacdiascor.State = adStateOpen Then rs_vacdiascor.Close

Set rs_Vacacion = Nothing
Set rs_vacdiascor = Nothing
End Sub

Public Sub bus_DiasVac_Masivos()
' ---------------------------------------------------------------------------------------------
' Descripcion: Obtencion del valor de la escala para vacaciones.
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Valor_Grilla(10) As Boolean ' Elemento de una coordenada de una grilla
Dim tipoBus As Long
Dim concnro As Long
Dim prog As Long

Dim tdinteger3 As Integer

Dim ValAnt As Double
Dim Busq As Integer

Dim j As Integer
Dim antig As Boolean
Dim pvariable As Boolean
Dim pvar As Integer
Dim ant As Integer
Dim Continuar As Boolean
Dim Parametros(5) As Integer
Dim grilla_val(10) As Boolean     ' para alojar los valores de:  valgrilla.val(i)

Dim vgrcoor_ant As Long
Dim vgrcoor_pvar As Long

Dim rs_valgrilla As New ADODB.Recordset
Dim rs_cabgrilla As New ADODB.Recordset
Dim rs_tbase As New ADODB.Recordset
Dim TipoBase As Long

Dim NroBusqueda As Long

Dim antdia As Integer
Dim antmes As Integer
Dim antanio As Integer
Dim q As Integer

Dim ValorCoord As Double
Dim Encontro As Boolean
Dim ternro As Long

Dim DiasProporcion As Integer
Dim FactorDivision As Integer

Dim NroVac As Long
Dim cantdias As Integer
Dim Columna As Integer
Dim NroGrilla As Long
'Dim Param_cur As New ADODB.Recordset
Dim dias_trabajados As Integer

    Bien = False
    Valor = 0
    ternro = buliq_empleado!ternro
    
'    'Busco los parametros
'    ' Obtener los parametros de la Busqueda
'    StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
'    'OpenRecordset StrSql, Param_cur
'
'    If Arr_Programa(NroProg).Prognro <> 0 Then
'        DiasProporcion = Arr_Programa(nroprog).auxint1
'    Else
'        Exit Sub
'    End If
    
    ' Maxi: Mal se debe sacar de la politica de GTI
    StrSql = "SELECT * FROM tipdia WHERE tdnro = 2 " '2 es vacaciones
    OpenRecordset StrSql, objRs
    If Not objRs.EOF Then
        NroGrilla = objRs!tdgrilla
        tdinteger3 = objRs!tdinteger3

        If tdinteger3 <> 20 And tdinteger3 <> 365 And tdinteger3 <> 360 Then
            'El campo auxiliar3 del Tipo de Día para Vacaciones no está configurado para Proporcionar la cant. de días de Vacaciones.
            Exit Sub
        End If
        DiasProporcion = tdinteger3
    End If

    StrSql = "SELECT * FROM cabgrilla " & _
             " WHERE cabgrilla.cgrnro = " & NroGrilla
    OpenRecordset StrSql, rs_cabgrilla

    If rs_cabgrilla.EOF Then
        'La escala de Vacaciones no esta configurada en el tipo de dia para vacaciones
        Exit Sub
    End If
    
    
    'El tipo Base de la antiguedad
    TipoBase = 4
    
    Continuar = True
    ant = 1
    Do While (ant <= rs_cabgrilla!cgrdimension) And Continuar
        Select Case ant
        Case 1:
            StrSql = "SELECT tipoprog.tprogbase FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_1
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBase = rs_tbase!tprogbase Then
                    Continuar = False
                Else
                    ant = ant + 1
                End If
            End If
            
        Case 2:
            StrSql = "SELECT tipoprog.tprogbase FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_2
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBase = rs_tbase!tprogbase Then
                    Continuar = False
                Else
                    ant = ant + 1
                End If
            End If
        Case 3:
            StrSql = "SELECT tipoprog.tprogbase FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_3
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBase = rs_tbase!tprogbase Then
                    Continuar = False
                Else
                    ant = ant + 1
                End If
            End If
        Case 4:
            StrSql = "SELECT tipoprog.tprogbase FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_4
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBase = rs_tbase!tprogbase Then
                    Continuar = False
                Else
                    ant = ant + 1
                End If
            End If
        Case 5:
            StrSql = "SELECT tipoprog.tprogbase FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_5
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBase = rs_tbase!tprogbase Then
                    Continuar = False
                Else
                    ant = ant + 1
                End If
            End If
        End Select
    Loop


    For j = 1 To rs_cabgrilla!cgrdimension
        Select Case j
        Case ant:
            'la busqueda es la de antiguedad
            Call bus_Antiguedad("VACACIONES", C_Date("31/12/" & buliq_periodo!pliqanio), antdia, antmes, antanio, q)
            Parametros(j) = (antanio * 12) + antmes
        Case Else:
            Select Case j
            Case 1:
                NroProg = rs_cabgrilla!grparnro_1
                Call bus_Estructura
            Case 2:
                NroProg = rs_cabgrilla!grparnro_2
                Call bus_Estructura
            Case 3:
                NroProg = rs_cabgrilla!grparnro_3
                Call bus_Estructura
            Case 4:
                NroProg = rs_cabgrilla!grparnro_4
                Call bus_Estructura
            Case 5:
                NroProg = rs_cabgrilla!grparnro_5
                Call bus_Estructura
            End Select
            Parametros(j) = Valor
        End Select
    Next j

    'Busco la primera antiguedad de la escala menor a la del empleado
    ' de abajo hacia arriba
    StrSql = "SELECT * FROM valgrilla WHERE cgrnro = " & NroGrilla
    For j = 1 To rs_cabgrilla!cgrdimension
        If j <> ant Then
            StrSql = StrSql & " AND vgrcoor_" & j & "= " & Parametros(j)
        End If
    Next j
        StrSql = StrSql & " ORDER BY vgrcoor_" & ant & " DESC "
    OpenRecordset StrSql, rs_valgrilla


    Encontro = False
    Do While Not rs_valgrilla.EOF And Not Encontro
'        Call CargarValoresdelaGrilla(rs_valgrilla, grilla_val)
'
'        If ValorCoord >= grilla_val(ant) Then
'            Call BusValor(7, Valor_Grilla, grilla_val, valor, Columna)
'            Bien = True
'        End If
'
'        rs_valgrilla.MoveNext
        Select Case ant
        Case 1:
            If Parametros(ant) >= rs_valgrilla!vgrcoor_1 Then
                 If rs_valgrilla!vgrvalor <> 0 Then
                    cantdias = rs_valgrilla!vgrvalor
                    Encontro = True
                    Columna = rs_valgrilla!vgrorden
                 End If
            End If
        Case 2:
            If Parametros(ant) >= rs_valgrilla!vgrcoor_2 Then
                 If rs_valgrilla!vgrvalor <> 0 Then
                    cantdias = rs_valgrilla!vgrvalor
                    Encontro = True
                    Columna = rs_valgrilla!vgrorden
                 End If
            End If
        Case 3:
            If Parametros(ant) >= rs_valgrilla!vgrcoor_3 Then
                 If rs_valgrilla!vgrvalor <> 0 Then
                    cantdias = rs_valgrilla!vgrvalor
                    Encontro = True
                    Columna = rs_valgrilla!vgrorden
                 End If
            End If
        Case 4:
            If Parametros(ant) >= rs_valgrilla!vgrcoor_4 Then
                 If rs_valgrilla!vgrvalor <> 0 Then
                    cantdias = rs_valgrilla!vgrvalor
                    Encontro = True
                    Columna = rs_valgrilla!vgrorden
                 End If
            End If
        Case 5:
            If Parametros(ant) >= rs_valgrilla!vgrcoor_5 Then
                 If rs_valgrilla!vgrvalor <> 0 Then
                    cantdias = rs_valgrilla!vgrvalor
                    Encontro = True
                    Columna = rs_valgrilla!vgrorden
                 End If
            End If
        End Select
                    
        rs_valgrilla.MoveNext
    Loop
    
    If Not Encontro Then
    
        'Busco si existe algun valor para la estructura y ...
        'si hay que carga la columna correspondiente
        StrSql = "SELECT * FROM valgrilla WHERE cgrnro = " & NroGrilla
        StrSql = StrSql & " AND vgrvalor is not null"
        For j = 1 To rs_cabgrilla!cgrdimension
            If j <> ant Then
                StrSql = StrSql & " AND vgrcoor_" & j & "= " & Parametros(j)
            End If
        Next j
        'StrSql = StrSql & " ORDER BY vgrcoor_" & ant & " DESC "
        OpenRecordset StrSql, rs_valgrilla
        If Not rs_valgrilla.EOF Then
            Columna = rs_valgrilla!vgrorden
        Else
            Columna = 1
        End If
        
        
        dias_trabajados = ((antanio * 365) + (antmes * 30) + antdia)
    
        If Parametros(ant) <= 6 Then

            FactorDivision = 1
            If DiasProporcion = 20 Then
                If (dias_trabajados / DiasProporcion) / 7 * 5 > Fix((dias_trabajados / DiasProporcion) / 7 * 5) Then
                    cantdias = Fix((dias_trabajados / DiasProporcion) / 7 * 5) + 1
                Else
                    cantdias = Fix((dias_trabajados / DiasProporcion) / 7 * 5)
                End If
            Else
                cantdias = Round((dias_trabajados / DiasProporcion) / FactorDivision, 0)
            End If
            Valor = cantdias
            Bien = True
            
        Else
            Flog.writeline "No se encontro la escala para el convenio"
            Bien = False
        End If
    Else
        Valor = cantdias
        Bien = True
    End If
   
    
' Cierro todo y libero
If rs_cabgrilla.State = adStateOpen Then rs_cabgrilla.Close
If rs_valgrilla.State = adStateOpen Then rs_valgrilla.Close

Set rs_cabgrilla = Nothing
Set rs_valgrilla = Nothing
End Sub



Public Sub bus_DiasMesCalendario_enEstructura()
' ---------------------------------------------------------------------------------------------
' Descripcion: Dias en el tipo de Estructura en el mes que se esta liquidando
' Autor      : FGZ
' Fecha      : 06/04/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim TipoEstr As Long      ' Tipo de Estructura
                            
'Dim Param_cur As New ADODB.Recordset
Dim rs_Estructura As New ADODB.Recordset

Dim FechaDesde As Date
Dim FechaHasta As Date
Dim Desde As Date
Dim Hasta As Date

Dim dia As Integer
Dim Aux1 As Long
Dim Aux2 As Long
Dim Aux3 As Long
   
    Bien = False
    Valor = 0
   
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        TipoEstr = Arr_Programa(NroProg).Auxint1
    Else
        Exit Sub
    End If

FechaDesde = buliq_periodo!pliqdesde
FechaHasta = buliq_periodo!pliqhasta

If Not CBool(buliq_empleado!empest) Then
    If FechaHasta > Empleado_Fecha_Fin Then
        FechaHasta = Empleado_Fecha_Fin
    End If
End If

'Busco de estructura
StrSql = " SELECT htetdesde,htethasta FROM his_estructura " & _
         " WHERE ternro = " & buliq_empleado!ternro & " AND " & _
         " tenro =" & TipoEstr & " AND " & _
         " (htetdesde <= " & ConvFecha(FechaHasta) & ") AND " & _
         " ((" & ConvFecha(FechaDesde) & " <= htethasta) or (htethasta is null))" & _
         " ORDER BY htetdesde"
OpenRecordset StrSql, rs_Estructura

dia = 0
Do While Not rs_Estructura.EOF
    If FechaDesde < rs_Estructura!htetdesde Then
        Desde = rs_Estructura!htetdesde
    Else
        Desde = FechaDesde
    End If
    
    If EsNulo(rs_Estructura!htethasta) Then
        Hasta = FechaHasta
    Else
        If rs_Estructura!htethasta < FechaHasta Then
            Hasta = rs_Estructura!htethasta
        Else
            Hasta = FechaHasta
        End If
    End If
    
    'dia = DateDiff("d", Desde, Hasta)
    Call DIF_FECHAS2(Desde, Hasta, Aux1, Aux2, Aux3)
    dia = dia + (Aux1 + 1)
    
    rs_Estructura.MoveNext
Loop

Valor = dia
Bien = True
    
' Cierro todo y libero
'If Param_cur.State = adStateOpen Then Param_cur.Close
'Set Param_cur = Nothing

If rs_Estructura.State = adStateOpen Then rs_Estructura.Close
Set rs_Estructura = Nothing

End Sub




Public Sub bus_AsignacionesFliares()
' ---------------------------------------------------------------------------------------------
' Descripcion: Asignaciones Familiares
' Autor      : FGZ
' Fecha      : 15/04/2004
' Ultima Mod.: 06/09/2005
' Descripcion: se agregó parametro fecha hasta de edad.
' Ultima Mod.: FGZ - 20/03/2006
' Descripcion: StrSql = StrSql & " AND estudio_actual.perescnro = " & Periodo_Escolar
'              Martin Ferraro - 21/09/2007 - Problemas con la busqueda de estudia
' ---------------------------------------------------------------------------------------------
Dim Incapacitado As Boolean         '-1 (True) / 0 (False)
Dim Edad As Integer                 'cant de años o nulo o vacio
Dim sexo As Integer                 '1(Masc) / 2 (Fem) / 3 (Todos)
Dim Estudia As Integer              '1(si) / 2 (no) / 3 (indefinido)
Dim Ayuda_Escolar As Integer        '1(si) / 2 (no) / 3 (indefinido)
Dim Suma_FliaNumerosa As Integer    'Siempre viene 1. No se usa mas
Dim Paga_FliaNumerosa As Integer    'siempre viene 1. No se usa mas
Dim Trabaja_Conyuge As Integer      '1(si) / 2 (no) / 3 (no importa)
Dim Retroactivo_Prenatal As Boolean '-1(TRUE) / 0(FALSE)
Dim Nivel_Estudio As String         'nivnro,nivnro,....
Dim Periodo_Escolar As Integer      'nro del periodo escolar
Dim Parentesco As Integer           'codigo del parentesco
                            
Dim Fam_niv_est     As Integer
Dim Fam_peri_escol  As Integer
Dim Fam_estudia     As Integer
Dim Fecha_vto_asig  As Date
Dim Fin_periodo_liq As Date
Dim Par_asig        As Integer

Dim suma_fn As Integer
Dim paga_fn As Integer
Dim edad_f As Integer
Dim conyuge As Integer
Dim pagaxhijo As Boolean
Dim niv_est_interno As Boolean
Dim interesa_estu As Boolean
Dim sexo_conyuge As Integer
Dim conyuge_trabaja As Integer

Dim Fecha_Hasta_Edad As Date
Dim Opcion_Fecha_Hasta As Integer
Dim StrLog As String

'Dim Param_cur As New ADODB.Recordset
Dim rs_PeriodoEsc As New ADODB.Recordset
Dim rs_Familiar As New ADODB.Recordset
Dim rs_Tercero As New ADODB.Recordset
Dim rs_estudio_actual As New ADODB.Recordset
Dim rs_Nivest As New ADODB.Recordset
  

'inicializo
Par_asig = 31
conyuge = False
pagaxhijo = False
suma_fn = 0
paga_fn = 0

    Bien = False
    Valor = 0
   
    'Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        Edad = Arr_Programa(NroProg).Auxint1
        Retroactivo_Prenatal = Arr_Programa(NroProg).Auxint2
        Periodo_Escolar = Arr_Programa(NroProg).Auxint3
        Incapacitado = Arr_Programa(NroProg).Auxint4
        sexo = Arr_Programa(NroProg).Auxint5
        
        Nivel_Estudio = IIf(EsNulo(Arr_Programa(NroProg).Auxchar1), 0, Arr_Programa(NroProg).Auxchar1)
        Estudia = Arr_Programa(NroProg).Auxchar2
        Ayuda_Escolar = Arr_Programa(NroProg).Auxchar3
        Parentesco = Arr_Programa(NroProg).Auxchar4
        Trabaja_Conyuge = IIf(EsNulo(Arr_Programa(NroProg).Auxchar5), 0, CInt(Arr_Programa(NroProg).Auxchar5))
        
        Suma_FliaNumerosa = True
        Paga_FliaNumerosa = True
        
        Opcion_Fecha_Hasta = IIf(Not EsNulo(Arr_Programa(NroProg).Auxchar), Arr_Programa(NroProg).Auxchar, 5)
        
        Select Case Opcion_Fecha_Hasta
        Case 1:
            Fecha_Hasta_Edad = buliq_periodo!pliqhasta
            StrLog = "a mes actual"
        Case 2:
            Fecha_Hasta_Edad = DateAdd("d", -1, buliq_periodo!pliqdesde)
            StrLog = "al mes anterior "
        Case 3: 'a fin de año
            Fecha_Hasta_Edad = C_Date("31/12/" & Year(buliq_periodo!pliqhasta))
            StrLog = "a fin de año "
        Case 4: 'a principio de año
            Fecha_Hasta_Edad = C_Date("01/01/" & Year(buliq_periodo!pliqhasta))
            StrLog = "a principio de año "
        Case 5:
            'Si el empleado tiene fecha de baja < a la fecha fin del proceso, se toma la fecha de baja.
            Fecha_Hasta_Edad = Empleado_Fecha_Fin
            StrLog = "a fin del proceso "
        Case Else:
            'Fecha_Hasta_Edad = buliq_proceso!pliqhasta
            'Fecha_Hasta_Edad = buliq_proceso!profecfin
            'Si el empleado tiene fecha de baja < a la fecha fin del proceso, se toma la fecha de baja.
            Fecha_Hasta_Edad = Empleado_Fecha_Fin
            StrLog = "Default. a fin del proceso "
        End Select
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & StrLog
        End If
    Else
        Exit Sub
    End If

    ' VALIDAR SI AL EMPLEADO CORRESPONDE PAGARLE ASIGNACIONES FAMILIARES
    ' en funcion : dias trabajados en el mes
    
    'AYUDA ESCOLAR
    If Ayuda_Escolar = 1 Then
        StrSql = "SELECT * FROM edu_periodoesc WHERE edu_periodoesc.perescnro =" & Periodo_Escolar
        OpenRecordset StrSql, rs_PeriodoEsc
        If rs_PeriodoEsc.EOF Then
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Periodo Escolar Incorrecto."
            End If
            Exit Sub
        End If
    End If
        
    'FECHAS LIMITES DE VENCIMENTOS DE CERTIFICADOS
    Fecha_vto_asig = buliq_periodo!pliqdesde
    Fin_periodo_liq = buliq_periodo!pliqhasta


    StrSql = "SELECT * FROM familiar INNER JOIN tercero ON tercero.ternro = familiar.ternro"
    StrSql = StrSql & " WHERE (familiar.empleado =" & buliq_empleado!ternro
    StrSql = StrSql & " AND familiar.parenro = " & Parentesco
    StrSql = StrSql & " AND familiar.famest = -1"
    StrSql = StrSql & " AND familiar.famsalario = -1)"
    StrSql = StrSql & " AND (familiar.famfecvto >=" & ConvFecha(Fecha_vto_asig) & " OR familiar.famfecvto is null)"
    StrSql = StrSql & " Order by tercero.terfecnac DESC"
    OpenRecordset StrSql, rs_Familiar
             
    Do While Not rs_Familiar.EOF
        conyuge = 3
        sexo_conyuge = 3
        conyuge_trabaja = 3
        
        If rs_Familiar!parenro = 2 Then 'hijo
            'calculo la edad del familiar
             edad_f = Calcular_Edad(rs_Familiar!terfecnac, Fecha_Hasta_Edad)
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Hijo de " & edad_f & " años."
            End If
             
            conyuge = 3
            sexo_conyuge = 3
            conyuge_trabaja = IIf(CBool(rs_Familiar!famtrab), 1, 2)
            'conyuge_trabaja = Trabaja_Conyuge
        End If
                             
        'en los conyuges no interesa si estudia o no
        interesa_estu = True  'el default es que interese
        
        If rs_Familiar!parenro = 3 Then 'conyuge
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "conyuge."
            End If
            sexo_conyuge = IIf(CBool(rs_Familiar!tersex), 1, 2)
            conyuge_trabaja = IIf(CBool(rs_Familiar!famtrab), 1, 2)
            If (rs_Familiar!tersex) And (rs_Familiar!faminc) And (Not rs_Familiar!famtrab) Then
                conyuge = False
            Else
                If (Not rs_Familiar!tersex) And rs_Familiar!famtrab Then
                    conyuge = True
                Else
                    conyuge = False
                End If
            End If
        
            If (sexo_conyuge = 1 And conyuge_trabaja = 1) Then 'Conyuge masculino y trabaja
               GoTo SiguienteFamiliar
            End If
            interesa_estu = False
            edad_f = 0
        End If
        
        'buscar el nivel de estudio
        'Martin Ferraro - 21/09/2007 - Esta inicializacion era incorrecto porq no estuida es 2
        'Fam_estudia = False
        Fam_estudia = 2
        StrSql = "SELECT * FROM estudio_actual WHERE ternro = " & rs_Familiar!ternro
        'FGZ - 20/03/2006
        If Ayuda_Escolar = 1 Then
            StrSql = StrSql & " AND estudio_actual.perescnro = " & Periodo_Escolar
        End If
        OpenRecordset StrSql, rs_estudio_actual
        If Not rs_estudio_actual.EOF Then
            If Not EsNulo(rs_estudio_actual!nivnro) Then
                StrSql = "SELECT * FROM nivest WHERE nivnro =" & rs_estudio_actual!nivnro
                OpenRecordset StrSql, rs_Nivest
                If Not rs_Nivest.EOF Then
                    niv_est_interno = rs_Nivest!nivsist
                    Fam_niv_est = rs_Nivest!nivnro
                    Fam_estudia = IIf(EsNulo(rs_estudio_actual!nivnro), 2, 1)
                Else
                    niv_est_interno = False
                End If
            End If
        End If
            
            
        'ACA SE PODRIA VALIDAR LA VALIDEZ DEL CERTIFICADO ESCOLAR
        'INICIO
        'FIN
        'SI NO ES VALIDO EL CERTIFICADO, ASIGNAR A FAM-NIV-EST = ?
        'FAM-ESTUDIA = (estudio_actual.nivnro <> ?)
                   
        If (CBool(Incapacitado) = CBool(rs_Familiar!faminc)) Then
            If (Parentesco = rs_Familiar!parenro) And (edad_f <= Edad Or EsNulo(Edad)) And _
                ((sexo = 1 And CBool(rs_Familiar!tersex)) Or (sexo = 2 And Not CBool(rs_Familiar!tersex)) Or sexo = 3) Then
                If (conyuge_trabaja = Trabaja_Conyuge Or Trabaja_Conyuge = 3) Then
                    If (Estudia = Fam_estudia Or Estudia = 3 Or (Not interesa_estu)) Then
                        '31/09/2007 - Martin Ferraro - Se reemplazo por lo de abajo
                        'If (InStr(1, Nivel_Estudio, Fam_niv_est) <> 0 Or EsNulo(Nivel_Estudio) Or (Not niv_est_interno)) Then
                         If (InStr(1, Nivel_Estudio, Fam_niv_est) <> 0 Or (Nivel_Estudio = "0")) Then
                            If (((Ayuda_Escolar = 1) And InStr(1, Nivel_Estudio, Fam_niv_est) <> 0) Or ((Ayuda_Escolar = 3) And _
                                    Not Retroactivo_Prenatal)) Then
                                Valor = Valor + 1
                            End If
                         End If
                    End If
                End If
            End If
        End If
       
SiguienteFamiliar:
        rs_Familiar.MoveNext
    Loop
    
    Bien = True
    
' Cierro todo y libero
'If Param_cur.State = adStateOpen Then Param_cur.Close
'Set Param_cur = Nothing

If rs_estudio_actual.State = adStateOpen Then rs_estudio_actual.Close
Set rs_estudio_actual = Nothing

If rs_PeriodoEsc.State = adStateOpen Then rs_PeriodoEsc.Close
Set rs_PeriodoEsc = Nothing

If rs_Familiar.State = adStateOpen Then rs_Familiar.Close
Set rs_Familiar = Nothing

If rs_Nivest.State = adStateOpen Then rs_Nivest.Close
Set rs_Nivest = Nothing

If rs_Tercero.State = adStateOpen Then rs_Tercero.Close
Set rs_Tercero = Nothing

End Sub



Public Function Calcular_Edad(ByVal Fecha As Date, ByVal Hasta As Date) As Integer
'...........................................................................
' Archivo       : edad.i                              fecha ini. : 20/01/92
' Autor         : FGZ
' Fecha         :
' Ultima Mod    : 25/07/2005 - Se calcula a la fecha fin del periodo.
'...........................................................................
Dim años  As Integer
Dim ALaFecha As Date

    'ALaFecha = C_Date(buliq_periodo!pliqhasta)
    ALaFecha = C_Date(Hasta)
    
    años = Year(ALaFecha) - Year(Fecha)
    If Month(ALaFecha) < Month(Fecha) Then
       años = años - 1
    Else
        If Month(ALaFecha) = Month(Fecha) Then
            If Day(ALaFecha) < Day(Fecha) Then
                años = años - 1
            End If
        End If
    End If
    Calcular_Edad = años
End Function


Public Sub bus_DiasHabilesMesLiquidacion()
' ---------------------------------------------------------------------------------------------
' Descripcion: Calculo de Dias Habiles entre dos fechas
' Autor      : FGZ
' Fecha      : 24/05/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim AnteriorPosterior As Integer    '1- meses para atras
                                    '2- meses para adelante
Dim CantMeses As Integer            'Cantidad de meses
Dim DiasHabiles As Double
Dim dia As Date
Dim EsFeriado As Boolean
Dim IncluyeSabados As Boolean       'si se cuentan los sabados
Dim Porcentaje As Integer           'porcentaje de los sabados incluidos

Dim FechaDesde As Date
Dim FechaHasta As Date
Dim objFeriado As New Feriado

'Dim Param_cur As New ADODB.Recordset

    
' inicializacion de variables
    Set objFeriado.Conexion = objConn
    'Set objFeriado.ConexionTraza = objConn

    Bien = False
    
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        AnteriorPosterior = Arr_Programa(NroProg).Auxint1
        CantMeses = Arr_Programa(NroProg).Auxint2
        Porcentaje = Arr_Programa(NroProg).Auxint3
        IncluyeSabados = CBool(Arr_Programa(NroProg).Auxlog1)
    Else
        Exit Sub
    End If

    Select Case AnteriorPosterior
    Case 1:     'para atras
        FechaDesde = DateAdd("m", -1 * CantMeses, buliq_periodo!pliqdesde)
        FechaHasta = DateAdd("m", 1, FechaDesde) - 1
    Case 2:     'para delante
        FechaDesde = DateAdd("m", CantMeses, buliq_periodo!pliqdesde)
        FechaHasta = DateAdd("m", 1, FechaDesde) - 1
    Case Else   'para delante
        FechaDesde = DateAdd("m", CantMeses, buliq_periodo!pliqdesde)
        FechaHasta = DateAdd("m", 1, FechaDesde) - 1
    End Select
    
dia = FechaDesde
Do While dia <= FechaHasta
    
    EsFeriado = objFeriado.Feriado(dia, buliq_empleado!ternro, False)
    
    If Not EsFeriado And Not Weekday(dia) = 1 Then
        ' No es feriado no Domingo
        If Weekday(dia) = 7 Then 'Sabado
            If IncluyeSabados Then
                DiasHabiles = DiasHabiles + (1 * Porcentaje / 100)
            End If
        Else
            DiasHabiles = DiasHabiles + 1
        End If
    End If
    dia = dia + 1
Loop

Bien = True
Valor = DiasHabiles

End Sub

Public Sub bus_PromedioVacaciones()
' ---------------------------------------------------------------------------------------------
' Descripcion: Promedio de Vacaciones
' Autor      : FGZ
' Fecha      : 27/05/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Anual As Boolean        'TRUE - Anual
                            'FALSE - Semestral
Dim MesActual As Boolean    'TRUE - hasta mes actual
                            'FALSE - hasta mes anterior
Dim Opcion As Integer       ' 0 - Pago de adelanto
                            ' 1 - Descuento de adelanto
                            ' 2 - Descuento de vacaciones
                            ' 3 - Descuento de vacaciones
Dim PromedioSin0 As Boolean 'TRUE - Promedio sin 0
                            'FALSE - Promedio con 0
Dim Acumulador As Long

'Dim Param_cur As New ADODB.Recordset
Dim rs_Vacpagdesc As New ADODB.Recordset
Dim rs_Vacacion As New ADODB.Recordset
Dim rs_Acu_Mes As New ADODB.Recordset

Dim MesInicio As Integer
Dim MesFin As Integer
Dim Anio As Integer
Dim Suma As Double
Dim Cantidad As Double
Dim esMonto As Boolean
   
    Bien = False
    Valor = 0
   
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        Opcion = Arr_Programa(NroProg).Auxint4
        Anual = IIf(Arr_Programa(NroProg).Auxint2 = 0, True, False)
        MesActual = IIf(Arr_Programa(NroProg).Auxint3 = 0, True, False)
        PromedioSin0 = IIf(Arr_Programa(NroProg).Auxint5 = 0, True, False)
        Acumulador = Arr_Programa(NroProg).Auxint1
        esMonto = CBool(Arr_Programa(NroProg).Auxlog1)
    Else
        Exit Sub
    End If

    'seteo desde y hasta
    Anio = buliq_periodo!pliqanio
    If Anual Then
        MesInicio = 1
    Else
        MesInicio = 6
    End If
    If MesActual Then
        MesFin = buliq_periodo!pliqmes
    Else
        MesFin = buliq_periodo!pliqmes - 1
    End If
    
    StrSql = " SELECT * FROM vacpagdesc " & _
             " WHERE ternro = " & buliq_empleado!ternro & " AND " & _
             " pliqnro =" & buliq_proceso!PliqNro & " AND " & _
             " tprocnro =" & buliq_proceso!tprocnro & " AND " & _
             " pago_dto =" & Opcion
    OpenRecordset StrSql, rs_Vacpagdesc

    If Not rs_Vacpagdesc.EOF Then
        StrSql = " SELECT * FROM vacacion WHERE vacacion.vacnro = " & rs_Vacpagdesc!vacnro
        OpenRecordset StrSql, rs_Vacacion
        If Not rs_Vacacion.EOF Then
            If rs_Vacacion!vacanio <> buliq_periodo!pliqanio Then
                Anio = buliq_periodo!pliqanio - 1
                If Anual Then
                    MesInicio = 1
                    MesFin = 12
                Else
                    MesInicio = 7
                    MesFin = 12
                End If
            End If
            
            StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acumulador & _
                     " AND " & Anio & " = amanio " & _
                     " AND (ammes >=" & MesInicio & " AND " & MesFin & " >= ammes)"
            OpenRecordset StrSql, rs_Acu_Mes
            
            Suma = 0
            Cantidad = 0
            Do While Not rs_Acu_Mes.EOF
                If Not PromedioSin0 Then
                    If esMonto Then
                        Suma = Suma + rs_Acu_Mes!ammonto
                    Else
                        Suma = Suma + rs_Acu_Mes!amcant
                    End If
                    Cantidad = Cantidad + 1
                Else
                    If esMonto Then
                        If rs_Acu_Mes!ammonto <> 0 Then
                            Suma = Suma + rs_Acu_Mes!ammonto
                            Cantidad = Cantidad + 1
                        End If
                    Else
                        If rs_Acu_Mes!amcant <> 0 Then
                            Suma = Suma + rs_Acu_Mes!amcant
                            Cantidad = Cantidad + 1
                        End If
                    End If
                End If
                rs_Acu_Mes.MoveNext
            Loop
            
            If Cantidad <> 0 Then
                Valor = Suma / Cantidad
            End If
            
        End If
        
        Bien = True
    End If
        
    
' Cierro todo y libero
'If Param_cur.State = adStateOpen Then Param_cur.Close
'Set Param_cur = Nothing

If rs_Vacpagdesc.State = adStateOpen Then rs_Vacpagdesc.Close
Set rs_Vacpagdesc = Nothing

If rs_Vacacion.State = adStateOpen Then rs_Vacacion.Close
Set rs_Vacacion = Nothing

If rs_Acu_Mes.State = adStateOpen Then rs_Acu_Mes.Close
Set rs_Acu_Mes = Nothing


End Sub

Public Sub bus_Antfases(ByVal A_fecha As Date, ByVal D_Fecha As Date, ByRef dia As Integer, ByRef mes As Integer, ByRef Anio As Integer)
' ---------------------------------------------------------------------------------------------
' Descripcion: Calcula la antiguedad a una fecha de un empleado en :
'              en dias, meses y años
' Autor      : FGZ
' Fecha      : 08/06/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Aux1 As Long
Dim Aux2 As Long
Dim Aux3 As Long
Dim fecalta As Date
Dim fecbaja As Date
Dim seguir As Date
Dim q As Integer

Dim rs_Fases As New ADODB.Recordset

StrSql = "SELECT * FROM fases WHERE empleado = " & buliq_empleado!ternro
OpenRecordset StrSql, rs_Fases

'StrSql = "SELECT * FROM fases WHERE empleado = " & buliq_empleado!ternro & _
'         " AND " & NombreCampo & " = -1 " & _
'         " AND not altfec is null " & _
'         " AND not (bajfec is null AND estado = 0)" & _
'         " AND altfec <= " & ConvFecha(fecha_fin)
'OpenRecordset StrSql, rs_Fases

Do While Not rs_Fases.EOF
    fecalta = rs_Fases!altfec
    
    'Verificar si se trata de un registro completo (alta/baja) o solo de un alta
    If EsNulo(rs_Fases!bajfec) Then
        fecbaja = A_fecha 'solo es un alta, tomar el a-fecha
    Else
        fecbaja = rs_Fases!bajfec 'se trata de un registro completo
    End If
                           
    If Not EsNulo(fecbaja) Then  'ya esta dado de baja
        If fecalta < D_Fecha And fecbaja < D_Fecha Then GoTo siguiente
        If fecalta < D_Fecha And fecbaja > D_Fecha Then fecalta = D_Fecha
        
        'FGZ - 27/06/2007 ---- estaba dando un dia de menos ---
        'Call DIF_FECHAS2(fecalta, fecbaja, Aux1, Aux2, Aux3)
        Call DIF_FECHAS3(fecalta, fecbaja, Aux1, Aux2, Aux3)
        'FGZ - 27/06/2007 ---- estaba dando un dia de menos ---
        dia = dia + Aux1
        mes = mes + Aux2 + Int(dia / 30)
        Anio = Anio + Aux3 + Int(mes / 12)
        dia = dia Mod 30
        mes = mes Mod 12
     
     End If
siguiente:
    rs_Fases.MoveNext
Loop

' Cierro todo y Libero
If rs_Fases.State = adStateOpen Then rs_Fases.Close
Set rs_Fases = Nothing

End Sub



Public Sub bus_DiasSAC()
' ---------------------------------------------------------------------------------------------
' Descripcion: Calculo de Dias del semestre actual para SAC
' Autor      : FGZ
' Fecha      : 10/06/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------

Dim Fec_Ini_Sem     As Date
Dim Fec_Fin_Sem     As Date
Dim Fec_Ini_1_Sem   As Date
Dim Fec_Ini_2_Sem   As Date
Dim Fec_Ini_Calc    As Date
Dim Fec_Fin_Calc    As Date
Dim Fec_Fin_1_Sem   As Date
Dim Fec_Fin_2_Sem   As Date
Dim Dias_Sac        As Double
Dim Dias_Aus        As Double

Dim A_fecha        As Date
Dim Maximo         As Integer
Dim Tolerancia     As Integer
Dim TiposDeDia     As String

'Dim Param_cur As New ADODB.Recordset
Dim rs_Lic As New ADODB.Recordset
Dim rs_Fases As New ADODB.Recordset

    Bien = False
    Valor = 0
    'A_fecha = buliq_periodo!pliqdesde
    A_fecha = buliq_periodo!pliqhasta
    
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        Maximo = Arr_Programa(NroProg).Auxint1
        Tolerancia = Arr_Programa(NroProg).Auxint2
        TiposDeDia = IIf(Not EsNulo(Arr_Programa(NroProg).Auxchar), Arr_Programa(NroProg).Auxchar, " ")
    Else
        Exit Sub
    End If


    'calculo de inicio del semetre
    Fec_Ini_1_Sem = C_Date("01/01/" & Year(A_fecha))
    Fec_Ini_2_Sem = C_Date("01/07/" & Year(A_fecha))
    Fec_Ini_Sem = IIf(A_fecha >= Fec_Ini_2_Sem, Fec_Ini_2_Sem, Fec_Ini_1_Sem)
    Fec_Fin_1_Sem = C_Date("30/06/" & Year(A_fecha))
    Fec_Fin_2_Sem = C_Date("31/12/" & Year(A_fecha))
    Fec_Fin_Sem = IIf(A_fecha >= Fec_Ini_2_Sem, Fec_Fin_2_Sem, Fec_Fin_1_Sem)
    Fec_Fin_Sem = IIf(A_fecha < Fec_Fin_Sem, A_fecha, Fec_Fin_Sem)
    ' SE AGREGARON ESTAS 2 INICIALIZACIONES
    Fec_Ini_Calc = Fec_Ini_Sem
    Fec_Fin_Calc = Fec_Fin_Sem


    'Busco la ultima fase activa
    StrSql = "SELECT * FROM fases WHERE estado = -1 AND real = -1 AND empleado = " & buliq_empleado!ternro
    OpenRecordset StrSql, rs_Fases
    
    If Not rs_Fases.EOF Then
        rs_Fases.MoveLast
        If rs_Fases!altfec > Fec_Ini_Sem Then
            Fec_Ini_Calc = rs_Fases!altfec
        Else
            Fec_Ini_Calc = Fec_Ini_Sem
        End If
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontró ninguna fase activa para el empleado " & buliq_empleado!Empleg
        End If
                
        Bien = False
        Exit Sub
    End If

    'Busco la ultima fase inactiva
'    StrSql = "SELECT * FROM fases WHERE estado = 0 AND real = -1 AND empleado = " & buliq_empleado!ternro
'    StrSql = StrSql & " ORDER BY altfec "
'    OpenRecordset StrSql, rs_Fases
'
'    If Not rs_Fases.EOF Then
'        rs_Fases.MoveLast
'        If rs_Fases!bajfec < Fec_Ini_Sem Then
'            Fec_Fin_Calc = Fec_Fin_Sem
'        Else
'            If rs_Fases!bajfec < Fec_Fin_Sem Then
'                Fec_Fin_Calc = rs_Fases!bajfec
'            Else
'                Fec_Fin_Calc = Fec_Fin_Sem
'            End If
'        End If
'    End If
    StrSql = "SELECT * FROM fases WHERE real = -1 AND empleado = " & buliq_empleado!ternro
    StrSql = StrSql & " ORDER BY altfec "
    OpenRecordset StrSql, rs_Fases
    If Not rs_Fases.EOF Then
        rs_Fases.MoveLast
        If Not EsNulo(rs_Fases!bajfec) Then
            If rs_Fases!bajfec < Fec_Ini_Sem Then
                Fec_Fin_Calc = Fec_Fin_Sem
            Else
                If rs_Fases!bajfec < Fec_Fin_Sem Then
                    Fec_Fin_Calc = rs_Fases!bajfec
                Else
                    Fec_Fin_Calc = Fec_Fin_Sem
                End If
            End If
        End If
    End If





    'Dias_Sac = Fec_Fin_Sem - Fec_Ini_Calc
    Dias_Sac = DateDiff("d", Fec_Ini_Calc, Fec_Fin_Calc)
    Dias_Sac = IIf(Dias_Sac >= (Maximo - Tolerancia), Maximo, Dias_Sac)

    'descontar las licencias en el semestre
'    StrSql = "SELECT * FROM emp_lic WHERE (empleado = " & buliq_empleado!ternro & " )" & _
'             " AND (tdnro = 15 OR tdnro = 16 OR tdnro = 17 OR tdnro = 18 OR tdnro = 24)" & _
'             " AND elfechadesde <=" & ConvFecha(Fec_Fin_Sem) & _
'             " AND elfechahasta >= " & ConvFecha(Fec_Ini_Calc)

    If Not EsNulo(TiposDeDia) And TiposDeDia <> " " Then
        StrSql = "SELECT * FROM emp_lic WHERE (empleado = " & buliq_empleado!ternro & " )" & _
                 " AND (tdnro IN (" & TiposDeDia & "))" & _
                 " AND elfechadesde <=" & ConvFecha(Fec_Fin_Sem) & _
                 " AND elfechahasta >= " & ConvFecha(Fec_Ini_Calc)
        OpenRecordset StrSql, rs_Lic
        
        Do While Not rs_Lic.EOF
            Dias_Aus = Dias_Aus + CantidadDeDias(Fec_Ini_Calc, Fec_Fin_Sem, rs_Lic!elfechadesde, rs_Lic!elfechahasta)
            
            rs_Lic.MoveNext
        Loop
    Else
        Dias_Aus = 0
    End If

    Dias_Sac = Dias_Sac - Dias_Aus
    
    Valor = Dias_Sac
    Bien = True

End Sub

Public Sub bus_DiasSAC_Proporcional()
' ---------------------------------------------------------------------------------------------
' Descripcion: Calculo de Dias del semestre actual para SAC con proporcion.
' Autor      : FGZ
' Fecha      : 10/06/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Fec_Ini_Sem     As Date
Dim Fec_Fin_Sem     As Date
Dim Fec_Ini_1_Sem   As Date
Dim Fec_Ini_2_Sem   As Date
Dim Fec_Ini_Calc    As Date
Dim Fec_Fin_Calc    As Date
Dim Fec_Fin_1_Sem   As Date
Dim Fec_Fin_2_Sem   As Date
Dim Dias_Sac        As Double
Dim Dias_Aus        As Double

Dim A_fecha        As Date
Dim Maximo         As Integer
Dim Tolerancia     As Integer
Dim TiposDeDia     As String

'Dim Param_cur As New ADODB.Recordset
Dim rs_Lic As New ADODB.Recordset
Dim rs_Fases As New ADODB.Recordset

    Bien = False
    Valor = 0
    'A_fecha = buliq_periodo!pliqdesde
    A_fecha = buliq_periodo!pliqhasta
    
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur

    If Arr_Programa(NroProg).Prognro <> 0 Then
        Maximo = Arr_Programa(NroProg).Auxint1
        Tolerancia = Arr_Programa(NroProg).Auxint2
        TiposDeDia = IIf(Not EsNulo(Arr_Programa(NroProg).Auxchar), Arr_Programa(NroProg).Auxchar, " ")
    Else
        Exit Sub
    End If


    'calculo de inicio del semetre
    Fec_Ini_1_Sem = C_Date("01/01/" & Year(A_fecha))
    Fec_Ini_2_Sem = C_Date("01/07/" & Year(A_fecha))
    Fec_Ini_Sem = IIf(A_fecha >= Fec_Ini_2_Sem, Fec_Ini_2_Sem, Fec_Ini_1_Sem)
    Fec_Fin_1_Sem = C_Date("30/06/" & Year(A_fecha))
    Fec_Fin_2_Sem = C_Date("31/12/" & Year(A_fecha))
    Fec_Fin_Sem = IIf(A_fecha >= Fec_Ini_2_Sem, Fec_Fin_2_Sem, Fec_Fin_1_Sem)
    Fec_Fin_Sem = IIf(A_fecha < Fec_Fin_Sem, A_fecha, Fec_Fin_Sem)
    ' SE AGREGARON ESTAS 2 INICIALIZACIONES
    Fec_Ini_Calc = Fec_Ini_Sem
    Fec_Fin_Calc = Fec_Fin_Sem



'    'Busco la ultima fase activa
'    StrSql = "SELECT * FROM fases WHERE estado = -1 AND real = -1 AND empleado = " & buliq_empleado!ternro
'    OpenRecordset StrSql, rs_Fases
'
'    If Not rs_Fases.EOF Then
'        rs_Fases.MoveLast
'        If rs_Fases!altfec > Fec_Ini_Sem Then
'            Fec_Ini_Calc = rs_Fases!altfec
'        Else
'            Fec_Ini_Calc = Fec_Ini_Sem
'        End If
'    Else
'        If CBool(USA_DEBUG) Then
'            Flog.writeline Espacios(Tabulador * 4) & "No se encontró ninguna fase activa para el empleado " & buliq_empleado!empleg
'        End If
'
'        Bien = False
'        Exit Sub
'    End If

    'Busco la ultima fase inactiva
    StrSql = "SELECT * FROM fases WHERE real = -1 AND empleado = " & buliq_empleado!ternro
    StrSql = StrSql & " ORDER BY altfec "
    OpenRecordset StrSql, rs_Fases
    
    If Not rs_Fases.EOF Then
        rs_Fases.MoveLast
        'Busco la fecha de Inicio
        If rs_Fases!altfec > Fec_Ini_Sem Then
            Fec_Ini_Calc = rs_Fases!altfec
        Else
            Fec_Ini_Calc = Fec_Ini_Sem
        End If
        'Busco la fecha de fin
        If Not EsNulo(rs_Fases!bajfec) Then
            Fec_Fin_Calc = rs_Fases!bajfec
        Else
            If Not EsNulo(buliq_empleado!empfbajaprev) Then
                Fec_Fin_Calc = buliq_empleado!empfbajaprev
            Else
                Fec_Fin_Calc = Fec_Fin_Sem
            End If
        End If
    Else
        Fec_Fin_Calc = Fec_Fin_Sem
    End If


    'Dias_Sac = Fec_Fin_Sem - Fec_Ini_Calc
    Dias_Sac = DateDiff("d", Fec_Ini_Calc, Fec_Fin_Calc) + 1
    Dias_Sac = IIf(Dias_Sac >= (Maximo - Tolerancia), Maximo, Dias_Sac)

    'descontar las licencias en el semestre
'    StrSql = "SELECT * FROM emp_lic WHERE (empleado = " & buliq_empleado!ternro & " )" & _
'             " AND (tdnro = 15 OR tdnro = 16 OR tdnro = 17 OR tdnro = 18 OR tdnro = 24)" & _
'             " AND elfechadesde <=" & ConvFecha(Fec_Fin_Sem) & _
'             " AND elfechahasta >= " & ConvFecha(Fec_Ini_Calc)

    If Not EsNulo(TiposDeDia) And TiposDeDia <> " " Then
        StrSql = "SELECT * FROM emp_lic WHERE empleado = " & buliq_empleado!ternro & _
                 " AND tdnro IN (" & TiposDeDia & ") " & _
                 " AND elfechadesde <=" & ConvFecha(Fec_Fin_Sem) & _
                 " AND elfechahasta >= " & ConvFecha(Fec_Ini_Calc)
        OpenRecordset StrSql, rs_Lic
        
        Do While Not rs_Lic.EOF
            Dias_Aus = Dias_Aus + CantidadDeDias(Fec_Ini_Calc, Fec_Fin_Sem, rs_Lic!elfechadesde, rs_Lic!elfechahasta)
            
            rs_Lic.MoveNext
        Loop
    Else
        Dias_Aus = 0
    End If

    Dias_Sac = Dias_Sac - Dias_Aus
    
    Valor = Dias_Sac
    Bien = True

End Sub


Public Sub bus_Vac_No_Gozadas(ByVal concnro As Long, ByVal prog As Long)
' ---------------------------------------------------------------------------------------------
' Descripcion: Vacaciones no Gozadas
' Autor      : FGZ
' Fecha      : 02/07/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Fec_Fin As Date

Dim Maximo       As Double
Dim Tolerancia   As Double
Dim Inas_Ingreso As Double
Dim Diasvac      As Double
Dim DiasVacTomados  As Double
Dim Genera       As Boolean
Dim Propor       As Boolean

'Dim Param_cur As New ADODB.Recordset
Dim rs_Emp_Lic As New ADODB.Recordset
Dim rs_Fases As New ADODB.Recordset
Dim rs_NovEmp As New ADODB.Recordset

    Bien = False
    Valor = 0
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "La fecha fin se toma a la fecha de baja de la ultima fase "
        Flog.writeline Espacios(Tabulador * 4) & "Si no esta dado de baja tomo la fecha de baja prevista y si "
        Flog.writeline Espacios(Tabulador * 4) & " si la fecha de baja prevista es nula tomo la fecha fin del proceso "
    End If
    
    StrSql = "SELECT * FROM fases WHERE empleado = " & buliq_empleado!ternro & _
             " AND real = -1 " & _
             " ORDER BY altfec "
    OpenRecordset StrSql, rs_Fases
    
    If Not rs_Fases.EOF Then
        rs_Fases.MoveLast
        If Not EsNulo(rs_Fases!bajfec) Then
            Fec_Fin = rs_Fases!bajfec
        Else
            If Not EsNulo(buliq_empleado!empfbajaprev) Then
                Fec_Fin = buliq_empleado!empfbajaprev
            Else
                Fec_Fin = buliq_proceso!profecfin
            End If
        End If
    End If
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "La fecha fin es:  " & Fec_Fin
    End If
    
    
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
   
    If Arr_Programa(NroProg).Prognro <> 0 Then
        Maximo = Arr_Programa(NroProg).Auxint1
        Tolerancia = Arr_Programa(NroProg).Auxint2
        Inas_Ingreso = 0
    Else
        Exit Sub
    End If


    'A pedido de Analia
    ' run pronov/des01.p(empleado.ternro, FEC-fin, output diasvac,output genera).
    'Call bus_DiasVac_Masivos
    proporciono_bus_DiasVac = False
    Call bus_DiasVac
    Diasvac = Valor
    
    If Not Bien Then
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se pudieron generar los dias de Vacaciones no Gozadas de: " & buliq_empleado!Empleg
            Exit Sub
        End If
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Dias de vacaciones : " & Valor
        End If
    End If

    DiasVacTomados = Diasvac
    Propor = True


    'Se le descuenta los dias de vacaciones que ya estan marcados como liquidados en el pago /dto de la Gestion integral
    StrSql = "SELECT * FROM emp_lic "
    StrSql = StrSql & " INNER JOIN vacpagdesc ON vacpagdesc.emp_licnro = emp_lic.emp_licnro "
    StrSql = StrSql & " INNER JOIN lic_vacacion ON lic_vacacion.emp_licnro = emp_lic.emp_licnro "
    StrSql = StrSql & " INNER JOIN vacacion ON vacacion.vacnro = lic_vacacion.vacnro "
    StrSql = StrSql & " WHERE (empleado = " & buliq_empleado!ternro & " )"
    StrSql = StrSql & " AND (tdnro = 2) "
    StrSql = StrSql & " AND elfechahasta < " & ConvFecha(Fec_Fin)
    StrSql = StrSql & " AND vacpagdesc.pago_dto = 3 and not vacpagdesc.pronro is null "
    OpenRecordset StrSql, rs_Emp_Lic
    
    Do While Not rs_Emp_Lic.EOF
        If rs_Emp_Lic!vacanio = Year(Fec_Fin) Then
            DiasVacTomados = DiasVacTomados - rs_Emp_Lic!elcantdias
            Propor = True
        Else
            If rs_Emp_Lic!vacanio + 1 = Year(Fec_Fin) Then
                DiasVacTomados = DiasVacTomados - rs_Emp_Lic!elcantdias
                Propor = False
            End If
        End If
        
        rs_Emp_Lic.MoveNext
    Loop
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Se le descuentan " & (Diasvac - DiasVacTomados) & " dias de vacaciones que ya estan marcados como liquidados"
    End If
    
    If (Not proporciono_bus_DiasVac) Then
        'PROPORCIONAR  LA CANTIDAD TOTAL DE DIAS CORRESPONDIENTES O LA CANT. PENDIENTE EN FUNCION  A LA FECHA DE BAJA
        If Propor Then
            Diasvac = DiasVacTomados / 365 * ((Month(Fec_Fin) - 1) * 30 + Day(Fec_Fin))
        Else
            Diasvac = Diasvac / 365 * ((Month(Fec_Fin) - 1) * 30 + Day(Fec_Fin)) + DiasVacTomados
        End If
    
        Diasvac = IIf(Fix(Diasvac) = Diasvac, Diasvac, Fix(Diasvac + 1))
        If Diasvac < 0 Then
            Diasvac = 0
        End If
        
    End If

    Valor = IIf(Diasvac < 0, 0, Diasvac)
    Bien = True

End Sub

Public Sub bus_Vac_No_Gozadas_Pendientes(ByVal concnro As Long, ByVal prog As Long)
' ---------------------------------------------------------------------------------------------
' Descripcion: Vacaciones no Gozadas
' Autor      : FGZ
' Fecha      : 02/07/2004
' Ultima Mod.: FGZ - 16/01/2006
' Descripcion: La proporcion debe ser solamente en el ultimo año
' ---------------------------------------------------------------------------------------------
Dim Fec_Fin As Date

Dim Maximo       As Double
Dim Tolerancia   As Double
Dim Inas_Ingreso As Double
Dim Diasvac     As Double
Dim Genera       As Boolean
Dim Propor       As Boolean

Dim Dias_AnterioresAnios  As Double
Dim Dias_UltimoAnio  As Double
Dim Proporcion_UltimoAnio As Double

'Dim Param_cur As New ADODB.Recordset
Dim rs_Emp_Lic As New ADODB.Recordset
Dim rs_Fases As New ADODB.Recordset
Dim rs_NovEmp As New ADODB.Recordset
Dim rs_DiasVac As New ADODB.Recordset

    Bien = False
    Valor = 0
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "La fecha fin se toma a la fecha de baja de la ultima fase "
        Flog.writeline Espacios(Tabulador * 4) & "Si no esta dado de baja tomo la fecha de baja prevista y si "
        Flog.writeline Espacios(Tabulador * 4) & " si la fecha de baja prevista es nula tomo la fecha fin del proceso "
    End If
    
    StrSql = "SELECT * FROM fases WHERE empleado = " & buliq_empleado!ternro & _
             " AND real = -1 " & _
             " ORDER BY altfec "
    OpenRecordset StrSql, rs_Fases
    
    If Not rs_Fases.EOF Then
        rs_Fases.MoveLast
        If Not EsNulo(rs_Fases!bajfec) Then
            Fec_Fin = rs_Fases!bajfec
        Else
            If Not EsNulo(buliq_empleado!empfbajaprev) Then
                Fec_Fin = buliq_empleado!empfbajaprev
            Else
                Fec_Fin = buliq_proceso!profecfin
            End If
        End If
    End If
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "La fecha fin es:  " & Fec_Fin
    End If

    
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        Maximo = Arr_Programa(NroProg).Auxint1
        Tolerancia = Arr_Programa(NroProg).Auxint2
        Inas_Ingreso = 0
    Else
        Exit Sub
    End If


    Diasvac = 0
    Genera = Bien
    Dias_AnterioresAnios = 0
    Dias_UltimoAnio = 0
    
    'Busco de los años anteriores al ultimo
    StrSql = "SELECT sum(vacdiascor.vdiascorcant) suma FROM vacdiascor "
    StrSql = StrSql & " INNER JOIN vacacion ON vacacion.vacnro = vacdiascor.vacnro "
    StrSql = StrSql & " WHERE vacdiascor.ternro =" & buliq_empleado!ternro
    StrSql = StrSql & " AND vacacion.vacanio < " & Year(Fec_Fin)
    OpenRecordset StrSql, rs_DiasVac
    If Not rs_DiasVac.EOF Then
        Dias_AnterioresAnios = IIf(Not EsNulo(rs_DiasVac!Suma), rs_DiasVac!Suma, 0)
    End If
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Dias de años anteriores:  " & Dias_AnterioresAnios
    End If
    
    
    'Se le descuenta los dias de vacaciones que ya estan marcados como liquidados en el pago /dto de la Gestion integral
    StrSql = "SELECT * FROM emp_lic "
    StrSql = StrSql & " INNER JOIN lic_vacacion ON lic_vacacion.emp_licnro = emp_lic.emp_licnro "
    StrSql = StrSql & " INNER JOIN vacacion ON vacacion.vacnro = lic_vacacion.vacnro "
    StrSql = StrSql & " WHERE (empleado = " & buliq_empleado!ternro & " )"
    StrSql = StrSql & " AND (tdnro = 2) "
    StrSql = StrSql & " AND vacacion.vacanio < " & Year(Fec_Fin)
    StrSql = StrSql & " AND elfechahasta < " & ConvFecha(Fec_Fin)
    OpenRecordset StrSql, rs_Emp_Lic
    
    Do While Not rs_Emp_Lic.EOF
            Dias_AnterioresAnios = Dias_AnterioresAnios - rs_Emp_Lic!elcantdias
        
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Se le descuentan :  " & rs_Emp_Lic!elcantdias
            End If
        
        rs_Emp_Lic.MoveNext
    Loop


    'Busco los dias de este año
    StrSql = "SELECT sum(vacdiascor.vdiascorcant) suma FROM vacdiascor "
    StrSql = StrSql & " INNER JOIN vacacion ON vacacion.vacnro = vacdiascor.vacnro "
    StrSql = StrSql & " WHERE vacdiascor.ternro =" & buliq_empleado!ternro
    StrSql = StrSql & " AND vacacion.vacanio = " & Year(Fec_Fin)
    OpenRecordset StrSql, rs_DiasVac
    If Not rs_DiasVac.EOF Then
        Dias_UltimoAnio = IIf(Not EsNulo(rs_DiasVac!Suma), rs_DiasVac!Suma, 0)
    End If
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Dias de este año:  " & Dias_UltimoAnio
    End If
    
    
    'Se le descuenta los dias de vacaciones que ya estan marcados como liquidados en el pago /dto de la Gestion integral
    StrSql = "SELECT * FROM emp_lic "
    StrSql = StrSql & " INNER JOIN lic_vacacion ON lic_vacacion.emp_licnro = emp_lic.emp_licnro "
    StrSql = StrSql & " INNER JOIN vacacion ON vacacion.vacnro = lic_vacacion.vacnro "
    StrSql = StrSql & " WHERE (empleado = " & buliq_empleado!ternro & " )"
    StrSql = StrSql & " AND (tdnro = 2) "
    StrSql = StrSql & " AND vacacion.vacanio = " & Year(Fec_Fin)
    StrSql = StrSql & " AND elfechahasta < " & ConvFecha(Fec_Fin)
    OpenRecordset StrSql, rs_Emp_Lic
    
    Do While Not rs_Emp_Lic.EOF
            Dias_UltimoAnio = Dias_UltimoAnio - rs_Emp_Lic!elcantdias
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Se le descuentan :  " & rs_Emp_Lic!elcantdias
            End If
        
        rs_Emp_Lic.MoveNext
    Loop
    'PROPORCIONAR  LA CANTIDAD TOTAL DE DIAS CORRESPONDIENTES O LA CANT. PENDIENTE EN FUNCION  A LA FECHA DE BAJA
    Proporcion_UltimoAnio = Dias_UltimoAnio / 365 * ((Month(Fec_Fin) - 1) * 30 + Day(Fec_Fin))
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Proporcion del ultimo año:  " & Proporcion_UltimoAnio
    End If
    
    
    Diasvac = Dias_AnterioresAnios + Proporcion_UltimoAnio
    Diasvac = IIf(Fix(Diasvac) = Diasvac, Diasvac, Fix(Diasvac + 1))
    If Diasvac < 0 Then
        Diasvac = 0
    End If

    Valor = IIf(Diasvac < 0, 0, Diasvac)
    Bien = True
End Sub



Public Sub bus_Vac_No_Gozadas_Pendientes_OLD2(ByVal concnro As Long, ByVal prog As Long)
' ---------------------------------------------------------------------------------------------
' Descripcion: Vacaciones no Gozadas
' Autor      : FGZ
' Fecha      : 02/07/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Fec_Fin As Date

Dim Maximo       As Double
Dim Tolerancia   As Double
Dim Inas_Ingreso As Double
Dim Diasvac     As Double
Dim DiasVacTomados  As Double
Dim Genera       As Boolean
Dim Propor       As Boolean

'Dim Param_cur As New ADODB.Recordset
Dim rs_Emp_Lic As New ADODB.Recordset
Dim rs_Fases As New ADODB.Recordset
Dim rs_NovEmp As New ADODB.Recordset
Dim rs_DiasVac As New ADODB.Recordset

    Bien = False
    Valor = 0
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "La fecha fin se toma a la fecha de baja de la ultima fase "
        Flog.writeline Espacios(Tabulador * 4) & "Si no esta dado de baja tomo la fecha de baja prevista y si "
        Flog.writeline Espacios(Tabulador * 4) & " si la fecha de baja prevista es nula tomo la fecha fin del proceso "
    End If
    
    StrSql = "SELECT * FROM fases WHERE empleado = " & buliq_empleado!ternro & _
             " AND real = -1 " & _
             " ORDER BY altfec "
    OpenRecordset StrSql, rs_Fases
    
    If Not rs_Fases.EOF Then
        rs_Fases.MoveLast
        If Not EsNulo(rs_Fases!bajfec) Then
            Fec_Fin = rs_Fases!bajfec
        Else
            If Not EsNulo(buliq_empleado!empfbajaprev) Then
                Fec_Fin = buliq_empleado!empfbajaprev
            Else
                Fec_Fin = buliq_proceso!profecfin
            End If
        End If
    End If
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "La fecha fin es:  " & Fec_Fin
    End If

    
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        Maximo = Arr_Programa(NroProg).Auxint1
        Tolerancia = Arr_Programa(NroProg).Auxint2
        Inas_Ingreso = 0
    Else
        Exit Sub
    End If


'    'A pedido de Analia
'    ' run pronov/des01.p(empleado.ternro, FEC-fin, output diasvac,output genera).
'    'Call bus_DiasVac_Masivos
'    Call bus_DiasVac
'
'    Diasvac = Valor
'    Genera = Bien
'
'    If Not Genera Then
'        If CBool(USA_DEBUG) Then
'            Flog.writeline Espacios(Tabulador * 4) & "No se pudieron generar los dias de Vacaciones no Gozadas de: " & buliq_empleado!empleg
'            Exit Sub
'        End If
'    End If

    Diasvac = 0
    Genera = Bien
    
    StrSql = "SELECT sum(vacdiascor.vdiascorcant) suma FROM vacdiascor "
    StrSql = StrSql & " INNER JOIN vacacion ON vacacion.vacnro = vacdiascor.vacnro "
    StrSql = StrSql & " WHERE vacdiascor.ternro =" & buliq_empleado!ternro
    StrSql = StrSql & " AND vacacion.vacanio <= " & Year(Fec_Fin)
    OpenRecordset StrSql, rs_DiasVac
    If Not rs_DiasVac.EOF Then
        Diasvac = IIf(Not EsNulo(rs_DiasVac!Suma), rs_DiasVac!Suma, 0)
    End If

    DiasVacTomados = Diasvac
    Propor = True

    'Se le descuenta los dias de vacaciones que ya estan marcados como liquidados en el pago /dto de la Gestion integral
    StrSql = "SELECT * FROM emp_lic "
    StrSql = StrSql & " INNER JOIN lic_vacacion ON lic_vacacion.emp_licnro = emp_lic.emp_licnro "
    StrSql = StrSql & " INNER JOIN vacacion ON vacacion.vacnro = lic_vacacion.vacnro "
    StrSql = StrSql & " WHERE (empleado = " & buliq_empleado!ternro & " )"
    StrSql = StrSql & " AND (tdnro = 2) "
    StrSql = StrSql & " AND elfechahasta < " & ConvFecha(Fec_Fin)
    OpenRecordset StrSql, rs_Emp_Lic
    
    Do While Not rs_Emp_Lic.EOF
        If rs_Emp_Lic!vacanio = Year(Fec_Fin) Then
            DiasVacTomados = DiasVacTomados - rs_Emp_Lic!elcantdias
            Propor = True
        Else
            If rs_Emp_Lic!vacanio + 1 = Year(Fec_Fin) Then
                DiasVacTomados = DiasVacTomados - rs_Emp_Lic!elcantdias
                Propor = False
            End If
        End If
        
        rs_Emp_Lic.MoveNext
    Loop

    'PROPORCIONAR  LA CANTIDAD TOTAL DE DIAS CORRESPONDIENTES O LA CANT. PENDIENTE EN FUNCION  A LA FECHA DE BAJA
    If Propor Then
        Diasvac = DiasVacTomados / 365 * ((Month(Fec_Fin) - 1) * 30 + Day(Fec_Fin))
    Else
        Diasvac = Diasvac / 365 * ((Month(Fec_Fin) - 1) * 30 + Day(Fec_Fin)) + DiasVacTomados
    End If

    Diasvac = IIf(Fix(Diasvac) = Diasvac, Diasvac, Fix(Diasvac + 1))
    If Diasvac < 0 Then
        Diasvac = 0
    End If

    Valor = IIf(Diasvac < 0, 0, Diasvac)
    Bien = True
End Sub






Public Sub bus_Vac_No_Gozadas_Pendientes_OLD(ByVal concnro As Long, ByVal prog As Long)
' ---------------------------------------------------------------------------------------------
' Descripcion: Vacaciones no Gozadas
' Autor      : FGZ
' Fecha      : 02/07/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Fec_Fin As Date

Dim Maximo       As Double
Dim Tolerancia   As Double
Dim Inas_Ingreso As Double
Dim Diasvac     As Double
Dim DiasVacTomados  As Double
Dim Genera       As Boolean
Dim Propor       As Boolean

'Dim Param_cur As New ADODB.Recordset
Dim rs_Emp_Lic As New ADODB.Recordset
Dim rs_Fases As New ADODB.Recordset
Dim rs_NovEmp As New ADODB.Recordset
Dim rs_DiasVac As New ADODB.Recordset

    Bien = False
    Valor = 0
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "La fecha fin se toma a la fecha de baja de la ultima fase "
        Flog.writeline Espacios(Tabulador * 4) & "Si no esta dado de baja tomo la fecha de baja prevista y si "
        Flog.writeline Espacios(Tabulador * 4) & " si la fecha de baja prevista es nula tomo la fecha fin del proceso "
    End If
    
    StrSql = "SELECT * FROM fases WHERE empleado = " & buliq_empleado!ternro & _
             " AND real = -1 " & _
             " ORDER BY altfec "
    OpenRecordset StrSql, rs_Fases
    
    If Not rs_Fases.EOF Then
        rs_Fases.MoveLast
        If Not EsNulo(rs_Fases!bajfec) Then
            Fec_Fin = rs_Fases!bajfec
        Else
            If Not EsNulo(buliq_empleado!empfbajaprev) Then
                Fec_Fin = buliq_empleado!empfbajaprev
            Else
                Fec_Fin = buliq_proceso!profecfin
            End If
        End If
    End If
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "La fecha fin es:  " & Fec_Fin
    End If

    
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        Maximo = Arr_Programa(NroProg).Auxint1
        Tolerancia = Arr_Programa(NroProg).Auxint2
        Inas_Ingreso = 0
    Else
        Exit Sub
    End If


'    'A pedido de Analia
'    ' run pronov/des01.p(empleado.ternro, FEC-fin, output diasvac,output genera).
'    'Call bus_DiasVac_Masivos
'    Call bus_DiasVac
'
'    Diasvac = Valor
'    Genera = Bien
'
'    If Not Genera Then
'        If CBool(USA_DEBUG) Then
'            Flog.writeline Espacios(Tabulador * 4) & "No se pudieron generar los dias de Vacaciones no Gozadas de: " & buliq_empleado!empleg
'            Exit Sub
'        End If
'    End If

    Diasvac = 0
    Genera = Bien
    
    StrSql = "SELECT sum(vacdiascor.vdiascorcant) suma FROM vacdiascor "
    StrSql = StrSql & " INNER JOIN vacacion ON vacacion.vacnro = vacdiascor.vacnro "
    StrSql = StrSql & " WHERE vacdiascor.ternro =" & buliq_empleado!ternro
    StrSql = StrSql & " AND vacacion.vacanio < " & Year(Fec_Fin)
    OpenRecordset StrSql, rs_DiasVac
    If Not rs_DiasVac.EOF Then
        Diasvac = IIf(Not EsNulo(rs_DiasVac!Suma), rs_DiasVac!Suma, 0)
    End If

    DiasVacTomados = Diasvac
    Propor = True

    'Se le descuenta los dias de vacaciones que ya estan marcados como liquidados en el pago /dto de la Gestion integral
    StrSql = "SELECT * FROM emp_lic "
    StrSql = StrSql & " INNER JOIN vacpagdesc ON vacpagdesc.emp_licnro = emp_lic.emp_licnro "
    StrSql = StrSql & " INNER JOIN lic_vacacion ON lic_vacacion.emp_licnro = emp_lic.emp_licnro "
    StrSql = StrSql & " INNER JOIN vacacion ON vacacion.vacnro = lic_vacacion.vacnro "
    StrSql = StrSql & " WHERE (empleado = " & buliq_empleado!ternro & " )"
    StrSql = StrSql & " AND (tdnro = 2) "
    StrSql = StrSql & " AND elfechahasta < " & ConvFecha(Fec_Fin)
    StrSql = StrSql & " AND vacpagdesc.pago_dto = 3 and not vacpagdesc.pronro is null "
    OpenRecordset StrSql, rs_Emp_Lic
    
    Do While Not rs_Emp_Lic.EOF
        If rs_Emp_Lic!vacanio = Year(Fec_Fin) Then
            DiasVacTomados = DiasVacTomados - rs_Emp_Lic!elcantdias
            Propor = True
        Else
            If rs_Emp_Lic!vacanio + 1 = Year(Fec_Fin) Then
                DiasVacTomados = DiasVacTomados - rs_Emp_Lic!elcantdias
                Propor = False
            End If
        End If
        
        rs_Emp_Lic.MoveNext
    Loop

    Diasvac = DiasVacTomados
    If Diasvac < 0 Then
        Diasvac = 0
    End If

    Valor = IIf(Diasvac < 0, 0, Diasvac)
    Bien = True

End Sub



Public Sub Bus_Edad_Empleado()
' ---------------------------------------------------------------------------------------------
' Descripcion: Calculo de la edad del empleado
' Autor      : FGZ
' Fecha      : 05/07/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim OpcionFin As Integer    '0 - Fin del Proceso
                            '1 - Fin del Periodo
                            '2 - Fin de Año
                            '3 - Fecha Actual
                            
Dim Salida As Integer       '0 - Dias
                            '1 - Meses
                            '2 - Años
Dim FechaFin As Date

'Dim Param_cur As New ADODB.Recordset
Dim rs_Tercero As New ADODB.Recordset
Dim dias As Long
Dim Meses As Long
Dim anios As Long

    Bien = False
    Valor = 0
   
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        'Los defaults son A la fecha actual y en Años
        OpcionFin = IIf(Not EsNulo(Arr_Programa(NroProg).Auxint1), Arr_Programa(NroProg).Auxint1, 3)
        Salida = IIf(Not EsNulo(Arr_Programa(NroProg).Auxint2), Arr_Programa(NroProg).Auxint2, 2)
    Else
        Exit Sub
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Parametro no configurado: "
        End If
    End If
   
    ' Obtener los parametros de la Busqueda
    StrSql = "SELECT * FROM tercero WHERE ternro = " & buliq_empleado!ternro
    OpenRecordset StrSql, rs_Tercero
    
    If Not rs_Tercero.EOF Then
        Select Case OpcionFin
        Case 0: 'Fin del Proces
            FechaFin = IIf(Not EsNulo(buliq_proceso!profecfin), buliq_proceso!profecfin, Date)
        Case 1: 'Fin del Periodo
            FechaFin = IIf(Not EsNulo(buliq_periodo!pliqhasta), buliq_periodo!pliqhasta, Date)
        Case 2: 'Fin del Año Actual
            FechaFin = C_Date("31/12/" & Year(Date))
        Case 3: 'Fecha actual
            FechaFin = Date
        End Select
        
        
        'FGZ - 27/06/2007 ---- estaba dando un dia de menos ---
        'Call DIF_FECHAS2(rs_Tercero!terfecnac, FechaFin, dias, Meses, anios)
        Call DIF_FECHAS3(rs_Tercero!terfecnac, FechaFin, dias, Meses, anios)
        'FGZ - 27/06/2007 ---- estaba dando un dia de menos ---
        
        Select Case Salida
        Case 0: 'Dias
            Valor = dias + Meses * 360 + anios * 12
            'Valor = DateDiff("d", rs_Tercero!terfecnac, FechaFin)
        Case 1: 'Meses
            Valor = anios * 12 + Meses
            'Valor = DateDiff("m", rs_Tercero!terfecnac, FechaFin)
        Case 2: 'Años
            Valor = anios
            'Valor = DateDiff("yyyy", rs_Tercero!terfecnac, FechaFin)
        End Select
        Bien = True
    Else
        Bien = False
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se Encuentra el tercero de: " & buliq_empleado!Empleg
        End If
        Exit Sub
    End If
    
' Cierro todo y Libero
If rs_Tercero.State = adStateOpen Then rs_Tercero.Close
Set rs_Tercero = Nothing
'If Param_cur.State = adStateOpen Then Param_cur.Close
'Set Param_cur = Nothing

End Sub


Public Sub bus_BaseLicencias()
' ---------------------------------------------------------------------------------------------
' Descripcion: Busca un acumulador una cantidad x de meses a la fecha de inicio de una
'              Licencia de un Tipo X y realizo la operacion sobre los valores encontrados.
' Autor      : FGZ
' Fecha      : 14/01/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim TipoLicencia As Long    'Tipo de Estructura
Dim Retorna_Cantidad As Boolean     'Retorna cantidad o Monto
                            ' TRUE - Cantidad y FALSE - Monto

Dim CantMeses As Integer        ' Cantidad de meses para atras
Dim Acumulador As Long      'acunro
Dim Opcion As Long          ' 1 - Sumatoria
                            ' 2 - Maximo
                            ' 3 - Promedio
                            ' 4 - Promedio sin 0
                            ' 5 - Minimo
Dim Incluye As Integer      ' 0  - No Incluye
                            ' 1  - Proceso Actual
                            ' 2  - Periodo Actual con Proceso actual
                            ' 3  - Periodo Actual sin proceso actual


Dim FechaDeInicio As Date
Dim FechaDeFin As Date

Dim FechaDesde As Date  'Fecha desde de la primer Licencia del tipo (de ahí tengo que ir para atras x meses)
Dim Continua As Boolean
Dim PliqNro As Long
Dim CantAnios As Integer
Dim UsaActual As Boolean
Dim UsaPeriodoActual As Boolean
Dim Con_Fases As Boolean
Dim Cantidad As Double

Dim MesDesde As Integer
Dim AnioDesde As Integer
Dim MesHasta As Integer
Dim AnioHasta As Integer

'Dim Param_cur As New ADODB.Recordset
Dim rs_Lic As New ADODB.Recordset
Dim rs_Periodo As New ADODB.Recordset

    ' Busco una Licencia de un tipo particular desde la fecha hasta del proceso
    ' que estoy liquidando hacia atras. Teniendo en cuenta que la licencia encontrada
    ' puede ser continuacion de otra Licencia que termine un dia antes y sea del mismo tipo.
    
    ' Una vez encontrada la fecha inicial de la licencia. Busco un acumulador
    ' una X cantidad de meses para atras realizando alguna operacion con los valores obtenidos (tipicamente promedio).


    Bien = False
    Valor = 0

    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda "
    End If
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur

    If Arr_Programa(NroProg).Prognro <> 0 Then
        TipoLicencia = CInt(Arr_Programa(NroProg).Auxchar1)
        Acumulador = CLng(Arr_Programa(NroProg).Auxint1)
        CantMeses = CInt(Arr_Programa(NroProg).Auxint2)
        Opcion = CInt(Arr_Programa(NroProg).Auxint3)
        Incluye = Arr_Programa(NroProg).Auxint4
        Retorna_Cantidad = IIf(Arr_Programa(NroProg).Auxint5 = -1 Or Arr_Programa(NroProg).Auxint5 = 2, False, True)
        Con_Fases = CBool(Arr_Programa(NroProg).Auxlog1)
        
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Parametros cargados "
        End If
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busqueda no encontrada " & NroProg
        End If
        Exit Sub
    End If

    'FGZ - 29/01/2004
    FechaDeInicio = buliq_proceso!profecini
    FechaDeFin = buliq_proceso!profecfin

    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Busco una Licencia de un tipo particular desde la fecha hasta del proceso "
        Flog.writeline Espacios(Tabulador * 4) & "que estoy liquidando hacia atras. Teniendo en cuenta que la licencia encontrada "
        Flog.writeline Espacios(Tabulador * 4) & "puede ser continuacion de otra Licencia que termine un dia antes y sea del mismo tipo. "
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 4) & "Una vez encontrada la fecha inicial de la licencia. Busco un acumulador "
        Flog.writeline Espacios(Tabulador * 4) & "una X cantidad de meses para atras realizando alguna operacion con los valores obtenidos (tipicamente promedio). "
    End If

    StrSql = "SELECT * FROM emp_lic "
    StrSql = StrSql & " WHERE (empleado = " & buliq_empleado!ternro & " )"
    StrSql = StrSql & " AND tdnro = " & TipoLicencia
    StrSql = StrSql & " AND elfechadesde <=" & ConvFecha(FechaDeFin)
    StrSql = StrSql & " ORDER BY elfechadesde DESC "
    OpenRecordset StrSql, rs_Lic

    If rs_Lic.EOF Then
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontró ninguna Licencia de ese tipo " & TipoLicencia
        End If
        Bien = False
        Exit Sub
    Else
        FechaDesde = rs_Lic!elfechadesde
    End If

    rs_Lic.MoveNext
    Continua = True

    Do While Not rs_Lic.EOF And Continua
        If C_Date(rs_Lic!elfechahasta + 1) = FechaDesde Then
            FechaDesde = rs_Lic!elfechadesde
        Else
            Continua = False
        End If

        rs_Lic.MoveNext
    Loop

    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Fecha desde a buscar : " & FechaDesde
        Flog.writeline Espacios(Tabulador * 4) & "Busco el periodo correspondiente a esa fecha "
    End If

    'Busco el periodo
    StrSql = "SELECT * FROM periodo WHERE pliqmes = " & Month(FechaDesde)
    StrSql = StrSql & " AND pliqanio =" & Year(FechaDesde)
    OpenRecordset StrSql, rs_Periodo
    If rs_Periodo.EOF Then
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontro el Periodo para el mes " & Month(FechaDesde)
        End If
        Exit Sub
    Else
        PliqNro = rs_Periodo!PliqNro
        MesHasta = rs_Periodo!pliqmes
        AnioHasta = rs_Periodo!pliqanio
    End If

    CantAnios = Int(CantMeses / 12)
    CantMeses = CantMeses - (CantAnios * 12)

    Select Case Incluye
    Case 0: 'No icluye ni Periodo actual ni proceso actual
        MesDesde = MesHasta - CantMeses
        AnioDesde = AnioHasta - CantAnios
        If MesHasta = buliq_periodo!pliqmes Then
            If MesHasta = 1 Then
                AnioHasta = AnioHasta - 1
                MesHasta = 12
            Else
                MesHasta = MesHasta - 1
            End If
        End If
        UsaActual = False
        UsaPeriodoActual = False
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No icluye ni Periodo actual ni proceso actual "
            Flog.writeline Espacios(Tabulador * 4) & "Desde el mes " & MesDesde & " del " & AnioDesde & " hasta el mes " & MesHasta & " del " & AnioHasta
        End If
    
    Case 1: ' Incluye Proceso Actual y no periodo actual
        MesDesde = MesHasta - CantMeses
        AnioDesde = AnioHasta - CantAnios
        If MesHasta = buliq_periodo!pliqmes Then
            If MesHasta = 1 Then
                AnioHasta = AnioHasta - 1
                MesHasta = 12
            Else
                MesHasta = MesHasta - 1
            End If
        End If
        UsaActual = True
        UsaPeriodoActual = False
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Incluye Proceso Actual y no periodo actual "
            Flog.writeline Espacios(Tabulador * 4) & "Desde el mes " & MesDesde & " del " & AnioDesde & " hasta el mes " & MesHasta & " del " & AnioHasta
        End If
        
    Case 2: 'Incluye Periodo Actual y el Proceso Actual
        MesDesde = MesHasta - CantMeses
        AnioDesde = AnioHasta - CantAnios
        UsaActual = True
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Incluye Periodo Actual y el Proceso Actual "
            Flog.writeline Espacios(Tabulador * 4) & "Desde el mes " & MesDesde & " del " & AnioDesde & " hasta el mes " & MesHasta & " del " & AnioHasta
        End If
        
    Case 3: 'Incluye Periodo Actual y no el Proceso Actual
        MesDesde = MesHasta - CantMeses
        AnioDesde = AnioHasta - CantAnios
        UsaActual = False
        UsaPeriodoActual = True
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Incluye Periodo Actual y no el Proceso Actual "
            Flog.writeline Espacios(Tabulador * 4) & "Desde el mes " & MesDesde & " del " & AnioDesde & " hasta el mes " & MesHasta & " del " & AnioHasta
        End If
    End Select

    Con_Fases = False
    Select Case Opcion
    Case 1: 'Sumatoria
        Call AM_Sum(Acumulador, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, UsaPeriodoActual)
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Sumatoria "
        End If
        
    Case 2: 'Maximo
        Call AM_Max(Acumulador, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, UsaPeriodoActual)
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Maximo "
        End If
        
    Case 3: 'Promedio
        Call AM_Prom(Acumulador, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, ((CantAnios * 12) + CantMeses), UsaPeriodoActual)
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Promedio "
        End If
        
    Case 4: 'Promedio sin cero
        Call AM_PromSin0(Acumulador, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, UsaPeriodoActual)
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Promedio sin 0 "
        End If
        
    Case 5: 'Minimo
        Call AM_Min(Acumulador, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, UsaPeriodoActual)
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Minimo "
        End If
        
    Case Else
    End Select

    If Retorna_Cantidad Then
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Retorna cantidad "
        End If
        Valor = Cantidad
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Retorna monto "
        End If
    End If
    Bien = True

' Cierro todo y libero
'If Param_cur.State = adStateOpen Then Param_cur.Close
'Set Param_cur = Nothing

If rs_Lic.State = adStateOpen Then rs_Lic.Close
Set rs_Lic = Nothing

If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
Set rs_Periodo = Nothing

End Sub


Public Sub bus_DiasDeIngreso()
' ---------------------------------------------------------------------------------------------
' Descripcion: Calculo la cantidad de dias desde el inicio en el mes
' Autor      : FGZ
' Fecha      : 05/08/2004
' Ultima Mod.: FGZ - 08/05/2006
' Descripcion: se agregó un parametro a la busqueda que denota si el ultimo dia se considera trabajado o no.
' ---------------------------------------------------------------------------------------------
Dim dias As Integer

Dim FechaDesde As Date
Dim FechaHasta As Date
Dim fechasSeteadas As Boolean
Dim UltimoDiaTrabajado As Boolean

'Dim Param_cur As New ADODB.Recordset
Dim rs_Fases As New ADODB.Recordset
    
    Bien = False
    Valor = 0
    
'    ' Obtener los parametros de la Busqueda
'    StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
'    'OpenRecordset StrSql, Param_cur
'
'    If Arr_Programa(NroProg).Prognro <> 0 Then
'        TipoFecha = Arr_Programa(nroprog).auxint1
'    Else
'        Exit Sub
'    End If
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda " & NroProg
    End If
    If Arr_Programa(NroProg).Prognro <> 0 Then
        If Not EsNulo(Arr_Programa(NroProg).Auxint1) Then
            UltimoDiaTrabajado = CBool(Arr_Programa(NroProg).Auxint1)
        Else
            'Valor por Default
            UltimoDiaTrabajado = True
        End If
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busqueda no encontrada "
        End If
        Exit Sub
    End If

    'Busco la ultima fase
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Busco la ultima fase para el empleado " & buliq_empleado!ternro
    End If
    StrSql = "SELECT * FROM fases WHERE empleado = " & buliq_empleado!ternro & _
             " AND real = -1 AND Fases.altfec <= " & ConvFecha(buliq_proceso!profecfin) & _
             " AND (Fases.bajfec >= " & ConvFecha(buliq_proceso!profecini) & " OR Fases.bajfec is null )" & _
             " ORDER BY altfec "
    OpenRecordset StrSql, rs_Fases
    If Not rs_Fases.EOF Then
        dias = 0
        Do While Not rs_Fases.EOF
            fechasSeteadas = False
            
            FechaDesde = IIf(rs_Fases!altfec < buliq_proceso!profecini, buliq_proceso!profecini, rs_Fases!altfec)
            
            If Not EsNulo(rs_Fases!bajfec) Then
                'FechaHasta = IIf(rs_Fases!bajfec < buliq_proceso!profecfin, rs_Fases!bajfec, buliq_proceso!profecfin)
                If rs_Fases!bajfec <= buliq_proceso!profecfin Then
                    FechaHasta = rs_Fases!bajfec
                Else
                    'La baja es fuera del proceso actual ==> Entonces el ultimo dia se toma como trabajado
                    UltimoDiaTrabajado = True
                    FechaHasta = buliq_proceso!profecfin
                End If
            Else
                FechaHasta = buliq_proceso!profecfin
                'Esta activo ==> Entonces el ultimo dia se toma como trabajado
                UltimoDiaTrabajado = True
            End If
                If Not UltimoDiaTrabajado Then
                    If Not EsNulo(rs_Fases!bajfec) Then
                        dias = dias + DateDiff("d", FechaDesde, FechaHasta)
                    Else
                        dias = dias + DateDiff("d", FechaDesde, FechaHasta) + 1
                    End If
                Else
                    dias = dias + DateDiff("d", FechaDesde, FechaHasta) + 1
                End If
            
                If FechaHasta = buliq_proceso!profecfin Then
                      Select Case Day(FechaHasta)
                      Case 31: dias = dias - 1
                      Case 28: dias = dias + 2
                      Case 29: dias = dias + 1
                      End Select
                 End If
            
            rs_Fases.MoveNext
        Loop
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontraron fases para el empleado " & buliq_empleado!ternro
        End If

        'Busco la ultima fase y si es menor a la fecha de proceso toma 0 dias
        StrSql = "SELECT * FROM fases WHERE empleado = " & buliq_empleado!ternro & _
        " AND real = -1 AND Fases.altfec <= " & ConvFecha(buliq_proceso!profecfin) & _
        " AND Fases.bajfec <= " & ConvFecha(buliq_proceso!profecini) & _
        " ORDER BY altfec "
        OpenRecordset StrSql, rs_Fases
        If Not rs_Fases.EOF Then
            dias = 0
        Else
            dias = 30
        End If
    End If

    If dias > 30 Then
        dias = 30
    End If
    
    If Month(FechaDesde) = 2 Then
        If Biciesto(Year(FechaDesde)) Then
            If dias = 29 Then
                dias = 30
            End If
        Else
            If dias = 28 Then
                dias = 30
            End If
        End If
    End If

    Valor = 30 - dias
    Bien = True
End Sub


Public Sub bus_DiasDeIngreso_ContemplaMesAnterior()
' ---------------------------------------------------------------------------------------------
' Descripcion: Calculo la cantidad de dias desde el inicio en el mes
' Autor      : FGZ
' Fecha      : 05/08/2004
' Ultima Mod.: 24/08/2005
' Descripcion: Cuando la fecha de baja sean en un mes anterior a mes de liq.
'               debe calcular la cantidad de dias sobre ese mes.
' Ultima Mod.: FGZ - 08/05/2006
' Ultima Mod.: MBreglia - 07/12/2007
' Descripcion: se agregó un parametro a la busqueda que denota si el ultimo dia se considera trabajado o no.
' ---------------------------------------------------------------------------------------------
Dim dias As Integer

Dim FechaDesde As Date
Dim FechaHasta As Date
Dim fechasSeteadas As Boolean
Dim OtroPeriodo As Boolean

Dim FechaInicio As Date
Dim FechaFin As Date
Dim UltimoDiaTrabajado As Boolean

Dim rs_Fases As New ADODB.Recordset
    
    Bien = False
    Valor = 0
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda " & NroProg
    End If
    If Arr_Programa(NroProg).Prognro <> 0 Then
        If Not EsNulo(Arr_Programa(NroProg).Auxint1) Then
            UltimoDiaTrabajado = CBool(Arr_Programa(NroProg).Auxint1)
        Else
            'Valor por Default
            UltimoDiaTrabajado = True
        End If
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busqueda no encontrada "
        End If
        Exit Sub
    End If
    
    ' Obtener los parametros de la Busqueda
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Busco la ultima fase para el empleado " & buliq_empleado!ternro
    End If

    '24/08/2005 - Esto es nuevo
    FechaInicio = buliq_proceso!profecini
    FechaFin = buliq_proceso!profecfin

    'Busco la ultima fase
    StrSql = "SELECT * FROM fases WHERE empleado = " & buliq_empleado!ternro & _
             " AND real = -1 AND Fases.altfec <= " & ConvFecha(buliq_proceso!profecfin) & _
             " AND (Fases.bajfec >= " & ConvFecha(buliq_proceso!profecini) & " OR Fases.bajfec is null )" & _
             " ORDER BY altfec "
    OpenRecordset StrSql, rs_Fases
    
    If Not rs_Fases.EOF Then
        dias = 0
        Do While Not rs_Fases.EOF
            fechasSeteadas = False
            
            FechaDesde = IIf(rs_Fases!altfec < FechaInicio, FechaInicio, rs_Fases!altfec)
            
            If Not EsNulo(rs_Fases!bajfec) Then
                    FechaHasta = IIf(rs_Fases!bajfec < FechaFin, rs_Fases!bajfec, FechaFin)
                Else
                    FechaHasta = FechaFin
                End If
                
'                If Not EsNulo(rs_Fases!bajfec) Then
'                    dias = dias + DateDiff("d", FechaDesde, FechaHasta)
'                Else
'                    dias = dias + DateDiff("d", FechaDesde, FechaHasta) + 1
'                End If

                'FGZ - 08/05/2006
                If Not UltimoDiaTrabajado Then
                    If Not EsNulo(rs_Fases!bajfec) Then
                        dias = dias + DateDiff("d", FechaDesde, FechaHasta)
                    Else
                        dias = dias + DateDiff("d", FechaDesde, FechaHasta) + 1
                    End If
                Else
                    dias = dias + DateDiff("d", FechaDesde, FechaHasta) + 1
                End If
            
                If FechaHasta = FechaFin Then
                      Select Case Day(FechaHasta)
                      Case 31: dias = dias - 1
                      Case 28: dias = dias + 2
                      Case 29: dias = dias + 1
                      End Select
                 End If
            
            rs_Fases.MoveNext
        Loop
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontraron fases para el empleado " & buliq_empleado!ternro
            Flog.writeline Espacios(Tabulador * 4) & "Busco la ultima fase y si es menor a la fecha de proceso toma los dias del mes anterior"
        End If

        'Busco la ultima fase y si es menor a la fecha de proceso toma los dias del mes anterior
        StrSql = "SELECT * FROM fases WHERE empleado = " & buliq_empleado!ternro & _
        " AND real = -1 AND Fases.altfec <= " & ConvFecha(buliq_proceso!profecfin) & _
        " AND Fases.bajfec <= " & ConvFecha(buliq_proceso!profecini) & _
        " ORDER BY altfec "
        OpenRecordset StrSql, rs_Fases
        If Not rs_Fases.EOF Then
            rs_Fases.MoveLast
            If Not EsNulo(rs_Fases!bajfec) Then
                If rs_Fases!bajfec < buliq_proceso!profecini Then
                    FechaInicio = C_Date(CDate("01/" & Month(rs_Fases!bajfec) & "/" & Year(rs_Fases!bajfec)))
                    FechaFin = C_Date(DateAdd("d", -1, DateAdd("m", 1, CDate("01/" & Month(rs_Fases!bajfec) & "/" & Year(rs_Fases!bajfec)))))
                End If
            Else
            
            End If
            rs_Fases.MoveFirst
            
            dias = 0
            Do While Not rs_Fases.EOF
                fechasSeteadas = False
                FechaDesde = IIf(rs_Fases!altfec < FechaInicio, FechaInicio, rs_Fases!altfec)
                If Not EsNulo(rs_Fases!bajfec) Then
                        FechaHasta = IIf(rs_Fases!bajfec < FechaFin, rs_Fases!bajfec, FechaFin)
                    Else
                        FechaHasta = FechaFin
                    End If
                    
                    If Not UltimoDiaTrabajado Then
                        If Not EsNulo(rs_Fases!bajfec) Then
                            If DateDiff("d", FechaDesde, FechaHasta) > 0 Then
                                dias = dias + DateDiff("d", FechaDesde, FechaHasta)
                            End If
                        Else
                         If DateDiff("d", FechaDesde, FechaHasta) + 1 > 0 Then
                                dias = dias + DateDiff("d", FechaDesde, FechaHasta) + 1
                         End If
                        End If
                      Else
                         dias = dias + DateDiff("d", FechaDesde, FechaHasta) + 1
                     End If
                
                If FechaHasta = FechaFin Then
                      Select Case Day(FechaHasta)
                      Case 31: dias = dias - 1
                      Case 28: dias = dias + 2
                      Case 29: dias = dias + 1
                      End Select
                 End If
                
                rs_Fases.MoveNext
            Loop
        Else
            dias = 30
        End If
    End If

    If dias > 30 Then
        dias = 30
    End If
    
    If Month(FechaDesde) = 2 Then
        If Biciesto(Year(FechaDesde)) Then
            If dias = 29 Then
                dias = 30
            End If
        Else
            If dias = 28 Then
                dias = 30
            End If
        End If
    End If

    Valor = 30 - dias
    Bien = True
End Sub


Public Sub bus_ValorEnOtroLegajo()
' ---------------------------------------------------------------------------------------------
' Descripcion: Sumo los valores de un concepto o acumulador en el mes que se esta liquidando
'               para otro legajo (si es que existe) que tenga el mismo nro de cuil.
' Autor      : FGZ
' Fecha      : 03/08/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim EsAcumulador As Boolean
Dim ConAcu As Long
Dim Monto As Boolean

Dim Aux_Monto As Double
Dim Aux_Cantidad As Double
Dim Aux_Cuil As String
Dim Aux_Tercero As Long
Dim Aux_Cliqnro As Long
Dim NoExiste As Boolean

'Dim Param_cur As New ADODB.Recordset
Dim rs_Cuil As New ADODB.Recordset
Dim rs_cabliq As New ADODB.Recordset
Dim rs_AcuLiq As New ADODB.Recordset
Dim rs_Detliq As New ADODB.Recordset

    Bien = False
    Valor = 0
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda "
    End If
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur

    If Arr_Programa(NroProg).Prognro <> 0 Then
        EsAcumulador = IIf(Arr_Programa(NroProg).Auxint1 = 1, False, True)
        ConAcu = Arr_Programa(NroProg).Auxint3
        Monto = IIf(Arr_Programa(NroProg).Auxint2 = 1, False, True)
        
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Parametros cargados "
        End If
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busqueda no encontrada " & NroProg
        End If
        Exit Sub
    End If

    'Busco el nro de cuil del empleado
    StrSql = " SELECT cuil.nrodoc FROM tercero " & _
             " INNER JOIN ter_doc cuil ON (tercero.ternro = cuil.ternro AND cuil.tidnro = 10) " & _
             " WHERE tercero.ternro = " & buliq_empleado!ternro
    OpenRecordset StrSql, rs_Cuil
    If Not rs_Cuil.EOF Then
        Aux_Cuil = Left(CStr(rs_Cuil!nrodoc), 13)
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline "Error al obtener los datos del cuil"
        End If
        Exit Sub
    End If

    'Busco otro empleado de otra empresa que tenga el mismo nro de cuil
    StrSql = " SELECT cuil.nrodoc, tercero.ternro FROM tercero "
    StrSql = StrSql & " INNER JOIN ter_doc cuil ON (tercero.ternro = cuil.ternro AND cuil.tidnro = 10) "
    StrSql = StrSql & " WHERE tercero.ternro <> " & buliq_empleado!ternro
    StrSql = StrSql & " AND nrodoc = '" & Aux_Cuil & "'"
    If rs_Cuil.State = adStateOpen Then rs_Cuil.Close
    OpenRecordset StrSql, rs_Cuil
    
    If rs_Cuil.EOF Then
        If CBool(USA_DEBUG) Then
            Flog.writeline "Error al obtener los datos del cuil"
        End If
        NoExiste = True
    End If
    
    If NoExiste Then
        Valor = 0
        Bien = True
        Exit Sub
    End If
    
    Do While Not rs_Cuil.EOF
        Aux_Tercero = rs_Cuil!ternro
        NoExiste = False

        'busco la cabecera de liquidacion para
        StrSql = "SELECT * FROM proceso "
        StrSql = StrSql & " INNER JOIN cabliq ON cabliq.pronro = proceso.pronro "
        StrSql = StrSql & " INNER JOIN empleado ON cabliq.empleado = empleado.ternro "
        StrSql = StrSql & " WHERE proceso.pliqnro =" & buliq_periodo!PliqNro
        StrSql = StrSql & " AND empleado.ternro =" & Aux_Tercero
        OpenRecordset StrSql, rs_cabliq
        If Not rs_cabliq.EOF Then
            Aux_Cliqnro = rs_cabliq!cliqnro
        Else
            Bien = False
            Aux_Cliqnro = 0
        End If
        If Aux_Cliqnro <> 0 Then
            If EsAcumulador Then
                StrSql = "SELECT alcant, almonto FROM acu_liq "
                StrSql = StrSql & " WHERE cliqnro =" & Aux_Cliqnro
                StrSql = StrSql & " AND acunro =" & ConAcu
                OpenRecordset StrSql, rs_AcuLiq
            
                If Not rs_AcuLiq.EOF Then
                    If Not Monto Then
                        Valor = Valor + rs_AcuLiq!alcant
                    Else
                        Valor = Valor + rs_AcuLiq!almonto
                    End If
                    Bien = True
                Else
                    Bien = True
                    Valor = 0
                End If
            Else
                StrSql = "SELECT dlicant, dlimonto FROM detliq "
                StrSql = StrSql & " WHERE cliqnro =" & Aux_Cliqnro
                StrSql = StrSql & " AND concnro =" & ConAcu
                    OpenRecordset StrSql, rs_Detliq
                If Not rs_Detliq.EOF Then
                    If Not Monto Then
                        Valor = Valor + rs_Detliq!dlicant
                    Else
                        Valor = Valor + rs_Detliq!dlimonto
                    End If
                    Bien = True
                Else
                    Bien = True
                    Valor = 0
                End If
            End If
        End If
        
        rs_Cuil.MoveNext
    Loop
    Bien = True
    
If rs_Cuil.State = adStateOpen Then rs_Cuil.Close
Set rs_Cuil = Nothing

If rs_cabliq.State = adStateOpen Then rs_cabliq.Close
Set rs_cabliq = Nothing
    
If rs_AcuLiq.State = adStateOpen Then rs_AcuLiq.Close
Set rs_AcuLiq = Nothing
    
If rs_Detliq.State = adStateOpen Then rs_Detliq.Close
Set rs_Detliq = Nothing
    
End Sub


Public Sub bus_DiasEnMesSegunFase()
' ---------------------------------------------------------------------------------------------
' Descripcion: Calculo la cantidad en el mes segun fases.
' Autor      : FGZ
' Fecha      : 12/08/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim dias As Integer

Dim FechaDesde As Date
Dim FechaHasta As Date

'Dim Param_cur As New ADODB.Recordset
Dim rs_Fases As New ADODB.Recordset
    
    Bien = False
    Valor = 0
    
'    ' Obtener los parametros de la Busqueda
'    StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
'    'OpenRecordset StrSql, Param_cur
'
'    If Arr_Programa(NroProg).Prognro <> 0 Then
'        TipoFecha = Arr_Programa(nroprog).auxint1
'    Else
'        Exit Sub
'    End If

    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Busco la ultima fase para el empleado " & buliq_empleado!ternro
    End If

    'Busco la ultima fase
    StrSql = "SELECT * FROM fases WHERE empleado = " & buliq_empleado!ternro & _
             " AND sueldo = -1 " & _
             " AND altfec <= " & ConvFecha(buliq_proceso!profecfin) & _
             " ORDER BY altfec "
    OpenRecordset StrSql, rs_Fases
    If Not rs_Fases.EOF Then
        rs_Fases.MoveLast
        FechaDesde = IIf(rs_Fases!altfec < buliq_proceso!profecini, buliq_proceso!profecini, rs_Fases!altfec)
        
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Fecha desde : " & FechaDesde
        End If
        
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "si la fecha de de baja es mayor a la fecha de fin del proceso, "
            Flog.writeline Espacios(Tabulador * 4) & "la fecha hasta seria la fecha de fin del proceso"
        End If
        ' si la fecha de de baja es mayor a la fecha de fin del proceso,
        ' la fecha hasta seria la fecha de fin del proceso
        If Not EsNulo(rs_Fases!bajfec) Then
            If rs_Fases!bajfec >= buliq_proceso!profecini And rs_Fases!bajfec <= buliq_proceso!profecfin Then
                FechaHasta = rs_Fases!bajfec
            Else
                Flog.writeline Espacios(Tabulador * 4) & "No se encontró fases para el empleado " & buliq_empleado!ternro
                FechaHasta = FechaDesde
            End If
        Else
            'Busco si tiene fecha de baja prevista
            If Not EsNulo(buliq_empleado!empfbajaprev) Then
                If buliq_empleado!empfbajaprev <= buliq_periodo!pliqhasta And buliq_empleado!empfbajaprev >= buliq_periodo!pliqdesde Then
                    FechaHasta = buliq_empleado!empfbajaprev
                Else
                    FechaHasta = buliq_proceso!profecfin
                End If
            Else
                FechaHasta = buliq_proceso!profecfin
            End If
        End If
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Fecha hasta : " & FechaHasta
        End If
        
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontraron fases para el empleado " & buliq_empleado!ternro
        End If
        Bien = False
        Exit Sub
    End If


    dias = DateDiff("d", FechaDesde, FechaHasta) + 1
    If dias > 30 Then
        dias = 30
    End If
    If Month(FechaDesde) = 2 Then
        If Biciesto(Year(FechaDesde)) Then
            If dias = 29 Then
                dias = 30
            End If
        Else
            If dias = 28 Then
                dias = 30
            End If
        End If
    End If
    
    Valor = dias
    Bien = True
End Sub


Public Sub bus_Antiguedad_Por_Acumulador()
' ---------------------------------------------------------------------------------------------
' Descripcion:
'
' Autor      : FGZ
' Fecha      : 25/08/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------

Dim nroAcu As Long          ' Nro de Acumulador
Dim Con_Fases As Boolean    ' True  - Calculo con Fases
                            ' False - Calculo sin Fases
Dim Monto As Boolean        ' True  - MOnto
                            ' False - Cantidad
Dim Incluye As Integer      ' 0  - No Incluye
                            ' 1  - Proceso Actual
                            ' 2  - Periodo Actual sin proceso actual
                            ' 3  - Periodo Actual con Proceso actual

Dim Resultado As Integer    ' 1 - en dias
                            ' 2 - en meses
                            ' 3 - en años

Dim MesDesde As Integer
Dim AnioDesde As Integer
Dim MesHasta As Integer
Dim AnioHasta As Integer
Dim Cantidad As Double

Dim UsaActual As Boolean

Dim rs_Acu_Mes As New ADODB.Recordset
Dim rs_Fases As New ADODB.Recordset

    Bien = False
    Valor = 0

    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda " & NroProg
    End If
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        nroAcu = Arr_Programa(NroProg).Auxint1
        Resultado = Arr_Programa(NroProg).Auxint3
        Monto = IIf(Arr_Programa(NroProg).Auxint5 = -1 Or Arr_Programa(NroProg).Auxint5 = 2, True, False)
        Incluye = CInt(Arr_Programa(NroProg).Auxint4)
        Con_Fases = CBool(Arr_Programa(NroProg).Auxlog1)
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontré la Busqueda " & NroProg
        End If
        Exit Sub
    End If


Select Case Incluye
Case 0: 'No icluye ni Periodo actual ni proceso actual
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "No icluye ni Periodo actual ni proceso actual "
    End If

    If buliq_periodo!pliqmes = 1 Then
        MesHasta = 12
        AnioHasta = buliq_periodo!pliqanio - 1
    Else
        MesHasta = buliq_periodo!pliqmes - 1
        AnioHasta = buliq_periodo!pliqanio
    End If
    UsaActual = False
Case 1: ' Incluye Proceso Actual y no periodo actual
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Incluye Proceso Actual y no periodo actual "
    End If

    If buliq_periodo!pliqmes = 1 Then
        MesHasta = 12
        AnioHasta = buliq_periodo!pliqanio - 1
    Else
        MesHasta = buliq_periodo!pliqmes - 1
        AnioHasta = buliq_periodo!pliqanio
    End If
    UsaActual = True
Case 2: 'Incluye Periodo Actual y el Proceso Actual
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Incluye Periodo Actual y el Proceso Actual "
    End If

    MesHasta = buliq_periodo!pliqmes
    AnioHasta = buliq_periodo!pliqanio
    UsaActual = True
Case 3: 'Incluye Periodo Actual y no el Proceso Actual
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Incluye Periodo Actual y no el Proceso Actual "
    End If

    MesHasta = buliq_periodo!pliqmes
    AnioHasta = buliq_periodo!pliqanio
    UsaActual = False
End Select

' Modificado para que tome el promedio para los jornales
If Con_Fases Then
    'Busco la ultima fase activa
    StrSql = "SELECT * FROM fases WHERE estado = -1 AND empleado = " & buliq_empleado!ternro
    OpenRecordset StrSql, rs_Fases
    
    If Not rs_Fases.EOF Then
        rs_Fases.MoveLast
            MesDesde = Month(rs_Fases!altfec)
            AnioDesde = Year(rs_Fases!altfec)
    End If
Else
    MesDesde = Month(buliq_empleado!empfaltagr)
    AnioDesde = Year(buliq_empleado!empfaltagr)
End If

If AnioDesde = AnioHasta Then
    If MesDesde = MesHasta Then
        StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                 " AND acunro =" & nroAcu & _
                 " AND " & AnioDesde & " = amanio " & _
                 " AND ammes =" & MesDesde
    Else
        StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                 " AND acunro =" & nroAcu & _
                 " AND " & AnioDesde & " = amanio " & _
                 " AND ammes >= " & MesDesde & " AND  ammes <=" & MesHasta
    End If
Else
    StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
             " AND acunro =" & nroAcu & _
             " AND ((" & AnioDesde & " = amanio AND ammes >= " & MesDesde & ") OR " & _
             " (amanio > " & AnioDesde & " AND amanio < " & AnioHasta & ") OR " & _
             " (ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))"
End If
StrSql = StrSql & " ORDER BY amanio, ammes"
OpenRecordset StrSql, rs_Acu_Mes

Do While Not rs_Acu_Mes.EOF
    Valor = Valor + IIf(Not IsNull(rs_Acu_Mes!ammonto), rs_Acu_Mes!ammonto, 0)
    Cantidad = Cantidad + IIf(Not IsNull(rs_Acu_Mes!amcant), rs_Acu_Mes!amcant, 0)
    
    rs_Acu_Mes.MoveNext
Loop

' Si es desde el mes actual ==> busco el acu_liq de este proceso
If UsaActual Then
    If objCache_Acu_Liq_Monto.EsSimboloDefinido(CStr(nroAcu)) Then
        Valor = Valor + objCache_Acu_Liq_Monto.Valor(CStr(nroAcu))
        Cantidad = Cantidad + objCache_Acu_Liq_Cantidad.Valor(CStr(nroAcu))
    End If
End If


If Not Monto Then
    Valor = Cantidad
End If

Select Case Resultado
Case 1: ' En dias
    'dias: REDONDEAR(RESIDUO(D3;30);0)
    Valor = Round((Valor Mod 360) Mod 30, 0)
Case 2: ' En meses
    Valor = Round((Valor Mod 360) Mod 12, 0)
    'meses: TRUNCAR(RESIDUO(D3;360)/30;0)
Case 3: ' en años
    'años: TRUNCAR(D3/360;0)
    Valor = CInt(Valor / 360)
End Select
Bien = True

' Cierro todo y libero
If rs_Acu_Mes.State = adStateOpen Then rs_Acu_Mes.Close
Set rs_Acu_Mes = Nothing

If rs_Fases.State = adStateOpen Then rs_Fases.Close
Set rs_Fases = Nothing
End Sub


Public Function Dias_Licencias_Mes_Anterior(ByVal Tercero As Long, ByVal FechaDeInicio As Date, ByVal FechaDeFin As Date) As Integer
Dim rs_Lic As New ADODB.Recordset
Dim dias As Integer

    dias = 0

    StrSql = "SELECT * FROM emp_lic WHERE (empleado = " & Tercero & " )" & _
             " AND elfechadesde <=" & ConvFecha(FechaDeFin) & _
             " AND elfechahasta >= " & ConvFecha(FechaDeInicio)
    OpenRecordset StrSql, rs_Lic
        
    Do While Not rs_Lic.EOF
        dias = CantidadDeDias(FechaDeInicio, FechaDeFin, rs_Lic!elfechadesde, rs_Lic!elfechahasta)
        rs_Lic.MoveNext
    Loop
        
'    If Month(FechaDeInicio) = 2 Then 'Febrero
'        If Biciesto(Year(FechaDeInicio)) Then
'            If dias >= 29 Then
'                dias = 30
'            End If
'        Else
'            If dias >= 28 Then
'                dias = 30
'            End If
'        End If
'    Else
'        If dias > 30 Then
'            dias = 30
'        End If
'    End If
        
    Dias_Licencias_Mes_Anterior = dias
    
    'cierro
    If rs_Lic.State = adStateOpen Then rs_Lic.Close
    Set rs_Lic = Nothing
End Function

Public Sub bus_Vac_No_Gozadas_A_Pagar(ByVal concnro As Long, ByVal prog As Long)
' ---------------------------------------------------------------------------------------------
' Descripcion: Vacaciones no Gozadas a Pagar
' Autor      : FGZ
' Fecha      : 15/09/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Fec_Fin As Date

Dim Maximo       As Double
Dim Tolerancia   As Double
Dim Inas_Ingreso As Double
Dim Diasvac     As Double
Dim DiasVacTomados  As Double
Dim Genera       As Boolean
Dim Propor       As Boolean

'Dim Param_cur As New ADODB.Recordset
Dim rs_Emp_Lic As New ADODB.Recordset
Dim rs_Fases As New ADODB.Recordset
Dim rs_NovEmp As New ADODB.Recordset
Dim rs_DiasVac As New ADODB.Recordset

    Bien = False
    Valor = 0
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "La fecha fin se toma a la fecha de baja de la ultima fase "
        Flog.writeline Espacios(Tabulador * 4) & "Si no esta dado de baja tomo la fecha de baja prevista y si "
        Flog.writeline Espacios(Tabulador * 4) & " si la fecha de baja prevista es nula tomo la fecha fin del proceso "
    End If
    
    StrSql = "SELECT * FROM fases WHERE empleado = " & buliq_empleado!ternro & _
             " AND real = -1 " & _
             " ORDER BY altfec "
    OpenRecordset StrSql, rs_Fases
    
    If Not rs_Fases.EOF Then
        rs_Fases.MoveLast
        If Not EsNulo(rs_Fases!bajfec) Then
            Fec_Fin = rs_Fases!bajfec
        Else
            If Not EsNulo(buliq_empleado!empfbajaprev) Then
                Fec_Fin = buliq_empleado!empfbajaprev
            Else
                Fec_Fin = buliq_proceso!profecfin
            End If
        End If
    End If
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "La fecha fin es:  " & Fec_Fin
    End If

    
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        Maximo = Arr_Programa(NroProg).Auxint1
        Tolerancia = Arr_Programa(NroProg).Auxint2
        Inas_Ingreso = 0
    Else
        Exit Sub
    End If

    Diasvac = 0
    Genera = Bien
    
    StrSql = "SELECT sum(vacdiascor.vdiascorcant) suma FROM vacdiascor "
    StrSql = StrSql & " INNER JOIN vacacion ON vacacion.vacnro = vacdiascor.vacnro "
    StrSql = StrSql & " WHERE vacdiascor.ternro =" & buliq_empleado!ternro
    StrSql = StrSql & " AND vacacion.vacanio <= " & Year(Fec_Fin)
    OpenRecordset StrSql, rs_DiasVac
    If Not rs_DiasVac.EOF Then
        Diasvac = IIf(Not EsNulo(rs_DiasVac!Suma), rs_DiasVac!Suma, 0)
    End If

    DiasVacTomados = Diasvac
    Propor = True


    'Se le descuenta los dias de vacaciones que ya estan marcados como liquidados en el pago /dto de la Gestion integral
    StrSql = "SELECT * FROM emp_lic "
    StrSql = StrSql & " INNER JOIN vacpagdesc ON vacpagdesc.emp_licnro = emp_lic.emp_licnro "
    StrSql = StrSql & " INNER JOIN lic_vacacion ON lic_vacacion.emp_licnro = emp_lic.emp_licnro "
    StrSql = StrSql & " INNER JOIN vacacion ON vacacion.vacnro = lic_vacacion.vacnro "
    StrSql = StrSql & " WHERE (empleado = " & buliq_empleado!ternro & " )"
    StrSql = StrSql & " AND (tdnro = 2) "
    StrSql = StrSql & " AND elfechahasta < " & ConvFecha(Fec_Fin)
    StrSql = StrSql & " AND vacpagdesc.pago_dto = 3 and not vacpagdesc.pronro is null "
    OpenRecordset StrSql, rs_Emp_Lic
    
    Do While Not rs_Emp_Lic.EOF
        If rs_Emp_Lic!vacanio = Year(Fec_Fin) Then
            DiasVacTomados = DiasVacTomados - rs_Emp_Lic!elcantdias
            Propor = True
        Else
            If rs_Emp_Lic!vacanio + 1 = Year(Fec_Fin) Then
                DiasVacTomados = DiasVacTomados - rs_Emp_Lic!elcantdias
                Propor = False
            End If
        End If
        
        rs_Emp_Lic.MoveNext
    Loop
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Se le descuentan " & (Diasvac - DiasVacTomados) & " dias de vacaciones que ya estan marcados como liquidados"
    End If
    
    'PROPORCIONAR  LA CANTIDAD TOTAL DE DIAS CORRESPONDIENTES O LA CANT. PENDIENTE EN FUNCION  A LA FECHA DE BAJA
    If Propor Then
        Diasvac = DiasVacTomados / 365 * ((Month(Fec_Fin) - 1) * 30 + Day(Fec_Fin))
    Else
        Diasvac = Diasvac / 365 * ((Month(Fec_Fin) - 1) * 30 + Day(Fec_Fin)) + DiasVacTomados
    End If

    Diasvac = IIf(Fix(Diasvac) = Diasvac, Diasvac, Fix(Diasvac + 1))
    If Diasvac < 0 Then
        Diasvac = 0
    End If

    Valor = IIf(Diasvac < 0, 0, Diasvac)
    Bien = True

End Sub



Public Sub bus_Licencias_Horas_A_Justificar()
' ---------------------------------------------------------------------------------------------
' Descripcion: Retorna las horas a JustficarDias de Licencias entre dos fechas (de un tipo o de todos los tipos)
' Autor      : FGZ
' Fecha      : 14/01/2004
' Ultima Mod.: 24/08/2006 - Martin Ferraro - Se agrego estado a las lic
' Descripcion:
' ---------------------------------------------------------------------------------------------

Dim TipoLicencia As Long    'Tipo de Estructura
Dim Todas As Boolean        'Todos los tipos

Dim dias As Integer
Dim horas As Double
Dim Ultimo_Multiplicador_de_Horas As Double
Dim SumaHoras As Integer

Dim SumaDias As Integer
Dim SumaDiasYaGenerados As Integer
Dim FechaDeInicio As Date
Dim FechaDeFin As Date
Dim TipoDia_Ok As Boolean
Dim Dias_Mes_Anterior As Integer

Dim rs_Estructura As New ADODB.Recordset
Dim rs_tipd_con As New ADODB.Recordset
Dim rs_Lic As New ADODB.Recordset

Dim Solo_Aprobadas As Integer


    Bien = False
    Valor = 0

    ' Obtener los parametros de la Busqueda
    If Arr_Programa(NroProg).Prognro <> 0 Then
        Todas = CBool(Arr_Programa(NroProg).Auxlog1)
        If Not Todas Then
            TipoLicencia = Arr_Programa(NroProg).Auxint1
        End If
        Solo_Aprobadas = IIf(Not EsNulo(Arr_Programa(NroProg).Auxlog4), CBool(Arr_Programa(NroProg).Auxlog4), 0)
    Else
        Exit Sub
    End If

'FGZ - 29/01/2004
FechaDeInicio = buliq_proceso!profecini
FechaDeFin = buliq_proceso!profecfin

' Primero Busco  los tipos de dias asociados a los conceptos
If Todas Then 'Todos los tipos de Licencias
    StrSql = " SELECT * FROM tipd_con " & _
             " WHERE concnro =" & Buliq_Concepto(Concepto_Actual).concnro
Else 'Todos las Licencias del tipo especificado
    StrSql = " SELECT * FROM tipd_con " & _
             " WHERE concnro =" & Buliq_Concepto(Concepto_Actual).concnro & _
             " AND tdnro = " & TipoLicencia
End If
OpenRecordset StrSql, rs_tipd_con

Do While Not rs_tipd_con.EOF
    TipoDia_Ok = True
    If Not EsNulo(rs_tipd_con!tenro) Then
        If rs_tipd_con!tenro <> 0 Then
            StrSql = " SELECT * FROM his_estructura " & _
                     " WHERE ternro = " & buliq_empleado!ternro & " AND " & _
                     " tenro =" & rs_tipd_con!tenro & " AND " & _
                     " estrnro = " & rs_tipd_con!estrnro & " AND " & _
                     " (htetdesde <= " & ConvFecha(FechaDeFin) & ") AND " & _
                     " ((" & ConvFecha(FechaDeFin) & " <= htethasta) or (htethasta is null))"
            OpenRecordset StrSql, rs_Estructura
            If rs_Estructura.EOF Then
                TipoDia_Ok = False
            End If
        End If
    End If

    If CBool(TipoDia_Ok) Then
        StrSql = "SELECT * FROM emp_lic " & _
                 " INNER JOIN tipdia ON emp_lic.tdnro = tipdia.tdnro " & _
                 " WHERE (empleado = " & buliq_empleado!ternro & " )" & _
                 " AND emp_lic.tdnro =" & rs_tipd_con!tdnro & _
                 " AND elfechadesde <=" & ConvFecha(FechaDeFin) & _
                 " AND elfechahasta >= " & ConvFecha(FechaDeInicio)
        'MAF - Estado lic - 24/08/2006
        If Solo_Aprobadas = -1 Then
           StrSql = StrSql & " AND licestnro = 2 "
        End If
                 
        OpenRecordset StrSql, rs_Lic

        SumaDias = 0
        SumaHoras = 0
        dias = 0
        horas = 0
        Do While Not rs_Lic.EOF
            dias = CantidadDeDias(FechaDeInicio, FechaDeFin, rs_Lic!elfechadesde, rs_Lic!elfechahasta)
            
            'reviso si la licencia es completa
            If Todas Then 'Todos los tipos de Licencias
                Dias_Mes_Anterior = Dias_Licencias_Mes_Anterior(buliq_empleado!ternro, DateAdd("m", -1, FechaDeInicio), FechaDeInicio - 1)
                If Dias_Mes_Anterior = 30 Then
                    'calculo los dias reales del mes
                    Dias_Mes_Anterior = DateDiff("d", DateAdd("m", -1, FechaDeInicio), FechaDeInicio - 1) + 1
                    dias = dias + (Dias_Mes_Anterior - 30)
                End If
            Else
                ' solo este tipo
                If rs_Lic!elfechadesde <= DateAdd("m", -1, FechaDeInicio) Then
                    If rs_Lic!elfechahasta >= DateAdd("m", -1, FechaDeFin) Then
                        'Para ajustar la cantidad de dias cuando la lic sobrepasa al mes y fue topeada
                        Dias_Mes_Anterior = DateDiff("d", DateAdd("m", -1, FechaDeInicio), FechaDeInicio - 1) + 1
                        dias = dias + (Dias_Mes_Anterior - 30)
                    End If
                End If
            End If
            'calculo la cantidad de horas
            If Not EsNulo(rs_Lic!tdcanthoras) Then
                horas = dias * rs_Lic!tdcanthoras
                Ultimo_Multiplicador_de_Horas = rs_Lic!tdcanthoras
            Else
                horas = 0
                Ultimo_Multiplicador_de_Horas = 0
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "Tipo de Licencia sin configuras las Horas. " & rs_Lic!tdnro & " - " & rs_Lic!tddesc
                End If
            End If
            
            SumaDias = SumaDias + dias
            SumaHoras = SumaHoras + horas
            
            'Marco la licencia para que no se pueda Borrar
            StrSql = "UPDATE emp_lic SET pronro = " & NroProc & _
                     " WHERE emp_licnro = " & rs_Lic!emp_licnro
            objConn.Execute StrSql, , adExecuteNoRecords

            rs_Lic.MoveNext
        Loop
    End If
    rs_tipd_con.MoveNext
Loop

' --------------------------------------------
' SumaDias no debe seperar 30 dias
' --------------------------------------------
'If Month(FechaDeInicio) = 2 Then 'Febrero
'    If Biciesto(Year(FechaDeInicio)) Then
'        If SumaDias >= 29 Then
'            Valor = 30
'        Else
'            Valor = SumaDias
'        End If
'    Else
'        If SumaDias >= 28 Then
'            Valor = 30
'        Else
'            Valor = SumaDias
'        End If
'    End If
'Else
'    If SumaDias > 30 Then
'        Valor = 30
'    Else
'        Valor = SumaDias
'    End If
'End If
Valor = SumaHoras
If Month(FechaDeInicio) = 2 Then 'Febrero
    If Biciesto(Year(FechaDeInicio)) Then
        If SumaDias >= 29 Then
            Valor = SumaHoras - (Ultimo_Multiplicador_de_Horas * (SumaDias - 29))
        Else
            Valor = SumaHoras
        End If
    Else
        If SumaDias >= 28 Then
            Valor = Valor = SumaHoras - (Ultimo_Multiplicador_de_Horas * (SumaDias - 28))
        Else
            Valor = SumaHoras
        End If
    End If
Else
    If SumaDias > 30 Then
        Valor = SumaHoras - (Ultimo_Multiplicador_de_Horas * (SumaDias - 30))
    Else
        Valor = SumaHoras
    End If
End If
Bien = True

' Cierro todo y libero
'If Param_cur.State = adStateOpen Then Param_cur.Close
'Set Param_cur = Nothing

If rs_Estructura.State = adStateOpen Then rs_Estructura.Close
Set rs_Estructura = Nothing

If rs_Lic.State = adStateOpen Then rs_Lic.Close
Set rs_Lic = Nothing

If rs_tipd_con.State = adStateOpen Then rs_tipd_con.Close
Set rs_tipd_con = Nothing

End Sub


Public Sub bus_Feriados_Quincena()
' ---------------------------------------------------------------------------------------------
' Descripcion: Calculo la cantidad Feriados en la primer quincena o segunda quincena segun fases.
'               y retorna esa cantidad de dias por el monto (tipicamente 9.5)
' Autor      : FGZ
' Fecha      : 06/10/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim dias As Integer
Dim Monto As Double
Dim Quincena As Integer

Dim FechaDesde As Date
Dim FechaHasta As Date
Dim FechaActual As Date
Dim EsFeriado As Boolean

Dim rs_Fases As New ADODB.Recordset
    
Dim objFeriado As New Feriado

    ' inicializacion de variables
    Set objFeriado.Conexion = objConn
   
    Bien = False
    Valor = 0
    dias = 0
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda "
    End If
    ' Obtener los parametros de la Busqueda
    If Arr_Programa(NroProg).Prognro <> 0 Then
        If IsNumeric(Arr_Programa(NroProg).Auxchar1) Then
            Monto = CDbl(Arr_Programa(NroProg).Auxchar1)
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Monto = " & Monto
            End If
        Else
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "El Monto no es numerico " & Monto
                Flog.writeline Espacios(Tabulador * 4) & "Se utilizará el Monto Default 9.5 "
            End If
            Monto = 9.5
        End If
        Quincena = Arr_Programa(NroProg).Auxint1
        
        If CBool(USA_DEBUG) Then
            If Quincena = 1 Then
                Flog.writeline Espacios(Tabulador * 4) & "Primer Quincena"
            Else
                Flog.writeline Espacios(Tabulador * 4) & "Segunda Quincena"
            End If
        End If
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busqueda no encontrada " & NroProg
        End If
        Exit Sub
    End If

    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Busco la ultima fase para el empleado " & buliq_empleado!ternro
    End If
    
    'Busco la ultima fase
    StrSql = "SELECT * FROM fases WHERE empleado = " & buliq_empleado!ternro & _
             " AND sueldo = -1 " & _
             " AND altfec <= " & ConvFecha(buliq_proceso!profecfin) & _
             " ORDER BY altfec "
    OpenRecordset StrSql, rs_Fases
    If Not rs_Fases.EOF Then
        rs_Fases.MoveLast
        If Quincena = 1 Then
            'Primera quincena
            FechaDesde = IIf(rs_Fases!altfec < buliq_proceso!profecini, buliq_proceso!profecini, rs_Fases!altfec)
        Else
            'Segunda quincena
            FechaDesde = IIf(rs_Fases!altfec < C_Date("16/" & buliq_periodo!pliqmes & "/" & buliq_periodo!pliqanio), C_Date("16/" & buliq_periodo!pliqmes & "/" & buliq_periodo!pliqanio), rs_Fases!altfec)
        End If
        
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "si la fecha de de baja es menor a la fecha de fin de la primer quincena, "
            Flog.writeline Espacios(Tabulador * 4) & "la fecha hasta seria el 15 del mes del proceso"
        End If
        If Quincena = 1 Then
            'Primer quincena
            If Not EsNulo(rs_Fases!bajfec) Then
                If rs_Fases!bajfec < C_Date("15/" & buliq_periodo!pliqmes & "/" & buliq_periodo!pliqanio) Then
                    FechaHasta = rs_Fases!bajfec
                Else
                    FechaHasta = C_Date("15/" & buliq_periodo!pliqmes & "/" & buliq_periodo!pliqanio)
                End If
            Else
                'Busco si tiene fecha de baja prevista
                If Not EsNulo(buliq_empleado!empfbajaprev) Then
                    If buliq_empleado!empfbajaprev < C_Date("15/" & buliq_periodo!pliqmes & "/" & buliq_periodo!pliqanio) Then
                        FechaHasta = buliq_empleado!empfbajaprev
                    Else
                        FechaHasta = C_Date("15/" & buliq_periodo!pliqmes & "/" & buliq_periodo!pliqanio)
                    End If
                Else
                    FechaHasta = C_Date("15/" & buliq_periodo!pliqmes & "/" & buliq_periodo!pliqanio)
                End If
            End If
        Else
            'Segunda quincena
            If Not EsNulo(rs_Fases!bajfec) Then
                If rs_Fases!bajfec < buliq_proceso!profecfin Then
                    FechaHasta = rs_Fases!bajfec
                Else
                    FechaHasta = buliq_proceso!profecfin
                End If
            Else
                'Busco si tiene fecha de baja prevista
                If Not EsNulo(buliq_empleado!empfbajaprev) Then
                    If buliq_empleado!empfbajaprev < buliq_proceso!profecfin Then
                        FechaHasta = buliq_empleado!empfbajaprev
                    Else
                        FechaHasta = buliq_proceso!profecfin
                    End If
                Else
                    FechaHasta = buliq_proceso!profecfin
                End If
            End If
        End If
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontró fases para el empleado " & buliq_empleado!ternro
        End If
        FechaDesde = buliq_proceso!profecini
        FechaHasta = C_Date("15/" & buliq_periodo!pliqmes & "/" & buliq_periodo!pliqanio)
    End If
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Fecha desde : " & FechaDesde
    End If
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Fecha hasta : " & FechaHasta
    End If

    FechaActual = FechaDesde
    Do While FechaActual <= FechaHasta
        
        EsFeriado = objFeriado.Feriado(FechaActual, buliq_empleado!ternro, False)
        
        If EsFeriado Then
            dias = dias + 1
        End If
        FechaActual = FechaActual + 1
    Loop
    
    Valor = dias * Monto
    Bien = True
    
'Cierro todo
If rs_Fases.State = adStateOpen Then rs_Fases.Close
Set rs_Fases = Nothing
Set objFeriado = Nothing
End Sub


Public Sub bus_DiasVac_Antig2()
' ---------------------------------------------------------------------------------------------
' Descripcion: Obtencion del valor de la escala para vacaciones pero la antiguedad.
'               se calcula a la fecha de alta del empleado (empleado.empfaltagr) y no con fases.
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Valor_Grilla(10) As Boolean ' Elemento de una coordenada de una grilla
Dim tipoBus As Long
Dim concnro As Long
Dim prog As Long

Dim tdinteger3 As Integer

Dim ValAnt As Double
Dim Busq As Integer

Dim j As Integer
Dim antig As Boolean
Dim pvariable As Boolean
Dim pvar As Integer
Dim ant As Integer
Dim Continuar As Boolean
Dim Parametros(5) As Integer
Dim grilla_val(10) As Boolean     ' para alojar los valores de:  valgrilla.val(i)

Dim vgrcoor_ant As Long
Dim vgrcoor_pvar As Long

Dim rs_valgrilla As New ADODB.Recordset
Dim rs_cabgrilla As New ADODB.Recordset
Dim rs_tbase As New ADODB.Recordset
Dim TipoBase As Long

Dim NroBusqueda As Long

Dim antdia As Integer
Dim antmes As Integer
Dim antanio As Integer
Dim q As Integer

Dim ValorCoord As Double
Dim Encontro As Boolean
Dim ternro As Long

Dim DiasProporcion As Integer
Dim FactorDivision As Integer

Dim NroVac As Long
Dim cantdias As Integer
Dim Columna As Integer
Dim NroGrilla As Long
'Dim Param_cur As New ADODB.Recordset
Dim dias_trabajados As Integer

Dim FechaAux As Date
Dim Grilla_Ok As Boolean

    Bien = False
    Valor = 0
    ternro = buliq_empleado!ternro
    
    Call Politica(1501, Empleado_Fecha_Fin, Grilla_Ok)
    If Not Grilla_Ok Then
        Flog.writeline "Error cargando configuracion de la Politica 1501"
        Exit Sub
    Else
        DiasProporcion = st_CantidadDias
        FactorDivision = st_FactorDivision
        If FactorDivision = 0 Then
            FactorDivision = 1
        End If
    End If
    
    Call Politica(1502, Empleado_Fecha_Fin, Grilla_Ok)
    If Not Grilla_Ok Then
        Flog.writeline "Error cargando configuracion de la Politica 1502"
        Exit Sub
    Else
        NroGrilla = st_Escala
    End If

    StrSql = "SELECT * FROM cabgrilla " & _
             " WHERE cabgrilla.cgrnro = " & NroGrilla
    OpenRecordset StrSql, rs_cabgrilla

    If rs_cabgrilla.EOF Then
        'La escala de Vacaciones no esta configurada en el tipo de dia para vacaciones
        Exit Sub
    End If
    
    'El tipo Base de la antiguedad
    TipoBase = 4
    
    Continuar = True
    ant = 1
    Do While (ant <= rs_cabgrilla!cgrdimension) And Continuar
        Select Case ant
        Case 1:
            StrSql = "SELECT tipoprog.tprogbase FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_1
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBase = rs_tbase!tprogbase Then
                    Continuar = False
                Else
                    ant = ant + 1
                End If
            End If
            
        Case 2:
            StrSql = "SELECT tipoprog.tprogbase FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_2
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBase = rs_tbase!tprogbase Then
                    Continuar = False
                Else
                    ant = ant + 1
                End If
            End If
        Case 3:
            StrSql = "SELECT tipoprog.tprogbase FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_3
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBase = rs_tbase!tprogbase Then
                    Continuar = False
                Else
                    ant = ant + 1
                End If
            End If
        Case 4:
            StrSql = "SELECT tipoprog.tprogbase FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_4
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBase = rs_tbase!tprogbase Then
                    Continuar = False
                Else
                    ant = ant + 1
                End If
            End If
        Case 5:
            StrSql = "SELECT tipoprog.tprogbase FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_5
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBase = rs_tbase!tprogbase Then
                    Continuar = False
                Else
                    ant = ant + 1
                End If
            End If
        End Select
    Loop


    For j = 1 To rs_cabgrilla!cgrdimension
        Select Case j
        Case ant:
            'la busqueda es la de antiguedad
            Select Case ant
            Case 1:
                NroProg = rs_cabgrilla!grparnro_1
                'Call bus_Anti0(antdia, antmes, antanio)
                Call bus_Antiguedad_A_FechaAlta(antdia, antmes, antanio)
            Case 2:
                NroProg = rs_cabgrilla!grparnro_2
                'Call bus_Anti0(antdia, antmes, antanio)
                Call bus_Antiguedad_A_FechaAlta(antdia, antmes, antanio)
            Case 3:
                NroProg = rs_cabgrilla!grparnro_3
                'Call bus_Anti0(antdia, antmes, antanio)
                Call bus_Antiguedad_A_FechaAlta(antdia, antmes, antanio)
            Case 4:
                NroProg = rs_cabgrilla!grparnro_4
                'Call bus_Anti0(antdia, antmes, antanio)
                Call bus_Antiguedad_A_FechaAlta(antdia, antmes, antanio)
            Case 5:
                NroProg = rs_cabgrilla!grparnro_5
                'Call bus_Anti0(antdia, antmes, antanio)
                Call bus_Antiguedad_A_FechaAlta(antdia, antmes, antanio)
            End Select
            
            'OJO - Supuestamente este tipo de busqueda esta retornando el resultado en meses
            ' si esta busqueda no retorna meses, no va a encontrar el valor
            Parametros(j) = Valor 'Valor trae cantidad de meses
            
'            Call bus_Antiguedad("VACACIONES", c_date("31/12/" & buliq_periodo!pliqanio), antdia, antmes, antanio, q)
'            Parametros(j) = (antanio * 12) + antmes
        Case Else:
            Select Case j
            Case 1:
                NroProg = rs_cabgrilla!grparnro_1
                Call bus_Estructura
            Case 2:
                NroProg = rs_cabgrilla!grparnro_2
                Call bus_Estructura
            Case 3:
                NroProg = rs_cabgrilla!grparnro_3
                Call bus_Estructura
            Case 4:
                NroProg = rs_cabgrilla!grparnro_4
                Call bus_Estructura
            Case 5:
                NroProg = rs_cabgrilla!grparnro_5
                Call bus_Estructura
            End Select
            Parametros(j) = Valor
        End Select
    Next j

    'Busco la primera antiguedad de la escala menor a la del empleado
    ' de abajo hacia arriba
    StrSql = "SELECT * FROM valgrilla WHERE cgrnro = " & NroGrilla
    For j = 1 To rs_cabgrilla!cgrdimension
        If j <> ant Then
            StrSql = StrSql & " AND vgrcoor_" & j & "= " & Parametros(j)
        End If
    Next j
        StrSql = StrSql & " ORDER BY vgrcoor_" & ant & " DESC "
    OpenRecordset StrSql, rs_valgrilla


    Encontro = False
    Do While Not rs_valgrilla.EOF And Not Encontro
'        Call CargarValoresdelaGrilla(rs_valgrilla, grilla_val)
'
'        If ValorCoord >= grilla_val(ant) Then
'            Call BusValor(7, Valor_Grilla, grilla_val, valor, Columna)
'            Bien = True
'        End If
'
'        rs_valgrilla.MoveNext
        Select Case ant
        Case 1:
            If Parametros(ant) >= rs_valgrilla!vgrcoor_1 Then
                 If rs_valgrilla!vgrvalor <> 0 Then
                    cantdias = rs_valgrilla!vgrvalor
                    Encontro = True
                    Columna = rs_valgrilla!vgrorden
                 End If
            End If
        Case 2:
            If Parametros(ant) >= rs_valgrilla!vgrcoor_2 Then
                 If rs_valgrilla!vgrvalor <> 0 Then
                    cantdias = rs_valgrilla!vgrvalor
                    Encontro = True
                    Columna = rs_valgrilla!vgrorden
                 End If
            End If
        Case 3:
            If Parametros(ant) >= rs_valgrilla!vgrcoor_3 Then
                 If rs_valgrilla!vgrvalor <> 0 Then
                    cantdias = rs_valgrilla!vgrvalor
                    Encontro = True
                    Columna = rs_valgrilla!vgrorden
                 End If
            End If
        Case 4:
            If Parametros(ant) >= rs_valgrilla!vgrcoor_4 Then
                 If rs_valgrilla!vgrvalor <> 0 Then
                    cantdias = rs_valgrilla!vgrvalor
                    Encontro = True
                    Columna = rs_valgrilla!vgrorden
                 End If
            End If
        Case 5:
            If Parametros(ant) >= rs_valgrilla!vgrcoor_5 Then
                 If rs_valgrilla!vgrvalor <> 0 Then
                    cantdias = rs_valgrilla!vgrvalor
                    Encontro = True
                    Columna = rs_valgrilla!vgrorden
                 End If
            End If
        End Select
                    
        rs_valgrilla.MoveNext
    Loop
    
    If Not Encontro Then
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No encontró valor en la escala "
        End If
    
        'Busco si existe algun valor para la estructura y ...
        'si hay que carga la columna correspondiente
        StrSql = "SELECT * FROM valgrilla WHERE cgrnro = " & NroGrilla
        StrSql = StrSql & " AND vgrvalor is not null"
        For j = 1 To rs_cabgrilla!cgrdimension
            If j <> ant Then
                StrSql = StrSql & " AND vgrcoor_" & j & "= " & Parametros(j)
            End If
        Next j
        'StrSql = StrSql & " ORDER BY vgrcoor_" & ant & " DESC "
        OpenRecordset StrSql, rs_valgrilla
        If Not rs_valgrilla.EOF Then
            Columna = rs_valgrilla!vgrorden
        Else
            Columna = 1
        End If
        
        
        dias_trabajados = ((antanio * 365) + (antmes * 30) + antdia)
    
        If Parametros(ant) <= 6 Then

            'FactorDivision = 1
            If DiasProporcion = 20 Then
                If (dias_trabajados / DiasProporcion) / 7 * 5 > Fix((dias_trabajados / DiasProporcion) / 7 * 5) Then
                    cantdias = Fix((dias_trabajados / DiasProporcion) / 7 * 5) + 1
                Else
                    cantdias = Fix((dias_trabajados / DiasProporcion) / 7 * 5)
                End If
            Else
                cantdias = Round((dias_trabajados / DiasProporcion) / FactorDivision, 0)
            End If
            Valor = cantdias
            Bien = True
            
        Else
            Flog.writeline "No se encontro la escala para el convenio"
            Bien = False
        End If
    Else
        Valor = cantdias
        Bien = True
    End If
   
    
' Cierro todo y libero
If rs_cabgrilla.State = adStateOpen Then rs_cabgrilla.Close
If rs_valgrilla.State = adStateOpen Then rs_valgrilla.Close

Set rs_cabgrilla = Nothing
Set rs_valgrilla = Nothing
End Sub


Public Sub bus_MesPagoProceso()
' ---------------------------------------------------------------------------------------------
' Descripcion: Mes de la fecha de pago de proceso de liquidacion
' Autor      : FGZ
' Fecha      : 15/11/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
    Bien = False
    Valor = 0
    
    Valor = Month(buliq_proceso!profecpago)
    Bien = True
    
End Sub

Public Sub bus_Partes_Diarios()
' ---------------------------------------------------------------------------------------------
' Descripcion: Calculo de Partes Diarios
' Autor      : Scarpa D.
' Fecha      : 11/02/2005
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Actual As Boolean    'Si es del periodo actual o del anterior
                            
Dim TipoParte As String 'Tipo de parte a buscar
                            
Dim FechaDesde As Date
Dim FechaHasta As Date
Dim mes As Integer
Dim Anio As Integer
Dim rsConsulta As New ADODB.Recordset
Dim StrSql1 As String
Dim Total As Double

    'Obtengo los parametros de la busqueda
    If Arr_Programa(NroProg).Prognro <> 0 Then
        TipoParte = Arr_Programa(NroProg).Auxchar
        Actual = Arr_Programa(NroProg).Auxlog1
        
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Buscando partes de tipo " & TipoParte
            If Actual Then
                Flog.writeline Espacios(Tabulador * 4) & "Periodo Actual"
            Else
                Flog.writeline Espacios(Tabulador * 4) & "Periodo Anterior"
            End If
        End If
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busqueda no encontrada " & NroProg
        End If
        Exit Sub
    End If
    
    'Busco el rango de fechas en el cual tengo que buscar los partes
    If Actual Then
       FechaDesde = buliq_periodo!pliqdesde
       FechaHasta = buliq_periodo!pliqhasta
    Else
       If CInt(buliq_periodo!pliqmes) = 1 Then
          Anio = CInt(buliq_periodo!pliqanio) - 1
          mes = 12
       Else
          Anio = CInt(buliq_periodo!pliqanio)
          mes = CInt(buliq_periodo!pliqmes) - 1
       End If
       
       StrSql1 = " SELECT * FROM periodo WHERE pliqmes = " & mes & " AND pliqanio = " & Anio
       
       OpenRecordset StrSql1, rsConsulta
       
       If rsConsulta.EOF Then
          If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encuentra el periodo para el mes " & mes & " y anio " & Anio
          End If
          Exit Sub
       Else
          FechaDesde = rsConsulta!pliqdesde
          FechaHasta = rsConsulta!pliqhasta
       End If
       
       rsConsulta.Close
       
    End If
    
    'Busco los partes en el rango de fechas
    StrSql1 = " SELECT noved63,tparincpor,tpartipodato "
    StrSql1 = StrSql1 & " From ee_parte "
    StrSql1 = StrSql1 & " INNER JOIN ee_tipo_parte ON ee_tipo_parte.tparnro = ee_parte.tparnro "
    StrSql1 = StrSql1 & " Where ternro = " & buliq_empleado!ternro
    StrSql1 = StrSql1 & " AND fecnov63 >= " & ConvFecha(FechaDesde)
    StrSql1 = StrSql1 & " AND fecnov63 <= " & ConvFecha(FechaHasta)
    StrSql1 = StrSql1 & " AND ee_parte.tparnro IN (" & TipoParte & ")"
       
    OpenRecordset StrSql1, rsConsulta
    
    Total = 0
    
    Do Until rsConsulta.EOF
        Select Case CLng(rsConsulta!tpartipodato)
          Case 1:
              If IsNull(rsConsulta!tparincpor) Then
                Total = Total + (CDbl(rsConsulta!noved63) / 60)
              Else
                If CDbl(rsConsulta!tparincpor) <> 0 Then
                    Total = Total + (((CDbl(rsConsulta!noved63) / 60) * rsConsulta!tparincpor) / 100)
                Else
                    Total = Total + (CDbl(rsConsulta!noved63) / 60)
                End If
              End If
          Case 4, 6:
              If IsNull(rsConsulta!tparincpor) Then
                Total = Total + CDbl(rsConsulta!noved63)
              Else
                If CDbl(rsConsulta!tparincpor) <> 0 Then
                    Total = Total + ((CDbl(rsConsulta!noved63) * rsConsulta!tparincpor) / 100)
                Else
                    Total = Total + CDbl(rsConsulta!noved63)
                End If
              End If
          End Select
    
       rsConsulta.MoveNext
    Loop

Bien = True
Valor = Total
End Sub

Public Sub bus_BAE()
' ---------------------------------------------------------------------------------------------
' Descripcion: Calculo de BAE
' Autor      : Scarpa D.
' Fecha      : 11/02/2005
' Ultima Mod.: FGZ - 02/05/2007
' Descripcion: bus_BAE Cambio en la fecha hasta de penalidades para meses que no sean marzo
' ---------------------------------------------------------------------------------------------
Dim Actual As Boolean    'Si es del periodo actual o del anterior
                            
Dim TipoBAE As Integer 'Tipo de BAE
                            
Dim FechaDesde As Date
Dim FechaHasta As Date
Dim FechaHastaPenalidades As Date
Dim mes As Integer
Dim Anio As Integer
Dim rsConsulta As New ADODB.Recordset
Dim StrSql1 As String
Dim Total As Double
Dim Anual As Boolean

    'Obtengo los parametros de la busqueda
    If Arr_Programa(NroProg).Prognro <> 0 Then
        TipoBAE = Arr_Programa(NroProg).Auxint1
        Actual = Arr_Programa(NroProg).Auxlog1
        Anual = IIf(Not EsNulo(Arr_Programa(NroProg).Auxlog2), CBool(Arr_Programa(NroProg).Auxlog2), False)
        
        If CBool(USA_DEBUG) Then
            If Actual Then
                Flog.writeline Espacios(Tabulador * 4) & "Periodo Actual"
            Else
                Flog.writeline Espacios(Tabulador * 4) & "Periodo Anterior"
            End If
        End If
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busqueda no encontrada " & NroProg
        End If
        Exit Sub
    End If
    
    'HJI 19-08-2005
    'Si Estamos en Marzo lo tomo como anual
    'Falta si la persona esta de baja lo tomo como anual
    If Month(buliq_periodo!pliqdesde) = 3 Then
        Anual = True
        'FGZ - 08/03/2007 - Agregué este log
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Calculo ANUAL"
        End If
        'FGZ - 08/03/2007 - Agregué este log
    End If
        
    'HJI 10-08-2005
    'Las Penalidades se buscan hasta fin de mes de la liquidacion o hasta el 31/12/año anterior
    If Anual Then
        FechaHastaPenalidades = C_Date("31/12/" & CStr(Year(buliq_periodo!pliqhasta) - 1))
    Else
        'FGZ - 02/05/2007 - Cambio en la fecha hasta de penalidades
        'FechaHastaPenalidades = buliq_periodo!pliqhasta
        FechaHastaPenalidades = C_Date("31/12/" & CStr(Year(buliq_periodo!pliqhasta)))
    End If
    'FGZ - 08/03/2007 - Agregué este log
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Fecha Hasta Penalidades: " & FechaHastaPenalidades
    End If
    'FGZ - 08/03/2007 - Agregué este log
    
    
    'Busco el rango de fechas en el cual tengo que buscar partes
    If Actual Then
       FechaDesde = buliq_periodo!pliqdesde
       FechaHasta = buliq_periodo!pliqhasta
    Else
       If CInt(buliq_periodo!pliqmes) = 1 Then
          Anio = CInt(buliq_periodo!pliqanio) - 1
          mes = 12
       Else
          Anio = CInt(buliq_periodo!pliqanio)
          mes = CInt(buliq_periodo!pliqmes) - 1
       End If
       
       StrSql1 = " SELECT * FROM periodo WHERE pliqmes = " & mes & " AND pliqanio = " & Anio
       OpenRecordset StrSql1, rsConsulta
       
       If rsConsulta.EOF Then
          If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encuentra el periodo para el mes " & mes & " y anio " & Anio
          End If
          Exit Sub
       Else
          FechaDesde = rsConsulta!pliqdesde
          FechaHasta = rsConsulta!pliqhasta
       End If
       
       rsConsulta.Close
       
    End If
    
    'HJI: Actualizo rango de busqueda
    If Anual Then
          FechaDesde = C_Date("01/01/" & CStr(Year(buliq_periodo!pliqhasta) - 1))
    End If
    
    'FGZ - 18/05/2005
    If Not Actualizo_Bae Then
        Call Actualizar_BAE(FechaDesde, FechaHasta, FechaHastaPenalidades, Anual, Bien, Valor)
        Actualizo_Bae = True
   End If
   
    'Busco los partes en el rango de fechas
    Select Case TipoBAE
      Case 1 'Cuota
          StrSql1 = " SELECT sum(baecuota) AS Total "
      Case 2 'Bonificacion Adicional
          StrSql1 = " SELECT sum(bonadicional) AS Total "
      Case 3 'Bonificacion Basica
          StrSql1 = " SELECT sum(bonbasica) AS Total "
      Case Else
          StrSql1 = " SELECT sum(baecuota) AS Total "
    End Select
    
    StrSql1 = StrSql1 & " From ee_bae "
    StrSql1 = StrSql1 & " Where ternro = " & buliq_empleado!ternro
    StrSql1 = StrSql1 & " AND pronro = " & buliq_proceso!pronro
    'StrSql1 = StrSql1 & " AND aaaamm70 <= " & ConvFecha(FechaHasta)
       
    OpenRecordset StrSql1, rsConsulta
    
    If rsConsulta.EOF Then
       Total = 0
    Else
       If IsNull(rsConsulta!Total) Then
          Total = 0
       Else
          Total = CDbl(rsConsulta!Total)
       End If
    End If
    
    rsConsulta.Close

Bien = True
Valor = Total

End Sub


Public Sub bus_Movilidad()
' ---------------------------------------------------------------------------------------------
' Descripcion: Calculo de Movilidad
' Autor      : Scarpa D.
' Fecha      : 11/02/2005
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim tipo As Integer 'Tipo de movilidad
                            
Dim FechaDesde As Date
Dim FechaHasta As Date
Dim rsConsulta As New ADODB.Recordset
Dim StrSql1 As String
Dim Total As Double

    'Obtengo los parametros de la busqueda
    If Arr_Programa(NroProg).Prognro <> 0 Then
        tipo = Arr_Programa(NroProg).Auxint1
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busqueda no encontrada " & NroProg
        End If
        Exit Sub
    End If
    
    'Busco los partes en el rango de fechas
    Select Case tipo
      Case 1 'Total
          StrSql1 = " SELECT sum(imptot73) AS Total "
      Case 2 'Liq para ganancias
          StrSql1 = " SELECT sum(impliq73) AS Total "
      Case Else
          StrSql1 = " SELECT sum(imptot73) AS Total "
    End Select
    
    StrSql1 = StrSql1 & " From ee_movilidad "
    StrSql1 = StrSql1 & " Where ternro = " & buliq_empleado!ternro
    StrSql1 = StrSql1 & " AND fecha73 >= " & ConvFecha(buliq_proceso!profecini)
    StrSql1 = StrSql1 & " AND fecha73 <= " & ConvFecha(buliq_proceso!profecfin)
       
    OpenRecordset StrSql1, rsConsulta
    
    If rsConsulta.EOF Then
       Total = 0
    Else
       If IsNull(rsConsulta!Total) Then
          Total = 0
       Else
          Total = CDbl(rsConsulta!Total)
       End If
    End If
    
    rsConsulta.Close

Bien = True
Valor = Total

End Sub


Public Sub bus_Cant_Empl_Estr()
' ---------------------------------------------------------------------------------------------
' Descripcion: Cantidad de empleados en la estructura
' Autor      : Scarpa D.
' Fecha      : 23/02/2005
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------

Dim TipoEstr As Long      ' Tipo de Estructura
Dim ListaEstr As String   ' Lista de estructuras a considerar
Dim StrSql1 As String
                            
'Dim Param_cur As New ADODB.Recordset
Dim rs_Estr As New ADODB.Recordset

    Bien = False
    Valor = 0
   
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        TipoEstr = Arr_Programa(NroProg).Auxint1
        ListaEstr = Arr_Programa(NroProg).Auxchar
    Else
        Exit Sub
    End If
    
    StrSql1 = " SELECT DISTINCT count(his_estructura.ternro) AS Cantidad "
    StrSql1 = StrSql1 & " From his_estructura"
    StrSql1 = StrSql1 & " INNER JOIN empresa ON empresa.estrnro = his_estructura.estrnro"
    StrSql1 = StrSql1 & " INNER JOIN his_estructura hisestr1 ON hisestr1.ternro = his_estructura.ternro AND hisestr1.tenro=" & TipoEstr
    StrSql1 = StrSql1 & " WHERE his_estructura.htetdesde <= " & ConvFecha(buliq_proceso!profecfin)
    StrSql1 = StrSql1 & "   AND (his_estructura.htethasta >= " & ConvFecha(buliq_proceso!profecfin) & " OR his_estructura.htethasta IS NULL)"
    StrSql1 = StrSql1 & "   AND his_estructura.tenro  = 10 "
    StrSql1 = StrSql1 & "   AND empresa.empnro = " & NroEmp
    StrSql1 = StrSql1 & "   AND hisestr1.htetdesde <= " & ConvFecha(buliq_proceso!profecfin)
    StrSql1 = StrSql1 & "   AND (hisestr1.htethasta >= " & ConvFecha(buliq_proceso!profecfin) & " OR hisestr1.htethasta IS NULL)"
    StrSql1 = StrSql1 & "   AND hisestr1.estrnro IN (" & ListaEstr & ")"
    StrSql1 = StrSql1 & "   AND hisestr1.tenro=" & TipoEstr

    OpenRecordset StrSql1, rs_Estr
    
    If rs_Estr.EOF Then
       Valor = 0
    Else
       If IsNull(rs_Estr!Cantidad) Then
          Valor = 0
       Else
          Valor = CLng(rs_Estr!Cantidad)
       End If
    End If

    Bien = True
    
' Cierro todo y libero
If rs_Estr.State = adStateOpen Then rs_Estr.Close
Set rs_Estr = Nothing

End Sub

Public Sub bus_Embargos()
' ---------------------------------------------------------------------------------------------
' Descripcion: Obtencion de los embargos de cualquier tipo de prestamos.
'              Mensuales, 1era o 2da quincena.
'
' Autor      : GdeCos
' Fecha      : 25/02/2005
' Ultima Mod.: 27/05/2005 FGZ
' Descripcion: paramertizacion segun mensual, 1era Quincena o 2da Quincena.
' ---------------------------------------------------------------------------------------------
Dim Cancela As Boolean  'Si cancela las cuotas de embargos o no
Dim Nrotpe As Long      'Tipo de Embargos
Dim Opcion As Integer   ' 1 - Mensual
                        ' 2 - 1er Quincena
                        ' 3 - 2da Quincena
Dim acuNro As Long      'Acumulador del cual se descuenta, si el embargo es por porcentaje
Dim Monto As Double     'Monto del Acumulador del Embargos
Dim Tope As Double      'Monto maximo a descontar del Acumulador del Embargos
Dim PorcTope As Double  'Porcentaje del Monto maximo a descontar

    Bien = False
    Valor = 0
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda "
    End If
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        If EsNulo(Arr_Programa(NroProg).Auxint1) Then
            Nrotpe = -1 ' Todos
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Todos los Tipos de Embargos "
            End If
        Else
            If Arr_Programa(NroProg).Auxint1 = 0 Then
                Nrotpe = -1 ' Todos
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "Todos los Tipos de Embargos "
                End If
            Else
                Nrotpe = Arr_Programa(NroProg).Auxint1
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "Tipo de Embargo: " & Nrotpe
                End If
            End If
        End If
        Opcion = Arr_Programa(NroProg).Auxint2
        acuNro = Arr_Programa(NroProg).Auxint3
        Cancela = IIf(Not EsNulo(Arr_Programa(NroProg).Auxlog2), CBool(Arr_Programa(NroProg).Auxlog2), True)
        PorcTope = CDbl(Arr_Programa(NroProg).Auxchar1)
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Parametros cargados "
        End If
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontró la busqueda " & NroProg
        End If
        Exit Sub
    End If

    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Calculando el tope a descontar...del Acumulador: " & acuNro
    End If
    If objCache_Acu_Liq_Monto.EsSimboloDefinido(CStr(acuNro)) Then
         Tope = (objCache_Acu_Liq_Monto.Valor(CStr(acuNro)) * PorcTope) / 100
    Else
         Tope = 0
    End If
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tope Calculado = " & Tope
    End If
    
    Select Case Opcion
    Case 1: 'Embargos Mensuales
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busco los embargos mensuales "
        End If
        Call Embargos_Mensuales(Nrotpe, Tope, acuNro, Cancela, PorcTope, Valor)
    Case 2: 'Embargos de la Primera quincena
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busco los embargos de la primera quincena "
        End If
        Call Embargos_Quincena(1, Nrotpe, Tope, acuNro, Cancela, PorcTope, Valor)
    Case 3: 'Embargos de la Segunda quincena
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busco los embargos de la segunda quincena "
        End If
        Call Embargos_Quincena(2, Nrotpe, Tope, acuNro, Cancela, PorcTope, Valor)
    End Select
    Bien = True

End Sub

Public Sub Embargos_Mensuales(ByVal Nrotpe As Long, ByVal Tope As Double, ByVal acuNro As Long, ByVal Cancela As Boolean, ByVal PorcTope As Double, ByRef Valor As Double)
' ---------------------------------------------------------------------------------------------
' Descripcion: Embargos mensuales.
' Autor      : GdeCos
' Fecha      : 25/02/2005
' Ultima Mod.: 27/05/2005 FGZ
' Descripcion: parametrizacion Mensual
' ---------------------------------------------------------------------------------------------
Dim Dif As Double       'Variable utilizada para calcular la diferencia (si fuese necesario)
                        'entre el Tope y el Monto del Embargo
Dim Cantcuo As Integer
Dim NroCuota As Integer
Dim MontoParcial As Double
Dim MontoAcum As Double
Dim MontoEmb As Double
Dim Anio_aux As Integer
Dim Mes_Aux As Integer
Dim Quin_Aux As Integer
Dim GenCuota As Boolean
Dim Finalizado As Boolean ' Indica si finalizo el embargo
Dim ValorAcum As Double

Dim rs_Embargo As New ADODB.Recordset
Dim rs_AuxEmbargo As New ADODB.Recordset
Dim rs_Cuota As New ADODB.Recordset
Dim rs_Aux_Cuota As New ADODB.Recordset
Dim rs_Acums As New ADODB.Recordset

    ValorAcum = 0
    Valor = 0
    Dif = 0
    Cantcuo = 0
    MontoEmb = 0
    Finalizado = False

        StrSql = "SELECT embargo.*, tipoemb.tpeprioridad, tipoemb.tpefordesc, tipoemb.tpehabsig, tipoemb.tpeton, tipoemb.tpecuosoc FROM embargo,tipoemb "
        StrSql = StrSql & " WHERE embargo.ternro = " & buliq_empleado!ternro
        StrSql = StrSql & " AND  embargo.embest = 'A' "
        StrSql = StrSql & " AND embargo.embquincenal = 0 "
        StrSql = StrSql & " AND ((embargo.embanioini < " & buliq_periodo!pliqanio
        StrSql = StrSql & ") OR ((embargo.embanioini = " & buliq_periodo!pliqanio & ") AND (embargo.embmesini <= " & buliq_periodo!pliqmes & ")))"
        StrSql = StrSql & " AND ((embargo.embaniofin = 0 ) "
        StrSql = StrSql & " OR  ((embargo.embaniofin > " & buliq_periodo!pliqanio
        StrSql = StrSql & ") OR ((embargo.embaniofin = " & buliq_periodo!pliqanio & ") AND (embargo.embmesfin >= " & buliq_periodo!pliqmes & "))))"
        If Nrotpe <> -1 Then
            StrSql = StrSql & " AND embargo.tpenro =" & Nrotpe
        End If
        StrSql = StrSql & " AND embargo.tpenro = tipoemb.tpenro"
        StrSql = StrSql & " ORDER BY tipoemb.tpeprioridad "
        OpenRecordset StrSql, rs_Embargo
                
        If CBool(USA_DEBUG) Then
            If rs_Embargo.EOF Then
                Flog.writeline Espacios(Tabulador * 4) & "No se encontraron embargos "
            End If
        End If
                
        Do While Not rs_Embargo.EOF
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Se procesara el embargo: " & rs_Embargo!embnro
            End If
            
            If Cuosoc(rs_Embargo!tpenro) Then
            ' Chequeo si el tipo de embargo tiene "on" en Cuota Societaria y si existe algun embargo activo
            ' con tipo asociado a este (por tabla tipoembreq)
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "Busco las cuotas para el embargo " & rs_Embargo!embnro
                End If
            
                StrSql = "SELECT * FROM embcuota "
                StrSql = StrSql & " WHERE embcuota.embnro =" & rs_Embargo!embnro
                StrSql = StrSql & " AND embcuota.embccancela = 0 "
                StrSql = StrSql & " AND embcuota.embcanio = " & buliq_periodo!pliqanio
                StrSql = StrSql & " AND embcuota.embcmes = " & buliq_periodo!pliqmes
                OpenRecordset StrSql, rs_Cuota
        
                If CBool(USA_DEBUG) Then
                    If rs_Cuota.EOF Then
                        Flog.writeline Espacios(Tabulador * 4) & "No se encontraron cuotas "
                    End If
                End If
               
                If (rs_Embargo!tpefordesc < 1) Then
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "El embargo esta marcado por Monto"
                    End If
                    
                    Do While ((Not rs_Cuota.EOF) And (Tope > 0))
                        If (CDbl(rs_Cuota!embcimp) <= Tope) Then
                            ValorAcum = ValorAcum + CDbl(rs_Cuota!embcimp)
                            If Cancela Then
                                StrSql = "UPDATE embcuota SET pronro =" & buliq_proceso!pronro
                                StrSql = StrSql & ", embccancela = -1 "
                                StrSql = StrSql & ", embcimpreal = " & rs_Cuota!embcimp
                                StrSql = StrSql & " WHERE embcuota.embcnro = " & rs_Cuota!embcnro
                                StrSql = StrSql & " AND embcuota.embnro = " & rs_Cuota!embnro
                                objConn.Execute StrSql, , adExecuteNoRecords
                            End If
                            Tope = Tope - CDbl(rs_Cuota!embcimp)
                        Else
                            ' Controlo que no este seteado como "Liquida Todo o Nada"
                            If (rs_Embargo!tpeton = 0) Then
                                ValorAcum = ValorAcum + Tope
                                Dif = CDbl(rs_Cuota!embcimp) - Tope
                                If Cancela Then
                                    StrSql = "UPDATE embcuota SET pronro =" & buliq_proceso!pronro
                                    StrSql = StrSql & ", embccancela = -1 "
                                    StrSql = StrSql & ", embcimpreal = " & Tope
                                    StrSql = StrSql & " WHERE embcuota.embcnro = " & rs_Cuota!embcnro
                                    StrSql = StrSql & " AND embcuota.embnro = " & rs_Cuota!embnro
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                
                                    ' Junto datos para agregar la cuota con el importe restante
                                    StrSql = "SELECT MAX(embcnro) AS cantcuo FROM embcuota "
                                    StrSql = StrSql & " WHERE embcuota.embnro = " & rs_Embargo!embnro
                                    OpenRecordset StrSql, rs_Aux_Cuota
                                                                
                                    NroCuota = CInt(IIf(Not EsNulo(rs_Aux_Cuota!Cantcuo), rs_Aux_Cuota!Cantcuo, 0)) + 1
                                    Anio_aux = rs_Cuota!embcanio
                                    Mes_Aux = rs_Cuota!embcmes
                                    rs_Aux_Cuota.Close
                                        
                                    'Calculo el proximo mes y año
                                    If Mes_Aux = 12 Then
                                        Mes_Aux = 1
                                        Anio_aux = Anio_aux + 1
                                    Else
                                        Mes_Aux = Mes_Aux + 1
                                    End If
                                    
                                    ' Agrego una cuota al final
                                    StrSql = "INSERT INTO embcuota "
                                    StrSql = StrSql & "(embcnro, embnro, embcimp, embccancela, embcanio, embcmes, embcimpreal, pronro) VALUES ("
                                    StrSql = StrSql & NroCuota & "," & rs_Embargo!embnro
                                    StrSql = StrSql & "," & Dif & ",0," & Anio_aux & "," & Mes_Aux
                                    StrSql = StrSql & "," & 0 & "," & buliq_proceso!pronro & ")"
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                                                                                           
                                    'Actualizo la cantidad de cuotas del embargo
                                    StrSql = "SELECT COUNT(embcnro) AS cantcuo FROM embcuota "
                                    StrSql = StrSql & " WHERE embcuota.embnro = " & rs_Embargo!embnro
                                    OpenRecordset StrSql, rs_Aux_Cuota
                                    
                                    NroCuota = CInt(rs_Aux_Cuota!Cantcuo)
                                    rs_Aux_Cuota.Close
                                    
                                    StrSql = "UPDATE embargo SET embcantcuo = " & NroCuota
                                    StrSql = StrSql & " WHERE embnro = " & rs_Embargo!embnro
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                    
                                    If CBool(USA_DEBUG) Then
                                        Flog.writeline Espacios(Tabulador * 4) & "Se genero una cuota para el periodo " & Mes_Aux & "/" & Anio_aux & " por la suma de $ " & Dif
                                    End If
                                End If
                                Tope = 0
                            Else
                                If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "El embargo esta seteado como liquida todo o nada. No se realizan descuentos."
                                End If
                                
                                If Cancela Then
                                    StrSql = "UPDATE embcuota SET pronro =" & buliq_proceso!pronro
                                    StrSql = StrSql & ", embccancela = -1 "
                                    StrSql = StrSql & ", embcimpreal = 0.00"
                                    StrSql = StrSql & " WHERE embcuota.embcnro = " & rs_Cuota!embcnro
                                    StrSql = StrSql & " AND embcuota.embnro = " & rs_Cuota!embnro
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                
                                    ' Junto datos para agregar la cuota con el importe restante
                                    StrSql = "SELECT MAX(embcnro) AS cantcuo FROM embcuota "
                                    StrSql = StrSql & " WHERE embcuota.embnro = " & rs_Embargo!embnro
                                    OpenRecordset StrSql, rs_Aux_Cuota
                                                                
                                    'NroCuota = CInt(rs_Aux_Cuota!Cantcuo) + 1
                                    NroCuota = CInt(IIf(Not EsNulo(rs_Aux_Cuota!Cantcuo), rs_Aux_Cuota!Cantcuo, 0)) + 1
                                    rs_Aux_Cuota.Close
                                    Anio_aux = rs_Cuota!embcanio
                                    Mes_Aux = rs_Cuota!embcmes
                                    Dif = rs_Cuota!embcimp
                                                            
                                    'Calculo el proximo mes y año
                                    If Mes_Aux = 12 Then
                                        Mes_Aux = 1
                                        Anio_aux = Anio_aux + 1
                                    Else
                                        Mes_Aux = Mes_Aux + 1
                                    End If
                                    
                                    ' Agrego una cuota al final
                                    StrSql = "INSERT INTO embcuota "
                                    StrSql = StrSql & "(embcnro, embnro, embcimp, embccancela, embcanio, embcmes, embcimpreal, pronro) VALUES ("
                                    StrSql = StrSql & NroCuota & "," & rs_Embargo!embnro
                                    StrSql = StrSql & "," & Dif & ",0," & Anio_aux & "," & Mes_Aux
                                    StrSql = StrSql & "," & 0 & "," & buliq_proceso!pronro & ")"
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                                                                                           
                                    'Actualizo la cantidad de cuotas del embargo
                                    StrSql = "SELECT COUNT(embcnro) AS cantcuo FROM embcuota "
                                    StrSql = StrSql & " WHERE embcuota.embnro = " & rs_Embargo!embnro
                                    OpenRecordset StrSql, rs_Aux_Cuota
                                    
                                    NroCuota = CInt(rs_Aux_Cuota!Cantcuo)
                                    rs_Aux_Cuota.Close
                                    
                                    StrSql = "UPDATE embargo SET embcantcuo = " & NroCuota
                                    StrSql = StrSql & " WHERE embnro = " & rs_Embargo!embnro
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                                                                                           
                                    If CBool(USA_DEBUG) Then
                                        Flog.writeline Espacios(Tabulador * 4) & "Se genero una cuota para el periodo " & Mes_Aux & "/" & Anio_aux & " por la suma de $ " & Dif
                                    End If
                                End If
                            End If
                        End If
                        
                        rs_Cuota.MoveNext
                    Loop
                
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "Se descontaron del Embargo $ " & ValorAcum
                    End If
                
                    ' Controlo si se cancelaron todas las cuotas. Entonces seteo el embargo como finalizado.
                    If Cancela Then
                        If rs_Cuota.State = adStateOpen Then rs_Cuota.Close
                        StrSql = "SELECT COUNT (embcnro) AS cantcuo FROM embcuota "
                        StrSql = StrSql & " WHERE embcuota.embnro = " & rs_Embargo!embnro
                        StrSql = StrSql & " AND embcuota.embccancela = 0 "
                        OpenRecordset StrSql, rs_Cuota
                        ' Chequeo si se liquido la ultima cuota (y estan todas canceladas).
                        ' Si ocurre esto, marco como "Finalizado" el embargo
                        If rs_Cuota!Cantcuo = 0 Then
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Se marca el embargo como finalizado "
                            End If
                            
                            StrSql = "UPDATE embargo SET embest = 'F'"
                            StrSql = StrSql & ", embfecest = " & ConvFecha(Date)
                            StrSql = StrSql & " WHERE embnro = " & rs_Embargo!embnro
                            objConn.Execute StrSql, , adExecuteNoRecords
                            
                            Finalizado = True
                        End If
                    End If
                Else
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "El embargo esta marcado por Porcentaje o Ambos"
                    End If
                    MontoEmb = rs_Embargo!embimp
                    
                    If rs_Cuota.EOF Then
                    ' Si no hay cuotas (la busqueda la realiza arriba), Crearla de acuerdo al monto
                    ' y a la fecha de finalizacion
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "No se encuentran cuotas. Se genera una nueva."
                        End If
                        
                        If (MontoEmb > 0) Then
                        ' El embargo tiene un monto
                            
                            ' Calculo cuanto ya se cancelo del embargo
                            StrSql = "SELECT MAX(embcnro) as NroCuota, SUM(embcimpreal) AS MontoCancel FROM embcuota "
                            StrSql = StrSql & " WHERE embcuota.embnro = " & rs_Embargo!embnro
                            OpenRecordset StrSql, rs_Aux_Cuota
                                                                                    
                            If Not EsNulo(rs_Aux_Cuota!NroCuota) Then
                                NroCuota = rs_Aux_Cuota!NroCuota + 1
                            Else
                                NroCuota = 1
                            End If
                            If Not EsNulo(rs_Aux_Cuota!MontoCancel) Then
                                If CDbl(rs_Aux_Cuota!MontoCancel) > 0 Then
                                    MontoEmb = CDbl(MontoEmb - rs_Aux_Cuota!MontoCancel)
                                End If
                            End If
                            rs_Aux_Cuota.Close
                            
                            ' Agrego una cuota al final
                            StrSql = "INSERT INTO embcuota "
                            StrSql = StrSql & "(embcnro, embnro, embcimp, embccancela, embcanio, embcmes, embcimpreal, pronro) VALUES ("
                            StrSql = StrSql & NroCuota & "," & rs_Embargo!embnro
                            StrSql = StrSql & "," & MontoEmb & "," & 0 & "," & buliq_periodo!pliqanio & "," & buliq_periodo!pliqmes
                            StrSql = StrSql & "," & 0 & "," & buliq_proceso!pronro & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Se genera una cuota nueva para el periodo actual por $ " & MontoEmb
                            End If
                        Else
                            Crear_Cuotas_Embargo rs_Embargo!embnro, 0
                        End If
                    
                        ' Hago el select de nuevo (buscar cuotas)
                        If rs_Cuota.State = adStateOpen Then rs_Cuota.Close
                        
                        StrSql = "SELECT * FROM embcuota "
                        StrSql = StrSql & " WHERE embcuota.embnro =" & rs_Embargo!embnro
                        StrSql = StrSql & " AND embcuota.embccancela = 0 "
                        StrSql = StrSql & " AND embcuota.embcanio = " & buliq_periodo!pliqanio
                        StrSql = StrSql & " AND embcuota.embcmes = " & buliq_periodo!pliqmes
                        OpenRecordset StrSql, rs_Cuota
                    End If
                    
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "Busco los aumuladores para el embargo " & rs_Embargo!embnro
                    End If
                
                    StrSql = "SELECT emb_acu.embacporc, emb_acu.acnro FROM emb_acu"
                    StrSql = StrSql & " WHERE emb_acu.embnro =" & rs_Embargo!embnro
                    OpenRecordset StrSql, rs_Acums
                               
                    If CBool(USA_DEBUG) Then
                        If rs_Acums.EOF Then
                            Flog.writeline Espacios(Tabulador * 4) & "No se encontraron acumuladores "
                        End If
                    End If
                
                    MontoParcial = 0
                    MontoAcum = 0
                    GenCuota = False
                   
                    If MontoEmb > 0 Then ' Si se debe cancelar un monto del embargo
                        Do While (Not rs_Acums.EOF) And ((MontoEmb - MontoAcum) > 0) And (Tope > 0)
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Calculo el monto de los acumuladores "
                            End If
        
                            If objCache_Acu_Liq_Monto.EsSimboloDefinido(CStr(rs_Acums!acnro)) Then
                                Monto = objCache_Acu_Liq_Monto.Valor(CStr(rs_Acums!acnro))
                                If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "Acumulador Nro. " & rs_Acums!acnro & " - Monto del Acumulador: " & Monto
                                End If
                            Else
                                Monto = 0
                                If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "No se encontro el Acumulador Nro. " & rs_Acums!acnro & " - Monto del Acumulador: 0.00"
                                End If
                            End If
                            
                            ' Calculo el porcentaje del Acumulador
                            MontoParcial = ((Monto * CDbl(rs_Acums!embacporc)) / 100)
                            MontoAcum = MontoAcum + MontoParcial
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Porcentaje a Considerar : " & rs_Acums!embacporc
                                Flog.writeline Espacios(Tabulador * 4) & "Monto a descontar : " & MontoParcial
                            End If
                            
                            If (MontoParcial <= Tope) And (MontoAcum <= MontoEmb) Then
                                ValorAcum = ValorAcum + MontoParcial
                                Tope = Tope - MontoParcial
                            Else
                                If (MontoParcial > Tope) Then
                                   If (Tope > MontoEmb) Then
                                        ValorAcum = ValorAcum + MontoEmb
                                        Tope = Tope - MontoEmb
                                   Else
                                        ValorAcum = ValorAcum + Tope
                                        Tope = 0
                                   End If
                                Else
                                    ValorAcum = MontoEmb
                                    Tope = Tope - MontoEmb
                                End If
                            End If
                            
                            rs_Acums.MoveNext
                        Loop
                            
                        If Cancela Then
                            StrSql = "UPDATE embcuota SET pronro =" & buliq_proceso!pronro
                            StrSql = StrSql & ", embccancela = -1 "
                            StrSql = StrSql & ", embcimpreal = " & ValorAcum
                            StrSql = StrSql & " WHERE embcuota.embcnro = " & rs_Cuota!embcnro
                            StrSql = StrSql & " AND embcuota.embnro = " & rs_Cuota!embnro
                            objConn.Execute StrSql, , adExecuteNoRecords
                            If MontoEmb <= ValorAcum Then
                                If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "Se marca el embargo como finalizado "
                                End If
                                
                                StrSql = "UPDATE embargo SET embest = 'F'"
                                StrSql = StrSql & ", embfecest = " & ConvFecha(Date)
                                StrSql = StrSql & " WHERE embnro = " & rs_Embargo!embnro
                                objConn.Execute StrSql, , adExecuteNoRecords
                                
                                Finalizado = True
                            End If
                        End If
                    Else
                    ' El embargo no tiene monto, se descuenta lo que se puede
                        Do While Not rs_Acums.EOF
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Calculo el monto de los acumuladores "
                            End If
        
                            If objCache_Acu_Liq_Monto.EsSimboloDefinido(CStr(rs_Acums!acnro)) Then
                                Monto = objCache_Acu_Liq_Monto.Valor(CStr(rs_Acums!acnro))
                                If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "Acumulador Nro. " & rs_Acums!acnro & " - Monto del Acumulador: " & Monto
                                End If
                            Else
                                Monto = 0
                                If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "No se encontro el Acumulador Nro. " & rs_Acums!acnro & " - Monto del Acumulador: 0.00"
                                End If
                            End If
                            
                            ' Calculo el porcentaje del Acumulador
                            MontoParcial = ((Monto * CDbl(rs_Acums!embacporc)) / 100)
                            MontoAcum = MontoAcum + MontoParcial
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Porcentaje a Considerar : " & rs_Acums!embacporc
                                Flog.writeline Espacios(Tabulador * 4) & "Monto a descontar : " & MontoParcial
                            End If
                            
                            If (MontoParcial <= Tope) Then
                                ValorAcum = ValorAcum + MontoParcial
                                Tope = Tope - MontoParcial
                            Else
                                ValorAcum = ValorAcum + Tope
                                Tope = 0
                            End If
                            
                            rs_Acums.MoveNext
                        Loop
                            
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "Se desconto $ " & ValorAcum
                        End If
                        
                        If Cancela Then
                            StrSql = "UPDATE embcuota SET pronro =" & buliq_proceso!pronro
                            StrSql = StrSql & ", embccancela = -1 "
                            StrSql = StrSql & ", embcimp = " & ValorAcum
                            StrSql = StrSql & ", embcimpreal = " & ValorAcum
                            StrSql = StrSql & " WHERE embcuota.embcnro = " & rs_Cuota!embcnro
                            StrSql = StrSql & " AND embcuota.embnro = " & rs_Cuota!embnro
                            objConn.Execute StrSql, , adExecuteNoRecords
                        
                            If (rs_Embargo!embaniofin > 0) Then ' Si (fecha fin > 0) entonces
                                If ((rs_Embargo!embaniofin = buliq_periodo!pliqanio) _
                                        And (rs_Embargo!embmesfin = buliq_periodo!pliqmes)) Then
                                    '   Si (fecha fin = periodo actual) entonces
                                    
                                    If CBool(USA_DEBUG) Then
                                        Flog.writeline Espacios(Tabulador * 4) & "Se marca el embargo como finalizado "
                                    End If
                                    
                                    StrSql = "UPDATE embargo SET embest = 'F'"
                                    StrSql = StrSql & ", embfecest = " & ConvFecha(Date)
                                    StrSql = StrSql & " WHERE embnro = " & rs_Embargo!embnro
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                    
                                    Finalizado = True
                                End If
                            End If
                        End If
                    End If
                End If
                                                                  
                If Cancela Then
                    If Finalizado Then
                    ' Si hay algun embargo de tipo del que se cancelo con estado en Espera
                    ' entonces setearlo como Activo
                        ' Chequear si el tipo del embargo tiene seteado "Hab. Siguiente"
                        If (rs_Embargo!tpehabsig < 0) Then
                            StrSql = "SELECT * FROM embargo "
                            StrSql = StrSql & " WHERE embargo.embest = 'E' "
                            StrSql = StrSql & " AND embargo.tpenro = " & rs_Embargo!tpenro
                            StrSql = StrSql & " AND embargo.ternro = " & buliq_empleado!ternro  'MAxi 26/03/07 Faltaba
                            OpenRecordset StrSql, rs_AuxEmbargo
                            ' Chequear si hay embargos con estado "En Espera"
                            If rs_AuxEmbargo.EOF Then
                                If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "No se encontraron embargos para habilitar del mismo Tipo 'En Espera' "
                                End If
                            Else
                                StrSql = "UPDATE embargo SET embest = 'A'"
                                StrSql = StrSql & ", embfecest = " & ConvFecha(Date)
                                StrSql = StrSql & " WHERE embnro = " & rs_AuxEmbargo!embnro
                                objConn.Execute StrSql, , adExecuteNoRecords
                                If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "Se marco como Activo el embargo " & rs_AuxEmbargo!embnro
                                End If
                            End If
                        End If
                    End If
                End If
            Else
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "El embargo esta seteado como Cuota Societaria, pero no se encuentran Activos los embargos del Tipo asociado."
                End If
            End If
            
            Valor = Valor + ValorAcum
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Valor total descontado del Embargo: " & ValorAcum
            End If
            
            ValorAcum = 0
            Finalizado = False
    
            rs_Embargo.MoveNext
        Loop

' cierro todo y libero
If rs_Cuota.State = adStateOpen Then rs_Cuota.Close
If rs_Embargo.State = adStateOpen Then rs_Embargo.Close
If rs_AuxEmbargo.State = adStateOpen Then rs_AuxEmbargo.Close
If rs_Aux_Cuota.State = adStateOpen Then rs_Aux_Cuota.Close
If rs_Acums.State = adStateOpen Then rs_Acums.Close
      
Set rs_Embargo = Nothing
Set rs_Cuota = Nothing
Set rs_AuxEmbargo = Nothing
Set rs_Aux_Cuota = Nothing
Set rs_Acums = Nothing
End Sub



Public Sub Embargos_Quincena(ByVal Quincena As Integer, ByVal Nrotpe As Long, ByVal Tope As Double, ByVal acuNro As Long, ByVal Cancela As Boolean, ByVal PorcTope As Double, ByRef Valor As Double)
' ---------------------------------------------------------------------------------------------
' Descripcion: Embargos de 1era o 2da quincena.
' Autor      : GdeCos
' Fecha      : 25/02/2005
' Ultima Mod.: 27/05/2005 FGZ
' Descripcion: parametrizacion de 1era y 2da qincena
' ---------------------------------------------------------------------------------------------
Dim Dif As Double       'Variable utilizada para calcular la diferencia (si fuese necesario)
                        'entre el Tope y el Monto del Embargo
Dim Cantcuo As Integer
Dim NroCuota As Integer
Dim MontoParcial As Double
Dim MontoAcum As Double
Dim MontoEmb As Double
Dim Anio_aux As Long
Dim Mes_Aux As Long
Dim Quin_Aux As Long
Dim GenCuota As Boolean
Dim Finalizado As Boolean ' Indica si finalizo el embargo
Dim ValorAcum As Double

Dim rs_Embargo As New ADODB.Recordset
Dim rs_AuxEmbargo As New ADODB.Recordset
Dim rs_Cuota As New ADODB.Recordset
Dim rs_Aux_Cuota As New ADODB.Recordset
Dim rs_Acums As New ADODB.Recordset

    Valor = 0
    ValorAcum = 0
    Dif = 0
    Cantcuo = 0
    MontoEmb = 0
    Finalizado = False

    StrSql = "SELECT embargo.*, tipoemb.tpeprioridad, tipoemb.tpefordesc, tipoemb.tpehabsig, tipoemb.tpeton, tipoemb.tpecuosoc FROM embargo,tipoemb "
    StrSql = StrSql & " WHERE embargo.ternro = " & buliq_empleado!ternro
    StrSql = StrSql & " AND  embargo.embest = 'A' "
    StrSql = StrSql & " AND embargo.embquincenal = -1 "
    StrSql = StrSql & " AND ((embargo.embanioini < " & buliq_periodo!pliqanio
    StrSql = StrSql & ") OR ((embargo.embanioini = " & buliq_periodo!pliqanio & ") AND (embargo.embmesini <= " & buliq_periodo!pliqmes & ")))"
    StrSql = StrSql & " AND ((embargo.embaniofin = 0) "
    StrSql = StrSql & " OR  ((embargo.embaniofin > " & buliq_periodo!pliqanio
    StrSql = StrSql & ") OR ((embargo.embaniofin = " & buliq_periodo!pliqanio & ") AND (embargo.embmesfin >= " & buliq_periodo!pliqmes & "))))"
    If Nrotpe <> -1 Then
        StrSql = StrSql & " AND embargo.tpenro =" & Nrotpe
    End If
    StrSql = StrSql & " AND embargo.tpenro = tipoemb.tpenro"
    StrSql = StrSql & " ORDER BY tipoemb.tpeprioridad "
    OpenRecordset StrSql, rs_Embargo
            
    If CBool(USA_DEBUG) Then
        If rs_Embargo.EOF Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontraron embargos "
        End If
    End If
            
    Do While Not rs_Embargo.EOF
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Se procesara el embargo: " & rs_Embargo!embnro
        End If
        
        If Cuosoc(rs_Embargo!tpenro) Then
        ' Chequeo si el tipo de embargo tiene "on" en Cuota Societaria y si existe algun embargo activo
        ' con tipo asociado a este (por tabla tipoembreq)
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Busco las cuotas para el embargo " & rs_Embargo!embnro
            End If
        
            StrSql = "SELECT * FROM embcuota "
            StrSql = StrSql & " WHERE embcuota.embnro =" & rs_Embargo!embnro
            StrSql = StrSql & " AND embcuota.embccancela = 0 "
            StrSql = StrSql & " AND embcuota.embcquin = " & Quincena
            StrSql = StrSql & " AND embcuota.embcanio = " & buliq_periodo!pliqanio
            StrSql = StrSql & " AND embcuota.embcmes = " & buliq_periodo!pliqmes
            OpenRecordset StrSql, rs_Cuota
    
            If CBool(USA_DEBUG) Then
                If rs_Cuota.EOF Then
                    Flog.writeline Espacios(Tabulador * 4) & "No se encontraron cuotas "
                End If
            End If
            
            If (rs_Embargo!tpefordesc < 1) Then
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "El embargo esta marcado por Monto"
                End If
                
                Do While ((Not rs_Cuota.EOF) And (Tope > 0))
                    If (CDbl(rs_Cuota!embcimp) <= Tope) Then
                        ValorAcum = ValorAcum + CDbl(rs_Cuota!embcimp)
                        If Cancela Then
                            StrSql = "UPDATE embcuota SET pronro =" & buliq_proceso!pronro
                            StrSql = StrSql & ", embccancela = -1 "
                            StrSql = StrSql & ", embcimpreal = " & rs_Cuota!embcimp
                            StrSql = StrSql & " WHERE embcuota.embcnro = " & rs_Cuota!embcnro
                            StrSql = StrSql & " AND embcuota.embnro = " & rs_Cuota!embnro
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                        Tope = Tope - CDbl(rs_Cuota!embcimp)
                    Else
                        ' Controlo que no este seteado como "Liquida Todo o Nada"
                        If (rs_Embargo!tpeton = 0) Then
                            ValorAcum = ValorAcum + Tope
                            Dif = CDbl(rs_Cuota!embcimp) - Tope
                            If Cancela Then
                                StrSql = "UPDATE embcuota SET pronro =" & buliq_proceso!pronro
                                StrSql = StrSql & ", embccancela = -1 "
                                StrSql = StrSql & ", embcimpreal = " & Tope
                                StrSql = StrSql & " WHERE embcuota.embcnro = " & rs_Cuota!embcnro
                                StrSql = StrSql & " AND embcuota.embnro = " & rs_Cuota!embnro
                                objConn.Execute StrSql, , adExecuteNoRecords
                            
                                ' Junto datos para agregar la cuota con el importe restante
                                StrSql = "SELECT MAX(embcnro) AS cantcuo FROM embcuota "
                                StrSql = StrSql & " WHERE embcuota.embnro = " & rs_Embargo!embnro
                                OpenRecordset StrSql, rs_Aux_Cuota
                                
                                NroCuota = rs_Aux_Cuota!Cantcuo + 1
                                Anio_aux = rs_Cuota!embcanio
                                Mes_Aux = rs_Cuota!embcmes
                                Quin_Aux = rs_Cuota!embcquin
                                rs_Aux_Cuota.Close
                                    
                                'Calculo el proximo mes, año y quincena
                                Call sigQuin(Anio_aux, Mes_Aux, Quin_Aux)
                                
                                ' Agrego una cuota al final
                                StrSql = "INSERT INTO embcuota "
                                StrSql = StrSql & "(embcnro, embnro, embcimp, embccancela, embcanio, embcmes, embcquin, embcimpreal, pronro) VALUES ("
                                StrSql = StrSql & NroCuota & "," & rs_Embargo!embnro
                                StrSql = StrSql & "," & Dif & ",0," & Anio_aux & "," & Mes_Aux
                                StrSql = StrSql & "," & Quin_Aux & "," & 0 & "," & buliq_proceso!pronro & ")"
                                objConn.Execute StrSql, , adExecuteNoRecords
                                                                           
                                'Actualizo la cantidad de cuotas del embargo
                                StrSql = "SELECT COUNT(embcnro) AS cantcuo FROM embcuota "
                                StrSql = StrSql & " WHERE embcuota.embnro = " & rs_Embargo!embnro
                                OpenRecordset StrSql, rs_Aux_Cuota
                                
                                NroCuota = CInt(rs_Aux_Cuota!Cantcuo)
                                rs_Aux_Cuota.Close
                                
                                StrSql = "UPDATE embargo SET embcantcuo = " & NroCuota
                                StrSql = StrSql & " WHERE embnro = " & rs_Embargo!embnro
                                objConn.Execute StrSql, , adExecuteNoRecords
                                
                                If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "Se genero una cuota para el periodo " & Mes_Aux & "/" & Anio_aux & " por la suma de $ " & Dif
                                End If
                             End If
                             Tope = 0
                        Else
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "El embargo esta seteado como liquida todo o nada. No se realizan descuentos."
                            End If
                            If Cancela Then
                                StrSql = "UPDATE embcuota SET pronro =" & buliq_proceso!pronro
                                StrSql = StrSql & ", embccancela = -1 "
                                StrSql = StrSql & ", embcimpreal = 0.00"
                                StrSql = StrSql & " WHERE embcuota.embcnro = " & rs_Cuota!embcnro
                                StrSql = StrSql & " AND embcuota.embnro = " & rs_Cuota!embnro
                                objConn.Execute StrSql, , adExecuteNoRecords
                            
                                ' Junto datos para agregar la cuota con el importe restante
                                StrSql = "SELECT MAX(embcnro) AS cantcuo FROM embcuota "
                                StrSql = StrSql & " WHERE embcuota.embnro = " & rs_Embargo!embnro
                                OpenRecordset StrSql, rs_Aux_Cuota
                                
                                NroCuota = rs_Aux_Cuota!Cantcuo + 1
                                rs_Aux_Cuota.Close
                                Dif = rs_Cuota!embcimp
                                Anio_aux = rs_Cuota!embcanio
                                Mes_Aux = rs_Cuota!embcmes
                                Quin_Aux = rs_Cuota!embcquin
                                    
                                'Calculo el proximo mes, año y quincena
                                Call sigQuin(Anio_aux, Mes_Aux, Quin_Aux)
                                
                                ' Agrego una cuota al final
                                StrSql = "INSERT INTO embcuota "
                                StrSql = StrSql & "(embcnro, embnro, embcimp, embccancela, embcanio, embcmes, embcquin, embcimpreal, pronro) VALUES ("
                                StrSql = StrSql & NroCuota & "," & rs_Embargo!embnro
                                StrSql = StrSql & "," & Dif & ",0," & Anio_aux & "," & Mes_Aux
                                StrSql = StrSql & "," & Quin_Aux & "," & 0 & "," & buliq_proceso!pronro & ")"
                                objConn.Execute StrSql, , adExecuteNoRecords
                                                                           
                                'Actualizo la cantidad de cuotas del embargo
                                StrSql = "SELECT COUNT(embcnro) AS cantcuo FROM embcuota "
                                StrSql = StrSql & " WHERE embcuota.embnro = " & rs_Embargo!embnro
                                OpenRecordset StrSql, rs_Aux_Cuota
                                
                                NroCuota = CInt(rs_Aux_Cuota!Cantcuo)
                                rs_Aux_Cuota.Close
                                
                                StrSql = "UPDATE embargo SET embcantcuo = " & NroCuota
                                StrSql = StrSql & " WHERE embnro = " & rs_Embargo!embnro
                                objConn.Execute StrSql, , adExecuteNoRecords
                                                                           
                                If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "Se genero una cuota para el periodo " & Mes_Aux & "/" & Anio_aux & " por la suma de $ " & Dif
                                End If
                            End If
                        End If
                    End If

                    rs_Cuota.MoveNext
                Loop
                
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "Se descontaron del Embargo $ " & ValorAcum
                End If
                           
                ' Controlo si se cancelaron todas las cuotas. Entonces seteo el embargo como finalizado.
                If Cancela Then
                    If rs_Cuota.State = adStateOpen Then rs_Cuota.Close
                    StrSql = "SELECT COUNT (embcnro) AS cantcuo FROM embcuota "
                    StrSql = StrSql & " WHERE embcuota.embnro = " & rs_Embargo!embnro
                    StrSql = StrSql & " AND embcuota.embccancela = 0 "
                    OpenRecordset StrSql, rs_Cuota
                    ' Chequeo si se liquido la ultima cuota (y estan todas canceladas).
                    ' Si ocurre esto, marco como "Finalizado" el embargo
                    If rs_Cuota!Cantcuo = 0 Then
                        If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Se marca el embargo como finalizado "
                        End If
                        
                        StrSql = "UPDATE embargo SET embest = 'F'"
                        StrSql = StrSql & ", embfecest = " & ConvFecha(Date)
                        StrSql = StrSql & " WHERE embnro = " & rs_Embargo!embnro
                        objConn.Execute StrSql, , adExecuteNoRecords
                        
                        Finalizado = True
                    End If
                End If
 
            Else
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "El embargo esta marcado por Porcentaje o Ambos"
                End If
                
                MontoEmb = rs_Embargo!embimp
                
                If rs_Cuota.EOF Then
                ' Si no hay cuotas (la busqueda la realiza arriba), Crearla de acuerdo al monto
                ' y a la fecha de finalizacion
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "No se encuentran cuotas. Se genera una nueva."
                    End If
                    
                    If (MontoEmb > 0) Then
                    ' El embargo tiene un monto
                        
                        ' Calculo cuanto ya se cancelo del embargo
                        StrSql = "SELECT max(embcnro) as nroCuota, SUM(embcimpreal) AS MontoCancel FROM embcuota "
                        StrSql = StrSql & " WHERE embcuota.embnro = " & rs_Embargo!embnro
                        OpenRecordset StrSql, rs_Aux_Cuota
                                                                                
                        If Not EsNulo(rs_Aux_Cuota!NroCuota) Then
                            NroCuota = rs_Aux_Cuota!NroCuota + 1
                        Else
                            NroCuota = 1
                        End If
                        If Not EsNulo(rs_Aux_Cuota!MontoCancel) Then
                            If CDbl(rs_Aux_Cuota!MontoCancel) > 0 Then
                                MontoEmb = CDbl(MontoEmb - rs_Aux_Cuota!MontoCancel)
                            End If
                        End If
                        rs_Aux_Cuota.Close
                        
                        ' Agrego una cuota al final
                        StrSql = "INSERT INTO embcuota "
                        StrSql = StrSql & "(embcnro, embnro, embcimp, embccancela, embcanio, embcmes, embcquin, embcimpreal, pronro) VALUES ("
                        StrSql = StrSql & NroCuota & "," & rs_Embargo!embnro
                        StrSql = StrSql & "," & MontoEmb & "," & 0 & "," & buliq_periodo!pliqanio & "," & buliq_periodo!pliqmes
                        StrSql = StrSql & "," & Quincena & "," & 0 & "," & buliq_proceso!pronro & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                        
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "Se genera una cuota nueva para el periodo actual por $ " & MontoEmb
                        End If
                    Else
                        ' Si el embargo tiene año de finalizacion acorde con el periodo de liquidacion
                        Call Crear_Cuotas_Embargo(rs_Embargo!embnro, Quincena)
                    End If
                
                    ' Hago el select de nuevo (buscar cuotas)
                    rs_Cuota.Close
                    
                    StrSql = "SELECT * FROM embcuota "
                    StrSql = StrSql & " WHERE embcuota.embnro =" & rs_Embargo!embnro
                    StrSql = StrSql & " AND embcuota.embccancela = 0 "
                    StrSql = StrSql & " AND embcuota.embcquin = " & Quincena
                    StrSql = StrSql & " AND embcuota.embcanio = " & buliq_periodo!pliqanio
                    StrSql = StrSql & " AND embcuota.embcmes = " & buliq_periodo!pliqmes
                    OpenRecordset StrSql, rs_Cuota
                End If
                
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "Busco los aumuladores para el embargo " & rs_Embargo!embnro
                End If
            
                StrSql = "SELECT emb_acu.embacporc, emb_acu.acnro FROM emb_acu"
                StrSql = StrSql & " WHERE emb_acu.embnro =" & rs_Embargo!embnro
                OpenRecordset StrSql, rs_Acums
                           
                If CBool(USA_DEBUG) Then
                    If rs_Acums.EOF Then
                        Flog.writeline Espacios(Tabulador * 4) & "No se encontraron acumuladores "
                    End If
                End If
            
                MontoParcial = 0
                MontoAcum = 0
                GenCuota = False
               
                If MontoEmb > 0 Then 'Si se debe cancelar un monto del embargo
                    Do While (Not rs_Acums.EOF) And ((MontoEmb - MontoAcum) > 0) And (Tope > 0)
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "Calculo el monto de los acumuladores "
                        End If
    
                        If objCache_Acu_Liq_Monto.EsSimboloDefinido(CStr(rs_Acums!acnro)) Then
                            Monto = objCache_Acu_Liq_Monto.Valor(CStr(rs_Acums!acnro))
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Acumulador Nro. " & rs_Acums!acnro & " - Monto del Acumulador: " & Monto
                            End If
                        Else
                            Monto = 0
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "No se encontro el Acumulador Nro. " & rs_Acums!acnro & " - Monto del Acumulador: 0.00"
                            End If
                        End If
                        
                        ' Calculo el porcentaje del Acumulador
                        MontoParcial = ((Monto * CDbl(rs_Acums!embacporc)) / 100)
                        MontoAcum = MontoAcum + MontoParcial
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "Porcentaje a Considerar : " & rs_Acums!embacporc
                            Flog.writeline Espacios(Tabulador * 4) & "Monto a descontar : " & MontoParcial
                        End If
                        
                        If (MontoParcial <= Tope) And (MontoAcum <= MontoEmb) Then
                            ValorAcum = ValorAcum + MontoParcial
                            Tope = Tope - MontoParcial
                        Else
                            If (MontoParcial > Tope) Then
                                If (Tope > MontoEmb) Then
                                    ValorAcum = ValorAcum + MontoEmb
                                    Tope = Tope - MontoEmb
                                Else
                                        ValorAcum = ValorAcum + Tope
                                        Tope = 0
                                End If
                            Else
                                ValorAcum = MontoEmb
                                Tope = Tope - MontoEmb
                            End If
                        End If
                        
                        rs_Acums.MoveNext
                    Loop
                        
                    If Cancela Then
                        StrSql = "UPDATE embcuota SET pronro =" & buliq_proceso!pronro
                        StrSql = StrSql & ", embccancela = -1 "
                        StrSql = StrSql & ", embcimpreal = " & ValorAcum
                        StrSql = StrSql & " WHERE embcuota.embcnro = " & rs_Cuota!embcnro
                        StrSql = StrSql & " AND embcuota.embnro = " & rs_Cuota!embnro
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If MontoEmb <= ValorAcum Then
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Se marca el embargo como finalizado "
                            End If
                            
                            StrSql = "UPDATE embargo SET embest = 'F'"
                            StrSql = StrSql & ", embfecest = " & ConvFecha(Date)
                            StrSql = StrSql & " WHERE embnro = " & rs_Embargo!embnro
                            objConn.Execute StrSql, , adExecuteNoRecords
                            
                            Finalizado = True
                        End If
                        
'                        If MontoEmb > ValorAcum Then
'                        ' Se terminaron los acumuladores y no se alcanzo a cubrir el monto
'                            GenCuota = True
'                            Dif = MontoEmb - ValorAcum
'                            Anio_aux = buliq_periodo!pliqanio
'                            Mes_Aux = buliq_periodo!pliqmes
'                            Quin_Aux = Quincena
'                            Call sigQuin(Anio_aux, Mes_Aux, Quin_Aux)
'                        Else
'                            ValorAcum = MontoEmb
'                        End If
'                        If GenCuota And ((rs_Embargo!embaniofin = 0) Or (rs_Embargo!embaniofin > Anio_aux) Or _
'                            ((rs_Embargo!embaniofin = Anio_aux) And (rs_Embargo!embmesfin < Mes_Aux))) Then
'                            ' Generar una cuota con la dif entre valor y montoemb para el proximo periodo
'                            StrSql = "INSERT INTO embcuota "
'                            StrSql = StrSql & "(embcnro, embnro, embcimp, embccancela, embcanio, embcmes, embcquin, embcimpreal, pronro) VALUES ("
'                            StrSql = StrSql & (CInt(rs_Cuota!embcnro) + 1) & "," & rs_Embargo!embnro
'                            StrSql = StrSql & "," & Dif & "," & 0 & "," & Anio_aux & "," & Mes_Aux
'                            StrSql = StrSql & "," & Quin_Aux & "," & 0 & "," & buliq_proceso!pronro & ")"
'                            objConn.Execute StrSql, , adExecuteNoRecords
'
'                            If CBool(USA_DEBUG) Then
'                                Flog.writeline Espacios(Tabulador * 4) & "Se genera una cuota nueva con el monto restante, $ " & Dif
'                            End If
'                        Else
'                            If CBool(USA_DEBUG) Then
'                                Flog.writeline Espacios(Tabulador * 4) & "Se marca el embargo como finalizado "
'                            End If
'
'                            StrSql = "UPDATE embargo SET embest = 'F'"
'                            StrSql = StrSql & ", embfecest = " & ConvFecha(Date)
'                            StrSql = StrSql & " WHERE embnro = " & rs_Embargo!embnro
'                            objConn.Execute StrSql, , adExecuteNoRecords
'
'                            Finalizado = True
'                        End If
                    End If
                Else
                ' El embargo no tiene monto, se descuenta lo que se puede
                    Do While Not rs_Acums.EOF
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "Calculo el monto de los acumuladores "
                        End If
    
                        If objCache_Acu_Liq_Monto.EsSimboloDefinido(CStr(rs_Acums!acnro)) Then
                            Monto = objCache_Acu_Liq_Monto.Valor(CStr(rs_Acums!acnro))
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Acumulador Nro. " & rs_Acums!acnro & " - Monto del Acumulador: " & Monto
                            End If
                        Else
                            Monto = 0
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "No se encontro el Acumulador Nro. " & rs_Acums!acnro & " - Monto del Acumulador: 0.00"
                            End If
                        End If
                        
                        ' Calculo el porcentaje del Acumulador
                        MontoParcial = ((Monto * CDbl(rs_Acums!embacporc)) / 100)
                        MontoAcum = MontoAcum + MontoParcial
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "Porcentaje a Considerar : " & rs_Acums!embacporc
                            Flog.writeline Espacios(Tabulador * 4) & "Monto a descontar : " & MontoParcial
                        End If
                        
                        If (MontoParcial <= Tope) Then
                            ValorAcum = ValorAcum + MontoParcial
                            Tope = Tope - MontoParcial
                        Else
                            ValorAcum = ValorAcum + Tope
                            Tope = Tope - MontoEmb
                        End If
                        
                        rs_Acums.MoveNext
                    Loop
                    
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "Se desconto $ " & ValorAcum
                    End If
                        
                    If Cancela Then
                        StrSql = "UPDATE embcuota SET pronro =" & buliq_proceso!pronro
                        StrSql = StrSql & ", embccancela = -1 "
                        StrSql = StrSql & ", embcimp = " & ValorAcum
                        StrSql = StrSql & ", embcimpreal = " & ValorAcum
                        StrSql = StrSql & " WHERE embcuota.embcnro = " & rs_Cuota!embcnro
                        StrSql = StrSql & " AND embcuota.embnro = " & rs_Cuota!embnro
                        objConn.Execute StrSql, , adExecuteNoRecords
                        
                        If (rs_Embargo!embaniofin > 0) Then ' Si (fecha fin > 0) entonces
                            If ((rs_Embargo!embaniofin = buliq_periodo!pliqanio) _
                                    And (rs_Embargo!embmesfin = buliq_periodo!pliqmes)) Then
                                '   Si (fecha fin = periodo actual) entonces
                                If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "Se marca el embargo como finalizado "
                                End If
                                
                                StrSql = "UPDATE embargo SET embest = 'F'"
                                StrSql = StrSql & ", embfecest = " & ConvFecha(Date)
                                StrSql = StrSql & " WHERE embnro = " & rs_Embargo!embnro
                                objConn.Execute StrSql, , adExecuteNoRecords
                                
                                Finalizado = True
                            End If
                        End If
                    End If
                End If
            End If
                                                              
            If Cancela Then
                If Finalizado Then
                ' Si hay algun embargo de tipo del que se cancelo con estado en Espera
                ' entonces setearlo como Activo
                    ' Chequear si el tipo del embargo tiene seteado "Hab. Siguiente"
                    If (rs_Embargo!tpehabsig < 0) Then
                        StrSql = "SELECT * FROM embargo "
                        StrSql = StrSql & " WHERE embargo.embest = 'E' "
                        StrSql = StrSql & " AND embargo.tpenro = " & rs_Embargo!tpenro
                        StrSql = StrSql & " AND embargo.ternro = " & buliq_empleado!ternro  'MAxi 26/03/07 Faltaba
                        OpenRecordset StrSql, rs_AuxEmbargo
                        ' Chequear si hay embargos con estado "En Espera"
                        If rs_AuxEmbargo.EOF Then
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "No se encontraron embargos para habilitar del mismo Tipo 'En Espera' "
                            End If
                        Else
                            StrSql = "UPDATE embargo SET embest = 'A'"
                            StrSql = StrSql & ", embfecest = " & ConvFecha(Date)
                            StrSql = StrSql & " WHERE embnro = " & rs_AuxEmbargo!embnro
                            objConn.Execute StrSql, , adExecuteNoRecords
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Se marco como Activo el embargo " & rs_AuxEmbargo!embnro
                            End If
                        End If
                    End If
                End If
            End If
        Else
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "El embargo tiene esta seteado como Cuota Societaria, pero no se encuentran Activos los embargos del Tipo asociado."
            End If
        End If
        
        Valor = Valor + ValorAcum
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Valor total descontado del Embargo: " & ValorAcum
        End If
        ValorAcum = 0
        Finalizado = False
        
        rs_Embargo.MoveNext
    Loop

' cierro todo y libero
If rs_Cuota.State = adStateOpen Then rs_Cuota.Close
If rs_Embargo.State = adStateOpen Then rs_Embargo.Close
If rs_AuxEmbargo.State = adStateOpen Then rs_AuxEmbargo.Close
If rs_Aux_Cuota.State = adStateOpen Then rs_Aux_Cuota.Close
If rs_Acums.State = adStateOpen Then rs_Acums.Close
      
Set rs_Embargo = Nothing
Set rs_Cuota = Nothing
Set rs_AuxEmbargo = Nothing
Set rs_Aux_Cuota = Nothing
Set rs_Acums = Nothing
End Sub


Public Sub bus_Embargos_old()
' ---------------------------------------------------------------------------------------------
' Descripcion: Obtencion de los embargos de cualquier tipo de prestamos.
'              Mensuales, 1era o 2da quincena.
'
' Autor      : GdeCos
' Fecha      : 25/02/2005
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
' Dim Final As Boolean    'Liquidacion Final
Dim Cancela As Boolean  'Si cancela las cuotas de embargos o no
Dim Nrotpe As Long       'Tipo de Embargos
Dim Opcion As Integer   ' 1 - Mensual
                        ' 2 - 1er Quincena
                        ' 3 - 2da Quincena
Dim acuNro As Integer   'Acumulador del cual se descuenta, si el embargo es por porcentaje
Dim Monto As Double     'Monto del Acumulador del Embargos
Dim Tope As Double      'Monto maximo a descontar del Acumulador del Embargos
Dim PorcTope As Double  'Porcentaje del Monto maximo a descontar
Dim Dif As Double       'Variable utilizada para calcular la diferencia (si fuese necesario)
                        'entre el Tope y el Monto del Embargo
Dim Cantcuo As Integer
Dim NroCuota As Integer
Dim MontoParcial As Double
Dim MontoAcum As Double
Dim MontoEmb As Double
Dim Anio_aux As Long
Dim Mes_Aux As Long
Dim Quin_Aux As Long
Dim GenCuota As Boolean

Dim Finalizado As Boolean ' Indica si finalizo el embargo

Dim ValorAcum As Double

Dim rs_Embargo As New ADODB.Recordset
Dim rs_AuxEmbargo As New ADODB.Recordset
Dim rs_Cuota As New ADODB.Recordset
Dim rs_Aux_Cuota As New ADODB.Recordset
Dim rs_Acums As New ADODB.Recordset

    Bien = False
    ValorAcum = 0
    Valor = 0
    Dif = 0
    Cantcuo = 0
    MontoEmb = 0
    Finalizado = False
   
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda "
    End If
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        If EsNulo(Arr_Programa(NroProg).Auxint1) Then
            Nrotpe = -1 ' Todos
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Todos los Tipos de Embargos "
            End If
        Else
            If Arr_Programa(NroProg).Auxint1 = 0 Then
                Nrotpe = -1 ' Todos
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "Todos los Tipos de Embargos "
                End If
            Else
                Nrotpe = Arr_Programa(NroProg).Auxint1
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "Tipo de Embargo: " & Nrotpe
                End If
            End If
        End If
        
        Opcion = Arr_Programa(NroProg).Auxint2
        
        acuNro = Arr_Programa(NroProg).Auxint3
        
        Cancela = IIf(Not EsNulo(Arr_Programa(NroProg).Auxlog2), CBool(Arr_Programa(NroProg).Auxlog2), True)

        PorcTope = CDbl(Arr_Programa(NroProg).Auxchar1)
        
'       Final = CBool(Arr_Programa(NroProg).Auxlog1)
        
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Parametros cargados "
        End If
        
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontró la busqueda " & NroProg
        End If
        Exit Sub
    End If

    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Calculando el tope a descontar...del Acumulador: " & acuNro
    End If

    If objCache_Acu_Liq_Monto.EsSimboloDefinido(CStr(acuNro)) Then
         Tope = (objCache_Acu_Liq_Monto.Valor(CStr(acuNro)) * PorcTope) / 100
    Else
         Tope = 0
    End If
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Tope Calculado = " & Tope
    End If
    
    Select Case Opcion
    Case 1: 'Embargos Mensuales
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busco los embargos mensuales "
        End If
        
        StrSql = "SELECT embargo.*, tipoemb.tpeprioridad, tipoemb.tpefordesc, tipoemb.tpehabsig, tipoemb.tpeton, tipoemb.tpecuosoc FROM embargo,tipoemb "
        StrSql = StrSql & " WHERE embargo.ternro = " & buliq_empleado!ternro
        StrSql = StrSql & " AND  embargo.embest = 'A' "
        StrSql = StrSql & " AND embargo.embquincenal = 0 "
        StrSql = StrSql & " AND ((embargo.embanioini < " & buliq_periodo!pliqanio
        StrSql = StrSql & ") OR ((embargo.embanioini = " & buliq_periodo!pliqanio & ") AND (embargo.embmesini <= " & buliq_periodo!pliqmes & ")))"
        StrSql = StrSql & " AND ((embargo.embaniofin = 0 ) "
        StrSql = StrSql & " OR  ((embargo.embaniofin > " & buliq_periodo!pliqanio
        StrSql = StrSql & ") OR ((embargo.embaniofin = " & buliq_periodo!pliqanio & ") AND (embargo.embmesfin >= " & buliq_periodo!pliqmes & "))))"
        If Nrotpe <> -1 Then
            StrSql = StrSql & " AND embargo.tpenro =" & Nrotpe
        End If
        StrSql = StrSql & " AND embargo.tpenro = tipoemb.tpenro"
        StrSql = StrSql & " ORDER BY tipoemb.tpeprioridad "
        OpenRecordset StrSql, rs_Embargo
                
        If CBool(USA_DEBUG) Then
            If rs_Embargo.EOF Then
                Flog.writeline Espacios(Tabulador * 4) & "No se encontraron embargos "
            End If
        End If
                
        Do While Not rs_Embargo.EOF
            
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Se procesara el embargo: " & rs_Embargo!embnro
            End If
            
            If Cuosoc(rs_Embargo!tpenro) Then
            ' Chequeo si el tipo de embargo tiene "on" en Cuota Societaria y si existe algun embargo activo
            ' con tipo asociado a este (por tabla tipoembreq)
                
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "Busco las cuotas para el embargo " & rs_Embargo!embnro
                End If
            
                StrSql = "SELECT * FROM embcuota "
                StrSql = StrSql & " WHERE embcuota.embnro =" & rs_Embargo!embnro
                StrSql = StrSql & " AND embcuota.embccancela = 0 "
                StrSql = StrSql & " AND embcuota.embcanio = " & buliq_periodo!pliqanio
                StrSql = StrSql & " AND embcuota.embcmes = " & buliq_periodo!pliqmes
                OpenRecordset StrSql, rs_Cuota
        
                If CBool(USA_DEBUG) Then
                    If rs_Cuota.EOF Then
                        Flog.writeline Espacios(Tabulador * 4) & "No se encontraron cuotas "
                    End If
                End If
                               
                
                If (rs_Embargo!tpefordesc < 1) Then
                
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "El embargo esta marcado por Monto"
                    End If
                    
                    Do While ((Not rs_Cuota.EOF) And (Tope > 0))
                        
                        If (CDbl(rs_Cuota!embcimp) <= Tope) Then
                        
                            ValorAcum = ValorAcum + CDbl(rs_Cuota!embcimp)
                            
                            If Cancela Then
                                StrSql = "UPDATE embcuota SET pronro =" & buliq_proceso!pronro
                                StrSql = StrSql & ", embccancela = -1 "
                                StrSql = StrSql & ", embcimpreal = " & rs_Cuota!embcimp
                                StrSql = StrSql & " WHERE embcuota.embcnro = " & rs_Cuota!embcnro
                                StrSql = StrSql & " AND embcuota.embnro = " & rs_Cuota!embnro
                                objConn.Execute StrSql, , adExecuteNoRecords
                            End If
                            
                            Tope = Tope - CDbl(rs_Cuota!embcimp)
                        
                        Else
                        
                            ' Controlo que no este seteado como "Liquida Todo o Nada"
                            If (rs_Embargo!tpeton = 0) Then
                            
                                ValorAcum = ValorAcum + Tope
                                
                                Dif = CDbl(rs_Cuota!embcimp) - Tope
                            
                                If Cancela Then
                                    StrSql = "UPDATE embcuota SET pronro =" & buliq_proceso!pronro
                                    StrSql = StrSql & ", embccancela = -1 "
                                    StrSql = StrSql & ", embcimpreal = " & Tope
                                    StrSql = StrSql & " WHERE embcuota.embcnro = " & rs_Cuota!embcnro
                                    StrSql = StrSql & " AND embcuota.embnro = " & rs_Cuota!embnro
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                
                                    ' Junto datos para agregar la cuota con el importe restante
                                    StrSql = "SELECT MAX(embcnro) AS cantcuo FROM embcuota "
                                    StrSql = StrSql & " WHERE embcuota.embnro = " & rs_Embargo!embnro
                                    OpenRecordset StrSql, rs_Aux_Cuota
                                                                
                                    NroCuota = CInt(rs_Aux_Cuota!Cantcuo) + 1
                                    Anio_aux = rs_Cuota!embcanio
                                    Mes_Aux = rs_Cuota!embcmes
                                    rs_Aux_Cuota.Close
                                        
                                    'Calculo el proximo mes y año
                                    If Mes_Aux = 12 Then
                                        Mes_Aux = 1
                                        Anio_aux = Anio_aux + 1
                                    Else
                                        Mes_Aux = Mes_Aux + 1
                                    End If
                                    
                                    ' Agrego una cuota al final
                                    StrSql = "INSERT INTO embcuota "
                                    StrSql = StrSql & "(embcnro, embnro, embcimp, embccancela, embcanio, embcmes, embcimpreal, pronro) VALUES ("
                                    StrSql = StrSql & NroCuota & "," & rs_Embargo!embnro
                                    StrSql = StrSql & "," & Dif & ",0," & Anio_aux & "," & Mes_Aux
                                    StrSql = StrSql & "," & 0 & "," & buliq_proceso!pronro & ")"
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                                                                                           
                                    'Actualizo la cantidad de cuotas del embargo
                                    StrSql = "SELECT COUNT(embcnro) AS cantcuo FROM embcuota "
                                    StrSql = StrSql & " WHERE embcuota.embnro = " & rs_Embargo!embnro
                                    OpenRecordset StrSql, rs_Aux_Cuota
                                    
                                    NroCuota = CInt(rs_Aux_Cuota!Cantcuo)
                                    rs_Aux_Cuota.Close
                                    
                                    StrSql = "UPDATE embargo SET embcantcuo = " & NroCuota
                                    StrSql = StrSql & " WHERE embnro = " & rs_Embargo!embnro
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                    
                                    If CBool(USA_DEBUG) Then
                                        Flog.writeline Espacios(Tabulador * 4) & "Se genero una cuota para el periodo " & Mes_Aux & "/" & Anio_aux & " por la suma de $ " & Dif
                                    End If
                                
                                End If
                                
                                Tope = 0
                            Else
                                If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "El embargo esta seteado como liquida todo o nada. No se realizan descuentos."
                                End If
                                
                                If Cancela Then
                                    StrSql = "UPDATE embcuota SET pronro =" & buliq_proceso!pronro
                                    StrSql = StrSql & ", embccancela = -1 "
                                    StrSql = StrSql & ", embcimpreal = 0.00"
                                    StrSql = StrSql & " WHERE embcuota.embcnro = " & rs_Cuota!embcnro
                                    StrSql = StrSql & " AND embcuota.embnro = " & rs_Cuota!embnro
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                
                                    ' Junto datos para agregar la cuota con el importe restante
                                    StrSql = "SELECT MAX(embcnro) AS cantcuo FROM embcuota "
                                    StrSql = StrSql & " WHERE embcuota.embnro = " & rs_Embargo!embnro
                                    OpenRecordset StrSql, rs_Aux_Cuota
                                                                
                                    NroCuota = CInt(rs_Aux_Cuota!Cantcuo) + 1
                                    rs_Aux_Cuota.Close
                                    Anio_aux = rs_Cuota!embcanio
                                    Mes_Aux = rs_Cuota!embcmes
                                    Dif = rs_Cuota!embcimp
                                                            
                                    'Calculo el proximo mes y año
                                    If Mes_Aux = 12 Then
                                        Mes_Aux = 1
                                        Anio_aux = Anio_aux + 1
                                    Else
                                        Mes_Aux = Mes_Aux + 1
                                    End If
                                    
                                    ' Agrego una cuota al final
                                    StrSql = "INSERT INTO embcuota "
                                    StrSql = StrSql & "(embcnro, embnro, embcimp, embccancela, embcanio, embcmes, embcimpreal, pronro) VALUES ("
                                    StrSql = StrSql & NroCuota & "," & rs_Embargo!embnro
                                    StrSql = StrSql & "," & Dif & ",0," & Anio_aux & "," & Mes_Aux
                                    StrSql = StrSql & "," & 0 & "," & buliq_proceso!pronro & ")"
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                                                                                           
                                    'Actualizo la cantidad de cuotas del embargo
                                    StrSql = "SELECT COUNT(embcnro) AS cantcuo FROM embcuota "
                                    StrSql = StrSql & " WHERE embcuota.embnro = " & rs_Embargo!embnro
                                    OpenRecordset StrSql, rs_Aux_Cuota
                                    
                                    NroCuota = CInt(rs_Aux_Cuota!Cantcuo)
                                    rs_Aux_Cuota.Close
                                    
                                    StrSql = "UPDATE embargo SET embcantcuo = " & NroCuota
                                    StrSql = StrSql & " WHERE embnro = " & rs_Embargo!embnro
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                                                                                           
                                    If CBool(USA_DEBUG) Then
                                        Flog.writeline Espacios(Tabulador * 4) & "Se genero una cuota para el periodo " & Mes_Aux & "/" & Anio_aux & " por la suma de $ " & Dif
                                    End If
                                
                                End If
                            
                            End If
                                                        
                        End If
                        
                        rs_Cuota.MoveNext
                    
                    Loop
                
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "Se descontaron del Embargo $ " & ValorAcum
                    End If
                
                    ' Controlo si se cancelaron todas las cuotas. Entonces seteo el embargo como finalizado.
                    If Cancela Then
                        If rs_Cuota.State = adStateOpen Then
                            rs_Cuota.Close
                        End If
                        StrSql = "SELECT COUNT (embcnro) AS cantcuo FROM embcuota "
                        StrSql = StrSql & " WHERE embcuota.embnro = " & rs_Embargo!embnro
                        StrSql = StrSql & " AND embcuota.embccancela = 0 "
                        OpenRecordset StrSql, rs_Cuota
                        ' Chequeo si se liquido la ultima cuota (y estan todas canceladas).
                        ' Si ocurre esto, marco como "Finalizado" el embargo
                        If rs_Cuota!Cantcuo = 0 Then
                            If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "Se marca el embargo como finalizado "
                            End If
                            
                            StrSql = "UPDATE embargo SET embest = 'F'"
                            StrSql = StrSql & ", embfecest = " & ConvFecha(Date)
                            StrSql = StrSql & " WHERE embnro = " & rs_Embargo!embnro
                            objConn.Execute StrSql, , adExecuteNoRecords
                            
                            Finalizado = True
                        End If
                    End If
                
                Else
                                       
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "El embargo esta marcado por Porcentaje o Ambos"
                    End If
                    
                    MontoEmb = rs_Embargo!embimp
                    
                    If rs_Cuota.EOF Then
                    ' Si no hay cuotas (la busqueda la realiza arriba), Crearla de acuerdo al monto
                    ' y a la fecha de finalizacion
                                                                                    
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "No se encuentran cuotas. Se genera una nueva."
                        End If
                        
                        If (MontoEmb > 0) Then
                        ' El embargo tiene un monto
            
                            ' Agrego una cuota al final
                            StrSql = "INSERT INTO embcuota "
                            StrSql = StrSql & "(embcnro, embnro, embcimp, embccancela, embcanio, embcmes, embcimpreal, pronro) VALUES ("
                            StrSql = StrSql & 1 & "," & rs_Embargo!embnro
                            StrSql = StrSql & "," & MontoEmb & "," & 0 & "," & buliq_periodo!pliqanio & "," & buliq_periodo!pliqmes
                            StrSql = StrSql & "," & 0 & "," & buliq_proceso!pronro & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Se genera una cuota nueva para el periodo actual por $ " & MontoEmb
                            End If
                        
                        Else
                            Crear_Cuotas_Embargo rs_Embargo!embnro, 0
                        End If
                    
                        ' Hago el select de nuevo (buscar cuotas)
                        rs_Cuota.Close
                        
                        StrSql = "SELECT * FROM embcuota "
                        StrSql = StrSql & " WHERE embcuota.embnro =" & rs_Embargo!embnro
                        StrSql = StrSql & " AND embcuota.embccancela = 0 "
                        StrSql = StrSql & " AND embcuota.embcanio = " & buliq_periodo!pliqanio
                        StrSql = StrSql & " AND embcuota.embcmes = " & buliq_periodo!pliqmes
                        OpenRecordset StrSql, rs_Cuota
    
                    End If
                    
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "Busco los aumuladores para el embargo " & rs_Embargo!embnro
                    End If
                
                    StrSql = "SELECT emb_acu.embacporc, emb_acu.acnro FROM emb_acu"
                    StrSql = StrSql & " WHERE emb_acu.embnro =" & rs_Embargo!embnro
                    OpenRecordset StrSql, rs_Acums
                               
                    If CBool(USA_DEBUG) Then
                        If rs_Acums.EOF Then
                            Flog.writeline Espacios(Tabulador * 4) & "No se encontraron acumuladores "
                        End If
                    End If
                
                    MontoParcial = 0
                    MontoAcum = 0
                    GenCuota = False
                   
                    If MontoEmb > 0 Then
                    ' Si se debe cancelar un monto del embargo
                    
                        Do While (Not rs_Acums.EOF) And ((MontoEmb - MontoAcum) > 0) And (Tope > 0)
                                               
                            If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "Calculo el monto de los acumuladores "
                            End If
        
                            If objCache_Acu_Liq_Monto.EsSimboloDefinido(CStr(rs_Acums!acnro)) Then
                                Monto = objCache_Acu_Liq_Monto.Valor(CStr(rs_Acums!acnro))
                                If CBool(USA_DEBUG) Then
                                        Flog.writeline Espacios(Tabulador * 4) & "Acumulador Nro. " & rs_Acums!acnro & " - Monto del Acumulador: " & Monto
                                End If
                            Else
                                Monto = 0
                                If CBool(USA_DEBUG) Then
                                        Flog.writeline Espacios(Tabulador * 4) & "No se encontro el Acumulador Nro. " & rs_Acums!acnro & " - Monto del Acumulador: 0.00"
                                End If
                            End If
                            
                            ' Calculo el porcentaje del Acumulador
                            MontoParcial = ((Monto * CDbl(rs_Acums!embacporc)) / 100)
                            MontoAcum = MontoAcum + MontoParcial
                            If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "Porcentaje a Considerar : " & rs_Acums!embacporc
                                    Flog.writeline Espacios(Tabulador * 4) & "Monto a descontar : " & MontoParcial
                            End If
                            
                            If (MontoParcial <= Tope) And (MontoAcum <= MontoEmb) Then
                                             
                                ValorAcum = ValorAcum + MontoParcial
                                
                                Tope = Tope - MontoParcial
                                
                            Else
                            
                                If (MontoParcial > Tope) Then
                                    If (Tope > MontoEmb) Then
                                        ValorAcum = ValorAcum + MontoEmb
                                        Tope = Tope - MontoEmb
                                    Else
                                        ValorAcum = ValorAcum + Tope
                                        Tope = 0
                                    End If
                                Else
                                    ValorAcum = MontoEmb
                                    
                                    Tope = Tope - MontoEmb
                                End If
                            
                            End If
                            
                            rs_Acums.MoveNext
                        Loop
                            
                        If Cancela Then
                            StrSql = "UPDATE embcuota SET pronro =" & buliq_proceso!pronro
                            StrSql = StrSql & ", embccancela = -1 "
                            StrSql = StrSql & ", embcimpreal = " & ValorAcum
                            StrSql = StrSql & " WHERE embcuota.embcnro = " & rs_Cuota!embcnro
                            StrSql = StrSql & " AND embcuota.embnro = " & rs_Cuota!embnro
                            objConn.Execute StrSql, , adExecuteNoRecords
                            If MontoEmb > ValorAcum Then
                            ' Se terminaron los acumuladores y no se alcanzo a cubrir el monto
                                GenCuota = True
                                Dif = MontoEmb - ValorAcum
                                Anio_aux = buliq_periodo!pliqanio
                                Mes_Aux = buliq_periodo!pliqmes
                                Call sigMes(Anio_aux, Mes_Aux)
                            Else
                                ValorAcum = MontoEmb
                            End If
                            If GenCuota And ((rs_Embargo!embaniofin = 0) Or (rs_Embargo!embaniofin > Anio_aux) Or _
                                ((rs_Embargo!embaniofin = Anio_aux) And (rs_Embargo!embmesfin < Mes_Aux))) Then
                                ' Generar una cuota con la dif entre valor y montoemb para el proximo periodo
                                StrSql = "INSERT INTO embcuota "
                                StrSql = StrSql & "(embcnro, embnro, embcimp, embccancela, embcanio, embcmes, embcimpreal, pronro) VALUES ("
                                StrSql = StrSql & (CInt(rs_Cuota!embcnro) + 1) & "," & rs_Embargo!embnro
                                StrSql = StrSql & "," & Dif & "," & 0 & "," & Anio_aux & "," & Mes_Aux
                                StrSql = StrSql & "," & 0 & "," & buliq_proceso!pronro & ")"
                                objConn.Execute StrSql, , adExecuteNoRecords
                            
                                If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "Se genera una cuota nueva con el monto restante, $ " & Dif
                                End If
                            Else
                            
                                If CBool(USA_DEBUG) Then
                                        Flog.writeline Espacios(Tabulador * 4) & "Se marca el embargo como finalizado "
                                End If
                                
                                StrSql = "UPDATE embargo SET embest = 'F'"
                                StrSql = StrSql & ", embfecest = " & ConvFecha(Date)
                                StrSql = StrSql & " WHERE embnro = " & rs_Embargo!embnro
                                objConn.Execute StrSql, , adExecuteNoRecords
                                
                                Finalizado = True
                            
                            End If
                        End If
                    Else
                    ' El embargo no tiene monto, se descuenta lo que se puede
                        Do While Not rs_Acums.EOF
                                               
                            If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "Calculo el monto de los acumuladores "
                            End If
        
                            If objCache_Acu_Liq_Monto.EsSimboloDefinido(CStr(rs_Acums!acnro)) Then
                                Monto = objCache_Acu_Liq_Monto.Valor(CStr(rs_Acums!acnro))
                                If CBool(USA_DEBUG) Then
                                        Flog.writeline Espacios(Tabulador * 4) & "Acumulador Nro. " & rs_Acums!acnro & " - Monto del Acumulador: " & Monto
                                End If
                            Else
                                Monto = 0
                                If CBool(USA_DEBUG) Then
                                        Flog.writeline Espacios(Tabulador * 4) & "No se encontro el Acumulador Nro. " & rs_Acums!acnro & " - Monto del Acumulador: 0.00"
                                End If
                            End If
                            
                            ' Calculo el porcentaje del Acumulador
                            MontoParcial = ((Monto * CDbl(rs_Acums!embacporc)) / 100)
                            MontoAcum = MontoAcum + MontoParcial
                            If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "Porcentaje a Considerar : " & rs_Acums!embacporc
                                    Flog.writeline Espacios(Tabulador * 4) & "Monto a descontar : " & MontoParcial
                            End If
                            
                            If (MontoParcial <= Tope) Then
                                             
                                ValorAcum = ValorAcum + MontoParcial
                                
                                Tope = Tope - MontoParcial
                                
                           
                            Else
                            
                                ValorAcum = ValorAcum + Tope
                                                      
                                Tope = 0
                                                            
                            End If
                            
                            rs_Acums.MoveNext
                        Loop
                            
                        If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Se desconto $ " & ValorAcum
                        End If
                        
                        If Cancela Then
                            StrSql = "UPDATE embcuota SET pronro =" & buliq_proceso!pronro
                            StrSql = StrSql & ", embccancela = -1 "
                            StrSql = StrSql & ", embcimp = " & ValorAcum
                            StrSql = StrSql & ", embcimpreal = " & ValorAcum
                            StrSql = StrSql & " WHERE embcuota.embcnro = " & rs_Cuota!embcnro
                            StrSql = StrSql & " AND embcuota.embnro = " & rs_Cuota!embnro
                            objConn.Execute StrSql, , adExecuteNoRecords
                        
                            If (rs_Embargo!embaniofin > 0) Then
                            ' Si (fecha fin > 0) entonces
                                
                                If ((rs_Embargo!embaniofin = buliq_periodo!pliqanio) _
                                        And (rs_Embargo!embmesfin = buliq_periodo!pliqmes)) Then
                                    '   Si (fecha fin = periodo actual) entonces
                                    
                                    If CBool(USA_DEBUG) Then
                                            Flog.writeline Espacios(Tabulador * 4) & "Se marca el embargo como finalizado "
                                    End If
                                    
                                    StrSql = "UPDATE embargo SET embest = 'F'"
                                    StrSql = StrSql & ", embfecest = " & ConvFecha(Date)
                                    StrSql = StrSql & " WHERE embnro = " & rs_Embargo!embnro
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                    
                                    Finalizado = True
                                End If
                            End If
                            
                        End If
                    
                    End If
                End If
                                                                  
                If Cancela Then
                        
                    If Finalizado Then
                    ' Si hay algun embargo de tipo del que se cancelo con estado en Espera
                    ' entonces setearlo como Activo
                        
                        ' Chequear si el tipo del embargo tiene seteado "Hab. Siguiente"
                        If (rs_Embargo!tpehabsig < 0) Then
                            
                            StrSql = "SELECT * FROM embargo "
                            StrSql = StrSql & " WHERE embargo.embest = 'E' "
                            StrSql = StrSql & " AND embargo.tpenro = " & rs_Embargo!tpenro
                            OpenRecordset StrSql, rs_AuxEmbargo
                            ' Chequear si hay embargos con estado "En Espera"
                            If rs_AuxEmbargo.EOF Then
                                If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "No se encontraron embargos para habilitar del mismo Tipo 'En Espera' "
                                End If
                            Else
                                StrSql = "UPDATE embargo SET embest = 'A'"
                                StrSql = StrSql & ", embfecest = " & Date
                                StrSql = StrSql & " WHERE embnro = " & rs_AuxEmbargo!embnro
                                objConn.Execute StrSql, , adExecuteNoRecords
                                If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "Se marco como Activo el embargo " & rs_AuxEmbargo!embnro
                                End If
                            End If
                        
                        End If
                    
                    End If
                                
                End If
            
            Else
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "El embargo esta seteado como Cuota Societaria, pero no se encuentran Activos los embargos del Tipo asociado."
                End If
            End If
            
            Valor = Valor + ValorAcum
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Valor total descontado del Embargo: " & ValorAcum
            End If
            
            ValorAcum = 0
            Finalizado = False
    
            rs_Embargo.MoveNext
        Loop
                                              
        
    Case 2: 'Embargos de la Primera quincena
        
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busco los embargos de la primera quincena "
        End If
    
        StrSql = "SELECT embargo.*, tipoemb.tpeprioridad, tipoemb.tpefordesc, tipoemb.tpehabsig, tipoemb.tpeton, tipoemb.tpecuosoc FROM embargo,tipoemb "
        StrSql = StrSql & " WHERE embargo.ternro = " & buliq_empleado!ternro
        StrSql = StrSql & " AND  embargo.embest = 'A' "
        StrSql = StrSql & " AND embargo.embquincenal = -1 "
        StrSql = StrSql & " AND ((embargo.embanioini < " & buliq_periodo!pliqanio
        StrSql = StrSql & ") OR ((embargo.embanioini = " & buliq_periodo!pliqanio & ") AND (embargo.embmesini <= " & buliq_periodo!pliqmes & ")))"
        StrSql = StrSql & " AND ((embargo.embaniofin = 0) "
        StrSql = StrSql & " OR  ((embargo.embaniofin > " & buliq_periodo!pliqanio
        StrSql = StrSql & ") OR ((embargo.embaniofin = " & buliq_periodo!pliqanio & ") AND (embargo.embmesfin >= " & buliq_periodo!pliqmes & "))))"
        If Nrotpe <> -1 Then
            StrSql = StrSql & " AND embargo.tpenro =" & Nrotpe
        End If
        StrSql = StrSql & " AND embargo.tpenro = tipoemb.tpenro"
        StrSql = StrSql & " ORDER BY tipoemb.tpeprioridad "
        OpenRecordset StrSql, rs_Embargo
                
        If CBool(USA_DEBUG) Then
            If rs_Embargo.EOF Then
                Flog.writeline Espacios(Tabulador * 4) & "No se encontraron embargos "
            End If
        End If
                
        Do While Not rs_Embargo.EOF
            
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Se procesara el embargo: " & rs_Embargo!embnro
            End If
            
            If Cuosoc(rs_Embargo!tpenro) Then
            ' Chequeo si el tipo de embargo tiene "on" en Cuota Societaria y si existe algun embargo activo
            ' con tipo asociado a este (por tabla tipoembreq)
            
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "Busco las cuotas para el embargo " & rs_Embargo!embnro
                End If
            
                StrSql = "SELECT * FROM embcuota "
                StrSql = StrSql & " WHERE embcuota.embnro =" & rs_Embargo!embnro
                StrSql = StrSql & " AND embcuota.embccancela = 0 "
                StrSql = StrSql & " AND embcuota.embcquin = 1 "
                StrSql = StrSql & " AND embcuota.embcanio = " & buliq_periodo!pliqanio
                StrSql = StrSql & " AND embcuota.embcmes = " & buliq_periodo!pliqmes
                OpenRecordset StrSql, rs_Cuota
        
                If CBool(USA_DEBUG) Then
                    If rs_Cuota.EOF Then
                        Flog.writeline Espacios(Tabulador * 4) & "No se encontraron cuotas "
                    End If
                End If
                               
                
                If (rs_Embargo!tpefordesc < 1) Then
                
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "El embargo esta marcado por Monto"
                    End If
                    
                    Do While ((Not rs_Cuota.EOF) And (Tope > 0))
                        
                        If (CDbl(rs_Cuota!embcimp) <= Tope) Then
                        
                            ValorAcum = ValorAcum + CDbl(rs_Cuota!embcimp)
                            
                            If Cancela Then
                                StrSql = "UPDATE embcuota SET pronro =" & buliq_proceso!pronro
                                StrSql = StrSql & ", embccancela = -1 "
                                StrSql = StrSql & ", embcimpreal = " & rs_Cuota!embcimp
                                StrSql = StrSql & " WHERE embcuota.embcnro = " & rs_Cuota!embcnro
                                StrSql = StrSql & " AND embcuota.embnro = " & rs_Cuota!embnro
                                objConn.Execute StrSql, , adExecuteNoRecords
                            End If
                            
                            Tope = Tope - CDbl(rs_Cuota!embcimp)
                        
                        Else
                        
                            ' Controlo que no este seteado como "Liquida Todo o Nada"
                            If (rs_Embargo!tpeton = 0) Then
                            
                                ValorAcum = ValorAcum + Tope
                                
                                Dif = CDbl(rs_Cuota!embcimp) - Tope
                            
                                If Cancela Then
                                    StrSql = "UPDATE embcuota SET pronro =" & buliq_proceso!pronro
                                    StrSql = StrSql & ", embccancela = -1 "
                                    StrSql = StrSql & ", embcimpreal = " & Tope
                                    StrSql = StrSql & " WHERE embcuota.embcnro = " & rs_Cuota!embcnro
                                    StrSql = StrSql & " AND embcuota.embnro = " & rs_Cuota!embnro
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                
                                    ' Junto datos para agregar la cuota con el importe restante
                                    StrSql = "SELECT MAX(embcnro) AS cantcuo FROM embcuota "
                                    StrSql = StrSql & " WHERE embcuota.embnro = " & rs_Embargo!embnro
                                    OpenRecordset StrSql, rs_Aux_Cuota
                                    
                                    NroCuota = rs_Aux_Cuota!Cantcuo + 1
                                    Anio_aux = rs_Cuota!embcanio
                                    Mes_Aux = rs_Cuota!embcmes
                                    Quin_Aux = rs_Cuota!embcquin
                                    rs_Aux_Cuota.Close
                                        
                                    'Calculo el proximo mes, año y quincena
                                    Call sigQuin(Anio_aux, Mes_Aux, Quin_Aux)
                                    
                                    ' Agrego una cuota al final
                                    StrSql = "INSERT INTO embcuota "
                                    StrSql = StrSql & "(embcnro, embnro, embcimp, embccancela, embcanio, embcmes, embcquin, embcimpreal, pronro) VALUES ("
                                    StrSql = StrSql & NroCuota & "," & rs_Embargo!embnro
                                    StrSql = StrSql & "," & Dif & ",0," & Anio_aux & "," & Mes_Aux
                                    StrSql = StrSql & "," & Quin_Aux & "," & 0 & "," & buliq_proceso!pronro & ")"
    
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                                                               
                                    'Actualizo la cantidad de cuotas del embargo
                                    StrSql = "SELECT COUNT(embcnro) AS cantcuo FROM embcuota "
                                    StrSql = StrSql & " WHERE embcuota.embnro = " & rs_Embargo!embnro
                                    OpenRecordset StrSql, rs_Aux_Cuota
                                    
                                    NroCuota = CInt(rs_Aux_Cuota!Cantcuo)
                                    rs_Aux_Cuota.Close
                                    
                                    StrSql = "UPDATE embargo SET embcantcuo = " & NroCuota
                                    StrSql = StrSql & " WHERE embnro = " & rs_Embargo!embnro
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                    
                                    If CBool(USA_DEBUG) Then
                                        Flog.writeline Espacios(Tabulador * 4) & "Se genero una cuota para el periodo " & Mes_Aux & "/" & Anio_aux & " por la suma de $ " & Dif
                                    End If
                                
                                End If
                                
                                Tope = 0
                            
                            Else
                                If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "El embargo esta seteado como liquida todo o nada. No se realizan descuentos."
                                End If
                            
                                If Cancela Then
                                    StrSql = "UPDATE embcuota SET pronro =" & buliq_proceso!pronro
                                    StrSql = StrSql & ", embccancela = -1 "
                                    StrSql = StrSql & ", embcimpreal = 0.00"
                                    StrSql = StrSql & " WHERE embcuota.embcnro = " & rs_Cuota!embcnro
                                    StrSql = StrSql & " AND embcuota.embnro = " & rs_Cuota!embnro
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                
                                    ' Junto datos para agregar la cuota con el importe restante
                                    StrSql = "SELECT MAX(embcnro) AS cantcuo FROM embcuota "
                                    StrSql = StrSql & " WHERE embcuota.embnro = " & rs_Embargo!embnro
                                    OpenRecordset StrSql, rs_Aux_Cuota
                                    
                                    NroCuota = rs_Aux_Cuota!Cantcuo + 1
                                    rs_Aux_Cuota.Close
                                    Dif = rs_Cuota!embcimp
                                    Anio_aux = rs_Cuota!embcanio
                                    Mes_Aux = rs_Cuota!embcmes
                                    Quin_Aux = rs_Cuota!embcquin
                                        
                                    'Calculo el proximo mes, año y quincena
                                    Call sigQuin(Anio_aux, Mes_Aux, Quin_Aux)
                                    
                                    ' Agrego una cuota al final
                                    StrSql = "INSERT INTO embcuota "
                                    StrSql = StrSql & "(embcnro, embnro, embcimp, embccancela, embcanio, embcmes, embcquin, embcimpreal, pronro) VALUES ("
                                    StrSql = StrSql & NroCuota & "," & rs_Embargo!embnro
                                    StrSql = StrSql & "," & Dif & ",0," & Anio_aux & "," & Mes_Aux
                                    StrSql = StrSql & "," & Quin_Aux & "," & 0 & "," & buliq_proceso!pronro & ")"
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                                                               
                                    'Actualizo la cantidad de cuotas del embargo
                                    StrSql = "SELECT COUNT(embcnro) AS cantcuo FROM embcuota "
                                    StrSql = StrSql & " WHERE embcuota.embnro = " & rs_Embargo!embnro
                                    OpenRecordset StrSql, rs_Aux_Cuota
                                    
                                    NroCuota = CInt(rs_Aux_Cuota!Cantcuo)
                                    rs_Aux_Cuota.Close
                                    
                                    StrSql = "UPDATE embargo SET embcantcuo = " & NroCuota
                                    StrSql = StrSql & " WHERE embnro = " & rs_Embargo!embnro
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                                                               
                                    If CBool(USA_DEBUG) Then
                                        Flog.writeline Espacios(Tabulador * 4) & "Se genero una cuota para el periodo " & Mes_Aux & "/" & Anio_aux & " por la suma de $ " & Dif
                                    End If
                                
                                End If
                            
                            End If
                                                        
                        End If
                        
                        rs_Cuota.MoveNext
                    
                    Loop
                    
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "Se descontaron del Embargo $ " & ValorAcum
                    End If
                               
                    ' Controlo si se cancelaron todas las cuotas. Entonces seteo el embargo como finalizado.
                    If Cancela Then
                        If rs_Cuota.State = adStateOpen Then
                            rs_Cuota.Close
                        End If
                        StrSql = "SELECT COUNT (embcnro) AS cantcuo FROM embcuota "
                        StrSql = StrSql & " WHERE embcuota.embnro = " & rs_Embargo!embnro
                        StrSql = StrSql & " AND embcuota.embccancela = 0 "
                        OpenRecordset StrSql, rs_Cuota
                        ' Chequeo si se liquido la ultima cuota (y estan todas canceladas).
                        ' Si ocurre esto, marco como "Finalizado" el embargo
                        If rs_Cuota!Cantcuo = 0 Then
                            If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "Se marca el embargo como finalizado "
                            End If
                            
                            StrSql = "UPDATE embargo SET embest = 'F'"
                            StrSql = StrSql & ", embfecest = " & ConvFecha(Date)
                            StrSql = StrSql & " WHERE embnro = " & rs_Embargo!embnro
                            objConn.Execute StrSql, , adExecuteNoRecords
                            
                            Finalizado = True
                        End If
                    End If
     
                Else
                                       
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "El embargo esta marcado por Porcentaje o Ambos"
                    End If
                    
                    MontoEmb = rs_Embargo!embimp
                    
                    If rs_Cuota.EOF Then
                    ' Si no hay cuotas (la busqueda la realiza arriba), Crearla de acuerdo al monto
                    ' y a la fecha de finalizacion
                        
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "No se encuentran cuotas. Se genera una nueva."
                        End If
                        
                        If (MontoEmb > 0) Then
                        ' El embargo tiene un monto
            
                            ' Agrego una cuota al final
                            StrSql = "INSERT INTO embcuota "
                            StrSql = StrSql & "(embcnro, embnro, embcimp, embccancela, embcanio, embcmes, embcquin, embcimpreal, pronro) VALUES ("
                            StrSql = StrSql & 1 & "," & rs_Embargo!embnro
                            StrSql = StrSql & "," & MontoEmb & "," & 0 & "," & buliq_periodo!pliqanio & "," & buliq_periodo!pliqmes
                            StrSql = StrSql & "," & 1 & "," & 0 & "," & buliq_proceso!pronro & ")"

                            objConn.Execute StrSql, , adExecuteNoRecords
                            
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Se genera una cuota nueva para el periodo actual por $ " & MontoEmb
                            End If
                        
                        Else
                            ' Si el embargo tiene año de finalizacion acorde con el periodo de liquidacion
                            
                            Crear_Cuotas_Embargo rs_Embargo!embnro, 1
                            
                        End If
                    
                        ' Hago el select de nuevo (buscar cuotas)
                        rs_Cuota.Close
                        
                        StrSql = "SELECT * FROM embcuota "
                        StrSql = StrSql & " WHERE embcuota.embnro =" & rs_Embargo!embnro
                        StrSql = StrSql & " AND embcuota.embccancela = 0 "
                        StrSql = StrSql & " AND embcuota.embcquin = 1 "
                        StrSql = StrSql & " AND embcuota.embcanio = " & buliq_periodo!pliqanio
                        StrSql = StrSql & " AND embcuota.embcmes = " & buliq_periodo!pliqmes
                        OpenRecordset StrSql, rs_Cuota
    
                    End If
                    
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "Busco los aumuladores para el embargo " & rs_Embargo!embnro
                    End If
                
                    StrSql = "SELECT emb_acu.embacporc, emb_acu.acnro FROM emb_acu"
                    StrSql = StrSql & " WHERE emb_acu.embnro =" & rs_Embargo!embnro
                    OpenRecordset StrSql, rs_Acums
                               
                    If CBool(USA_DEBUG) Then
                        If rs_Acums.EOF Then
                            Flog.writeline Espacios(Tabulador * 4) & "No se encontraron acumuladores "
                        End If
                    End If
                
                    MontoParcial = 0
                    MontoAcum = 0
                    GenCuota = False
                   
                    If MontoEmb > 0 Then
                    ' Si se debe cancelar un monto del embargo
                    
                        Do While (Not rs_Acums.EOF) And ((MontoEmb - MontoAcum) > 0) And (Tope > 0)
                                               
                            If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "Calculo el monto de los acumuladores "
                            End If
        
                            If objCache_Acu_Liq_Monto.EsSimboloDefinido(CStr(rs_Acums!acnro)) Then
                                Monto = objCache_Acu_Liq_Monto.Valor(CStr(rs_Acums!acnro))
                                If CBool(USA_DEBUG) Then
                                        Flog.writeline Espacios(Tabulador * 4) & "Acumulador Nro. " & rs_Acums!acnro & " - Monto del Acumulador: " & Monto
                                End If
                            Else
                                Monto = 0
                                If CBool(USA_DEBUG) Then
                                        Flog.writeline Espacios(Tabulador * 4) & "No se encontro el Acumulador Nro. " & rs_Acums!acnro & " - Monto del Acumulador: 0.00"
                                End If
                            End If
                            
                            ' Calculo el porcentaje del Acumulador
                            MontoParcial = ((Monto * CDbl(rs_Acums!embacporc)) / 100)
                            MontoAcum = MontoAcum + MontoParcial
                            If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "Porcentaje a Considerar : " & rs_Acums!embacporc
                                    Flog.writeline Espacios(Tabulador * 4) & "Monto a descontar : " & MontoParcial
                            End If
                            
                            If (MontoParcial <= Tope) And (MontoAcum <= MontoEmb) Then
                                             
                                ValorAcum = ValorAcum + MontoParcial
                                
                                Tope = Tope - MontoParcial
                                                           
                            Else
                            
                                If (MontoParcial > Tope) Then
                                    If (Tope > MontoEmb) Then
                                        ValorAcum = ValorAcum + MontoEmb
                                        Tope = Tope - MontoEmb
                                    Else
                                        ValorAcum = ValorAcum + Tope
                                        Tope = 0
                                    End If
                                Else
                                    ValorAcum = MontoEmb
                                
                                    Tope = Tope - MontoEmb
                                    
                                End If
                            
                            End If
                            
                            rs_Acums.MoveNext
                        Loop
                            
                        If Cancela Then
                            StrSql = "UPDATE embcuota SET pronro =" & buliq_proceso!pronro
                            StrSql = StrSql & ", embccancela = -1 "
                            StrSql = StrSql & ", embcimpreal = " & ValorAcum
                            StrSql = StrSql & " WHERE embcuota.embcnro = " & rs_Cuota!embcnro
                            StrSql = StrSql & " AND embcuota.embnro = " & rs_Cuota!embnro
                            objConn.Execute StrSql, , adExecuteNoRecords
                            If MontoEmb > ValorAcum Then
                            ' Se terminaron los acumuladores y no se alcanzo a cubrir el monto
                                GenCuota = True
                                Dif = MontoEmb - ValorAcum
                                Anio_aux = buliq_periodo!pliqanio
                                Mes_Aux = buliq_periodo!pliqmes
                                Quin_Aux = 1
                                Call sigQuin(Anio_aux, Mes_Aux, Quin_Aux)
                            Else
                                ValorAcum = MontoEmb
                            End If
                            If GenCuota And ((rs_Embargo!embaniofin = 0) Or (rs_Embargo!embaniofin > Anio_aux) Or _
                                ((rs_Embargo!embaniofin = Anio_aux) And (rs_Embargo!embmesfin < Mes_Aux))) Then
                                ' Generar una cuota con la dif entre valor y montoemb para el proximo periodo
                                StrSql = "INSERT INTO embcuota "
                                StrSql = StrSql & "(embcnro, embnro, embcimp, embccancela, embcanio, embcmes, embcquin, embcimpreal, pronro) VALUES ("
                                StrSql = StrSql & (CInt(rs_Cuota!embcnro) + 1) & "," & rs_Embargo!embnro
                                StrSql = StrSql & "," & Dif & "," & 0 & "," & Anio_aux & "," & Mes_Aux
                                StrSql = StrSql & "," & Quin_Aux & "," & 0 & "," & buliq_proceso!pronro & ")"

                                objConn.Execute StrSql, , adExecuteNoRecords
                                
                                If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "Se genera una cuota nueva con el monto restante, $ " & Dif
                                End If
                            Else
                            
                                If CBool(USA_DEBUG) Then
                                        Flog.writeline Espacios(Tabulador * 4) & "Se marca el embargo como finalizado "
                                End If
                                
                                StrSql = "UPDATE embargo SET embest = 'F'"
                                StrSql = StrSql & ", embfecest = " & ConvFecha(Date)
                                StrSql = StrSql & " WHERE embnro = " & rs_Embargo!embnro
                                objConn.Execute StrSql, , adExecuteNoRecords
                                
                                Finalizado = True
                            End If
                        End If
                    Else
                    ' El embargo no tiene monto, se descuenta lo que se puede
                        Do While Not rs_Acums.EOF
                                               
                            If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "Calculo el monto de los acumuladores "
                            End If
        
                            If objCache_Acu_Liq_Monto.EsSimboloDefinido(CStr(rs_Acums!acnro)) Then
                                Monto = objCache_Acu_Liq_Monto.Valor(CStr(rs_Acums!acnro))
                                If CBool(USA_DEBUG) Then
                                        Flog.writeline Espacios(Tabulador * 4) & "Acumulador Nro. " & rs_Acums!acnro & " - Monto del Acumulador: " & Monto
                                End If
                            Else
                                Monto = 0
                                If CBool(USA_DEBUG) Then
                                        Flog.writeline Espacios(Tabulador * 4) & "No se encontro el Acumulador Nro. " & rs_Acums!acnro & " - Monto del Acumulador: 0.00"
                                End If
                            End If
                            
                            ' Calculo el porcentaje del Acumulador
                            MontoParcial = ((Monto * CDbl(rs_Acums!embacporc)) / 100)
                            MontoAcum = MontoAcum + MontoParcial
                            If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "Porcentaje a Considerar : " & rs_Acums!embacporc
                                    Flog.writeline Espacios(Tabulador * 4) & "Monto a descontar : " & MontoParcial
                            End If
                            
                            If (MontoParcial <= Tope) Then
                                             
                                ValorAcum = ValorAcum + MontoParcial
                                
                                Tope = Tope - MontoParcial
                                
                           
                            Else
                            
                                ValorAcum = ValorAcum + Tope
                                                      
                                Tope = Tope - MontoEmb
                                   
                            End If
                            
                            rs_Acums.MoveNext
                        Loop
                        
                        If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Se desconto $ " & ValorAcum
                        End If
                            
                        If Cancela Then
                            StrSql = "UPDATE embcuota SET pronro =" & buliq_proceso!pronro
                            StrSql = StrSql & ", embccancela = -1 "
                            StrSql = StrSql & ", embcimp = " & ValorAcum
                            StrSql = StrSql & ", embcimpreal = " & ValorAcum
                            StrSql = StrSql & " WHERE embcuota.embcnro = " & rs_Cuota!embcnro
                            StrSql = StrSql & " AND embcuota.embnro = " & rs_Cuota!embnro
                            objConn.Execute StrSql, , adExecuteNoRecords
                            
                            If (rs_Embargo!embaniofin > 0) Then
                            ' Si (fecha fin > 0) entonces
                                
                                If ((rs_Embargo!embaniofin = buliq_periodo!pliqanio) _
                                        And (rs_Embargo!embmesfin = buliq_periodo!pliqmes)) Then
                                    '   Si (fecha fin = periodo actual) entonces
                                    
                                    If CBool(USA_DEBUG) Then
                                            Flog.writeline Espacios(Tabulador * 4) & "Se marca el embargo como finalizado "
                                    End If
                                    
                                    StrSql = "UPDATE embargo SET embest = 'F'"
                                    StrSql = StrSql & ", embfecest = " & ConvFecha(Date)
                                    StrSql = StrSql & " WHERE embnro = " & rs_Embargo!embnro
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                    
                                    Finalizado = True
                                End If
                            End If
                        
                        End If
                    
                    End If
                End If
                                                                             
                                                                  
                If Cancela Then
                        
                    If Finalizado Then
                    ' Si hay algun embargo de tipo del que se cancelo con estado en Espera
                    ' entonces setearlo como Activo
                        
                        ' Chequear si el tipo del embargo tiene seteado "Hab. Siguiente"
                        If (rs_Embargo!tpehabsig < 0) Then
                            
                            StrSql = "SELECT * FROM embargo "
                            StrSql = StrSql & " WHERE embargo.embest = 'E' "
                            StrSql = StrSql & " AND embargo.tpenro = " & rs_Embargo!tpenro
                            OpenRecordset StrSql, rs_AuxEmbargo
                            ' Chequear si hay embargos con estado "En Espera"
                            If rs_AuxEmbargo.EOF Then
                                If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "No se encontraron embargos para habilitar del mismo Tipo 'En Espera' "
                                End If
                            Else
                                StrSql = "UPDATE embargo SET embest = 'A'"
                                StrSql = StrSql & ", embfecest = " & Date
                                StrSql = StrSql & " WHERE embnro = " & rs_AuxEmbargo!embnro
                                objConn.Execute StrSql, , adExecuteNoRecords
                                If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "Se marco como Activo el embargo " & rs_AuxEmbargo!embnro
                                End If
                            End If
                        
                        End If
                    
                    End If
                                
                End If
            
                                                      
            Else
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "El embargo tiene esta seteado como Cuota Societaria, pero no se encuentran Activos los embargos del Tipo asociado."
                End If
            
            End If
            
            Valor = Valor + ValorAcum
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Valor total descontado del Embargo: " & ValorAcum
            End If
            
            ValorAcum = 0
            Finalizado = False
            
            rs_Embargo.MoveNext
        
        Loop
                
    Case 3: 'Embargos de la Segunda quincena
        
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busco los embargos de la segunda quincena "
        End If
    
        StrSql = "SELECT embargo.*, tipoemb.tpeprioridad, tipoemb.tpefordesc, tipoemb.tpehabsig, tipoemb.tpeton, tipoemb.tpecuosoc FROM embargo,tipoemb "
        StrSql = StrSql & " WHERE embargo.ternro = " & buliq_empleado!ternro
        StrSql = StrSql & " AND  embargo.embest = 'A' "
        StrSql = StrSql & " AND embargo.embquincenal = -1 "
        StrSql = StrSql & " AND ((embargo.embanioini < " & buliq_periodo!pliqanio
        StrSql = StrSql & ") OR ((embargo.embanioini = " & buliq_periodo!pliqanio & ") AND (embargo.embmesini <= " & buliq_periodo!pliqmes & ")))"
        StrSql = StrSql & " AND ((embargo.embaniofin = 0) "
        StrSql = StrSql & " OR  ((embargo.embaniofin > " & buliq_periodo!pliqanio
        StrSql = StrSql & ") OR ((embargo.embaniofin = " & buliq_periodo!pliqanio & ") AND (embargo.embmesfin >= " & buliq_periodo!pliqmes & "))))"
        If Nrotpe <> -1 Then
            StrSql = StrSql & " AND embargo.tpenro =" & Nrotpe
        End If
        StrSql = StrSql & " AND embargo.tpenro = tipoemb.tpenro"
        StrSql = StrSql & " ORDER BY tipoemb.tpeprioridad "
        OpenRecordset StrSql, rs_Embargo
                
        If CBool(USA_DEBUG) Then
            If rs_Embargo.EOF Then
                Flog.writeline Espacios(Tabulador * 4) & "No se encontraron embargos "
            End If
        End If
                
        Do While Not rs_Embargo.EOF
            
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Se procesara el embargo: " & rs_Embargo!embnro
            End If
            
            If Cuosoc(rs_Embargo!tpenro) Then
            ' Chequeo si el tipo de embargo tiene "on" en Cuota Societaria y si existe algun embargo activo
            ' con tipo asociado a este (por tabla tipoembreq)
            
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "Busco las cuotas para el embargo " & rs_Embargo!embnro
                End If
            
                StrSql = "SELECT * FROM embcuota "
                StrSql = StrSql & " WHERE embcuota.embnro =" & rs_Embargo!embnro
                StrSql = StrSql & " AND embcuota.embccancela = 0 "
                StrSql = StrSql & " AND embcuota.embcquin = 2 "
                StrSql = StrSql & " AND embcuota.embcanio = " & buliq_periodo!pliqanio
                StrSql = StrSql & " AND embcuota.embcmes = " & buliq_periodo!pliqmes
                OpenRecordset StrSql, rs_Cuota
        
                If CBool(USA_DEBUG) Then
                    If rs_Cuota.EOF Then
                        Flog.writeline Espacios(Tabulador * 4) & "No se encontraron cuotas "
                    End If
                End If
                               
                
                If (rs_Embargo!tpefordesc < 1) Then
                
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "El embargo esta marcado por Monto"
                    End If
                    
                    Do While ((Not rs_Cuota.EOF) And (Tope > 0))
                        
                        If (CDbl(rs_Cuota!embcimp) <= Tope) Then
                        
                            ValorAcum = ValorAcum + CDbl(rs_Cuota!embcimp)
                            
                            If Cancela Then
                                StrSql = "UPDATE embcuota SET pronro =" & buliq_proceso!pronro
                                StrSql = StrSql & ", embccancela = -1 "
                                StrSql = StrSql & ", embcimpreal = " & rs_Cuota!embcimp
                                StrSql = StrSql & " WHERE embcuota.embcnro = " & rs_Cuota!embcnro
                                StrSql = StrSql & " AND embcuota.embnro = " & rs_Cuota!embnro
                                objConn.Execute StrSql, , adExecuteNoRecords
                            End If
                            
                            Tope = Tope - CDbl(rs_Cuota!embcimp)
                        
                        Else
                        
                            ' Controlo que no este seteado como "Liquida Todo o Nada"
                            If (rs_Embargo!tpeton = 0) Then
                            
                                ValorAcum = ValorAcum + Tope
                                
                                Dif = CDbl(rs_Cuota!embcimp) - Tope
                            
                                If Cancela Then
                                    StrSql = "UPDATE embcuota SET pronro =" & buliq_proceso!pronro
                                    StrSql = StrSql & ", embccancela = -1 "
                                    StrSql = StrSql & ", embcimpreal = " & Tope
                                    StrSql = StrSql & " WHERE embcuota.embcnro = " & rs_Cuota!embcnro
                                    StrSql = StrSql & " AND embcuota.embnro = " & rs_Cuota!embnro
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                
                                    ' Junto datos para agregar la cuota con el importe restante
                                    StrSql = "SELECT MAX(embcnro) AS cantcuo FROM embcuota "
                                    StrSql = StrSql & " WHERE embcuota.embnro = " & rs_Embargo!embnro
                                    OpenRecordset StrSql, rs_Aux_Cuota
                                                                
                                    NroCuota = rs_Aux_Cuota!Cantcuo + 1
                                    Anio_aux = rs_Cuota!embcanio
                                    Mes_Aux = rs_Cuota!embcmes
                                    Quin_Aux = rs_Cuota!embcquin
                                    rs_Aux_Cuota.Close
                                        
                                    'Calculo el proximo mes, año y quincena
                                    Call sigQuin(Anio_aux, Mes_Aux, Quin_Aux)
                                    
                                    ' Agrego una cuota al final
                                    StrSql = "INSERT INTO embcuota "
                                    StrSql = StrSql & "(embcnro, embnro, embcimp, embccancela, embcanio, embcmes, embcquin, embcimpreal, pronro) VALUES ("
                                    StrSql = StrSql & NroCuota & "," & rs_Embargo!embnro
                                    StrSql = StrSql & "," & Dif & ",0," & Anio_aux & "," & Mes_Aux
                                    StrSql = StrSql & "," & Quin_Aux & "," & 0 & "," & buliq_proceso!pronro & ")"
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                                                               
                                    'Actualizo la cantidad de cuotas del embargo
                                    StrSql = "SELECT COUNT(embcnro) AS cantcuo FROM embcuota "
                                    StrSql = StrSql & " WHERE embcuota.embnro = " & rs_Embargo!embnro
                                    OpenRecordset StrSql, rs_Aux_Cuota
                                    
                                    NroCuota = CInt(rs_Aux_Cuota!Cantcuo)
                                    rs_Aux_Cuota.Close
                                    
                                    StrSql = "UPDATE embargo SET embcantcuo = " & NroCuota
                                    StrSql = StrSql & " WHERE embnro = " & rs_Embargo!embnro
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                    
                                    If CBool(USA_DEBUG) Then
                                        Flog.writeline Espacios(Tabulador * 4) & "Se genero una cuota para el periodo " & Mes_Aux & "/" & Anio_aux & " por la suma de $ " & Dif
                                    End If
                            
                                End If
                            
                                Tope = 0
                            
                            Else
                                If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "El embargo esta seteado como liquida todo o nada. No se realizan descuentos."
                                End If
                            
                                If Cancela Then
                                    StrSql = "UPDATE embcuota SET pronro =" & buliq_proceso!pronro
                                    StrSql = StrSql & ", embccancela = -1 "
                                    StrSql = StrSql & ", embcimpreal = " & Tope
                                    StrSql = StrSql & " WHERE embcuota.embcnro = " & rs_Cuota!embcnro
                                    StrSql = StrSql & " AND embcuota.embnro = " & rs_Cuota!embnro
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                
                                    ' Junto datos para agregar la cuota con el importe restante
                                    StrSql = "SELECT MAX(embcnro) AS cantcuo FROM embcuota "
                                    StrSql = StrSql & " WHERE embcuota.embnro = " & rs_Embargo!embnro
                                    OpenRecordset StrSql, rs_Aux_Cuota
                                                                
                                    NroCuota = rs_Aux_Cuota!Cantcuo + 1
                                    rs_Aux_Cuota.Close
                                    Anio_aux = rs_Cuota!embcanio
                                    Mes_Aux = rs_Cuota!embcmes
                                    Quin_Aux = rs_Cuota!embcquin
                                    Dif = rs_Cuota!embcimp
                                    
                                    'Calculo el proximo mes, año y quincena
                                    Call sigQuin(Anio_aux, Mes_Aux, Quin_Aux)
                                    
                                    ' Agrego una cuota al final
                                    StrSql = "INSERT INTO embcuota "
                                    StrSql = StrSql & "(embcnro, embnro, embcimp, embccancela, embcanio, embcmes, embcquin, embcimpreal, pronro) VALUES ("
                                    StrSql = StrSql & NroCuota & "," & rs_Embargo!embnro
                                    StrSql = StrSql & "," & Dif & ",0," & Anio_aux & "," & Mes_Aux
                                    StrSql = StrSql & "," & Quin_Aux & "," & 0 & "," & buliq_proceso!pronro & ")"
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                                                               
                                    'Actualizo la cantidad de cuotas del embargo
                                    StrSql = "SELECT COUNT(embcnro) AS cantcuo FROM embcuota "
                                    StrSql = StrSql & " WHERE embcuota.embnro = " & rs_Embargo!embnro
                                    OpenRecordset StrSql, rs_Aux_Cuota
                                    
                                    NroCuota = CInt(rs_Aux_Cuota!Cantcuo)
                                    rs_Aux_Cuota.Close
                                    
                                    StrSql = "UPDATE embargo SET embcantcuo = " & NroCuota
                                    StrSql = StrSql & " WHERE embnro = " & rs_Embargo!embnro
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                    
                                    If CBool(USA_DEBUG) Then
                                        Flog.writeline Espacios(Tabulador * 4) & "Se genero una cuota para el periodo " & Mes_Aux & "/" & Anio_aux & " por la suma de $ " & Dif
                                    End If
                            
                                End If
                            
                            End If
                            
                        End If
                        
                        rs_Cuota.MoveNext
                    
                    Loop
                
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "Se descontaron del Embargo $ " & ValorAcum
                    End If
                
                    ' Controlo si se cancelaron todas las cuotas. Entonces seteo el embargo como finalizado.
                    If Cancela Then
                        If rs_Cuota.State = adStateOpen Then
                            rs_Cuota.Close
                        End If
                        StrSql = "SELECT COUNT (embcnro) AS cantcuo FROM embcuota "
                        StrSql = StrSql & " WHERE embcuota.embnro = " & rs_Embargo!embnro
                        StrSql = StrSql & " AND embcuota.embccancela = 0 "
                        OpenRecordset StrSql, rs_Cuota
                        ' Chequeo si se liquido la ultima cuota (y estan todas canceladas).
                        ' Si ocurre esto, marco como "Finalizado" el embargo
                        If rs_Cuota!Cantcuo = 0 Then
                            If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "Se marca el embargo como finalizado "
                            End If
                            
                            StrSql = "UPDATE embargo SET embest = 'F'"
                            StrSql = StrSql & ", embfecest = " & ConvFecha(Date)
                            StrSql = StrSql & " WHERE embnro = " & rs_Embargo!embnro
                            objConn.Execute StrSql, , adExecuteNoRecords
                            
                            Finalizado = True
                        End If
                    End If
                
                Else
                                       
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "El embargo esta marcado por Porcentaje o Ambos"
                    End If
                    
                    MontoEmb = rs_Embargo!embimp
                    
                    If rs_Cuota.EOF Then
                    ' Si no hay cuotas (la busqueda la realiza arriba), Crearla de acuerdo al monto
                    ' y a la fecha de finalizacion
                        
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "No se encuentran cuotas. Se genera una nueva."
                        End If
                        
                        If (MontoEmb > 0) Then
                        ' El embargo tiene un monto
            
                            ' Agrego una cuota al final
                            StrSql = "INSERT INTO embcuota "
                            StrSql = StrSql & "(embcnro, embnro, embcimp, embccancela, embcanio, embcmes, embcquin, embcimpreal, pronro) VALUES ("
                            StrSql = StrSql & 1 & "," & rs_Embargo!embnro
                            StrSql = StrSql & "," & MontoEmb & "," & 0 & "," & buliq_periodo!pliqanio & "," & buliq_periodo!pliqmes
                            StrSql = StrSql & "," & 2 & "," & 0 & "," & buliq_proceso!pronro & ")"

                            objConn.Execute StrSql, , adExecuteNoRecords
                        
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Se genera una cuota nueva para el periodo actual por $ " & MontoEmb
                            End If
                        
                        Else
                            ' Si el embargo tiene año de finalizacion acorde con el periodo de liquidacion
                            
                            Crear_Cuotas_Embargo rs_Embargo!embnro, 2
                            
                        End If
                    
                        ' Hago el select de nuevo (buscar cuotas)
                        rs_Cuota.Close
                        
                        StrSql = "SELECT * FROM embcuota "
                        StrSql = StrSql & " WHERE embcuota.embnro =" & rs_Embargo!embnro
                        StrSql = StrSql & " AND embcuota.embccancela = 0 "
                        StrSql = StrSql & " AND embcuota.embcquin = 2 "
                        StrSql = StrSql & " AND embcuota.embcanio = " & buliq_periodo!pliqanio
                        StrSql = StrSql & " AND embcuota.embcmes = " & buliq_periodo!pliqmes
                        OpenRecordset StrSql, rs_Cuota
        
                    End If
                    
                    
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "Busco los aumuladores para el embargo " & rs_Embargo!embnro
                    End If
                
                    StrSql = "SELECT emb_acu.embacporc, emb_acu.acnro FROM emb_acu"
                    StrSql = StrSql & " WHERE emb_acu.embnro =" & rs_Embargo!embnro
                    OpenRecordset StrSql, rs_Acums
                               
                    If CBool(USA_DEBUG) Then
                        If rs_Acums.EOF Then
                            Flog.writeline Espacios(Tabulador * 4) & "No se encontraron acumuladores "
                        End If
                    End If
                
                    MontoParcial = 0
                    MontoAcum = 0
                    GenCuota = False
                   
                    If MontoEmb > 0 Then
                    ' Si se debe cancelar un monto del embargo
                    
                        Do While (Not rs_Acums.EOF) And ((MontoEmb - MontoAcum) > 0) And (Tope > 0)
                                               
                            If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "Calculo el monto de los acumuladores "
                            End If
        
                            If objCache_Acu_Liq_Monto.EsSimboloDefinido(CStr(rs_Acums!acnro)) Then
                                Monto = objCache_Acu_Liq_Monto.Valor(CStr(rs_Acums!acnro))
                                If CBool(USA_DEBUG) Then
                                        Flog.writeline Espacios(Tabulador * 4) & "Acumulador Nro. " & rs_Acums!acnro & " - Monto del Acumulador: " & Monto
                                End If
                            Else
                                Monto = 0
                                If CBool(USA_DEBUG) Then
                                        Flog.writeline Espacios(Tabulador * 4) & "No se encontro el Acumulador Nro. " & rs_Acums!acnro & " - Monto del Acumulador: 0.00"
                                End If
                            End If
                            
                            ' Calculo el porcentaje del Acumulador
                            MontoParcial = ((Monto * CDbl(rs_Acums!embacporc)) / 100)
                            MontoAcum = MontoAcum + MontoParcial
                            If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "Porcentaje a Considerar : " & rs_Acums!embacporc
                                    Flog.writeline Espacios(Tabulador * 4) & "Monto a descontar : " & MontoParcial
                            End If
                            
                            If (MontoParcial <= Tope) And (MontoAcum <= MontoEmb) Then
                                             
                                ValorAcum = ValorAcum + MontoParcial
                                
                                Tope = Tope - MontoParcial
                                
                            Else
                            
                                If (MontoParcial > Tope) Then
                                    If (Tope > MontoEmb) Then
                                        ValorAcum = ValorAcum + MontoEmb
                                        Tope = Tope - MontoEmb
                                    Else
                                        ValorAcum = ValorAcum + Tope
                                        Tope = 0
                                    End If
                                Else
                                    ValorAcum = MontoEmb
                                
                                    Tope = Tope - MontoEmb
                                
                                End If
                            
                            End If
                            
                            rs_Acums.MoveNext
                        Loop
                            
                        If Cancela Then
                            StrSql = "UPDATE embcuota SET pronro =" & buliq_proceso!pronro
                            StrSql = StrSql & ", embccancela = -1 "
                            StrSql = StrSql & ", embcimpreal = " & ValorAcum
                            StrSql = StrSql & " WHERE embcuota.embcnro = " & rs_Cuota!embcnro
                            StrSql = StrSql & " AND embcuota.embnro = " & rs_Cuota!embnro
                            objConn.Execute StrSql, , adExecuteNoRecords
                            If MontoEmb > ValorAcum Then
                            ' Se terminaron los acumuladores y no se alcanzo a cubrir el monto
                                GenCuota = True
                                Dif = MontoEmb - ValorAcum
                                Anio_aux = buliq_periodo!pliqanio
                                Mes_Aux = buliq_periodo!pliqmes
                                Quin_Aux = 2
                                Call sigQuin(Anio_aux, Mes_Aux, Quin_Aux)
                            Else
                                ValorAcum = MontoEmb
                            End If
                            If GenCuota And ((rs_Embargo!embaniofin = 0) Or (rs_Embargo!embaniofin > Anio_aux) Or _
                                ((rs_Embargo!embaniofin = Anio_aux) And (rs_Embargo!embmesfin < Mes_Aux))) Then
                                ' Generar una cuota con la dif entre valor y montoemb para el proximo periodo
                                StrSql = "INSERT INTO embcuota "
                                StrSql = StrSql & "(embcnro, embnro, embcimp, embccancela, embcanio, embcmes, embcquin, embcimpreal, pronro) VALUES ("
                                StrSql = StrSql & (CInt(rs_Cuota!embcnro) + 1) & "," & rs_Embargo!embnro
                                StrSql = StrSql & "," & Dif & "," & 0 & "," & Anio_aux & "," & Mes_Aux
                                StrSql = StrSql & "," & Quin_Aux & "," & 0 & "," & buliq_proceso!pronro & ")"

    
                                objConn.Execute StrSql, , adExecuteNoRecords
                                
                                If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "Se genera una cuota nueva con el monto restante, $ " & Dif
                                End If
                            
                            Else
                            
                                If CBool(USA_DEBUG) Then
                                        Flog.writeline Espacios(Tabulador * 4) & "Se marca el embargo como finalizado "
                                End If
                                
                                StrSql = "UPDATE embargo SET embest = 'F'"
                                StrSql = StrSql & ", embfecest = " & ConvFecha(Date)
                                StrSql = StrSql & " WHERE embnro = " & rs_Embargo!embnro
                                objConn.Execute StrSql, , adExecuteNoRecords
                                
                                Finalizado = True
                            End If
                        End If
                    Else
                    ' El embargo no tiene monto, se descuenta lo que se puede
                        Do While Not rs_Acums.EOF
                                               
                            If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "Calculo el monto de los acumuladores "
                            End If
        
                            If objCache_Acu_Liq_Monto.EsSimboloDefinido(CStr(rs_Acums!acnro)) Then
                                Monto = objCache_Acu_Liq_Monto.Valor(CStr(rs_Acums!acnro))
                                If CBool(USA_DEBUG) Then
                                        Flog.writeline Espacios(Tabulador * 4) & "Acumulador Nro. " & rs_Acums!acnro & " - Monto del Acumulador: " & Monto
                                End If
                            Else
                                Monto = 0
                                If CBool(USA_DEBUG) Then
                                        Flog.writeline Espacios(Tabulador * 4) & "No se encontro el Acumulador Nro. " & rs_Acums!acnro & " - Monto del Acumulador: 0.00"
                                End If
                            End If
                            
                            ' Calculo el porcentaje del Acumulador
                            MontoParcial = ((Monto * CDbl(rs_Acums!embacporc)) / 100)
                            MontoAcum = MontoAcum + MontoParcial
                            If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "Porcentaje a Considerar : " & rs_Acums!embacporc
                                    Flog.writeline Espacios(Tabulador * 4) & "Monto a descontar : " & MontoParcial
                            End If
                            
                            If (MontoParcial <= Tope) Then
                                             
                                ValorAcum = ValorAcum + MontoParcial
                                
                                Tope = Tope - MontoParcial
                                
                                ' Descuento del acumulador rs_Acums!acnro el monto calculado????
                            
                            Else
                            
                                ValorAcum = ValorAcum + Tope
                                                      
                                Tope = 0
                                                            
                            End If
                            
                            rs_Acums.MoveNext
                        Loop
                            
                        If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Se desconto $ " & ValorAcum
                        End If
                        
                        If Cancela Then
                            StrSql = "UPDATE embcuota SET pronro =" & buliq_proceso!pronro
                            StrSql = StrSql & ", embccancela = -1 "
                            StrSql = StrSql & ", embcimp = " & ValorAcum
                            StrSql = StrSql & ", embcimpreal = " & ValorAcum
                            StrSql = StrSql & " WHERE embcuota.embcnro = " & rs_Cuota!embcnro
                            StrSql = StrSql & " AND embcuota.embnro = " & rs_Cuota!embnro
                            objConn.Execute StrSql, , adExecuteNoRecords
                            
                            If (rs_Embargo!embaniofin > 0) Then
                            ' Si (fecha fin > 0) entonces
                                
                                If ((rs_Embargo!embaniofin = buliq_periodo!pliqanio) _
                                        And (rs_Embargo!embmesfin = buliq_periodo!pliqmes)) Then
                                    '   Si (fecha fin = periodo actual) entonces
                                    
                                    If CBool(USA_DEBUG) Then
                                            Flog.writeline Espacios(Tabulador * 4) & "Se marca el embargo como finalizado "
                                    End If
                                    
                                    StrSql = "UPDATE embargo SET embest = 'F'"
                                    StrSql = StrSql & ", embfecest = " & ConvFecha(Date)
                                    StrSql = StrSql & " WHERE embnro = " & rs_Embargo!embnro
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                    
                                    Finalizado = True
                                End If
                            End If
                        
                        End If
                    
                    End If
                End If
                                                                              
                                                                  
                If Cancela Then
                        
                    If Finalizado Then
                    ' Si hay algun embargo de tipo del que se cancelo con estado en Espera
                    ' entonces setearlo como Activo
                        
                        ' Chequear si el tipo del embargo tiene seteado "Hab. Siguiente"
                        If (rs_Embargo!tpehabsig < 0) Then
                            
                            StrSql = "SELECT * FROM embargo "
                            StrSql = StrSql & " WHERE embargo.embest = 'E' "
                            StrSql = StrSql & " AND embargo.tpenro = " & rs_Embargo!tpenro
                            OpenRecordset StrSql, rs_AuxEmbargo
                            ' Chequear si hay embargos con estado "En Espera"
                            If rs_AuxEmbargo.EOF Then
                                If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "No se encontraron embargos para habilitar del mismo Tipo 'En Espera' "
                                End If
                            Else
                                StrSql = "UPDATE embargo SET embest = 'A'"
                                StrSql = StrSql & ", embfecest = " & Date
                                StrSql = StrSql & " WHERE embnro = " & rs_AuxEmbargo!embnro
                                objConn.Execute StrSql, , adExecuteNoRecords
                                If CBool(USA_DEBUG) Then
                                    Flog.writeline Espacios(Tabulador * 4) & "Se marco como Activo el embargo " & rs_AuxEmbargo!embnro
                                End If
                            End If
                        
                        End If
                    
                    End If
                                
                End If
            
                                                      
            Else
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "El embargo tiene seteado Cuota Societaria, pero no se encuentran Activos los embargos del Tipo asociado."
                End If
            
            End If
                                                      
            Valor = Valor + ValorAcum
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Valor total descontado del Embargo: " & ValorAcum
            End If
            
            ValorAcum = 0
            Finalizado = False
            
            rs_Embargo.MoveNext
        Loop
    
    End Select
            

' If Valor <> 0 Then Valor = -Valor
' cierro todo y libero
'If Param_cur.State = adStateOpen Then Param_cur.Close
If rs_Cuota.State = adStateOpen Then rs_Cuota.Close
If rs_Embargo.State = adStateOpen Then rs_Embargo.Close
If rs_AuxEmbargo.State = adStateOpen Then rs_AuxEmbargo.Close
If rs_Aux_Cuota.State = adStateOpen Then rs_Aux_Cuota.Close
If rs_Acums.State = adStateOpen Then rs_Acums.Close
      
Bien = True
        
'Set Param_cur = Nothing
Set rs_Embargo = Nothing
Set rs_Cuota = Nothing
Set rs_AuxEmbargo = Nothing
Set rs_Aux_Cuota = Nothing
Set rs_Acums = Nothing

End Sub


Private Sub Crear_Cuotas_Embargo(ByVal embnro As Integer, ByVal Quincena As Integer)
' ---------------------------------------------------------------------------------------------
' Descripcion: Procedimiento utilizado por bus_Embargos para generar cuotas de Embargos
' Autor      : GdeCos
' Fecha      : 11/03/2005
' Ultima Mod.:  19/05/2005 - GdeCos - Se genera UNA sola cuota, no todas las del periodo
' ---------------------------------------------------------------------------------------------

Dim I As Integer ' Variable auxiliar utilizada para calcular el nro. de Cuota

Dim rs_Cuota As New ADODB.Recordset

   I = 1
   
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Se genera la cuota para el embargo para el periodo actual"
    End If

    StrSql = "SELECT MAX (embcnro) AS cantcuo FROM embcuota "
    StrSql = StrSql & " WHERE embcuota.embnro = " & embnro
    OpenRecordset StrSql, rs_Cuota
    
    'i = rs_Cuota!Cantcuo + 1
    I = CInt(IIf(Not EsNulo(rs_Cuota!Cantcuo), rs_Cuota!Cantcuo, 0)) + 1
   
    rs_Cuota.Close
   
    StrSql = "INSERT INTO embcuota "
    StrSql = StrSql & "(embcnro, embnro, embcimp, embccancela, embcanio, embcmes, embcquin, embcimpreal, pronro) VALUES ("
    StrSql = StrSql & I & "," & embnro & ",0,0,"
    StrSql = StrSql & buliq_periodo!pliqanio & "," & buliq_periodo!pliqmes & "," & Quincena & ","
    StrSql = StrSql & "0," & buliq_proceso!pronro & ")"
    objConn.Execute StrSql, , adExecuteNoRecords

End Sub

Private Function Cuosoc(ByVal tpenro As Integer) As Boolean

' ---------------------------------------------------------------------------------------------------------------
' Descripcion: Funcion que chequea si existe algun tipo de Embargo Activo relacionado al actual,
'                si es que el tipo actual tiene activada la casilla de Cuota Societaria
' Autor      : GdeCos
' Fecha      : 21/03/2005
' Ultima Mod.:
' Descripcion:
' ----------------------------------------------------------------------------------------------------------------

Dim rs_Embargo As New ADODB.Recordset
Dim rs_Embargo2 As New ADODB.Recordset

    StrSql = "SELECT tipoembreq.*, tipoemb.tpecuosoc FROM tipoembreq, tipoemb"
    StrSql = StrSql & " WHERE tipoemb.tpenro = tipoembreq.tpenro"
    StrSql = StrSql & " AND tipoemb.tpenro = " & tpenro
    OpenRecordset StrSql, rs_Embargo
    
    If Not rs_Embargo.EOF Then
    
        If (rs_Embargo!tpecuosoc = 0) Then
            
            Cuosoc = True
            
            If CBool(USA_DEBUG) Then
               Flog.writeline Espacios(Tabulador * 4) & "El embargo no tiene seteada Cuota Societaria"
            End If
        
        Else
            
            Do While Not (rs_Embargo.EOF)
                
                StrSql = "SELECT embnro FROM embargo"
                StrSql = StrSql & " WHERE embest = 'A'"
                StrSql = StrSql & " AND tpenro = " & rs_Embargo!tpereqnro
                StrSql = StrSql & " AND ternro = " & buliq_empleado!ternro
                OpenRecordset StrSql, rs_Embargo2
                
                If rs_Embargo2.EOF Then
                   Cuosoc = False
                Else
                   Cuosoc = True
                   If CBool(USA_DEBUG) Then
                       Flog.writeline Espacios(Tabulador * 4) & "Existen otros embargos activos para el embargo tiene seteada Cuota Societaria"
                   End If
                   Exit Function
                End If
                
                rs_Embargo.MoveNext
                
            Loop
            
            
        End If
    Else
        If CBool(USA_DEBUG) Then
           Flog.writeline Espacios(Tabulador * 4) & "El embargo no tiene seteada Cuota Societaria"
        End If
        Cuosoc = True
    End If

    If CBool(USA_DEBUG) Then
        If Cuosoc = False Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontraron embargos Activos de los tipos asociados al tipo del embargo actual."
        End If
    End If

End Function

Public Sub bus_Vac_Pendientes_Escala(ByVal concnro As Long, ByVal prog As Long)
' ---------------------------------------------------------------------------------------------
' Descripcion: Vacaciones Pendientes de tomar por escala.
' Autor      : FGZ
' Fecha      : 02/03/2005
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Fec_Fin As Date

Dim Maximo       As Double
Dim Tolerancia   As Double
Dim Inas_Ingreso As Double
Dim Diasvac     As Double
Dim DiasVacTomados  As Double
Dim Genera       As Boolean
Dim Propor       As Boolean

Dim rs_Emp_Lic As New ADODB.Recordset
Dim rs_Fases As New ADODB.Recordset
Dim rs_NovEmp As New ADODB.Recordset

    Bien = False
    Valor = 0
    
'    If CBool(USA_DEBUG) Then
'        Flog.writeline Espacios(Tabulador * 4) & "La fecha fin se toma a la fecha de baja de la ultima fase "
'        Flog.writeline Espacios(Tabulador * 4) & "Si no esta dado de baja tomo la fecha de baja prevista y si "
'        Flog.writeline Espacios(Tabulador * 4) & " si la fecha de baja prevista es nula tomo la fecha fin del proceso "
'    End If
'
'    StrSql = "SELECT * FROM fases WHERE empleado = " & buliq_empleado!ternro & _
'             " AND real = -1 " & _
'             " ORDER BY altfec "
'    OpenRecordset StrSql, rs_Fases
'
'    If Not rs_Fases.EOF Then
'        rs_Fases.MoveLast
'        If Not EsNulo(rs_Fases!bajfec) Then
'            Fec_Fin = rs_Fases!bajfec
'        Else
'            If Not EsNulo(buliq_empleado!empfbajaprev) Then
'                Fec_Fin = buliq_empleado!empfbajaprev
'            Else
'                Fec_Fin = buliq_proceso!profecfin
'            End If
'        End If
'    End If
'    If CBool(USA_DEBUG) Then
'        Flog.writeline Espacios(Tabulador * 4) & "La fecha fin es:  " & Fec_Fin
'    End If
    
    
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        Maximo = Arr_Programa(NroProg).Auxint1
        Tolerancia = Arr_Programa(NroProg).Auxint2
        Inas_Ingreso = 0
    Else
        Exit Sub
    End If


    'A pedido de Analia
    ' run pronov/des01.p(empleado.ternro, FEC-fin, output diasvac,output genera).
    'Call bus_DiasVac_Masivos
    Call bus_DiasVac
    Diasvac = Valor
    
    If Not Bien Then
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se pudieron generar los dias de Vacaciones Pendientes: " & buliq_empleado!Empleg
            Exit Sub
        End If
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Dias de vacaciones : " & Valor
        End If
    End If

    DiasVacTomados = Diasvac
    Propor = True


    'Se le descuenta los dias de vacaciones que ya estan marcados como liquidados en el pago /dto de la Gestion integral
    StrSql = "SELECT * FROM emp_lic "
    StrSql = StrSql & " INNER JOIN vacpagdesc ON vacpagdesc.emp_licnro = emp_lic.emp_licnro "
    StrSql = StrSql & " INNER JOIN lic_vacacion ON lic_vacacion.emp_licnro = emp_lic.emp_licnro "
    StrSql = StrSql & " INNER JOIN vacacion ON vacacion.vacnro = lic_vacacion.vacnro "
    StrSql = StrSql & " WHERE (empleado = " & buliq_empleado!ternro & " )"
    StrSql = StrSql & " AND (tdnro = 2) "
    StrSql = StrSql & " AND elfechahasta < " & ConvFecha(Fec_Fin)
    StrSql = StrSql & " AND vacpagdesc.pago_dto = 3 and not vacpagdesc.pronro is null "
    OpenRecordset StrSql, rs_Emp_Lic
    
    Do While Not rs_Emp_Lic.EOF
        If rs_Emp_Lic!vacanio = Year(Fec_Fin) Then
            DiasVacTomados = DiasVacTomados - rs_Emp_Lic!elcantdias
            Propor = True
        Else
            If rs_Emp_Lic!vacanio + 1 = Year(Fec_Fin) Then
                DiasVacTomados = DiasVacTomados - rs_Emp_Lic!elcantdias
                Propor = False
            End If
        End If
        
        rs_Emp_Lic.MoveNext
    Loop
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Se le descuentan " & (Diasvac - DiasVacTomados) & " dias de vacaciones que ya estan marcados como liquidados"
    End If
    Diasvac = DiasVacTomados

'    'PROPORCIONAR  LA CANTIDAD TOTAL DE DIAS CORRESPONDIENTES O LA CANT. PENDIENTE EN FUNCION  A LA FECHA DE BAJA
'    If Propor Then
'        Diasvac = Diasvactomados / 365 * ((Month(Fec_Fin) - 1) * 30 + Day(Fec_Fin))
'    Else
'        Diasvac = Diasvac / 365 * ((Month(Fec_Fin) - 1) * 30 + Day(Fec_Fin)) + Diasvactomados
'    End If

    Diasvac = IIf(Fix(Diasvac) = Diasvac, Diasvac, Fix(Diasvac + 1))
    If Diasvac < 0 Then
        Diasvac = 0
    End If

    Valor = IIf(Diasvac < 0, 0, Diasvac)
    Bien = True

End Sub




Public Sub bus_Vac_Pendientes_DiasCorr(ByVal concnro As Long, ByVal prog As Long)
' ---------------------------------------------------------------------------------------------
' Descripcion: Vacaciones Pendientes de tomar por dias correspondientes.
' Autor      : FGZ
' Fecha      : 02/03/2005
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Fec_Fin As Date

Dim Maximo       As Double
Dim Tolerancia   As Double
Dim Inas_Ingreso As Double
Dim Diasvac     As Double
Dim DiasVacTomados  As Double
Dim Genera       As Boolean
Dim Propor       As Boolean

Dim rs_Emp_Lic As New ADODB.Recordset
Dim rs_Fases As New ADODB.Recordset
Dim rs_NovEmp As New ADODB.Recordset
Dim rs_DiasVac As New ADODB.Recordset

    Bien = False
    Valor = 0
    
'    If CBool(USA_DEBUG) Then
'        Flog.writeline Espacios(Tabulador * 4) & "La fecha fin se toma a la fecha de baja de la ultima fase "
'        Flog.writeline Espacios(Tabulador * 4) & "Si no esta dado de baja tomo la fecha de baja prevista y si "
'        Flog.writeline Espacios(Tabulador * 4) & " si la fecha de baja prevista es nula tomo la fecha fin del proceso "
'    End If
'
'    StrSql = "SELECT * FROM fases WHERE empleado = " & buliq_empleado!ternro & _
'             " AND real = -1 " & _
'             " ORDER BY altfec "
'    OpenRecordset StrSql, rs_Fases
'
'    If Not rs_Fases.EOF Then
'        rs_Fases.MoveLast
'        If Not EsNulo(rs_Fases!bajfec) Then
'            Fec_Fin = rs_Fases!bajfec
'        Else
'            If Not EsNulo(buliq_empleado!empfbajaprev) Then
'                Fec_Fin = buliq_empleado!empfbajaprev
'            Else
'                Fec_Fin = buliq_proceso!profecfin
'            End If
'        End If
'    End If
'    If CBool(USA_DEBUG) Then
'        Flog.writeline Espacios(Tabulador * 4) & "La fecha fin es:  " & Fec_Fin
'    End If

    
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        Maximo = Arr_Programa(NroProg).Auxint1
        Tolerancia = Arr_Programa(NroProg).Auxint2
        Inas_Ingreso = 0
    Else
        Exit Sub
    End If

    Diasvac = 0
    Genera = Bien
    
    StrSql = "SELECT sum(vacdiascor.vdiascorcant) suma FROM vacdiascor "
    StrSql = StrSql & " INNER JOIN vacacion ON vacacion.vacnro = vacdiascor.vacnro "
    StrSql = StrSql & " WHERE vacdiascor.ternro =" & buliq_empleado!ternro
    StrSql = StrSql & " AND vacacion.vacanio <= " & Year(Fec_Fin)
    OpenRecordset StrSql, rs_DiasVac
    If Not rs_DiasVac.EOF Then
        Diasvac = IIf(Not EsNulo(rs_DiasVac!Suma), rs_DiasVac!Suma, 0)
    End If

    DiasVacTomados = Diasvac
    Propor = True


    'Se le descuenta los dias de vacaciones que ya estan marcados como liquidados en el pago /dto de la Gestion integral
    StrSql = "SELECT * FROM emp_lic "
    StrSql = StrSql & " INNER JOIN vacpagdesc ON vacpagdesc.emp_licnro = emp_lic.emp_licnro "
    StrSql = StrSql & " INNER JOIN lic_vacacion ON lic_vacacion.emp_licnro = emp_lic.emp_licnro "
    StrSql = StrSql & " INNER JOIN vacacion ON vacacion.vacnro = lic_vacacion.vacnro "
    StrSql = StrSql & " WHERE (empleado = " & buliq_empleado!ternro & " )"
    StrSql = StrSql & " AND (tdnro = 2) "
    StrSql = StrSql & " AND elfechahasta < " & ConvFecha(Fec_Fin)
    StrSql = StrSql & " AND vacpagdesc.pago_dto = 3 and not vacpagdesc.pronro is null "
    OpenRecordset StrSql, rs_Emp_Lic
    
    Do While Not rs_Emp_Lic.EOF
        If rs_Emp_Lic!vacanio = Year(Fec_Fin) Then
            DiasVacTomados = DiasVacTomados - rs_Emp_Lic!elcantdias
            Propor = True
        Else
            If rs_Emp_Lic!vacanio + 1 = Year(Fec_Fin) Then
                DiasVacTomados = DiasVacTomados - rs_Emp_Lic!elcantdias
                Propor = False
            End If
        End If
        
        rs_Emp_Lic.MoveNext
    Loop
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Se le descuentan " & (Diasvac - DiasVacTomados) & " dias de vacaciones que ya estan marcados como liquidados"
    End If
    Diasvac = DiasVacTomados
    
'    'PROPORCIONAR  LA CANTIDAD TOTAL DE DIAS CORRESPONDIENTES O LA CANT. PENDIENTE EN FUNCION  A LA FECHA DE BAJA
'    If Propor Then
'        Diasvac = Diasvactomados / 365 * ((Month(Fec_Fin) - 1) * 30 + Day(Fec_Fin))
'    Else
'        Diasvac = Diasvac / 365 * ((Month(Fec_Fin) - 1) * 30 + Day(Fec_Fin)) + Diasvactomados
'    End If

    Diasvac = IIf(Fix(Diasvac) = Diasvac, Diasvac, Fix(Diasvac + 1))
    If Diasvac < 0 Then
        Diasvac = 0
    End If

    Valor = IIf(Diasvac < 0, 0, Diasvac)
    Bien = True

End Sub

Public Sub bus_Refrigerios()
'---------------------------------------------------------------------------------------------
' Descripcion: Refrigerios de TTI
' Autor      : Scarpa D.
' Fecha      : 27/04/2005
' Ultima Mod.:
' Descripcion:
'---------------------------------------------------------------------------------------------
Dim Actual As Boolean    'Si es del periodo actual o del anterior
                            
Dim TipoParte As String 'Tipo de parte a buscar
                            
Dim FechaDesde As Date
Dim FechaHasta As Date
Dim mes As Integer
Dim Anio As Integer
Dim rsConsulta As New ADODB.Recordset
Dim StrSql1 As String
Dim rsConsulta2 As New ADODB.Recordset
Dim StrSql2 As String
Dim TotalComida As Double
Dim TotalRefrig As Double
Dim modTrabajo
Dim Convenio
Dim modTrabajoCodExt
Dim ConvenioCodExt
Dim tipoDia
Dim buscarTipoDia As Boolean
Dim Jornada
Dim objFeriado As New Feriado
Dim BusqEscala
Dim SalidaRefrigerio As Boolean
Dim valorJor As Double
Dim Minutos
Dim Excedente

    Set objFeriado.Conexion = objConn

    'EsFeriado = objFeriado.Feriado(FechaActual,buliq_empleado!ternro, False)
    'Obtengo los parametros de la busqueda
    If Arr_Programa(NroProg).Prognro <> 0 Then
        TipoParte = Arr_Programa(NroProg).Auxchar
        Actual = Arr_Programa(NroProg).Auxlog1
        SalidaRefrigerio = Arr_Programa(NroProg).Auxlog2
        BusqEscala = Arr_Programa(NroProg).Auxint1
        
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Buscando partes de tipo " & TipoParte
            If Actual Then
                Flog.writeline Espacios(Tabulador * 4) & "Periodo Actual"
            Else
                Flog.writeline Espacios(Tabulador * 4) & "Periodo Anterior"
            End If
        End If
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busqueda no encontrada " & NroProg
        End If
        Exit Sub
    End If
    
    'Busco el rango de fechas en el cual tengo que buscar los partes
    If Actual Then
       FechaDesde = buliq_periodo!pliqdesde
       FechaHasta = buliq_periodo!pliqhasta
    Else
       If CInt(buliq_periodo!pliqmes) = 1 Then
          Anio = CInt(buliq_periodo!pliqanio) - 1
          mes = 12
       Else
          Anio = CInt(buliq_periodo!pliqanio)
          mes = CInt(buliq_periodo!pliqmes) - 1
       End If
       
       StrSql1 = " SELECT * FROM periodo WHERE pliqmes = " & mes & " AND pliqanio = " & Anio
       OpenRecordset StrSql1, rsConsulta
       
       If rsConsulta.EOF Then
          If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encuentra el periodo para el mes " & mes & " y anio " & Anio
          End If
          Exit Sub
       Else
          FechaDesde = rsConsulta!pliqdesde
          FechaHasta = rsConsulta!pliqhasta
       End If
       
       rsConsulta.Close
       
    End If
    
    'Busco el convenio del empleado
    StrSql = " SELECT his_estructura.estrnro,estrcodext FROM his_estructura " & _
             " INNER JOIN estructura ON his_estructura.estrnro = estructura.estrnro " & _
             " WHERE his_estructura.ternro = " & buliq_empleado!ternro & " AND " & _
             " his_estructura.tenro = 19 AND " & _
             " (htetdesde <= " & ConvFecha(FechaHasta) & ") AND " & _
             " ((" & ConvFecha(FechaHasta) & " <= htethasta) or (htethasta is null))"
    OpenRecordset StrSql, rsConsulta
    
    If rsConsulta.EOF Then
       Convenio = 0
       ConvenioCodExt = "0"
    Else
       Convenio = rsConsulta!estrnro
       ConvenioCodExt = rsConsulta!estrcodext
    End If
    
    rsConsulta.Close
    
    'Busco la modalidad de trabajo del empleado
    StrSql = " SELECT his_estructura.estrnro,estrcodext FROM his_estructura " & _
             " INNER JOIN estructura ON his_estructura.estrnro = estructura.estrnro " & _
             " WHERE his_estructura.ternro = " & buliq_empleado!ternro & " AND " & _
             " his_estructura.tenro = 47 AND " & _
             " (htetdesde <= " & ConvFecha(FechaHasta) & ") AND " & _
             " ((" & ConvFecha(FechaHasta) & " <= htethasta) or (htethasta is null))"
    OpenRecordset StrSql, rsConsulta
    
    If rsConsulta.EOF Then
       modTrabajo = 0
       modTrabajoCodExt = 0
    Else
       modTrabajo = rsConsulta!estrnro
       modTrabajoCodExt = rsConsulta!estrcodext
    End If
    
    rsConsulta.Close
    
    'Busco la cantidad de jornada
    Call EjecutarBusqueda(3, Arr_conceptos(Concepto_Actual).concnro, BusqEscala, valorJor, fec, False)
    
    Jornada = CDbl(valorJor)
    
    'Busco los partes en el rango de fechas
    StrSql1 = " SELECT SUM(noved63) as Total,fecnov63,tpardiahab "
    StrSql1 = StrSql1 & " From ee_parte "
    StrSql1 = StrSql1 & " INNER JOIN ee_tipo_parte ON ee_tipo_parte.tparnro = ee_parte.tparnro "
    StrSql1 = StrSql1 & " Where ternro = " & buliq_empleado!ternro
    StrSql1 = StrSql1 & " AND fecnov63 >= " & ConvFecha(FechaDesde)
    StrSql1 = StrSql1 & " AND fecnov63 <= " & ConvFecha(FechaHasta)
    StrSql1 = StrSql1 & " AND ee_parte.tparnro IN (" & TipoParte & ")"
    StrSql1 = StrSql1 & " AND tparagrup = 8 GROUP BY fecnov63, tpardiahab "
    OpenRecordset StrSql1, rsConsulta
    
    TotalComida = 0
    TotalRefrig = 0
    
    Do Until rsConsulta.EOF
       'Busco el tipo de dia
       buscarTipoDia = False
       
       If (CStr(modTrabajoCodExt) = "2") Or (CStr(modTrabajoCodExt) = "3") Or (CStr(modTrabajoCodExt) = "5") Then
          tipoDia = "H"
          StrSql2 = " SELECT noved63,tparincpor,tpartipodato,fecnov63,tpardiahab "
          StrSql2 = StrSql2 & " From ee_parte "
          StrSql2 = StrSql2 & " INNER JOIN ee_tipo_parte ON ee_tipo_parte.tparnro = ee_parte.tparnro "
          StrSql2 = StrSql2 & " Where ternro = " & buliq_empleado!ternro
          StrSql2 = StrSql2 & " AND fecnov63 = '" & rsConsulta!fecnov63 & "'"
          StrSql2 = StrSql2 & " AND tparagrup = 6 "
          OpenRecordset StrSql2, rsConsulta2
          If Not rsConsulta2.EOF Then
            If CStr(rsConsulta2!tpardiahab) = "N" Then
               buscarTipoDia = True
            Else
               tipoDia = rsConsulta2!tpardiahab
            End If
          End If
          rsConsulta2.Close
       Else
          If IsNull(rsConsulta!tpardiahab) Then
             buscarTipoDia = True
          Else
            If CStr(rsConsulta!tpardiahab) = "N" Then
               buscarTipoDia = True
            Else
               tipoDia = rsConsulta!tpardiahab
            End If
          End If
       End If
       
       If buscarTipoDia Then
          If objFeriado.Feriado(C_Date(rsConsulta!fecnov63), buliq_empleado!ternro, False) Then
             tipoDia = "F"
          Else
             Select Case Weekday(C_Date(rsConsulta!fecnov63))
                Case 1
                   tipoDia = "D"
                Case 2
                   tipoDia = "H"
                Case 3
                   tipoDia = "H"
                Case 4
                   tipoDia = "H"
                Case 5
                   tipoDia = "H"
                Case 6
                   tipoDia = "H"
                Case 7
                   tipoDia = "S"
             End Select
          End If
       End If
       
       Minutos = CDbl(rsConsulta!Total)
       'Excedente = CDbl(rsConsulta!noved63) - Jornada
       'Como excedente solo se usa en dias habiles, y en dias habiles las horas extras
       'ya son excedentes no hace falta restar las horas de la jornada.
       'Excedente = CDbl(rsConsulta!noved63)
       'Calculo la cantidad de refrigerios que le corresponden para el tipo de parte
       
       If tipoDia = "S" Or tipoDia = "D" Then
          
          Select Case CStr(ConvenioCodExt)
             Case "APSS"
                If Minutos >= (Jornada / 2) Then
                   TotalRefrig = TotalRefrig + 1
                End If
            
             Case "LYF"
                If Minutos >= (Jornada / 2) Then
                   TotalComida = TotalComida + 1
                End If
            
          End Select
       
          Excedente = CDbl(rsConsulta!Total) - Jornada
          
       Else
        
          Excedente = CDbl(rsConsulta!Total)
          
       End If
                        
            Select Case CStr(ConvenioCodExt)
               Case "APSS"
                  If (Excedente > 119) And (Excedente < 300) Then
                     TotalRefrig = TotalRefrig + 1
                  Else
                     If (Excedente > 299) And (Excedente < 420) Then
                        TotalRefrig = TotalRefrig + 1
                        TotalComida = TotalComida + 1
                     Else
                         If (Excedente > 419) Then
                            TotalRefrig = TotalRefrig + 2
                            TotalComida = TotalComida + 1
                         End If
                     End If
                  End If
              
               Case "LYF"
                  If (Excedente > 119) And (Excedente < 300) Then
                     TotalComida = TotalComida + 1
                  Else
                     If (Excedente > 299) And (Excedente < 420) Then
                        TotalRefrig = TotalRefrig + 1
                        TotalComida = TotalComida + 1
                     Else
                         If (Excedente > 419) Then
                            TotalRefrig = TotalRefrig + 1
                            TotalComida = TotalComida + 2
                         End If
                     End If
                  End If
              
            End Select

       rsConsulta.MoveNext
    Loop

Bien = True

If SalidaRefrigerio Then
   Valor = TotalRefrig
Else
   Valor = TotalComida
End If

Set objFeriado = Nothing
End Sub


Public Sub bus_Refrigerios_old()
' ---------------------------------------------------------------------------------------------
' Descripcion: Refrigerios de TTI
' Autor      : Scarpa D.
' Fecha      : 27/04/2005
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Actual As Boolean    'Si es del periodo actual o del anterior
                            
Dim TipoParte As String 'Tipo de parte a buscar
                            
Dim FechaDesde As Date
Dim FechaHasta As Date
Dim mes As Integer
Dim Anio As Integer
Dim rsConsulta As New ADODB.Recordset
Dim StrSql1 As String
Dim TotalComida As Double
Dim TotalRefrig As Double
Dim modTrabajo
Dim Convenio
Dim modTrabajoCodExt
Dim ConvenioCodExt
Dim tipoDia
Dim buscarTipoDia As Boolean
Dim Jornada
Dim objFeriado As New Feriado
Dim BusqEscala
Dim SalidaRefrigerio As Boolean
Dim valorJor As Double
Dim Minutos
Dim Excedente

    Set objFeriado.Conexion = objConn

    'EsFeriado = objFeriado.Feriado(FechaActual, buliq_empleado!ternro, False)
    'Obtengo los parametros de la busqueda
    If Arr_Programa(NroProg).Prognro <> 0 Then
        TipoParte = Arr_Programa(NroProg).Auxchar
        Actual = Arr_Programa(NroProg).Auxlog1
        SalidaRefrigerio = Arr_Programa(NroProg).Auxlog2
        BusqEscala = Arr_Programa(NroProg).Auxint1
        
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Buscando partes de tipo " & TipoParte
            If Actual Then
                Flog.writeline Espacios(Tabulador * 4) & "Periodo Actual"
            Else
                Flog.writeline Espacios(Tabulador * 4) & "Periodo Anterior"
            End If
        End If
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busqueda no encontrada " & NroProg
        End If
        Exit Sub
    End If
    
    'Busco el rango de fechas en el cual tengo que buscar los partes
    If Actual Then
       FechaDesde = buliq_periodo!pliqdesde
       FechaHasta = buliq_periodo!pliqhasta
    Else
       If CInt(buliq_periodo!pliqmes) = 1 Then
          Anio = CInt(buliq_periodo!pliqanio) - 1
          mes = 12
       Else
          Anio = CInt(buliq_periodo!pliqanio)
          mes = CInt(buliq_periodo!pliqmes) - 1
       End If
       
       StrSql1 = " SELECT * FROM periodo WHERE pliqmes = " & mes & " AND pliqanio = " & Anio
       
       OpenRecordset StrSql1, rsConsulta
       
       If rsConsulta.EOF Then
          If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encuentra el periodo para el mes " & mes & " y anio " & Anio
          End If
          Exit Sub
       Else
          FechaDesde = rsConsulta!pliqdesde
          FechaHasta = rsConsulta!pliqhasta
       End If
       
       rsConsulta.Close
       
    End If
    
    'Busco el convenio del empleado
    StrSql = " SELECT his_estructura.estrnro,estrcodext FROM his_estructura " & _
             " INNER JOIN estructura ON his_estructura.estrnro = estructura.estrnro " & _
             " WHERE his_estructura.ternro = " & buliq_empleado!ternro & " AND " & _
             " his_estructura.tenro = 19 AND " & _
             " (htetdesde <= " & ConvFecha(FechaHasta) & ") AND " & _
             " ((" & ConvFecha(FechaHasta) & " <= htethasta) or (htethasta is null))"
    
    OpenRecordset StrSql, rsConsulta
    
    If rsConsulta.EOF Then
       Convenio = 0
       ConvenioCodExt = "0"
    Else
       Convenio = rsConsulta!estrnro
       ConvenioCodExt = rsConsulta!estrcodext
    End If
    
    rsConsulta.Close
    
    'Busco la modalidad de trabajo del empleado
    StrSql = " SELECT his_estructura.estrnro,estrcodext FROM his_estructura " & _
             " INNER JOIN estructura ON his_estructura.estrnro = estructura.estrnro " & _
             " WHERE his_estructura.ternro = " & buliq_empleado!ternro & " AND " & _
             " his_estructura.tenro = 47 AND " & _
             " (htetdesde <= " & ConvFecha(FechaHasta) & ") AND " & _
             " ((" & ConvFecha(FechaHasta) & " <= htethasta) or (htethasta is null))"
    
    OpenRecordset StrSql, rsConsulta
    
    If rsConsulta.EOF Then
       modTrabajo = 0
       modTrabajoCodExt = 0
    Else
       modTrabajo = rsConsulta!estrnro
       modTrabajoCodExt = rsConsulta!estrcodext
    End If
    
    rsConsulta.Close
    
    'Busco la cantidad de jornada
    Call EjecutarBusqueda(3, Arr_conceptos(Concepto_Actual).concnro, BusqEscala, valorJor, fec, False)
    
    Jornada = CDbl(valorJor)
    
    'Busco los partes en el rango de fechas
    StrSql1 = " SELECT noved63,tparincpor,tpartipodato,fecnov63,tpardiahab "
    StrSql1 = StrSql1 & " From ee_parte "
    StrSql1 = StrSql1 & " INNER JOIN ee_tipo_parte ON ee_tipo_parte.tparnro = ee_parte.tparnro "
    StrSql1 = StrSql1 & " Where ternro = " & buliq_empleado!ternro
    StrSql1 = StrSql1 & " AND fecnov63 >= " & ConvFecha(FechaDesde)
    StrSql1 = StrSql1 & " AND fecnov63 <= " & ConvFecha(FechaHasta)
    StrSql1 = StrSql1 & " AND ee_parte.tparnro IN (" & TipoParte & ")"
    StrSql1 = StrSql1 & " AND tparagrup = 8 "
    
    OpenRecordset StrSql1, rsConsulta
    
    TotalComida = 0
    TotalRefrig = 0
    
    Do Until rsConsulta.EOF
       'Busco el tipo de dia
       buscarTipoDia = False
       
       If (CStr(modTrabajoCodExt) = "2") Or (CStr(modTrabajoCodExt) = "3") Or (CStr(modTrabajoCodExt) = "5") Then
          tipoDia = "H"
       Else
          If IsNull(rsConsulta!tpardiahab) Then
             buscarTipoDia = True
          Else
            If CStr(rsConsulta!tpardiahab) = "N" Then
               buscarTipoDia = True
            Else
               tipoDia = rsConsulta!tpardiahab
            End If
          End If
       End If
       
       If buscarTipoDia Then
          If objFeriado.Feriado(C_Date(rsConsulta!fecnov63), buliq_empleado!ternro, False) Then
             tipoDia = "F"
          Else
             Select Case Weekday(C_Date(rsConsulta!fecnov63))
                Case 1
                   tipoDia = "D"
                Case 2
                   tipoDia = "H"
                Case 3
                   tipoDia = "H"
                Case 4
                   tipoDia = "H"
                Case 5
                   tipoDia = "H"
                Case 6
                   tipoDia = "H"
                Case 7
                   tipoDia = "S"
             End Select
          End If
       End If
       
       Minutos = CDbl(rsConsulta!noved63)
       
       'Calculo la cantidad de refrigerios que le corresponden para el tipo de parte
       
       If tipoDia = "S" Or tipoDia = "D" Or tipoDia = "F" Then
          
          Select Case CStr(ConvenioCodExt)
             Case "APSS"
                If Minutos >= (Jornada / 2) Then
                   TotalRefrig = TotalRefrig + 1
                End If
            
             Case "LYF"
                If Minutos >= (Jornada / 2) Then
                   TotalComida = TotalComida + 1
                End If
            
          End Select
          
          'Calculo el valor del excedente
          Excedente = CDbl(rsConsulta!noved63) - Jornada
          
        Else
        
          'Calculo el valor del excedente
          Excedente = CDbl(rsConsulta!noved63)
          
        End If
            
            
        Select Case CStr(ConvenioCodExt)
           Case "APSS"
              If (Excedente > 119) And (Excedente < 300) Then
                 TotalRefrig = TotalRefrig + 1
              Else
                 If (Excedente > 299) And (Excedente < 420) Then
                    TotalRefrig = TotalRefrig + 1
                    TotalComida = TotalComida + 1
                 Else
                     If (Excedente > 419) Then
                        TotalRefrig = TotalRefrig + 2
                        TotalComida = TotalComida + 1
                     End If
                 End If
              End If
          
           Case "LYF"
              If (Excedente > 119) And (Excedente < 300) Then
                 TotalComida = TotalComida + 1
              Else
                 If (Excedente > 299) And (Excedente < 420) Then
                    TotalRefrig = TotalRefrig + 1
                    TotalComida = TotalComida + 1
                 Else
                     If (Excedente > 419) Then
                        TotalRefrig = TotalRefrig + 1
                        TotalComida = TotalComida + 2
                     End If
                 End If
              End If
          
        End Select
    
       rsConsulta.MoveNext
    Loop

Bien = True

If SalidaRefrigerio Then
   Valor = TotalRefrig
Else
   Valor = TotalComida
End If

Set objFeriado = Nothing
End Sub





Public Sub bus_Horas_Feriados()
' ---------------------------------------------------------------------------------------------
' Descripcion: Busqueda para el calculo de la cantidad de horas (dias * 9) de feriados que
'               le corresponden a cada empleado por la primer quincena.
'              Se deben determinar los feriados del mes que se esta liquidando,
'               teniendo en cuenta la fecha de alta y fases del empleado.
' Autor      : FGZ
' Fecha      : 11/05/2005
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Desde As Date
Dim Hasta As Date
Dim dia As Date
Dim Ini_Mes As Date
Dim Fin_Mes As Date
Dim Es_Feriado As Boolean

Dim rs_Fases As New ADODB.Recordset
Dim rs_Lic As New ADODB.Recordset

Dim objFeriado As New Feriado

    Set objFeriado.Conexion = objConn
    Bien = False
    Valor = 0
    
    'Calculo del ultimo dia del mes
    If buliq_periodo!pliqmes = 12 Then
        Fin_Mes = C_Date("01/01/" & buliq_periodo!pliqanio + 1)
    Else
        Fin_Mes = C_Date("01/" & buliq_periodo!pliqmes + 1 & "/" & buliq_periodo!pliqanio)
    End If
    Fin_Mes = Fin_Mes - 1
    Ini_Mes = C_Date("01/" & buliq_periodo!pliqmes & "/" & buliq_periodo!pliqanio)

    Hasta = Fin_Mes
    Desde = Ini_Mes
    If buliq_proceso!tprocnro = 1 Then
        Hasta = C_Date("15/" & buliq_periodo!pliqmes & "/" & buliq_periodo!pliqanio)
        Desde = Ini_Mes
    Else
        If buliq_proceso!tprocnro = 2 Then
            Hasta = Fin_Mes
            Desde = C_Date("16/" & buliq_periodo!pliqmes & "/" & buliq_periodo!pliqanio)
        End If
    End If
    
    StrSql = "SELECT * FROM fases WHERE empleado = " & buliq_empleado!ternro
    StrSql = StrSql & " ORDER BY altfec "
    OpenRecordset StrSql, rs_Fases
    If Not rs_Fases.EOF Then
        rs_Fases.MoveLast
        If Not EsNulo(rs_Fases!bajfec) Then
            If rs_Fases!bajfec < Hasta Then
                Hasta = rs_Fases!bajfec
            End If
        End If
        If rs_Fases!altfec > Desde Then
            Desde = rs_Fases!altfec
        End If
        
    End If
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "La fecha desde es:  " & Desde
        Flog.writeline Espacios(Tabulador * 4) & "La fecha hasta es:  " & Hasta
    End If
    
    dia = Desde
    Do While dia <= Hasta
        Es_Feriado = objFeriado.Feriado(dia, buliq_empleado!ternro, False)
        If Es_Feriado Then
            'BUSCA SI HAY VACACIONES EN EL RANGO DEL FERIADO Y EN ESE CASO NO LO PAGA
            StrSql = "SELECT * FROM emp_lic WHERE (empleado = " & buliq_empleado!ternro & " )"
            StrSql = StrSql & " AND tdnro = 2"
            StrSql = StrSql & " AND elfechadesde <=" & ConvFecha(dia)
            StrSql = StrSql & " AND elfechahasta >= " & ConvFecha(dia)
            OpenRecordset StrSql, rs_Lic
            If rs_Lic.EOF Then
                Valor = Valor + 1
            End If
        End If
        dia = dia + 1
    Loop
    Valor = Valor * 8
    Bien = True

'cierro y libero
If rs_Fases.State = adStateOpen Then rs_Fases.Close
If rs_Lic.State = adStateOpen Then rs_Lic.Close

Set rs_Fases = Nothing
Set rs_Lic = Nothing
Set objFeriado = Nothing
End Sub

Public Sub Bus_NovBaja(ByVal Prognro As Long, ByVal concepto As Long, ByVal tpanro As Long, ByVal Fecha_Inicio As Date, ByVal Fecha_Fin As Date, ByVal Grupo As Long, ByRef OK As Boolean, ByRef val As Double)
' ---------------------------------------------------------------------------------------------
' Descripcion: Obtencion de novedad a Nivel General/Grupal/Individual.
' Autor      : GdeCos
' Fecha      : 11/05/2005
' Ultima Mod.:
' Descripcion:  Similar a la Busqueda de Novemp (Bus_NovGegi) pero sobre NovBaja
' ---------------------------------------------------------------------------------------------
Dim rs_NovEmp As New ADODB.Recordset
Dim rs_NovEstr As New ADODB.Recordset
Dim rs_NovGral As New ADODB.Recordset
Dim rs_His_Estructura As New ADODB.Recordset
Dim rs_HisNovEmp As New ADODB.Recordset
Dim rs_HisNovEstr As New ADODB.Recordset
Dim rs_HisNovGral As New ADODB.Recordset

Dim Encontro As Boolean
Dim Aux_Encontro As Boolean
Dim Vigencia_Activa As Boolean

'Dim ChequeaFirmas As Boolean
Dim Firmado As Boolean
Dim rs_firmas As New ADODB.Recordset

    Encontro = False
    OK = False
    
If Not Encontro And (Prognro = 3 Or Prognro = 12 Or Prognro = 13 Or Prognro = 14) Then
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Novedad de Baja Individual, por empleado "
    End If
    
        StrSql = "SELECT * FROM novbaja WHERE " & _
                 " concnro = " & concepto & _
                 " AND tpanro = " & tpanro & _
                 " AND empleado = " & buliq_cabliq!Empleado & _
                 " AND ((nevigencia = -1 " & _
                 " AND nedesde <= " & ConvFecha(Fecha_Fin) & _
                 " AND (nehasta >= " & ConvFecha(Fecha_Inicio) & _
                 " OR nehasta is null )) " & _
                 " OR nevigencia = 0)" & _
                 " ORDER BY nevigencia, nedesde, nehasta "
        OpenRecordset StrSql, rs_NovEmp
            
        If rs_NovEmp.EOF Then
            rs_NovEmp.Close
            
            StrSql = "SELECT * FROM novemp WHERE " & _
                     " concnro = " & concepto & _
                     " AND tpanro = " & tpanro & _
                     " AND empleado = " & buliq_cabliq!Empleado & _
                     " AND ((nevigencia = -1 " & _
                     " AND nedesde <= " & ConvFecha(Fecha_Fin) & _
                     " AND (nehasta >= " & ConvFecha(Fecha_Inicio) & _
                     " OR nehasta is null )) " & _
                     " OR nevigencia = 0)" & _
                     " ORDER BY nevigencia, nedesde, nehasta "
            OpenRecordset StrSql, rs_NovEmp
        
        End If
        
        val = 0
        
        Do While Not rs_NovEmp.EOF
            If FirmaActiva5 Then
                '/* Verificar si esta en el NIVEL FINAL DE FIRMA */
                StrSql = "select * from cysfirmas where cysfirfin = -1 " & _
                         " AND cysfircodext = '" & rs_NovEmp!nenro & "' and cystipnro = 5"
                OpenRecordset StrSql, rs_firmas
                If rs_firmas.EOF Then
                    Firmado = False
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "NIVEL FINAL DE FIRMA No Activo "
                    End If
                Else
                    Firmado = True
                End If
                If rs_firmas.State = adStateOpen Then rs_firmas.Close
            Else
                Firmado = True
            End If

        If Firmado Then
            If CBool(rs_NovEmp!nevigencia) Then
                Vigencia_Activa = True
                If Not EsNulo(rs_NovEmp!nehasta) Then
                    If (rs_NovEmp!nehasta < Fecha_Inicio) Or (Fecha_Fin < rs_NovEmp!nedesde) Then
                        'Exit Sub
                        Vigencia_Activa = False
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovEmp!nedesde & " Hasta " & rs_NovEmp!nehasta & " INACTIVA con valor " & rs_NovEmp!nevalor
                        End If
                    Else
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovEmp!nedesde & " Hasta " & rs_NovEmp!nehasta & " ACTIVA con valor " & rs_NovEmp!nevalor
                        End If
                    End If
                Else
                    If (Fecha_Fin < rs_NovEmp!nedesde) Then
                        'Exit Sub
                        Vigencia_Activa = False
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovEmp!nedesde & " Hasta indeterminado INACTIVA con valor " & rs_NovEmp!nevalor
                        End If
                    Else
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovEmp!nedesde & " Hasta indeterminado ACTIVA con valor " & rs_NovEmp!nevalor
                        End If
                    End If
                End If
            Else
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "Novedad sin vigencia con valor " & rs_NovEmp!nevalor
                End If
            End If
            
            If Vigencia_Activa Or Not CBool(rs_NovEmp!nevigencia) Then
                val = val + rs_NovEmp!nevalor
            End If
'            If Not EsNulo(rs_NovEmp!neretro) Then
'                fec = rs_NovEmp!neretro
'            End If
            
            If Not (EsNulo(rs_NovEmp!nepliqdesde) Or EsNulo(rs_NovEmp!nepliqhasta)) Then
                If rs_NovEmp!nepliqdesde <> 0 And rs_NovEmp!nepliqhasta <> 0 Then
                    Retroactivo = True
                    pliqdesde = rs_NovEmp!nepliqdesde
                    pliqhasta = rs_NovEmp!nepliqhasta
                Else
                    Retroactivo = False
                End If
            Else
                Retroactivo = False
            End If
            
            OK = True
            Encontro = True
        
        End If 'If Firmado Then
        
        rs_NovEmp.MoveNext
    Loop
    If Not Encontro Then
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontró ninguna Novedad Individual "
        End If
    End If
End If

If Not Encontro And (Prognro = 2 Or Prognro = 11 Or Prognro = 12 Or Prognro = 14) Then
'Case 2, 11, 12, 14:
        'buscar por Estructura
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Por estructura "
        End If
        StrSql = "SELECT * FROM novestr WHERE " & _
                 " concnro = " & concepto & _
                 " AND tpanro = " & tpanro & _
                 " AND ((ntevigencia = -1 " & _
                 " AND ntedesde <= " & ConvFecha(Fecha_Fin) & _
                 " AND (ntehasta >= " & ConvFecha(Fecha_Inicio) & " " & _
                 " OR ntehasta is null)) " & _
                 " OR ntevigencia = 0) " & _
                 " ORDER BY ntevigencia, ntedesde, ntehasta "
        OpenRecordset StrSql, rs_NovEstr
        
        OK = False
        Encontro = False
        Aux_Encontro = False
        If rs_NovEstr.EOF Then
            Firmado = False
        End If
        val = 0
        Do While Not rs_NovEstr.EOF 'And Not Encontro
            If FirmaActiva15 Then
                '/* Verificar si esta en el NIVEL FINAL DE FIRMA */
                    StrSql = "select * from cysfirmas where cysfirfin = -1 " & _
                             " AND cysfircodext = '" & rs_NovEstr!estrnro & "' and cystipnro = 15"
                    OpenRecordset StrSql, rs_firmas
                    If rs_firmas.EOF Then
                        Firmado = False
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "NIVEL FINAL DE FIRMA No Activo "
                        End If
                    Else
                        Firmado = True
                    End If
                If rs_firmas.State = adStateOpen Then rs_firmas.Close
            Else
                Firmado = True
            End If
            
            If Firmado Then
                If CBool(rs_NovEstr!ntevigencia) Then
                    Vigencia_Activa = True
                    If Not EsNulo(rs_NovEstr!ntehasta) Then
                        If (rs_NovEstr!ntehasta < Fecha_Inicio) Or (Fecha_Fin < rs_NovEstr!ntedesde) Then
                            'Exit Sub
                            Vigencia_Activa = False
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovEstr!ntedesde & " Hasta " & rs_NovEstr!ntehasta & " INACTIVA con valor " & rs_NovEstr!ntevalor
                            End If
                        Else
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovEstr!ntedesde & " Hasta " & rs_NovEstr!ntehasta & " ACTIVA con valor " & rs_NovEstr!ntevalor
                            End If
                        End If
                    Else
                        If (Fecha_Fin < rs_NovEstr!ntedesde) Then
                            'Exit Sub
                            Vigencia_Activa = False
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovEstr!ntedesde & " Hasta indeterminado INACTIVA con valor " & rs_NovEstr!ntevalor
                            End If
                        Else
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovEstr!ntedesde & " Hasta indeterminado ACTIVA con valor " & rs_NovEstr!ntevalor
                            End If
                        End If
                    End If
                End If
                
                If Vigencia_Activa Or Not CBool(rs_NovEstr!ntevigencia) Then
                    Encontro = False
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "busco que el empleado tenga la estructura " & rs_NovEstr!estrnro & " activa"
                    End If
                    
                    'busco que el empleado tenga esa estructura activa
                    StrSql = " SELECT tenro, estrnro FROM his_estructura " & _
                             " WHERE ternro = " & buliq_empleado!ternro & " AND " & _
                             " estrnro =" & rs_NovEstr!estrnro & _
                             " AND (htetdesde <= " & ConvFecha(Empleado_Fecha_Fin) & ") AND " & _
                             " ((" & ConvFecha(Empleado_Fecha_Fin) & " <= htethasta) or (htethasta is null))"
                    OpenRecordset StrSql, rs_His_Estructura
                    If Not rs_His_Estructura.EOF Then
                        val = val + rs_NovEstr!ntevalor
'                        If Not EsNulo(rs_NovEstr!nteretro) Then
'                            fec = rs_NovEstr!nteretro
'                        End If

                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "Estructura " & rs_NovEstr!estrnro & " activa"
                        End If
                        OK = True 'esta faltando retroactividad
                        Encontro = True
                        Aux_Encontro = True
                    Else
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "Estructura " & rs_NovEstr!estrnro & " No activa"
                        End If
                    End If
                End If
            End If 'firmado
           
            If Encontro And guarda_nov Then
                'Crea la novedad hist¢rica
                StrSql = "SELECT * FROM hisnovgru WHERE" & _
                         " concnro = " & rs_NovEstr!concnro & _
                         " AND tpanro =" & rs_NovEstr!tpanro & _
                         " AND grunro =" & rs_NovEstr!estrnro & _
                         " AND pronro =" & buliq_proceso!pronro
                OpenRecordset StrSql, rs_HisNovEstr
                
                If rs_HisNovEstr.EOF Then
                    ' Inserta
                    StrSql = "INSERT INTO hisnovgru (" & _
                             "concnro,ngvalor,tpanro,grunro,pronro,fechis" & _
                             ") VALUES (" & rs_NovEstr!concnro & _
                             "," & rs_NovEstr!ntevalor & _
                             "," & rs_NovEstr!tpanro & _
                             "," & rs_NovEstr!estrnro & _
                             "," & buliq_proceso!pronro & _
                             "," & ConvFecha(Date) & _
                             " )"
                             ' esta faltando retroactividad
                    objConn.Execute StrSql, , adExecuteNoRecords
                End If 'If Not rs_HisNovEstr.EOF Then
            End If 'If guarda_nov Then
            
            rs_NovEstr.MoveNext
        Loop
        Encontro = Aux_Encontro
        If Not Encontro Then
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "No se encontró ninguna Novedad por Estructura"
            End If
        End If
End If

If Not Encontro And (Prognro = 1 Or Prognro = 11 Or Prognro = 12 Or Prognro = 13) Then
'Case 1, 11, 12, 13:

    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Global "
    End If
    
' FGZ - 09/02/2004
    If objCache_NovGlobales.EsSimboloDefinido(CStr(concepto & "-" & tpanro)) Then
        val = objCache_NovGlobales.Valor(CStr(concepto & "-" & tpanro))
        
        OK = True 'esta faltando retroactividad
        Encontro = True
        If guarda_nov Then
            'Crea la novedad hist¢rica
            StrSql = "SELECT * FROM hisnovgral WHERE"
            StrSql = StrSql & " concnro = " & rs_NovGral!concnro
            StrSql = StrSql & " AND tpanro =" & rs_NovGral!tpanro
            StrSql = StrSql & " AND pronro =" & buliq_proceso!pronro
            OpenRecordset StrSql, rs_HisNovGral
            
            If rs_HisNovGral.EOF Then
                ' Inserta
                StrSql = "INSERT INTO hisnovgral ("
                StrSql = StrSql & "concnro,ngravalor,tpanro,pronro,fechis"
                StrSql = StrSql & ") VALUES (" & rs_NovGral!concnro
                StrSql = StrSql & "," & rs_NovGral!ngravalor
                StrSql = StrSql & "," & rs_NovGral!tpanro
                StrSql = StrSql & "," & buliq_proceso!pronro
                StrSql = StrSql & "," & ConvFecha(Date)
                StrSql = StrSql & " )"
                         ' esta faltando retroactividad
                objConn.Execute StrSql, , adExecuteNoRecords
            End If 'If Not rs_HisNovGral.EOF Then
        End If 'If guarda_nov Then
        
    Else
        StrSql = "SELECT * FROM novgral WHERE " & _
                 " concnro = " & concepto & _
                 " AND tpanro = " & tpanro & _
                 " AND ((ngravigencia = -1 " & _
                 " AND ngradesde < " & ConvFecha(Fecha_Fin) & " " & _
                 " AND (ngrahasta >= " & ConvFecha(Fecha_Inicio) & " " & _
                 " OR ngrahasta is null)) " & _
                 " OR ngravigencia = 0) " & _
                 " ORDER BY ngravigencia, ngradesde, ngrahasta "
        OpenRecordset StrSql, rs_NovGral
           
        Do While Not rs_NovGral.EOF
            If FirmaActiva19 Then
                '/* Verificar si esta en el NIVEL FINAL DE FIRMA */
                    StrSql = "select * from cysfirmas where cysfirfin = -1 " & _
                             " AND cysfircodext = '" & rs_NovGral!ngranro & "' and cystipnro = 19"
                    OpenRecordset StrSql, rs_firmas
                    If rs_firmas.EOF Then
                        Firmado = False
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "NIVEL FINAL DE FIRMA No Activo "
                        End If
                    Else
                        Firmado = True
                    End If
                If rs_firmas.State = adStateOpen Then rs_firmas.Close
            Else
                Firmado = True
            End If
        
            If Firmado Then
                If CBool(rs_NovGral!ngravigencia) Then
                    Vigencia_Activa = True
                    If Not EsNulo(rs_NovGral!ngrahasta) Then
                        If (rs_NovGral!ngrahasta < Fecha_Inicio) Or (Fecha_Fin < rs_NovGral!ngradesde) Then
                            'Exit Sub
                            Vigencia_Activa = False
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovGral!ngradesde & " Hasta " & rs_NovGral!ngrahasta & " INACTIVA con valor " & rs_NovGral!ngravalor
                            End If
                        Else
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovGral!ngradesde & " Hasta " & rs_NovGral!ngrahasta & " ACTIVA con valor " & rs_NovGral!ngravalor
                            End If
                        End If
                    Else
                        If (Fecha_Fin < rs_NovGral!ngradesde) Then
                            'Exit Sub
                            Vigencia_Activa = False
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovGral!ngradesde & " Hasta indeterminado INACTIVA con valor " & rs_NovGral!ngravalor
                            End If
                        Else
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Novedad con vigencia desde " & rs_NovGral!ngradesde & " Hasta indeterminado ACTIVA con valor " & rs_NovGral!ngravalor
                            End If
                        End If
                    End If
                End If
                
                If Vigencia_Activa Or Not CBool(rs_NovGral!ngravigencia) Then
                    val = val + rs_NovGral!ngravalor
                    
'                    If Not EsNulo(rs_NovGral!ngraretro) Then
'                        fec = rs_NovGral!ngraretro
'                    End If
'                    If rs_NovGral!ngrapliqdesde <> 0 And rs_NovGral!ngrapliqhasta <> 0 Then
'                        Retroactivo = True
'                        pliqdesde = rs_NovGral!ngrapliqdesde
'                        pliqhasta = rs_NovGral!ngrapliqhasta

'                    Else
'                        Retroactivo = False
'                    End If
                    
                    
                    OK = True 'esta faltando retroactividad
                    Encontro = True
                    If guarda_nov Then
                        'Crea la novedad hist¢rica
                        StrSql = "SELECT * FROM hisnovgral WHERE"
                        StrSql = StrSql & " concnro = " & rs_NovGral!concnro
                        StrSql = StrSql & " AND tpanro =" & rs_NovGral!tpanro
                        StrSql = StrSql & " AND pronro =" & buliq_proceso!pronro
                        OpenRecordset StrSql, rs_HisNovGral
                        
                        If rs_HisNovGral.EOF Then
                            ' Inserta
                            StrSql = "INSERT INTO hisnovgral ("
                            StrSql = StrSql & "concnro,ngravalor,tpanro,pronro,fechis"
                            StrSql = StrSql & ") VALUES (" & rs_NovGral!concnro
                            StrSql = StrSql & "," & rs_NovGral!ngravalor
                            StrSql = StrSql & "," & rs_NovGral!tpanro
                            StrSql = StrSql & "," & buliq_proceso!pronro
                            StrSql = StrSql & "," & ConvFecha(Date)
                            StrSql = StrSql & " )"
                                     ' esta faltando retroactividad
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If 'If Not rs_HisNovGral.EOF Then
                    End If 'If guarda_nov Then
                End If
            End If 'If Firmado Then
            
            rs_NovGral.MoveNext
        Loop
        
        If Encontro Then
            'inserto la novedad en el cache
            Call objCache_NovGlobales.Insertar_Simbolo(CStr(concepto & "-" & tpanro & "0"), val)
        Else
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "No se encontró ninguna Novedad global"
            End If
        End If
    End If
End If

' Libero y cierro
If rs_NovEmp.State = adStateOpen Then rs_NovEmp.Close
Set rs_NovEmp = Nothing

If rs_NovEstr.State = adStateOpen Then rs_NovEstr.Close
Set rs_NovEstr = Nothing

If rs_NovGral.State = adStateOpen Then rs_NovGral.Close
Set rs_NovGral = Nothing

'Historicos
If rs_HisNovEmp.State = adStateOpen Then rs_HisNovEmp.Close
Set rs_HisNovEmp = Nothing

If rs_HisNovEstr.State = adStateOpen Then rs_HisNovEstr.Close
Set rs_HisNovEstr = Nothing

If rs_HisNovGral.State = adStateOpen Then rs_HisNovGral.Close
Set rs_HisNovGral = Nothing

End Sub



Public Sub Actualizar_BAE(ByVal Fecha_Inicio_Periodo As Date, _
                          ByVal Fecha_Fin_Periodo As Date, _
                          ByVal Fecha_Fin_Penalidad As Date, _
                          ByVal Anual As Boolean, ByRef OK As Boolean, ByRef val As Double)
' ---------------------------------------------------------------------------------------------
' Descripcion: Procedimiento de actualizacion de partes diarios a BAE.
' Autor      : FGZ
' Fecha      : 18/05/2005
' Ultima Mod.: FGZ - 14/03/2007
' Descripcion: Cambié esto
'               Call Generar_Penalidades(Fecha_Inicio_Partes, Fecha_Fin_Partes, False)
'               X
'               Call Generar_Penalidades(C_Date("01/01/" & Year(Fecha_Inicio_Periodo) - 1), C_Date("31/12/" & Year(Fecha_Fin_Penalidad) - 1), False)
' Ultima Mod.: FGZ - 15/03/2007
' Descripcion: Cambié esto
'                If Anual Then
'                    Call Generar_Penalidades(Fecha_Inicio_Periodo, Fecha_Fin_Penalidad, False)
'                End If
'                Call Generar_Penalidades(Fecha_Inicio_Partes, Fecha_Fin_Partes, False)
'                Call Generar_Sanciones(Fecha_Inicio_Periodo, Fecha_Fin_Penalidad, Anual, Hs_Jornada_Diaria, Hs_Jornada_Mensual)
' ---------------------------------------------------------------------------------------------
Dim Hs_Jornada_Mensual As Double
Dim Hs_Jornada_Diaria As Double
Dim NroBusq_Jornada_Mensual As Long
Dim NroBusq_Jornada_Diaria As Long

Dim Codigo As String
Dim Llegadas_Tarde As Integer
Dim horas As Double
Dim Cantidad As Double
Dim TipoBAE As Long
Dim TipoBAE1 As Long

Dim rs As New ADODB.Recordset
Dim rs_Confrep As New ADODB.Recordset
Dim rs_Partes As New ADODB.Recordset
Dim rs_Tipo_Bae As New ADODB.Recordset

Dim Fecha_Inicio_Partes As Date
Dim Fecha_Fin_Partes As Date

    On Error GoTo MELocal

    'Busco el tipo de Bae para ese bae
    StrSql = "SELECT * FROM ee_tipo_bae"
    StrSql = StrSql & " WHERE tbaecodext = '01'"
    If rs_Tipo_Bae.State = adStateOpen Then rs_Tipo_Bae.Close
    OpenRecordset StrSql, rs_Tipo_Bae
    If Not rs_Tipo_Bae.EOF Then
        TipoBAE1 = rs_Tipo_Bae!tbaenro
    Else
        TipoBAE1 = 0
    End If

    'Busco el nro de escala para Jornada Mensual
    NroBusq_Jornada_Mensual = 0
    StrSql = "SELECT * FROM confrep "
    StrSql = StrSql & " WHERE repnro = 131 "
    StrSql = StrSql & " AND confnrocol = 1 "
    OpenRecordset StrSql, rs_Confrep
    If rs_Confrep.EOF Then
        Flog.writeline Espacios(Tabulador * 1) & "No esta configurado el nro de busqueda correspondiente a la Jornada Mensual del reporte 131"
        Exit Sub
    Else
        NroBusq_Jornada_Mensual = rs_Confrep!confval
    End If

    'Busco el nro de escala para Jornada Diaria
    NroBusq_Jornada_Diaria = 0
    StrSql = "SELECT * FROM confrep "
    StrSql = StrSql & " WHERE repnro = 131 "
    StrSql = StrSql & " AND confnrocol = 2 "
    OpenRecordset StrSql, rs_Confrep
    If rs_Confrep.EOF Then
        Flog.writeline Espacios(Tabulador * 1) & "No esta configurado el nro de busqueda correspondiente a la Jornada Diaria del reporte 131"
        Exit Sub
    Else
        NroBusq_Jornada_Diaria = rs_Confrep!confval
    End If

            
    'Escala Horas Jornada Mensual
    NroProg = NroBusq_Jornada_Mensual
    Call bus_Grilla(3, Arr_conceptos(Concepto_Actual).Conccod, NroBusq_Jornada_Mensual)
    Hs_Jornada_Mensual = Valor / 100
    
    'Escala Horas Jornada Diaria
    NroProg = NroBusq_Jornada_Diaria
    Call bus_Grilla(3, Arr_conceptos(Concepto_Actual).Conccod, NroBusq_Jornada_Diaria)
    Hs_Jornada_Diaria = Valor

    'HJI: 10-08-2005
    'Puede Haber mas de un codigo de bae asociado a un codigo de parte, como sucede
    'para los codigos de bae 1 y 8, y se me duplicaban los partes
    
    'HJI: 23-03-2006
    'Correccion: Los partes se buscan para un solo mes (el mes del periodo BAE)
    'independientemente de que sea el calculo del BAE anual. La fecha de inicio del periodo
    'trae en el caso de que sea anual la fecha de inicio del año, entonces la corrijo
    'para que los partes se busquen en este periodo.
    If Anual Then
        Fecha_Inicio_Partes = C_Date("01/" & CStr(Month(Fecha_Fin_Periodo)) & "/" & CStr(Year(Fecha_Fin_Periodo)))
        Fecha_Fin_Partes = Fecha_Fin_Periodo
    Else
        Fecha_Inicio_Partes = Fecha_Inicio_Periodo
        Fecha_Fin_Partes = Fecha_Fin_Periodo
    End If
    StrSql = "SELECT * FROM ee_parte "
    StrSql = StrSql & " INNER JOIN ee_tipo_parte ON ee_parte.tparnro = ee_tipo_parte.tparnro AND ee_tipo_parte.tparafectabae = -1 "
    StrSql = StrSql & " INNER JOIN ee_bae_parte ON ee_parte.tparnro = ee_bae_parte.tparnro "
    StrSql = StrSql & " WHERE ee_parte.ternro = " & buliq_empleado!ternro
    StrSql = StrSql & " AND ee_bae_parte.tbaenro <> 1 AND ee_bae_parte.tbaenro <> 8 "
    StrSql = StrSql & " AND ee_parte.fecnov63 <= " & ConvFecha(Fecha_Fin_Partes)
    StrSql = StrSql & " AND ee_parte.fecnov63 >= " & ConvFecha(Fecha_Inicio_Partes)
    
    If CBool(USA_DEBUG) Then
       Flog.writeline Espacios(Tabulador * 4) & "Fecha Fin Periodo Partes: " & Fecha_Fin_Partes
       Flog.writeline Espacios(Tabulador * 4) & "Fecha Inicio Periodo Partes: " & Fecha_Inicio_Partes
    End If
    
    OpenRecordset StrSql, rs_Partes

    If rs_Partes.EOF Then
        Flog.writeline Espacios(Tabulador * 4) & " No hay partes en el periodo "
    End If
    
    'Inicializo las variables
    Codigo = 0
    Llegadas_Tarde = 0
    
    Do While Not rs_Partes.EOF
        Select Case UCase(rs_Partes!tparcodext)
        Case "906", "952", "954", "956":
            Codigo = "02"
            horas = rs_Partes!noved63
            Cantidad = rs_Partes!noved63 / 60
        Case "934", "935", "936", "947":
            Codigo = "03"
            horas = rs_Partes!noved63
            Cantidad = rs_Partes!noved63 / 60
        Case "928": 'LLegadas tarde
            Codigo = "07"
            horas = rs_Partes!noved63
            Cantidad = 1
            Llegadas_Tarde = Llegadas_Tarde + 1
        End Select
        
        'Busco el tipo de Bae para ese bae
        StrSql = "SELECT * FROM ee_tipo_bae"
        StrSql = StrSql & " WHERE tbaecodext = '" & Codigo & "'"
        If rs_Tipo_Bae.State = adStateOpen Then rs_Tipo_Bae.Close
        OpenRecordset StrSql, rs_Tipo_Bae
        If Not rs_Tipo_Bae.EOF Then
            TipoBAE = rs_Tipo_Bae!tbaenro
        Else
            TipoBAE = 0
        End If
        
        'Actualizo la tabla temporal
        StrSql = "SELECT * FROM ee_parte_bae"
        StrSql = StrSql & " WHERE ternro = " & buliq_empleado!ternro
        StrSql = StrSql & " AND pronro = " & buliq_proceso!pronro
        StrSql = StrSql & " AND tparnro = " & rs_Partes!tparnro
        StrSql = StrSql & " AND tbaenro = " & TipoBAE
        StrSql = StrSql & " AND aaaamm70 = " & ConvFecha(C_Date("01/" & CStr(Month(rs_Partes!fecnov63)) & "/" & CStr(Year(rs_Partes!fecnov63))))
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
            StrSql = "INSERT INTO ee_parte_bae (ternro,aaaamm70,tbaenro,codigo_bae,tparnro,codigo_parte,Cantidad70,horas,pronro) "
            StrSql = StrSql & " VALUES ("
            StrSql = StrSql & buliq_empleado!ternro
            StrSql = StrSql & "," & ConvFecha(C_Date("01/" & CStr(Month(rs_Partes!fecnov63)) & "/" & CStr(Year(rs_Partes!fecnov63))))
            StrSql = StrSql & "," & TipoBAE
            StrSql = StrSql & ",'" & Codigo & "'"
            StrSql = StrSql & "," & rs_Partes!tparnro
            StrSql = StrSql & ",'" & Trim(rs_Partes!tparcodext) & "'"
            StrSql = StrSql & "," & Cantidad
            StrSql = StrSql & "," & horas
            StrSql = StrSql & "," & buliq_proceso!pronro
            StrSql = StrSql & ")"
            
            If CBool(USA_DEBUG) Then
               Flog.writeline Espacios(Tabulador * 4) & "Guardando Partes BAE: " & StrSql
            End If
            
            objConn.Execute StrSql, , adExecuteNoRecords
        Else
            StrSql = "UPDATE ee_parte_bae SET "
            StrSql = StrSql & " horas = horas + " & horas
            StrSql = StrSql & " ,cantidad70 = cantidad70 + " & Cantidad
            StrSql = StrSql & " WHERE ternro = " & buliq_empleado!ternro
            StrSql = StrSql & " AND pronro = " & buliq_proceso!pronro
            StrSql = StrSql & " AND tparnro = " & rs_Partes!tparnro
            StrSql = StrSql & " AND tbaenro = " & TipoBAE
            'StrSql = StrSql & " AND aaaamm70 = " & ConvFecha(rs_Partes!fecnov63)
            
            If CBool(USA_DEBUG) Then
               Flog.writeline Espacios(Tabulador * 4) & "Actualizando Partes BAE: " & StrSql
            End If
            
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
        
        If CBool(USA_DEBUG) Then
           Flog.writeline Espacios(Tabulador * 4) & "Partes BAE Actualizado."
        End If

        rs_Partes.MoveNext
    Loop

    'Actualizo los valores
    'HJI: 10-08-2005
    'Use cantidad70 * 60 porque hay registros en la tabla bae que fueron cargados a mano
    'y no tienen valores en el campo hora
    
    StrSql = "SELECT * FROM ee_parte_bae"
    StrSql = StrSql & " WHERE ternro = " & buliq_empleado!ternro
    StrSql = StrSql & " AND pronro = " & buliq_proceso!pronro
    StrSql = StrSql & " AND aaaamm70 >= " & ConvFecha(Fecha_Inicio_Partes)
    StrSql = StrSql & " AND aaaamm70 <= " & ConvFecha(Fecha_Fin_Partes)
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs
    Do While Not rs.EOF
        StrSql = "UPDATE ee_parte_bae SET "
        Select Case rs!codigo_parte
        Case "906":
            If rs!Cantidad70 >= Hs_Jornada_Mensual Then
                StrSql = StrSql & " cantidad70 = 1 "
                StrSql = StrSql & " ,codigo_bae = '01'"
                StrSql = StrSql & " ,tbaenro = " & TipoBAE1
            Else
                StrSql = StrSql & " cantidad70 = " & rs!Cantidad70 * 60 / Hs_Jornada_Diaria
            End If
        Case "928":
            StrSql = StrSql & " cantidad70 = " & Llegadas_Tarde
        Case Else
            StrSql = StrSql & " cantidad70 = " & rs!Cantidad70 * 60 / Hs_Jornada_Diaria
        End Select
        StrSql = StrSql & " WHERE pbaenro = " & rs!pbaenro
        objConn.Execute StrSql, , adExecuteNoRecords
                        
        rs.MoveNext
    Loop
     
'FGZ - 15/03/2007 ----------------------------------
'Cambié esto
'    'HJI: 23-03-2006
'    'SI es anual, entonces tambien genero las penalidades del mes de bae, pero no genero sanciones
'    If Anual Then
'        'FGZ - 14/03/2007 ------
'        'Cambié esto
'        'Call Generar_Penalidades(Fecha_Inicio_Partes, Fecha_Fin_Partes, False)
'        'X
'        Call Generar_Penalidades(Fecha_Inicio_Periodo, Fecha_Fin_Penalidad, False)
'        'FGZ - 14/03/2007 ------
'    End If
'    Call Generar_Penalidades(Fecha_Inicio_Periodo, Fecha_Fin_Penalidad, True)
'    Call Generar_Sanciones(Fecha_Inicio_Periodo, Fecha_Fin_Penalidad, Anual, Hs_Jornada_Diaria, Hs_Jornada_Mensual)

'Por esto
    'SI es anual, entonces tambien genero las penalidades del mes de bae, pero no genero sanciones
    If Anual Then
        Call Generar_Penalidades(Fecha_Inicio_Periodo, Fecha_Fin_Penalidad, False)
    End If
    Call Generar_Penalidades(Fecha_Inicio_Partes, Fecha_Fin_Partes, False)
    Call Generar_Sanciones(Fecha_Inicio_Periodo, Fecha_Fin_Penalidad, Anual, Hs_Jornada_Diaria, Hs_Jornada_Mensual)
'FGZ - 15/03/2007 ----------------------------------

Fin:
If rs.State = adStateOpen Then rs.Close
If rs_Confrep.State = adStateOpen Then rs_Confrep.Close
If rs_Partes.State = adStateOpen Then rs_Partes.Close
If rs_Tipo_Bae.State = adStateOpen Then rs_Tipo_Bae.Close

Set rs = Nothing
Set rs_Confrep = Nothing
Set rs_Partes = Nothing
Set rs_Tipo_Bae = Nothing

Exit Sub

MELocal:
    Flog.writeline Espacios(Tabulador * 0) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 0) & " Error en busqueda de BAE " & Err.Description
    If InStr(1, Err.Description, "ODBC") > 0 Then
        'Fue error de Consulta de SQL
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 0) & "SQL Ejecutado: " & StrSql
        Flog.writeline
    End If
    Flog.writeline Espacios(Tabulador * 0) & "**********************************************************"
    Flog.writeline
    GoTo Fin
End Sub


'Public Sub Actualizar_BAE_old(ByVal Fecha_Inicio_Periodo As Date, ByVal Fecha_Fin_Periodo As Date, ByVal Anual As Boolean, ByRef Ok As Boolean, ByRef val As Double)
'' ---------------------------------------------------------------------------------------------
'' Descripcion: Procedimiento de actualizacion de partes diarios a BAE.
'' Autor      : FGZ
'' Fecha      : 18/05/2005
'' Ultima Mod.:
'' Descripcion:
'' ---------------------------------------------------------------------------------------------
'Dim Hs_Jornada_Mensual As Double
'Dim Hs_Jornada_Diaria As Double
'Dim NroBusq_Jornada_Mensual As Long
'Dim NroBusq_Jornada_Diaria As Long
'
'Dim Codigo As String
'Dim Llegadas_Tarde As Integer
'Dim Horas As Double
'Dim Cantidad As Double
'Dim TipoBAE As Long
'
'Dim rs As New ADODB.Recordset
'Dim rs_Confrep As New ADODB.Recordset
'Dim rs_Partes As New ADODB.Recordset
'Dim rs_Tipo_Bae As New ADODB.Recordset
'
'    On Error GoTo MELocal
'
'    'Fecha_Fin_Periodo = DateAdd("m", -1, buliq_periodo!pliqhasta)
'    'Fecha_Inicio_Periodo = DateAdd("m", -1, buliq_periodo!pliqhasta)
'
'    'Busco el nro de escala para Jornada Mensual
'    NroBusq_Jornada_Mensual = 0
'    StrSql = "SELECT * FROM confrep "
'    StrSql = StrSql & " WHERE repnro = 131 "
'    StrSql = StrSql & " AND confnrocol = 1 "
'    OpenRecordset StrSql, rs_Confrep
'    If rs_Confrep.EOF Then
'        Flog.writeline Espacios(Tabulador * 1) & "No esta configurado el nro de busqueda correspondiente a la Jornada Mensual del reporte 131"
'        Exit Sub
'    Else
'        NroBusq_Jornada_Mensual = rs_Confrep!confval
'    End If
'
'    'Busco el nro de escala para Jornada Diaria
'    NroBusq_Jornada_Diaria = 0
'    StrSql = "SELECT * FROM confrep "
'    StrSql = StrSql & " WHERE repnro = 131 "
'    StrSql = StrSql & " AND confnrocol = 2 "
'    OpenRecordset StrSql, rs_Confrep
'    If rs_Confrep.EOF Then
'        Flog.writeline Espacios(Tabulador * 1) & "No esta configurado el nro de busqueda correspondiente a la Jornada Diaria del reporte 131"
'        Exit Sub
'    Else
'        NroBusq_Jornada_Diaria = rs_Confrep!confval
'    End If
'
'
'    'Escala Horas Jornada Mensual
'    NroProg = NroBusq_Jornada_Mensual
'    Call bus_Grilla(3, Arr_conceptos(Concepto_Actual).Conccod, NroBusq_Jornada_Mensual)
'    Hs_Jornada_Mensual = Valor / 100
'
'    'Escala Horas Jornada Diaria
'    NroProg = NroBusq_Jornada_Diaria
'    Call bus_Grilla(3, Arr_conceptos(Concepto_Actual).Conccod, NroBusq_Jornada_Diaria)
'    Hs_Jornada_Diaria = Valor
'
'
'    StrSql = "SELECT * FROM ee_parte "
'    StrSql = StrSql & " INNER JOIN ee_tipo_parte ON ee_parte.tparnro = ee_tipo_parte.tparnro AND ee_tipo_parte.tparafectabae = -1 "
'    StrSql = StrSql & " INNER JOIN ee_bae_parte ON ee_parte.tparnro = ee_bae_parte.tparnro "
'    StrSql = StrSql & " WHERE ee_parte.ternro = " & buliq_empleado!ternro
'    StrSql = StrSql & " AND ee_parte.fecnov63 <= " & ConvFecha(Fecha_Fin_Periodo)
'    StrSql = StrSql & " AND ee_parte.fecnov63 >= " & ConvFecha(Fecha_Inicio_Periodo)
'    OpenRecordset StrSql, rs_Partes
'
'    If rs_Partes.EOF Then
'        Flog.writeline Espacios(Tabulador * 4) & " No hay partes en el periodo "
'    End If
'
'    'Inicializo las variables
'    Codigo = 0
'    Llegadas_Tarde = 0
'
'    Do While Not rs_Partes.EOF
'        Select Case UCase(rs_Partes!tparcodext)
'        Case "906", "952", "954", "956":
'            Codigo = "2"
'            Horas = rs_Partes!noved63
'            Cantidad = rs_Partes!noved63 / 60
'        Case "934", "935", "936", "947":
'            Codigo = "3"
'            Horas = rs_Partes!noved63
'            Cantidad = rs_Partes!noved63 / 60
'        Case "928": 'LLegadas tarde
'            Codigo = "7"
'            Horas = rs_Partes!noved63
'            Cantidad = 1
'            Llegadas_Tarde = Llegadas_Tarde + 1
''        Case Else
''            Codigo = "2"
''            Horas = rs_Partes!noved63
''            Cantidad = rs_Partes!noved63 / Hs_Jornada_Diaria
'        End Select
'
''                'Licencias
''                If rs_Partes!tparcodext = "906" Then
''                    If Cantidadacumulada > Hs_Jornada_Mensual Then 'Todo el mes
''                        Codigo = "1"
''                        Cantidad = 1
''                    Else
''                        Cantidad = Hs_Jornada_Diaria 'Queda en dias
''                    End If
''                End If
''                'LLegadas tarde
''                If rs_Partes!tparcodext <> "928" Then
''                    Cantidad = Hs_Jornada_Diaria
''                End If
'
'        'Busco el tipo de Bae para ese bae
'        StrSql = "SELECT * FROM ee_tipo_bae"
'        StrSql = StrSql & " WHERE tbaecodext = '" & Codigo & "'"
'        If rs_Tipo_Bae.State = adStateOpen Then rs_Tipo_Bae.Close
'        OpenRecordset StrSql, rs_Tipo_Bae
'        If Not rs_Tipo_Bae.EOF Then
'            TipoBAE = rs_Tipo_Bae!tbaenro
'        Else
'            TipoBAE = 0
'        End If
'
'        'Actualizo la tabla temporal
'        StrSql = "SELECT * FROM WF_BAE"
'        StrSql = StrSql & " WHERE ternro = " & buliq_empleado!ternro
'        StrSql = StrSql & " AND pronro = " & buliq_proceso!pronro
'        StrSql = StrSql & " AND codigo_parte = '" & Trim(rs_Partes!tparcodext) & "'"
'        StrSql = StrSql & " AND mes = " & Month(rs_Partes!fecnov63)
'        StrSql = StrSql & " AND anio = " & Year(rs_Partes!fecnov63)
'        If rs.State = adStateOpen Then rs.Close
'        OpenRecordset StrSql, rs
'        If rs.EOF Then
'            StrSql = "INSERT INTO WF_BAE (ternro,tbaenro,codigo_bae,tparnro,codigo_parte,Cantidad,Horas,mes,anio,pronro) "
'            StrSql = StrSql & " VALUES ("
'            StrSql = StrSql & buliq_empleado!ternro
'            StrSql = StrSql & "," & TipoBAE
'            StrSql = StrSql & ",'" & Codigo & "'"
'            StrSql = StrSql & "," & rs_Partes!tparnro
'            StrSql = StrSql & ",'" & Trim(rs_Partes!tparcodext) & "'"
'            StrSql = StrSql & "," & Cantidad
'            StrSql = StrSql & "," & Horas
'            StrSql = StrSql & "," & Month(rs_Partes!fecnov63)
'            StrSql = StrSql & "," & Year(rs_Partes!fecnov63)
'            StrSql = StrSql & "," & buliq_proceso!pronro
'            StrSql = StrSql & ")"
'            objConn.Execute StrSql, , adExecuteNoRecords
'        Else
'            StrSql = "UPDATE WF_BAE SET "
'            StrSql = StrSql & " horas = horas + " & Horas
'            StrSql = StrSql & " ,cantidad = cantidad + " & Cantidad
'            StrSql = StrSql & " WHERE ternro = " & buliq_empleado!ternro
'            StrSql = StrSql & " AND pronro = " & buliq_proceso!pronro
'            StrSql = StrSql & " AND codigo_parte = '" & Trim(rs_Partes!tparcodext) & "'"
'            StrSql = StrSql & " AND mes = " & Month(rs_Partes!fecnov63)
'            StrSql = StrSql & " AND anio = " & Year(rs_Partes!fecnov63)
'            objConn.Execute StrSql, , adExecuteNoRecords
'        End If
'
'        rs_Partes.MoveNext
'    Loop
'
'    'Actualizo los valores
'    StrSql = "SELECT * FROM WF_BAE"
'    StrSql = StrSql & " WHERE ternro = " & buliq_empleado!ternro
'    StrSql = StrSql & " AND pronro = " & buliq_proceso!pronro
'    StrSql = StrSql & " AND mes = " & Month(Fecha_Inicio_Periodo)
'    StrSql = StrSql & " AND anio = " & Year(Fecha_Inicio_Periodo)
'    If rs.State = adStateOpen Then rs.Close
'    OpenRecordset StrSql, rs
'    Do While Not rs.EOF
'        StrSql = "UPDATE WF_BAE SET "
'        Select Case rs!codigo_parte
'        Case "906":
'            If rs!Cantidad > Hs_Jornada_Mensual Then
'                StrSql = StrSql & " cantidad = 1 "
'                StrSql = StrSql & " ,codigo_bae = '1'"
'            Else
'                StrSql = StrSql & " cantidad = " & rs!Horas / Hs_Jornada_Diaria
'            End If
'        Case "928":
'            StrSql = StrSql & " cantidad = " & Llegadas_Tarde
'        Case Else
'            StrSql = StrSql & " cantidad = " & rs!Horas / Hs_Jornada_Diaria
'        End Select
'        StrSql = StrSql & " WHERE ternro = " & buliq_empleado!ternro
'        StrSql = StrSql & " AND pronro = " & buliq_proceso!pronro
'        StrSql = StrSql & " AND codigo_parte = '" & Trim(rs!codigo_parte) & "'"
'        StrSql = StrSql & " AND mes = " & Month(Fecha_Inicio_Periodo)
'        StrSql = StrSql & " AND anio = " & Year(Fecha_Inicio_Periodo)
'        objConn.Execute StrSql, , adExecuteNoRecords
'
'        rs.MoveNext
'    Loop
'
'    Call Generar_Penalidades(Fecha_Inicio_Periodo, Fecha_Fin_Periodo)
'    Call Generar_Sanciones(Fecha_Inicio_Periodo, Fecha_Fin_Periodo, Anual, Hs_Jornada_Diaria, Hs_Jornada_Mensual)
'
'
'Fin:
'If rs.State = adStateOpen Then rs.Close
'If rs_Confrep.State = adStateOpen Then rs_Confrep.Close
'If rs_Partes.State = adStateOpen Then rs_Partes.Close
'If rs_Tipo_Bae.State = adStateOpen Then rs_Tipo_Bae.Close
'
'Set rs = Nothing
'Set rs_Confrep = Nothing
'Set rs_Partes = Nothing
'Set rs_Tipo_Bae = Nothing
'
'Exit Sub
'
'MELocal:
'    Flog.writeline Espacios(Tabulador * 0) & "**********************************************************"
'    Flog.writeline Espacios(Tabulador * 0) & " Error en busqueda de BAE " & Err.Description
'    If InStr(1, Err.Description, "ODBC") > 0 Then
'        'Fue error de Consulta de SQL
'        Flog.writeline
'        Flog.writeline Espacios(Tabulador * 0) & "SQL Ejecutado: " & StrSql
'        Flog.writeline
'    End If
'    Flog.writeline Espacios(Tabulador * 0) & "**********************************************************"
'    Flog.writeline
'    GoTo Fin
'End Sub


Public Sub Generar_Penalidades(ByVal Fecha_Inicio As Date, ByVal Fecha_Fin As Date, ByVal ActSanciones As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Procedimiento para generar las penalidades del tercero.
' Autor      : FGZ
' Fecha      : 05/05/2005
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Acumula As Double
Dim Penalidad As Double
Dim TipoBAE As Long

Dim rs As New ADODB.Recordset
Dim rs3 As New ADODB.Recordset
Dim rs_BAE As New ADODB.Recordset
Dim rs_Tipo_Bae As New ADODB.Recordset

    Penalidad = 0
    
    'Busco el acumulado de las penalidades de meses anteriores
    StrSql = "SELECT sum(penali70) as penalidad FROM ee_parte_bae"
    StrSql = StrSql & " WHERE ternro = " & buliq_empleado!ternro
    StrSql = StrSql & " AND codigo_bae = '07'"
    StrSql = StrSql & " AND aaaamm70 >= " & ConvFecha(C_Date("01/01/" & CStr(Year(Fecha_Inicio))))
    StrSql = StrSql & " AND aaaamm70 <= " & ConvFecha(Fecha_Fin)
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        Acumula = IIf(Not EsNulo(rs!Penalidad), rs!Penalidad, 0)
    Else
        Acumula = 0
    End If
    
    StrSql = "SELECT * FROM ee_parte_bae"
    StrSql = StrSql & " WHERE ternro = " & buliq_empleado!ternro
    StrSql = StrSql & " AND aaaamm70 >= " & ConvFecha(C_Date("01/01/" & CStr(Year(Fecha_Inicio))))
    StrSql = StrSql & " AND aaaamm70 <= " & ConvFecha(Fecha_Fin)
    StrSql = StrSql & " ORDER BY codigo_bae "
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs
    
    Do While Not rs.EOF
        Select Case rs!codigo_bae
        Case "01", "10":
            Penalidad = 8.33 '100/12
            'Actualizar
            StrSql = "UPDATE ee_parte_bae SET "
            StrSql = StrSql & " penali70 = " & Penalidad
            StrSql = StrSql & " WHERE pbaenro = " & rs!pbaenro
            objConn.Execute StrSql, , adExecuteNoRecords
        Case "02":
            Penalidad = 0.5 * rs!Cantidad70
            If Penalidad > 8.33 Then
                'Actualizar
                Penalidad = 8.33
                'HJI: 2006-03-23
                'Indica si cuando se generen sanciones se debe computar como mes no trabajado.
                'Para el caso del mes 3, esto no se debe hacer.-
                If ActSanciones Then
                    StrSql = "UPDATE ee_parte_bae SET "
                    StrSql = StrSql & "tbaenro = 9999" 'TipoBAE: Lo Fijo porque luego lo debo volver a 02
                    StrSql = StrSql & " WHERE pbaenro = " & rs!pbaenro
                    objConn.Execute StrSql, , adExecuteNoRecords
                End If
            Else
                StrSql = "UPDATE ee_parte_bae SET "
                StrSql = StrSql & " penali70 = " & Penalidad
                StrSql = StrSql & " WHERE pbaenro = " & rs!pbaenro
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
        Case "03":
            StrSql = "SELECT * FROM ee_tipo_parte "
            StrSql = StrSql & " WHERE ee_tipo_parte.tparnro = " & rs!tparnro
            OpenRecordset StrSql, rs3
            If Not rs3.EOF Then
                If rs3!tparcodext = "947" Then
                    Penalidad = 0.5 * rs!Cantidad70
                Else
                    Penalidad = 3 * rs!Cantidad70
                End If
            Else
                Penalidad = 3 * rs!Cantidad70
            End If
            'Actualizar
            StrSql = "UPDATE ee_parte_bae SET "
            StrSql = StrSql & " penali70 = " & Penalidad
            StrSql = StrSql & " WHERE pbaenro = " & rs!pbaenro
'            StrSql = StrSql & " WHERE ternro = " & buliq_empleado!ternro
'            StrSql = StrSql & " AND pronro = " & buliq_proceso!pronro
'            StrSql = StrSql & " AND codigo_parte = '" & Trim(rs!Codigo_parte) & "'"
'            StrSql = StrSql & " AND mes = " & Month(Fecha)
'            StrSql = StrSql & " AND anio = " & Year(Fecha)
            objConn.Execute StrSql, , adExecuteNoRecords
        Case "04":
            Penalidad = 50
            'Actualizar
            StrSql = "UPDATE ee_parte_bae SET "
            StrSql = StrSql & " penali70 = " & Penalidad
            StrSql = StrSql & " WHERE pbaenro = " & rs!pbaenro
            objConn.Execute StrSql, , adExecuteNoRecords
        Case "05", "06":
            'No se hace nada
        Case "07":
            If rs!Cantidad70 > 4 Then
                Penalidad = rs!Cantidad70 - 4
                Acumula = Acumula + Penalidad
            Else
                Penalidad = 0
                Acumula = Acumula + rs!Cantidad70
            End If
            'Actualizar
            StrSql = "UPDATE ee_parte_bae SET "
            StrSql = StrSql & " penali70 = " & Penalidad
            StrSql = StrSql & " WHERE pbaenro = " & rs!pbaenro
            objConn.Execute StrSql, , adExecuteNoRecords
        Case "09":
            Penalidad = 3 * rs!Cantidad70
            'Actualizar
            StrSql = "UPDATE ee_parte_bae SET "
            StrSql = StrSql & " penali70 = " & Penalidad
            StrSql = StrSql & " WHERE pbaenro = " & rs!pbaenro
            objConn.Execute StrSql, , adExecuteNoRecords
        Case "11", "12":
            Penalidad = 5 * rs!Cantidad70
            'Actualizar
            StrSql = "UPDATE ee_parte_bae SET "
            StrSql = StrSql & " penali70 = " & Penalidad
            StrSql = StrSql & " WHERE pbaenro = " & rs!pbaenro
            objConn.Execute StrSql, , adExecuteNoRecords
        Case "13":
            Penalidad = 10 * rs!Cantidad70
            'Actualizar
            StrSql = "UPDATE ee_parte_bae SET "
            StrSql = StrSql & " penali70 = " & Penalidad
            StrSql = StrSql & " WHERE pbaenro = " & rs!pbaenro
            objConn.Execute StrSql, , adExecuteNoRecords
        Case "14", "15", "16":
            Penalidad = 100
            'Actualizar
            StrSql = "UPDATE ee_parte_bae SET "
            StrSql = StrSql & " penali70 = " & Penalidad
            StrSql = StrSql & " WHERE pbaenro = " & rs!pbaenro
            objConn.Execute StrSql, , adExecuteNoRecords
        Case Else
            Penalidad = 8.33 '100/12
            'Actualizar
            StrSql = "UPDATE ee_parte_bae SET "
            StrSql = StrSql & " penali70 = " & Penalidad
            StrSql = StrSql & " WHERE pbaenro = " & rs!pbaenro
            objConn.Execute StrSql, , adExecuteNoRecords
        End Select
        
        If Acumula > 12 Then
            Penalidad = 2
            
            'Busco el tipo de Bae para ese bae
            StrSql = "SELECT * FROM ee_tipo_bae"
            StrSql = StrSql & " WHERE tbaecodext = '01'"
            If rs_Tipo_Bae.State = adStateOpen Then rs_Tipo_Bae.Close
            OpenRecordset StrSql, rs_Tipo_Bae
            If Not rs_Tipo_Bae.EOF Then
                TipoBAE = rs_Tipo_Bae!tbaenro
            Else
                TipoBAE = 0
            End If
            
            StrSql = "UPDATE ee_parte_bae SET "
            StrSql = StrSql & " penali70 = " & Penalidad
            StrSql = StrSql & " ,tbaenro = " & TipoBAE
            StrSql = StrSql & " ,codigo_bae = '08'"
            StrSql = StrSql & " WHERE pbaenro = " & rs!pbaenro
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
    
        rs.MoveNext
    Loop

'cierro todo y libero
If rs.State = adStateOpen Then rs.Close
If rs_BAE.State = adStateOpen Then rs_BAE.Close
If rs_Tipo_Bae.State = adStateOpen Then rs_Tipo_Bae.Close

Set rs = Nothing
Set rs_BAE = Nothing
Set rs_Tipo_Bae = Nothing
End Sub


Public Sub Generar_Sanciones_old2(ByVal Fecha_Inicio_Periodo As Date, ByVal Fecha_Fin_Periodo As Date, ByVal Anual As Boolean, ByVal Hs_Jornada_Diaria As Double, ByVal Hs_Jornada_Mensual As Double)
' ---------------------------------------------------------------------------------------------
' Descripcion: Procedimiento para generar las sanciones del tercero.
' Autor      : FGZ
' Fecha      : 05/05/2005
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Penalidad As Double
Dim Tiene_Sancion As Boolean
Dim Sancion_Porcentaje As Double
Dim Meses_No_Trab As Integer
Dim Meses_Trabajados As Integer

Dim Aux_fecha As Date
Dim Fecha_Bae As Date
Dim Meses As Integer
Dim anios As Integer

Dim Sanciones As TSanciones
Dim Porcentaje As Double
Dim Bonificacion_Basica As Double
Dim Bonificacion_Basica1 As Double
Dim Bonificacion_Adicional As Double
Dim Total357 As Double
Dim CuotaBae As Double

Dim Convenio As String
Dim NroConvenio As Long
Dim Valor_Acumulador As Double
Dim Nro_Acumulador As Long
Dim Actualizo_OLD As Boolean

Dim rs As New ADODB.Recordset
Dim rs_Estructura As New ADODB.Recordset
Dim rs_Fases As New ADODB.Recordset
Dim rs_Confrep As New ADODB.Recordset
Dim rs_Empleado As New ADODB.Recordset
Dim rs_BAE As New ADODB.Recordset
Dim rs_Acu As New ADODB.Recordset

    'el acumulador se busca por confrep
    StrSql = "SELECT * FROM confrep "
    StrSql = StrSql & " WHERE repnro = 131 "
    StrSql = StrSql & " AND confnrocol = 3 "
    OpenRecordset StrSql, rs_Confrep
    If rs_Confrep.EOF Then
        Flog.writeline Espacios(Tabulador * 1) & "No esta configurado el Acumulador del reporte 131"
        Exit Sub
    Else
        'Valor_Acumulador = rs_Confrep!confval
        Nro_Acumulador = rs_Confrep!confval
        
        If objCache_Acu_Liq_Monto.EsSimboloDefinido(CStr(Nro_Acumulador)) Then
            Valor_Acumulador = objCache_Acu_Liq_Monto.Valor(CStr(Nro_Acumulador))
        Else
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "No encontró el acumulador " & Nro_Acumulador & " en la liq actual."
            End If
            Valor_Acumulador = 0
        End If
    End If
    
    StrSql = "SELECT * FROM ee_parte_bae"
    StrSql = StrSql & " WHERE ternro = " & buliq_empleado!ternro
    'StrSql = StrSql & " AND pronro = " & buliq_proceso!pronro
    StrSql = StrSql & " AND aaaamm70 <= " & ConvFecha(Fecha_Fin_Periodo)
    StrSql = StrSql & " ORDER BY aaaamm70, codigo_bae "
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs
    Penalidad = 0
    Tiene_Sancion = False
    Sancion_Porcentaje = 0
    Meses_No_Trab = 0
    Meses_Trabajados = 0
    
    'si no tiene nada igual se debe generar
    If rs.EOF Then
        'Busco la primer fase que tenga marca de sueldo, la mas vieja
        StrSql = "SELECT * FROM fases WHERE empleado = " & buliq_empleado!ternro
        StrSql = StrSql & " AND sueldo = -1"
        StrSql = StrSql & " ORDER BY altfec,bajfec"
        OpenRecordset StrSql, rs_Fases
        If Not rs_Fases.EOF Then
            rs_Fases.MoveFirst
            Fecha_Bae = rs_Fases!altfec
            If Not EsNulo(rs_Fases!bajfec) Then
                If rs_Fases!bajfec < Fecha_Fin_Periodo Then
                    Meses_No_Trab = 12 - Month(rs_Fases!bajfec)
                    If Month(rs_Fases!bajfec) = Month(Fecha_Fin_Periodo) Then
                        If rs_Fases!bajfec < Fecha_Fin_Periodo Then
                            Meses_No_Trab = Meses_No_Trab + 1
                        End If
                    End If
                End If
            End If
        End If
        
        'Calculo la antiguedad
        anios = Year(rs!aaaamm70) - Year(Fecha_Bae)
        If anios <> 0 Then
            Meses_Trabajados = 12
        Else
            Aux_fecha = Primer_Dia_Habil(buliq_empleado!ternro, Month(rs!aaaamm70), Year(rs!aaaamm70))
            If Fecha_Bae > Aux_fecha Then
                'Meses = 12 - Month(Fecha_Bae)
                Meses = Month(Fecha_Bae)
            Else
                'Meses = 12 - Month(Fecha_Bae) + 1
                Meses = Month(Fecha_Bae) + 1
            End If
            Meses_Trabajados = Meses
        End If
        
        Meses_Trabajados = Meses_Trabajados - Meses_No_Trab
        
        If anios < 5 Then
            Porcentaje = 100
            Bonificacion_Basica = Valor_Acumulador
        Else
            If anios >= 10 Then
                Porcentaje = 160
                Bonificacion_Basica = 1.6 * Valor_Acumulador
            Else
                Porcentaje = 130
                Bonificacion_Basica = 1.3 * Valor_Acumulador
            End If
        End If
        
        Bonificacion_Basica = Bonificacion_Basica * Meses_Trabajados / 12
        Bonificacion_Basica1 = Bonificacion_Basica - (Bonificacion_Basica * Penalidad / 100)
        
        If Bonificacion_Basica1 < 0 Then
            Bonificacion_Basica1 = 0
        End If
        
        'Busco el convenio del empleado
        StrSql = " SELECT * FROM his_estructura "
        StrSql = StrSql & " INNER JOIN estructura ON his_estructura.estrnro = estructura.estrnro "
        StrSql = StrSql & " WHERE ternro = " & buliq_empleado!ternro
        StrSql = StrSql & " AND his_estructura.tenro = 19 "
        StrSql = StrSql & " AND (htetdesde <= " & ConvFecha(Fecha_Fin_Periodo) & ")"
        StrSql = StrSql & " AND ((" & ConvFecha(Fecha_Fin_Periodo) & " <= htethasta) or (htethasta is null))"
        If rs_Estructura.State = adStateOpen Then rs_Estructura.Close
        OpenRecordset StrSql, rs_Estructura
        If Not rs_Estructura.EOF Then
            rs_Estructura.MoveLast
            NroConvenio = rs_Estructura!estrnro
            Convenio = IIf(Not EsNulo(rs_Estructura!estrcodext), rs_Estructura!estrcodext, "")
        Else
            Flog.writeline Espacios(Tabulador * 2) & "No se encontro el convenio"
            Convenio = ""
        End If
                
        If Convenio = "APSS" And Year(Fecha_Bae) >= 1999 Then
            Bonificacion_Basica1 = 0
        End If
        Total357 = Bonificacion_Basica1
        
        If anios = 0 Then
            Bonificacion_Adicional = Bonificacion_Basica1 * 20 / 100
        Else
            If anios < 5 Then
                Bonificacion_Adicional = Bonificacion_Basica1 * anios * 20 / 100
            Else
                Bonificacion_Adicional = Bonificacion_Basica1
            End If
        End If
        
        'Actualiza
        

        Actualizo_OLD = True
        'Busco las sanciones del empleado
        StrSql = "SELECT empleg, sanciones,sancionesold,sancionpronro FROM empleado "
        StrSql = StrSql & " WHERE ternro = " & buliq_empleado!ternro
        If rs_Empleado.State = adStateOpen Then rs_Empleado.Close
        OpenRecordset StrSql, rs_Empleado
        If Not rs_Empleado.EOF Then
            If rs_Empleado!Sancionpronro = buliq_proceso!pronro Then
                Sanciones.X = Left(rs_Empleado!Sancionesold, 1)
                Sanciones.Y = Mid(rs_Empleado!Sancionesold, 2, 1)
                Sanciones.Z = Right(rs_Empleado!Sancionesold, 1)
                
                'Restauro la sancion
                StrSql = "UPDATE empleado SET "
                StrSql = StrSql & " sanciones = '" & rs_Empleado!Sancionesold & "'"
                StrSql = StrSql & " ,sancionpronro = 0"
                StrSql = StrSql & " WHERE ternro =" & buliq_empleado!ternro
                objConn.Execute StrSql, , adExecuteNoRecords
                Actualizo_OLD = False
            Else
                Sanciones.X = Left(rs_Empleado!Sanciones, 1)
                Sanciones.Y = Mid(rs_Empleado!Sanciones, 2, 1)
                Sanciones.Z = Right(rs_Empleado!Sanciones, 1)
            End If
        Else
            Sanciones.X = "0"
            Sanciones.Y = "0"
            Sanciones.Z = "0"
        End If
        
        If Sanciones.X = "2" Then
            Bonificacion_Adicional = Bonificacion_Adicional * 0.75
        End If
        If Sanciones.Y = "2" Then
            Bonificacion_Adicional = Bonificacion_Adicional * 0.5
        End If
        
        If Tiene_Sancion Then
            Bonificacion_Adicional = 0
            If Sancion_Porcentaje > 20 Then
                Sanciones.Z = "2"
            Else
                Sanciones.Z = "1"
            End If
                        
            'Actualizo las sanciones del empleado
            If Actualizo_OLD Then
                StrSql = "UPDATE empleado SET "
                StrSql = StrSql & " sancionesold = '" & rs_Empleado!Sanciones & "'"
                If Not EsNulo(rs_Empleado!Sancionpronro) Then
                    StrSql = StrSql & " ,sancionpronro = " & rs_Empleado!Sancionpronro
                Else
                    StrSql = StrSql & " ,sancionpronro = 0"
                End If
                StrSql = StrSql & " WHERE ternro =" & buliq_empleado!ternro
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
            
            StrSql = "UPDATE empleado SET "
            StrSql = StrSql & " sancionpronro = " & buliq_proceso!pronro
            StrSql = StrSql & " ,sanciones = '" & Sanciones.X & Sanciones.Y & Sanciones.Z & "'"
            StrSql = StrSql & " WHERE ternro =" & buliq_empleado!ternro
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
        If Anual Then
            'hago el corrimiento
            StrSql = "UPDATE empleado SET "
            StrSql = StrSql & " sancionpronro = " & buliq_proceso!pronro
            StrSql = StrSql & " ,sanciones = '" & Sanciones.Y & Sanciones.Z & "0'"
            StrSql = StrSql & " WHERE ternro =" & buliq_empleado!ternro
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
            
        CuotaBae = (((Bonificacion_Basica1 + Bonificacion_Adicional) * 2) / 3) / 9
        
        StrSql = "SELECT * FROM ee_bae "
        StrSql = StrSql & " WHERE ternro = " & buliq_empleado!ternro
        StrSql = StrSql & " AND pronro = " & buliq_proceso!pronro
        StrSql = StrSql & " AND aaaamm70 = " & ConvFecha(Fecha_Inicio_Periodo)
        If rs_BAE.State = adStateOpen Then rs_BAE.Close
        OpenRecordset StrSql, rs_BAE
        If rs_BAE.EOF Then
            StrSql = "INSERT INTO ee_bae (ternro,legajo70,aaaamm70, "
            StrSql = StrSql & " jormen70,jordia70,cantidad70,usrmod70,fecmod70,hormod70"
            StrSql = StrSql & " ,penali70,baecuota,bonbasica,bonadicional,pronro"
            StrSql = StrSql & ") VALUES ( "
            StrSql = StrSql & buliq_empleado!ternro
            StrSql = StrSql & "," & Legajo
            StrSql = StrSql & "," & ConvFecha(Fecha_Inicio_Periodo)
            StrSql = StrSql & "," & Hs_Jornada_Mensual
            StrSql = StrSql & "," & Hs_Jornada_Diaria
            StrSql = StrSql & "," & rs!Cantidad70
            StrSql = StrSql & ",' '"
            StrSql = StrSql & "," & ConvFecha(Date)
            StrSql = StrSql & ",'" & Format(C_Date(Now), "hh:mm:ss") & "'"
            StrSql = StrSql & " ," & Penalidad
            StrSql = StrSql & " ," & CuotaBae
            StrSql = StrSql & " ," & Bonificacion_Basica1
            StrSql = StrSql & " ," & Bonificacion_Adicional
            StrSql = StrSql & " ," & buliq_proceso!pronro
            StrSql = StrSql & " )"
        Else
            'Actualizo ee_bae
            StrSql = "UPDATE ee_bae SET "
            StrSql = StrSql & " baecuota = " & CuotaBae
            StrSql = StrSql & " ,cantidad70 = cantidad70 + " & rs!Cantidad70
            StrSql = StrSql & " ,penali70 = " & Penalidad
            StrSql = StrSql & " ,bonbasica = " & Bonificacion_Basica1
            StrSql = StrSql & " ,bonadicional = " & Bonificacion_Adicional
            StrSql = StrSql & " ,fecmod70 = " & ConvFecha(Date)
            StrSql = StrSql & " ,hormod70 = '" & Format(C_Date(Now), "hh:mm:ss") & "'"
            StrSql = StrSql & " WHERE baenro = " & rs_BAE!baenro
        End If
        objConn.Execute StrSql, , adExecuteNoRecords
    End If
    
    Do While Not rs.EOF
        If Not EsNulo(rs!codigo_bae) Then
            If rs!codigo_bae <> "01" Then
                Penalidad = Penalidad + IIf(Not EsNulo(rs!penali70), rs!penali70, 0)
                If CInt(rs!codigo_bae) > 10 Then
                    Tiene_Sancion = True
                    Sancion_Porcentaje = Penalidad
                End If
            Else
                Meses_No_Trab = Meses_No_Trab + 1
                Tiene_Sancion = True
            End If
        End If


        'Busco la primer fase que tenga marca de sueldo, la mas vieja
        StrSql = "SELECT * FROM fases WHERE empleado = " & buliq_empleado!ternro
        StrSql = StrSql & " AND sueldo = -1"
        StrSql = StrSql & " ORDER BY altfec,bajfec"
        OpenRecordset StrSql, rs_Fases
        If Not rs_Fases.EOF Then
            rs_Fases.MoveFirst
            Fecha_Bae = rs_Fases!altfec
            If Not EsNulo(rs_Fases!bajfec) Then
                If rs_Fases!bajfec < Fecha_Fin_Periodo Then
                    Meses_No_Trab = 12 - Month(rs_Fases!bajfec)
                    If Month(rs_Fases!bajfec) = Month(Fecha_Fin_Periodo) Then
                        If rs_Fases!bajfec < Fecha_Fin_Periodo Then
                            Meses_No_Trab = Meses_No_Trab + 1
                        End If
                    End If
                End If
            End If
        End If
        
        'Calculo la antiguedad
        anios = Year(rs!aaaamm70) - Year(Fecha_Bae)
        If anios <> 0 Then
            Meses_Trabajados = 12
        Else
            Aux_fecha = Primer_Dia_Habil(buliq_empleado!ternro, Month(rs!aaaamm70), Year(rs!aaaamm70))
            If Fecha_Bae > Aux_fecha Then
                'Meses = 12 - Month(Fecha_Bae)
                Meses = Month(Fecha_Bae)
            Else
                'Meses = 12 - Month(Fecha_Bae) + 1
                Meses = Month(Fecha_Bae) + 1
            End If
            Meses_Trabajados = Meses
        End If
        
        Meses_Trabajados = Meses_Trabajados - Meses_No_Trab
        
        If anios < 5 Then
            Porcentaje = 100
            Bonificacion_Basica = Valor_Acumulador
        Else
            If anios >= 10 Then
                Porcentaje = 160
                Bonificacion_Basica = 1.6 * Valor_Acumulador
            Else
                Porcentaje = 130
                Bonificacion_Basica = 1.3 * Valor_Acumulador
            End If
        End If
        
        Bonificacion_Basica = Bonificacion_Basica * Meses_Trabajados / 12
        Bonificacion_Basica1 = Bonificacion_Basica - (Bonificacion_Basica * Penalidad / 100)
        
        If Bonificacion_Basica1 < 0 Then
            Bonificacion_Basica1 = 0
        End If
        
        'Busco el convenio del empleado
        StrSql = " SELECT * FROM his_estructura "
        StrSql = StrSql & " INNER JOIN estructura ON his_estructura.estrnro = estructura.estrnro "
        StrSql = StrSql & " WHERE ternro = " & buliq_empleado!ternro
        StrSql = StrSql & " AND his_estructura.tenro = 19 "
        StrSql = StrSql & " AND (htetdesde <= " & ConvFecha(Fecha_Fin_Periodo) & ")"
        StrSql = StrSql & " AND ((" & ConvFecha(Fecha_Fin_Periodo) & " <= htethasta) or (htethasta is null))"
        If rs_Estructura.State = adStateOpen Then rs_Estructura.Close
        OpenRecordset StrSql, rs_Estructura
        If Not rs_Estructura.EOF Then
            rs_Estructura.MoveLast
            NroConvenio = rs_Estructura!estrnro
            Convenio = IIf(Not EsNulo(rs_Estructura!estrcodext), rs_Estructura!estrcodext, "")
        Else
            Flog.writeline Espacios(Tabulador * 2) & "No se encontro el convenio"
            Convenio = ""
        End If
                
        If Convenio = "APSS" And Year(Fecha_Bae) >= 1999 Then
            Bonificacion_Basica1 = 0
        End If
        Total357 = Bonificacion_Basica1
        
        If anios = 0 Then
            Bonificacion_Adicional = Bonificacion_Basica1 * 20 / 100
        Else
            If anios < 5 Then
                Bonificacion_Adicional = Bonificacion_Basica1 * anios * 20 / 100
            Else
                Bonificacion_Adicional = Bonificacion_Basica1
            End If
        End If
        
        'Actualiza
        

        Actualizo_OLD = True
        'Busco las sanciones del empleado
        StrSql = "SELECT empleg, sanciones,sancionesold,sancionpronro FROM empleado "
        StrSql = StrSql & " WHERE ternro = " & buliq_empleado!ternro
        If rs_Empleado.State = adStateOpen Then rs_Empleado.Close
        OpenRecordset StrSql, rs_Empleado
        If Not rs_Empleado.EOF Then
            If rs_Empleado!Sancionpronro = buliq_proceso!pronro Then
                Sanciones.X = Left(rs_Empleado!Sancionesold, 1)
                Sanciones.Y = Mid(rs_Empleado!Sancionesold, 2, 1)
                Sanciones.Z = Right(rs_Empleado!Sancionesold, 1)
                
                'Restauro la sancion
                StrSql = "UPDATE empleado SET "
                StrSql = StrSql & " sanciones = '" & rs_Empleado!Sancionesold & "'"
                StrSql = StrSql & " ,sancionpronro = 0"
                StrSql = StrSql & " WHERE ternro =" & buliq_empleado!ternro
                objConn.Execute StrSql, , adExecuteNoRecords
                Actualizo_OLD = False
            Else
                Sanciones.X = Left(rs_Empleado!Sanciones, 1)
                Sanciones.Y = Mid(rs_Empleado!Sanciones, 2, 1)
                Sanciones.Z = Right(rs_Empleado!Sanciones, 1)
            End If
        Else
            Sanciones.X = "0"
            Sanciones.Y = "0"
            Sanciones.Z = "0"
        End If
        
        If Sanciones.X = "2" Then
            Bonificacion_Adicional = Bonificacion_Adicional * 0.75
        End If
        If Sanciones.Y = "2" Then
            Bonificacion_Adicional = Bonificacion_Adicional * 0.5
        End If
        
        If Tiene_Sancion Then
            Bonificacion_Adicional = 0
            If Sancion_Porcentaje > 20 Then
                Sanciones.Z = "2"
            Else
                Sanciones.Z = "1"
            End If
                        
            'Actualizo las sanciones del empleado
            If Actualizo_OLD Then
                StrSql = "UPDATE empleado SET "
                StrSql = StrSql & " sancionesold = '" & rs_Empleado!Sanciones & "'"
                If Not EsNulo(rs_Empleado!Sancionpronro) Then
                    StrSql = StrSql & " ,sancionpronro = " & rs_Empleado!Sancionpronro
                Else
                    StrSql = StrSql & " ,sancionpronro = 0"
                End If
                StrSql = StrSql & " WHERE ternro =" & buliq_empleado!ternro
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
            
            StrSql = "UPDATE empleado SET "
            StrSql = StrSql & " sancionpronro = " & buliq_proceso!pronro
            StrSql = StrSql & " ,sanciones = '" & Sanciones.X & Sanciones.Y & Sanciones.Z & "'"
            StrSql = StrSql & " WHERE ternro =" & buliq_empleado!ternro
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
        If Anual Then
            'hago el corrimiento
            StrSql = "UPDATE empleado SET "
            StrSql = StrSql & " sancionpronro = " & buliq_proceso!pronro
            StrSql = StrSql & " ,sanciones = '" & Sanciones.Y & Sanciones.Z & "0'"
            StrSql = StrSql & " WHERE ternro =" & buliq_empleado!ternro
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
            
        CuotaBae = (((Bonificacion_Basica1 + Bonificacion_Adicional) * 2) / 3) / 9
        
        StrSql = "SELECT * FROM ee_bae "
        StrSql = StrSql & " WHERE ternro = " & buliq_empleado!ternro
        StrSql = StrSql & " AND pronro = " & buliq_proceso!pronro
        StrSql = StrSql & " AND aaaamm70 = " & ConvFecha(Fecha_Inicio_Periodo)
        If rs_BAE.State = adStateOpen Then rs_BAE.Close
        OpenRecordset StrSql, rs_BAE
        If rs_BAE.EOF Then
            StrSql = "INSERT INTO ee_bae (ternro,legajo70,aaaamm70, "
            StrSql = StrSql & " jormen70,jordia70,cantidad70,usrmod70,fecmod70,hormod70"
            StrSql = StrSql & " ,penali70,baecuota,bonbasica,bonadicional,pronro"
            StrSql = StrSql & ") VALUES ( "
            StrSql = StrSql & buliq_empleado!ternro
            StrSql = StrSql & "," & Legajo
            StrSql = StrSql & "," & ConvFecha(Fecha_Inicio_Periodo)
            StrSql = StrSql & "," & Hs_Jornada_Mensual
            StrSql = StrSql & "," & Hs_Jornada_Diaria
            StrSql = StrSql & "," & rs!Cantidad70
            StrSql = StrSql & ",' '"
            StrSql = StrSql & "," & ConvFecha(Date)
            StrSql = StrSql & ",'" & Format(C_Date(Now), "hh:mm:ss") & "'"
            StrSql = StrSql & " ," & Penalidad
            StrSql = StrSql & " ," & CuotaBae
            StrSql = StrSql & " ," & Bonificacion_Basica1
            StrSql = StrSql & " ," & Bonificacion_Adicional
            StrSql = StrSql & " ," & buliq_proceso!pronro
            StrSql = StrSql & " )"
        Else
            'Actualizo ee_bae
            StrSql = "UPDATE ee_bae SET "
            StrSql = StrSql & " baecuota = " & CuotaBae
            StrSql = StrSql & " ,cantidad70 = cantidad70 + " & rs!Cantidad70
            StrSql = StrSql & " ,penali70 = " & Penalidad
            StrSql = StrSql & " ,bonbasica = " & Bonificacion_Basica1
            StrSql = StrSql & " ,bonadicional = " & Bonificacion_Adicional
            StrSql = StrSql & " ,fecmod70 = " & ConvFecha(Date)
            StrSql = StrSql & " ,hormod70 = '" & Format(C_Date(Now), "hh:mm:ss") & "'"
            StrSql = StrSql & " WHERE baenro = " & rs_BAE!baenro
        End If
        objConn.Execute StrSql, , adExecuteNoRecords
        
        rs.MoveNext
    Loop

'cierro todo y libero
If rs.State = adStateOpen Then rs.Close
If rs_Estructura.State = adStateOpen Then rs_Estructura.Close
If rs_Fases.State = adStateOpen Then rs_Fases.Close
If rs_Confrep.State = adStateOpen Then rs_Confrep.Close
If rs_Empleado.State = adStateOpen Then rs_Empleado.Close
If rs_BAE.State = adStateOpen Then rs_BAE.Close
If rs_Acu.State = adStateOpen Then rs_Acu.Close

Set rs = Nothing
Set rs_Estructura = Nothing
Set rs_Fases = Nothing
Set rs_Confrep = Nothing
Set rs_Empleado = Nothing
Set rs_BAE = Nothing
Set rs_Acu = Nothing
End Sub

Public Sub Generar_Sanciones_old(ByVal Fecha_Inicio_Periodo As Date, ByVal Fecha_Fin_Periodo As Date, ByVal Anual As Boolean, ByVal Hs_Jornada_Diaria As Double, ByVal Hs_Jornada_Mensual As Double)
' ---------------------------------------------------------------------------------------------
' Descripcion: Procedimiento para generar las sanciones del tercero.
' Autor      : FGZ
' Fecha      : 05/05/2005
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Penalidad As Double
Dim Tiene_Sancion As Boolean
Dim Sancion_Porcentaje As Double
Dim Meses_No_Trab As Integer
Dim Meses_Trabajados As Integer

Dim Aux_fecha As Date
Dim Fecha_Bae As Date
Dim Meses As Integer
Dim anios As Integer

Dim Sanciones As TSanciones
Dim Porcentaje As Double
Dim Bonificacion_Basica As Double
Dim Bonificacion_Basica1 As Double
Dim Bonificacion_Adicional As Double
Dim Total357 As Double
Dim CuotaBae As Double

Dim Convenio As String
Dim NroConvenio As Long
Dim Valor_Acumulador As Double
Dim Nro_Acumulador As Long
Dim Actualizo_OLD As Boolean

Dim rs As New ADODB.Recordset
Dim rs_Estructura As New ADODB.Recordset
Dim rs_Fases As New ADODB.Recordset
Dim rs_Confrep As New ADODB.Recordset
Dim rs_Empleado As New ADODB.Recordset
Dim rs_BAE As New ADODB.Recordset
Dim rs_Acu As New ADODB.Recordset

    'el acumulador se busca por confrep
    StrSql = "SELECT * FROM confrep "
    StrSql = StrSql & " WHERE repnro = 131 "
    StrSql = StrSql & " AND confnrocol = 3 "
    OpenRecordset StrSql, rs_Confrep
    If rs_Confrep.EOF Then
        Flog.writeline Espacios(Tabulador * 1) & "No esta configurado el Acumulador del reporte 131"
        Exit Sub
    Else
        'Valor_Acumulador = rs_Confrep!confval
        Nro_Acumulador = rs_Confrep!confval
        
        If objCache_Acu_Liq_Monto.EsSimboloDefinido(CStr(Nro_Acumulador)) Then
            Valor_Acumulador = objCache_Acu_Liq_Monto.Valor(CStr(Nro_Acumulador))
        Else
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "No encontró el acumulador " & Nro_Acumulador & " en la liq actual."
            End If
            Valor_Acumulador = 0
        End If
    End If
    
    StrSql = "SELECT * FROM WF_BAE"
    StrSql = StrSql & " WHERE ternro = " & buliq_empleado!ternro
    'StrSql = StrSql & " AND pronro = " & buliq_proceso!pronro
    StrSql = StrSql & " AND anio = " & Year(Fecha_Inicio_Periodo)
    StrSql = StrSql & " ORDER BY mes, codigo_bae "
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs
    Penalidad = 0
    Tiene_Sancion = False
    Sancion_Porcentaje = 0
    Meses_No_Trab = 0
    Meses_Trabajados = 0
    Do While Not rs.EOF
        If rs!codigo_bae <> "1" Then
            Penalidad = Penalidad + IIf(Not EsNulo(rs!penal), rs!penal, 0)
            If CInt(rs!codigo_bae) > 10 Then
                Tiene_Sancion = True
                Sancion_Porcentaje = Penalidad
            End If
        Else
            Meses_No_Trab = Meses_No_Trab + 1
            Tiene_Sancion = True
        End If

        'Busco la primer fase que tenga marca de sueldo, la mas vieja
        StrSql = "SELECT * FROM fases WHERE empleado = " & buliq_empleado!ternro
        StrSql = StrSql & " AND sueldo = -1"
        StrSql = StrSql & " ORDER BY altfec,bajfec"
        OpenRecordset StrSql, rs_Fases
        If Not rs_Fases.EOF Then
            rs_Fases.MoveFirst
            Fecha_Bae = rs_Fases!altfec
            If Not EsNulo(rs_Fases!bajfec) Then
                If rs_Fases!bajfec < Fecha_Fin_Periodo Then
                    Meses_No_Trab = 12 - Month(rs_Fases!bajfec)
                    If Month(rs_Fases!bajfec) = Month(Fecha_Fin_Periodo) Then
                        If rs_Fases!bajfec < Fecha_Fin_Periodo Then
                            Meses_No_Trab = Meses_No_Trab + 1
                        End If
                    End If
                End If
            End If
        End If
        
        'Calculo la antiguedad
        anios = rs!Anio - Year(Fecha_Bae)
        If anios <> 0 Then
            Meses_Trabajados = 12
        Else
            Aux_fecha = Primer_Dia_Habil(buliq_empleado!ternro, rs!mes, rs!Anio)
            If Fecha_Bae > Aux_fecha Then
                'Meses = 12 - Month(Fecha_Bae)
                Meses = Month(Fecha_Bae)
            Else
                'Meses = 12 - Month(Fecha_Bae) + 1
                Meses = Month(Fecha_Bae) + 1
            End If
            Meses_Trabajados = Meses
        End If
        
        Meses_Trabajados = Meses_Trabajados - Meses_No_Trab
        
        If anios < 5 Then
            Porcentaje = 100
            Bonificacion_Basica = Valor_Acumulador
        Else
            If anios >= 10 Then
                Porcentaje = 160
                Bonificacion_Basica = 1.6 * Valor_Acumulador
            Else
                Porcentaje = 130
                Bonificacion_Basica = 1.3 * Valor_Acumulador
            End If
        End If
        
        Bonificacion_Basica = Bonificacion_Basica * Meses_Trabajados / 12
        Bonificacion_Basica1 = Bonificacion_Basica - (Bonificacion_Basica * Penalidad / 100)
        
        If Bonificacion_Basica1 < 0 Then
            Bonificacion_Basica1 = 0
        End If
        
        'Busco el convenio del empleado
        StrSql = " SELECT * FROM his_estructura "
        StrSql = StrSql & " INNER JOIN estructura ON his_estructura.estrnro = estructura.estrnro "
        StrSql = StrSql & " WHERE ternro = " & buliq_empleado!ternro
        StrSql = StrSql & " AND his_estructura.tenro = 19 "
        StrSql = StrSql & " AND (htetdesde <= " & ConvFecha(Fecha_Fin_Periodo) & ")"
        StrSql = StrSql & " AND ((" & ConvFecha(Fecha_Fin_Periodo) & " <= htethasta) or (htethasta is null))"
        If rs_Estructura.State = adStateOpen Then rs_Estructura.Close
        OpenRecordset StrSql, rs_Estructura
        If Not rs_Estructura.EOF Then
            rs_Estructura.MoveLast
            NroConvenio = rs_Estructura!estrnro
            Convenio = IIf(Not EsNulo(rs_Estructura!estrcodext), rs_Estructura!estrcodext, "")
        Else
            Flog.writeline Espacios(Tabulador * 2) & "No se encontro el convenio"
            Convenio = ""
        End If
                
        If Convenio = "APSS" And Year(Fecha_Bae) >= 1999 Then
            Bonificacion_Basica1 = 0
        End If
        Total357 = Bonificacion_Basica1
        
        If anios = 0 Then
            Bonificacion_Adicional = Bonificacion_Basica1 * 20 / 100
        Else
            If anios < 5 Then
                Bonificacion_Adicional = Bonificacion_Basica1 * anios * 20 / 100
            Else
                Bonificacion_Adicional = Bonificacion_Basica1
            End If
        End If
        
        'Actualiza
        

        Actualizo_OLD = True
        'Busco las sanciones del empleado
        StrSql = "SELECT empleg, sanciones,sancionesold,sancionpronro FROM empleado "
        StrSql = StrSql & " AND ternro = " & buliq_empleado!ternro
        If rs_Empleado.State = adStateOpen Then rs_Empleado.Close
        OpenRecordset StrSql, rs_Empleado
        If Not rs_Empleado.EOF Then
            If rs_Empleado!Sancionpronro = buliq_proceso!pronro Then
                Sanciones.X = Left(rs_Empleado!Sancionesold, 1)
                Sanciones.Y = Mid(rs_Empleado!Sancionesold, 2, 1)
                Sanciones.Z = Right(rs_Empleado!Sancionesold, 1)
                
                'Restauro la sancion
                StrSql = "UPDATE empleado SET "
                StrSql = StrSql & " sanciones = '" & rs_Empleado!Sancionesold & "'"
                StrSql = StrSql & " ,sancionpronro = 0"
                StrSql = StrSql & " WHERE ternro =" & buliq_empleado!ternro
                objConn.Execute StrSql, , adExecuteNoRecords
                Actualizo_OLD = False
            Else
                Sanciones.X = Left(rs_Empleado!Sanciones, 1)
                Sanciones.Y = Mid(rs_Empleado!Sanciones, 2, 1)
                Sanciones.Z = Right(rs_Empleado!Sanciones, 1)
            End If
        Else
            Sanciones.X = "0"
            Sanciones.Y = "0"
            Sanciones.Z = "0"
        End If
        
        If Sanciones.X = "2" Then
            Bonificacion_Adicional = Bonificacion_Adicional * 0.75
        End If
        If Sanciones.Y = "2" Then
            Bonificacion_Adicional = Bonificacion_Adicional * 0.5
        End If
        
        If Tiene_Sancion Then
            Bonificacion_Adicional = 0
            If Sancion_Porcentaje > 20 Then
                Sanciones.Z = "2"
            Else
                Sanciones.Z = "1"
            End If
                        
            'Actualizo las sanciones del empleado
            If Actualizo_OLD Then
                StrSql = "UPDATE empleado SET "
                StrSql = StrSql & " sancionesold = '" & rs_Empleado!Sanciones & "'"
                If Not EsNulo(rs_Empleado!Sancionpronro) Then
                    StrSql = StrSql & " ,sancionpronro = " & rs_Empleado!Sancionpronro
                Else
                    StrSql = StrSql & " ,sancionpronro = 0"
                End If
                StrSql = StrSql & " WHERE ternro =" & buliq_empleado!ternro
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
            
            StrSql = "UPDATE empleado SET "
            StrSql = StrSql & " sancionpronro = " & buliq_proceso!pronro
            StrSql = StrSql & " ,sanciones = '" & Sanciones.X & Sanciones.Y & Sanciones.Z & "'"
            StrSql = StrSql & " WHERE ternro =" & buliq_empleado!ternro
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
        If Anual Then
            'hago el corrimiento
            StrSql = "UPDATE empleado SET "
            StrSql = StrSql & " sancionpronro = " & buliq_proceso!pronro
            StrSql = StrSql & " ,sanciones = '" & Sanciones.Y & Sanciones.Z & "0'"
            StrSql = StrSql & " WHERE ternro =" & buliq_empleado!ternro
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
            
        CuotaBae = (((Bonificacion_Basica1 + Bonificacion_Adicional) * 2) / 3) / 9
        
        StrSql = "SELECT * FROM ee_bae "
        StrSql = StrSql & " WHERE ternro = " & buliq_empleado!ternro
        StrSql = StrSql & " AND pronro = " & buliq_proceso!pronro
        StrSql = StrSql & " AND aaaamm70 = " & ConvFecha(Fecha_Inicio_Periodo)
        If rs_BAE.State = adStateOpen Then rs_BAE.Close
        OpenRecordset StrSql, rs_BAE
        If rs_BAE.EOF Then
            StrSql = "INSERT INTO ee_bae (ternro,legajo70,aaaamm70, "
            StrSql = StrSql & " jormen70,jordia70,cantidad70,usrmod70,fecmod70,hormod70"
            StrSql = StrSql & " ,penali70,baecuota,bonbasica,bonadicional,pronro"
            StrSql = StrSql & ") VALUES ( "
            StrSql = StrSql & buliq_empleado!ternro
            StrSql = StrSql & "," & Legajo
            StrSql = StrSql & "," & ConvFecha(Fecha_Inicio_Periodo)
            StrSql = StrSql & "," & Hs_Jornada_Mensual
            StrSql = StrSql & "," & Hs_Jornada_Diaria
            StrSql = StrSql & "," & rs!Cantidad
            StrSql = StrSql & ",' '"
            StrSql = StrSql & "," & ConvFecha(Date)
            StrSql = StrSql & ",'" & Format(C_Date(Now), "hh:mm:ss") & "'"
            StrSql = StrSql & " ," & Penalidad
            StrSql = StrSql & " ," & CuotaBae
            StrSql = StrSql & " ," & Bonificacion_Basica1
            StrSql = StrSql & " ," & Bonificacion_Adicional
            StrSql = StrSql & " ," & buliq_proceso!pronro
            StrSql = StrSql & " )"
        Else
            'Actualizo ee_bae
            StrSql = "UPDATE ee_bae SET "
            StrSql = StrSql & " baecuota = " & CuotaBae
            StrSql = StrSql & " ,cantidad70 = cantidad70 + " & rs!Cantidad
            StrSql = StrSql & " ,penali70 = " & Penalidad
            StrSql = StrSql & " ,bonbasica = " & Bonificacion_Basica1
            StrSql = StrSql & " ,bonadicional = " & Bonificacion_Adicional
            StrSql = StrSql & " ,fecmod70 = " & ConvFecha(Date)
            StrSql = StrSql & " ,hormod70 = '" & Format(C_Date(Now), "hh:mm:ss") & "'"
            StrSql = StrSql & " WHERE baenro = " & rs_BAE!baenro
        End If
        objConn.Execute StrSql, , adExecuteNoRecords
        
        rs.MoveNext
    Loop

'cierro todo y libero
If rs.State = adStateOpen Then rs.Close
If rs_Estructura.State = adStateOpen Then rs_Estructura.Close
If rs_Fases.State = adStateOpen Then rs_Fases.Close
If rs_Confrep.State = adStateOpen Then rs_Confrep.Close
If rs_Empleado.State = adStateOpen Then rs_Empleado.Close
If rs_BAE.State = adStateOpen Then rs_BAE.Close
If rs_Acu.State = adStateOpen Then rs_Acu.Close

Set rs = Nothing
Set rs_Estructura = Nothing
Set rs_Fases = Nothing
Set rs_Confrep = Nothing
Set rs_Empleado = Nothing
Set rs_BAE = Nothing
Set rs_Acu = Nothing
End Sub


Public Function Primer_Dia_Habil(ByVal Tercero As Long, ByVal mes As Integer, ByVal Anio As Integer) As Date
' ---------------------------------------------------------------------------------------------
' Descripcion: Funcion que retorna el primer dia habil de un mes.
' Autor      : FGZ
' Fecha      : 06/05/2005
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim objFeriado As New Feriado

Dim Fecha As Date
Dim Eshabil As Boolean

    Set objFeriado.Conexion = objConn
    Fecha = C_Date("01/" & mes & "/" & Anio)
    Eshabil = False
    
    Do While Not Eshabil
        If Weekday(Fecha) = vbSaturday Or Weekday(Fecha) = vbSunday Then
            Fecha = Fecha + 1
        Else
            If objFeriado.Feriado(Fecha, Tercero, False) Then
                Fecha = Fecha + 1
            Else
                Eshabil = True
            End If
        End If
    Loop
    Primer_Dia_Habil = Fecha
    
Set objFeriado = Nothing
End Function

Public Sub bus_SAC_Retroactivo()
' ---------------------------------------------------------------------------------------------
' Descripcion: Busca semestre a semestre la diferencia entre dos Acum.Mens.Meses.
'               y retorna la suma de las diferencias encontradas.
' Autor      : FGZ
' Fecha      : 27/06/2005
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim nroAcu As Long              'Nro de Acumulador
Dim CantSemestres As Integer    'Cantidad de semestres
Dim MesHasta As Integer
Dim AnioHasta As Integer
Dim MesDesde As Integer
Dim AnioDesde As Integer

Dim NroAcu_Original As Long
Dim NroAcu_Auxiliar As Long
Dim UsaActual As Boolean
Dim I As Integer
Dim j As Integer
Dim Diferencia As Double
Dim Dif As Double

Dim rs_Acu_Mes1 As New ADODB.Recordset
Dim rs_Acu_Mes2 As New ADODB.Recordset
Dim rs_his_retro1 As New ADODB.Recordset
Dim rs_his_retro2 As New ADODB.Recordset

    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda " & NroProg
    End If
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        NroAcu_Original = Arr_Programa(NroProg).Auxint1
        NroAcu_Auxiliar = Arr_Programa(NroProg).Auxint2
        CantSemestres = Arr_Programa(NroProg).Auxint3
        UsaActual = CBool(Arr_Programa(NroProg).Auxlog1)
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontré la Busqueda " & NroProg
        End If
        Exit Sub
    End If

    Diferencia = 0
    If UsaActual Then
        If buliq_periodo!pliqmes > 6 Then 'segundo semestre
            MesDesde = 7
            MesHasta = 12
            AnioDesde = Year(buliq_periodo!pliqanio)
            AnioHasta = Year(buliq_periodo!pliqanio)
        Else
            MesDesde = 1
            MesHasta = 6
            AnioDesde = Year(buliq_periodo!pliqanio)
            AnioHasta = Year(buliq_periodo!pliqanio)
        End If
    Else
        If buliq_periodo!pliqmes > 6 Then 'segundo semestre
            MesDesde = 1
            MesHasta = 6
            AnioDesde = Year(buliq_periodo!pliqanio)
            AnioHasta = Year(buliq_periodo!pliqanio)
        Else
            MesDesde = 7
            MesHasta = 12
            AnioDesde = Year(buliq_periodo!pliqanio) - 1
            AnioHasta = Year(buliq_periodo!pliqanio) - 1
        End If
    End If
    
    For j = 1 To CantSemestres
        For I = MesDesde To MesHasta
            StrSql = "SELECT *  FROM acu_mes "
            StrSql = StrSql & " WHERE ternro = " & buliq_empleado!ternro
            StrSql = StrSql & " AND acunro =" & NroAcu_Original
            StrSql = StrSql & " AND " & AnioDesde & " = amanio "
            StrSql = StrSql & " AND ammes = " & I
            If rs_Acu_Mes1.State = adStateOpen Then rs_Acu_Mes1.Close
            OpenRecordset StrSql, rs_Acu_Mes1
            
            StrSql = "SELECT *  FROM acu_mes "
            StrSql = StrSql & " WHERE ternro = " & buliq_empleado!ternro
            StrSql = StrSql & " AND acunro =" & NroAcu_Auxiliar
            StrSql = StrSql & " AND " & AnioDesde & " = amanio "
            StrSql = StrSql & " AND ammes = " & I
            If rs_Acu_Mes2.State = adStateOpen Then rs_Acu_Mes2.Close
            OpenRecordset StrSql, rs_Acu_Mes2
            
            Dif = (IIf(Not EsNulo(rs_Acu_Mes1!ammonto), rs_Acu_Mes1!ammonto, 0) - IIf(Not EsNulo(rs_Acu_Mes2!ammonto), rs_Acu_Mes2!ammonto, 0))
            If Dif <> 0 Then
                If rs_Acu_Mes2.EOF Then
                    StrSql = "INSERT INTO acu_mes (ternro,acunro,amanio,ammes,mammonto,amcant,ammontoreal)"
                    StrSql = StrSql & " VALUES ("
                    StrSql = StrSql & buliq_empleado!ternro
                    StrSql = StrSql & "," & NroAcu_Auxiliar
                    StrSql = StrSql & "," & AnioDesde
                    StrSql = StrSql & "," & I
                    StrSql = StrSql & "," & IIf(Not EsNulo(rs_Acu_Mes1!ammonto), rs_Acu_Mes1!ammonto, 0)
                    StrSql = StrSql & "," & IIf(Not EsNulo(rs_Acu_Mes1!amcant), rs_Acu_Mes1!amcant, 0)
                    StrSql = StrSql & "," & IIf(Not EsNulo(rs_Acu_Mes1!ammontoreal), rs_Acu_Mes1!ammontoreal, 0)
                    StrSql = StrSql & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    StrSql = "UPDATE acu_mes SET "
                    StrSql = StrSql & " ammonto = " & IIf(Not EsNulo(rs_Acu_Mes1!ammonto), rs_Acu_Mes1!ammonto, 0)
                    StrSql = StrSql & " ,amcant = " & IIf(Not EsNulo(rs_Acu_Mes1!amcant), rs_Acu_Mes1!amcant, 0)
                    StrSql = StrSql & " ,ammontoreal = " & IIf(Not EsNulo(rs_Acu_Mes1!ammontoreal), rs_Acu_Mes1!ammontoreal, 0)
                    StrSql = StrSql & " WHERE ternro = " & buliq_empleado!ternro
                    StrSql = StrSql & " AND acunro = " & NroAcu_Auxiliar
                    StrSql = StrSql & " AND amanio = " & AnioDesde
                    StrSql = StrSql & " AND ammes = " & I
                    objConn.Execute StrSql, , adExecuteNoRecords
                End If
            End If
            'acumulo la diferencia
            Diferencia = Diferencia + (IIf(Not EsNulo(rs_Acu_Mes1!ammonto), rs_Acu_Mes1!ammonto, 0) - IIf(Not EsNulo(rs_Acu_Mes2!ammonto), rs_Acu_Mes2!ammonto, 0))
            
        Next I
        
        If MesDesde = 7 Then
            MesDesde = 1
            MesHasta = 6
        Else
            MesDesde = 7
            MesHasta = 12
            AnioDesde = AnioDesde - 1
            AnioHasta = AnioHasta - 1
        End If
    Next j
    
    Valor = Diferencia
    Bien = True

    'copio los his_retroactivos del del acumulador original al acumulador auxiliar
    StrSql = "SELECT * FROM hisretroactivo "
    StrSql = StrSql & " WHERE acunro = " & NroAcu_Original
    StrSql = StrSql & " AND amanio = " & AnioDesde
    StrSql = StrSql & " AND ammes = " & I
    StrSql = StrSql & " AND cliqnro = " & buliq_cabliq!cliqnro
    If rs_his_retro1.State = adStateOpen Then rs_his_retro1.Close
    OpenRecordset StrSql, rs_his_retro1
    Do While Not rs_his_retro1.EOF
        StrSql = "SELECT * FROM hisretroactivo "
        StrSql = StrSql & " WHERE acunro = " & NroAcu_Auxiliar
        StrSql = StrSql & " AND amanio = " & AnioDesde
        StrSql = StrSql & " AND ammes = " & I
        StrSql = StrSql & " AND cliqnro = " & buliq_cabliq!cliqnro
        StrSql = StrSql & " AND concnro = " & rs_his_retro1!concnro
        If rs_his_retro2.State = adStateOpen Then rs_his_retro2.Close
        OpenRecordset StrSql, rs_his_retro2
        If rs_his_retro2.EOF Then
            StrSql = "INSERT INTO hisretroactivo (acunro,amanio,ammes,cliqnro,concnro,dlimonto,ammonto)"
            StrSql = StrSql & " VALUES (" & NroAcu_Auxiliar
            StrSql = StrSql & "," & AnioDesde
            StrSql = StrSql & "," & I
            StrSql = StrSql & "," & buliq_cabliq!cliqnro
            StrSql = StrSql & "," & rs_his_retro1!concnro
            StrSql = StrSql & "," & rs_his_retro1!dlimonto
            StrSql = StrSql & "," & rs_his_retro1!ammonto
            StrSql = StrSql & ",0)"
            objConn.Execute StrSql, , adExecuteNoRecords
        Else
            StrSql = "UPDATE hisretroactivo SET "
            StrSql = StrSql & " dlimonto = " & rs_his_retro1!dlimonto
            StrSql = StrSql & " ,ammonto = " & rs_his_retro1!ammonto
            StrSql = StrSql & " WHERE acunro = " & NroAcu_Auxiliar
            StrSql = StrSql & " AND amanio = " & AnioDesde
            StrSql = StrSql & " AND ammes = " & I
            StrSql = StrSql & " AND cliqnro = " & buliq_cabliq!cliqnro
            StrSql = StrSql & " AND concnro = " & rs_his_retro1!concnro
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
        
        rs_his_retro1.MoveNext
    Loop


'cierro todo y libero
If rs_Acu_Mes1.State = adStateOpen Then rs_Acu_Mes1.Close
If rs_Acu_Mes2.State = adStateOpen Then rs_Acu_Mes2.Close
Set rs_Acu_Mes1 = Nothing
Set rs_Acu_Mes2 = Nothing

If rs_his_retro1.State = adStateOpen Then rs_his_retro1.Close
If rs_his_retro2.State = adStateOpen Then rs_his_retro2.Close
Set rs_his_retro1 = Nothing
Set rs_his_retro2 = Nothing
End Sub


Public Sub bus_DiasAnualesVac()
' ---------------------------------------------------------------------------------------------
' Descripcion: Calculo de Dias del año actual para Vac
' Autor      : FGZ
' Fecha      : 13/07/2005
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Fec_Ini_Calc    As Date
Dim Fec_Fin_Calc    As Date
Dim Fec_Ini_An     As Date
Dim Fec_Fin_An     As Date

Dim Dias_Sac        As Double
Dim Dias_Aus        As Double

Dim A_fecha        As Date
Dim Maximo         As Integer
Dim Tolerancia     As Integer
Dim TiposDeDia     As String

Dim rs_Lic As New ADODB.Recordset
Dim rs_Fases As New ADODB.Recordset

    Bien = False
    Valor = 0
    A_fecha = buliq_periodo!pliqhasta
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        Maximo = Arr_Programa(NroProg).Auxint1
        Tolerancia = Arr_Programa(NroProg).Auxint2
        TiposDeDia = IIf(Not EsNulo(Arr_Programa(NroProg).Auxchar), Arr_Programa(NroProg).Auxchar, " ")
    Else
        Exit Sub
    End If

    'calculo de inicio del año
    Fec_Ini_An = C_Date("01/01/" & Year(A_fecha))
    Fec_Fin_An = C_Date("31/12/" & Year(A_fecha))
    Fec_Fin_An = IIf(A_fecha < Fec_Fin_An, A_fecha, Fec_Fin_An)
    
    ' SE AGREGARON ESTAS 2 INICIALIZACIONES
    Fec_Ini_Calc = Fec_Ini_An
    Fec_Fin_Calc = Fec_Fin_An

    'Busco la ultima fase inactiva
    StrSql = "SELECT * FROM fases WHERE real = -1 AND empleado = " & buliq_empleado!ternro
    StrSql = StrSql & " ORDER BY altfec "
    OpenRecordset StrSql, rs_Fases
    
    If Not rs_Fases.EOF Then
        rs_Fases.MoveLast
        'Busco la fecha de Inicio
        If rs_Fases!altfec > Fec_Ini_An Then
            Fec_Ini_Calc = rs_Fases!altfec
        Else
            Fec_Ini_Calc = Fec_Ini_An
        End If
        'Busco la fecha de fin
        If Not EsNulo(rs_Fases!bajfec) Then
            Fec_Fin_Calc = rs_Fases!bajfec
        Else
            If Not EsNulo(buliq_empleado!empfbajaprev) Then
                Fec_Fin_Calc = buliq_empleado!empfbajaprev
            Else
                Fec_Fin_Calc = Fec_Fin_An
            End If
        End If
    Else
        Fec_Fin_Calc = Fec_Fin_An
    End If

    Dias_Sac = DateDiff("d", Fec_Ini_Calc, Fec_Fin_Calc)
    Dias_Sac = IIf(Dias_Sac >= (Maximo - Tolerancia), Maximo, Dias_Sac)

    If Not EsNulo(TiposDeDia) And TiposDeDia <> " " Then
        StrSql = "SELECT * FROM emp_lic WHERE (empleado = " & buliq_empleado!ternro & " )" & _
                 " AND (tdnro IN (" & TiposDeDia & "))" & _
                 " AND elfechadesde <=" & ConvFecha(Fec_Fin_An) & _
                 " AND elfechahasta >= " & ConvFecha(Fec_Ini_Calc)
        OpenRecordset StrSql, rs_Lic
        
        Do While Not rs_Lic.EOF
            Dias_Aus = Dias_Aus + CantidadDeDias(Fec_Ini_Calc, Fec_Fin_An, rs_Lic!elfechadesde, rs_Lic!elfechahasta)
            
            rs_Lic.MoveNext
        Loop
    Else
        Dias_Aus = 0
    End If

    Dias_Sac = Dias_Sac - Dias_Aus
    
    Valor = Dias_Sac
    Bien = True
End Sub


Public Sub bus_Licencias_Integradas()
' ---------------------------------------------------------------------------------------------
' Descripcion: Dias de Licencias entre dos fechas (de un tipo o de todos los tipos)
' Autor      : FGZ
' Fecha      : 17/10/2005
' Ultima Mod.: 20/07/2006
' Descripcion: FGZ
'  24/08/2006 - Martin Ferraro - Se agrego estado a las lic
' ---------------------------------------------------------------------------------------------
Dim TipoLicencia As Long        'Tipo de Licencia

Dim Todas As Boolean            'Todos los tipos de Licencias

Dim TipoMesCalendario As Long   'Mes Calendario o Meses de 30 (tope)
                                '1 _ Mes Calendario
                                '2 _ Meses de 30 dias

Dim Usa_Desborde As Boolean     'TRUE  ==> Arrastra el desborde
                                'FALSE ==> No Arrastra el desborde

Dim Periodo_GTI As Boolean      'TRUE  ==> Segun Periodos de GTI
                                'FALSE ==> Segun Periodos Calendario
                                
Dim Prioridad As Integer        '1 _ Dias Trabajados >= Licencias
                                '2 _ Dias Trabajados < Licencias
                                

Dim dias As Integer
Dim Aux_Dias As Integer
Dim Dias_Ya_Marcados As Integer
Dim Dias_Totales As Integer

Dim SumaDias As Integer
Dim SumaDiasYaGenerados As Integer
Dim FechaDeInicio As Date
Dim FechaDeFin As Date
Dim TipoDia_Ok As Boolean
Dim Dias_Mes_Anterior As Integer

Dim rs_Estructura As New ADODB.Recordset
Dim rs_tipd_con As New ADODB.Recordset
Dim rs_Lic As New ADODB.Recordset
Dim rs_PeriodoGTI As New ADODB.Recordset
Dim rs_Fases As New ADODB.Recordset

Dim Aux_Fecha_Desde As Date
Dim Aux_Fecha_Hasta As Date
Dim DiasDelmes As Integer
Dim LicenciaDe31Dias As Boolean

Dim Solo_Aprobadas As Integer


    Bien = False
    Valor = 0
    LicenciaDe31Dias = False
   
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda "
    End If
    ' Obtener los parametros de la Busqueda
    If Arr_Programa(NroProg).Prognro <> 0 Then
        Todas = CBool(Arr_Programa(NroProg).Auxlog1)
        If Not Todas Then
            TipoLicencia = Arr_Programa(NroProg).Auxint1
        End If
        Usa_Desborde = IIf(Not EsNulo(Arr_Programa(NroProg).Auxlog2), CBool(Arr_Programa(NroProg).Auxlog2), -1)
    
        TipoMesCalendario = IIf(Not EsNulo(Arr_Programa(NroProg).Auxint2), Arr_Programa(NroProg).Auxint2, 2)
        Periodo_GTI = IIf(Not EsNulo(Arr_Programa(NroProg).Auxlog3), CBool(Arr_Programa(NroProg).Auxlog3), -1)
        Prioridad = IIf(Not EsNulo(Arr_Programa(NroProg).Auxint3), Arr_Programa(NroProg).Auxint3, 1)
        
        Solo_Aprobadas = IIf(Not EsNulo(Arr_Programa(NroProg).Auxlog4), CBool(Arr_Programa(NroProg).Auxlog4), 0)
        
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Tipo Mes " & IIf(TipoMesCalendario = 1, "calendario", "a 30 dias(con tope)")
            Flog.writeline Espacios(Tabulador * 4) & "Periodo de " & IIf(Periodo_GTI, "GTI", "Liquidacion")
            Flog.writeline Espacios(Tabulador * 4) & "Prioridad " & IIf(Prioridad = 1, "Dias Trabajados", "Licencias")
        End If
    Else
        Exit Sub
    End If

    If Periodo_GTI Then
        'Busco el periodo de GTI
        StrSql = "SELECT * FROM gti_per "
        StrSql = StrSql & " WHERE pgtimes = " & buliq_periodo!pliqmes
        StrSql = StrSql & " AND pgtianio = " & buliq_periodo!pliqanio
        OpenRecordset StrSql, rs_PeriodoGTI
        
        If Not rs_PeriodoGTI.EOF Then
            FechaDeInicio = rs_PeriodoGTI!pgtidesde
            FechaDeFin = rs_PeriodoGTI!pgtihasta
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Periodo de GTI encontrado. DESDE: " & rs_PeriodoGTI!pgtidesde & " HASTA: " & rs_PeriodoGTI!pgtihasta
            End If
        Else
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "No existe Periodo de GTI para ese mes y año " & buliq_periodo!pliqmes & " del " & buliq_periodo!pliqanio
            End If
            Exit Sub
        End If
    Else    'Mes calendario
        FechaDeInicio = buliq_proceso!profecini
        FechaDeFin = buliq_proceso!profecfin
    End If
    
    'FGZ - 13/02/2006
    'DiasDelMes = Day(DateAdd("m", 1, C_Date("01/" & Month(FechaDeInicio) & "/" & Year(FechaDeInicio))) - 1)
    DiasDelmes = DateDiff("d", FechaDeInicio, FechaDeFin) + 1
    
'    'Controlo si el empleado esta dado de baja
'    StrSql = " SELECT * FROM fases WHERE empleado =" & buliq_empleado!ternro
'    StrSql = StrSql & " ORDER BY altfec DESC "
'
'    OpenRecordset StrSql, rs_Fases
'
'    If Not rs_Fases.EOF Then
'       If Not IsNull(rs_Fases!bajfec) Then
'          'Si tiene fecha de baja dentro del periodo seteo a esta como fecha tope
'          If rs_Fases!bajfec < FechaDeFin Then
'             FechaDeFin = rs_Fases!bajfec
'          End If
'       End If
'    End If
    
    'Primero Busco  los tipos de dias asociados a los conceptos
    If Todas Then 'Todos los tipos de Licencias
        StrSql = " SELECT * FROM tipd_con " & _
                 " WHERE concnro =" & Buliq_Concepto(Concepto_Actual).concnro
    Else 'Todos las Licencias del tipo especificado
        StrSql = " SELECT * FROM tipd_con " & _
                 " WHERE concnro =" & Buliq_Concepto(Concepto_Actual).concnro & _
                 " AND tdnro = " & TipoLicencia
    End If
    OpenRecordset StrSql, rs_tipd_con
    If rs_tipd_con.EOF Then
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "no hay tipos de dias asociados a los conceptos "
        End If
    End If
    
    Do While Not rs_tipd_con.EOF
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Tipo de dia: " & rs_tipd_con!tdnro
        End If
        TipoDia_Ok = True
        If Not EsNulo(rs_tipd_con!tenro) Then
            If rs_tipd_con!tenro <> 0 Then
                StrSql = " SELECT * FROM his_estructura " & _
                         " WHERE ternro = " & buliq_empleado!ternro & " AND " & _
                         " tenro =" & rs_tipd_con!tenro & " AND " & _
                         " estrnro = " & rs_tipd_con!estrnro & " AND " & _
                         " (htetdesde <= " & ConvFecha(FechaDeFin) & ") AND " & _
                         " ((" & ConvFecha(FechaDeFin) & " <= htethasta) or (htethasta is null))"
                OpenRecordset StrSql, rs_Estructura
                If rs_Estructura.EOF Then
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "Tipo de dia " & rs_tipd_con!tdnro & " no valido. No tiene estructura del tipo " & rs_tipd_con!tenro
                    End If
                    TipoDia_Ok = False
                End If
            End If
        End If
    
        If CBool(TipoDia_Ok) Then
            StrSql = "SELECT * FROM emp_lic WHERE (empleado = " & buliq_empleado!ternro & " )" & _
                     " AND tdnro =" & rs_tipd_con!tdnro & _
                     " AND elfechadesde <=" & ConvFecha(FechaDeFin) & _
                     " AND elfechahasta >= " & ConvFecha(FechaDeInicio)
            'MAF - Estado lic - 24/08/2006
            If Solo_Aprobadas = -1 Then
               StrSql = StrSql & " AND licestnro = 2 "
            End If
                     
            OpenRecordset StrSql, rs_Lic
            
            dias = 0
            Do While Not rs_Lic.EOF
                Aux_Fecha_Desde = rs_Lic!elfechadesde
                Aux_Fecha_Hasta = rs_Lic!elfechahasta
            
                If Aux_Fecha_Hasta > FechaDeFin Then
                    Aux_Fecha_Hasta = FechaDeFin
                End If
                dias = CantidadDeDias(FechaDeInicio, FechaDeFin, Aux_Fecha_Desde, Aux_Fecha_Hasta)
                
                'reviso si la licencia es completa
                If Todas Then 'Todos los tipos de Licencias
                    If Usa_Desborde Then
                        Dias_Mes_Anterior = Dias_Licencias_Mes_Anterior(buliq_empleado!ternro, DateAdd("m", -1, FechaDeInicio), FechaDeInicio - 1)
                        'dias = dias + (Dias_Mes_Anterior - 30)
                        'FGZ - 16/02/2006
                        If (Dias_Mes_Anterior > 30 And Month(FechaDeInicio) <> 2) Then
                            dias = dias + (Dias_Mes_Anterior - 30)
                        End If
                    End If
                Else
                    ' solo este tipo
                    If rs_Lic!elfechadesde <= DateAdd("m", -1, FechaDeInicio) Then
                        If rs_Lic!elfechahasta >= DateAdd("m", -1, FechaDeFin) Then
                            'Para ajustar la cantidad de dias cuando la lic sobrepasa al mes y fue topeada
                            If Usa_Desborde Then
                                Dias_Mes_Anterior = DateDiff("d", DateAdd("m", -1, FechaDeInicio), FechaDeInicio - 1) + 1
                                dias = dias + (Dias_Mes_Anterior - 30)
                            End If
                            
                        End If
                    End If
                End If
                
                'FGZ - 19/10/2005
                'Reviso que no haya lic marcadas por este proceso tal que esa suma + estos dias superen el tope
                If TipoMesCalendario = 2 Then 'Aplicar tope
                    Dias_Ya_Marcados = Dias_Licencias_Ya_Marcados(FechaDeInicio, FechaDeFin, Aux_Fecha_Desde, Aux_Fecha_Hasta, NroProc, buliq_empleado!ternro)
                    Aux_Dias = Dias_Ya_Marcados + dias
                    If Aux_Dias = DiasDelmes And DiasDelmes = 31 Then
                        dias = dias - 1
                        LicenciaDe31Dias = True
                    Else
                        If Aux_Dias > DiasDelmes Then
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Corresponderian " & dias & " pero se generarán " & (dias - (Aux_Dias - DiasDelmes)) & " porque ya estan marcadas."
                            End If
                            dias = dias - (Aux_Dias - DiasDelmes)
                        End If
                    End If
                End If
                SumaDias = SumaDias + dias
                
                'Marco la licencia para que no se pueda Borrar
                StrSql = "UPDATE emp_lic SET pronro = " & NroProc & _
                         " WHERE emp_licnro = " & rs_Lic!emp_licnro
                objConn.Execute StrSql, , adExecuteNoRecords
                
                rs_Lic.MoveNext
            Loop
        End If
        rs_tipd_con.MoveNext
    Loop


If SumaDias <> 0 Then
    ' --------------------------------------------
    'Reviso tipo de mes y topeo
    If TipoMesCalendario = 2 Then 'Aplicar tope
        If SumaDias = DiasDelmes Then
            Valor = 30
        Else
            If Prioridad = 1 Then 'Dias Trabajados >= Licencias
                If SumaDias >= DiasDelmes Then
                    Valor = 30 - (DiasDelmes - SumaDias)
                Else
                    If (SumaDias + Dias_Ya_Marcados) = 30 And DiasDelmes = 31 Then
                        '20/10/2005
                        'Es como si sobrepasara la cantidad porque el mes tiene un dia mas y
                        'necesito saber si el dia que falta se lo tomo de alguna licencia o en realidad trabajó
                        Dias_Totales = Dias_Licencias_Total(FechaDeInicio, FechaDeFin, FechaDeInicio, FechaDeFin, buliq_empleado!ternro)
                        If Dias_Totales < DiasDelmes Then
                            Valor = 30 - (DiasDelmes - SumaDias)
                        Else
                            Valor = SumaDias
                        End If
                    Else
                        If DiasDelmes < 30 Then 'Febrero
                            Dias_Totales = Dias_Licencias_Total(FechaDeInicio, FechaDeFin, FechaDeInicio, FechaDeFin, buliq_empleado!ternro)
                            If (Dias_Totales = SumaDias = DiasDelmes) Then
                                Valor = 30
                            Else
                                If (Dias_Totales = SumaDias) And (SumaDias < DiasDelmes) Then
                                    Valor = 30 - (DiasDelmes - SumaDias) + 1
                                Else
                                    Valor = SumaDias
                                End If
                            End If
                        Else
                            Dias_Totales = Dias_Licencias_Total(FechaDeInicio, FechaDeFin, FechaDeInicio, FechaDeFin, buliq_empleado!ternro)
                            If (SumaDias + Dias_Ya_Marcados) < DiasDelmes And Dias_Totales = (SumaDias + Dias_Ya_Marcados) Then
                                'Quiere decir que trabajó algun dia ==> le descuento los dias trabajados a la ultima lic que se calcule
                                Valor = 30 - (DiasDelmes - SumaDias)
                            Else
                                Valor = SumaDias
                            End If
                        End If
                    End If
                End If
            Else 'Dias Trabajados < Licencias
                If DiasDelmes < 30 Then 'Febrero
                    If SumaDias >= DiasDelmes Then
                        Valor = 30 - (DiasDelmes - SumaDias) + 1
                    Else
                        Valor = SumaDias
                    End If
                Else
                    'Caso excepcional, si estuvo de licencias 30 dias y el mes tenia 31 dias entonces tiene que devolver 29 dias de licencias
                    
                    If (SumaDias + Dias_Ya_Marcados) = 30 And DiasDelmes = 31 And Not LicenciaDe31Dias Then
                        'Valor = 29
                        Valor = 30
                    Else
                        If SumaDias >= DiasDelmes Then
                            Valor = 30
                        Else
                            'FGZ - 22/06/2006
                            Valor = SumaDias
'                            If DiasDelMes = 31 Then
'                                'FGZ - 20/07/2006
'                                If Not LicenciaDe31Dias Then
'                                    Valor = 30 - (DiasDelMes - SumaDias)
'                                Else
'                                    Valor = SumaDias
'                                End If
'                            Else
'                                Valor = SumaDias
'                            End If
                        End If
                    End If
                End If
            End If
        End If
    Else
        Valor = SumaDias
    End If
Else
    Valor = SumaDias
End If
Bien = True
    
'-------------------------------
    'Cierro todo y libero
    If rs_Estructura.State = adStateOpen Then rs_Estructura.Close
    Set rs_Estructura = Nothing
    
    If rs_Lic.State = adStateOpen Then rs_Lic.Close
    Set rs_Lic = Nothing
    
    If rs_tipd_con.State = adStateOpen Then rs_tipd_con.Close
    Set rs_tipd_con = Nothing
    
    If rs_PeriodoGTI.State = adStateOpen Then rs_PeriodoGTI.Close
    Set rs_PeriodoGTI = Nothing
    
    If rs_Fases.State = adStateOpen Then rs_Fases.Close
    Set rs_Fases = Nothing
    
End Sub


Public Sub bus_Licencias_Horas()
' ---------------------------------------------------------------------------------------------
' Descripcion: Horas de Licencias entre dos fechas (de un tipo o de todos los tipos)
' Autor      : Martin Ferraro - Se creo a partir de la busqueda de licencias integradas
' Fecha      : 10/12/2007
' Ultima Mod.:
' Descripcion:

' ---------------------------------------------------------------------------------------------
Dim TipoLicencia As Long        'Tipo de Licencia

Dim Todas As Boolean            'Todos los tipos de Licencias

Dim TipoMesCalendario As Long   'Mes Calendario o Meses de 30 (tope)
                                '1 _ Mes Calendario
                                '2 _ Meses de 30 dias

Dim Usa_Desborde As Boolean     'TRUE  ==> Arrastra el desborde
                                'FALSE ==> No Arrastra el desborde

Dim Periodo_GTI As Boolean      'TRUE  ==> Segun Periodos de GTI
                                'FALSE ==> Segun Periodos Calendario
                                
Dim Prioridad As Integer        '1 _ Dias Trabajados >= Licencias
                                '2 _ Dias Trabajados < Licencias
                                
Dim Habil As String             'String de lunes a domingo con el valor de los dias Habiles

Dim noHabil As String           'String de lunes a domingo con el valor de los dias No habiles

Dim Feriado As String           'String de lunes a domingo con el valor de los dias Feriados

Dim listaConvenio As String     'lista de los convenios seleccionados. Si 0 entonces todos
                                
                                
Dim horas As Long

Dim SumaHoras As Long
Dim FechaDeInicio As Date
Dim FechaDeFin As Date
Dim TipoDia_Ok As Boolean

Dim rs_Estructura As New ADODB.Recordset
Dim rs_tipd_con As New ADODB.Recordset
Dim rs_Lic As New ADODB.Recordset
Dim rs_PeriodoGTI As New ADODB.Recordset

Dim Aux_Fecha_Desde As Date
Dim Aux_Fecha_Hasta As Date
Dim DiasDelmes As Integer
Dim LicenciaDe31Dias As Boolean

Dim Solo_Aprobadas As Integer

Dim empleadoActivo As Boolean
Dim fechaEstr As Date

    Bien = False
    Valor = 0
    SumaHoras = 0
    LicenciaDe31Dias = False
   
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda "
    End If
    ' Obtener los parametros de la Busqueda
    If Arr_Programa(NroProg).Prognro <> 0 Then
        Todas = CBool(Arr_Programa(NroProg).Auxlog1)
        If Not Todas Then
            TipoLicencia = Arr_Programa(NroProg).Auxint1
        End If
        Usa_Desborde = IIf(Not EsNulo(Arr_Programa(NroProg).Auxlog2), CBool(Arr_Programa(NroProg).Auxlog2), -1)
    
        TipoMesCalendario = IIf(Not EsNulo(Arr_Programa(NroProg).Auxint2), Arr_Programa(NroProg).Auxint2, 2)
        Periodo_GTI = IIf(Not EsNulo(Arr_Programa(NroProg).Auxlog3), CBool(Arr_Programa(NroProg).Auxlog3), -1)
        Prioridad = IIf(Not EsNulo(Arr_Programa(NroProg).Auxint3), Arr_Programa(NroProg).Auxint3, 1)
        
        Solo_Aprobadas = IIf(Not EsNulo(Arr_Programa(NroProg).Auxlog4), CBool(Arr_Programa(NroProg).Auxlog4), 0)
        
        Habil = IIf(Not EsNulo(Arr_Programa(NroProg).Auxchar1), Arr_Programa(NroProg).Auxchar1, "0000000")
        noHabil = IIf(Not EsNulo(Arr_Programa(NroProg).Auxchar2), Arr_Programa(NroProg).Auxchar2, "0000000")
        Feriado = IIf(Not EsNulo(Arr_Programa(NroProg).Auxchar3), Arr_Programa(NroProg).Auxchar3, "0000000")
        listaConvenio = IIf(Not EsNulo(Arr_Programa(NroProg).Auxchar), Arr_Programa(NroProg).Auxchar, "0")
        
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Tipo Mes " & IIf(TipoMesCalendario = 1, "calendario", "a 30 dias(con tope)")
            Flog.writeline Espacios(Tabulador * 4) & "Periodo de " & IIf(Periodo_GTI, "GTI", "Liquidacion")
            Flog.writeline Espacios(Tabulador * 4) & "Prioridad " & IIf(Prioridad = 1, "Dias Trabajados", "Licencias")
            Flog.writeline Espacios(Tabulador * 4) & "Valor dia habil lunes a domingo " & Habil
            Flog.writeline Espacios(Tabulador * 4) & "Valor dia No habil lunes a domingo " & noHabil
            Flog.writeline Espacios(Tabulador * 4) & "Valor dia Feriado lunes a domingo " & Feriado
            Flog.writeline Espacios(Tabulador * 4) & "Lista de Convenios " & IIf(listaConvenio = "0", "Todos", listaConvenio)
        End If
    Else
        Exit Sub
    End If
    

    If Periodo_GTI Then
        'Busco el periodo de GTI
        StrSql = "SELECT * FROM gti_per "
        StrSql = StrSql & " WHERE pgtimes = " & buliq_periodo!pliqmes
        StrSql = StrSql & " AND pgtianio = " & buliq_periodo!pliqanio
        OpenRecordset StrSql, rs_PeriodoGTI
        
        If Not rs_PeriodoGTI.EOF Then
            FechaDeInicio = rs_PeriodoGTI!pgtidesde
            FechaDeFin = rs_PeriodoGTI!pgtihasta
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Periodo de GTI encontrado. DESDE: " & rs_PeriodoGTI!pgtidesde & " HASTA: " & rs_PeriodoGTI!pgtihasta
            End If
        Else
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "No existe Periodo de GTI para ese mes y año " & buliq_periodo!pliqmes & " del " & buliq_periodo!pliqanio
            End If
            Exit Sub
        End If
    Else    'Mes calendario
        FechaDeInicio = buliq_proceso!profecini
        FechaDeFin = buliq_proceso!profecfin
    End If
    
    DiasDelmes = DateDiff("d", FechaDeInicio, FechaDeFin) + 1
    
    
    '-------------------------------------------------------------------------
    'Busqueda de pertenencia al convenio
    'Si el empleado esta activo tomo la fecha de baja, sino la fecha hasta de periodo
    '-------------------------------------------------------------------------
    StrSql = " SELECT empest"
    StrSql = StrSql & " FROM empleado"
    StrSql = StrSql & " WHERE ternro = " & buliq_empleado!ternro
    OpenRecordset StrSql, rs_Estructura
    If Not rs_Estructura Then
        empleadoActivo = CBool(rs_Estructura!empest)
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontro el empleado con ternro: " & buliq_empleado!ternro
            Exit Sub
        End If
    End If
    rs_Estructura.Close
    
    If Not empleadoActivo Then
   
        'Tomo la fecha de baja de la fase
        StrSql = "SELECT * "
        StrSql = StrSql & "FROM fases "
        StrSql = StrSql & "WHERE empleado = " & buliq_empleado!ternro
        StrSql = StrSql & "ORDER BY bajfec DESC "
        OpenRecordset StrSql, rs_Estructura
        If Not rs_Estructura Then
            fechaEstr = IIf(EsNulo(rs_Estructura!bajfec), FechaDeFin, rs_Estructura!bajfec)
        End If
        rs_Estructura.Close
        
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Empleado Inactivo. Fecha estr hasta de Fecha de baja de Fase" & fechaEstr
        End If
    Else
    
        'Tomo fecha periodo
        fechaEstr = FechaDeFin
        
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Empleado Activo. Fecha estr hasta " & fechaEstr
        End If
    End If
    
    StrSql = " SELECT * FROM his_estructura WHERE ternro = " & buliq_empleado!ternro & " AND tenro = 19"
    If listaConvenio <> "0" Then
        StrSql = StrSql & " AND estrnro in (" & listaConvenio & ")"
    End If
    StrSql = StrSql & " AND (htetdesde <= " & ConvFecha(fechaEstr) & " AND (htethasta is null or htethasta >= " & ConvFecha(fechaEstr) & "))"
    OpenRecordset StrSql, rs_Estructura
    If rs_Estructura.EOF Then
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "El empleado no tiene, o no pertenece al convenio."
        End If
        Exit Sub
    End If
    rs_Estructura.Close
    '-------------------------------------------------------------------------
    '-------------------------------------------------------------------------
    
    'Primero Busco  los tipos de dias asociados a los conceptos
    If Todas Then 'Todos los tipos de Licencias
        StrSql = " SELECT * FROM tipd_con " & _
                 " WHERE concnro =" & Buliq_Concepto(Concepto_Actual).concnro
    Else 'Todos las Licencias del tipo especificado
        StrSql = " SELECT * FROM tipd_con " & _
                 " WHERE concnro =" & Buliq_Concepto(Concepto_Actual).concnro & _
                 " AND tdnro = " & TipoLicencia
    End If
    OpenRecordset StrSql, rs_tipd_con
    If rs_tipd_con.EOF Then
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "no hay tipos de dias asociados a los conceptos "
        End If
    End If
    
    Do While Not rs_tipd_con.EOF
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Tipo de dia: " & rs_tipd_con!tdnro
        End If
        TipoDia_Ok = True
        If Not EsNulo(rs_tipd_con!tenro) Then
            If rs_tipd_con!tenro <> 0 Then
                StrSql = " SELECT * FROM his_estructura " & _
                         " WHERE ternro = " & buliq_empleado!ternro & " AND " & _
                         " tenro =" & rs_tipd_con!tenro & " AND " & _
                         " estrnro = " & rs_tipd_con!estrnro & " AND " & _
                         " (htetdesde <= " & ConvFecha(FechaDeFin) & ") AND " & _
                         " ((" & ConvFecha(FechaDeFin) & " <= htethasta) or (htethasta is null))"
                OpenRecordset StrSql, rs_Estructura
                If rs_Estructura.EOF Then
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "Tipo de dia " & rs_tipd_con!tdnro & " no valido. No tiene estructura del tipo " & rs_tipd_con!tenro
                    End If
                    TipoDia_Ok = False
                End If
            End If
        End If
    
        If CBool(TipoDia_Ok) Then
            StrSql = "SELECT * FROM emp_lic WHERE (empleado = " & buliq_empleado!ternro & " )" & _
                     " AND tdnro =" & rs_tipd_con!tdnro & _
                     " AND elfechadesde <=" & ConvFecha(FechaDeFin) & _
                     " AND elfechahasta >= " & ConvFecha(FechaDeInicio)
            
            If Solo_Aprobadas = -1 Then
               StrSql = StrSql & " AND licestnro = 2 "
            End If
                     
            OpenRecordset StrSql, rs_Lic
            
            horas = 0
            Do While Not rs_Lic.EOF
                Aux_Fecha_Desde = rs_Lic!elfechadesde
                Aux_Fecha_Hasta = rs_Lic!elfechahasta
            
                If Aux_Fecha_Hasta > FechaDeFin Then
                    Aux_Fecha_Hasta = FechaDeFin
                End If
                horas = CantidadDeHorasDias(FechaDeInicio, FechaDeFin, Aux_Fecha_Desde, Aux_Fecha_Hasta, Habil, noHabil, Feriado)
                
                SumaHoras = SumaHoras + horas
                
                rs_Lic.MoveNext
            Loop
        End If
        rs_tipd_con.MoveNext
    Loop

    Valor = SumaHoras

Bien = True
    
'-------------------------------
    'Cierro todo y libero
    If rs_Estructura.State = adStateOpen Then rs_Estructura.Close
    Set rs_Estructura = Nothing
    
    If rs_Lic.State = adStateOpen Then rs_Lic.Close
    Set rs_Lic = Nothing
    
    If rs_tipd_con.State = adStateOpen Then rs_tipd_con.Close
    Set rs_tipd_con = Nothing
    
    If rs_PeriodoGTI.State = adStateOpen Then rs_PeriodoGTI.Close
    Set rs_PeriodoGTI = Nothing
    
End Sub

Public Sub bus_Licencias_Integradas_OLD()
' ---------------------------------------------------------------------------------------------
' Descripcion: Dias de Licencias entre dos fechas (de un tipo o de todos los tipos)
' Autor      : FGZ
' Fecha      : 17/10/2005
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim TipoLicencia As Long        'Tipo de Licencia

Dim Todas As Boolean            'Todos los tipos de Licencias

Dim TipoMesCalendario As Long   'Mes Calendario o Meses de 30 (tope)
                                '1 _ Mes Calendario
                                '2 _ Meses de 30 dias

Dim Usa_Desborde As Boolean     'TRUE  ==> Arrastra el desborde
                                'FALSE ==> No Arrastra el desborde

Dim Periodo_GTI As Boolean      'TRUE  ==> Segun Periodos de GTI
                                'FALSE ==> Segun Periodos Calendario
                                
Dim Prioridad As Integer        '1 _ Dias Trabajados >= Licencias
                                '2 _ Dias Trabajados < Licencias
                                

Dim dias As Integer
Dim Aux_Dias As Integer
Dim Dias_Ya_Marcados As Integer
Dim Dias_Totales As Integer

Dim SumaDias As Integer
Dim SumaDiasYaGenerados As Integer
Dim FechaDeInicio As Date
Dim FechaDeFin As Date
Dim TipoDia_Ok As Boolean
Dim Dias_Mes_Anterior As Integer

Dim rs_Estructura As New ADODB.Recordset
Dim rs_tipd_con As New ADODB.Recordset
Dim rs_Lic As New ADODB.Recordset
Dim rs_PeriodoGTI As New ADODB.Recordset
Dim rs_Fases As New ADODB.Recordset

Dim Aux_Fecha_Desde As Date
Dim Aux_Fecha_Hasta As Date
Dim DiasDelmes As Integer
Dim LicenciaDe31Dias As Boolean

    Bien = False
    Valor = 0
    LicenciaDe31Dias = False
   
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda "
    End If
    ' Obtener los parametros de la Busqueda
    If Arr_Programa(NroProg).Prognro <> 0 Then
        Todas = CBool(Arr_Programa(NroProg).Auxlog1)
        If Not Todas Then
            TipoLicencia = Arr_Programa(NroProg).Auxint1
        End If
        Usa_Desborde = IIf(Not EsNulo(Arr_Programa(NroProg).Auxlog2), CBool(Arr_Programa(NroProg).Auxlog2), -1)
    
        TipoMesCalendario = IIf(Not EsNulo(Arr_Programa(NroProg).Auxint2), Arr_Programa(NroProg).Auxint2, 2)
        Periodo_GTI = IIf(Not EsNulo(Arr_Programa(NroProg).Auxlog3), CBool(Arr_Programa(NroProg).Auxlog3), -1)
        Prioridad = IIf(Not EsNulo(Arr_Programa(NroProg).Auxint3), Arr_Programa(NroProg).Auxint3, 1)
        
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Tipo Mes " & IIf(TipoMesCalendario = 1, "calendario", "a 30 dias(con tope)")
            Flog.writeline Espacios(Tabulador * 4) & "Periodo de " & IIf(Periodo_GTI, "GTI", "Liquidacion")
            Flog.writeline Espacios(Tabulador * 4) & "Prioridad " & IIf(Prioridad = 1, "Dias Trabajados", "Licencias")
        End If
    Else
        Exit Sub
    End If

    If Periodo_GTI Then
        'Busco el periodo de GTI
        StrSql = "SELECT * FROM gti_per "
        StrSql = StrSql & " WHERE pgtimes = " & buliq_periodo!pliqmes
        StrSql = StrSql & " AND pgtianio = " & buliq_periodo!pliqanio
        OpenRecordset StrSql, rs_PeriodoGTI
        
        If Not rs_PeriodoGTI.EOF Then
            FechaDeInicio = rs_PeriodoGTI!pgtidesde
            FechaDeFin = rs_PeriodoGTI!pgtihasta
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Periodo de GTI encontrado. DESDE: " & rs_PeriodoGTI!pgtidesde & " HASTA: " & rs_PeriodoGTI!pgtihasta
            End If
        Else
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "No existe Periodo de GTI para ese mes y año " & buliq_periodo!pliqmes & " del " & buliq_periodo!pliqanio
            End If
            Exit Sub
        End If
    Else    'Mes calendario
        FechaDeInicio = buliq_proceso!profecini
        FechaDeFin = buliq_proceso!profecfin
    End If
    
    'FGZ - 13/02/2006
    'DiasDelMes = Day(DateAdd("m", 1, C_Date("01/" & Month(FechaDeInicio) & "/" & Year(FechaDeInicio))) - 1)
    DiasDelmes = DateDiff("d", FechaDeInicio, FechaDeFin) + 1
    
'    'Controlo si el empleado esta dado de baja
'    StrSql = " SELECT * FROM fases WHERE empleado =" & buliq_empleado!ternro
'    StrSql = StrSql & " ORDER BY altfec DESC "
'
'    OpenRecordset StrSql, rs_Fases
'
'    If Not rs_Fases.EOF Then
'       If Not IsNull(rs_Fases!bajfec) Then
'          'Si tiene fecha de baja dentro del periodo seteo a esta como fecha tope
'          If rs_Fases!bajfec < FechaDeFin Then
'             FechaDeFin = rs_Fases!bajfec
'          End If
'       End If
'    End If
    
    'Primero Busco  los tipos de dias asociados a los conceptos
    If Todas Then 'Todos los tipos de Licencias
        StrSql = " SELECT * FROM tipd_con " & _
                 " WHERE concnro =" & Buliq_Concepto(Concepto_Actual).concnro
    Else 'Todos las Licencias del tipo especificado
        StrSql = " SELECT * FROM tipd_con " & _
                 " WHERE concnro =" & Buliq_Concepto(Concepto_Actual).concnro & _
                 " AND tdnro = " & TipoLicencia
    End If
    OpenRecordset StrSql, rs_tipd_con
    If rs_tipd_con.EOF Then
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "no hay tipos de dias asociados a los conceptos "
        End If
    End If
    
    Do While Not rs_tipd_con.EOF
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Tipo de dia: " & rs_tipd_con!tdnro
        End If
        TipoDia_Ok = True
        If Not EsNulo(rs_tipd_con!tenro) Then
            If rs_tipd_con!tenro <> 0 Then
                StrSql = " SELECT * FROM his_estructura " & _
                         " WHERE ternro = " & buliq_empleado!ternro & " AND " & _
                         " tenro =" & rs_tipd_con!tenro & " AND " & _
                         " estrnro = " & rs_tipd_con!estrnro & " AND " & _
                         " (htetdesde <= " & ConvFecha(FechaDeFin) & ") AND " & _
                         " ((" & ConvFecha(FechaDeFin) & " <= htethasta) or (htethasta is null))"
                OpenRecordset StrSql, rs_Estructura
                If rs_Estructura.EOF Then
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "Tipo de dia " & rs_tipd_con!tdnro & " no valido. No tiene estructura del tipo " & rs_tipd_con!tenro
                    End If
                    TipoDia_Ok = False
                End If
            End If
        End If
    
        If CBool(TipoDia_Ok) Then
            StrSql = "SELECT * FROM emp_lic WHERE (empleado = " & buliq_empleado!ternro & " )" & _
                     " AND tdnro =" & rs_tipd_con!tdnro & _
                     " AND elfechadesde <=" & ConvFecha(FechaDeFin) & _
                     " AND elfechahasta >= " & ConvFecha(FechaDeInicio)
            OpenRecordset StrSql, rs_Lic
            
            dias = 0
            Do While Not rs_Lic.EOF
                Aux_Fecha_Desde = rs_Lic!elfechadesde
                Aux_Fecha_Hasta = rs_Lic!elfechahasta
            
                If Aux_Fecha_Hasta > FechaDeFin Then
                    Aux_Fecha_Hasta = FechaDeFin
                End If
                dias = CantidadDeDias(FechaDeInicio, FechaDeFin, Aux_Fecha_Desde, Aux_Fecha_Hasta)
                
                'reviso si la licencia es completa
                If Todas Then 'Todos los tipos de Licencias
                    If Usa_Desborde Then
                        Dias_Mes_Anterior = Dias_Licencias_Mes_Anterior(buliq_empleado!ternro, DateAdd("m", -1, FechaDeInicio), FechaDeInicio - 1)
                        'dias = dias + (Dias_Mes_Anterior - 30)
                        'FGZ - 16/02/2006
                        If (Dias_Mes_Anterior > 30 And Month(FechaDeInicio) <> 2) Then
                            dias = dias + (Dias_Mes_Anterior - 30)
                        End If
                    End If
                Else
                    ' solo este tipo
                    If rs_Lic!elfechadesde <= DateAdd("m", -1, FechaDeInicio) Then
                        If rs_Lic!elfechahasta >= DateAdd("m", -1, FechaDeFin) Then
                            'Para ajustar la cantidad de dias cuando la lic sobrepasa al mes y fue topeada
                            If Usa_Desborde Then
                                Dias_Mes_Anterior = DateDiff("d", DateAdd("m", -1, FechaDeInicio), FechaDeInicio - 1) + 1
                                dias = dias + (Dias_Mes_Anterior - 30)
                            End If
                            
                        End If
                    End If
                End If
                
                'FGZ - 19/10/2005
                'Reviso que no haya lic marcadas por este proceso tal que esa suma + estos dias superen el tope
                If TipoMesCalendario = 2 Then 'Aplicar tope
                    Dias_Ya_Marcados = Dias_Licencias_Ya_Marcados(FechaDeInicio, FechaDeFin, Aux_Fecha_Desde, Aux_Fecha_Hasta, NroProc, buliq_empleado!ternro)
                    Aux_Dias = Dias_Ya_Marcados + dias
                    If Aux_Dias = DiasDelmes And DiasDelmes = 31 Then
                        dias = dias - 1
                        LicenciaDe31Dias = True
                    Else
                        If Aux_Dias > DiasDelmes Then
                            If CBool(USA_DEBUG) Then
                                Flog.writeline Espacios(Tabulador * 4) & "Corresponderian " & dias & " pero se generarán " & (dias - (Aux_Dias - DiasDelmes)) & " porque ya estan marcadas."
                            End If
                            dias = dias - (Aux_Dias - DiasDelmes)
                        End If
                    End If
                End If
                SumaDias = SumaDias + dias
                
                'Marco la licencia para que no se pueda Borrar
                StrSql = "UPDATE emp_lic SET pronro = " & NroProc & _
                         " WHERE emp_licnro = " & rs_Lic!emp_licnro
                objConn.Execute StrSql, , adExecuteNoRecords
                
                rs_Lic.MoveNext
            Loop
        End If
        rs_tipd_con.MoveNext
    Loop


If SumaDias <> 0 Then
    ' --------------------------------------------
    'Reviso tipo de mes y topeo
    If TipoMesCalendario = 2 Then 'Aplicar tope
        If SumaDias = DiasDelmes Then
            Valor = 30
        Else
            If Prioridad = 1 Then 'Dias Trabajados >= Licencias
                If SumaDias >= DiasDelmes Then
                    Valor = 30 - (DiasDelmes - SumaDias)
                Else
                    If (SumaDias + Dias_Ya_Marcados) = 30 And DiasDelmes = 31 Then
                        '20/10/2005
                        'Es como si sobrepasara la cantidad porque el mes tiene un dia mas y
                        'necesito saber si el dia que falta se lo tomo de alguna licencia o en realidad trabajó
                        Dias_Totales = Dias_Licencias_Total(FechaDeInicio, FechaDeFin, FechaDeInicio, FechaDeFin, buliq_empleado!ternro)
                        If Dias_Totales < DiasDelmes Then
                            Valor = 30 - (DiasDelmes - SumaDias)
                        Else
                            Valor = SumaDias
                        End If
                    Else
                        If DiasDelmes < 30 Then 'Febrero
                            Dias_Totales = Dias_Licencias_Total(FechaDeInicio, FechaDeFin, FechaDeInicio, FechaDeFin, buliq_empleado!ternro)
                            If (Dias_Totales = SumaDias = DiasDelmes) Then
                                Valor = 30
                            Else
                                If (Dias_Totales = SumaDias) And (SumaDias < DiasDelmes) Then
                                    Valor = 30 - (DiasDelmes - SumaDias) + 1
                                Else
                                    Valor = SumaDias
                                End If
                            End If
                        Else
                            Dias_Totales = Dias_Licencias_Total(FechaDeInicio, FechaDeFin, FechaDeInicio, FechaDeFin, buliq_empleado!ternro)
                            If (SumaDias + Dias_Ya_Marcados) < DiasDelmes And Dias_Totales = (SumaDias + Dias_Ya_Marcados) Then
                                'Quiere decir que trabajó algun dia ==> le descuento los dias trabajados a la ultima lic que se calcule
                                Valor = 30 - (DiasDelmes - SumaDias)
                            Else
                                Valor = SumaDias
                            End If
                        End If
                    End If
                End If
            Else 'Dias Trabajados < Licencias
                If DiasDelmes < 30 Then 'Febrero
                    If SumaDias >= DiasDelmes Then
                        Valor = 30 - (DiasDelmes - SumaDias) + 1
                    Else
                        Valor = SumaDias
                    End If
                Else
                    'Caso excepcional, si estubo de licencias 30 dias y el mes tenia 31 dias entonces tiene que devolver 29 dias de licencias
                    
                    If (SumaDias + Dias_Ya_Marcados) = 30 And DiasDelmes = 31 And Not LicenciaDe31Dias Then
                       Valor = 29
                    Else
                        If SumaDias >= DiasDelmes Then
                            Valor = 30
                        Else
                            Valor = SumaDias
                        End If
                    End If
                End If
            End If
        End If
    Else
        Valor = SumaDias
    End If
Else
    Valor = SumaDias
End If
Bien = True
    
'-------------------------------
    'Cierro todo y libero
    If rs_Estructura.State = adStateOpen Then rs_Estructura.Close
    Set rs_Estructura = Nothing
    
    If rs_Lic.State = adStateOpen Then rs_Lic.Close
    Set rs_Lic = Nothing
    
    If rs_tipd_con.State = adStateOpen Then rs_tipd_con.Close
    Set rs_tipd_con = Nothing
    
    If rs_PeriodoGTI.State = adStateOpen Then rs_PeriodoGTI.Close
    Set rs_PeriodoGTI = Nothing
    
    If rs_Fases.State = adStateOpen Then rs_Fases.Close
    Set rs_Fases = Nothing
    
End Sub



Public Sub Generar_Sanciones(ByVal Fecha_Inicio_Periodo As Date, ByVal Fecha_Fin_Periodo As Date, ByVal Anual As Boolean, ByVal Hs_Jornada_Diaria As Double, ByVal Hs_Jornada_Mensual As Double)
' ---------------------------------------------------------------------------------------------
' Descripcion: Procedimiento para generar las sanciones del tercero.
' Autor      : FGZ
' Fecha      : 05/05/2005
' Ultima Mod.:
' Descripcion:
            'FGZ - 08/03/2007 - ---------------------------------------------
            'Cambié estas linea porque se supone cuando es anual busca el acumulador a Dic del año anterior
            'StrSql = StrSql & " AND amanio = " & Year(Fecha_Fin_Periodo)
            'X
            'StrSql = StrSql & " AND amanio = " & Year(Fecha_Fin_Periodo) - 1
'Ultima Mod.: FGZ - 19/03/2007
        'Calculo la antiguedad
        'FGZ - 19/03/2007 -----------------
        'Cambié esto
        'anios = Year(Fecha_Fin_Periodo) - Year(Fecha_Bae)
        'X
'        Aux_fecha = Primer_Dia_Habil(buliq_empleado!ternro, Month(Fecha_Bae), Year(Fecha_Bae))
'        If Aux_fecha > Fecha_Bae Then
'            'Debo tomar el primer dia del mes
'            Aux_fecha = C_Date("01/" & Month(Fecha_Bae) & "/" & Year(Fecha_Bae))
'        Else
'            Aux_fecha = Fecha_Bae
'        End If
'        Call DIF_FECHAS2(Aux_fecha, DateAdd("d", 1, Fecha_Fin_Periodo), Aux1, Aux2, Aux3)
'        Dia = Dia + Aux1
'        Mes = Aux2 + Int(Dia / 30)
'        Anios = Aux3 + Int(Mes / 12)
'Ultima Mod.:  FGZ - 07/04/2007 - La rotacion esta alreves
'           Cambié esto
'           StrSql = StrSql & " ,sanciones = '" & Sanciones.Y & Sanciones.Z & "0'"
'           por esto
'           StrSql = StrSql & " ,sanciones = '0" & Sanciones.X & Sanciones.Y & "'"

' ---------------------------------------------------------------------------------------------
Dim Penalidad As Double
Dim Tiene_Sancion As Boolean
Dim Sancion_Porcentaje As Double
Dim Meses_No_Trab As Integer
Dim Meses_Trabajados As Integer
Dim TipoBAE As Integer

Dim Aux_fecha As Date
Dim Fecha_Bae As Date
Dim Meses As Integer
Dim anios As Long
Dim mes As Long
Dim dia As Long
Dim Aux1 As Long
Dim Aux2 As Long
Dim Aux3 As Long

Dim Sanciones As TSanciones
Dim Porcentaje As Double
Dim Bonificacion_Basica As Double
Dim Bonificacion_Basica1 As Double
Dim Bonificacion_Adicional As Double
Dim Total357 As Double
Dim CuotaBae As Double

Dim Convenio As String
Dim NroConvenio As Long
Dim Valor_Acumulador As Double
Dim Nro_Acumulador As Long
Dim Actualizo_OLD As Boolean

Dim rs As New ADODB.Recordset
Dim rs_Estructura As New ADODB.Recordset
Dim rs_Fases As New ADODB.Recordset
Dim rs_Confrep As New ADODB.Recordset
Dim rs_Empleado As New ADODB.Recordset
Dim rs_BAE As New ADODB.Recordset
Dim rs_Acu As New ADODB.Recordset
Dim rs_Tipo_Bae As New ADODB.Recordset
Dim rs_Acu_Mes As New ADODB.Recordset

    'el acumulador se busca por confrep
    StrSql = "SELECT * FROM confrep "
    StrSql = StrSql & " WHERE repnro = 131 "
    StrSql = StrSql & " AND confnrocol = 3 "
    OpenRecordset StrSql, rs_Confrep
    If rs_Confrep.EOF Then
        Flog.writeline Espacios(Tabulador * 1) & "No esta configurado el Acumulador del reporte 131"
        Exit Sub
    Else
        'Valor_Acumulador = rs_Confrep!confval
        Nro_Acumulador = rs_Confrep!confval

        If Anual Then

            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Fecha Inicio Periodo Anual: " & Fecha_Inicio_Periodo
                Flog.writeline Espacios(Tabulador * 4) & "Fecha Fin Periodo Anual: " & Fecha_Fin_Periodo
            End If
            
            StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro
            StrSql = StrSql & " AND acunro = " & CStr(Nro_Acumulador)
            'FGZ - 08/03/2007 - ---------------------------------------------
            'Cambié estas linea porque se supone cuando es anual busca el acumulador a Dic del año anterior
            'StrSql = StrSql & " AND amanio = " & Year(Fecha_Fin_Periodo)
            StrSql = StrSql & " AND amanio = " & Year(Fecha_Fin_Periodo)
            'FGZ - 08/03/2007 - ---------------------------------------------
            StrSql = StrSql & " ORDER BY ammes desc"
            If rs_Acu_Mes.State = adStateOpen Then rs_Acu_Mes.Close
            OpenRecordset StrSql, rs_Acu_Mes
            If Not rs_Acu_Mes.EOF Then
                Valor_Acumulador = rs_Acu_Mes!ammonto
            Else
                Valor_Acumulador = 0
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & StrSql
                End If
            End If
        Else
            If objCache_Acu_Liq_Monto.EsSimboloDefinido(CStr(Nro_Acumulador)) Then
                Valor_Acumulador = objCache_Acu_Liq_Monto.Valor(CStr(Nro_Acumulador))
            Else
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "No encontró el acumulador " & Nro_Acumulador & " en la liq actual."
                End If
                Valor_Acumulador = 0
            End If
        End If
    End If
    
    If CBool(USA_DEBUG) Then
       Flog.writeline Espacios(Tabulador * 4) & "Valor Acumulador Sanc. " & Valor_Acumulador
    End If
    
    If HACE_TRAZA Then
       Call InsertarTraza(NroCab, Arr_conceptos(Concepto_Actual).concnro, 0, "Valor Acumulador Sanc.", Valor_Acumulador)
    End If
    
    
    If CBool(USA_DEBUG) Then
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 4) & "Busco los ee_parte_bae"
        Flog.writeline
    End If
    StrSql = "SELECT * FROM ee_parte_bae"
    StrSql = StrSql & " WHERE ternro = " & buliq_empleado!ternro
    StrSql = StrSql & " AND aaaamm70 >= " & ConvFecha(C_Date("01/01/" & CStr(Year(Fecha_Fin_Periodo))))
    StrSql = StrSql & " AND aaaamm70 <= " & ConvFecha(Fecha_Fin_Periodo)
    StrSql = StrSql & " ORDER BY aaaamm70, codigo_bae "
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs
    Penalidad = 0
    Tiene_Sancion = False
    Sancion_Porcentaje = 0
    Meses_No_Trab = 0
    Meses_Trabajados = 0
    Do While Not rs.EOF
        If Not EsNulo(rs!codigo_bae) Then
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Parte: Codigo_Bae =" & rs!codigo_bae & " tipo=" & rs!tbaenro & " Penalidad=" & IIf(Not EsNulo(rs!penali70), rs!penali70, 0)
            End If
            If rs!codigo_bae <> "01" And rs!tbaenro <> 9999 Then
                Penalidad = Penalidad + IIf(Not EsNulo(rs!penali70), rs!penali70, 0)
                If CInt(rs!codigo_bae) > 10 Then
                    Tiene_Sancion = True
                    Sancion_Porcentaje = Penalidad
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "Tiene Sancion. Porcentaje=" & Sancion_Porcentaje
                    End If
                End If
            Else
                Meses_No_Trab = Meses_No_Trab + 1
                
                '2005-08-19 H.J.I: Vuelvo el código de BAE a su nro original
                If rs!tbaenro = 9999 Then
                    StrSql = "SELECT * FROM ee_tipo_bae"
                    StrSql = StrSql & " WHERE tbaecodext = '02'"
                    If rs_Tipo_Bae.State = adStateOpen Then rs_Tipo_Bae.Close
                    OpenRecordset StrSql, rs_Tipo_Bae
                    If Not rs_Tipo_Bae.EOF Then
                        TipoBAE = rs_Tipo_Bae!tbaenro
                    Else
                        TipoBAE = 0
                    End If
                    
                    StrSql = "UPDATE ee_parte_bae SET "
                    StrSql = StrSql & " tbaenro = " & TipoBAE
                    StrSql = StrSql & " WHERE pbaenro = " & rs!pbaenro
                    objConn.Execute StrSql, , adExecuteNoRecords
                End If
            End If
        End If
        rs.MoveNext
    Loop
    
    If CBool(USA_DEBUG) Then
       Flog.writeline Espacios(Tabulador * 4) & "Penalidad " & Penalidad
    End If
    
    If HACE_TRAZA Then
       Call InsertarTraza(NroCab, Arr_conceptos(Concepto_Actual).concnro, 0, "Penalidad", Penalidad)
    End If

    'Busco la primer fase que tenga marca de sueldo, la mas vieja
        StrSql = "SELECT * FROM fases WHERE empleado = " & buliq_empleado!ternro
        StrSql = StrSql & " AND sueldo = -1"
        StrSql = StrSql & " ORDER BY altfec ASC,bajfec"
        OpenRecordset StrSql, rs_Fases
        
        If Not rs_Fases.EOF Then
            rs_Fases.MoveFirst
            
            Fecha_Bae = rs_Fases!altfec
            
            If CBool(USA_DEBUG) Then
               Flog.writeline Espacios(Tabulador * 4) & "Fecha de Fase de Alta Considerada: " & Fecha_Bae
            End If
            
            If Not EsNulo(rs_Fases!bajfec) Then
                If Year(C_Date(rs_Fases!bajfec)) = Year(C_Date(Fecha_Fin_Periodo)) Then
                    If rs_Fases!bajfec < Fecha_Fin_Periodo Then
                        Meses_No_Trab = 12 - Month(rs_Fases!bajfec)
                        If Month(rs_Fases!bajfec) = Month(Fecha_Fin_Periodo) Then
                            If rs_Fases!bajfec < Fecha_Fin_Periodo Then
                                Meses_No_Trab = Meses_No_Trab + 1
                            End If
                        End If
                    End If
                End If
            End If
        End If
        
        'Calculo la antiguedad
        'FGZ - 12/03/2007 -----
        'Cambié esto
        'anios = Year(Fecha_Fin_Periodo) - Year(Fecha_Bae)
        'X
        If CBool(USA_DEBUG) Then
           Flog.writeline Espacios(Tabulador * 4) & "Calculo la antiguedad ..."
           Flog.writeline Espacios(Tabulador * 4) & "Fecha BAE " & Fecha_Bae
           Flog.writeline Espacios(Tabulador * 4) & "Fecha Fin Periodo " & Fecha_Fin_Periodo
        End If
        
        'FGZ - 19/03/2007 -----------------
        'Rehice este calculo de antiguedad porque esta mal
        'Antes
        'anios = Year(Fecha_Fin_Periodo) - 1 - Year(Fecha_Bae)
        
        'Ahora
        Aux_fecha = Primer_Dia_Habil(buliq_empleado!ternro, Month(Fecha_Bae), Year(Fecha_Bae))
        If Aux_fecha > Fecha_Bae Then
            'Debo tomar el primer dia del mes
            Aux_fecha = C_Date("01/" & Month(Fecha_Bae) & "/" & Year(Fecha_Bae))
        Else
            Aux_fecha = Fecha_Bae
        End If
        Call DIF_FECHAS2(Aux_fecha, DateAdd("d", 1, Fecha_Fin_Periodo), Aux1, Aux2, Aux3)
        dia = dia + Aux1
        mes = Aux2 + Int(dia / 30)
        anios = Aux3 + Int(mes / 12)
        'FGZ - 19/03/2007 -----------------
        
        If anios <> 0 Then
            Meses_Trabajados = 12
        Else
            Aux_fecha = Primer_Dia_Habil(buliq_empleado!ternro, Month(Fecha_Bae), Year(Fecha_Bae))
            'FGZ - 12/03/2007 ----- agregué este log
            If CBool(USA_DEBUG) Then
               Flog.writeline Espacios(Tabulador * 4) & "Primer dia habil " & Aux_fecha
            End If
            'FGZ - 12/03/2007 ----- agregué este log
            If Fecha_Bae > Aux_fecha Then
                Meses = 12 - Month(Fecha_Bae)
                'Meses = Month(Fecha_Bae)
            Else
                Meses = 12 - Month(Fecha_Bae) + 1
                'Meses = Month(Fecha_Bae) + 1
            End If
            Meses_Trabajados = Meses
        End If
        
        Meses_Trabajados = Meses_Trabajados - Meses_No_Trab
        
        '----- Debug -- 17/07/2006
        If buliq_empleado!ternro = 501 Then
           Meses_Trabajados = 12
           Meses_No_Trab = 0
        End If
        Flog.writeline Espacios(Tabulador * 4) & "Meses No Trabajados: " & Meses_No_Trab
        Flog.writeline Espacios(Tabulador * 4) & "Meses Trabajados - No trabajados : " & Meses_Trabajados
        '----- Debug -- 17/07/2006


        If CBool(USA_DEBUG) Then
           Flog.writeline Espacios(Tabulador * 4) & "Meses Trabajados " & Meses_Trabajados
           Flog.writeline Espacios(Tabulador * 4) & "Meses No Trabajados " & Meses_No_Trab
        End If
        
        If HACE_TRAZA Then
           Call InsertarTraza(NroCab, Arr_conceptos(Concepto_Actual).concnro, 0, "Meses Trabajados", Meses_Trabajados)
           Call InsertarTraza(NroCab, Arr_conceptos(Concepto_Actual).concnro, 0, "Meses No Trabajados", Meses_No_Trab)
        End If
        
        If anios < 5 Then
            Porcentaje = 100
            Bonificacion_Basica = Valor_Acumulador
        Else
            If anios >= 10 Then
                Porcentaje = 160
                Bonificacion_Basica = 1.6 * Valor_Acumulador
            Else
                Porcentaje = 130
                Bonificacion_Basica = 1.3 * Valor_Acumulador
            End If
        End If
        
        Bonificacion_Basica = Bonificacion_Basica * Meses_Trabajados / 12
        Bonificacion_Basica1 = Bonificacion_Basica - (Bonificacion_Basica * Penalidad / 100)
        
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 2) & "Penalidad: " & Penalidad
            Flog.writeline Espacios(Tabulador * 2) & "Bonificacion Basica : " & Bonificacion_Basica
            Flog.writeline Espacios(Tabulador * 2) & "Bonificacion Basica1: " & Bonificacion_Basica1
        End If
        
        If Bonificacion_Basica1 < 0 Then
            Bonificacion_Basica1 = 0
        End If
        
        'Busco el convenio del empleado
        StrSql = " SELECT * FROM his_estructura "
        StrSql = StrSql & " INNER JOIN estructura ON his_estructura.estrnro = estructura.estrnro "
        StrSql = StrSql & " WHERE ternro = " & buliq_empleado!ternro
        StrSql = StrSql & " AND his_estructura.tenro = 19 "
        StrSql = StrSql & " AND (htetdesde <= " & ConvFecha(Fecha_Fin_Periodo) & ")"
        StrSql = StrSql & " AND ((" & ConvFecha(Fecha_Fin_Periodo) & " <= htethasta) or (htethasta is null))"
        If rs_Estructura.State = adStateOpen Then rs_Estructura.Close
        OpenRecordset StrSql, rs_Estructura
        If Not rs_Estructura.EOF Then
            rs_Estructura.MoveLast
            NroConvenio = rs_Estructura!estrnro
            Convenio = IIf(Not EsNulo(rs_Estructura!estrcodext), rs_Estructura!estrcodext, "")
        Else
            If CBool(USA_DEBUG) Then
               Flog.writeline Espacios(Tabulador * 2) & "No se encontro el convenio"
            End If
            Convenio = ""
        End If
                
        'If Convenio = "APSS" And Year(Fecha_Bae) >= 1999 Then
        '    Bonificacion_Basica1 = 0
        'End If
        Total357 = Bonificacion_Basica1
        
        If CBool(USA_DEBUG) Then
            Flog.writeline
            Flog.writeline Espacios(Tabulador * 2) & "Antes de aplicar % por años..."
            Flog.writeline
            Flog.writeline Espacios(Tabulador * 2) & "   Años " & anios
            Flog.writeline Espacios(Tabulador * 2) & "   Bonificacion_Basica " & Bonificacion_Basica1
            Flog.writeline Espacios(Tabulador * 2) & "   Bonificacion_Adicional " & Bonificacion_Adicional
        End If
        
        If anios = 0 Then
            Bonificacion_Adicional = Bonificacion_Basica1 * 20 / 100
        Else
            If anios < 5 Then
                Bonificacion_Adicional = Bonificacion_Basica1 * anios * 20 / 100
            Else
                Bonificacion_Adicional = Bonificacion_Basica1
            End If
        End If
        
        If CBool(USA_DEBUG) Then
            Flog.writeline
            Flog.writeline Espacios(Tabulador * 2) & "Antes de aplicar sanciones..."
            Flog.writeline
            Flog.writeline Espacios(Tabulador * 2) & "   Bonificacion_Basica " & Bonificacion_Basica1
            Flog.writeline Espacios(Tabulador * 2) & "   Bonificacion_Adicional " & Bonificacion_Adicional
        End If
        

        Actualizo_OLD = True
        'Busco las sanciones del empleado
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 2) & "Busco las sanciones del empleado"
        End If
        StrSql = "SELECT empleg, sanciones,sancionesold,sancionpronro FROM empleado "
        StrSql = StrSql & " WHERE ternro = " & buliq_empleado!ternro
        If rs_Empleado.State = adStateOpen Then rs_Empleado.Close
        OpenRecordset StrSql, rs_Empleado
        If Not rs_Empleado.EOF Then
            If rs_Empleado!Sancionpronro = buliq_proceso!pronro Then
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 2) & "Ultimo Proceso que actualizó sanciones = a proceso actual. Restauro las sanciones anteriores."
                End If
            
                Sanciones.X = Left(rs_Empleado!Sancionesold, 1)
                Sanciones.Y = Mid(rs_Empleado!Sancionesold, 2, 1)
                Sanciones.Z = Right(rs_Empleado!Sancionesold, 1)
                
                'Restauro la sancion
                StrSql = "UPDATE empleado SET "
                StrSql = StrSql & " sanciones = '" & rs_Empleado!Sancionesold & "'"
                StrSql = StrSql & " ,sancionpronro = 0"
                StrSql = StrSql & " WHERE ternro =" & buliq_empleado!ternro
                objConn.Execute StrSql, , adExecuteNoRecords
                Actualizo_OLD = False
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 2) & "Restauro la sancion OLD"
                End If
            Else
                Sanciones.X = Left(rs_Empleado!Sanciones, 1)
                Sanciones.Y = Mid(rs_Empleado!Sanciones, 2, 1)
                Sanciones.Z = Right(rs_Empleado!Sanciones, 1)
            End If
        Else
            If CBool(USA_DEBUG) Then
               Flog.writeline Espacios(Tabulador * 2) & "No hay sanciones"
            End If
            Sanciones.X = "0"
            Sanciones.Y = "0"
            Sanciones.Z = "0"
        End If
        If CBool(USA_DEBUG) Then
           Flog.writeline Espacios(Tabulador * 2) & "   X= " & Sanciones.X
           Flog.writeline Espacios(Tabulador * 2) & "   Y= " & Sanciones.Y
           Flog.writeline Espacios(Tabulador * 2) & "   Z= " & Sanciones.Z
        End If
        
        If Sanciones.X = "2" Then
            Bonificacion_Adicional = Bonificacion_Adicional * 0.75
        End If
        If Sanciones.Y = "2" Then
            Bonificacion_Adicional = Bonificacion_Adicional * 0.5
        End If
        
        If Tiene_Sancion Then
            Bonificacion_Adicional = 0
            If Sancion_Porcentaje > 20 Then
                Sanciones.Z = "2"
            Else
                Sanciones.Z = "1"
            End If
                        
            'Actualizo las sanciones del empleado
            If Actualizo_OLD Then
                StrSql = "UPDATE empleado SET "
                StrSql = StrSql & " sancionesold = '" & rs_Empleado!Sanciones & "'"
                If Not EsNulo(rs_Empleado!Sancionpronro) Then
                    StrSql = StrSql & " ,sancionpronro = " & rs_Empleado!Sancionpronro
                Else
                    StrSql = StrSql & " ,sancionpronro = 0"
                End If
                StrSql = StrSql & " WHERE ternro =" & buliq_empleado!ternro
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
            
            StrSql = "UPDATE empleado SET "
            StrSql = StrSql & " sancionpronro = " & buliq_proceso!pronro
            StrSql = StrSql & " ,sanciones = '" & Sanciones.X & Sanciones.Y & Sanciones.Z & "'"
            StrSql = StrSql & " WHERE ternro =" & buliq_empleado!ternro
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
        If Anual Then
            'hago el corrimiento
            StrSql = "UPDATE empleado SET "
            StrSql = StrSql & " sancionpronro = " & buliq_proceso!pronro
            'FGZ - 07/04/2007 - La rotacion esta alreves
            'StrSql = StrSql & " ,sanciones = '" & Sanciones.Y & Sanciones.Z & "0'"
            StrSql = StrSql & " ,sanciones = '0" & Sanciones.X & Sanciones.Y & "'"
            StrSql = StrSql & " ,sancionesold = '" & Sanciones.X & Sanciones.Y & Sanciones.Z & "'"
            StrSql = StrSql & " WHERE ternro =" & buliq_empleado!ternro
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
            
        CuotaBae = (((Bonificacion_Basica1 + Bonificacion_Adicional) * 2) / 3) / 9
        
        If CBool(USA_DEBUG) Then
           Flog.writeline Espacios(Tabulador * 4) & "Cuota Bae " & CuotaBae
           Flog.writeline Espacios(Tabulador * 4) & "Bon. Basica " & Bonificacion_Basica1
           Flog.writeline Espacios(Tabulador * 4) & "Bon. Adicional " & Bonificacion_Adicional
        End If
        
        If HACE_TRAZA Then
           Call InsertarTraza(NroCab, Arr_conceptos(Concepto_Actual).concnro, 0, "Cuota Bae ", CuotaBae)
           Call InsertarTraza(NroCab, Arr_conceptos(Concepto_Actual).concnro, 0, "Bon. Basica ", Bonificacion_Basica1)
           Call InsertarTraza(NroCab, Arr_conceptos(Concepto_Actual).concnro, 0, "Bon. Adicional ", Bonificacion_Adicional)
        End If
        
        StrSql = "SELECT * FROM ee_bae "
        StrSql = StrSql & " WHERE ternro = " & buliq_empleado!ternro
        StrSql = StrSql & " AND pronro = " & buliq_proceso!pronro
        StrSql = StrSql & " AND aaaamm70 = " & ConvFecha(Fecha_Fin_Periodo)
        If rs_BAE.State = adStateOpen Then rs_BAE.Close
        OpenRecordset StrSql, rs_BAE
        If rs_BAE.EOF Then
            StrSql = "INSERT INTO ee_bae (ternro,legajo70,aaaamm70, "
            StrSql = StrSql & " jormen70,jordia70,cantidad70,usrmod70,fecmod70,hormod70"
            StrSql = StrSql & " ,penali70,baecuota,bonbasica,bonadicional,pronro"
            StrSql = StrSql & ") VALUES ( "
            StrSql = StrSql & buliq_empleado!ternro
            StrSql = StrSql & "," & Legajo
            StrSql = StrSql & "," & ConvFecha(Fecha_Fin_Periodo)
            StrSql = StrSql & "," & Hs_Jornada_Mensual
            StrSql = StrSql & "," & Hs_Jornada_Diaria
            StrSql = StrSql & "," & 0
            StrSql = StrSql & ",' '"
            StrSql = StrSql & "," & ConvFecha(Date)
            StrSql = StrSql & ",'" & Format(C_Date(Now), "hh:mm:ss") & "'"
            StrSql = StrSql & " ," & Penalidad
            StrSql = StrSql & " ," & CuotaBae
            StrSql = StrSql & " ," & Bonificacion_Basica1
            StrSql = StrSql & " ," & Bonificacion_Adicional
            StrSql = StrSql & " ," & buliq_proceso!pronro
            StrSql = StrSql & " )"
        Else
            'Actualizo ee_bae
            StrSql = "UPDATE ee_bae SET "
            StrSql = StrSql & " baecuota = " & CuotaBae
            StrSql = StrSql & " ,cantidad70 = cantidad70 + " & 0
            StrSql = StrSql & " ,penali70 = " & Penalidad
            StrSql = StrSql & " ,bonbasica = " & Bonificacion_Basica1
            StrSql = StrSql & " ,bonadicional = " & Bonificacion_Adicional
            StrSql = StrSql & " ,fecmod70 = " & ConvFecha(Date)
            StrSql = StrSql & " ,hormod70 = '" & Format(C_Date(Now), "hh:mm:ss") & "'"
            StrSql = StrSql & " WHERE baenro = " & rs_BAE!baenro
        End If
        objConn.Execute StrSql, , adExecuteNoRecords

'cierro todo y libero
If rs.State = adStateOpen Then rs.Close
If rs_Estructura.State = adStateOpen Then rs_Estructura.Close
If rs_Fases.State = adStateOpen Then rs_Fases.Close
If rs_Confrep.State = adStateOpen Then rs_Confrep.Close
If rs_Empleado.State = adStateOpen Then rs_Empleado.Close
If rs_BAE.State = adStateOpen Then rs_BAE.Close
If rs_Acu.State = adStateOpen Then rs_Acu.Close

Set rs = Nothing
Set rs_Estructura = Nothing
Set rs_Fases = Nothing
Set rs_Confrep = Nothing
Set rs_Empleado = Nothing
Set rs_BAE = Nothing
Set rs_Acu = Nothing
End Sub


Public Sub bus_Anti_G(ByRef antdia As Integer, ByRef antmes As Integer, ByRef antanio As Integer)
' ---------------------------------------------------------------------------------------------
' Descripcion: Busca la Antiguedad de un Empleado, dependiendo de si es con tope o no,
'               o si es a una fecha o no. ganti0.p
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Tope As Integer         ' 1 - con tope
                            ' 2 - sin tope
                            
Dim Fecha As Date           ' Fecha Hasta
Dim Tipo_Fase As Integer    ' 1 - Sueldo
                            ' 2 - Indemnisacion
                            ' 3 - Vacaciones
                            ' 4 - Real
                            ' 5 - Desde la Fecha de Alta reconocida (sin Fases)
                            
Dim Hasta As Integer        ' 1 - A fin de Mes
                            ' 2 - A la fecha
                            ' 3 - A la fecha de baja
                            ' 4 - A Fecha de baja prevista
                            ' 5 - A Fin de año
                            
' estao es nuevo (10/11/2003)
Dim Cant_Tope As Integer    ' la cantidad de tope
Dim Resultado As Integer    ' 1 - en dias
                            ' 2 - en meses
                            ' 3 - en años
                            
Dim inicioMes As Boolean    ' Controla si tiene que tomar los extremos del mes para calcular la antiguedad

'Dim antdia As Integer
'Dim antmes As Integer
'Dim antanio As Integer
Dim q As Integer

Dim FechaAux As Date

'Dim Param_cur As New ADODB.Recordset
Dim rs_Fases  As New ADODB.Recordset

    Bien = False
    Valor = 0
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda " & NroProg
    End If
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        Tope = CInt(Arr_Programa(NroProg).Auxint1)
        Hasta = CInt(Arr_Programa(NroProg).Auxint2)
        Cant_Tope = CInt(Arr_Programa(NroProg).Auxint3)
        
        If Not EsNulo(Arr_Programa(NroProg).Auxchar1) Then
            Fecha = C_Date(Arr_Programa(NroProg).Auxchar1)
        End If
        
        Tipo_Fase = CInt(Arr_Programa(NroProg).Auxint4)
        Resultado = CInt(Arr_Programa(NroProg).Auxint5)
        
        inicioMes = CBool(Arr_Programa(NroProg).Auxlog1)
        
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busca la Antiguedad de un Empleado " & IIf(Tope = 1, "con tope ", "sin tope ")
            Select Case Hasta
                Case 1:
                    StrLog = "a fin de mes "
                Case 2:
                    StrLog = "a la fecha " & Fecha
                Case 3:
                    StrLog = "a la fecha de baja de la fase "
                    Select Case Tipo_Fase
                        Case 1:
                            StrLog = StrLog & " Sueldo "
                        Case 2:
                            StrLog = StrLog & " Indemnizacion "
                        Case 3:
                            StrLog = StrLog & " Vacacion "
                        Case 4:
                            StrLog = StrLog & " real "
                        Case 5:
                            StrLog = StrLog & " Fecha de alta reconocida "
                    End Select
                Case 4:
                    StrLog = "a la fecha de baja prevista "
                Case 5:
                    StrLog = "a la finde año "
            End Select
            Flog.writeline Espacios(Tabulador * 4) & StrLog
            Select Case Resultado
                Case 1:
                    Flog.writeline Espacios(Tabulador * 4) & "el resultado en dias "
                Case 2:
                    Flog.writeline Espacios(Tabulador * 4) & "el resultado en meses "
                Case 3:
                    Flog.writeline Espacios(Tabulador * 4) & "el resultado en años "
            End Select
        End If
        
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontró la Busqueda " & NroProg
        End If
        Exit Sub
    End If

    Select Case Tipo_Fase
    Case 1: 'Sueldo
            Select Case Hasta
            Case 1: 'Fin de mes
                If buliq_proceso!tprocnro = 9 Then  'Quincenal
                   FechaAux = C_Date("15/" & buliq_periodo!pliqmes & "/" & buliq_periodo!pliqanio)
                Else
                    If buliq_periodo!pliqmes = 12 Then
                        FechaAux = C_Date("1/1/" & buliq_periodo!pliqanio + 1) - 1
                    Else
                        FechaAux = C_Date("01/" & buliq_periodo!pliqmes + 1 & "/" & buliq_periodo!pliqanio) - 1
                    End If
                End If
                Call bus_Antiguedad_G("SUELDO", FechaAux, antdia, antmes, antanio, q, inicioMes)
            Case 2: 'A la Fecha
                Call bus_Antiguedad_G("SUELDO", Fecha, antdia, antmes, antanio, q, inicioMes)
            Case 3: 'A fecha de Baja
                StrSql = "SELECT * FROM fases WHERE estado = 0 AND empleado = " & buliq_empleado!ternro & _
                         " AND sueldo = -1 " & _
                         " AND not altfec is null " & _
                         " AND not bajfec is null " & _
                         " ORDER BY altfec "
                OpenRecordset StrSql, rs_Fases
                If Not rs_Fases.EOF Then
                    rs_Fases.MoveLast
                    FechaAux = rs_Fases!bajfec
                Else
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "No se encontro ninguna fase cerrada "
                    End If
                    Exit Sub
                End If
                Call bus_Antiguedad_G("SUELDO", FechaAux, antdia, antmes, antanio, q, inicioMes)
            Case 4: 'A fecha de baja prevista
                If Not EsNulo(buliq_empleado!empfbajaprev) Then
                    FechaAux = buliq_empleado!empfbajaprev
                    Call bus_Antiguedad_G("SUELDO", FechaAux, antdia, antmes, antanio, q, inicioMes)
                Else
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "Fecha de baja prevista nula "
                    End If
                    Exit Sub
                End If
            Case 5: 'A fin de año
                    FechaAux = C_Date("31/12/" & buliq_periodo!pliqanio)
                    Call bus_Antiguedad_G("SUELDO", FechaAux, antdia, antmes, antanio, q, inicioMes)
            Case 6: 'Al primer dia del siguiente mes de liquidacion
                If buliq_periodo!pliqmes = 12 Then
                    FechaAux = C_Date("1/1/" & buliq_periodo!pliqanio + 1)
                Else
                    FechaAux = C_Date("01/" & buliq_periodo!pliqmes + 1 & "/" & buliq_periodo!pliqanio)
                End If
                Call bus_Antiguedad_G("SUELDO", FechaAux, antdia, antmes, antanio, q, inicioMes)
            End Select
    Case 2: 'Indemnización
            Select Case Hasta
            Case 1: 'Fin de mes
                If buliq_proceso!tprocnro = 9 Then  'Quincenal
                   FechaAux = C_Date("15/" & buliq_periodo!pliqmes & "/" & buliq_periodo!pliqanio)
                Else
                    If buliq_periodo!pliqmes = 12 Then
                        FechaAux = C_Date("1/1/" & buliq_periodo!pliqanio + 1) - 1
                    Else
                        FechaAux = C_Date("01/" & buliq_periodo!pliqmes + 1 & "/" & buliq_periodo!pliqanio) - 1
                    End If
                End If
                Call bus_Antiguedad_G("INDEMNIZACION", FechaAux, antdia, antmes, antanio, q, inicioMes)
            Case 2: 'A la Fecha
                Call bus_Antiguedad_G("INDEMNIZACION", Fecha, antdia, antmes, antanio, q)
            Case 3: 'A fecha de Baja
                StrSql = "SELECT * FROM fases WHERE estado = 0 AND empleado = " & buliq_empleado!ternro & _
                         " AND indemnizacion = -1 " & _
                         " AND not altfec is null " & _
                         " AND not bajfec is null " & _
                         " ORDER BY altfec "
                OpenRecordset StrSql, rs_Fases
                If Not rs_Fases.EOF Then
                    rs_Fases.MoveLast
                    FechaAux = rs_Fases!bajfec
                Else
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "No se encontro ninguna fase cerrada "
                    End If
                    Exit Sub
                End If
                Call bus_Antiguedad_G("INDEMNIZACION", FechaAux, antdia, antmes, antanio, q, inicioMes)
            Case 4: 'A fecha de baja prevista
                If Not EsNulo(buliq_empleado!empfbajaprev) Then
                    FechaAux = buliq_empleado!empfbajaprev
                    Call bus_Antiguedad_G("INDEMNIZACION", FechaAux, antdia, antmes, antanio, q, inicioMes)
                Else
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "Fecha de baja prevista nula "
                    End If
                    Exit Sub
                End If
            Case 5: 'A fin de año
                    FechaAux = C_Date("31/12/" & buliq_periodo!pliqanio)
                    Call bus_Antiguedad_G("INDEMNIZACION", FechaAux, antdia, antmes, antanio, q, inicioMes)
            Case 6: 'Al primer dia del siguiente mes de liquidacion
                If buliq_periodo!pliqmes = 12 Then
                    FechaAux = C_Date("1/1/" & buliq_periodo!pliqanio + 1)
                Else
                    FechaAux = C_Date("01/" & buliq_periodo!pliqmes + 1 & "/" & buliq_periodo!pliqanio)
                End If
                Call bus_Antiguedad_G("SUELDO", FechaAux, antdia, antmes, antanio, q, inicioMes)
            End Select
    Case 3: 'Vacaciones
            Select Case Hasta
            Case 1: 'Fin de mes
                If buliq_proceso!tprocnro = 9 Then  'Quincenal
                   FechaAux = C_Date("15/" & buliq_periodo!pliqmes & "/" & buliq_periodo!pliqanio)
                Else
                    If buliq_periodo!pliqmes = 12 Then
                        FechaAux = C_Date("1/1/" & buliq_periodo!pliqanio + 1) - 1
                    Else
                        FechaAux = C_Date("01/" & buliq_periodo!pliqmes + 1 & "/" & buliq_periodo!pliqanio) - 1
                    End If
                End If
                Call bus_Antiguedad_G("VACACIONES", FechaAux, antdia, antmes, antanio, q, inicioMes)
            Case 2: 'A la Fecha
                Call bus_Antiguedad_G("VACACIONES", Fecha, antdia, antmes, antanio, q, inicioMes)
            Case 3: 'A fecha de Baja
                StrSql = "SELECT * FROM fases WHERE estado = 0 AND empleado = " & buliq_empleado!ternro & _
                         " AND vacaciones = -1 " & _
                         " AND not altfec is null " & _
                         " AND not bajfec is null " & _
                         " ORDER BY altfec "
                OpenRecordset StrSql, rs_Fases
                If Not rs_Fases.EOF Then
                    rs_Fases.MoveLast
                    FechaAux = rs_Fases!bajfec
                Else
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "No se encontro ninguna fase cerrada "
                    End If
                    Exit Sub
                End If
                Call bus_Antiguedad_G("VACACIONES", FechaAux, antdia, antmes, antanio, q, inicioMes)
            Case 4: 'A fecha de baja prevista
                If Not EsNulo(buliq_empleado!empfbajaprev) Then
                    FechaAux = buliq_empleado!empfbajaprev
                    Call bus_Antiguedad_G("VACACIONES", FechaAux, antdia, antmes, antanio, q, inicioMes)
                Else
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "Fecha de baja prevista nula "
                    End If
                    Exit Sub
                End If
            Case 5: 'A fin de año
                    FechaAux = C_Date("31/12/" & buliq_periodo!pliqanio)
                    Call bus_Antiguedad_G("VACACIONES", FechaAux, antdia, antmes, antanio, q, inicioMes)
            Case 6: 'Al primer dia del siguiente mes de liquidacion
                If buliq_periodo!pliqmes = 12 Then
                    FechaAux = C_Date("1/1/" & buliq_periodo!pliqanio + 1)
                Else
                    FechaAux = C_Date("01/" & buliq_periodo!pliqmes + 1 & "/" & buliq_periodo!pliqanio)
                End If
                Call bus_Antiguedad_G("SUELDO", FechaAux, antdia, antmes, antanio, q, inicioMes)
            End Select
    Case 4: 'Real
            Select Case Hasta
            Case 1: 'Fin de mes
                If buliq_proceso!tprocnro = 9 Then  'Quincenal
                   FechaAux = C_Date("15/" & buliq_periodo!pliqmes & "/" & buliq_periodo!pliqanio)
                Else
                    If buliq_periodo!pliqmes = 12 Then
                        FechaAux = C_Date("1/1/" & buliq_periodo!pliqanio + 1) - 1
                    Else
                        FechaAux = C_Date("01/" & buliq_periodo!pliqmes + 1 & "/" & buliq_periodo!pliqanio) - 1
                    End If
                End If
                Call bus_Antiguedad_G("REAL", FechaAux, antdia, antmes, antanio, q, inicioMes)
            Case 2: 'A la Fecha
                Call bus_Antiguedad_G("REAL", Fecha, antdia, antmes, antanio, q, inicioMes)
            Case 3: 'A fecha de Baja
                StrSql = "SELECT * FROM fases WHERE estado = 0 AND empleado = " & buliq_empleado!ternro & _
                         " AND real = -1 " & _
                         " AND not altfec is null " & _
                         " AND not bajfec is null " & _
                         " ORDER BY altfec "
                OpenRecordset StrSql, rs_Fases
                If Not rs_Fases.EOF Then
                    rs_Fases.MoveLast
                    FechaAux = rs_Fases!bajfec
                Else
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "No se encontro ninguna fase cerrada "
                    End If
                    Exit Sub
                End If
                Call bus_Antiguedad_G("REAL", FechaAux, antdia, antmes, antanio, q, inicioMes)
            Case 4: 'A fecha de baja prevista
                If Not EsNulo(buliq_empleado!empfbajaprev) Then
                    FechaAux = buliq_empleado!empfbajaprev
                    Call bus_Antiguedad_G("REAL", FechaAux, antdia, antmes, antanio, q, inicioMes)
                Else
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "Fecha de baja prevista nula "
                    End If
                    Exit Sub
                End If
            Case 5: 'A fin de año
                    FechaAux = C_Date("31/12/" & buliq_periodo!pliqanio)
                    Call bus_Antiguedad_G("REAL", FechaAux, antdia, antmes, antanio, q, inicioMes)
            Case 6: 'Al primer dia del siguiente mes de liquidacion
                If buliq_periodo!pliqmes = 12 Then
                    FechaAux = C_Date("1/1/" & buliq_periodo!pliqanio + 1)
                Else
                    FechaAux = C_Date("01/" & buliq_periodo!pliqmes + 1 & "/" & buliq_periodo!pliqanio)
                End If
                Call bus_Antiguedad_G("SUELDO", FechaAux, antdia, antmes, antanio, q, inicioMes)
            End Select
    Case 5: 'Desde la fecha de alta reconocida
            Select Case Hasta
            Case 1: 'Fin de mes
                If buliq_proceso!tprocnro = 9 Then  'Quincenal
                   FechaAux = C_Date("15/" & buliq_periodo!pliqmes & "/" & buliq_periodo!pliqanio)
                Else
                    If buliq_periodo!pliqmes = 12 Then
                        FechaAux = C_Date("1/1/" & buliq_periodo!pliqanio + 1) - 1
                    Else
                        FechaAux = C_Date("01/" & buliq_periodo!pliqmes + 1 & "/" & buliq_periodo!pliqanio) - 1
                    End If
                End If
            Case 2: 'A la Fecha
                FechaAux = Fecha
            Case 3: 'A fecha de Baja
                StrSql = "SELECT * FROM fases WHERE estado = 0 AND empleado = " & buliq_empleado!ternro & _
                         " AND sueldo = -1 " & _
                         " AND not altfec is null " & _
                         " AND not bajfec is null " & _
                         " ORDER BY altfec "
                OpenRecordset StrSql, rs_Fases
                If Not rs_Fases.EOF Then
                    rs_Fases.MoveLast
                    FechaAux = rs_Fases!bajfec
                Else
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "No se encontro ninguna fase cerrada "
                    End If
                    Exit Sub
                End If
            Case 4: 'A fecha de baja prevista
                If Not EsNulo(buliq_empleado!empfbajaprev) Then
                    FechaAux = buliq_empleado!empfbajaprev
                Else
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "Fecha de baja prevista nula "
                    End If
                    Exit Sub
                End If
            Case 5: 'A fin de año
                    FechaAux = C_Date("31/12/" & buliq_periodo!pliqanio)
            Case 6: 'Al primer dia del siguiente mes de liquidacion
                If buliq_periodo!pliqmes = 12 Then
                    FechaAux = C_Date("1/1/" & buliq_periodo!pliqanio + 1)
                Else
                    FechaAux = C_Date("01/" & buliq_periodo!pliqmes + 1 & "/" & buliq_periodo!pliqanio)
                End If
                Call bus_Antiguedad_G("SUELDO", FechaAux, antdia, antmes, antanio, q, inicioMes)
            End Select
            Call bus_Antiguedad_FechaAltaReconocida(FechaAux, antdia, antmes, antanio, q, inicioMes)
    End Select
    
    ' FGZ
    ' 10/1/2003
    ' esto es nuevo
    Select Case Resultado
    Case 1: ' En dias
        Valor = antdia + antmes * 30 + antanio * 360
    Case 2: ' En meses
        Valor = antmes + antanio * 12
    Case 3: ' en años
        Valor = antanio
    End Select
         
    If Tope = 1 Then
        If Valor > Cant_Tope Then
            Valor = Cant_Tope
        End If
    End If
         
    Bien = True
    
' cierro todo y libero
    'If Param_cur.State = adStateOpen Then Param_cur.Close
    'Set Param_cur = Nothing
End Sub

Public Sub bus_Antiguedad_G(ByVal TipoAnt As String, ByVal FechaFin As Date, ByRef dia As Integer, ByRef mes As Integer, ByRef Anio As Integer, ByRef DiasHabiles As Integer, Optional ByVal inicioMes As Boolean = False)
' ---------------------------------------------------------------------------------------------
' Descripcion: Calcula la antiguedad al dia de hoy de un empleado en :
'              dias hábiles(si es menor que un año) o en dias, meses y años en caso contrario.
'              antiguedad.p
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Aux1 As Long
Dim Aux2 As Long
Dim Aux3 As Long
Dim fecalta As Date
Dim fecbaja As Date
Dim seguir As Date
Dim q As Integer

Dim NombreCampo As String

Dim rs_Fases As New ADODB.Recordset


NombreCampo = ""
DiasHabiles = 0

Select Case UCase(TipoAnt)
Case "SUELDO":
    NombreCampo = "sueldo"
Case "INDEMNIZACION":
    NombreCampo = "indemnizacion"
Case "VACACIONES":
    NombreCampo = "vacaciones"
Case "REAL":
    NombreCampo = "real"
Case Else
End Select

dia = 0
mes = 0
Anio = 0

'StrSql = "SELECT * FROM fases WHERE empleado = " & buliq_empleado!ternro & _
'         " AND " & NombreCampo & " = -1 "
'OpenRecordset StrSql, rs_Fases

' FGZ -27/01/2004
StrSql = "SELECT * FROM fases WHERE empleado = " & buliq_empleado!ternro & _
         " AND " & NombreCampo & " = -1 " & _
         " AND not altfec is null " & _
         " AND not (bajfec is null AND estado = 0)" & _
         " AND altfec <= " & ConvFecha(Fecha_Fin)
OpenRecordset StrSql, rs_Fases

Do While Not rs_Fases.EOF
'    If (EsNulo(rs_Fases!altfec)) Or (EsNulo(rs_Fases!bajfec) And rs_Fases!estado = 0) Or (rs_Fases!altfec >= FechaFin) Then
'        GoTo siguiente
'    Else
        fecalta = rs_Fases!altfec
'    End If
    If inicioMes Then
       If Day(C_Date(fecalta)) <= 15 Then
          fecalta = C_Date("01" & "/" & Month(C_Date(fecalta)) & "/" & Year(C_Date(fecalta)))
       Else
         If Month(C_Date(fecalta)) = 12 Then
            fecalta = C_Date("01/01/" & (Year(C_Date(fecalta)) + 1))
         Else
            fecalta = C_Date("01" & "/" & (Month(C_Date(fecalta)) + 1) & "/" & Year(C_Date(fecalta)))
         End If
       End If
    End If
    
    ' Verificar si se trata de un registro completo (alta/baja) o solo de un alta
    If rs_Fases!estado Then
        fecbaja = FechaFin ' solo es un alta, tomar el fecha-fin
    ElseIf rs_Fases!bajfec <= FechaFin Then
        fecbaja = rs_Fases!bajfec  ' se trata de un registro completo
    Else
        fecbaja = FechaFin ' hasta la fecha ingresada
    End If
    
'    Call Dif_Fechas(fecalta, fecbaja, aux1, aux2, aux3)
'    Dia = Dia + aux1
'    Mes = Mes + aux2 + Int(Dia / 30)
'    Anio = Anio + aux3 + Int(Mes / 12)
'    Dia = Dia Mod 30
'    Mes = Mes Mod 12
        
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "fase de " & fecalta & " a " & fecbaja
    End If
        
    Call DIF_FECHAS2(fecalta, fecbaja, Aux1, Aux2, Aux3)
    If rs_Fases.RecordCount = 1 Then
        dia = dia + Aux1
        mes = mes + Aux2 '+ Int(dia / 30)
        Anio = Anio + Aux3 + Int(mes / 12)
        dia = dia Mod 30
        mes = mes Mod 12
    Else
        dia = dia + Aux1
        mes = mes + Aux2 '+ Int(dia / 30)
        Anio = Anio + Aux3 + Int(mes / 12)
        dia = dia Mod 30
        mes = mes Mod 12
    End If
        
    If Anio = 0 Then
        Call DiasTrab(fecalta, fecbaja, Aux1)
        DiasHabiles = DiasHabiles + Aux1
    End If
    
siguiente:
    rs_Fases.MoveNext
Loop

If Anio <> 0 Then
    DiasHabiles = 0
End If


' Cierro todo y Libero
If rs_Fases.State = adStateOpen Then rs_Fases.Close
Set rs_Fases = Nothing

End Sub


Public Sub bus_Acum3_G()
' ---------------------------------------------------------------------------------------------
' Descripcion: Acum.Mens.Meses Fijos. gacum3.p
'              Obtencion del Acumulador  1 - Semestral    a) Liq Actual
'                                                         b) Liq. Anterior
'
'                                        2 - Anual        a) Liq Actual
'                                                         b) Liq. Anterior
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion: Version para Glencore. Cambia am_prom por am_prom1
' ---------------------------------------------------------------------------------------------
Dim nroAcu As Long          ' Nro de Acumulador
Dim Incluye As Integer      ' 0  - No Incluye
                            ' 1  - Proceso Actual
                            ' 2  - Periodo Actual con Proceso actual
                            ' 3  - Periodo Actual sin proceso actual
                            ' 4  - Anterior
Dim Monto As Boolean        ' True  - MOnto
                            ' False - Cantidad
Dim Opcion As Long          ' 1 - Sumatoria
                            ' 2 - Maximo
                            ' 3 - Promedio
                            ' 4 - Promedio sin 0
                            ' 5 - Minimo
Dim Semestral As Boolean    ' True  = Semestral
                            ' False = Anual
Dim Con_Fases As Boolean    ' True  - Calculo con Fases
                            ' False - Calculo sin Fases
                            
Dim MesDeInicioSemestre As Integer 'Mes de Inicio (en caso de que sea Semestral)

Dim CantMeses As Integer
Dim MesHasta As Integer
Dim AnioHasta As Integer
Dim Cantidad As Double
Dim CantAnios As Integer
Dim BusquedaCompleta As Boolean
Dim DividePor As Integer
Dim UsaActual As Boolean
Dim UsaPeriodoActual As Boolean
    
    Bien = False
    Valor = 0
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda " & NroProg
    End If
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        nroAcu = Arr_Programa(NroProg).Auxint1
        Opcion = Arr_Programa(NroProg).Auxint2
        If Opcion = 3 Then
            If Not EsNulo(Arr_Programa(NroProg).Auxint4) Then
                BusquedaCompleta = IIf(Arr_Programa(NroProg).Auxint4 = 0, True, False)
            Else
                BusquedaCompleta = False
            End If
        End If
        Semestral = CBool(Arr_Programa(NroProg).Auxlog1)
        'Nuevo
        'If Semestral Then
            MesDeInicioSemestre = Arr_Programa(NroProg).Auxchar1
        'End If
        'FGZ - 26/07/2005
        If Not CLng(Arr_Programa(NroProg).Auxchar1) = 0 Then
            MesDeInicioSemestre = Arr_Programa(NroProg).Auxchar1
        Else
            If Semestral Then
                If buliq_periodo!pliqmes > 6 Then
                    MesDeInicioSemestre = 7 'segundo semestre
                Else
                    MesDeInicioSemestre = 1 'primer semestre
                End If
            Else
                MesDeInicioSemestre = 1 'primer semestre
            End If
        End If
        'Nuevo
        Incluye = Arr_Programa(NroProg).Auxint3
        Monto = CBool(Arr_Programa(NroProg).Auxlog3)
        Con_Fases = CBool(Arr_Programa(NroProg).Auxlog4)
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontró la Busqueda " & NroProg
        End If
        Exit Sub
    End If


If Semestral Then
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Semestral "
    End If
    Select Case Incluye
    Case 0: 'Semestre actual y no icluye ni periodo ni proceso
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Semestre actual y no icluye ni periodo ni proceso "
        End If
        If buliq_periodo!pliqmes > 6 Then
            If MesDeInicioSemestre <= buliq_periodo!pliqmes Then
                CantMeses = buliq_periodo!pliqmes - MesDeInicioSemestre
            Else
                CantMeses = buliq_periodo!pliqmes - 1
            End If
            MesHasta = buliq_periodo!pliqmes - 1
            AnioHasta = buliq_periodo!pliqanio
        Else
            If MesDeInicioSemestre <= buliq_periodo!pliqmes Then
                CantMeses = buliq_periodo!pliqmes - MesDeInicioSemestre
            Else
                CantMeses = buliq_periodo!pliqmes - 1
            End If
            MesHasta = buliq_periodo!pliqmes - 1
            AnioHasta = buliq_periodo!pliqanio
        End If
        If MesDeInicioSemestre >= 6 Then
            CantMeses = CantMeses + IIf(MesDeInicioSemestre > buliq_periodo!pliqmes, (12 - MesDeInicioSemestre) + 1, (6 - MesDeInicioSemestre) + 1)
        Else
            CantMeses = CantMeses + IIf(MesDeInicioSemestre > buliq_periodo!pliqmes, (6 - MesDeInicioSemestre) + 1, 0)
        End If
        If MesDeInicioSemestre = buliq_periodo!pliqmes Then
            CantMeses = 0
        End If
        UsaActual = False
        UsaPeriodoActual = False
    Case 1: 'Semestre actual y Incluye Proceso Actual y no el priodo
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Semestre actual y Incluye Proceso Actual y no el priodo "
        End If
        If buliq_periodo!pliqmes > 6 Then
            If MesDeInicioSemestre <= buliq_periodo!pliqmes Then
                CantMeses = buliq_periodo!pliqmes - MesDeInicioSemestre
            Else
                CantMeses = buliq_periodo!pliqmes - 1
            End If
            MesHasta = buliq_periodo!pliqmes - 1
            AnioHasta = buliq_periodo!pliqanio
        Else
            If MesDeInicioSemestre <= buliq_periodo!pliqmes Then
                CantMeses = buliq_periodo!pliqmes - MesDeInicioSemestre
            Else
                CantMeses = buliq_periodo!pliqmes - 1
            End If
            MesHasta = buliq_periodo!pliqmes - 1
            AnioHasta = buliq_periodo!pliqanio
        End If
        If MesDeInicioSemestre >= 6 Then
            CantMeses = CantMeses + IIf(MesDeInicioSemestre > buliq_periodo!pliqmes, (12 - MesDeInicioSemestre) + 1, 0)
        Else
            CantMeses = CantMeses + IIf(MesDeInicioSemestre > buliq_periodo!pliqmes, (6 - MesDeInicioSemestre) + 1, 0)
        End If
        If MesDeInicioSemestre = buliq_periodo!pliqmes Then
            CantMeses = 0
        End If
        UsaActual = True
        UsaPeriodoActual = False
    Case 2: 'Semestre actual y Incluye Periodo Actual con proceso actual
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Semestre actual y Incluye Periodo Actual con proceso actual "
        End If
        If buliq_periodo!pliqmes > 6 Then
            If MesDeInicioSemestre <= buliq_periodo!pliqmes Then
                CantMeses = buliq_periodo!pliqmes - MesDeInicioSemestre + 1
            Else
                CantMeses = buliq_periodo!pliqmes
            End If
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
        Else
            If MesDeInicioSemestre <= buliq_periodo!pliqmes Then
                CantMeses = buliq_periodo!pliqmes - MesDeInicioSemestre + 1
            Else
                CantMeses = buliq_periodo!pliqmes
            End If
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
        End If
        If MesDeInicioSemestre >= 6 Then
            CantMeses = CantMeses + IIf(MesDeInicioSemestre > buliq_periodo!pliqmes, (12 - MesDeInicioSemestre) + 1, 0)
        Else
            CantMeses = CantMeses + IIf(MesDeInicioSemestre > buliq_periodo!pliqmes, (6 - MesDeInicioSemestre) + 1, 0)
        End If
        If MesDeInicioSemestre = buliq_periodo!pliqmes Then
            CantMeses = 1
        End If
        UsaActual = True
        UsaPeriodoActual = True
    Case 3: 'Semestre actual y Incluye Periodo Actual sin Proceso Actual
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Semestre actual y Incluye Periodo Actual sin Proceso Actual "
        End If
        If buliq_periodo!pliqmes > 6 Then
            CantMeses = buliq_periodo!pliqmes - 6
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
        Else
            CantMeses = buliq_periodo!pliqmes
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
        End If
        If MesDeInicioSemestre >= 6 Then
            CantMeses = CantMeses + IIf(MesDeInicioSemestre > buliq_periodo!pliqmes, (12 - MesDeInicioSemestre) + 1, 0)
        Else
            CantMeses = CantMeses + IIf(MesDeInicioSemestre > buliq_periodo!pliqmes, (6 - MesDeInicioSemestre) + 1, 0)
        End If
        If MesDeInicioSemestre = buliq_periodo!pliqmes Then
            CantMeses = 1
        End If
        UsaActual = False
        UsaPeriodoActual = True
    Case 4: 'Semestre Anterior
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Semestre Anterior "
        End If
        If buliq_periodo!pliqmes > 6 Then
            CantMeses = 6
            MesHasta = MesDeInicioSemestre - 1
            AnioHasta = buliq_periodo!pliqanio
        Else
            CantMeses = 6
            MesHasta = MesDeInicioSemestre - 1
            AnioHasta = buliq_periodo!pliqanio - 1
        End If
'        If MesDeInicioSemestre >= 6 Then
'            CantMeses = CantMeses + IIf(MesDeInicioSemestre > buliq_periodo!pliqmes, (12 - MesDeInicioSemestre) + 1, 0)
'        Else
'            CantMeses = CantMeses + IIf(MesDeInicioSemestre > buliq_periodo!pliqmes, (6 - MesDeInicioSemestre) + 1, 0)
'        End If
        UsaActual = False
        UsaPeriodoActual = False
    End Select
    If Opcion = 3 And BusquedaCompleta Then
        DividePor = 6
    Else
        If MesDeInicioSemestre >= 6 Then
            DividePor = CantMeses
        Else
            DividePor = CantMeses
        End If
    End If
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Divide Por " & DividePor
    End If
    
Else ' Anual
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Anual "
    End If
    Select Case Incluye
    Case 0: ' Año Actual y No incluye periodo ni proceso actual
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Año Actual y No incluye periodo ni proceso actual "
        End If
        If buliq_periodo!pliqmes > 6 Then
            If MesDeInicioSemestre > buliq_periodo!pliqmes Then
                CantMeses = buliq_periodo!pliqmes - 1
            Else
                CantMeses = buliq_periodo!pliqmes - 1 - 12
            End If
            MesHasta = buliq_periodo!pliqmes - 1
            AnioHasta = buliq_periodo!pliqanio
        Else
            If MesDeInicioSemestre > buliq_periodo!pliqmes Then
                CantMeses = buliq_periodo!pliqmes - 1
            Else
                CantMeses = buliq_periodo!pliqmes - 1 - 12
            End If
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
        End If
        If MesDeInicioSemestre >= 6 Then
            CantMeses = CantMeses + IIf(MesDeInicioSemestre >= buliq_periodo!pliqmes, (12 - MesDeInicioSemestre) + 1, (12 - MesDeInicioSemestre) + 1)
        Else
            CantMeses = CantMeses + IIf(MesDeInicioSemestre >= buliq_periodo!pliqmes, (12 - MesDeInicioSemestre), (12 - MesDeInicioSemestre) + 1)
        End If
        If MesDeInicioSemestre = buliq_periodo!pliqmes Then
            CantMeses = 0
        End If
        UsaActual = False
        UsaPeriodoActual = False
    Case 1: 'Año actual y Incluye Proceso Actual y no el periodo actual
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Año actual y Incluye Proceso Actual y no el periodo actual "
        End If
        If buliq_periodo!pliqmes >= 6 Then
            If MesDeInicioSemestre > buliq_periodo!pliqmes Then
                CantMeses = buliq_periodo!pliqmes - 1
            Else
                CantMeses = buliq_periodo!pliqmes - 1 - 12
            End If
            MesHasta = buliq_periodo!pliqmes - 1
            AnioHasta = buliq_periodo!pliqanio
        Else
            If MesDeInicioSemestre > buliq_periodo!pliqmes Then
                CantMeses = buliq_periodo!pliqmes - 1
            Else
                CantMeses = buliq_periodo!pliqmes - 1 - 12
            End If
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
        End If
        If MesDeInicioSemestre >= 6 Then
            CantMeses = CantMeses + IIf(MesDeInicioSemestre >= buliq_periodo!pliqmes, (12 - MesDeInicioSemestre) + 1, (12 - MesDeInicioSemestre) + 1)
        Else
            CantMeses = CantMeses + IIf(MesDeInicioSemestre >= buliq_periodo!pliqmes, (12 - MesDeInicioSemestre), (12 - MesDeInicioSemestre) + 1)
        End If
        If MesDeInicioSemestre = buliq_periodo!pliqmes Then
            CantMeses = 0
        End If
        UsaActual = True
        UsaPeriodoActual = False
    Case 2: 'Año actual y Incluye Periodo Actual con proceso actual
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Año actual y Incluye Periodo Actual con proceso actual "
        End If
        If buliq_periodo!pliqmes >= 6 Then
            If MesDeInicioSemestre > buliq_periodo!pliqmes Then
                CantMeses = buliq_periodo!pliqmes
            Else
                CantMeses = buliq_periodo!pliqmes - 12
            End If
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
        Else
            If MesDeInicioSemestre > buliq_periodo!pliqmes Then
                CantMeses = buliq_periodo!pliqmes
            Else
                CantMeses = buliq_periodo!pliqmes - 12
            End If
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
        End If
        If MesDeInicioSemestre >= 6 Then
            CantMeses = CantMeses + IIf(MesDeInicioSemestre >= buliq_periodo!pliqmes, (12 - MesDeInicioSemestre) + 1, (12 - MesDeInicioSemestre) + 1)
        Else
            CantMeses = CantMeses + IIf(MesDeInicioSemestre > buliq_periodo!pliqmes, (12 - MesDeInicioSemestre), (12 - MesDeInicioSemestre) + 1)
        End If
        If MesDeInicioSemestre = buliq_periodo!pliqmes Then
            CantMeses = 1
        End If
        UsaActual = True
        UsaPeriodoActual = True
    Case 3: 'Año actual y Incluye Periodo Actual sin proceso actual
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Año actual y Incluye Periodo Actual sin proceso actual "
        End If
        If buliq_periodo!pliqmes >= 6 Then
            If MesDeInicioSemestre > buliq_periodo!pliqmes Then
                CantMeses = buliq_periodo!pliqmes
            Else
                CantMeses = buliq_periodo!pliqmes - 12
            End If
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
        Else
            CantMeses = buliq_periodo!pliqmes
            MesHasta = buliq_periodo!pliqmes
            AnioHasta = buliq_periodo!pliqanio
        End If
        If MesDeInicioSemestre >= 6 Then
            CantMeses = CantMeses + IIf(MesDeInicioSemestre >= buliq_periodo!pliqmes, (12 - MesDeInicioSemestre) + 1, (12 - MesDeInicioSemestre) + 1)
        Else
            CantMeses = CantMeses + IIf(MesDeInicioSemestre > buliq_periodo!pliqmes, (12 - MesDeInicioSemestre) + 1, (12 - MesDeInicioSemestre) + 1)
        End If
        If MesDeInicioSemestre = buliq_periodo!pliqmes Then
            CantMeses = 1
        End If
        UsaActual = False
        UsaPeriodoActual = True
    Case 4: 'Año Anterior
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Año anterior "
        End If
        CantMeses = 12
        If MesDeInicioSemestre = 1 Then
            MesHasta = 12
        Else
            MesHasta = MesDeInicioSemestre - 1
        End If
        AnioHasta = buliq_periodo!pliqanio - 1
        UsaActual = False
        UsaPeriodoActual = False
    End Select
    If Opcion = 3 And BusquedaCompleta Then
        DividePor = 12
    Else
        If MesDeInicioSemestre > 6 Then
            DividePor = CantMeses
        Else
            DividePor = CantMeses
        End If
    End If
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Divide Por " & DividePor
    End If
End If


Select Case Opcion
Case 1: 'Sumatoria
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Sumatoria "
    End If
    Call AM_SumG(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, UsaPeriodoActual)
Case 2: 'Maximo
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Maximo (NroAcu =" & nroAcu & ", MesHasta=" & MesHasta & ", AnioHasta=" & AnioHasta & ", CantMeses =" & CantMeses & ", CantAnios=" & CantAnios & ", Con_Fases=" & Con_Fases & ", Valor=" & Valor & ", Cantidad=" & Cantidad & ", False, UsaActual=" & UsaActual & ", UsaPeriodoActual=" & UsaPeriodoActual & " )"
    End If
    Call AM_MaxG(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, UsaPeriodoActual)
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Maximo terminado"
    End If
Case 3: 'Promedio
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Promedio "
    End If
    Call AM_PromG(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, DividePor, UsaPeriodoActual)
Case 4: 'Promedio sin cero
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Promedio sin cero "
    End If
    Call AM_PromSin0G(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, UsaPeriodoActual)
Case 5: 'Minimo
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Minimo "
    End If
    Call AM_MinG(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, UsaPeriodoActual)
Case Else
End Select


Bien = True
If Not Monto Then
    Valor = Cantidad
End If

End Sub

Public Sub AM_MaxG(ByVal Acu As Long, ByVal MesHasta As Integer, ByVal AnioHasta As Integer, ByVal CantMeses As Integer, ByVal CantAnios As Integer, ByVal ConFases As Boolean, ByRef Valor As Double, ByRef Cantidad As Double, ByVal Imponibles As Boolean, ByVal UsaActual As Boolean, ByVal UsaPeriodoActual As Boolean)
' sumariza los meses anteriores, INCLUYENDO ACTUAL.
' Parametros : 1) Nro Acumulador                            -  Acu
'              2) Mes  hasta (mes en el que estoy parado)   -
'              3) Anio hasta (anio que estoy parado)        -
'              4) Cant meses anteriores                     -
'              5) Cant Anios anteriores                     -
'              6) con-fases                                 -
'              7) cantidad                                  -
'              8) monto.                                    -


Dim Hasta As Integer
Dim cantProm As Integer
Dim MesDesde As Integer
Dim AnioDesde As Integer

Dim rs_Fases As New ADODB.Recordset
Dim rs_Acu_Mes As New ADODB.Recordset
Dim rs_Acu_Liq As New ADODB.Recordset
Dim Aux_Valor As Double
Dim Aux_Cant As Double

Valor = 0
Cantidad = 0
Aux_Valor = 0
Aux_Cant = 0

If CantMeses > 12 Or MesHasta > 12 Or CantAnios > AnioHasta Then
    Exit Sub
End If

MesDesde = MesHasta - CantMeses + 1
AnioDesde = AnioHasta - CantAnios

If MesDesde <= 0 Then
    MesDesde = MesHasta + 12 - CantMeses + 1
    AnioDesde = AnioDesde - 1
End If

If MesDesde > 12 Then
    MesDesde = MesDesde - 12
    AnioDesde = AnioDesde - 1
End If


' Modificado para que tome el promedio para los jornales
If ConFases Then
    'FGZ - 16/04/2004
    'Busco la ultima fase activa
    StrSql = "SELECT * FROM fases WHERE real = -1 AND empleado = " & buliq_empleado!ternro
    StrSql = StrSql & " ORDER BY altfec"
    OpenRecordset StrSql, rs_Fases
    
    If Not rs_Fases.EOF Then
        rs_Fases.MoveLast
        If rs_Fases!altfec > C_Date("01/" & MesDesde & "/" & AnioDesde) Then
            If Day(rs_Fases!altfec) > 1 Then
                If Month(rs_Fases!altfec) + 1 > 12 Then
                    MesDesde = 1
                    AnioDesde = Year(rs_Fases!altfec) + 1
                Else
                    MesDesde = Month(rs_Fases!altfec)
                    AnioDesde = Year(rs_Fases!altfec)
                End If
            Else
                MesDesde = Month(rs_Fases!altfec)
                AnioDesde = Year(rs_Fases!altfec)
            End If
        End If
    End If
Else
    'FGZ - 15/12/2004
    ' Se le saco esto porque traia problemas
'    If buliq_empleado!empfaltagr > c_date("01/" & MesDesde & "/" & AnioDesde) Then
'        MesDesde = Month(buliq_empleado!empfaltagr)
'        AnioDesde = Year(buliq_empleado!empfaltagr)
'    End If
End If

If Not Imponibles Then
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes =" & MesDesde
        Else
            StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes >= " & MesDesde & " AND  ammes <=" & MesHasta
        End If
    Else
        StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                 " AND acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = amanio AND ammes >= " & MesDesde & ") OR " & _
                 " (amanio > " & AnioDesde & " AND amanio < " & AnioHasta & ") OR " & _
                 " (ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))"
    End If
Else
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM acu_mes " & _
                     " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acu_mes.acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes =" & MesHasta & _
                     " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
        Else
            StrSql = "SELECT * FROM acu_mes " & _
                     " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acu_mes.acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes >= " & MesDesde & " AND  ammes <=" & MesHasta & _
                     " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
        End If
    Else
        StrSql = "SELECT * FROM acu_mes " & _
                 " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                 " WHERE ternro = " & buliq_empleado!ternro & _
                 " AND acu_mes.acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = amanio AND ammes >= " & MesDesde & ") OR " & _
                 " (amanio > " & AnioDesde & " AND amanio < " & AnioHasta & ") OR " & _
                 " (ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))" & _
                 " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
    End If
End If
StrSql = StrSql & " ORDER BY amanio, ammes"
OpenRecordset StrSql, rs_Acu_Mes

'    If Not Imponibles Then
'        StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
'                 " AND acunro =" & Acu & _
'                 " AND " & AnioDesde & " <= amanio AND amanio <= " & AnioHasta & _
'                 " AND (( ammes >=" & MesDesde & " AND " & AnioDesde & " <= amanio) OR ( ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))"
'    Else
'        StrSql = "SELECT * FROM acu_mes " & _
'                 " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
'                 " WHERE ternro = " & buliq_empleado!ternro & _
'                 " AND acu_mes.acunro =" & Acu & _
'                 " AND " & AnioDesde & " <= amanio AND amanio <= " & AnioHasta & _
'                 " AND (( ammes >=" & MesDesde & " AND " & AnioDesde & " <= amanio) OR ( ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))" & _
'                 " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
'    End If
'StrSql = StrSql & " ORDER BY amanio, ammes"
'OpenRecordset StrSql, rs_Acu_Mes

If rs_Acu_Mes.EOF Then
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 5) & "no se encontraron registros. SQL: " & StrSql
    End If
Else
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 5) & "Buscando los acumuladores mensuales"
    End If
End If

Do While Not rs_Acu_Mes.EOF
    If Not EsNulo(rs_Acu_Mes!ammonto) Then
        If UsaPeriodoActual Then
            If CBool(USA_DEBUG) Then
                Flog.Write Espacios(Tabulador * 6) & "Analizando Mes: " & rs_Acu_Mes!ammes
                Flog.writeline " Analizando Mes: " & rs_Acu_Mes!ammes & "Mes actual: " & buliq_periodo!pliqmes
            End If
            If rs_Acu_Mes!ammes = buliq_periodo!pliqmes Then
                Aux_Valor = Aux_Valor + rs_Acu_Mes!ammonto
                'Aux_Cant = Aux_Cant + rs_Acu_Mes!amcant
                Aux_Cant = IIf(Not EsNulo(rs_Acu_Mes!amcant), rs_Acu_Mes!amcant, 0)
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 6) & "Valor: " & rs_Acu_Mes!ammonto
                    If EsNulo(rs_Acu_Mes!amcant) Then
                        Flog.writeline Espacios(Tabulador * 6) & "cantidad nula"
                    Else
                        Flog.writeline Espacios(Tabulador * 6) & "cantidad: " & rs_Acu_Mes!amcant
                    End If
                End If
            End If
        End If
        If rs_Acu_Mes!ammonto > Valor Then
            Valor = rs_Acu_Mes!ammonto
            Cantidad = IIf(Not EsNulo(rs_Acu_Mes!amcant), rs_Acu_Mes!amcant, 0)
        End If
    End If
    rs_Acu_Mes.MoveNext
Loop

' Si es desde el mes actual ==> busco el acu_liq de este proceso
If UsaActual Then
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 5) & "Busco el acu_liq de este proceso"
    End If
    
    ' FGZ - 09/02/2004
    If objCache_Acu_Liq_Monto.EsSimboloDefinido(CStr(Acu)) Then
        If objCache_Acu_Liq_Monto.Valor(CStr(Acu)) + Aux_Valor > Valor Then
            Valor = objCache_Acu_Liq_Monto.Valor(CStr(Acu)) + Aux_Valor
            Cantidad = objCache_Acu_Liq_Cantidad.Valor(CStr(Acu)) + Aux_Cant
        End If
    End If
End If

'FGZ - 09/02/2004
' esto se saca porque ahora estan en el cahce de acu_liq

'    StrSql = "SELECT * FROM acu_liq WHERE cliqnro = " & buliq_cabliq!cliqnro & _
'             " AND acunro =" & Acu
'    OpenRecordset StrSql, rs_Acu_Liq
'    If Not rs_Acu_Liq.EOF Then
'        If rs_Acu_Liq!ammonto > Valor Then
'            Valor = rs_Acu_Liq!ammonto
'            Cantidad = rs_Acu_Liq!amcant
'        End If
'    End If
'End If


' Cierro todo y libero
If rs_Fases.State = adStateOpen Then rs_Fases.Close
If rs_Acu_Mes.State = adStateOpen Then rs_Acu_Mes.Close
'If rs_Acu_Liq.State = adStateOpen Then rs_Acu_Liq.Close
Set rs_Fases = Nothing
Set rs_Acu_Mes = Nothing
'Set rs_Acu_Liq = Nothing
End Sub


Public Sub AM_MinG(ByVal Acu As Long, ByVal MesHasta As Integer, ByVal AnioHasta As Integer, ByVal CantMeses As Integer, ByVal CantAnios As Integer, ByVal ConFases As Boolean, ByRef Valor As Double, ByRef Cantidad As Double, ByVal Imponibles As Boolean, ByVal UsaActual As Boolean, ByVal UsaPeriodoActual As Boolean)
' Busca en los meses anteriores, INCLUYENDO ACTUAL.
' Parametros : 1) Nro Acumulador                            -  Acu
'              2) Mes  hasta (mes en el que estoy parado)   -
'              3) Anio hasta (anio que estoy parado)        -
'              4) Cant meses anteriores                     -
'              5) Cant Anios anteriores                     -
'              6) con-fases                                 -
'              7) cantidad                                  -
'              8) monto.                                    -


Dim Hasta As Integer
Dim cantProm As Integer
Dim MesDesde As Integer
Dim AnioDesde As Integer

Dim rs_Fases As New ADODB.Recordset
Dim rs_Acu_Mes As New ADODB.Recordset
Dim rs_Acu_Liq As New ADODB.Recordset

Dim Encontro As Boolean
Dim Aux_Valor As Double
Dim Aux_Cant As Double


Encontro = False

Valor = 0
Cantidad = 0
Aux_Valor = 0
Aux_Cant = 0


If CantMeses > 12 Or MesHasta > 12 Or CantAnios > AnioHasta Then
    Exit Sub
End If

MesDesde = MesHasta - CantMeses + 1
AnioDesde = AnioHasta - CantAnios

If MesDesde <= 0 Then
    MesDesde = MesHasta + 12 - CantMeses + 1
    AnioDesde = AnioDesde - 1
End If

If MesDesde > 12 Then
    MesDesde = MesDesde - 12
    AnioDesde = AnioDesde - 1
End If


' Modificado para que tome el promedio para los jornales
If ConFases Then
    'FGZ - 16/04/2004
    'Busco la ultima fase activa
    StrSql = "SELECT * FROM fases WHERE real = -1 AND empleado = " & buliq_empleado!ternro
    StrSql = StrSql & " ORDER BY altfec"
    OpenRecordset StrSql, rs_Fases
    
    If Not rs_Fases.EOF Then
        rs_Fases.MoveLast
        If rs_Fases!altfec > C_Date("01/" & MesDesde & "/" & AnioDesde) Then
            If Day(rs_Fases!altfec) > 1 Then
                If Month(rs_Fases!altfec) + 1 > 12 Then
                    MesDesde = 1
                    AnioDesde = Year(rs_Fases!altfec) + 1
                Else
                    MesDesde = Month(rs_Fases!altfec)
                    AnioDesde = Year(rs_Fases!altfec)
                End If
            Else
                MesDesde = Month(rs_Fases!altfec)
                AnioDesde = Year(rs_Fases!altfec)
            End If
        End If
    End If
Else
    'FGZ - 15/12/2004
    ' Se le saco esto porque traia problemas
'    If buliq_empleado!empfaltagr > c_date("01/" & MesDesde & "/" & AnioDesde) Then
'        MesDesde = Month(buliq_empleado!empfaltagr)
'        AnioDesde = Year(buliq_empleado!empfaltagr)
'    End If
End If

If Not Imponibles Then
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes =" & MesDesde
        Else
            StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes >= " & MesDesde & " AND  ammes <=" & MesHasta
        End If
    Else
        StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                 " AND acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = amanio AND ammes >= " & MesDesde & ") OR " & _
                 " (amanio > " & AnioDesde & " AND amanio < " & AnioHasta & ") OR " & _
                 " (ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))"
    End If
Else
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM acu_mes " & _
                     " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acu_mes.acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes =" & MesHasta & _
                     " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
        Else
            StrSql = "SELECT * FROM acu_mes " & _
                     " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acu_mes.acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes >= " & MesDesde & " AND  ammes <=" & MesHasta & _
                     " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
        End If
    Else
        StrSql = "SELECT * FROM acu_mes " & _
                 " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                 " WHERE ternro = " & buliq_empleado!ternro & _
                 " AND acu_mes.acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = amanio AND ammes >= " & MesDesde & ") OR " & _
                 " (amanio > " & AnioDesde & " AND amanio < " & AnioHasta & ") OR " & _
                 " (ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))" & _
                 " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
    End If
End If
StrSql = StrSql & " ORDER BY amanio, ammes"
OpenRecordset StrSql, rs_Acu_Mes

'If Not Imponibles Then
'    StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
'             " AND acunro =" & Acu & _
'             " AND " & AnioDesde & " <= amanio AND amanio <= " & AnioHasta & _
'             " AND (( ammes >=" & MesDesde & " AND " & AnioDesde & " <= amanio) OR ( ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))"
'Else
'    StrSql = "SELECT * FROM acu_mes " & _
'             " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
'             " WHERE ternro = " & buliq_empleado!ternro & _
'             " AND acu_mes.acunro =" & Acu & _
'             " AND " & AnioDesde & " <= amanio AND amanio <= " & AnioHasta & _
'             " AND (( ammes >=" & MesDesde & " AND " & AnioDesde & " <= amanio) OR ( ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))" & _
'             " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
'End If
'StrSql = StrSql & " ORDER BY amanio, ammes"
'OpenRecordset StrSql, rs_Acu_Mes

If Not rs_Acu_Mes.EOF Then
    'Me muevo al primero
    rs_Acu_Mes.MoveFirst
    If Not EsNulo(rs_Acu_Mes!ammonto) Then
        Encontro = True
        Valor = rs_Acu_Mes!ammonto
        Cantidad = rs_Acu_Mes!amcant
    End If
    rs_Acu_Mes.MoveNext
End If


Do While Not rs_Acu_Mes.EOF
    If Not EsNulo(rs_Acu_Mes!ammonto) Then
        If UsaPeriodoActual Then
            If rs_Acu_Mes!ammes = buliq_periodo!pliqmes Then
                Aux_Valor = Aux_Valor + rs_Acu_Mes!ammonto
                'Aux_Cant = Aux_Cant + rs_Acu_Mes!amcant
                Aux_Cant = IIf(Not EsNulo(rs_Acu_Mes!amcant), rs_Acu_Mes!amcant, 0)
            End If
        End If
        If rs_Acu_Mes!ammonto < Valor Then
            Valor = rs_Acu_Mes!ammonto
            Cantidad = IIf(Not EsNulo(rs_Acu_Mes!amcant), rs_Acu_Mes!amcant, 0)
        End If
    End If
    rs_Acu_Mes.MoveNext
Loop

' Si es desde el mes actual ==> busco el acu_liq de este proceso
If UsaActual Then
    ' FGZ - 09/02/2004
    If objCache_Acu_Liq_Monto.EsSimboloDefinido(CStr(Acu)) Then
        If Not Encontro Then
            Valor = objCache_Acu_Liq_Monto.Valor(CStr(Acu))
            Cantidad = objCache_Acu_Liq_Cantidad.Valor(CStr(Acu))
        Else
            If objCache_Acu_Liq_Monto.Valor(CStr(Acu)) + Aux_Valor < Valor Then
                Valor = objCache_Acu_Liq_Monto.Valor(CStr(Acu)) + Aux_Valor
                Cantidad = objCache_Acu_Liq_Cantidad.Valor(CStr(Acu)) + Aux_Cant
            End If
        End If
    End If
End If
    
' FGZ - 09/02/2004
' esto se saco porque ahora esta en el cache de acu_liq

'    StrSql = "SELECT * FROM acu_liq WHERE cliqnro = " & buliq_cabliq!cliqnro & _
'             " AND acunro =" & Acu
'    OpenRecordset StrSql, rs_Acu_Liq
'    If Not rs_Acu_Liq.EOF Then
'        If Not Encontro Then ' valor todavia no se seteo ==> retorno el del acu_liq de este proceso
'            Valor = rs_Acu_Liq!ammonto
'            Cantidad = rs_Acu_Liq!amcant
'        Else
'            If rs_Acu_Liq!ammonto < Valor Then
'                Valor = rs_Acu_Liq!ammonto
'                Cantidad = rs_Acu_Liq!amcant
'            End If
'        End If
'    End If
'End If

' Cierro todo y libero
If rs_Fases.State = adStateOpen Then rs_Fases.Close
If rs_Acu_Mes.State = adStateOpen Then rs_Acu_Mes.Close
'If rs_Acu_Liq.State = adStateOpen Then rs_Acu_Liq.Close
Set rs_Fases = Nothing
Set rs_Acu_Mes = Nothing
'Set rs_Acu_Liq = Nothing

End Sub


Public Sub AM_PromG(ByVal Acu As Long, ByVal MesHasta As Integer, ByVal AnioHasta As Integer, ByVal CantMeses As Integer, ByVal CantAnios As Integer, ByVal ConFases As Boolean, ByRef Valor As Double, ByRef Cantidad As Double, ByVal Imponibles As Boolean, ByVal UsaActual As Boolean, ByVal DividePor As Integer, ByVal UsaPeriodoActual As Boolean)
' Promedio de los meses anteriores, incluyendo el actual, toma en cuenta
' la primera fase del empleado o la fecha de alta del empleado
' -------------------------------------------------------------
'Parametros
    '1 - Nro de acumulador                          - Acu
    '2 - Mes Hasta, el mes en el que estoy parado   - MesHasta
    '3 - Año hasta, año en el que estoy parado      - AnioHasta
    '4 - Cantidad de Meses anteiores                - CantMeses
    '5 - Cantidad de Años anteriores                - CantAnios
    '6 - Con fases                                  - ConFases
    '7 - Monto                                      - ByRef Valor
    '8 - Cantidad                                   - Byref Cantidad
    '10 - Por la cantidad de Meses que divide
' ------------------------------------------------------------
Dim I As Integer
Dim j As Integer
Dim Hasta As Integer
Dim cantProm As Integer
Dim MesDesde As Integer
Dim AnioDesde As Integer

Dim rs_Fases As New ADODB.Recordset
Dim rs_Acu_Mes As New ADODB.Recordset
Dim rs_Acu_Liq As New ADODB.Recordset

If CantMeses > 12 Or MesHasta > 12 Or CantAnios > AnioHasta Then
    Exit Sub
End If

MesDesde = MesHasta - CantMeses + 1
AnioDesde = AnioHasta - CantAnios


If MesDesde <= 0 Then
    MesDesde = MesHasta + 12 - CantMeses + 1
    AnioDesde = AnioDesde - 1
End If

If MesDesde > 12 Then
    MesDesde = MesDesde - 12
    AnioDesde = AnioDesde - 1
End If


' Modificado para que tome el promedio para los jornales
If ConFases Then
    'FGZ - 16/04/2004
    'Busco la ultima fase activa
    StrSql = "SELECT * FROM fases WHERE real = -1 AND empleado = " & buliq_empleado!ternro
    StrSql = StrSql & " ORDER BY altfec"
    OpenRecordset StrSql, rs_Fases
    
    If Not rs_Fases.EOF Then
        rs_Fases.MoveLast
        If rs_Fases!altfec > C_Date("01/" & MesDesde & "/" & AnioDesde) Then
            If Day(rs_Fases!altfec) > 1 Then
                If Month(rs_Fases!altfec) + 1 > 12 Then
                    MesDesde = 1
                    AnioDesde = Year(rs_Fases!altfec) + 1
                Else
                    MesDesde = Month(rs_Fases!altfec)
                    AnioDesde = Year(rs_Fases!altfec)
                End If
            Else
                MesDesde = Month(rs_Fases!altfec)
                AnioDesde = Year(rs_Fases!altfec)
            End If
        End If
    End If
Else
    'FGZ - 15/12/2004
    ' Se le saco esto porque traia problemas
'    If buliq_empleado!empfaltagr > c_date("01/" & MesDesde & "/" & AnioDesde) Then
'        MesDesde = Month(buliq_empleado!empfaltagr)
'        AnioDesde = Year(buliq_empleado!empfaltagr)
'    End If
End If

If Not Imponibles Then
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes =" & MesDesde
        Else
            StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes >= " & MesDesde & " AND  ammes <=" & MesHasta
        End If
    Else
        StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                 " AND acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = amanio AND ammes >= " & MesDesde & ") OR " & _
                 " (amanio > " & AnioDesde & " AND amanio < " & AnioHasta & ") OR " & _
                 " (ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))"
    End If
Else
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM acu_mes " & _
                     " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acu_mes.acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes =" & MesHasta & _
                     " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
        Else
            StrSql = "SELECT * FROM acu_mes " & _
                     " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acu_mes.acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes >= " & MesDesde & " AND  ammes <=" & MesHasta & _
                     " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
        End If
    Else
        StrSql = "SELECT * FROM acu_mes " & _
                 " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                 " WHERE ternro = " & buliq_empleado!ternro & _
                 " AND acu_mes.acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = amanio AND ammes >= " & MesDesde & ") OR " & _
                 " (amanio > " & AnioDesde & " AND amanio < " & AnioHasta & ") OR " & _
                 " (ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))" & _
                 " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
    End If
End If
StrSql = StrSql & " ORDER BY amanio, ammes"
OpenRecordset StrSql, rs_Acu_Mes

'If Not Imponibles Then
'    StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
'             " AND acunro =" & Acu & _
'             " AND " & AnioDesde & " <= amanio AND amanio <= " & AnioHasta & _
'             " AND (( ammes >=" & MesDesde & " AND " & AnioDesde & " <= amanio) OR ( ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))"
'Else
'    StrSql = "SELECT * FROM acu_mes " & _
'             " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
'             " WHERE ternro = " & buliq_empleado!ternro & _
'             " AND acu_mes.acunro =" & Acu & _
'             " AND " & AnioDesde & " <= amanio AND amanio <= " & AnioHasta & _
'             " AND (( ammes >=" & MesDesde & " AND " & AnioDesde & " <= amanio) OR ( ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))" & _
'             " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
'End If
'StrSql = StrSql & " ORDER BY amanio, ammes"
'OpenRecordset StrSql, rs_Acu_Mes

cantProm = 0
Do While Not rs_Acu_Mes.EOF
        Valor = Valor + IIf(Not EsNulo(rs_Acu_Mes!ammonto), rs_Acu_Mes!ammonto, 0)
        Cantidad = Cantidad + IIf(Not EsNulo(rs_Acu_Mes!amcant), rs_Acu_Mes!amcant, 0)
        cantProm = cantProm + 1
    rs_Acu_Mes.MoveNext
Loop

' Si es desde el mes actual ==> busco el acu_liq de este proceso
If UsaActual Then
    ' FGZ - 09/02/2004
    If objCache_Acu_Liq_Monto.EsSimboloDefinido(CStr(Acu)) Then
        Valor = Valor + objCache_Acu_Liq_Monto.Valor(CStr(Acu))
        Cantidad = Cantidad + objCache_Acu_Liq_Cantidad.Valor(CStr(Acu))
        cantProm = cantProm + 1
    End If

'    StrSql = "SELECT * FROM acu_liq WHERE cliqnro = " & buliq_cabliq!cliqnro & _
'             " AND acunro =" & Acu
'    OpenRecordset StrSql, rs_Acu_Liq
'    If Not rs_Acu_Liq.EOF Then
'        Valor = Valor + rs_Acu_Liq!almonto
'        Cantidad = Cantidad + rs_Acu_Liq!alcant
'        cantProm = cantProm + 1
'    End If
End If

If DividePor <> 0 Then
    'Valor = Valor / cantProm
    Valor = Valor / DividePor
    'Cantidad = Cantidad / cantProm
    Cantidad = Cantidad / DividePor
Else
    Valor = 0
    Cantidad = 0
End If


' Cierro todo y libero
If rs_Fases.State = adStateOpen Then rs_Fases.Close
If rs_Acu_Mes.State = adStateOpen Then rs_Acu_Mes.Close
'If rs_Acu_liq.State = adStateOpen Then rs_Acu_Liq.Close
Set rs_Fases = Nothing
Set rs_Acu_Mes = Nothing
'Set rs_Acu_Liq = Nothing

End Sub


Public Sub AM_PromSin0G(ByVal Acu As Long, ByVal MesHasta As Integer, ByVal AnioHasta As Integer, ByVal CantMeses As Integer, ByVal CantAnios As Integer, ByVal ConFases As Boolean, ByRef Valor As Double, ByRef Cantidad As Double, ByVal Imponibles As Boolean, ByVal UsaActual As Boolean, ByVal UsaPeriodoActual As Boolean)
' Promedio de los meses anteriores, incluyendo el actual, toma en cuenta
' la primera fase del empleado o la fecha de alta del empleado
' Sin tener en cuenta los que son 0
' -------------------------------------------------------------
'Parametros
    '1 - Nro de acumulador                          - Acu
    '2 - Mes Hasta, el mes en el que estoy parado   - MesHasta
    '3 - Año hasta, año en el que estoy parado      - AnioHasta
    '4 - Cantidad de Meses anteiores                - CantMeses
    '5 - Cantidad de Años anteriores                - CantAnios
    '6 - Con fases                                  - ConFases
    '7 - Monto                                      - ByRef Valor
    '8 - Cantidad                                   - Byref Cantidad
' ------------------------------------------------------------

Dim I As Integer
Dim j As Integer
Dim Hasta As Integer
Dim cantProm As Integer
Dim MesDesde As Integer
Dim AnioDesde As Integer

Dim rs_Fases As New ADODB.Recordset
Dim rs_Acu_Mes As New ADODB.Recordset
Dim rs_Acu_Liq As New ADODB.Recordset

If CantMeses > 12 Or MesHasta > 12 Or CantAnios > AnioHasta Then
    Exit Sub
End If

MesDesde = MesHasta - CantMeses + 1
AnioDesde = AnioHasta - CantAnios

If MesDesde <= 0 Then
    MesDesde = MesHasta + 12 - CantMeses + 1
    AnioDesde = AnioDesde - 1
End If

If MesDesde > 12 Then
    MesDesde = MesDesde - 12
    AnioDesde = AnioDesde - 1
End If


' Modificado para que tome el promedio para los jornales
If ConFases Then
    'FGZ - 16/04/2004
    'Busco la ultima fase activa
    StrSql = "SELECT * FROM fases WHERE real = -1 AND empleado = " & buliq_empleado!ternro
    StrSql = StrSql & " ORDER BY altfec"
    OpenRecordset StrSql, rs_Fases
    
    If Not rs_Fases.EOF Then
        rs_Fases.MoveLast
        If rs_Fases!altfec > C_Date("01/" & MesDesde & "/" & AnioDesde) Then
            If Day(rs_Fases!altfec) > 1 Then
                If Month(rs_Fases!altfec) + 1 > 12 Then
                    MesDesde = 1
                    AnioDesde = Year(rs_Fases!altfec) + 1
                Else
                    MesDesde = Month(rs_Fases!altfec)
                    AnioDesde = Year(rs_Fases!altfec)
                End If
            Else
                MesDesde = Month(rs_Fases!altfec)
                AnioDesde = Year(rs_Fases!altfec)
            End If
        End If
    End If
Else
    'FGZ - 15/12/2004
    ' Se le saco esto porque traia problemas
'    If buliq_empleado!empfaltagr > c_date("01/" & MesDesde & "/" & AnioDesde) Then
'        MesDesde = Month(buliq_empleado!empfaltagr)
'        AnioDesde = Year(buliq_empleado!empfaltagr)
'    End If
End If

If Not Imponibles Then
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes =" & MesDesde
        Else
            StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes >= " & MesDesde & " AND  ammes <=" & MesHasta
        End If
    Else
        StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                 " AND acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = amanio AND ammes >= " & MesDesde & ") OR " & _
                 " (amanio > " & AnioDesde & " AND amanio < " & AnioHasta & ") OR " & _
                 " (ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))"
    End If
Else
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM acu_mes " & _
                     " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acu_mes.acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes =" & MesHasta & _
                     " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
        Else
            StrSql = "SELECT * FROM acu_mes " & _
                     " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acu_mes.acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes >= " & MesDesde & " AND  ammes <=" & MesHasta & _
                     " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
        End If
    Else
        StrSql = "SELECT * FROM acu_mes " & _
                 " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                 " WHERE ternro = " & buliq_empleado!ternro & _
                 " AND acu_mes.acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = amanio AND ammes >= " & MesDesde & ") OR " & _
                 " (amanio > " & AnioDesde & " AND amanio < " & AnioHasta & ") OR " & _
                 " (ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))" & _
                 " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
    End If
End If
StrSql = StrSql & " ORDER BY amanio, ammes"
OpenRecordset StrSql, rs_Acu_Mes

'If Not Imponibles Then
'    StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
'             " AND acunro =" & Acu & _
'             " AND " & AnioDesde & " <= amanio AND amanio <= " & AnioHasta & _
'             " AND (( ammes >=" & MesDesde & " AND " & AnioDesde & " <= amanio) OR ( ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))"
'Else
'    StrSql = "SELECT * FROM acu_mes " & _
'             " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
'             " WHERE ternro = " & buliq_empleado!ternro & _
'             " AND acu_mes.acunro =" & Acu & _
'             " AND " & AnioDesde & " <= amanio AND amanio <= " & AnioHasta & _
'             " AND (( ammes >=" & MesDesde & " AND " & AnioDesde & " <= amanio) OR ( ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))" & _
'             " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
'End If
'StrSql = StrSql & " ORDER BY amanio, ammes"
'OpenRecordset StrSql, rs_Acu_Mes

cantProm = 0
Do While Not rs_Acu_Mes.EOF
    If Not EsNulo(rs_Acu_Mes!ammonto) Then
        If rs_Acu_Mes!ammonto <> 0 Then ' si el monto es cero ==> no lo tengo en cuenta
            Valor = Valor + rs_Acu_Mes!ammonto
            Cantidad = Cantidad + IIf(Not EsNulo(rs_Acu_Mes!amcant), rs_Acu_Mes!amcant, 0)
            cantProm = cantProm + 1
        End If
    End If
    rs_Acu_Mes.MoveNext
Loop

' Si es desde el mes actual ==> busco el acu_liq de este proceso
If UsaActual Then
    ' FGZ - 09/02/2004
    If objCache_Acu_Liq_Monto.EsSimboloDefinido(CStr(Acu)) Then
        If objCache_Acu_Liq_Monto.Valor(CStr(Acu)) <> 0 Then
            Valor = Valor + objCache_Acu_Liq_Monto.Valor(CStr(Acu))
            Cantidad = Cantidad + objCache_Acu_Liq_Cantidad.Valor(CStr(Acu))
            cantProm = cantProm + 1
        End If
    End If

'    StrSql = "SELECT * FROM acu_liq WHERE cliqnro = " & buliq_cabliq!cliqnro & _
'             " AND acunro =" & Acu
'    OpenRecordset StrSql, rs_Acu_Liq
'    If Not rs_Acu_Liq.EOF Then
'        If rs_Acu_Liq!almonto <> 0 Then ' si el monto es cero ==> no lo tengo en cuenta
'            Valor = Valor + rs_Acu_Liq!almonto
'            Cantidad = Cantidad + rs_Acu_Liq!alcant
'            cantProm = cantProm + 1
'        End If
'    End If
End If

If cantProm <> 0 Then
    Valor = Valor / cantProm
    Cantidad = Cantidad / cantProm
Else
    Valor = 0
    Cantidad = 0
End If


' Cierro todo y libero
If rs_Fases.State = adStateOpen Then rs_Fases.Close
If rs_Acu_Mes.State = adStateOpen Then rs_Acu_Mes.Close
'If rs_Acu_Liq.State = adStateOpen Then rs_Acu_Liq.Close
Set rs_Fases = Nothing
Set rs_Acu_Mes = Nothing
'Set rs_Acu_Liq = Nothing

End Sub

Public Sub AM_SumG(ByVal Acu As Long, ByVal MesHasta As Integer, ByVal AnioHasta As Integer, ByVal CantMeses As Integer, ByVal CantAnios As Integer, ByVal ConFases As Boolean, ByRef Valor As Double, ByRef Cantidad As Double, ByVal Imponibles As Boolean, ByVal UsaActual As Boolean, ByVal UsaPeriodoActual As Boolean)
' sumariza los meses anteriores, INCLUYENDO ACTUAL.
' Parametros : 1) Nro Acumulador                            -  Acu
'              2) Mes  hasta (mes en el que estoy parado)   -
'              3) Anio hasta (anio que estoy parado)        -
'              4) Cant meses anteriores                     -
'              5) Cant Anios anteriores                     -
'              6) con-fases                                 -
'              7) cantidad                                  -
'              8) monto.                                    -


Dim Hasta As Integer
Dim cantProm As Integer
Dim MesDesde As Integer
Dim AnioDesde As Integer

Dim rs_Fases As New ADODB.Recordset
Dim rs_Acu_Mes As New ADODB.Recordset
Dim rs_Acu_Liq As New ADODB.Recordset

If CantMeses > 12 Or MesHasta > 12 Or CantAnios > AnioHasta Then
    Exit Sub
End If

MesDesde = MesHasta - CantMeses + 1
AnioDesde = AnioHasta - CantAnios

If MesDesde <= 0 Then
    MesDesde = MesHasta + 12 - CantMeses + 1
    AnioDesde = AnioDesde - 1
End If

If MesDesde > 12 Then
    MesDesde = MesDesde - 12
    AnioDesde = AnioDesde - 1
End If

' Modificado para que tome el promedio para los jornales
If ConFases Then
    'FGZ - 16/04/2004
    'Busco la ultima fase activa
    StrSql = "SELECT * FROM fases WHERE real = -1 AND empleado = " & buliq_empleado!ternro
    StrSql = StrSql & " ORDER BY altfec"
    OpenRecordset StrSql, rs_Fases
    
    If Not rs_Fases.EOF Then
        rs_Fases.MoveLast
        If rs_Fases!altfec > C_Date("01/" & MesDesde & "/" & AnioDesde) Then
            If Day(rs_Fases!altfec) > 1 Then
                If Month(rs_Fases!altfec) + 1 > 12 Then
                    MesDesde = 1
                    AnioDesde = Year(rs_Fases!altfec) + 1
                Else
                    MesDesde = Month(rs_Fases!altfec)
                    AnioDesde = Year(rs_Fases!altfec)
                End If
            Else
                MesDesde = Month(rs_Fases!altfec)
                AnioDesde = Year(rs_Fases!altfec)
            End If
        End If
    End If
Else
    'FGZ - 15/12/2004
    ' Se le saco esto porque traia problemas
'    If buliq_empleado!empfaltagr > c_date("01/" & MesDesde & "/" & AnioDesde) Then
'        If CBool(USA_DEBUG) Then
'            Flog.writeline Espacios(Tabulador * 4) & "la empfaltagr del empleado es > a " & c_date("01/" & MesDesde & "/" & AnioDesde)
'        End If
'        MesDesde = Month(buliq_empleado!empfaltagr)
'        AnioDesde = Year(buliq_empleado!empfaltagr)
'    End If
End If

If CBool(USA_DEBUG) Then
    Flog.writeline Espacios(Tabulador * 4) & "Busca desde el mes " & MesDesde & " del año " & AnioDesde & " hasta el mes " & MesHasta & " del año " & AnioHasta
End If

If Not Imponibles Then
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes =" & MesDesde
        Else
            StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes >= " & MesDesde & " AND  ammes <=" & MesHasta
        End If
    Else
'        StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
'                 " AND acunro =" & Acu & _
'                 " AND " & AnioDesde & " <= amanio AND amanio <= " & AnioHasta & _
'                 " AND (( ammes >=" & MesDesde & " AND " & AnioDesde & " <= amanio) OR ( ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))"
        StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                 " AND acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = amanio AND ammes >= " & MesDesde & ") OR " & _
                 " (amanio > " & AnioDesde & " AND amanio < " & AnioHasta & ") OR " & _
                 " (ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))"
    End If
Else
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM acu_mes " & _
                     " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acu_mes.acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes =" & MesHasta & _
                     " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
        Else
            StrSql = "SELECT * FROM acu_mes " & _
                     " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acu_mes.acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes >= " & MesDesde & " AND  ammes <=" & MesHasta & _
                     " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
        End If
    Else
'        StrSql = "SELECT * FROM acu_mes " & _
'                 " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
'                 " WHERE ternro = " & buliq_empleado!ternro & _
'                 " AND acu_mes.acunro =" & Acu & _
'                 " AND " & AnioDesde & " <= amanio AND amanio <= " & AnioHasta & _
'                 " AND (( ammes >=" & MesDesde & " AND " & AnioDesde & " <= amanio) OR ( ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))" & _
'                 " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
        StrSql = "SELECT * FROM acu_mes " & _
                 " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                 " WHERE ternro = " & buliq_empleado!ternro & _
                 " AND acu_mes.acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = amanio AND ammes >= " & MesDesde & ") OR " & _
                 " (amanio > " & AnioDesde & " AND amanio < " & AnioHasta & ") OR " & _
                 " (ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))" & _
                 " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
    End If
End If
StrSql = StrSql & " ORDER BY amanio, ammes"
OpenRecordset StrSql, rs_Acu_Mes

If CBool(USA_DEBUG) Then
    Flog.writeline Espacios(Tabulador * 4) & "SQL " & StrSql
End If
If Not rs_Acu_Mes.EOF Then
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Acumulando ..."
    End If
End If

Do While Not rs_Acu_Mes.EOF
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Suma Monto " & IIf(Not EsNulo(rs_Acu_Mes!ammonto), rs_Acu_Mes!ammonto, 0)
            Flog.writeline Espacios(Tabulador * 4) & "Suma Cantidad " & IIf(Not EsNulo(rs_Acu_Mes!amcant), rs_Acu_Mes!amcant, 0)
        End If
        
        Valor = Valor + IIf(Not EsNulo(rs_Acu_Mes!ammonto), rs_Acu_Mes!ammonto, 0)
        Cantidad = Cantidad + IIf(Not EsNulo(rs_Acu_Mes!amcant), rs_Acu_Mes!amcant, 0)
    rs_Acu_Mes.MoveNext
Loop

' Si es desde el mes actual ==> busco el acu_liq de este proceso
'If (MesHasta = buliq_periodo!pliqmes And AnioHasta = buliq_periodo!pliqanio) Or UsaActual Then
If UsaActual Then
    ' FGZ - 09/02/2004
    If objCache_Acu_Liq_Monto.EsSimboloDefinido(CStr(Acu)) Then
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Suma Proceso Actual: "
                Flog.writeline Espacios(Tabulador * 5) & "Monto " & objCache_Acu_Liq_Monto.Valor(CStr(Acu))
                Flog.writeline Espacios(Tabulador * 6) & "Cantidad " & objCache_Acu_Liq_Cantidad.Valor(CStr(Acu))
            End If
    
            Valor = Valor + objCache_Acu_Liq_Monto.Valor(CStr(Acu))
            Cantidad = Cantidad + objCache_Acu_Liq_Cantidad.Valor(CStr(Acu))
    End If

'    StrSql = "SELECT * FROM acu_liq WHERE cliqnro = " & buliq_cabliq!cliqnro & _
'             " AND acunro =" & Acu
'    OpenRecordset StrSql, rs_Acu_Liq
'    If Not rs_Acu_Liq.EOF Then
'        Valor = Valor + rs_Acu_Liq!almonto
'        Cantidad = Cantidad + rs_Acu_Liq!alcant
'    End If
End If

' Cierro todo y libero
If rs_Fases.State = adStateOpen Then rs_Fases.Close
If rs_Acu_Mes.State = adStateOpen Then rs_Acu_Mes.Close
'If rs_Acu_liq.State = adStateOpen Then rs_Acu_Liq.Close
Set rs_Fases = Nothing
Set rs_Acu_Mes = Nothing
'Set rs_Acu_Liq = Nothing

End Sub


Public Sub bus_DiasSAC_Proporcional_Tope30_old()
' ---------------------------------------------------------------------------------------------
' Descripcion: Calculo de Dias del semestre actual para SAC con proporcion.
' Autor      : FGZ
' Fecha      : 10/06/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Fec_Ini_Sem     As Date
Dim Fec_Fin_Sem     As Date
Dim Fec_Ini_1_Sem   As Date
Dim Fec_Ini_2_Sem   As Date
Dim Fec_Ini_Calc    As Date
Dim Fec_Fin_Calc    As Date
Dim Fec_Fin_1_Sem   As Date
Dim Fec_Fin_2_Sem   As Date
Dim Dias_Sac        As Double
Dim Dias_Aus        As Double
Dim Aux_Dias        As Double
Dim Aux_DiasLic     As Double

Dim A_fecha         As Date
Dim Maximo          As Integer
Dim Tolerancia      As Integer
Dim TiposDeDia      As String

Dim Aux_Mes_Inicio  As Integer
Dim Aux_Mes_Fin     As Integer
Dim Aux_Desde       As Date
Dim Aux_Hasta       As Date
Dim Ultimo_Dia_del_Mes As Date
Dim Anual           As Boolean

Dim rs_Lic As New ADODB.Recordset
Dim rs_Fases As New ADODB.Recordset

Dim Ultimo_Dia_del_Mes2

    Bien = False
    Valor = 0
    A_fecha = buliq_periodo!pliqhasta
    
    ' Obtener los parametros de la Busqueda
    If Arr_Programa(NroProg).Prognro <> 0 Then
        Maximo = Arr_Programa(NroProg).Auxint1
        Tolerancia = Arr_Programa(NroProg).Auxint2
        TiposDeDia = IIf(Not EsNulo(Arr_Programa(NroProg).Auxchar), Arr_Programa(NroProg).Auxchar, " ")
        Anual = CBool(Arr_Programa(NroProg).Auxlog1)
    Else
        Exit Sub
    End If

    If Anual Then
        'calculo de inicio del semetre
        Fec_Ini_1_Sem = C_Date("01/01/" & Year(A_fecha))
        Fec_Fin_1_Sem = C_Date("31/12/" & Year(A_fecha))
        Fec_Ini_Sem = Fec_Ini_1_Sem
        Fec_Fin_Sem = Fec_Fin_1_Sem
        ' SE AGREGARON ESTAS 2 INICIALIZACIONES
        Fec_Ini_Calc = Fec_Ini_Sem
        Fec_Fin_Calc = Fec_Fin_Sem
    Else
        'calculo de inicio del semetre
        Fec_Ini_1_Sem = C_Date("01/01/" & Year(A_fecha))
        Fec_Ini_2_Sem = C_Date("01/07/" & Year(A_fecha))
        Fec_Ini_Sem = IIf(A_fecha >= Fec_Ini_2_Sem, Fec_Ini_2_Sem, Fec_Ini_1_Sem)
        Fec_Fin_1_Sem = C_Date("30/06/" & Year(A_fecha))
        Fec_Fin_2_Sem = C_Date("31/12/" & Year(A_fecha))
        Fec_Fin_Sem = IIf(A_fecha >= Fec_Ini_2_Sem, Fec_Fin_2_Sem, Fec_Fin_1_Sem)
        Fec_Fin_Sem = IIf(A_fecha < Fec_Fin_Sem, A_fecha, Fec_Fin_Sem)
        ' SE AGREGARON ESTAS 2 INICIALIZACIONES
        Fec_Ini_Calc = Fec_Ini_Sem
        Fec_Fin_Calc = Fec_Fin_Sem
    End If
    
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Busco la ultima fase inactiva"
    End If
    
    'Busco la ultima fase inactiva
    StrSql = "SELECT * FROM fases WHERE real = -1 AND empleado = " & buliq_empleado!ternro
    StrSql = StrSql & " ORDER BY altfec "
    OpenRecordset StrSql, rs_Fases
    
    If Not rs_Fases.EOF Then
        rs_Fases.MoveLast
        'Busco la fecha de Inicio
        If rs_Fases!altfec > Fec_Ini_Sem Then
            Fec_Ini_Calc = rs_Fases!altfec
        Else
            Fec_Ini_Calc = Fec_Ini_Sem
        End If
        'Busco la fecha de fin
        If Not EsNulo(rs_Fases!bajfec) Then
            'Fec_Fin_Calc = rs_Fases!bajfec
            Fec_Fin_Calc = IIf(rs_Fases!bajfec > Fec_Fin_Sem, Fec_Fin_Sem, rs_Fases!bajfec)
        Else
            If Not EsNulo(buliq_empleado!empfbajaprev) Then
                Fec_Fin_Calc = buliq_empleado!empfbajaprev
            Else
                Fec_Fin_Calc = Fec_Fin_Sem
            End If
        End If
    Else
        Fec_Fin_Calc = Fec_Fin_Sem
    End If
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Fecha de Inicio del calculo: " & Fec_Ini_Calc
        Flog.writeline Espacios(Tabulador * 4) & "Fecha de Fin del calculo: " & Fec_Fin_Calc
    End If


    'Debo calcular los dias por mes
    Dias_Sac = 0
    Aux_Mes_Inicio = Month(Fec_Ini_Calc)
    Aux_Mes_Fin = Month(Fec_Fin_Calc)
    Aux_Desde = Fec_Ini_Calc
    Aux_Hasta = IIf(Month(Fec_Fin_Calc) > Month(Aux_Desde), C_Date("01/" & Month(Aux_Desde) + 1 & "/" & Year(Aux_Desde)) - 1, Fec_Fin_Calc)
    
    Do While Aux_Mes_Inicio <= Aux_Mes_Fin
        If Month(Aux_Desde) = 12 Then
            Ultimo_Dia_del_Mes = C_Date("31/12/" & Year(Aux_Desde))
        Else
            Ultimo_Dia_del_Mes = C_Date("01/" & Month(Aux_Desde) + 1 & "/" & Year(Aux_Desde)) - 1
        End If
        
        If Aux_Hasta < Ultimo_Dia_del_Mes Then
            Aux_Dias = DateDiff("d", C_Date("01/" & Month(Aux_Desde) & "/" & Year(Aux_Desde)), Aux_Desde)
            Aux_Dias = Aux_Dias + DateDiff("d", Aux_Hasta, Ultimo_Dia_del_Mes)
        Else
            Aux_Dias = DateDiff("d", C_Date("01/" & Month(Aux_Desde) & "/" & Year(Aux_Desde)), Aux_Desde)
            Aux_Dias = Aux_Dias + DateDiff("d", Aux_Hasta, Ultimo_Dia_del_Mes)
        End If
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Rango hasta el " & Ultimo_Dia_del_Mes
            Flog.writeline Espacios(Tabulador * 5) & "Dias fuera de fase " & Aux_Dias
        End If
        
        'Descontar las licencias en el mes
        If Not EsNulo(TiposDeDia) And TiposDeDia <> " " Then
            StrSql = "SELECT * FROM emp_lic WHERE empleado = " & buliq_empleado!ternro & _
                     " AND tdnro IN (" & TiposDeDia & ") " & _
                     " AND elfechadesde <=" & ConvFecha(Fec_Fin_Calc) & _
                     " AND elfechahasta >= " & ConvFecha(Fec_Ini_Calc)
            OpenRecordset StrSql, rs_Lic
            Dias_Aus = 0
            Do While Not rs_Lic.EOF
                If rs_Lic!elfechahasta <= Aux_Hasta Then
                    Aux_DiasLic = CantidadDeDias(Aux_Desde, Aux_Hasta, rs_Lic!elfechadesde, rs_Lic!elfechahasta)
                Else
                    If rs_Lic!elfechadesde <= Aux_Desde Then
                        Aux_DiasLic = IIf((CantidadDeDias(Aux_Desde, Aux_Hasta, rs_Lic!elfechadesde, rs_Lic!elfechahasta)) < 0, 0, CantidadDeDias(Aux_Desde, Aux_Hasta, rs_Lic!elfechadesde, rs_Lic!elfechahasta))
                    Else
                        Aux_DiasLic = IIf((CantidadDeDias(Aux_Desde, Aux_Hasta, rs_Lic!elfechadesde, rs_Lic!elfechahasta) - 1) < 0, 0, CantidadDeDias(Aux_Desde, Aux_Hasta, rs_Lic!elfechadesde, rs_Lic!elfechahasta) - 1)
                    End If
                End If
                
                Dias_Aus = Dias_Aus + Aux_DiasLic
                rs_Lic.MoveNext
            Loop
            'Topeo
            If Month(Aux_Desde) = 2 Then 'Febrero
                If Biciesto(Year(Aux_Desde)) Then
                    If Dias_Aus >= 29 Then
                        Dias_Aus = 30
                    End If
                Else
                    If Dias_Aus >= 28 Then
                        Dias_Aus = 30
                    End If
                End If
            Else
                If Dias_Aus > 30 Then
                    Dias_Aus = 30
                End If
            End If
        Else
            Dias_Aus = 0
        End If
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 5) & "Descuento " & Dias_Aus & " dias de licencia."
        End If
        
        
            'Topeo el ultimo dia del mes
            Ultimo_Dia_del_Mes2 = Day(Ultimo_Dia_del_Mes)
            If Month(Ultimo_Dia_del_Mes) = 2 Then 'Febrero
                If Biciesto(Year(Ultimo_Dia_del_Mes)) Then
                    If Ultimo_Dia_del_Mes2 >= 29 Then
                        Ultimo_Dia_del_Mes2 = 30
                    End If
                Else
                    If Ultimo_Dia_del_Mes2 >= 28 Then
                        Ultimo_Dia_del_Mes2 = 30
                    End If
                End If
            Else
                If Ultimo_Dia_del_Mes2 > 30 Then
                    Ultimo_Dia_del_Mes2 = 30
                End If
            End If
        
        Aux_Dias = 30 - (Ultimo_Dia_del_Mes2 - Aux_Dias)
        Aux_Dias = 30 - (Aux_Dias + Dias_Aus)
        'Topeo
        If Month(Aux_Desde) = 2 Then 'Febrero
            If Biciesto(Year(Aux_Desde)) Then
                If Day(Aux_Desde) >= 28 Then
                    Aux_Dias = 1
                End If
            Else
                If Day(Aux_Desde) = 28 Then
                    Aux_Dias = 1
                End If
            End If
        Else
            If Day(Aux_Desde) >= 30 Then
                Aux_Dias = 1
            End If
        End If
    
        Aux_Mes_Inicio = Aux_Mes_Inicio + 1
        Aux_Desde = C_Date("01/" & Aux_Mes_Inicio & "/" & Year(Aux_Desde))
        Aux_Hasta = IIf(Month(Fec_Fin_Calc) > Aux_Mes_Inicio, C_Date("01/" & Aux_Mes_Inicio + 1 & "/" & Year(Aux_Desde)) - 1, Fec_Fin_Calc)
        'Dias_Sac = Dias_Sac + IIf((Aux_Dias - Dias_Aus) < 0, 0, (Aux_Dias - Dias_Aus))
        
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 6) & "Acumulo " & IIf((Aux_Dias) < 0, 0, Aux_Dias) & " dias"
        End If
        Dias_Sac = Dias_Sac + IIf((Aux_Dias) < 0, 0, Aux_Dias)
    Loop
    
    'En el ultimo rango de fecha hay que restar 1 porque el ultimo dia no se le considera trabajado
    'ej. Si el empleado trabajó hasta el 20/09 ==> se le consideran 19 dias trabajados en septiembre
    '    y no 20 como de hecho tarbajó.
    '
    'If Aux_Dias <= 30 And Fec_Fin_Calc <> Fec_Fin_Sem Then
    '    Dias_Sac = Dias_Sac - 1
    '    If CBool(USA_DEBUG) Then
    '        Flog.writeline Espacios(Tabulador * 4) & "El ultimo rango no fué completo, resto 1 dia"
    '    End If
    'End If
    
    Dias_Sac = IIf(Dias_Sac >= (Maximo - Tolerancia), Maximo, Dias_Sac)
    Valor = Dias_Sac
    Bien = True

End Sub



Public Sub bus_DiasSAC_Proporcional_Tope30()
' ---------------------------------------------------------------------------------------------
' Descripcion: Calculo de Dias del semestre actual para SAC con proporcion.
' Autor      : FGZ
' Fecha      : 10/06/2004
' Ultima Mod.:
' Descripcion: FGZ - 11/05/2006 Cuando la baja estaba en febrero daba 1 o 2 dias de mas.
' ---------------------------------------------------------------------------------------------
Dim Fec_Ini_Sem     As Date
Dim Fec_Fin_Sem     As Date
Dim Fec_Ini_1_Sem   As Date
Dim Fec_Ini_2_Sem   As Date
Dim Fec_Ini_Calc    As Date
Dim Fec_Fin_Calc    As Date
Dim Fec_Fin_1_Sem   As Date
Dim Fec_Fin_2_Sem   As Date
Dim Dias_Sac        As Double
Dim Dias_Aus        As Double
Dim Aux_Dias        As Double
Dim Aux_DiasLic     As Double

Dim A_fecha         As Date
Dim Maximo          As Integer
Dim Tolerancia      As Integer
Dim TiposDeDia      As String

Dim Aux_Mes_Inicio  As Integer
Dim Aux_Mes_Fin     As Integer
Dim Aux_Desde       As Date
Dim Aux_Hasta       As Date
Dim Ultimo_Dia_del_Mes As Date
Dim Anual           As Boolean
Dim Incluir         As Boolean
Dim DesdeInicio     As Boolean
Dim HastaFin     As Boolean

Dim rs_Lic As New ADODB.Recordset
Dim rs_Fases As New ADODB.Recordset


    Bien = False
    Valor = 0
    A_fecha = buliq_periodo!pliqhasta
    
    ' Obtener los parametros de la Busqueda
    If Arr_Programa(NroProg).Prognro <> 0 Then
        Maximo = Arr_Programa(NroProg).Auxint1
        Tolerancia = Arr_Programa(NroProg).Auxint2
        TiposDeDia = IIf(Not EsNulo(Arr_Programa(NroProg).Auxchar), Arr_Programa(NroProg).Auxchar, " ")
        Anual = CBool(Arr_Programa(NroProg).Auxlog1)
    Else
        Exit Sub
    End If

    If Anual Then
        'calculo de inicio del semetre
        Fec_Ini_1_Sem = C_Date("01/01/" & Year(A_fecha))
        Fec_Fin_1_Sem = C_Date("31/12/" & Year(A_fecha))
        Fec_Ini_Sem = Fec_Ini_1_Sem
        Fec_Fin_Sem = Fec_Fin_1_Sem
        ' SE AGREGARON ESTAS 2 INICIALIZACIONES
        Fec_Ini_Calc = Fec_Ini_Sem
        Fec_Fin_Calc = Fec_Fin_Sem
    Else
        'calculo de inicio del semetre
        Fec_Ini_1_Sem = C_Date("01/01/" & Year(A_fecha))
        Fec_Ini_2_Sem = C_Date("01/07/" & Year(A_fecha))
        Fec_Ini_Sem = IIf(A_fecha >= Fec_Ini_2_Sem, Fec_Ini_2_Sem, Fec_Ini_1_Sem)
        Fec_Fin_1_Sem = C_Date("30/06/" & Year(A_fecha))
        Fec_Fin_2_Sem = C_Date("31/12/" & Year(A_fecha))
        Fec_Fin_Sem = IIf(A_fecha >= Fec_Ini_2_Sem, Fec_Fin_2_Sem, Fec_Fin_1_Sem)
        Fec_Fin_Sem = IIf(A_fecha < Fec_Fin_Sem, A_fecha, Fec_Fin_Sem)
        ' SE AGREGARON ESTAS 2 INICIALIZACIONES
        Fec_Ini_Calc = Fec_Ini_Sem
        Fec_Fin_Calc = Fec_Fin_Sem
    End If
    
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Busco la ultima fase inactiva"
    End If
    
    'Busco la ultima fase inactiva
    StrSql = "SELECT * FROM fases WHERE real = -1 AND empleado = " & buliq_empleado!ternro
    StrSql = StrSql & " ORDER BY altfec "
    OpenRecordset StrSql, rs_Fases
    
    If Not rs_Fases.EOF Then
        rs_Fases.MoveLast
        'Busco la fecha de Inicio
        If rs_Fases!altfec > Fec_Ini_Sem Then
            Fec_Ini_Calc = rs_Fases!altfec
        Else
            Fec_Ini_Calc = Fec_Ini_Sem
        End If
        'Busco la fecha de fin
        If Not EsNulo(rs_Fases!bajfec) Then
            'Fec_Fin_Calc = rs_Fases!bajfec
            Fec_Fin_Calc = IIf(rs_Fases!bajfec > Fec_Fin_Sem, Fec_Fin_Sem, rs_Fases!bajfec)
            If rs_Fases!bajfec > Fec_Fin_Sem Then
                Incluir = True
            Else
                Incluir = False
            End If
        Else
            Fec_Fin_Calc = Fec_Fin_Sem
            'FGZ - 22/06/2006
            'Agregué esta linea
            Incluir = True
            
'            If Not EsNulo(buliq_empleado!empfbajaprev) Then
'                'Fec_Fin_Calc = buliq_empleado!empfbajaprev
'                Fec_Fin_Calc = IIf(buliq_empleado!empfbajaprev > Fec_Fin_Sem, Fec_Fin_Sem, buliq_empleado!empfbajaprev)
'                If buliq_empleado!empfbajaprev > Fec_Fin_Sem Then
'                    Incluir = True
'                Else
'                    Incluir = False
'                End If
'            Else
'                Fec_Fin_Calc = Fec_Fin_Sem
'                Incluir = True
'            End If
        End If
    Else
        Fec_Fin_Calc = Fec_Fin_Sem
    End If
    
    
    'FGZ - 05/01/2006
    'Si la fecha de baja es menor a la fecha de inicio y ademas
    'la fecha de baja es del año anterior o Semestre anterior ==>
    'La fecha de Inicio debe ser la fecha desde la 1er fase del año de la fecha de baja
    If Fec_Fin_Calc < Fec_Ini_Calc Then
        If Anual Then
            Fec_Ini_Sem = C_Date("01/01/" & Year(Fec_Fin_Calc))
            
            If rs_Fases!altfec > Fec_Ini_Sem Then
                Fec_Ini_Calc = rs_Fases!altfec
            Else
                Fec_Ini_Calc = Fec_Ini_Sem
            End If
        Else
            Fec_Ini_1_Sem = C_Date("01/01/" & Year(Fec_Fin_Calc))
            Fec_Ini_2_Sem = C_Date("01/07/" & Year(Fec_Fin_Calc))
            Fec_Ini_Sem = IIf(Fec_Fin_Calc >= Fec_Ini_2_Sem, Fec_Ini_2_Sem, Fec_Ini_1_Sem)
        
            If rs_Fases!altfec > Fec_Ini_Sem Then
                Fec_Ini_Calc = rs_Fases!altfec
            Else
                Fec_Ini_Calc = Fec_Ini_Sem
            End If
        End If
    End If
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Fecha de Inicio del calculo: " & Fec_Ini_Calc
        Flog.writeline Espacios(Tabulador * 4) & "Fecha de Fin del calculo: " & Fec_Fin_Calc
    End If


    'Debo calcular los dias por mes
    Dias_Sac = 0
    Aux_Mes_Inicio = Month(Fec_Ini_Calc)
    Aux_Mes_Fin = Month(Fec_Fin_Calc)
    Aux_Desde = Fec_Ini_Calc
    Aux_Hasta = IIf(Month(Fec_Fin_Calc) > Month(Aux_Desde), C_Date("01/" & Month(Aux_Desde) + 1 & "/" & Year(Aux_Desde)) - 1, Fec_Fin_Calc)
    
    Do While Aux_Mes_Inicio <= Aux_Mes_Fin
        If Month(Aux_Desde) = 12 Then
            Ultimo_Dia_del_Mes = C_Date("31/12/" & Year(Aux_Desde))
        Else
            Ultimo_Dia_del_Mes = C_Date("01/" & Month(Aux_Desde) + 1 & "/" & Year(Aux_Desde)) - 1
        End If
        
        '(---) subrango de Fase
        '[---] subrango de Periodo analizando
        
        'FGZ - 05/07/2006
        If Aux_Desde > C_Date("01/" & Month(Aux_Desde) & "/" & Year(Aux_Desde)) Then
            DesdeInicio = False
        Else
            DesdeInicio = True
        End If
        If Aux_Hasta >= Ultimo_Dia_del_Mes Then
            HastaFin = True
        Else
            HastaFin = False
        End If
        
        If Aux_Desde > C_Date("01/" & Month(Aux_Desde) & "/" & Year(Aux_Desde)) And Aux_Hasta < Ultimo_Dia_del_Mes Then
                    '-----[--(-----------)---]-----
            Aux_Dias = DateDiff("d", C_Date("01/" & Month(Aux_Desde) & "/" & Year(Aux_Desde)), Aux_Desde)
            Aux_Dias = Aux_Dias + DateDiff("d", Aux_Hasta, Ultimo_Dia_del_Mes)
            If Not Incluir Then
                Aux_Dias = Aux_Dias + 1
            End If
        Else
            If Aux_Desde = C_Date("01/" & Month(Aux_Desde) & "/" & Year(Aux_Desde)) And Aux_Hasta <= Ultimo_Dia_del_Mes Then
                    '--(--[--------------)---]-----
                If Fec_Fin_Calc = Aux_Hasta Then
                    If Incluir Then
                        Aux_Dias = DateDiff("d", Aux_Hasta, Ultimo_Dia_del_Mes)
                    Else
                        If Day(Ultimo_Dia_del_Mes) = 31 Then
                            Aux_Dias = DateDiff("d", DateAdd("d", -1, Aux_Hasta), DateAdd("d", -1, Ultimo_Dia_del_Mes))
                        Else
                            If Day(Ultimo_Dia_del_Mes) = 28 Then
                                Aux_Dias = DateDiff("d", DateAdd("d", -1, Aux_Hasta), Ultimo_Dia_del_Mes)
                            Else
                                If Day(Ultimo_Dia_del_Mes) = 29 Then
                                    Aux_Dias = DateDiff("d", DateAdd("d", -1, Aux_Hasta), Ultimo_Dia_del_Mes)
                                Else
                                    'FGZ - 22/06/2006
                                    'Aux_Dias = DateDiff("d", DateAdd("d", -1, Aux_Hasta), Ultimo_Dia_del_Mes)
                                    If Fec_Fin_Calc = Fec_Fin_Sem Then
                                        Aux_Dias = DateDiff("d", Aux_Hasta, Ultimo_Dia_del_Mes)
                                    Else
                                        Aux_Dias = DateDiff("d", DateAdd("d", -1, Aux_Hasta), Ultimo_Dia_del_Mes)
                                    End If
                                End If
                            End If
                        End If
                    End If
                Else
                    Aux_Dias = DateDiff("d", Aux_Hasta, Ultimo_Dia_del_Mes)
                End If
            Else
                If Aux_Desde > C_Date("01/" & Month(Aux_Desde) & "/" & Year(Aux_Desde)) And Aux_Hasta >= Ultimo_Dia_del_Mes Then
                    '-----[--------------(---]--)--
                    Aux_Dias = DateDiff("d", C_Date("01/" & Month(Aux_Desde) & "/" & Year(Aux_Desde)), Aux_Desde)
                Else
                    Aux_Dias = 0
                End If
            End If
        End If
        
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Rango hasta el " & Ultimo_Dia_del_Mes
            Flog.writeline Espacios(Tabulador * 5) & "Dias fuera de fase " & Aux_Dias
        End If
        
        'Descontar las licencias en el mes
        If Not EsNulo(TiposDeDia) And TiposDeDia <> " " Then
            StrSql = "SELECT * FROM emp_lic WHERE empleado = " & buliq_empleado!ternro & _
                     " AND tdnro IN (" & TiposDeDia & ") " & _
                     " AND elfechadesde <=" & ConvFecha(Fec_Fin_Calc) & _
                     " AND elfechahasta >= " & ConvFecha(Fec_Ini_Calc)
            OpenRecordset StrSql, rs_Lic
            Dias_Aus = 0
            Do While Not rs_Lic.EOF
                If rs_Lic!elfechahasta <= Aux_Hasta Then
                    Aux_DiasLic = CantidadDeDias(Aux_Desde, Aux_Hasta, rs_Lic!elfechadesde, rs_Lic!elfechahasta)
                Else
                    If rs_Lic!elfechadesde <= Aux_Desde Then
                        Aux_DiasLic = IIf((CantidadDeDias(Aux_Desde, Aux_Hasta, rs_Lic!elfechadesde, rs_Lic!elfechahasta)) < 0, 0, CantidadDeDias(Aux_Desde, Aux_Hasta, rs_Lic!elfechadesde, rs_Lic!elfechahasta))
                    Else
                        Aux_DiasLic = IIf((CantidadDeDias(Aux_Desde, Aux_Hasta, rs_Lic!elfechadesde, rs_Lic!elfechahasta)) < 0, 0, CantidadDeDias(Aux_Desde, Aux_Hasta, rs_Lic!elfechadesde, rs_Lic!elfechahasta))
                    End If
                End If
                
                Dias_Aus = Dias_Aus + Aux_DiasLic
                rs_Lic.MoveNext
            Loop
            'Topeo
            If Month(Aux_Desde) = 2 Then 'Febrero
                If Biciesto(Year(Aux_Desde)) Then
                    If Dias_Aus >= 29 Then
                        Dias_Aus = 30
                    End If
                Else
                    If Dias_Aus >= 28 Then
                        Dias_Aus = 30
                    End If
                End If
            Else
                If Dias_Aus > 30 Then
                    Dias_Aus = 30
                End If
            End If
        Else
            Dias_Aus = 0
        End If
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 5) & "Descuento " & Dias_Aus & " dias de licencia."
        End If
        
'        'FGZ - 11/05/2006
'        If Aux_Dias <> 0 Then
'            If Month(Aux_Desde) = 2 Then 'Febrero
'                If Biciesto(Year(Aux_Desde)) Then
'                    Aux_Dias = Aux_Dias + 1
'                Else
'                    Aux_Dias = Aux_Dias + 2
'                End If
'            End If
'        End If
'        Aux_Dias = 30 - (Aux_Dias + Dias_Aus)
        
        
        'FGZ - 05/07/2006
        If Aux_Dias <> 0 Then
            If Month(Aux_Desde) = 2 Then 'Febrero
                If Biciesto(Year(Aux_Desde)) Then
                    If Not HastaFin Then
                        Aux_Dias = Aux_Dias + 1
                    End If
                Else
                    If Not HastaFin Then
                        Aux_Dias = Aux_Dias + 2
                    End If
                End If
            End If
        End If
        Aux_Dias = 30 - (Aux_Dias + Dias_Aus)
        
        
        'Topeo
        If Month(Aux_Desde) = 2 Then 'Febrero
            If Biciesto(Year(Aux_Desde)) Then
                If Day(Aux_Desde) >= 28 Then
                    Aux_Dias = 1
                End If
            Else
                If Day(Aux_Desde) = 28 Then
                    Aux_Dias = 1
                End If
            End If
        Else
            If Day(Aux_Desde) >= 30 Then
                Aux_Dias = 1
            End If
        End If
    
        Aux_Mes_Inicio = Aux_Mes_Inicio + 1
        Aux_Desde = C_Date("01/" & Aux_Mes_Inicio & "/" & Year(Aux_Desde))
        Aux_Hasta = IIf(Month(Fec_Fin_Calc) > Aux_Mes_Inicio, C_Date("01/" & Aux_Mes_Inicio + 1 & "/" & Year(Aux_Desde)) - 1, Fec_Fin_Calc)
        
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 6) & "Acumulo " & IIf((Aux_Dias) < 0, 0, Aux_Dias) & " dias"
        End If
        Dias_Sac = Dias_Sac + IIf((Aux_Dias) < 0, 0, Aux_Dias)
    Loop
    
    Dias_Sac = IIf(Dias_Sac >= (Maximo - Tolerancia), Maximo, Dias_Sac)
    Valor = Dias_Sac
    Bien = True

End Sub


Public Sub bus_Acum4_G()
' ---------------------------------------------------------------------------------------------
' Descripcion: Acum.Mens.Meses Variables. gacum4.p
'              Obtencion del Acumulador  1 - Semestral    a) Liq Actual
'                                                         b) Liq. Anterior
'
'                                        2 - Anual        a) Liq Actual
'                                                         b) Liq. Anterior
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------

Dim nroAcu As Long          ' Nro de Acumulador
Dim CantMeses As Integer    ' Cantidad de Meses
Dim Opcion As Long          ' 1 - Sumatoria
                            ' 2 - Maximo
                            ' 3 - Promedio
                            ' 4 - Promedio sin 0
                            ' 5 - Minimo
                            
Dim Con_Fases As Boolean     ' True  - Calculo con Fases
                            ' False - Calculo sin Fases
Dim Monto As Boolean        ' True  - MOnto
                            ' False - Cantidad
Dim Incluye As Integer      ' 0  - No Incluye
                            ' 1  - Proceso Actual
                            ' 2  - Periodo Actual sin proceso actual
                            ' 3  - Periodo Actual con Proceso actual
Dim MesHasta As Integer
Dim AnioHasta As Integer
Dim Cantidad As Double
Dim CantAnios As Integer
Dim mesActual1
Dim anioActual1
Dim cantidadDeMeses
Dim K
Dim rsConsult As New ADODB.Recordset
Dim FDesde1
Dim FHasta1

Dim UsaActual As Boolean
Dim UsaPeriodoActual As Boolean
'Dim Param_cur As New ADODB.Recordset
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda " & NroProg
    End If
    ' Obtener los parametros de la Busqueda
    'StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroProg)
    'OpenRecordset StrSql, Param_cur
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        nroAcu = Arr_Programa(NroProg).Auxint1
        CantMeses = Arr_Programa(NroProg).Auxint2
        Opcion = Arr_Programa(NroProg).Auxint3
        Monto = IIf(Arr_Programa(NroProg).Auxint5 = -1 Or Arr_Programa(NroProg).Auxint5 = 2, True, False)
        Incluye = CInt(Arr_Programa(NroProg).Auxint4)
        Con_Fases = CBool(Arr_Programa(NroProg).Auxlog1)
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontré la Busqueda " & NroProg
        End If
        Exit Sub
    End If


Select Case Incluye
Case 0: 'No icluye ni Periodo actual ni proceso actual
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "No icluye ni Periodo actual ni proceso actual "
    End If

    If buliq_periodo!pliqmes = 1 Then
        MesHasta = 12
        AnioHasta = buliq_periodo!pliqanio - 1
    Else
        MesHasta = buliq_periodo!pliqmes - 1
        AnioHasta = buliq_periodo!pliqanio
    End If
    UsaActual = False
    UsaPeriodoActual = False
Case 1: ' Incluye Proceso Actual y no periodo actual
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Incluye Proceso Actual y no periodo actual "
    End If

    If buliq_periodo!pliqmes = 1 Then
        MesHasta = 12
        AnioHasta = buliq_periodo!pliqanio - 1
    Else
        MesHasta = buliq_periodo!pliqmes - 1
        AnioHasta = buliq_periodo!pliqanio
    End If
    UsaActual = True
    UsaPeriodoActual = False
Case 2: 'Incluye Periodo Actual y el Proceso Actual
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Incluye Periodo Actual y el Proceso Actual "
    End If

    MesHasta = buliq_periodo!pliqmes
    AnioHasta = buliq_periodo!pliqanio
    UsaActual = True
    UsaPeriodoActual = True
Case 3: 'Incluye Periodo Actual y no el Proceso Actual
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Incluye Periodo Actual y no el Proceso Actual "
    End If

    MesHasta = buliq_periodo!pliqmes
    AnioHasta = buliq_periodo!pliqanio
    UsaActual = False
    UsaPeriodoActual = True
End Select

    Bien = False
    Valor = 0

CantAnios = Int(CantMeses / 12)
CantMeses = CantMeses - (CantAnios * 12)


Select Case Opcion
Case 1: 'Sumatoria
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Sumatoria "
    End If

    Call AM_SumG(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, UsaPeriodoActual)
Case 2: 'Maximo
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Maximo "
    End If

    Call AM_MaxG(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, UsaPeriodoActual)
Case 3: 'Promedio
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Promedio "
    End If
    
    'Busco cuantos meses estubo activo el empleado
    cantidadDeMeses = 0
    mesActual1 = MesHasta
    anioActual1 = AnioHasta
    
    For K = 1 To ((CantAnios * 12) + CantMeses)
        
        'Controlo si para el mes actual estubo activo
        FDesde1 = C_Date("01/" & mesActual1 & "/" & anioActual1)
        If mesActual1 = 12 Then
           FHasta1 = "01/01/" & (anioActual1 + 1)
        Else
           FHasta1 = "01/" & (mesActual1 + 1) & "/" & anioActual1
        End If
        FHasta1 = DateAdd("d", -1, C_Date(FHasta1))
        
        StrSql = " SELECT * FROM fases"
        StrSql = StrSql & " Where real= -1 AND Empleado = " & buliq_empleado!ternro
        StrSql = StrSql & " AND ("
        StrSql = StrSql & "      (altfec <= " & ConvFecha(FHasta1) & " AND bajfec IS NULL)"
        StrSql = StrSql & "  OR  (altfec <= " & ConvFecha(FHasta1) & " AND bajfec >= " & ConvFecha(FDesde1) & ")"
        StrSql = StrSql & "     )"
    
        OpenRecordset StrSql, rsConsult
        
        If Not rsConsult.EOF Then
           cantidadDeMeses = cantidadDeMeses + 1
        End If
        
        rsConsult.Close
        
        mesActual1 = mesActual1 - 1
        If mesActual1 = 0 Then
             mesActual1 = 12
             anioActual1 = anioActual1 - 1
        End If
    Next
    
    Call AM_PromG(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, cantidadDeMeses, UsaPeriodoActual)
'    Call AM_Prom(NroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, ((CantAnios * 12) + CantMeses), UsaPeriodoActual)
Case 4: 'Promedio sin cero
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Promedio sin cero "
    End If

    Call AM_PromSin0G(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, UsaPeriodoActual)
Case 5: 'Minimo
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Minimo "
    End If

    Call AM_MinG(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, UsaPeriodoActual)
Case Else
End Select

If Not Monto Then
    Valor = Cantidad
End If
Bien = True

' Cierro todo y libero
'If Param_cur.State = adStateOpen Then Param_cur.Close
'Set Param_cur = Nothing

End Sub

Public Sub bus_Titulos()
' ---------------------------------------------------------------------------------------------
' Descripcion: Busca si el legajo tiene cargado algun titulos del Nivel pasado como parametro.
' Autor      : FGZ
' Fecha      : 23/08/2005
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim rs_Emp_titulo As New ADODB.Recordset
Dim rs_NivelEst As New ADODB.Recordset

Dim Auxiliar As String
Dim Nivel As Integer

    Bien = False
    Valor = 0

    'Obtener los parametros de la Busqueda
'        'esto deberia ser así.
'        'Deberia haber una generador de busqueda para configurar que nivel se quiere buscar
'        ' pero por ahora queda asi
'        If Arr_Programa(NroProg).Prognro <> 0 Then
'            Nivel = Arr_Programa(NroProg).Auxint1
'            'Nivel = buliq_empleado.nivnro
'        Else
'            Exit Sub
'        End If

    Nivel = 0
    
    StrSql = "SELECT nivnro,nivdesc "
    StrSql = StrSql & " FROM nivest "
    StrSql = StrSql & " WHERE nivnro = " & Nivel
    OpenRecordset StrSql, rs_NivelEst
    If Not rs_NivelEst.EOF Then
        Auxiliar = rs_NivelEst!nivdesc
    Else
        Auxiliar = "Se busca todos los niveles mayores a Primaria"
    End If
    If CBool(USA_DEBUG) Then
        If Nivel = 0 Then
            Flog.writeline Espacios(Tabulador * 4) & Auxiliar
        Else
            Flog.writeline Espacios(Tabulador * 4) & "Nivel Buscado " & Auxiliar
        End If
    End If

    'busco los titulos de nivel
    StrSql = "SELECT titulo.titnro, titulo.titdesabr, nivnro  "
    StrSql = StrSql & " FROM titulo "
    StrSql = StrSql & " INNER JOIN emp_tit ON emp_tit.titnro = titulo.titnro "
    StrSql = StrSql & " WHERE emp_tit.ternro = " & buliq_cabliq!Empleado
    If Nivel <> 0 Then
        StrSql = StrSql & " AND nivnro = " & Nivel
    Else
        StrSql = StrSql & " AND nivnro > 1 "    'de secundaria para arriba
    End If
    StrSql = StrSql & " ORDER BY nivnro "
    OpenRecordset StrSql, rs_Emp_titulo

    If Not rs_Emp_titulo.EOF Then
        Valor = rs_Emp_titulo!nivnro
    Else
        Valor = 0
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontraron títulos. "
        End If
    End If
    Bien = True

'Cierro todo y libero
    If rs_Emp_titulo.State = adStateOpen Then rs_Emp_titulo.Close
    If rs_NivelEst.State = adStateOpen Then rs_NivelEst.Close
    Set rs_Emp_titulo = Nothing
    Set rs_NivelEst = Nothing
    
End Sub



Public Sub bus_DiasHabiles_Trabajados()
' ---------------------------------------------------------------------------------------------
' Descripcion: Calculo de Dias Habiles trabajados entre dos fechas teniendo en cuenta las fases
'              Total = DiasDelMes - Licencias - Fin de semana - Feriados
' Autor      : FGZ
' Fecha      : 31/10/2005
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim TipoFecha As Integer    '1- Periodo
                            '2- Proceso
Dim DiasHabiles As Double
Dim dia As Date
Dim EsFeriado As Boolean

Dim FechaDesde As Date
Dim FechaHasta As Date
Dim objFeriado As New Feriado
Dim ConFases As Boolean
Dim Aux_FechaDesde As Date
Dim Aux_FechaHasta As Date
Dim rs_Fases As New ADODB.Recordset

Dim IncluyeSabados As Boolean
Dim PorcentajeSabados As Double
Dim IncluyeDomingos As Boolean
Dim PorcentajeDomingos As Double
Dim IncluyeFeriados As Boolean
Dim PorcentajeFeriados As Double

    ConFases = True
    DiasHabiles = 0
    Bien = False
    
    Set objFeriado.Conexion = objConn
    
    ' Obtener los parametros de la Busqueda
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda " & NroProg
    End If
    If Arr_Programa(NroProg).Prognro <> 0 Then
        TipoFecha = Arr_Programa(NroProg).Auxint1
        ConFases = CBool(Arr_Programa(NroProg).Auxlog1)
        IncluyeSabados = CBool(Arr_Programa(NroProg).Auxlog2)
        PorcentajeSabados = Arr_Programa(NroProg).Auxint2
        IncluyeFeriados = CBool(Arr_Programa(NroProg).Auxlog3)
        PorcentajeFeriados = Arr_Programa(NroProg).Auxint3
        IncluyeDomingos = CBool(Arr_Programa(NroProg).Auxlog4)
        PorcentajeDomingos = Arr_Programa(NroProg).Auxint4
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busqueda no encontrada "
        End If
        Exit Sub
    End If

    If TipoFecha = 1 Then
        FechaDesde = buliq_periodo!pliqdesde
        FechaHasta = buliq_periodo!pliqhasta
    Else
        FechaDesde = buliq_proceso!profecini
        FechaHasta = buliq_proceso!profecfin
    End If
    
If ConFases Then
    'Busco las fases del periodo
    StrSql = "SELECT * FROM fases WHERE empleado = " & buliq_empleado!ternro & _
             " AND real = -1 AND Fases.altfec <= " & ConvFecha(FechaHasta) & _
             " AND (Fases.bajfec >= " & ConvFecha(FechaDesde) & " OR Fases.bajfec is null )" & _
             " ORDER BY altfec "
    OpenRecordset StrSql, rs_Fases
    
    Do While Not rs_Fases.EOF
        Aux_FechaDesde = IIf(rs_Fases!altfec < FechaDesde, FechaDesde, rs_Fases!altfec)
        If Not EsNulo(rs_Fases!bajfec) Then
            Aux_FechaHasta = IIf(rs_Fases!bajfec < FechaHasta, rs_Fases!bajfec, FechaHasta)
        Else
            Aux_FechaHasta = FechaHasta
        End If
        
        dia = Aux_FechaDesde
        Do While dia <= Aux_FechaHasta
            If Not Esta_de_Licencia(dia, buliq_empleado!ternro) Then
                EsFeriado = objFeriado.Feriado(dia, buliq_empleado!ternro, False)
                
                If Not EsFeriado Then   'No es feriado
                    If Not Weekday(dia) = 1 Then 'Domingo
                        If Weekday(dia) = 7 Then 'Sabado
                            If IncluyeSabados Then
                                DiasHabiles = DiasHabiles + (1 * PorcentajeSabados / 100)
                            End If
                        Else
                            DiasHabiles = DiasHabiles + 1
                        End If
                    Else
                        If IncluyeDomingos Then
                            DiasHabiles = DiasHabiles + (1 * PorcentajeDomingos / 100)
                        End If
                    End If
                Else    'Incluye feriados
                    DiasHabiles = DiasHabiles + (1 * PorcentajeFeriados / 100)
                End If
            Else
                'Ese dia esta de licencia
            End If
            dia = dia + 1
        Loop
        
       rs_Fases.MoveNext
    Loop
Else
    dia = FechaDesde
    Do While dia <= FechaHasta
        If Not Esta_de_Licencia(dia, buliq_empleado!ternro) Then
            EsFeriado = objFeriado.Feriado(dia, buliq_empleado!ternro, False)
            If Not EsFeriado Then   'No es feriado
                If Not Weekday(dia) = 1 Then 'Domingo
                    If Weekday(dia) = 7 Then 'Sabado
                        If IncluyeSabados Then
                            DiasHabiles = DiasHabiles + (1 * PorcentajeSabados / 100)
                        End If
                    Else
                        DiasHabiles = DiasHabiles + 1
                    End If
                Else
                    If IncluyeDomingos Then
                        DiasHabiles = DiasHabiles + (1 * PorcentajeDomingos / 100)
                    End If
                End If
            Else    'Incluye feriados
                DiasHabiles = DiasHabiles + (1 * PorcentajeFeriados / 100)
            End If
        Else
            'Esta de licencia ese dia
        End If
        dia = dia + 1
    Loop
End If

If DiasHabiles > 30 Then
    DiasHabiles = 30
End If
Bien = True
Valor = DiasHabiles

'Cierro y libero
If rs_Fases.State = adStateOpen Then rs_Fases.Close
Set rs_Fases = Nothing
End Sub


Public Sub bus_Datos_Ganancias()
' ---------------------------------------------------------------------------------------------
' Descripcion: Retorna datos de ganancias
' Autor      : FGZ
' Fecha      : 12/01/2006
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Opcion  As Integer      '1- Ganancias imponible para Deducciones
                            '2- Porcentaje de Deduccion
                            '3- Ganancias imponible
                            '4- Porcentaje de Escala
                            '5- Cuota Fija
                            '6- Impuesto de Escala
Dim Anual As Boolean        'True: Anual
                            'False: Final
Dim prorratea As Boolean

Dim Mes_Ret As Integer
Dim Ano_Ret As Integer
Dim Aux_Valor As Double
Dim Fecha As Date
Dim Gan_Imponible As Double
Dim Deducciones As Double
Dim Gan_imponible_Items As Double
Dim Deducciones_Items As Double

Dim rs As New ADODB.Recordset
Dim rs_escala_ded As New ADODB.Recordset
Dim rs_Items_Tope As New ADODB.Recordset
Dim rs_escala As New ADODB.Recordset

'En la formula de ganancias serian los campos:
'1- Ganancias imponible para Deducciones    ==> Gan_imponible
'2- Porcentaje de Deduccion                 ==> escala_ded!esd_porcentaje
'3- Ganancias imponible                     ==> Gan_Imponible = Gan_Imponible + Deducciones + Ded_a23
'4- Porcentaje de Escala                    ==> rs_escala!escporexe
'5- Cuota Fija                              ==> rs_escala!esccuota
'6- Impuesto de Escala                      ==> Impuesto_Escala



    ' Obtener los parametros de la Busqueda
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda " & NroProg
    End If
    If Arr_Programa(NroProg).Prognro <> 0 Then
        Opcion = Arr_Programa(NroProg).Auxint1
        Anual = CBool(Arr_Programa(NroProg).Auxlog1)
        prorratea = CBool(Arr_Programa(NroProg).Auxlog2)
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busqueda no encontrada "
        End If
        Exit Sub
    End If
    

    Fecha = buliq_proceso!profecfin
    Mes_Ret = IIf(prorratea, 12, Month(Fecha))
    Ano_Ret = Year(Fecha)
    
    Select Case Opcion
    Case 1: 'Ganancia Imponible para Deducciones
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Opcion ==> Ganancia Imponible para Deducciones"
        End If
        
        'Busco los registros generados en traza_gan
        StrSql = "SELECT * FROM  traza_gan "
        StrSql = StrSql & " WHERE traza_gan.fecha_pago <= " & ConvFecha(Fecha)
        'StrSql = StrSql & " WHERE traza_gan.pronro = " & rs_Proceso!pronro
        StrSql = StrSql & " AND traza_gan.ternro = " & buliq_empleado!ternro
        StrSql = StrSql & " ORDER BY fecha_pago DESC, traza_gan.pronro DESC"
        OpenRecordset StrSql, rs
        
        If Not rs.EOF Then
            Aux_Valor = IIf(Not EsNulo(rs!Ganneta), rs!Ganneta, 0)
        Else
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "No se encontró registro de ganancias a esa fecha"
            End If
            Aux_Valor = 0
        End If
        Bien = True
    '-------------------------------------------------------------------------------------------
    Case 2: 'Porcentaje de Deduccion
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Opcion ==> Porcentaje de Deduccion"
        End If
    
        'Busco los registros generados en traza_gan
        StrSql = "SELECT * FROM  traza_gan "
        StrSql = StrSql & " WHERE traza_gan.fecha_pago <= " & ConvFecha(Fecha)
        'StrSql = StrSql & " WHERE traza_gan.pronro = " & rs_Proceso!pronro
        StrSql = StrSql & " AND traza_gan.ternro = " & buliq_empleado!ternro
        StrSql = StrSql & " ORDER BY fecha_pago DESC, traza_gan.pronro DESC"
        OpenRecordset StrSql, rs
        
        If Not rs.EOF Then
            
            StrSql = "SELECT * FROM traza_gan_Item_top "
            StrSql = StrSql & " INNER JOIN item ON item.itenro = traza_gan_Item_top.itenro "
            StrSql = StrSql & " WHERE ternro =" & rs!ternro
            StrSql = StrSql & " AND pronro =" & rs!pronro
            StrSql = StrSql & " ORDER BY traza_gan_Item_top.itenro"
            OpenRecordset StrSql, rs_Items_Tope
            
            Gan_imponible_Items = 0
            Deducciones_Items = 0
            Do While Not rs_Items_Tope.EOF
                If Not CBool(rs_Items_Tope!itesigno) Then
                    If (rs_Items_Tope!itetipotope = 1) Or (rs_Items_Tope!itetipotope = 4) Then
                        'Ded_a23_Items = Ded_a23_Items - CDbl(rs_items_tope!Monto)
                    Else
                        Deducciones_Items = Deducciones_Items - IIf(Not EsNulo(rs_Items_Tope!Monto), rs_Items_Tope!Monto, 0)
                    End If
                Else
                    If rs_Items_Tope!Itenro >= 5 Then
                        'Descuentos_Items = Descuentos_Items + IIf(Not EsNulo(rs_Items_Tope!Monto), rs_Items_Tope!Monto, 0)
                    End If
                    Gan_imponible_Items = Gan_imponible_Items + IIf(Not EsNulo(rs_Items_Tope!Monto), rs_Items_Tope!Monto, 0)
                End If
                    
                rs_Items_Tope.MoveNext
            Loop
            Gan_Imponible = Gan_imponible_Items
            Deducciones = Deducciones_Items
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Gan_Imponible: " & Gan_Imponible
                Flog.writeline Espacios(Tabulador * 4) & "Deducciones: " & Deducciones
            End If

            If Ano_Ret >= 2000 And Gan_Imponible > 0 Then
                If Not Anual Then
                    StrSql = "SELECT * FROM escala_ded "
                    StrSql = StrSql & " WHERE esd_topeinf <= " & (Gan_Imponible + Deducciones)
                    StrSql = StrSql & " AND esd_topesup >=" & (Gan_Imponible + Deducciones)
                Else
                    StrSql = "SELECT * FROM escala_ded "
                    StrSql = StrSql & " WHERE esd_topeinf <= " & ((Gan_Imponible + Deducciones) / Mes_Ret * 12)
                    StrSql = StrSql & " AND esd_topesup >=" & ((Gan_Imponible + Deducciones) / Mes_Ret * 12)
                End If
                OpenRecordset StrSql, rs_escala_ded
            
                If Not rs_escala_ded.EOF Then
                    Aux_Valor = rs_escala_ded!esd_porcentaje
                Else
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "Porcentaje de escala no encontrado. Default 100"
                    End If
                    Aux_Valor = 100
                End If
            Else
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "No se busca en escala, Ganancia imponible <= 0."
                End If
            End If
        Else
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "No se encontró registro de ganancias a esa fecha"
            End If
            Aux_Valor = 0
        End If
        Bien = True
    '-------------------------------------------------------------------------------------------
    Case 3: 'Ganancia Imponible
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Opcion ==> Ganancia Imponible"
        End If
        
        'Busco los registros generados en traza_gan
        StrSql = "SELECT * FROM  traza_gan "
        StrSql = StrSql & " WHERE traza_gan.fecha_pago <= " & ConvFecha(Fecha)
        'StrSql = StrSql & " WHERE traza_gan.pronro = " & rs_Proceso!pronro
        StrSql = StrSql & " AND traza_gan.ternro = " & buliq_empleado!ternro
        StrSql = StrSql & " ORDER BY fecha_pago DESC, traza_gan.pronro DESC"
        OpenRecordset StrSql, rs
        
        If Not rs.EOF Then
            Aux_Valor = IIf(Not EsNulo(rs!Ganneta), rs!Ganimpo, 0)
        Else
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "No se encontró registro de ganancias a esa fecha"
            End If
            Aux_Valor = 0
        End If
        Bien = True
    '-------------------------------------------------------------------------------------------
    Case 4: 'Porcentaje de Escala
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Opcion ==> Porcentaje de Escala"
        End If
    
        'Busco los registros generados en traza_gan
        StrSql = "SELECT * FROM  traza_gan "
        StrSql = StrSql & " WHERE traza_gan.fecha_pago <= " & ConvFecha(Fecha)
        'StrSql = StrSql & " WHERE traza_gan.pronro = " & rs_Proceso!pronro
        StrSql = StrSql & " AND traza_gan.ternro = " & buliq_empleado!ternro
        StrSql = StrSql & " ORDER BY fecha_pago DESC, traza_gan.pronro DESC"
        OpenRecordset StrSql, rs
        
        If Not rs.EOF Then
            Gan_Imponible = IIf(Not EsNulo(rs!Ganneta), rs!Ganimpo, 0)
            
            If Gan_Imponible > 0 Then
                'Entrar en la escala con las ganancias acumuladas
                StrSql = "SELECT * FROM escala " & _
                         " WHERE escmes =" & Mes_Ret & _
                         " AND escano =" & Ano_Ret & _
                         " AND escinf <= " & Gan_Imponible & _
                         " AND escsup >= " & Gan_Imponible
                OpenRecordset StrSql, rs_escala
                
                If Not rs_escala.EOF Then
                    Aux_Valor = IIf(Not EsNulo(rs_escala!escporexe), rs_escala!escporexe, 0)
                Else
                    Aux_Valor = 0
                End If
            Else
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "Gan_imponible <= 0."
                End If
                Aux_Valor = 0
            End If
        Else
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "No se encontró registro de ganancias a esa fecha"
            End If
            Aux_Valor = 0
        End If
    
        Bien = True
    '-------------------------------------------------------------------------------------------
    Case 5: 'Cuota Fija
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Opcion ==> Cuota Fija"
        End If
    
        'Busco los registros generados en traza_gan
        StrSql = "SELECT * FROM  traza_gan "
        StrSql = StrSql & " WHERE traza_gan.fecha_pago <= " & ConvFecha(Fecha)
        'StrSql = StrSql & " WHERE traza_gan.pronro = " & rs_Proceso!pronro
        StrSql = StrSql & " AND traza_gan.ternro = " & buliq_empleado!ternro
        StrSql = StrSql & " ORDER BY fecha_pago DESC, traza_gan.pronro DESC"
        OpenRecordset StrSql, rs
        
        If Not rs.EOF Then
            Gan_Imponible = IIf(Not EsNulo(rs!Ganneta), rs!Ganimpo, 0)
            
            If Gan_Imponible > 0 Then
                'Entrar en la escala con las ganancias acumuladas
                StrSql = "SELECT * FROM escala " & _
                         " WHERE escmes =" & Mes_Ret & _
                         " AND escano =" & Ano_Ret & _
                         " AND escinf <= " & Gan_Imponible & _
                         " AND escsup >= " & Gan_Imponible
                OpenRecordset StrSql, rs_escala
                
                If Not rs_escala.EOF Then
                    Aux_Valor = IIf(Not EsNulo(rs_escala!esccuota), rs_escala!esccuota, 0)
                Else
                    Aux_Valor = 0
                End If
            Else
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "Gan_imponible <= 0."
                End If
                Aux_Valor = 0
            End If
        Else
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "No se encontró registro de ganancias a esa fecha"
            End If
            Aux_Valor = 0
        End If
    
        Bien = True
    '-------------------------------------------------------------------------------------------
    Case 6: 'Impuesto Escala
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Opcion ==> Impuesto Escala"
        End If
        
        'Busco los registros generados en traza_gan
        StrSql = "SELECT * FROM  traza_gan "
        StrSql = StrSql & " WHERE traza_gan.fecha_pago <= " & ConvFecha(Fecha)
        'StrSql = StrSql & " WHERE traza_gan.pronro = " & rs_Proceso!pronro
        StrSql = StrSql & " AND traza_gan.ternro = " & buliq_empleado!ternro
        StrSql = StrSql & " ORDER BY fecha_pago DESC, traza_gan.pronro DESC"
        OpenRecordset StrSql, rs
        
        If Not rs.EOF Then
            Aux_Valor = IIf(Not EsNulo(rs!Imp_deter), rs!Imp_deter, 0)
        Else
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "No se encontró registro de ganancias a esa fecha"
            End If
            Aux_Valor = 0
        End If
        Bien = True
    '-------------------------------------------------------------------------------------------
    Case Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Opcion desconocida " & Opcion
        End If
        
        Bien = False
    End Select

    Valor = Aux_Valor

    'Cierro y libero
    If rs.State = adStateOpen Then rs.Close
    If rs_escala_ded.State = adStateOpen Then rs_escala_ded.Close
    If rs_Items_Tope.State = adStateOpen Then rs_Items_Tope.Close
    If rs_escala.State = adStateOpen Then rs_escala.Close
    
    Set rs = Nothing
    Set rs_escala_ded = Nothing
    Set rs_Items_Tope = Nothing
    Set rs_escala = Nothing
End Sub



Public Sub bus_Fecha()
' ---------------------------------------------------------------------------------------------
' Descripcion: Retornala fecha configurada por parametro
' Autor      : FGZ
' Fecha      : 03/06/2006
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Fecha As Date           ' Fecha Hasta
Dim TipoFecha As Integer
' 1 - A inicio de Año
' 2 - A inicio de periodo
' 3 - A inicio de proceso
' 4 - A fin de año
' 5 - A fin de Periodo
' 6 - A fin de Proceso
' 7 - A fecha de alta
' 8 - A fecha de alta reconocida
' 9 - A la fecha de baja
' 10 - A fecha de baja prevista
' 11 - A 1er dia mes siguiente
' 12 - A la fecha de inicio de rango
' 13 - A la fecha
Dim rs_Fases As New ADODB.Recordset


    Bien = False
    Valor = 0
    
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda " & NroProg
    End If
    
' 9 - A la fecha de baja
' 10 - A fecha de baja prevista
' 11 - A 1er dia mes siguiente
' 12 - A la fecha de inicio de rango
' 13 - A la fecha
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        TipoFecha = CInt(Arr_Programa(NroProg).Auxint1)
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busca "
            Select Case TipoFecha
                Case 1: 'A inicio de Año
                    Fecha = C_Date("01/01/" & buliq_periodo!pliqanio)
                Case 2: 'A inicio de periodo
                    Fecha = buliq_periodo!pliqdesde
                Case 3: 'A inicio de proceso
                    Fecha = buliq_proceso!profecini
                Case 4: 'A fin de año
                    Fecha = C_Date("31/12/" & buliq_periodo!pliqanio)
                Case 5: 'A fin de Periodo
                    Fecha = buliq_periodo!pliqhasta
                Case 6: 'A fin de proceso
                       Fecha = buliq_proceso!profecfin
                Case 7: 'A fecha de alta
                    StrSql = "SELECT * FROM fases WHERE empleado = " & buliq_empleado!ternro
                    StrSql = StrSql & " AND NOT altfec IS NULL "
                    StrSql = StrSql & " ORDER BY altfec "
                    OpenRecordset StrSql, rs_Fases
                    If Not rs_Fases.EOF Then
                        Fecha = rs_Fases!altfec
                    Else
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "No se encontro ninguna fase"
                        End If
                    End If
                Case 8: 'A fecha de alta reconocida
                    StrSql = "SELECT * FROM fases WHERE empleado = " & buliq_empleado!ternro
                    StrSql = StrSql & " AND NOT altfec IS NULL "
                    StrSql = StrSql & " AND fasrecofec = -1 "
                    StrSql = StrSql & " ORDER BY altfec "
                    OpenRecordset StrSql, rs_Fases
                    If Not rs_Fases.EOF Then
                        Fecha = rs_Fases!altfec
                    Else
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "No se encontro ninguna fase con marca de fecha de alta reconocida"
                        End If
                    End If
                Case 9: 'A la fecha de baja
                    StrSql = "SELECT * FROM fases WHERE estado = 0 AND empleado = " & buliq_empleado!ternro
                    StrSql = StrSql & " AND sueldo = -1 "
                    StrSql = StrSql & " AND not altfec is null "
                    StrSql = StrSql & " AND not bajfec is null "
                    StrSql = StrSql & " ORDER BY altfec "
                    OpenRecordset StrSql, rs_Fases
                    If Not rs_Fases.EOF Then
                        rs_Fases.MoveLast
                        Fecha = rs_Fases!bajfec
                    Else
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "No se encontro ninguna fase cerrada "
                        End If
                    End If
                Case 10: 'A la fecha de baja prevista
                    If Not EsNulo(buliq_empleado!empfbajaprev) Then
                        Fecha = buliq_empleado!empfbajaprev
                    Else
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "Fecha de baja prevista nula "
                        End If
                    End If
                Case 11: 'A 1er dia mes siguiente
                    If buliq_periodo!pliqmes = 12 Then
                        Fecha = C_Date("1/1/" & buliq_periodo!pliqanio + 1)
                    Else
                        Fecha = C_Date("01/" & buliq_periodo!pliqmes + 1 & "/" & buliq_periodo!pliqanio)
                    End If
                Case 12: 'A la fecha de inicio de rango
                    'mmmmmmm
                    
                    
                Case 13: 'A la fecha
                    If Not EsNulo(Arr_Programa(NroProg).Auxchar1) Then
                        Fecha = C_Date(Arr_Programa(NroProg).Auxchar1)
                    End If
            End Select
        End If
        
        Valor = CLng(Fecha)
        Bien = True
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontró la Busqueda " & NroProg
        End If
        Exit Sub
    End If

Termino:
    If rs_Fases.State = adStateOpen Then rs_Fases.Close
    Set rs_Fases = Nothing
    Exit Sub
    
ME_Local:
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Valor de fecha incorrecto " & Fecha
        End If
        Valor = 0
        Bien = False
        If rs_Fases.State = adStateOpen Then rs_Fases.Close
        Set rs_Fases = Nothing
End Sub


Public Sub bus_Acum_Con_Ajuste()
' ---------------------------------------------------------------------------------------------
' Descripcion: Acum.Mens.Meses Variables.
'              Obtencion del Acumulador  1 - Semestral    a) Liq Actual
'                                                         b) Liq. Anterior
'
'                                        2 - Anual        a) Liq Actual
'                                                         b) Liq. Anterior
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------

Dim nroAcu As Long          ' Nro de Acumulador
Dim CantMeses As Integer    ' Cantidad de Meses
Dim Opcion As Long          ' 1 - Sumatoria
                            ' 2 - Maximo
                            ' 3 - Promedio
                            ' 4 - Promedio sin 0
                            ' 5 - Minimo
                            
Dim Con_Fases As Boolean     ' True  - Calculo con Fases
                            ' False - Calculo sin Fases
Dim Monto As Boolean        ' True  - MOnto
                            ' False - Cantidad
Dim Incluye As Integer      ' 0  - No Incluye
                            ' 1  - Proceso Actual
                            ' 2  - Periodo Actual sin proceso actual
                            ' 3  - Periodo Actual con Proceso actual
Dim MesHasta As Integer
Dim AnioHasta As Integer
Dim Cantidad As Double
Dim CantAnios As Integer
Dim mesActual1
Dim anioActual1
Dim cantidadDeMeses
Dim K
Dim rsConsult As New ADODB.Recordset
Dim FDesde1
Dim FHasta1

Dim UsaActual As Boolean
Dim UsaPeriodoActual As Boolean
Dim Escala As Long
Dim TipoFecha As Long   '1 - Del periodo
                        '2 - Del la busqueda

    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda " & NroProg
    End If
    
    If Arr_Programa(NroProg).Prognro <> 0 Then
        nroAcu = Arr_Programa(NroProg).Auxint1
        CantMeses = Arr_Programa(NroProg).Auxint2
        Opcion = Arr_Programa(NroProg).Auxint3
        Monto = IIf(Arr_Programa(NroProg).Auxint5 = -1 Or Arr_Programa(NroProg).Auxint5 = 2, True, False)
        Incluye = CInt(Arr_Programa(NroProg).Auxint4)
        Con_Fases = CBool(Arr_Programa(NroProg).Auxlog1)
        Escala = CLng(Arr_Programa(NroProg).Auxchar1)
        TipoFecha = CLng(Arr_Programa(NroProg).Auxchar2)
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontré la Busqueda " & NroProg
        End If
        Exit Sub
    End If


Select Case Incluye
Case 0: 'No icluye ni Periodo actual ni proceso actual
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "No icluye ni Periodo actual ni proceso actual "
    End If

    If buliq_periodo!pliqmes = 1 Then
        MesHasta = 12
        AnioHasta = buliq_periodo!pliqanio - 1
    Else
        MesHasta = buliq_periodo!pliqmes - 1
        AnioHasta = buliq_periodo!pliqanio
    End If
    UsaActual = False
    UsaPeriodoActual = False
Case 1: ' Incluye Proceso Actual y no periodo actual
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Incluye Proceso Actual y no periodo actual "
    End If

    If buliq_periodo!pliqmes = 1 Then
        MesHasta = 12
        AnioHasta = buliq_periodo!pliqanio - 1
    Else
        MesHasta = buliq_periodo!pliqmes - 1
        AnioHasta = buliq_periodo!pliqanio
    End If
    UsaActual = True
    UsaPeriodoActual = False
Case 2: 'Incluye Periodo Actual y el Proceso Actual
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Incluye Periodo Actual y el Proceso Actual "
    End If

    MesHasta = buliq_periodo!pliqmes
    AnioHasta = buliq_periodo!pliqanio
    UsaActual = True
    UsaPeriodoActual = True
Case 3: 'Incluye Periodo Actual y no el Proceso Actual
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Incluye Periodo Actual y no el Proceso Actual "
    End If

    MesHasta = buliq_periodo!pliqmes
    AnioHasta = buliq_periodo!pliqanio
    UsaActual = False
    UsaPeriodoActual = True
End Select

    Bien = False
    Valor = 0

CantAnios = Int(CantMeses / 12)
CantMeses = CantMeses - (CantAnios * 12)

' Maxi: restaba 2 años cuando la combinacion era 1 anio y 0 meses
If CantAnios = 1 And CantMeses = 0 Then
     CantAnios = 0
     CantMeses = 12
End If

Select Case Opcion
Case 1: 'Sumatoria
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Sumatoria "
    End If

    Call AM_Sum_Aju(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, UsaPeriodoActual, Escala, TipoFecha)
Case 2: 'Maximo
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Maximo "
    End If

    Call AM_Max_Aju(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, UsaPeriodoActual, Escala, TipoFecha)
Case 3: 'Promedio
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Promedio "
    End If
    
    If Con_Fases Then
        'Busco cuantos meses estubo activo el empleado
        cantidadDeMeses = 0
        mesActual1 = MesHasta
        anioActual1 = AnioHasta
        
        For K = 1 To ((CantAnios * 12) + CantMeses)
            
            'Controlo si para el mes actual estubo activo
            FDesde1 = C_Date("01/" & mesActual1 & "/" & anioActual1)
            If mesActual1 = 12 Then
               FHasta1 = "01/01/" & (anioActual1 + 1)
            Else
               FHasta1 = "01/" & (mesActual1 + 1) & "/" & anioActual1
            End If
            FHasta1 = DateAdd("d", -1, C_Date(FHasta1))
            
            StrSql = " SELECT * FROM fases"
            StrSql = StrSql & " Where real= -1 AND Empleado = " & buliq_empleado!ternro
            StrSql = StrSql & " AND ("
            StrSql = StrSql & "      (altfec <= " & ConvFecha(FHasta1) & " AND bajfec IS NULL)"
            StrSql = StrSql & "  OR  (altfec <= " & ConvFecha(FHasta1) & " AND bajfec >= " & ConvFecha(FDesde1) & ")"
            StrSql = StrSql & "     )"
        
            OpenRecordset StrSql, rsConsult
            
            If Not rsConsult.EOF Then
               cantidadDeMeses = cantidadDeMeses + 1
            End If
            
            rsConsult.Close
            
            mesActual1 = mesActual1 - 1
            If mesActual1 = 0 Then
                 mesActual1 = 12
                 anioActual1 = anioActual1 - 1
            End If
        Next
    Else
        cantidadDeMeses = (CantAnios * 12) + CantMeses
        'cantidadDeMeses = 0
    End If
    
    Call AM_Prom_Aju(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, cantidadDeMeses, UsaPeriodoActual, Escala, TipoFecha)
Case 4: 'Promedio sin cero
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Promedio sin cero "
    End If
    Call AM_PromSin0_Aju(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, UsaPeriodoActual, Escala, TipoFecha)
Case 5: 'Minimo
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Minimo "
    End If
    Call AM_Min_Aju(nroAcu, MesHasta, AnioHasta, CantMeses, CantAnios, Con_Fases, Valor, Cantidad, False, UsaActual, UsaPeriodoActual, Escala, TipoFecha)
Case Else
End Select

If Not Monto Then
    Valor = Cantidad
End If
Bien = True

End Sub


Public Sub AM_Prom_Aju(ByVal Acu As Long, ByVal MesHasta As Integer, ByVal AnioHasta As Integer, ByVal CantMeses As Integer, ByVal CantAnios As Integer, ByVal ConFases As Boolean, ByRef Valor As Double, ByRef Cantidad As Double, ByVal Imponibles As Boolean, ByVal UsaActual As Boolean, ByVal DividePor As Integer, ByVal UsaPeriodoActual As Boolean, ByVal Escala As Long, ByVal TipoFecha As Long)
' ---------------------------------------------------------------------------------------------
' Promedio de los meses anteriores, incluyendo el actual, toma en cuenta
' la primera fase del empleado o la fecha de alta del empleado
' -------------------------------------------------------------
'Parametros
    '1 - Nro de acumulador                          - Acu
    '2 - Mes Hasta, el mes en el que estoy parado   - MesHasta
    '3 - Año hasta, año en el que estoy parado      - AnioHasta
    '4 - Cantidad de Meses anteiores                - CantMeses
    '5 - Cantidad de Años anteriores                - CantAnios
    '6 - Con fases                                  - ConFases
    '7 - Monto                                      - ByRef Valor
    '8 - Cantidad                                   - Byref Cantidad
    '10 - Por la cantidad de Meses que divide
'Ultima Mod:
'    FGZ 17/05/2006 - si el parametro DividePor viene en 0 ==> divido por cantProm
' ------------------------------------------------------------
Dim I As Integer
Dim j As Integer
Dim Hasta As Integer
Dim cantProm As Integer
Dim MesDesde As Integer
Dim AnioDesde As Integer
Dim Aumento As Double
Dim FechaPeriodo As Date
Dim AuxValor As Double
Dim AuxCantidad As Double

Dim rs_Fases As New ADODB.Recordset
Dim rs_Acu_Mes As New ADODB.Recordset
Dim rs_Acu_Liq As New ADODB.Recordset

If CantMeses > 12 Or MesHasta > 12 Or CantAnios > AnioHasta Then
    Exit Sub
End If

MesDesde = MesHasta - CantMeses + 1
AnioDesde = AnioHasta - CantAnios


If MesDesde <= 0 Then
    MesDesde = MesHasta + 12 - CantMeses + 1
    AnioDesde = AnioDesde - 1
End If

If MesDesde > 12 Then
    MesDesde = MesDesde - 12
    AnioDesde = AnioDesde - 1
End If


' Modificado para que tome el promedio para los jornales
If ConFases Then
    'FGZ - 16/04/2004
    'Busco la ultima fase activa
    StrSql = "SELECT * FROM fases WHERE real = -1 AND empleado = " & buliq_empleado!ternro
    StrSql = StrSql & " ORDER BY altfec"
    OpenRecordset StrSql, rs_Fases
    
    If Not rs_Fases.EOF Then
        'rs_Fases.MoveFirst
        rs_Fases.MoveLast
        If rs_Fases!altfec > C_Date("01/" & MesDesde & "/" & AnioDesde) Then
            MesDesde = Month(rs_Fases!altfec)
            AnioDesde = Year(rs_Fases!altfec)
        End If
    End If
Else
    'FGZ - 15/12/2004
    ' Se le saco esto porque traia problemas
'    If buliq_empleado!empfaltagr > c_date("01/" & MesDesde & "/" & AnioDesde) Then
'        MesDesde = Month(buliq_empleado!empfaltagr)
'        AnioDesde = Year(buliq_empleado!empfaltagr)
'    End If
End If

If Not Imponibles Then
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes =" & MesDesde
        Else
            StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes >= " & MesDesde & " AND  ammes <=" & MesHasta
        End If
    Else
        StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                 " AND acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = amanio AND ammes >= " & MesDesde & ") OR " & _
                 " (amanio > " & AnioDesde & " AND amanio < " & AnioHasta & ") OR " & _
                 " (ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))"
    End If
Else
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM acu_mes " & _
                     " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acu_mes.acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes =" & MesHasta & _
                     " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
        Else
            StrSql = "SELECT * FROM acu_mes " & _
                     " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acu_mes.acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes >= " & MesDesde & " AND  ammes <=" & MesHasta & _
                     " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
        End If
    Else
        StrSql = "SELECT * FROM acu_mes " & _
                 " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                 " WHERE ternro = " & buliq_empleado!ternro & _
                 " AND acu_mes.acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = amanio AND ammes >= " & MesDesde & ") OR " & _
                 " (amanio > " & AnioDesde & " AND amanio < " & AnioHasta & ") OR " & _
                 " (ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))" & _
                 " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
    End If
End If
StrSql = StrSql & " ORDER BY amanio, ammes"
OpenRecordset StrSql, rs_Acu_Mes


cantProm = 0
Do While Not rs_Acu_Mes.EOF
        'Aplicar ajuste
        FechaPeriodo = C_Date("01/" & rs_Acu_Mes!ammes & "/" & rs_Acu_Mes!amanio)
        Call bus_EscalaAjuste(3, Arr_conceptos(Concepto_Actual).concnro, Escala, TipoFecha, FechaPeriodo, Aumento)
            'bus_EscalaAjuste(tipoBus,concnro,Escala, TipoFecha, Aumento)
        
        If CBool(USA_DEBUG) Then
            Flog.writeline
            Flog.writeline " ==> "
            Flog.writeline Espacios(Tabulador * 5) & "Año: " & rs_Acu_Mes!amanio & "  Mes: " & rs_Acu_Mes!ammes & " Aumento: " & Aumento
            Flog.writeline Espacios(Tabulador * 5) & "Suma Monto " & IIf(Not EsNulo(rs_Acu_Mes!ammonto), rs_Acu_Mes!ammonto + (rs_Acu_Mes!ammonto * Aumento / 100), 0)
            Flog.writeline Espacios(Tabulador * 5) & "Suma Cantidad " & IIf(Not EsNulo(rs_Acu_Mes!amcant), rs_Acu_Mes!amcant + (rs_Acu_Mes!amcant * Aumento / 100), 0)
            Flog.writeline
        End If
        
        AuxValor = AuxValor + IIf(Not EsNulo(rs_Acu_Mes!ammonto), rs_Acu_Mes!ammonto + (rs_Acu_Mes!ammonto * Aumento / 100), 0)
        AuxCantidad = AuxCantidad + IIf(Not EsNulo(rs_Acu_Mes!amcant), rs_Acu_Mes!amcant + (rs_Acu_Mes!amcant * Aumento / 100), 0)
        cantProm = cantProm + 1
    
        rs_Acu_Mes.MoveNext
Loop

' Si es desde el mes actual ==> busco el acu_liq de este proceso
If UsaActual Then
    ' FGZ - 09/02/2004
    If objCache_Acu_Liq_Monto.EsSimboloDefinido(CStr(Acu)) Then
        AuxValor = AuxValor + objCache_Acu_Liq_Monto.Valor(CStr(Acu))
        AuxCantidad = AuxCantidad + objCache_Acu_Liq_Cantidad.Valor(CStr(Acu))
        cantProm = cantProm + 1
    End If

End If

If DividePor <> 0 Then
    Valor = AuxValor / DividePor
    Cantidad = AuxCantidad / DividePor
Else
    'FGZ - 17/05/2006
    If cantProm <> 0 Then
        Valor = AuxValor / cantProm
        Cantidad = AuxCantidad / cantProm
    Else
        Valor = 0
        Cantidad = 0
    End If
End If


' Cierro todo y libero
If rs_Fases.State = adStateOpen Then rs_Fases.Close
If rs_Acu_Mes.State = adStateOpen Then rs_Acu_Mes.Close
'If rs_Acu_liq.State = adStateOpen Then rs_Acu_Liq.Close
Set rs_Fases = Nothing
Set rs_Acu_Mes = Nothing
'Set rs_Acu_Liq = Nothing

End Sub




Public Sub bus_EscalaAjuste(ByVal tipoBus As Long, ByVal concnro As Long, ByVal prog As Long, ByVal TipoFecha As Long, ByVal FechaPeriodo As Date, ByRef Aumento As Double)
' ---------------------------------------------------------------------------------------------
' Descripcion: Obtencion del valor de la escala.
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim NroGrilla As Long               ' cabgrilla.cgrnro
Dim Cero_No_Encuentra As Boolean    ' True - Devuelve 0 si no encuentra?
Dim Operacion As Long               ' 1 - Sumatoria
                                    ' 2 - Maximo
                                    ' 3 - Promedio
                                    ' 4 - Promedio sin 0
                                    ' 5 - Minimo
                                    ' 6 - Primer valor no vacio desde abajo
                                    ' 7 - Primer valor no vacio desde arriba
                                    
Dim Acumulativa As Boolean          ' True
                                    ' False
Dim Valor_Grilla(10) As Boolean     ' Elemento de una coordenada de una grilla

    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & " Busca el valor de una escala "
    End If
    
    'Obtener los parametros de la Busqueda
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda " & NroProg
    End If
    
    If Arr_Programa(prog).Prognro <> 0 Then
        NroGrilla = Arr_Programa(prog).Auxint1
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Nro de escala a buscar  " & NroGrilla
        End If
        
        Acumulativa = CBool(Arr_Programa(prog).Auxlog1)
        Operacion = Arr_Programa(prog).Auxint2
        Cero_No_Encuentra = CBool(Arr_Programa(prog).Auxlog2)
        ' valores de la grilla
        Valor_Grilla(1) = CBool(Arr_Programa(prog).Auxlog3)
        Valor_Grilla(2) = CBool(Arr_Programa(prog).Auxlog4)
        Valor_Grilla(3) = CBool(Arr_Programa(prog).Auxlog5)
        Valor_Grilla(4) = CBool(Arr_Programa(prog).Auxlog6)
        Valor_Grilla(5) = CBool(Arr_Programa(prog).Auxlog7)
        Valor_Grilla(6) = CBool(Arr_Programa(prog).Auxlog8)
        Valor_Grilla(7) = CBool(Arr_Programa(prog).Auxlog9)
        Valor_Grilla(8) = CBool(Arr_Programa(prog).Auxlog10)
        Valor_Grilla(9) = CBool(Arr_Programa(prog).Auxlog11)
        Valor_Grilla(10) = CBool(Arr_Programa(prog).Auxlog12)
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No se encontró la Busqueda " & prog
        End If
        Exit Sub
    End If

    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Escala No Acumulativa de Ajuste"
        Flog.writeline Espacios(Tabulador * 4) & "Procediiento EscalaAjuste0 "
    End If
    Call bus_EscalaAjuste0(NroGrilla, Cero_No_Encuentra, Valor_Grilla, Operacion, Acumulativa, tipoBus, concnro, prog, TipoFecha, FechaPeriodo, Aumento)

End Sub




Public Sub bus_EscalaAjuste0(ByVal NroGrilla As Long, ByVal Cero_No_Encuentra As Boolean, ByVal Valor_Grilla, ByVal Operacion As Integer, ByVal Acumulativa As Boolean, ByVal tipoBus As Long, ByVal concnro As Long, ByVal prog As Long, ByVal TipoFecha As Long, ByVal FechaPeriodo As Date, ByRef Aumento As Double)
' ---------------------------------------------------------------------------------------------
' Descripcion: Obtencion del valor de la escala.
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim ValAnt As Double
Dim Busq As Integer

Dim j As Integer
Dim antig As Boolean
Dim pvariable As Boolean
Dim pvar As Integer
Dim ant As Integer
Dim Continuar As Boolean
Dim Parametros(1 To 5) As Double
Dim grilla_val(1 To 10) As Double     ' para alojar los valores de:  valgrilla.val(i)

Dim TipoBase As Long
Dim TipoBaseVariable As Long
Dim TipoBaseFecha As Long

Dim vgrcoor_ant As Long
Dim vgrcoor_pvar As Long

Dim rs_valgrilla As New ADODB.Recordset
Dim rs_cabgrilla As New ADODB.Recordset
Dim rs_tbase As New ADODB.Recordset
Dim rs_Busqueda As New ADODB.Recordset

Dim NroBusqueda As Long
Dim TipoBusqueda As Long
Dim Encontro As Boolean
Dim ResultadoAux As Double

    StrSql = "SELECT * FROM cabgrilla " & _
             " WHERE cabgrilla.cgrnro = " & NroGrilla
    OpenRecordset StrSql, rs_cabgrilla

    TipoBase = 4
    TipoBaseVariable = 15
    
    Continuar = True
    ant = 1
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Grilla de " & rs_cabgrilla!cgrdimension & " dimensiones "
    End If
    
    Do While (ant <= rs_cabgrilla!cgrdimension) And Continuar
        Select Case ant
        Case 1:
            StrSql = "SELECT tipoprog.tprogbase,tipoprog.tprognro FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_1
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBase = rs_tbase!tprogbase Then
                    Continuar = False
                    antig = True
                Else
                    ant = ant + 1
                End If
            Else
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "programa " & rs_cabgrilla!grparnro_1 & " inexistente en dimension " & 1
                End If
                Exit Sub
            End If
        Case 2:
            StrSql = "SELECT tipoprog.tprogbase,tipoprog.tprognro FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_2
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBase = rs_tbase!tprogbase Then
                    Continuar = False
                    antig = True
                Else
                    ant = ant + 1
                End If
            Else
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "programa " & rs_cabgrilla!grparnro_2 & " inexistente en dimension " & 2
                End If
                Exit Sub
            End If
        Case 3:
            StrSql = "SELECT tipoprog.tprogbase,tipoprog.tprognro FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_3
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBase = rs_tbase!tprogbase Then
                    Continuar = False
                    antig = True
                Else
                    ant = ant + 1
                End If
            Else
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "programa " & rs_cabgrilla!grparnro_3 & " inexistente en dimension " & 3
                End If
                Exit Sub
            End If
        Case 4:
            StrSql = "SELECT tipoprog.tprogbase,tipoprog.tprognro FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_4
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBase = rs_tbase!tprogbase Then
                    Continuar = False
                    antig = True
                Else
                    ant = ant + 1
                End If
            Else
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "programa " & rs_cabgrilla!grparnro_4 & " inexistente en dimension " & 4
                End If
                Exit Sub
            End If
        Case 5:
            StrSql = "SELECT tipoprog.tprogbase,tipoprog.tprognro FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_5
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBase = rs_tbase!tprogbase Then
                    Continuar = False
                    antig = True
                Else
                    ant = ant + 1
                End If
            Else
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "programa " & rs_cabgrilla!grparnro_5 & " inexistente en dimension " & 5
                End If
                Exit Sub
            End If
        End Select
    Loop
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Indice Antiguedad " & ant
    End If



' FGZ - 22/01/2004
'Parametros Variables
' busco que parametro es el parametro del concepto
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "busco que parametro es el parametro del concepto "
    End If

    Continuar = True
    pvar = 1
    Do While (pvar <= rs_cabgrilla!cgrdimension) And Continuar
        Select Case pvar
        Case 1:
            StrSql = "SELECT tipoprog.tprogbase,tipoprog.tprognro FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_1
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBaseVariable = rs_tbase!tprogbase Then
                    Continuar = False
                    pvariable = True
                Else
                    pvar = pvar + 1
                End If
            End If
        Case 2:
            StrSql = "SELECT tipoprog.tprogbase,tipoprog.tprognro FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_2
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBaseVariable = rs_tbase!tprogbase Then
                    Continuar = False
                    pvariable = True
                Else
                    pvar = pvar + 1
                End If
            End If
        Case 3:
            StrSql = "SELECT tipoprog.tprogbase,tipoprog.tprognro FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_3
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBaseVariable = rs_tbase!tprogbase Then
                    Continuar = False
                    pvariable = True
                Else
                    pvar = pvar + 1
                End If
            End If
        Case 4:
            If rs_cabgrilla!grparnro_4 = 15 Then 'si es el param. variable
                Continuar = False
                pvariable = True
            Else
                pvar = pvar + 1
            End If
        Case 5:
            If rs_cabgrilla!grparnro_5 = 15 Then 'si es el param. variable
                Continuar = False
                pvariable = True
            Else
                pvar = pvar + 1
            End If
        End Select
    Loop
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Indice variable " & pvar
    End If


    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Resuelvo los indices de la grilla segun las busquedas por cada dimension"
    End If
   
    For j = 1 To rs_cabgrilla!cgrdimension
        ' rs_cabgrilla!grparnro_x tiene el nro de programa

        Select Case j
        Case 1:
            NroBusqueda = rs_cabgrilla!grparnro_1
        Case 2:
            NroBusqueda = rs_cabgrilla!grparnro_2
        Case 3:
            NroBusqueda = rs_cabgrilla!grparnro_3
        Case 4:
            NroBusqueda = rs_cabgrilla!grparnro_4
        Case 5:
            NroBusqueda = rs_cabgrilla!grparnro_5
        Case Else
        End Select
        
        StrSql = "SELECT * FROM programa WHERE prognro = " & CStr(NroBusqueda)
        OpenRecordset StrSql, rs_Busqueda
    
        If Not rs_Busqueda.EOF Then
            TipoBusqueda = rs_Busqueda!Tprognro
        Else
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Error. no se encontro el nro de busqueda "
            End If
            'Error. no se encontro el nro de busqueda
            Exit Sub
        End If
        
        Call EjecutarBusqueda(TipoBusqueda, concnro, NroBusqueda, ResultadoAux, fec, False)
        Parametros(j) = ResultadoAux
    Next j

    If Not antig Then
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "No busca antiguedad "
        End If
    
        StrSql = "SELECT * FROM valgrilla WHERE cgrnro = " & NroGrilla
'        For j = 1 To rs_cabgrilla!cgrdimension
'            StrSql = StrSql & " AND vgrcoor_" & j & "= " & Parametros(j)
'        Next j
' FGZ - 22/01/2004
        For j = 1 To rs_cabgrilla!cgrdimension
            If j <> ant And j <> pvar Then
                StrSql = StrSql & " AND vgrcoor_" & j & "= " & Parametros(j)
            Else
                If pvariable Then
                    If TipoFecha = 2 Then
                        StrSql = StrSql & " AND vgrcoor_" & j & "<= " & Parametros(j)
                    Else
                        StrSql = StrSql & " AND vgrcoor_" & j & "> " & CLng(FechaPeriodo)
                    End If
                End If
            End If
        Next j
        If pvariable Then
            'StrSql = StrSql & " ORDER BY vgrcoor_" & pvar & " DESC "
            StrSql = StrSql & " ORDER BY vgrcoor_" & pvar
        End If
        OpenRecordset StrSql, rs_valgrilla
    
        If Not rs_valgrilla.EOF Then
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Cargo los Valores de la Grilla "
            End If
            Call CargarValoresdelaGrilla(rs_valgrilla, grilla_val)
            
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Busco el valor segun la operacion "
            End If
            Call BusValor(Operacion, Valor_Grilla, grilla_val, Aumento)
        Else
            If Cero_No_Encuentra Then
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "No se encontró valor en grilla "
                    Flog.writeline Espacios(Tabulador * 4) & "Esta configurado que retorne cero si no lo encuentra "
                End If
            
                 Aumento = 0
                 Bien = True
            Else
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "No se encontró valor en grilla "
                    Flog.writeline Espacios(Tabulador * 4) & "Retorna Falso "
                End If
                Bien = False
            End If
       End If
    Else 'Antig
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busca antiguedad "
        End If
    
        If Not Cero_No_Encuentra Then
            Bien = False
        Else
            Bien = True
            Aumento = 0
        End If
    
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busco la primera antiguedad de la escala menor a la del empleado "
            Flog.writeline Espacios(Tabulador * 4) & "de abajo hacia arriba "
        End If
    
        'Busco la primera antiguedad de la escala menor a la del empleado
        ' de abajo hacia arriba
        StrSql = "SELECT * FROM valgrilla WHERE cgrnro = " & NroGrilla
        For j = 1 To rs_cabgrilla!cgrdimension
            If j <> ant Then
                StrSql = StrSql & " AND vgrcoor_" & j & "= " & Parametros(j)
            End If
        Next j
            StrSql = StrSql & " ORDER BY vgrcoor_" & ant & " DESC "
        OpenRecordset StrSql, rs_valgrilla
        
        Encontro = False
        
        Do While Not rs_valgrilla.EOF And Not Encontro
            'Call CargarValoresdelaGrilla(rs_valgrilla, grilla_val)
            '--------------------------
            Select Case ant
            Case 1:
                If Parametros(ant) >= rs_valgrilla!vgrcoor_1 Then
                     If rs_valgrilla!vgrvalor <> 0 Then
                        Aumento = rs_valgrilla!vgrvalor
                        Encontro = True
                     End If
                End If
            Case 2:
                If Parametros(ant) >= rs_valgrilla!vgrcoor_2 Then
                     If rs_valgrilla!vgrvalor <> 0 Then
                        Aumento = rs_valgrilla!vgrvalor
                        Encontro = True
                     End If
                End If
            Case 3:
                If Parametros(ant) >= rs_valgrilla!vgrcoor_3 Then
                     If rs_valgrilla!vgrvalor <> 0 Then
                        Aumento = rs_valgrilla!vgrvalor
                        Encontro = True
                     End If
                End If
            Case 4:
                If Parametros(ant) >= rs_valgrilla!vgrcoor_4 Then
                     If rs_valgrilla!vgrvalor <> 0 Then
                        Aumento = rs_valgrilla!vgrvalor
                        Encontro = True
                     End If
                End If
            Case 5:
                If Parametros(ant) >= rs_valgrilla!vgrcoor_5 Then
                     If rs_valgrilla!vgrvalor <> 0 Then
                        Aumento = rs_valgrilla!vgrvalor
                        Encontro = True
                     End If
                End If
            End Select
            '--------------------------
            
            rs_valgrilla.MoveNext
        Loop
        
        If CBool(USA_DEBUG) Then
            If Encontro Then
                Flog.writeline Espacios(Tabulador * 4) & "Valor encontrado "
            Else
                Flog.writeline Espacios(Tabulador * 4) & "Valor no encontrado "
                If Cero_No_Encuentra Then
                    Flog.writeline Espacios(Tabulador * 4) & "Esta configurado que retorne cero si no lo encuentra "
                Else
                    Flog.writeline Espacios(Tabulador * 4) & "No Esta configurado que retorne cero si no lo encuentra. Retorna Falso "
                End If
            End If
        End If
    End If
    
' Cierro todo y libero
If rs_cabgrilla.State = adStateOpen Then rs_cabgrilla.Close
If rs_valgrilla.State = adStateOpen Then rs_valgrilla.Close

Set rs_cabgrilla = Nothing
Set rs_valgrilla = Nothing
End Sub


Public Sub AM_Sum_Aju(ByVal Acu As Long, ByVal MesHasta As Integer, ByVal AnioHasta As Integer, ByVal CantMeses As Integer, ByVal CantAnios As Integer, ByVal ConFases As Boolean, ByRef Valor As Double, ByRef Cantidad As Double, ByVal Imponibles As Boolean, ByVal UsaActual As Boolean, ByVal UsaPeriodoActual As Boolean, ByVal Escala As Long, ByVal TipoFecha As Long)
' ---------------------------------------------------------------------------------------------
' sumariza los meses anteriores, INCLUYENDO ACTUAL.
' Parametros : 1) Nro Acumulador                            -  Acu
'              2) Mes  hasta (mes en el que estoy parado)   -
'              3) Anio hasta (anio que estoy parado)        -
'              4) Cant meses anteriores                     -
'              5) Cant Anios anteriores                     -
'              6) con-fases                                 -
'              7) cantidad                                  -
'              8) monto.                                    -
' ---------------------------------------------------------------------------------------------
Dim Hasta As Integer
Dim cantProm As Integer
Dim MesDesde As Integer
Dim AnioDesde As Integer
Dim Aumento As Double
Dim FechaPeriodo As Date
Dim AuxValor As Double
Dim AuxCantidad As Double

Dim rs_Fases As New ADODB.Recordset
Dim rs_Acu_Mes As New ADODB.Recordset
Dim rs_Acu_Liq As New ADODB.Recordset

If CantMeses > 12 Or MesHasta > 12 Or CantAnios > AnioHasta Then
    Exit Sub
End If

MesDesde = MesHasta - CantMeses + 1
AnioDesde = AnioHasta - CantAnios

If MesDesde <= 0 Then
    MesDesde = MesHasta + 12 - CantMeses + 1
    AnioDesde = AnioDesde - 1
End If

If MesDesde > 12 Then
    MesDesde = MesDesde - 12
    AnioDesde = AnioDesde - 1
End If

' Modificado para que tome el promedio para los jornales
If ConFases Then
    'FGZ - 16/04/2004
    'Busco la ultima fase activa
    StrSql = "SELECT * FROM fases WHERE real = -1 AND empleado = " & buliq_empleado!ternro
    StrSql = StrSql & " ORDER BY altfec"
    OpenRecordset StrSql, rs_Fases
    
    If Not rs_Fases.EOF Then
        rs_Fases.MoveLast
        If rs_Fases!altfec > C_Date("01/" & MesDesde & "/" & AnioDesde) Then
            MesDesde = Month(rs_Fases!altfec)
            AnioDesde = Year(rs_Fases!altfec)
        End If
    End If
End If

If CBool(USA_DEBUG) Then
    Flog.writeline Espacios(Tabulador * 4) & "Busca desde el mes " & MesDesde & " del año " & AnioDesde & " hasta el mes " & MesHasta & " del año " & AnioHasta
End If

If Not Imponibles Then
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes =" & MesDesde
        Else
            StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes >= " & MesDesde & " AND  ammes <=" & MesHasta
        End If
    Else
        StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                 " AND acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = amanio AND ammes >= " & MesDesde & ") OR " & _
                 " (amanio > " & AnioDesde & " AND amanio < " & AnioHasta & ") OR " & _
                 " (ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))"
    End If
Else
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM acu_mes " & _
                     " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acu_mes.acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes =" & MesHasta & _
                     " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
        Else
            StrSql = "SELECT * FROM acu_mes " & _
                     " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acu_mes.acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes >= " & MesDesde & " AND  ammes <=" & MesHasta & _
                     " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
        End If
    Else
        StrSql = "SELECT * FROM acu_mes " & _
                 " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                 " WHERE ternro = " & buliq_empleado!ternro & _
                 " AND acu_mes.acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = amanio AND ammes >= " & MesDesde & ") OR " & _
                 " (amanio > " & AnioDesde & " AND amanio < " & AnioHasta & ") OR " & _
                 " (ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))" & _
                 " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
    End If
End If
StrSql = StrSql & " ORDER BY amanio, ammes"
OpenRecordset StrSql, rs_Acu_Mes

If CBool(USA_DEBUG) Then
    Flog.writeline Espacios(Tabulador * 4) & "SQL " & StrSql
End If
If Not rs_Acu_Mes.EOF Then
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Acumulando ..."
    End If
End If

Do While Not rs_Acu_Mes.EOF
        'Aplicar ajuste
        FechaPeriodo = C_Date("01/" & rs_Acu_Mes!ammes & "/" & rs_Acu_Mes!amanio)
        Call bus_EscalaAjuste(3, Arr_conceptos(Concepto_Actual).concnro, Escala, TipoFecha, FechaPeriodo, Aumento)
        
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Suma Monto " & IIf(Not EsNulo(rs_Acu_Mes!ammonto), rs_Acu_Mes!ammonto + (rs_Acu_Mes!ammonto * Aumento / 100), 0)
            Flog.writeline Espacios(Tabulador * 4) & "Suma Cantidad " & IIf(Not EsNulo(rs_Acu_Mes!amcant), rs_Acu_Mes!amcant + (rs_Acu_Mes!amcant * Aumento / 100), 0)
        End If
        
        AuxValor = AuxValor + IIf(Not EsNulo(rs_Acu_Mes!ammonto), rs_Acu_Mes!ammonto + (rs_Acu_Mes!ammonto * Aumento / 100), 0)
        AuxCantidad = AuxCantidad + IIf(Not EsNulo(rs_Acu_Mes!amcant), rs_Acu_Mes!amcant + (rs_Acu_Mes!amcant * Aumento / 100), 0)
        
        'Valor = Valor + IIf(Not EsNulo(rs_Acu_Mes!ammonto), rs_Acu_Mes!ammonto, 0)
        'Cantidad = Cantidad + IIf(Not EsNulo(rs_Acu_Mes!amcant), rs_Acu_Mes!amcant, 0)
    rs_Acu_Mes.MoveNext
Loop

' Si es desde el mes actual ==> busco el acu_liq de este proceso
'If (MesHasta = buliq_periodo!pliqmes And AnioHasta = buliq_periodo!pliqanio) Or UsaActual Then
If UsaActual Then
    ' FGZ - 09/02/2004
    If objCache_Acu_Liq_Monto.EsSimboloDefinido(CStr(Acu)) Then
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Suma Proceso Actual: "
                Flog.writeline Espacios(Tabulador * 5) & "Monto " & objCache_Acu_Liq_Monto.Valor(CStr(Acu))
                Flog.writeline Espacios(Tabulador * 6) & "Cantidad " & objCache_Acu_Liq_Cantidad.Valor(CStr(Acu))
            End If
    
            Valor = Valor + objCache_Acu_Liq_Monto.Valor(CStr(Acu))
            Cantidad = Cantidad + objCache_Acu_Liq_Cantidad.Valor(CStr(Acu))
    End If

End If

' Cierro todo y libero
If rs_Fases.State = adStateOpen Then rs_Fases.Close
If rs_Acu_Mes.State = adStateOpen Then rs_Acu_Mes.Close
Set rs_Fases = Nothing
Set rs_Acu_Mes = Nothing

End Sub


Public Sub AM_Max_Aju(ByVal Acu As Long, ByVal MesHasta As Integer, ByVal AnioHasta As Integer, ByVal CantMeses As Integer, ByVal CantAnios As Integer, ByVal ConFases As Boolean, ByRef Valor As Double, ByRef Cantidad As Double, ByVal Imponibles As Boolean, ByVal UsaActual As Boolean, ByVal UsaPeriodoActual As Boolean, ByVal Escala As Long, ByVal TipoFecha As Long)
' ---------------------------------------------------------------------------------------------
' sumariza los meses anteriores, INCLUYENDO ACTUAL.
' Parametros : 1) Nro Acumulador                            -  Acu
'              2) Mes  hasta (mes en el que estoy parado)   -
'              3) Anio hasta (anio que estoy parado)        -
'              4) Cant meses anteriores                     -
'              5) Cant Anios anteriores                     -
'              6) con-fases                                 -
'              7) cantidad                                  -
'              8) monto.                                    -
' ---------------------------------------------------------------------------------------------
Dim Hasta As Integer
Dim cantProm As Integer
Dim MesDesde As Integer
Dim AnioDesde As Integer
Dim Aumento As Double
Dim FechaPeriodo As Date
Dim AuxValor As Double
Dim AuxCantidad As Double

Dim rs_Fases As New ADODB.Recordset
Dim rs_Acu_Mes As New ADODB.Recordset
Dim rs_Acu_Liq As New ADODB.Recordset
Dim Aux_Valor As Double
Dim Aux_Cant As Double

Valor = 0
Cantidad = 0
Aux_Valor = 0
Aux_Cant = 0

If CantMeses > 12 Or MesHasta > 12 Or CantAnios > AnioHasta Then
    Exit Sub
End If

MesDesde = MesHasta - CantMeses + 1
AnioDesde = AnioHasta - CantAnios

If MesDesde <= 0 Then
    MesDesde = MesHasta + 12 - CantMeses + 1
    AnioDesde = AnioDesde - 1
End If

If MesDesde > 12 Then
    MesDesde = MesDesde - 12
    AnioDesde = AnioDesde - 1
End If

' Modificado para que tome el promedio para los jornales
If ConFases Then
    'FGZ - 16/04/2004
    'Busco la ultima fase activa
    StrSql = "SELECT * FROM fases WHERE real = -1 AND empleado = " & buliq_empleado!ternro
    StrSql = StrSql & " ORDER BY altfec"
    OpenRecordset StrSql, rs_Fases
    
    If Not rs_Fases.EOF Then
        rs_Fases.MoveLast
        If rs_Fases!altfec > C_Date("01/" & MesDesde & "/" & AnioDesde) Then
            MesDesde = Month(rs_Fases!altfec)
            AnioDesde = Year(rs_Fases!altfec)
        End If
    End If
End If

If Not Imponibles Then
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes =" & MesDesde
        Else
            StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes >= " & MesDesde & " AND  ammes <=" & MesHasta
        End If
    Else
        StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                 " AND acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = amanio AND ammes >= " & MesDesde & ") OR " & _
                 " (amanio > " & AnioDesde & " AND amanio < " & AnioHasta & ") OR " & _
                 " (ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))"
    End If
Else
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM acu_mes " & _
                     " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acu_mes.acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes =" & MesHasta & _
                     " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
        Else
            StrSql = "SELECT * FROM acu_mes " & _
                     " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acu_mes.acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes >= " & MesDesde & " AND  ammes <=" & MesHasta & _
                     " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
        End If
    Else
        StrSql = "SELECT * FROM acu_mes " & _
                 " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                 " WHERE ternro = " & buliq_empleado!ternro & _
                 " AND acu_mes.acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = amanio AND ammes >= " & MesDesde & ") OR " & _
                 " (amanio > " & AnioDesde & " AND amanio < " & AnioHasta & ") OR " & _
                 " (ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))" & _
                 " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
    End If
End If
StrSql = StrSql & " ORDER BY amanio, ammes"
OpenRecordset StrSql, rs_Acu_Mes

If rs_Acu_Mes.EOF Then
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 5) & "no se encontraron registros. SQL: " & StrSql
    End If
Else
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 5) & "Buscando los acumuladores mensuales"
    End If
End If

Do While Not rs_Acu_Mes.EOF
    FechaPeriodo = C_Date("01/" & rs_Acu_Mes!ammes & "/" & rs_Acu_Mes!amanio)
    Call bus_EscalaAjuste(3, Arr_conceptos(Concepto_Actual).concnro, Escala, TipoFecha, FechaPeriodo, Aumento)
        
    AuxValor = AuxValor + IIf(Not EsNulo(rs_Acu_Mes!ammonto), rs_Acu_Mes!ammonto + (rs_Acu_Mes!ammonto * Aumento / 100), 0)
    AuxCantidad = AuxCantidad + IIf(Not EsNulo(rs_Acu_Mes!amcant), rs_Acu_Mes!amcant + (rs_Acu_Mes!amcant * Aumento / 100), 0)
        
    If Not EsNulo(rs_Acu_Mes!ammonto) Then
        If UsaPeriodoActual Then
            If CBool(USA_DEBUG) Then
                Flog.Write Espacios(Tabulador * 6) & "Analizando Mes: " & rs_Acu_Mes!ammes
                Flog.writeline " Mes actual: " & buliq_periodo!pliqmes
            End If
            If rs_Acu_Mes!ammes = buliq_periodo!pliqmes Then
                Aux_Valor = Aux_Valor + IIf(Not EsNulo(rs_Acu_Mes!ammonto), rs_Acu_Mes!ammonto + (rs_Acu_Mes!ammonto * Aumento / 100), 0)
                Aux_Cant = IIf(Not EsNulo(rs_Acu_Mes!amcant), rs_Acu_Mes!amcant + (rs_Acu_Mes!amcant * Aumento / 100), 0)
                
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 6) & "Valor: " & rs_Acu_Mes!ammonto & " Con ajuste: " & IIf(Not EsNulo(rs_Acu_Mes!ammonto), rs_Acu_Mes!ammonto + (rs_Acu_Mes!ammonto * Aumento / 100), 0)
                    If EsNulo(rs_Acu_Mes!amcant) Then
                        Flog.writeline Espacios(Tabulador * 6) & "cantidad nula"
                    Else
                        Flog.writeline Espacios(Tabulador * 6) & "cantidad: " & rs_Acu_Mes!amcant & " con Ajuste: " & IIf(Not EsNulo(rs_Acu_Mes!amcant), rs_Acu_Mes!amcant + (rs_Acu_Mes!amcant * Aumento / 100), 0)
                    End If
                End If
            End If
        End If
        If rs_Acu_Mes!ammonto + (rs_Acu_Mes!ammonto * Aumento / 100) > Valor Then
            Valor = rs_Acu_Mes!ammonto + (rs_Acu_Mes!ammonto * Aumento / 100)
            Cantidad = IIf(Not EsNulo(rs_Acu_Mes!amcant), rs_Acu_Mes!amcant + (rs_Acu_Mes!amcant * Aumento / 100), 0)
        End If
    End If
    rs_Acu_Mes.MoveNext
Loop

' Si es desde el mes actual ==> busco el acu_liq de este proceso
If UsaActual Then
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 5) & "Busco el acu_liq de este proceso"
    End If
    
    ' FGZ - 09/02/2004
    If objCache_Acu_Liq_Monto.EsSimboloDefinido(CStr(Acu)) Then
        If objCache_Acu_Liq_Monto.Valor(CStr(Acu)) + Aux_Valor > Valor Then
            Valor = objCache_Acu_Liq_Monto.Valor(CStr(Acu)) + Aux_Valor
            Cantidad = objCache_Acu_Liq_Cantidad.Valor(CStr(Acu)) + Aux_Cant
        End If
    End If
End If

'Cierro todo y libero
If rs_Fases.State = adStateOpen Then rs_Fases.Close
If rs_Acu_Mes.State = adStateOpen Then rs_Acu_Mes.Close
Set rs_Fases = Nothing
Set rs_Acu_Mes = Nothing
End Sub


Public Sub AM_Min_Aju(ByVal Acu As Long, ByVal MesHasta As Integer, ByVal AnioHasta As Integer, ByVal CantMeses As Integer, ByVal CantAnios As Integer, ByVal ConFases As Boolean, ByRef Valor As Double, ByRef Cantidad As Double, ByVal Imponibles As Boolean, ByVal UsaActual As Boolean, ByVal UsaPeriodoActual As Boolean, ByVal Escala As Long, ByVal TipoFecha As Long)
' ---------------------------------------------------------------------------------------------
' Busca en los meses anteriores, INCLUYENDO ACTUAL.
' Parametros : 1) Nro Acumulador                            -  Acu
'              2) Mes  hasta (mes en el que estoy parado)   -
'              3) Anio hasta (anio que estoy parado)        -
'              4) Cant meses anteriores                     -
'              5) Cant Anios anteriores                     -
'              6) con-fases                                 -
'              7) cantidad                                  -
'              8) monto.                                    -
' ---------------------------------------------------------------------------------------------
Dim Hasta As Integer
Dim cantProm As Integer
Dim MesDesde As Integer
Dim AnioDesde As Integer
Dim Aumento As Double
Dim FechaPeriodo As Date
Dim AuxValor As Double
Dim AuxCantidad As Double

Dim rs_Fases As New ADODB.Recordset
Dim rs_Acu_Mes As New ADODB.Recordset
Dim rs_Acu_Liq As New ADODB.Recordset

Dim Encontro As Boolean
Dim Aux_Valor As Double
Dim Aux_Cant As Double


Encontro = False

Valor = 0
Cantidad = 0
Aux_Valor = 0
Aux_Cant = 0


If CantMeses > 12 Or MesHasta > 12 Or CantAnios > AnioHasta Then
    Exit Sub
End If

MesDesde = MesHasta - CantMeses + 1
AnioDesde = AnioHasta - CantAnios

If MesDesde <= 0 Then
    MesDesde = MesHasta + 12 - CantMeses + 1
    AnioDesde = AnioDesde - 1
End If

If MesDesde > 12 Then
    MesDesde = MesDesde - 12
    AnioDesde = AnioDesde - 1
End If


' Modificado para que tome el promedio para los jornales
If ConFases Then
    'FGZ - 16/04/2004
    'Busco la ultima fase activa
    StrSql = "SELECT * FROM fases WHERE real = -1 AND empleado = " & buliq_empleado!ternro
    StrSql = StrSql & " ORDER BY altfec"
    OpenRecordset StrSql, rs_Fases
    
    If Not rs_Fases.EOF Then
        rs_Fases.MoveLast
        If rs_Fases!altfec > C_Date("01/" & MesDesde & "/" & AnioDesde) Then
            MesDesde = Month(rs_Fases!altfec)
            AnioDesde = Year(rs_Fases!altfec)
        End If
    End If
End If

If Not Imponibles Then
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes =" & MesDesde
        Else
            StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes >= " & MesDesde & " AND  ammes <=" & MesHasta
        End If
    Else
        StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                 " AND acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = amanio AND ammes >= " & MesDesde & ") OR " & _
                 " (amanio > " & AnioDesde & " AND amanio < " & AnioHasta & ") OR " & _
                 " (ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))"
    End If
Else
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM acu_mes " & _
                     " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acu_mes.acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes =" & MesHasta & _
                     " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
        Else
            StrSql = "SELECT * FROM acu_mes " & _
                     " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acu_mes.acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes >= " & MesDesde & " AND  ammes <=" & MesHasta & _
                     " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
        End If
    Else
        StrSql = "SELECT * FROM acu_mes " & _
                 " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                 " WHERE ternro = " & buliq_empleado!ternro & _
                 " AND acu_mes.acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = amanio AND ammes >= " & MesDesde & ") OR " & _
                 " (amanio > " & AnioDesde & " AND amanio < " & AnioHasta & ") OR " & _
                 " (ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))" & _
                 " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
    End If
End If
StrSql = StrSql & " ORDER BY amanio, ammes"
OpenRecordset StrSql, rs_Acu_Mes

If Not rs_Acu_Mes.EOF Then
    'Me muevo al primero
    rs_Acu_Mes.MoveFirst
    
    If Not EsNulo(rs_Acu_Mes!ammonto) Then
        FechaPeriodo = C_Date("01/" & rs_Acu_Mes!ammes & "/" & rs_Acu_Mes!amanio)
        Call bus_EscalaAjuste(3, Arr_conceptos(Concepto_Actual).concnro, Escala, TipoFecha, FechaPeriodo, Aumento)
        
        Encontro = True
        Valor = IIf(Not EsNulo(rs_Acu_Mes!ammonto), rs_Acu_Mes!ammonto + (rs_Acu_Mes!ammonto * Aumento / 100), 0)
        Cantidad = IIf(Not EsNulo(rs_Acu_Mes!amcant), rs_Acu_Mes!amcant + (rs_Acu_Mes!amcant * Aumento / 100), 0)
    End If
    rs_Acu_Mes.MoveNext
End If


Do While Not rs_Acu_Mes.EOF
    FechaPeriodo = C_Date("01/" & rs_Acu_Mes!ammes & "/" & rs_Acu_Mes!amanio)
    Call bus_EscalaAjuste(3, Arr_conceptos(Concepto_Actual).concnro, Escala, TipoFecha, FechaPeriodo, Aumento)
        
    If Not EsNulo(rs_Acu_Mes!ammonto) Then
        If UsaPeriodoActual Then
            If rs_Acu_Mes!ammes = buliq_periodo!pliqmes Then
                AuxValor = AuxValor + IIf(Not EsNulo(rs_Acu_Mes!ammonto), rs_Acu_Mes!ammonto + (rs_Acu_Mes!ammonto * Aumento / 100), 0)
                AuxCantidad = AuxCantidad + IIf(Not EsNulo(rs_Acu_Mes!amcant), rs_Acu_Mes!amcant + (rs_Acu_Mes!amcant * Aumento / 100), 0)
            End If
        End If
        If rs_Acu_Mes!ammonto < Valor Then
            Valor = rs_Acu_Mes!ammonto
            Cantidad = IIf(Not EsNulo(rs_Acu_Mes!amcant), rs_Acu_Mes!amcant, 0)
        End If
    End If
    rs_Acu_Mes.MoveNext
Loop

' Si es desde el mes actual ==> busco el acu_liq de este proceso
If UsaActual Then
    ' FGZ - 09/02/2004
    If objCache_Acu_Liq_Monto.EsSimboloDefinido(CStr(Acu)) Then
        If Not Encontro Then
            Valor = objCache_Acu_Liq_Monto.Valor(CStr(Acu))
            Cantidad = objCache_Acu_Liq_Cantidad.Valor(CStr(Acu))
        Else
            If objCache_Acu_Liq_Monto.Valor(CStr(Acu)) + Aux_Valor < Valor Then
                Valor = objCache_Acu_Liq_Monto.Valor(CStr(Acu)) + Aux_Valor
                Cantidad = objCache_Acu_Liq_Cantidad.Valor(CStr(Acu)) + Aux_Cant
            End If
        End If
    End If
End If
    
'Cierro todo y libero
If rs_Fases.State = adStateOpen Then rs_Fases.Close
If rs_Acu_Mes.State = adStateOpen Then rs_Acu_Mes.Close
Set rs_Fases = Nothing
Set rs_Acu_Mes = Nothing
End Sub


Public Sub AM_PromSin0_Aju(ByVal Acu As Long, ByVal MesHasta As Integer, ByVal AnioHasta As Integer, ByVal CantMeses As Integer, ByVal CantAnios As Integer, ByVal ConFases As Boolean, ByRef Valor As Double, ByRef Cantidad As Double, ByVal Imponibles As Boolean, ByVal UsaActual As Boolean, ByVal UsaPeriodoActual As Boolean, ByVal Escala As Long, ByVal TipoFecha As Long)
' ---------------------------------------------------------------------------------------------
' Promedio de los meses anteriores, incluyendo el actual, toma en cuenta
' la primera fase del empleado o la fecha de alta del empleado
' Sin tener en cuenta los que son 0
' -------------------------------------------------------------
'Parametros
    '1 - Nro de acumulador                          - Acu
    '2 - Mes Hasta, el mes en el que estoy parado   - MesHasta
    '3 - Año hasta, año en el que estoy parado      - AnioHasta
    '4 - Cantidad de Meses anteiores                - CantMeses
    '5 - Cantidad de Años anteriores                - CantAnios
    '6 - Con fases                                  - ConFases
    '7 - Monto                                      - ByRef Valor
    '8 - Cantidad                                   - Byref Cantidad
' ------------------------------------------------------------

Dim I As Integer
Dim j As Integer
Dim Hasta As Integer
Dim cantProm As Integer
Dim MesDesde As Integer
Dim AnioDesde As Integer
Dim Aumento As Double
Dim FechaPeriodo As Date
Dim AuxValor As Double
Dim AuxCantidad As Double

Dim rs_Fases As New ADODB.Recordset
Dim rs_Acu_Mes As New ADODB.Recordset
Dim rs_Acu_Liq As New ADODB.Recordset

If CantMeses > 12 Or MesHasta > 12 Or CantAnios > AnioHasta Then
    Exit Sub
End If

MesDesde = MesHasta - CantMeses + 1
AnioDesde = AnioHasta - CantAnios

If MesDesde <= 0 Then
    MesDesde = MesHasta + 12 - CantMeses + 1
    AnioDesde = AnioDesde - 1
End If

If MesDesde > 12 Then
    MesDesde = MesDesde - 12
    AnioDesde = AnioDesde - 1
End If


' Modificado para que tome el promedio para los jornales
If ConFases Then
    'FGZ - 16/04/2004
    'Busco la ultima fase activa
    StrSql = "SELECT * FROM fases WHERE real = -1 AND empleado = " & buliq_empleado!ternro
    StrSql = StrSql & " ORDER BY altfec"
    OpenRecordset StrSql, rs_Fases
    
    If Not rs_Fases.EOF Then
        rs_Fases.MoveLast
        If rs_Fases!altfec > C_Date("01/" & MesDesde & "/" & AnioDesde) Then
            MesDesde = Month(rs_Fases!altfec)
            AnioDesde = Year(rs_Fases!altfec)
        End If
    End If
End If

If Not Imponibles Then
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes =" & MesDesde
        Else
            StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes >= " & MesDesde & " AND  ammes <=" & MesHasta
        End If
    Else
        StrSql = "SELECT * FROM acu_mes WHERE ternro = " & buliq_empleado!ternro & _
                 " AND acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = amanio AND ammes >= " & MesDesde & ") OR " & _
                 " (amanio > " & AnioDesde & " AND amanio < " & AnioHasta & ") OR " & _
                 " (ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))"
    End If
Else
    If AnioDesde = AnioHasta Then
        If MesDesde = MesHasta Then
            StrSql = "SELECT * FROM acu_mes " & _
                     " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acu_mes.acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes =" & MesHasta & _
                     " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
        Else
            StrSql = "SELECT * FROM acu_mes " & _
                     " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                     " WHERE ternro = " & buliq_empleado!ternro & _
                     " AND acu_mes.acunro =" & Acu & _
                     " AND " & AnioDesde & " = amanio " & _
                     " AND ammes >= " & MesDesde & " AND  ammes <=" & MesHasta & _
                     " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
        End If
    Else
        StrSql = "SELECT * FROM acu_mes " & _
                 " INNER JOIN acumulador ON acu_mes.acunro = acumulador.acunro " & _
                 " WHERE ternro = " & buliq_empleado!ternro & _
                 " AND acu_mes.acunro =" & Acu & _
                 " AND ((" & AnioDesde & " = amanio AND ammes >= " & MesDesde & ") OR " & _
                 " (amanio > " & AnioDesde & " AND amanio < " & AnioHasta & ") OR " & _
                 " (ammes <=" & MesHasta & " AND amanio = " & AnioHasta & "))" & _
                 " AND (acumulador.acuimponible = -1 or acuimpcont = -1)"
    End If
End If
StrSql = StrSql & " ORDER BY amanio, ammes"
OpenRecordset StrSql, rs_Acu_Mes

cantProm = 0
AuxValor = 0
AuxCantidad = 0
Do While Not rs_Acu_Mes.EOF
    
    'Aplicar ajuste
    FechaPeriodo = C_Date("01/" & rs_Acu_Mes!ammes & "/" & rs_Acu_Mes!amanio)
    Call bus_EscalaAjuste(3, Arr_conceptos(Concepto_Actual).concnro, Escala, TipoFecha, FechaPeriodo, Aumento)
        
    If Not EsNulo(rs_Acu_Mes!ammonto) Then
        If rs_Acu_Mes!ammonto <> 0 Then ' si el monto es cero ==> no lo tengo en cuenta
            
            If CBool(USA_DEBUG) Then
                Flog.writeline
                Flog.writeline " ==> "
                Flog.writeline Espacios(Tabulador * 5) & "Año: " & rs_Acu_Mes!amanio & "  Mes: " & rs_Acu_Mes!ammes & " Aumento: " & Aumento
                Flog.writeline Espacios(Tabulador * 5) & "Suma Monto " & IIf(Not EsNulo(rs_Acu_Mes!ammonto), rs_Acu_Mes!ammonto + (rs_Acu_Mes!ammonto * Aumento / 100), 0)
                Flog.writeline Espacios(Tabulador * 5) & "Suma Cantidad " & IIf(Not EsNulo(rs_Acu_Mes!amcant), rs_Acu_Mes!amcant + (rs_Acu_Mes!amcant * Aumento / 100), 0)
                Flog.writeline
            End If
            
            AuxValor = AuxValor + IIf(Not EsNulo(rs_Acu_Mes!ammonto), rs_Acu_Mes!ammonto + (rs_Acu_Mes!ammonto * Aumento / 100), 0)
            AuxCantidad = AuxCantidad + IIf(Not EsNulo(rs_Acu_Mes!amcant), rs_Acu_Mes!amcant + (rs_Acu_Mes!amcant * Aumento / 100), 0)
            cantProm = cantProm + 1
        Else
            If CBool(USA_DEBUG) Then
                Flog.writeline
                Flog.writeline " ==> "
                Flog.writeline Espacios(Tabulador * 5) & "Año: " & rs_Acu_Mes!amanio & "  Mes: " & rs_Acu_Mes!ammes & " Aumento: " & Aumento
                Flog.writeline Espacios(Tabulador * 5) & "Monto 0, no se tiene en cuenta"
                Flog.writeline Espacios(Tabulador * 5) & "Cantidad 0, no se tiene en cuenta"
                Flog.writeline
            End If
        End If
    End If
    rs_Acu_Mes.MoveNext
Loop

' Si es desde el mes actual ==> busco el acu_liq de este proceso
If UsaActual Then
    ' FGZ - 09/02/2004
    If objCache_Acu_Liq_Monto.EsSimboloDefinido(CStr(Acu)) Then
        If objCache_Acu_Liq_Monto.Valor(CStr(Acu)) <> 0 Then
            AuxValor = AuxValor + objCache_Acu_Liq_Monto.Valor(CStr(Acu))
            AuxCantidad = AuxCantidad + objCache_Acu_Liq_Cantidad.Valor(CStr(Acu))
            
            cantProm = cantProm + 1
        End If
    End If
End If


If cantProm <> 0 Then
    Valor = AuxValor / cantProm
    Cantidad = AuxCantidad / cantProm
Else
    Valor = 0
    Cantidad = 0
End If

'Cierro todo y libero
If rs_Fases.State = adStateOpen Then rs_Fases.Close
If rs_Acu_Mes.State = adStateOpen Then rs_Acu_Mes.Close
Set rs_Fases = Nothing
Set rs_Acu_Mes = Nothing
End Sub


Public Sub bus_DeduccionFliaresIRPF()
' ---------------------------------------------------------------------------------------------
' Descripcion: Deduccion de Asignaciones Familiares para IRFP
' Autor      : FGZ
' Fecha      : 07/06/2007
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Edad As Integer                 'cant de años o nulo o vacio
Dim Parentesco As Integer           'codigo del parentesco
                            
Dim edad_f As Integer
Dim Fecha_Hasta_Edad As Date
Dim Opcion_Fecha_Hasta As Integer
Dim StrLog As String
Dim Fecha_vto_asig As Date

Dim rs_Familiar As New ADODB.Recordset

    Bien = False
    Valor = 0
   
    If Arr_Programa(NroProg).Prognro <> 0 Then
        Edad = Arr_Programa(NroProg).Auxint1
        Parentesco = Arr_Programa(NroProg).Auxchar4
        Opcion_Fecha_Hasta = IIf(Not EsNulo(Arr_Programa(NroProg).Auxchar), Arr_Programa(NroProg).Auxchar, 5)
        Select Case Opcion_Fecha_Hasta
        Case 1:
            Fecha_Hasta_Edad = buliq_periodo!pliqhasta
            StrLog = "a mes actual"
        Case 2:
            Fecha_Hasta_Edad = DateAdd("d", -1, buliq_periodo!pliqdesde)
            StrLog = "al mes anterior "
        Case 3: 'a fin de año
            Fecha_Hasta_Edad = C_Date("31/12/" & Year(buliq_periodo!pliqhasta))
            StrLog = "a fin de año "
        Case 4: 'a principio de año
            Fecha_Hasta_Edad = C_Date("01/01/" & Year(buliq_periodo!pliqhasta))
            StrLog = "a principio de año "
        Case 5:
            'Si el empleado tiene fecha de baja < a la fecha fin del proceso, se toma la fecha de baja.
            Fecha_Hasta_Edad = Empleado_Fecha_Fin
            StrLog = "a fin del proceso "
        Case Else:
            'Fecha_Hasta_Edad = buliq_proceso!pliqhasta
            'Fecha_Hasta_Edad = buliq_proceso!profecfin
            'Si el empleado tiene fecha de baja < a la fecha fin del proceso, se toma la fecha de baja.
            Fecha_Hasta_Edad = Empleado_Fecha_Fin
            StrLog = "Default. a fin del proceso "
        End Select
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & StrLog
        End If
    Else
        Exit Sub
    End If

    Fecha_vto_asig = buliq_proceso!profecfin
    
    StrSql = "SELECT tercero.terape, tercero.ternom, tercero.terfecnac, familiar.parenro, familiar.famcargadgi, familiar.famemergencia, familiar.faminc"
    StrSql = StrSql & " FROM familiar INNER JOIN tercero ON tercero.ternro = familiar.ternro"
    StrSql = StrSql & " WHERE (familiar.empleado =" & buliq_empleado!ternro
    StrSql = StrSql & " AND familiar.parenro = " & Parentesco
    StrSql = StrSql & " AND famcargadgi = -1)"
    StrSql = StrSql & " AND (familiar.famDGIdesde <= " & ConvFecha(Fecha_vto_asig) & " OR familiar.famDGIdesde is null)"
    StrSql = StrSql & " AND (familiar.famDGIhasta >= " & ConvFecha(Fecha_vto_asig) & " OR familiar.famDGIhasta is null)"
    StrSql = StrSql & " Order by tercero.ternro"
    OpenRecordset StrSql, rs_Familiar
             
    Do While Not rs_Familiar.EOF
        If Not CBool(rs_Familiar!faminc) Then
            edad_f = Calcular_Edad(rs_Familiar!terfecnac, Fecha_Hasta_Edad)
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Familiar (" & rs_Familiar!parenro & ") de " & edad_f & " años."
            End If
            If edad_f <= Edad Or EsNulo(Edad) Then
                If Not CBool(rs_Familiar!famemergencia) Then
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "  deduce al 100%"
                    End If
                    If CBool(rs_Familiar!faminc) Then
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "  incapacitado ==>  x 2"
                        End If
                        Valor = Valor + 2
                    Else
                        Valor = Valor + 1
                    End If
                Else
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "  deduce al 50%"
                    End If
                    If CBool(rs_Familiar!faminc) Then
                        If CBool(USA_DEBUG) Then
                            Flog.writeline Espacios(Tabulador * 4) & "  incapacitado ==>  x 2"
                        End If
                        Valor = Valor + 1
                    Else
                        Valor = Valor + 0.5
                    End If
                End If
            End If
        Else    'no importa la edad
            If Not CBool(rs_Familiar!famemergencia) Then
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "  deduce al 100%"
                End If
                If CBool(rs_Familiar!faminc) Then
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "  incapacitado ==>  x 2"
                    End If
                    Valor = Valor + 2
                Else
                    Valor = Valor + 1
                End If
            Else
                If CBool(USA_DEBUG) Then
                    Flog.writeline Espacios(Tabulador * 4) & "  deduce al 50%"
                End If
                If CBool(rs_Familiar!faminc) Then
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "  incapacitado ==>  x 2"
                    End If
                    Valor = Valor + 1
                Else
                    Valor = Valor + 0.5
                End If
            End If
        End If
        rs_Familiar.MoveNext
    Loop
    Bien = True
    
'Cierro todo y libero
    If rs_Familiar.State = adStateOpen Then rs_Familiar.Close
    Set rs_Familiar = Nothing
End Sub


Public Sub bus_BPC_IRPF()
' ---------------------------------------------------------------------------------------------
' Descripcion: Busco BPC para IRFP
' Autor      : FGZ
' Fecha      : 08/06/2007
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim BPC As Double
Dim Renta As Boolean

Dim rs_IrpfCab As New ADODB.Recordset
Dim rs_IrpfDedCab As New ADODB.Recordset

    Bien = False
    Valor = 0
   
    If Arr_Programa(NroProg).Prognro <> 0 Then
        Select Case Arr_Programa(NroProg).Auxint1
        Case 1:
            Renta = True
        Case 2:
            Renta = False
        Case Else:
            Renta = True
        End Select
    Else
        Exit Sub
    End If

    If Renta Then
        'Busco en escala para Renta
        StrSql = "SELECT * FROM uru_irpfcab "
        StrSql = StrSql & " WHERE fechasta >= " & ConvFecha(buliq_proceso!profecpago)
        StrSql = StrSql & " AND fecdesde <= " & ConvFecha(buliq_proceso!profecpago)
        OpenRecordset StrSql, rs_IrpfCab
        If rs_IrpfCab.EOF Then
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Renta. No existe escala para la fecha de pago"
            End If
        Else
            BPC = rs_IrpfCab!val
        End If
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "BPC para Renta " & BPC
        End If
    Else
        'Busco en escala para Deduccion
        StrSql = "SELECT * FROM uru_irpfdedcab "
        StrSql = StrSql & " WHERE fechasta >= " & ConvFecha(buliq_proceso!profecpago)
        StrSql = StrSql & " AND fecdesde <= " & ConvFecha(buliq_proceso!profecpago)
        OpenRecordset StrSql, rs_IrpfDedCab
        If rs_IrpfDedCab.EOF Then
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Deducción. No existe escala para la fecha de pago"
            End If
        Else
            BPC = rs_IrpfDedCab!val
        End If
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "BPC para Deducción " & BPC
        End If
    End If
    Valor = BPC
    Bien = True
    
'Cierro todo y libero
    If rs_IrpfCab.State = adStateOpen Then rs_IrpfCab.Close
    Set rs_IrpfCab = Nothing
    If rs_IrpfDedCab.State = adStateOpen Then rs_IrpfDedCab.Close
    Set rs_IrpfDedCab = Nothing
End Sub

Public Function bus_Licencias_OtrosPer() As Integer
' Descripcion: Dias de Licencias entre dos fechas de otros periodos
' Autor      : FGZ
' Fecha      : 19/10/2005
' Ultima Mod.:
' ---------------------------------------------------------------------------------------------
Dim TipoLicencia As Long        'Tipo de Licencia
Dim Todas As Boolean            'Todos los tipos de Licencias

Dim Periodo_GTI As Boolean      'TRUE  ==> Segun Periodos de GTI
                                'FALSE ==> Segun Periodos Calendario
                                
Dim Retorna As Integer          '1: Todos los dias
                                '2: Dias Habiles (lunes a viernes)
                                '3: Feriados
                                '4: Dias No Habiles (sabados y domingo que no son feriados)
Dim Solo_Aprobadas As Integer
                                
Dim dias As Integer
Dim Aux_Dias As Integer
Dim Dias_Ya_Marcados As Integer
Dim Dias_Totales As Integer

Dim SumaDias As Integer
Dim SumaDiasYaGenerados As Integer
Dim FechaDeInicio As Date
Dim FechaDeFin As Date
Dim TipoDia_Ok As Boolean
Dim Dias_Mes_Anterior As Integer

Dim rs_Lic As New ADODB.Recordset
Dim rs_PeriodoGTI As New ADODB.Recordset
Dim rs_Periodo As New ADODB.Recordset
Dim rs_Estructura As New ADODB.Recordset
Dim rs_tipd_con As New ADODB.Recordset

Dim Aux_Fecha_Desde As Date
Dim Aux_Fecha_Hasta As Date
Dim DiasDelmes As Integer
Dim LicenciaDe31Dias As Boolean

Dim MesesAtras As Integer
Dim CantMeses As Integer

Dim MesDesde As Integer
Dim MesHasta As Integer
Dim AnioDesde As Integer
Dim AnioHasta As Integer

    Bien = False
    Valor = 0
    LicenciaDe31Dias = False
   
    If CBool(USA_DEBUG) Then
        Flog.writeline Espacios(Tabulador * 4) & "Obtener los parametros de la Busqueda "
    End If
    ' Obtener los parametros de la Busqueda
    If Arr_Programa(NroProg).Prognro <> 0 Then
        Todas = CBool(Arr_Programa(NroProg).Auxlog1)
        If Not Todas Then
            TipoLicencia = Arr_Programa(NroProg).Auxint1
        End If
        Periodo_GTI = IIf(Not EsNulo(Arr_Programa(NroProg).Auxlog3), CBool(Arr_Programa(NroProg).Auxlog3), -1)
        Solo_Aprobadas = IIf(Not EsNulo(Arr_Programa(NroProg).Auxlog4), CBool(Arr_Programa(NroProg).Auxlog4), 0)
        
        MesesAtras = Arr_Programa(NroProg).Auxint2
        CantMeses = Arr_Programa(NroProg).Auxint3
        Retorna = Arr_Programa(NroProg).Auxint4
            '1: Todos los dias
            '2: Dias Habiles (lunes a viernes)
            '3: Feriados
            '4: Dias No Habiles (sabados y domingo que no son feriados)
                
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Periodo de " & IIf(Periodo_GTI, "GTI", "Liquidacion")
            If Solo_Aprobadas Then
                Flog.writeline Espacios(Tabulador * 4) & "Solo Licencias aprobadas"
            Else
                Flog.writeline Espacios(Tabulador * 4) & "Licencias aprobadas y no aprobadas"
            End If
            Select Case Retorna
            Case 1:
                Flog.writeline Espacios(Tabulador * 4) & "Retorna Todos Días"
            Case 2:
                Flog.writeline Espacios(Tabulador * 4) & "Retorna Días Hábiles"
            Case 3:
                Flog.writeline Espacios(Tabulador * 4) & "Retorna Días Feriados"
            Case 4:
                Flog.writeline Espacios(Tabulador * 4) & "Retorna Días No Hábiles"
            End Select
        End If
    Else
        Exit Function
    End If

    'Calcular el mes desde y el mes hasta
    If buliq_periodo!pliqmes - MesesAtras <= 0 Then
        'Se pasó de año
        If buliq_periodo!pliqmes < MesesAtras Then
            MesDesde = 12 - (MesesAtras - buliq_periodo!pliqmes)
        Else
            MesDesde = 12 - (buliq_periodo!pliqmes - MesesAtras)
        End If
        If MesDesde + (CantMeses - 1) > 12 Then
            If MesDesde = 12 Then
                MesHasta = (12 - MesDesde) + CantMeses - 1
            Else
                MesHasta = CantMeses - 1 + (MesDesde - 12)
            End If
            AnioDesde = buliq_periodo!pliqanio - 1
            AnioHasta = AnioDesde + 1
        Else
            MesHasta = MesDesde + CantMeses - 1
            AnioDesde = buliq_periodo!pliqanio - 1
            AnioHasta = AnioDesde
        End If
        
    Else
        MesDesde = (buliq_periodo!pliqmes - MesesAtras)
        If MesDesde + (CantMeses - 1) > 12 Then
            MesHasta = 1 + (MesDesde + CantMeses - 12)
            AnioDesde = buliq_periodo!pliqanio
            AnioHasta = AnioDesde + 1
        Else
            MesHasta = MesDesde + (CantMeses - 1)
            AnioDesde = buliq_periodo!pliqanio
            AnioHasta = AnioDesde
        End If
        
    End If
    
    
    If Periodo_GTI Then
        'Busco el periodo de GTI desde
        StrSql = "SELECT * FROM gti_per "
        StrSql = StrSql & " WHERE pgtimes = " & MesDesde
        StrSql = StrSql & " AND pgtianio = " & AnioDesde
        OpenRecordset StrSql, rs_PeriodoGTI
        If Not rs_PeriodoGTI.EOF Then
            FechaDeInicio = rs_PeriodoGTI!pgtidesde
        Else
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "No existe Periodo de GTI para ese mes y año " & MesDesde & " del " & AnioDesde
            End If
            Exit Function
        End If
    
        'Busco el periodo de GTI Hasta
        StrSql = "SELECT * FROM gti_per "
        StrSql = StrSql & " WHERE pgtimes = " & MesHasta
        StrSql = StrSql & " AND pgtianio = " & AnioHasta
        OpenRecordset StrSql, rs_PeriodoGTI
        If Not rs_PeriodoGTI.EOF Then
            FechaDeFin = rs_PeriodoGTI!pgtihasta
        Else
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "No existe Periodo de GTI para ese mes y año " & MesHasta & " del " & AnioHasta
            End If
            Exit Function
        End If
    Else    'Periodo Liq
        'Busco el periodo de LIQ desde
        StrSql = "SELECT * FROM periodo "
        StrSql = StrSql & " WHERE pliqmes = " & MesDesde
        StrSql = StrSql & " AND pliqanio = " & AnioDesde
        OpenRecordset StrSql, rs_Periodo
        If Not rs_Periodo.EOF Then
            FechaDeInicio = rs_Periodo!pliqdesde
        Else
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "No existe Periodo de LIQ para ese mes y año " & MesDesde & " del " & AnioDesde
            End If
            Exit Function
        End If
    
        'Busco el periodo de LIQ Hasta
        StrSql = "SELECT * FROM periodo "
        StrSql = StrSql & " WHERE pliqmes = " & MesHasta
        StrSql = StrSql & " AND pliqanio = " & AnioHasta
        OpenRecordset StrSql, rs_Periodo
        If Not rs_Periodo.EOF Then
            FechaDeFin = rs_Periodo!pliqhasta
        Else
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "No existe Periodo de LIQ para ese mes y año " & MesHasta & " del " & AnioHasta
            End If
            Exit Function
        End If
    End If
    
    
    'Primero Busco  los tipos de dias asociados a los conceptos
    If Todas Then 'Todos los tipos de Licencias
        StrSql = " SELECT * FROM tipd_con " & _
                 " WHERE concnro =" & Buliq_Concepto(Concepto_Actual).concnro
    Else 'Todos las Licencias del tipo especificado
        StrSql = " SELECT * FROM tipd_con " & _
                 " WHERE concnro =" & Buliq_Concepto(Concepto_Actual).concnro & _
                 " AND tdnro = " & TipoLicencia
    End If
    OpenRecordset StrSql, rs_tipd_con
    If rs_tipd_con.EOF Then
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "no hay tipos de dias asociados a los conceptos "
        End If
    End If
    
    Do While Not rs_tipd_con.EOF
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Tipo de dia: " & rs_tipd_con!tdnro
        End If
        TipoDia_Ok = True
        If Not EsNulo(rs_tipd_con!tenro) Then
            If rs_tipd_con!tenro <> 0 Then
                StrSql = " SELECT * FROM his_estructura " & _
                         " WHERE ternro = " & buliq_empleado!ternro & " AND " & _
                         " tenro =" & rs_tipd_con!tenro & " AND " & _
                         " estrnro = " & rs_tipd_con!estrnro & " AND " & _
                         " (htetdesde <= " & ConvFecha(FechaDeFin) & ") AND " & _
                         " ((" & ConvFecha(FechaDeFin) & " <= htethasta) or (htethasta is null))"
                OpenRecordset StrSql, rs_Estructura
                If rs_Estructura.EOF Then
                    If CBool(USA_DEBUG) Then
                        Flog.writeline Espacios(Tabulador * 4) & "Tipo de dia " & rs_tipd_con!tdnro & " no valido. No tiene estructura del tipo " & rs_tipd_con!tenro
                    End If
                    TipoDia_Ok = False
                End If
            End If
        End If
    
        If CBool(TipoDia_Ok) Then
            StrSql = "SELECT * FROM emp_lic WHERE (empleado = " & buliq_empleado!ternro & " )" & _
                     " AND tdnro =" & rs_tipd_con!tdnro & _
                     " AND elfechadesde <=" & ConvFecha(FechaDeFin) & _
                     " AND elfechahasta >= " & ConvFecha(FechaDeInicio)
            If Solo_Aprobadas = -1 Then
               StrSql = StrSql & " AND licestnro = 2 "
            End If
            OpenRecordset StrSql, rs_Lic
            
            dias = 0
            Do While Not rs_Lic.EOF
                Aux_Fecha_Desde = rs_Lic!elfechadesde
                Aux_Fecha_Hasta = rs_Lic!elfechahasta
            
                If Aux_Fecha_Hasta > FechaDeFin Then
                    Aux_Fecha_Hasta = FechaDeFin
                End If
                dias = CantidadDeDias2(FechaDeInicio, FechaDeFin, Aux_Fecha_Desde, Aux_Fecha_Hasta, Retorna)
                
                SumaDias = SumaDias + dias
                
                rs_Lic.MoveNext
            Loop
        End If
        rs_tipd_con.MoveNext
    Loop

Valor = SumaDias
Bien = True
    
'-------------------------------
    'Cierro todo y libero
    If rs_Lic.State = adStateOpen Then rs_Lic.Close
    Set rs_Lic = Nothing
    
    If rs_PeriodoGTI.State = adStateOpen Then rs_PeriodoGTI.Close
    Set rs_PeriodoGTI = Nothing
    
    If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
    Set rs_Periodo = Nothing

    If rs_Estructura.State = adStateOpen Then rs_Estructura.Close
    Set rs_Estructura = Nothing
    
    If rs_tipd_con.State = adStateOpen Then rs_tipd_con.Close
    Set rs_tipd_con = Nothing

End Function

Public Function CantidadDeDias2(ByVal PeriodoDesde As Date, ByVal PeriodoHasta As Date, ByVal Desde As Date, ByVal Hasta As Date, ByVal Retorna As Integer) As Long
' ---------------------------------------------------------------------------------------------
' Descripcion: Calcula la cantidad de dias que caen dentro de un periodo (especificado como un
'              rango de fechas) teniendo en cuenta cuales son habiles y cuales son feriados .
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim auxFecha As Date
Dim ExcluyeFeriados As Boolean

Dim FechaInicioAuxiliar As Date
Dim FechaFinAuxiliar As Date
Dim DHabiles(1 To 7) As Boolean
Dim auxCant As Integer
Dim CHabiles As Integer
Dim cNoHabiles As Integer
Dim cFeriados As Integer
Dim objFeriado As New Feriado
Dim EsFeriado As Boolean


    'Inicializaciones
    ExcluyeFeriados = True  'significa que el feriado no es habil
    auxCant = 0
    
    'Los habiles son de lunes a viernes
    DHabiles(1) = False
    DHabiles(2) = True
    DHabiles(3) = True
    DHabiles(4) = True
    DHabiles(5) = True
    DHabiles(6) = True
    DHabiles(7) = False

    
    FechaInicioAuxiliar = IIf(Desde > PeriodoDesde, Desde, PeriodoDesde)
    If Not EsNulo(Hasta) Then
        FechaFinAuxiliar = Hasta
        FechaFinAuxiliar = IIf(Hasta > PeriodoHasta, PeriodoHasta, Hasta)
    Else
        'FechaFinAuxiliar = PeriodoHasta
        FechaFinAuxiliar = IIf(Hasta > PeriodoHasta, PeriodoHasta, Hasta)
    End If
    
    Select Case Retorna
    Case 1: 'Todos los Días
        auxCant = IIf((DateDiff("d", FechaInicioAuxiliar, FechaFinAuxiliar) + 1 < 0), 0, DateDiff("d", FechaInicioAuxiliar, FechaFinAuxiliar) + 1)
    Case 2, 3, 4: 'Dias habiles, Feriados o No habiles
           
        Set objFeriado.Conexion = objConn
        Set objFeriado.ConexionTraza = objConn
       
        auxFecha = FechaInicioAuxiliar
        CHabiles = 0
        cNoHabiles = 0
        cFeriados = 0
    
        Do While auxFecha <= FechaFinAuxiliar
            EsFeriado = objFeriado.Feriado(auxFecha, NroEmple, False)
        
            If (EsFeriado) And ExcluyeFeriados Then
                cFeriados = cFeriados + 1
            Else
                If DHabiles(Weekday(auxFecha)) Then
                    CHabiles = CHabiles + 1
                Else
                    cNoHabiles = cNoHabiles + 1
                End If
            End If
            
            auxFecha = DateAdd("d", 1, auxFecha)
        Loop
    Case Else 'Todos los Días
        auxCant = IIf((DateDiff("d", FechaInicioAuxiliar, FechaFinAuxiliar) + 1 < 0), 0, DateDiff("d", FechaInicioAuxiliar, FechaFinAuxiliar) + 1)
    End Select
    
    'El resultado
    Select Case Retorna
    Case 1: 'Todos los Días
        CantidadDeDias2 = auxCant
    Case 2: 'Dias habiles
        CantidadDeDias2 = CHabiles
    Case 3: 'Dias Feriados
        CantidadDeDias2 = cFeriados
    Case 4: 'Dias No Habiles
        CantidadDeDias2 = cNoHabiles
    Case Else
        CantidadDeDias2 = auxCant
    End Select

End Function


Public Function bus_ImpuestoUnico()
' ---------------------------------------------------------------------------------------------
' Descripcion: busqueda del impuesto unico ajustado generado por el
'              recalculo de impuesto unico.
' Autor      : Martin Ferraro
' Fecha      : 28/01/2007
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------

Dim rs_impuni_cab As New ADODB.Recordset

Dim ValorBuscado As Integer
    
    Bien = False
    Valor = 0

    If Arr_Programa(NroProg).Prognro <> 0 Then
        ValorBuscado = CInt(Arr_Programa(NroProg).Auxint1)
    Else
        If CBool(USA_DEBUG) Then
            Flog.writeline Espacios(Tabulador * 4) & "Busqueda no encontrada " & NroProg
        End If
        Exit Function
    End If
    
    Select Case ValorBuscado
        Case 1
            StrSql = "SELECT sum(impuni_cab.gratprop) monto"
            
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Busca Gratif. Prop."
            End If
        Case 2
            StrSql = "SELECT sum(impuni_cab.difimponibleact) monto"
            
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Busca Dif. Imp. Actual"
            End If
        Case 3
            StrSql = "SELECT sum(impuni_cab.rentaimpoact) monto"
            
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Busca Nueva Renta Imp."
            End If
        Case 4
            StrSql = "SELECT sum(impuni_cab.impunicoaju) monto"
            
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Busca I. U. Ajustado"
            End If
        Case 5
            StrSql = "SELECT sum(impuni_cab.difimponible) monto"
            
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "Busca Dif. Imponible"
            End If
        Case Else
            If CBool(USA_DEBUG) Then
                Flog.writeline Espacios(Tabulador * 4) & "No se encontro el valor buscado"
            End If
            Exit Function
    End Select

    
    StrSql = StrSql & " FROM impuni_cab"
    StrSql = StrSql & " WHERE impuni_cab.cliqnro = " & buliq_cabliq!cliqnro
    OpenRecordset StrSql, rs_impuni_cab
    If Not rs_impuni_cab.EOF Then
        Valor = IIf(EsNulo(rs_impuni_cab!Monto), 0, rs_impuni_cab!Monto)
    End If
    rs_impuni_cab.Close
    
    Valor = Round(Valor, 0)
    Bien = True
        
    If rs_impuni_cab.State = adStateOpen Then rs_impuni_cab.Close
    Set rs_impuni_cab = Nothing

End Function
