Attribute VB_Name = "Politicas"
Option Explicit

'FGZ - 19/12/2006 -----
Public Type T_HN
    DesdeT As String
    Fecha_DesdeT As Date
    HastaT As String
    Fecha_HastaT As Date
End Type
'FGZ - 19/12/2006 -----

'FGZ - 10/01/2007
Public Type THoraExced
    Thnro_Exced As Long
    Cant As Single
    Cant_Exced As Single
End Type
'FGZ - 10/01/2007

'FGZ - 11/06/2007
Public Type TST
    Subturno As Long
    Tam As Integer
End Type
'FGZ - 11/06/2007

'FGZ - 09/09/2009
Public Type TDesgRegProcesadas
    Reg_Ent As Long
    Reg_Sal As Long
    hs As Single
    Desde As String
    Hasta As String
End Type
'FGZ - 09/09/2009


'FGZ - Mejoras ----------
Public Type TPolGlobal
    CabPolNro As Long
    CabPolNivel As Long
    DetPolNro As Long
    DetPolPrograma As String
End Type

Public Type TDetPol
    st_Opcion As Integer
    st_VentSal As String
    st_Continua As Boolean
    st_VentEnt As String
    st_Iteraciones As Integer
    st_Tolerancia As String
    st_TipoHora1 As Long
    st_Distancia As Integer
    st_TamañoVentana As String
    st_TipoDia1 As Integer
    st_CantidadDias As Integer
    st_FactorDivision As Integer
    st_Escala As Integer
    st_ModeloPago As Integer
    st_ModeloDto As Integer
    st_TipoRedondeo As Long
    st_ListaTH As String
    st_BaseAntiguedad As Integer
    st_Factor As Double
    st_ModeloPago2 As Integer
    st_ModeloDto2 As Integer
    st_Modifica As String
    st_ListaF1 As String
    st_ListaF2 As String
    st_ListaF3 As String
    st_TipoHora2 As Long
    st_Minutos As Integer
    st_Anormalidad As String
    st_Dias As Long
    st_Anormalidad2 As String
    st_Anormalidad3 As String
    st_TipoHora3 As Long
    st_Tolerancia2 As String
    st_Tolerancia3 As String
    st_Dia As Long
    st_Mes As Long
    st_Anormalidad4 As String
    st_Anormalidad5 As String
    st_Anormalidad6 As String
    st_TipoHora4 As Long
    st_TipoHora5 As Long
    st_TipoHora6 As Long
    st_Factor2 As Double
    ok As Boolean
    st_modeloAsiento As Long
    st_TipoMotivo As Long
    st_TipoEstructura As Long
    st_TipoPeriodo As Long
    
End Type


'FGZ - 02/08/2010
Public Type TTipoReg
    Codigo As String
    TH As Long
    AN As Single
End Type
'FGZ - 02/08/2010



Global Arr_PolG(1 To 2000) As TPolGlobal
Global Arr_PolI(1 To 2000) As TPolGlobal
Global Arr_PolE(1 To 2000, 1 To 5) As TPolGlobal
Global Arr_DetallesPol() As TDetPol

'FGZ - Mejoras ----------


'FGZ - 30/11/2006
Global Nro_Dia_Original As Long
Global Nro_Dia_Default As Long 'Diego Rosso - 12/11/2007
Global rsPolitica As New ADODB.Recordset


Global CabeceraAP As Long
Global ProcesoAP As Long


Global Sigo_Generando As Boolean
Global Genero_Sin_Control_Presencia  As Boolean
'FGZ - 31/07/2009 ---
Global Subturno_Genera As Integer
'FGZ - 31/07/2009 ---


' Debe haber 1 Variable por cada tipo de parametro posible
Global st_Opcion As Integer
Global st_VentSal As String
Global st_VentEnt As String
Global st_Iteraciones As Integer
Global st_Tolerancia As String
Global st_TipoHora1 As Long
Global st_Distancia As Integer
Global st_TamañoVentana As String
Global st_TipoDia1 As Integer
Global st_CantidadDias As Integer
Global st_FactorDivision As Integer
Global st_Escala As Integer
Global st_ModeloPago As Integer
Global st_ModeloDto As Integer
Global st_TipoRedondeo As Long
Global st_ListaTH As String
Global st_BaseAntiguedad As Integer
Global st_Factor As Double
Global st_ModeloPago2 As Integer
Global st_ModeloDto2 As Integer
Global st_Modifica As String  'Diego Rosso 12/11/2007
Global st_ListaF1 As String 'FGZ - 31/01/2008
Global st_ListaF2 As String 'FGZ - 31/01/2008
Global st_ListaF3 As String 'FGZ - 31/01/2008
Global st_TipoHora2 As Long 'FGZ - 17/06/2008
Global st_Minutos As Long   'FGZ - 18/06/2008
Global st_Continua As Boolean   'FGZ - 05/11/2008
Global st_Anormalidad As String   'FGZ - 05/11/2008
Global st_Dias As Long   'FGZ - 05/06/2009
'FGZ - 15/01/2010 --------------------------------------
Global st_Anormalidad2 As String
Global st_Anormalidad3 As String
Global st_TipoHora3 As Long
Global st_Tolerancia2 As String
Global st_Tolerancia3 As String
'FGZ - 15/01/2010 --------------------------------------

'FGZ - 04/03/2010 --------------------------------------
Global st_Dia As Long
Global st_Mes As Long
'FGZ - 04/03/2010 --------------------------------------

'FGZ - 02/08/2010 --------------------------------------
Global st_Anormalidad4 As String
Global st_Anormalidad5 As String
Global st_Anormalidad6 As String
Global st_TipoHora4 As Long
Global st_TipoHora5 As Long
Global st_TipoHora6 As Long
'FGZ - 02/08/2010 --------------------------------------
'FGZ - 20/04/2011 --------------------------------------
Global st_Factor2 As Double
'FGZ - 20/04/2011 --------------------------------------
Global st_TipoMotivo As Long
'FGZ - 07/10/2014 --------------------------------------
'FGZ - 08/10/2014 --------------------------------------
Global st_TipoEstructura As Long
'FGZ - 08/10/2014 --------------------------------------
'EAM- (v5.43 - PRC01)
Global st_TipoPeriodo As Long

Global Aprobadas As Boolean 'FGZ - 14/10/2008
Global Fecha_Generacion As Date

'FGZ - 09/09/2009
Global Const MaxPares = 20
Global Arr_DesgReg(1 To MaxPares) As TDesgRegProcesadas
Global Indice_Reg As Integer
Global Existe_Reg As Boolean
Global Existe_Reg_LLamada As Boolean
Global Justif_Completa As Boolean   'EAM(5.48) se definio variable porque se agrego en el prc30 y no se no compila este proceso
Global st_modeloAsiento As Integer  'EAM (5.09) - Se definio un nuevo parametro para el pasaje de novedades de SGS 22808, donde se configura que modelo de asiento se utiliza.
Global hor_normal_amr As Boolean    'MDF - 28/04/2015






Public Sub SetearParametrosPolitica(ByVal Detalle As Long, ByRef ok As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Setea los parametros de cada detalle de politica existentes.
' Autor      : FGZ
' Fecha      : 30/05/2007
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim i As Integer
Dim rsPolitica As New ADODB.Recordset

    ok = False
    i = Detalle
    
    st_Opcion = Arr_DetallesPol(i).st_Opcion
    st_VentSal = Arr_DetallesPol(i).st_VentSal
    st_VentEnt = Arr_DetallesPol(i).st_VentEnt
    st_Iteraciones = Arr_DetallesPol(i).st_Iteraciones
    st_Tolerancia = Arr_DetallesPol(i).st_Tolerancia
    st_Distancia = Arr_DetallesPol(i).st_Distancia
    st_TipoHora1 = Arr_DetallesPol(i).st_TipoHora1
    st_TamañoVentana = Arr_DetallesPol(i).st_TamañoVentana
    st_TipoDia1 = Arr_DetallesPol(i).st_TipoDia1
    st_CantidadDias = Arr_DetallesPol(i).st_CantidadDias
    st_FactorDivision = Arr_DetallesPol(i).st_FactorDivision
    st_Escala = Arr_DetallesPol(i).st_Escala
    st_ModeloPago = Arr_DetallesPol(i).st_ModeloPago
    st_ModeloDto = Arr_DetallesPol(i).st_ModeloDto
    st_TipoRedondeo = Arr_DetallesPol(i).st_TipoRedondeo
    st_ListaTH = Arr_DetallesPol(i).st_ListaTH
    st_BaseAntiguedad = Arr_DetallesPol(i).st_BaseAntiguedad
    st_Factor = Arr_DetallesPol(i).st_Factor
    st_ModeloPago2 = Arr_DetallesPol(i).st_ModeloPago2
    st_ModeloDto2 = Arr_DetallesPol(i).st_ModeloDto2
    st_Modifica = Arr_DetallesPol(i).st_Modifica 'Diego Rosso 12/11/2007
    st_ListaF1 = Arr_DetallesPol(i).st_ListaF1  'FGZ - 31/01/2008
    st_ListaF2 = Arr_DetallesPol(i).st_ListaF2  'FGZ - 31/01/2008
    st_ListaF3 = Arr_DetallesPol(i).st_ListaF3  'FGZ - 31/01/2008
    st_TipoHora2 = Arr_DetallesPol(i).st_TipoHora2
    st_Minutos = Arr_DetallesPol(i).st_Minutos
    st_Continua = Arr_DetallesPol(i).st_Continua 'FGZ - 06/11/2008
    st_Anormalidad = Arr_DetallesPol(i).st_Anormalidad 'FGZ - 06/11/2008
    
    'FGZ - 15/01/2010 ---------------------------------
    st_Anormalidad2 = Arr_DetallesPol(i).st_Anormalidad2
    st_Anormalidad3 = Arr_DetallesPol(i).st_Anormalidad3
    st_TipoHora3 = Arr_DetallesPol(i).st_TipoHora3
    st_Tolerancia2 = Arr_DetallesPol(i).st_Tolerancia2
    st_Tolerancia3 = Arr_DetallesPol(i).st_Tolerancia3
    'FGZ - 15/01/2010 ---------------------------------
    
    'FGZ - 02/028/2010 ---------------------------------
    st_Anormalidad4 = Arr_DetallesPol(i).st_Anormalidad4
    st_Anormalidad5 = Arr_DetallesPol(i).st_Anormalidad5
    st_Anormalidad6 = Arr_DetallesPol(i).st_Anormalidad6
    st_TipoHora4 = Arr_DetallesPol(i).st_TipoHora4
    st_TipoHora5 = Arr_DetallesPol(i).st_TipoHora5
    st_TipoHora6 = Arr_DetallesPol(i).st_TipoHora6
    'FGZ - 02/028/2010 ---------------------------------
    'FGZ - 20/04/2011 ---------------------------------
    st_Factor2 = Arr_DetallesPol(i).st_Factor2
    'FGZ - 20/04/2011 ---------------------------------
    st_modeloAsiento = Arr_DetallesPol(i).st_modeloAsiento
    'FGZ - 07/10/2014 ---------------------------------
    st_TipoMotivo = Arr_DetallesPol(i).st_TipoMotivo
    'FGZ - 07/10/2014 ---------------------------------
    'FGZ - 08/10/2014 ---------------------------------
    st_TipoEstructura = Arr_DetallesPol(i).st_TipoEstructura
    'FGZ - 08/10/2014 ---------------------------------
    'EAM- (v5.43 - PRC01)
    st_TipoPeriodo = Arr_DetallesPol(i).st_TipoPeriodo
    
    ok = Arr_DetallesPol(i).ok
            
End Sub






Public Sub SetearParametrosPolitica_antesdemejora(ByVal Detalle As Long, ByRef ok As Boolean)
Dim rsPolitica As New ADODB.Recordset

    ok = False
    
    StrSql = " SELECT * FROM gti_pol_det_param " & _
             " INNER JOIN gti_pol_param ON gti_pol_det_param.polparamnro = gti_pol_param.polparamnro " & _
             " WHERE detpolnro = " & Detalle & _
             " ORDER BY gti_pol_param.polparamnro"
    OpenRecordset StrSql, rsPolitica

    If Not rsPolitica.EOF Then
        ok = True
    End If

    Do While Not rsPolitica.EOF
        Select Case rsPolitica!polparamnro
        Case 1:
            st_Opcion = CInt(rsPolitica!polparamvalor)
        Case 2:
            st_VentSal = Format(rsPolitica!polparamvalor, "0000")
        Case 3:
            ' por ahora esta vacio
        Case 4:
            st_VentEnt = Format(rsPolitica!polparamvalor, "0000")
        Case 5:
            st_Iteraciones = CInt(rsPolitica!polparamvalor)
        Case 6:
            st_Tolerancia = Format(rsPolitica!polparamvalor, "0000")
        Case 7:
            st_Distancia = CInt(rsPolitica!polparamvalor)
        Case 8:
            st_TipoHora1 = CLng(rsPolitica!polparamvalor)
        Case 9:
            st_TamañoVentana = Format(rsPolitica!polparamvalor, "0000")
        Case 10:
            st_TipoDia1 = CInt(rsPolitica!polparamvalor)
        Case 11:
            st_CantidadDias = CInt(rsPolitica!polparamvalor)
        Case 12:
            st_FactorDivision = CInt(rsPolitica!polparamvalor)
        Case 13:
            st_Escala = CInt(rsPolitica!polparamvalor)
        Case 14:
            st_ModeloPago = CInt(rsPolitica!polparamvalor)
        Case 15:
            st_ModeloDto = CInt(rsPolitica!polparamvalor)
        Case 16:
            st_TipoRedondeo = CInt(rsPolitica!polparamvalor)
        Case 17:
            st_ListaTH = rsPolitica!polparamvalor
        Case Else
        
        End Select
        
        rsPolitica.MoveNext
    Loop


End Sub
Public Sub Politica(Numero As Integer)
' --------------------------------------------------------------
' Descripcion: LLamador de las politicas
' Autor: ?
' Ultima modificacion: FGZ - 28/07/2003
' Ultima modificacion: FGZ - 20/10/2005
' Ultima modificacion: FGZ - 30/05/2007 - Mejoras de performance
' --------------------------------------------------------------
'Dim objRs As New ADODB.Recordset

Dim det As Integer
Dim Cabecera As Long
Dim Detalle As Long

Dim i As Integer
Dim j As Integer
Dim Con_Alcance As Boolean
Dim hay_mas As Boolean

    Cantidad_Call_Politicas = Cantidad_Call_Politicas + 1
    If depurar Then
        Flog.writeline
    End If
    
    
    i = Numero
    j = 1
    Con_Alcance = False
    hay_mas = True

    'Busco alcance individual
    If Arr_PolI(i).CabPolNivel <> 0 Then
        det = Arr_PolI(i).DetPolPrograma
        Cabecera = Arr_PolI(i).CabPolNro
        Detalle = Arr_PolI(i).DetPolNro
    
        Con_Alcance = True
    End If
    'Busco alcance por estructura
    If Not Con_Alcance Then
        Do While Not Con_Alcance And hay_mas
            If Arr_PolE(i, j).CabPolNivel <> 0 Then
                det = Arr_PolE(i, j).DetPolPrograma
                Cabecera = Arr_PolE(i, j).CabPolNro
                Detalle = Arr_PolE(i, j).DetPolNro
                
                Con_Alcance = True
            Else
                hay_mas = False
            End If
            j = j + 1
        Loop
    End If
    'Busco alcance global
    If Not Con_Alcance Then
        If Arr_PolG(i).CabPolNivel <> 0 Then
            det = Arr_PolG(i).DetPolPrograma
            Cabecera = Arr_PolG(i).CabPolNro
            Detalle = Arr_PolG(i).DetPolNro
    'Creo el archivo txt
            Con_Alcance = True
        End If
    End If
    
    TiempoInicialPolitica = GetTickCount
    If depurar Then
        Flog.writeline Espacios(Tabulador * 1) & "Politica " & Numero
    End If
    If Con_Alcance Then
        If depurar Then GeneraTraza Empleado.Ternro, p_fecha, "Nª " & Numero, Str(det)
        Select Case Numero
            Case 4: 'Notificaciones horarias a partes de asignacion horaria (Custom SYKES)
                Call Politica4(det, Cabecera, Detalle)
            Case 5:
                Call Politica5
            Case 14:
                Call Politica14(p_fecha, Empleado.Ternro, Nro_Turno, ok, det, Cabecera, Detalle)
            Case 15:
                Call Politica15(p_fecha, Empleado.Ternro, hora_desde, fecha_desde, hora_hasta, fecha_hasta, Nro_Turno, Nro_Dia, P_Asignacion, esFeriado, det, Cabecera, Detalle)
            Case 20:
                Call Politica20(p_fecha, p_fecha, depurar, Empleado.Ternro, det, Cabecera, Detalle)
            Case 21:
                Call Politica21(p_fecha, p_fecha, depurar, Empleado.Ternro, det, Cabecera, Detalle)
            Case 25:
                'FGZ - 22/01/2015 --------------------------
                'Call politica25
                Call politica25(det, Cabecera, Detalle)
                'FGZ - 22/01/2015 --------------------------
            Case 30:
                Call Politica30(p_fecha, Empleado.Ternro, Nro_Turno, depurar, det, Cabecera, Detalle)
            Case 35:
                Call Politica35(p_fecha, Empleado.Ternro, Nro_Turno, depurar, det, Cabecera, Detalle)
            Case 40:
                Call Politica40(p_fecha, fecha_desde, hora_desde, Empleado.Ternro, Nro_Turno, det, Cabecera, Detalle)
            Case 50:
                Call Politica50(p_fecha, Empleado.Ternro, det, Cabecera, Detalle)
            Case 51:
                Call Politica51(p_fecha, Empleado.Ternro, det, Cabecera, Detalle)
            Case 60:
                Call Politica60(p_fecha, Empleado.Ternro, Nro_Dia, P_Asignacion, det, Cabecera, Detalle)
            Case 61:
                Call Politica61(p_fecha, Empleado.Ternro, Nro_Dia, P_Asignacion, det, Cabecera, Detalle)
            Case 70:
                Call Politica70(p_fecha, Empleado.Ternro, hora_desde, fecha_desde, hora_hasta, fecha_hasta, Nro_Turno, depurar, ok, det, Cabecera, Detalle)
            Case 80:
                Call Politica80(Empleado.Ternro, p_fecha, fecha_desde, hora_desde, fecha_hasta, hora_hasta, det, Cabecera, Detalle)

            Case 85:
                Call Politica85(p_fecha, Empleado.Ternro, Nro_Grupo, Nro_Turno, Tiene_Justif, No_Trabaja_just, depurar, ok, det, Cabecera, Detalle)
            Case 90:
                Call Politica90(p_fecha, Empleado.Ternro, hora_desde, fecha_desde, hora_hasta, fecha_hasta, Nro_Turno, ok, det, Cabecera, Detalle)
            Case 91:    'FGZ - 06/11/2008
                Call Politica91(p_fecha, Empleado.Ternro, hora_desde, fecha_desde, hora_hasta, fecha_hasta, Nro_Turno, depurar, Detalle)
            Case 92:    'FGZ - 06/11/2008
                Call Politica92(p_fecha, Empleado.Ternro, hora_desde, fecha_desde, hora_hasta, fecha_hasta, Nro_Turno, depurar, Detalle)
            Case 95
                Call politica95
            Case 100:
                'call Politica100(Nro_dia, p_fecha, empleado.ternro, hora_desde, fecha_desde, hora_hasta, fecha_hasta, p_asignacion, Cod_justificacion1, Cod_justificacion2)
            Case 110:
                Call Politica110(p_fecha, Empleado.Ternro, Nro_Turno, depurar, det, Cabecera, Detalle)
            Case 111:
                Call Politica111(Empleado.Ternro, Nro_Turno, p_fecha, Detalle)
            Case 130:
                Call Politica130(det, Cabecera, Detalle)
            Case 131:
                Call Politica131(det, Cabecera, Detalle)
            Case 140:
                Call Politica140(det, Cabecera, Detalle)
            Case 141:
                Call Politica141(det, Cabecera, Detalle)
            Case 150:
                Call Politica150(det, Cabecera, Detalle)
            Case 160:
                Call Politica160
            Case 170:
                Call Politica170
            Case 180:
                Call Politica180
            Case 190:
                Call Politica190(Empleado.Ternro, Nro_Turno, p_fecha, tol, acumula, depurar, toldto, acumula_dto, det, Cabecera, Detalle)
            'compania
           ' strlinea = "CARG" & separador MDF <---- Rompia por variable no definida!!!!!
           Case 200:
               Call Politica200(Empleado.Ternro, Nro_Turno, p_fecha, toltemp, acumula_temp, depurar, toldto, acumula_dto, det, Cabecera, Detalle)
            Case 201:
                'Call Politica201(Empleado.Ternro, Nro_Turno, p_fecha, toltemp, acumula_temp, depurar, toldto, acumula_dto, det, Cabecera, Detalle)
                Call Politica201(Empleado.Ternro, Nro_Turno, p_fecha, Detalle)
            'Legajo
            Case 205:
                'FGZ - 20/01/2015 ----
                'Call politica205
                Call politica205(det, Cabecera, Detalle)
                'FGZ - 20/01/2015 ----
            Case 220:
                Call Politica220(Empleado.Ternro, Nro_Turno, p_fecha, toltemp, acumula_temp, depurar, toldto, acumula_dto, det, Cabecera, Detalle)
            Case 300:
                Call politica300(p_fecha, Empleado.Ternro)
            Case 380:
                Call Politica380(det, Cabecera, Detalle)
            Case 390:
                Call Politica390
            Case 400:
                Call Politica400(p_fecha, Empleado.Ternro, hora_desde, fecha_desde, hora_hasta, fecha_hasta, Nro_Turno, depurar, det, Cabecera, Detalle)
            Case 401:
                Call Politica401(p_fecha, Empleado.Ternro, hora_desde, fecha_desde, hora_hasta, fecha_hasta, Nro_Turno, depurar, det, Cabecera, Detalle)
            Case 402:
                Call Politica402(Empleado.Ternro, Detalle)
            Case 410:
                Call Politica410(p_fecha, Empleado.Ternro, hora_desde, fecha_desde, hora_hasta, fecha_hasta, Nro_Turno, depurar, det, Cabecera, Detalle)
            Case 430:
                Call Politica430(Empleado.Ternro, Detalle)
            Case 440:
                Call Politica440(p_fecha, Empleado.Ternro, Nro_Dia, aux_TipoDia, Aux_Tipohora, Total_horas, det, Cabecera, Detalle)
            Case 450:
                Call Politica450(Nro_Turno, p_fecha, Empleado.Ternro, Nro_Grupo, Nro_fpgo, Dia_Libre, esFeriado, Existe_Reg, depurar, det, Cabecera, Detalle)
            Case 460:
                'Politica460 empleado.ternro, p_fecha, empleado.Grupo, depurar
                'Francos trabajados
                Call Politica(464)
                'FGZ - 20/09/2005
                'comenté la linea de abajo porque produce recursion infinita - REVISAR
                'Francos compensatorios
                'Call Politica(465)
            Case 464:
                Call Politica464(p_fecha, Empleado.Ternro, Nro_Turno, Dias_trabajados, Dias_laborables, depurar, det, Cabecera, Detalle)
            Case 465:
                'Call Politica465(p_fecha, Empleado.Ternro, Nro_Turno, Dias_trabajados, Dias_laborables, depurar, det, Cabecera, Detalle)
                Call Politica465(p_fecha, Detalle)
            Case 470:
                'Call Politica470(Sigo_Generando, det, Cabecera, Detalle)
                Call Politica470(det, Cabecera, Detalle)
            Case 480:
                Call Politica480(Empleado.Ternro, p_fecha, det, Cabecera, Detalle)
            Case 490:
                Call Politica490(p_fecha, Empleado.Ternro, hora_desde, fecha_desde, hora_hasta, fecha_hasta, Nro_Turno, depurar, det, Cabecera, Detalle)
            Case 495:
                Call Politica495(p_fecha, Empleado.Ternro, hora_desde, fecha_desde, hora_hasta, fecha_hasta, Nro_Turno, depurar, det, Cabecera, Detalle)
            Case 499:
                Call Politica499(Empleado.Ternro, p_fecha, det, Cabecera, Detalle)
            Case 500:
                Call politica500(Detalle)
            Case 510:
                Call Politica510(Empleado.Ternro, p_fecha, det, Cabecera, Detalle)
            Case 540:
                'call Politica540(tipo_hora, empleado.Ternro, p_fecha, nro_turno, Total_horas)
            Case 541:
                Call Politica541(Empleado.Ternro, Detalle)
            Case 550:
                Call Politica550
            Case 560:
                Call politica560
            Case 570:
                Call politica570
            Case 571: '21/11/2007 - Diego Rosso
                Call politica571(Detalle)
            Case 575:
                Call politica575
            Case 576:
                Call politica576(Detalle)
            Case 577:
                Call politica577(Detalle)
            Case 579: 'FGZ - 08/10/2014 - Topeo Horas en Acumulado Diario
                Call Politica579(Empleado.Ternro, Detalle)
            Case 580:
                Call politica580
            Case 585:
                Call politica585(Detalle)
            Case 589:
                Call politica589(det)
            Case 590:
                Call politica590
            Case 597:
                Call Politica597(Empleado.Ternro, Detalle)
            Case 598:
                Call Politica598(Empleado.Ternro, Detalle)
            Case 599:
                Call Politica599(Empleado.Ternro, Detalle)
            Case 600:
                Call Politica600(Empleado.Ternro, Detalle)
            Case 601:
                Call Politica601(Empleado.Ternro, Detalle)
            Case 650:
                Call Politica650
            Case 700:   'Conversion de Hs al final del HC
                Call Politica700(p_fecha, Empleado.Ternro, det, Cabecera, Detalle)
            Case 710:   'Distribucion Horas
                Call politica710(Empleado.Ternro, Detalle)
            Case 720:   'EAM (5.44) - Hs de Insalubridad
                Call Politica720(Empleado.Ternro, p_fecha, det, Cabecera, Detalle)
            Case 730:   'EAM (5.48) - Distribución de Horas
                Call Politica730(Empleado.Ternro, p_fecha, det, Cabecera, Detalle)
            Case 800:
                Call politica800(fec_proc, det, Cabecera, Detalle)
            Case 810:
                Call politica810(Usa_Conv)
            Case 820:
                Call Politica820(p_fecha, Empleado.Ternro, Nro_Turno, Detalle)
            Case 850:
                Call Politica850
            Case 890:
                Call politica890(p_fecha, Empleado.Ternro, hora_desde, fecha_desde, hora_hasta, fecha_hasta, Nro_Turno, Nro_Dia, P_Asignacion, esFeriado, det, Cabecera, Detalle)
            Case 891:   'Ajustes de AD
                Call Politica891(p_fecha, Empleado.Ternro, hora_desde, fecha_desde, hora_hasta, fecha_hasta, Nro_Turno, Nro_Dia, P_Asignacion, esFeriado, det, Cabecera, Detalle)
            Case 892:   'Ajustes de AP
                Call Politica892(p_fecha, Empleado.Ternro, hora_desde, fecha_desde, hora_hasta, fecha_hasta, Nro_Turno, Nro_Dia, P_Asignacion, esFeriado, det, Cabecera, Detalle)
            Case 893:   'Ajustes de AP para SMT
                Call Politica893(p_fecha, Empleado.Ternro, hora_desde, fecha_desde, hora_hasta, fecha_hasta, Nro_Turno, Nro_Dia, P_Asignacion, esFeriado, det, Cabecera, Detalle)
            Case 894:
                Call politica894(p_fecha, Empleado.Ternro, hora_desde, fecha_desde, hora_hasta, fecha_hasta, Nro_Turno, Nro_Dia, P_Asignacion, esFeriado, det, Cabecera, Detalle)
            Case 900:
                Call Politica900(NroProceso, det, Cabecera, Detalle)
            Case 1000:
                Call Politica1000(p_fecha, Empleado.Ternro, hora_desde, fecha_desde, hora_hasta, fecha_hasta, Nro_Turno, Nro_Dia, P_Asignacion, esFeriado, det, Cabecera, Detalle)
            Case 1001:
                Call Politica1001(p_fecha, Empleado.Ternro, hora_desde, fecha_desde, hora_hasta, fecha_hasta, Nro_Turno, Nro_Dia, P_Asignacion, esFeriado, det, Cabecera, Detalle)
            Case 2000:
                Call Politica2000(NroProceso, det, Cabecera, Detalle)
            Case Else
                Flog.writeline Espacios(Tabulador * 2) & "Politica " & Numero & " Inexistente "
        End Select
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Sin Alcance"
        End If
    End If
    TiempoFinalPolitica = GetTickCount
    If depurar Then
        Flog.writeline Espacios(Tabulador * 1) & "Fin Politica " & Numero
        Flog.writeline Espacios(Tabulador * 1) & "  Tiempo: " & (TiempoFinalPolitica - TiempoInicialPolitica)
    End If
End Sub


Public Function ConvHora(ByVal Hora As String) As String
Dim MiHora As String
' Hora viene como string sin :
    ConvHora = Mid(Hora, 1, 2) & ":" & Mid(Hora, 3, 2)
End Function

Public Function ConvHoraBD(ByVal Hora As Date) As String
'    ConvHoraBD = "#" & Format(hora, "hh:mm") & "#"
    ConvHoraBD = "'" & Format(Hora, "hhmm") & "'"
End Function


Sub PasarMin(ByVal Hora As String, ByVal Dias As Integer, ByRef Minutos As Integer)
' Pasa una cantidad de dias y horas a minutos
' Devuelve sin :
Dim h As Integer
Dim m As String
h = (Val(Mid(Hora, 1, 2))) * 60
m = Val(Mid(Hora, 3, 2))
Minutos = h + m + (1440 * Dias)
End Sub

Public Sub Politica15(Fecha As Date, NroTer As Long, HDesde As String, FDesde As Date, HHasta As String, FHasta As Date, Nro_Turno As Long, Nro_Dia As Integer, P_Asignacion As Boolean, esFeriado As Boolean, ByVal subn As Long, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Posibles cambios de turno no informados
' Autor: FGZ
' Ultima modificacion: 28/07/2003
' 03/02/2004 O.D.A. Ajuste en el calculo de la diferencia.
' Ultima Modificacion: FGZ - 17/04/2008
'       Mejora para que tome diferencias negativas u ajustes en el calculo de diferencia
' --------------------------------------------------------------

Dim rs_Config_tur_hor As New ADODB.Recordset
Dim RsDia As New ADODB.Recordset
Dim rsReg As New ADODB.Recordset
Dim RsDet As New ADODB.Recordset

Dim Distancia As Long
Dim TipoHoraC As Long
Dim TipoHoraPCT As Long
Dim EntTeorica As String ' Hora Entrada Teorica
Dim SalTeorica As String ' Hora Salida Teorica
Dim InsertET As String
Dim InsertST As String

Dim Tdias As Integer
Dim Thoras As Integer
Dim Tmin As Integer
Dim Resultado As Single
Dim EsDiaLibre As Boolean
Dim EsEntrada As Boolean
Dim EvaluaDiferencia As Boolean
Dim Texto As String
Dim TotHorHHMM As String

Call SetearParametrosPolitica(Detalle, ok)
Distancia = st_Distancia
TipoHoraC = st_TipoHora1

StrSql = "SELECT thnro FROM gti_config_tur_hor WHERE conhornro = " & TipoHoraC & _
" AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
OpenRecordset StrSql, rs_Config_tur_hor
If Not rs_Config_tur_hor.EOF Then
    TipoHoraPCT = rs_Config_tur_hor!thnro
Else
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "No está configurado el tipo de Hora Para Posible cambio de turno"
    End If
    Exit Sub
End If

EsDiaLibre = False

If P_Asignacion Then
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "  OBS: Hay un parte de Asignacion cargado"
    End If
    StrSql = "SELECT ttemphdesde1,ttemphhasta1,ttemplibre FROM gti_detturtemp WHERE (ternro =" & NroTer & " ) and (" & _
             "gttempdesde <= " & ConvFecha(Fecha) & ") and (" & _
             ConvFecha(Fecha) & " <= gttemphasta)"
    OpenRecordset StrSql, RsDet
    If Not RsDet.EOF Then
       EntTeorica = RsDet!ttemphdesde1
       SalTeorica = RsDet!ttemphhasta1
       EsDiaLibre = RsDet!ttemplibre
    End If
Else
    StrSql = "SELECT diahoradesde1,diahorahasta1,Dialibre FROM gti_dias WHERE dianro = " & Nro_Dia
    OpenRecordset StrSql, RsDia

    EntTeorica = RsDia!diahoradesde1
    SalTeorica = RsDia!diahorahasta1
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "  Entrada teorica: " & EntTeorica
        Flog.writeline Espacios(Tabulador * 3) & "  Salida  teorica: " & SalTeorica
    End If
        
    EsDiaLibre = RsDia!Dialibre
End If

If EsDiaLibre Or esFeriado Then
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "  El Día es Libre o es Feriado. No se ejecuta política."
    End If
    Exit Sub
End If

StrSql = "SELECT regfecha,reghora, regentsal FROM gti_registracion "
StrSql = StrSql & " WHERE ternro = " & NroTer
StrSql = StrSql & " AND ((regfecha > " & ConvFecha(FDesde) & ") OR (regfecha =" & ConvFecha(FDesde)
StrSql = StrSql & " AND reghora >= '" & HDesde & "'))"
StrSql = StrSql & " AND (( regfecha < " & ConvFecha(FHasta) & ") OR (regfecha = " & ConvFecha(FHasta)
StrSql = StrSql & " AND reghora <= '" & HHasta & "'))"
StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
StrSql = StrSql & " order by regfecha, reghora "
OpenRecordset StrSql, rsReg
If Not rsReg.EOF Then
    rsReg.MoveFirst

    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "  Registracion encontrada: " & rsReg!regfecha & " " & rsReg!reghora
        Flog.writeline Espacios(Tabulador * 3) & "  Fecha: " & Fecha & " " & SalTeorica
    End If
    
    'Se ven 2 casos disintivos y 3 opciones dentro de cada una
    ' 1) la reg encontrada es de entrada o sin marca
    '   a) reg < ET y < ST ==> se genera PCT por dif entre reg y ET
    '   b) reg > ET y < ST ==> se genera PCT por dif entre ET y reg
    '   c) reg > ET y > ST  ==> se genera PCT por dif entre ET y reg
    ' 2) la reg encontrada es de Salida
    '   a) reg < ET y < ST  ==> se genera PCT por dif entre reg y ST
    '   b) reg > ET y < ST ==> se genera PCT por dif entre reg y ST
    '   c) reg > ET y > ST ==> no genera nada
           
    If usaRelojEntradaSalida Then  'mdf
        If Not EsNulo(rsReg!regentsal) Then
            If rsReg!regentsal = "E" Then
                EsEntrada = True
            Else
                EsEntrada = False
            End If
        Else
            EsEntrada = True
        End If
     Else 'mdf
       EsEntrada = True   'mdf
    End If  'mdf
    
    EvaluaDiferencia = False
    Texto = ""
    If EsEntrada Then
        'a) reg < ET y < ST ==> se genera PCT por dif entre reg y ET
        If (Fecha <= rsReg!regfecha) And ((EntTeorica < rsReg!reghora) And (SalTeorica >= rsReg!reghora)) Then
            Call objFechasHoras.RestaHs(Fecha, EntTeorica, rsReg!regfecha, rsReg!reghora, Tdias, Thoras, Tmin)
            EvaluaDiferencia = True
            InsertET = EntTeorica
            InsertST = rsReg!reghora
        End If
        
        'b) reg > ET y < ST ==> se genera PCT por dif entre ET y reg
        If (Fecha <= rsReg!regfecha) And ((EntTeorica >= rsReg!reghora) And (SalTeorica >= rsReg!reghora)) Then
            Call objFechasHoras.RestaHs(rsReg!regfecha, rsReg!reghora, Fecha, EntTeorica, Tdias, Thoras, Tmin)
            EvaluaDiferencia = True
            InsertET = rsReg!reghora
            InsertST = EntTeorica
        End If
        
        'c) reg > ET y > ST  ==> se genera PCT por dif entre ET y reg
        If (Fecha <= rsReg!regfecha) And ((EntTeorica < rsReg!reghora) And (SalTeorica < rsReg!reghora)) Then
            Call objFechasHoras.RestaHs(Fecha, EntTeorica, rsReg!regfecha, rsReg!reghora, Tdias, Thoras, Tmin)
            EvaluaDiferencia = True
            InsertET = EntTeorica
            InsertST = rsReg!reghora
        End If
    Else
        'a) reg < ET y < ST  ==> se genera PCT por dif entre reg y ST
        If (Fecha <= rsReg!regfecha) And ((EntTeorica > rsReg!reghora)) Then
            Call objFechasHoras.RestaHs(rsReg!regfecha, rsReg!reghora, Fecha, SalTeorica, Tdias, Thoras, Tmin)
            EvaluaDiferencia = True
            InsertET = rsReg!reghora
            InsertST = SalTeorica
        End If
        'b) reg > ET y < ST ==> se genera PCT por dif entre reg y ST
        If (Fecha <= rsReg!regfecha) And ((EntTeorica < rsReg!reghora) And (SalTeorica >= rsReg!reghora)) Then
            Call objFechasHoras.RestaHs(rsReg!regfecha, rsReg!reghora, Fecha, SalTeorica, Tdias, Thoras, Tmin)
            EvaluaDiferencia = True
            InsertET = rsReg!reghora
            InsertST = SalTeorica
        End If
        
        'c) reg > ET y > ST ==> no genera nada
        If (Fecha <= rsReg!regfecha) And ((SalTeorica < rsReg!reghora)) Then
            EvaluaDiferencia = False
            Texto = "reg > ET y > ST ==> no genera nada"
        End If
    End If
    
    If EvaluaDiferencia Then
        Resultado = (Tdias * 24) + (Thoras + (Tmin / 60))
    Else
        Resultado = 0
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  No es posible evaluar PCT ==> " & Texto
        End If
    End If

    If Resultado >= Distancia Then
        TotHorHHMM = CHoras(Resultado, 60)
        
        'inserto el tipo de hora posible cambio de Turno
        StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
            "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta" & _
            ",horestado,normnro,normnro2) VALUES (" & TotHorHHMM & "," & Resultado & "," & _
            ConvFecha(FDesde) & "," & ConvFecha(FDesde) & "," & "0,-1," & _
            NroTer & "," & TipoHoraPCT & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
            ConvFecha(Fecha) & "," & ConvFecha(Fecha) & ",'" & InsertET & "','"
            StrSql = StrSql & InsertST & "',' ',4,4)"
        objConn.Execute StrSql, , adExecuteNoRecords
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TipoHoraPCT & "- Cantidad: " & Resultado & " hs."
        End If
    Else
        If depurar Then
            If EvaluaDiferencia Then
                Flog.writeline Espacios(Tabulador * 3) & "  La distancia es menor ==> no hay Posible Cambio de Turno."
            End If
        End If
    End If
Else
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "  No hay Registraciones ==> no hay Posible Cambio de Turno."
    End If
End If

If RsDia.State = adStateOpen Then RsDia.Close
If rsReg.State = adStateOpen Then rsReg.Close
If RsDet.State = adStateOpen Then RsDet.Close
If rs_Config_tur_hor.State = adStateOpen Then rs_Config_tur_hor.Close

Set RsDia = Nothing
Set rs_Config_tur_hor = Nothing
Set RsDet = Nothing
Set rsReg = Nothing
End Sub


Public Sub Politica410(Fecha As Date, NroTer As Long, VentDesde As String, ventFdesde As Date, VentHasta As String, ventFhasta As Date, Nro_Turno As Long, deb As Boolean, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Genera ausencia parcial con las reg. del medio.
' archivo 410auspa.p
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' Ultima modificacion: FGZ - 18/08/2006
' Ultima modificacion: FGZ - 02/10/2006
' --------------------------------------------------------------
Dim regnro_ent As Long
Dim regnro_sal As Long
Dim rec As Integer
Dim thora As Integer
'FGZ - 18/08/2006 ----
Dim Hora1(11) As String
Dim Hora2(11) As String
Dim fecha1(11) As Date
Dim Fecha2(11) As Date
Dim LS_AP As Integer
'FGZ - 18/08/2006 ----
Dim canthoras As Single
Dim Thoras As Integer
Dim Tmin As Integer
Dim Tdias As Integer
Dim TotHor As Single

Dim generar As Boolean
Dim Cant_Reg    As Integer
Dim cant_entsal As Integer
Dim Cant        As Integer
Dim i As Integer
Dim j As Integer
Dim Indice_J As Integer
Dim Indice_I As Integer
Dim Esta_Justificada As Boolean

Dim rs As New ADODB.Recordset
Dim rs_HC As New ADODB.Recordset

Dim TotHorHHMM As String


Hora1(0) = ""
i = 0
j = 1

StrSql = "SELECT * FROM " & TTempWFTurno
OpenRecordset StrSql, objRs

Cant_Reg = objRs.RecordCount
Flog.writeline Espacios(Tabulador * 3) & "  ==> Cantidad de Registraciones " & Cant_Reg

StrSql = "SELECT * FROM " & TTempWFDia
OpenRecordset StrSql, objRs

cant_entsal = objRs.RecordCount
Flog.writeline Espacios(Tabulador * 3) & "  ==> Cantidad de entradas/salida " & cant_entsal

If Cant_Reg < cant_entsal Then
    Flog.writeline Espacios(Tabulador * 3) & "  Cantidad de reg <= a de entradas/salida. Fin"
    Exit Sub
End If

'StrSql = "select * from " & TTempWFTurno & " where (anornro <> 5 AND anornro <> 6) or (anornro is null)"
StrSql = "SELECT * FROM " & TTempWFTurno
OpenRecordset StrSql, objRs

' Call CreateTempWFauspa
Call CreateTempTable(TTempWFAuspa)
Do While Not objRs.EOF
        
        StrSql = "INSERT INTO " & TTempWFAuspa & " (fecha, hora, par) VALUES (" & ConvFecha(objRs!Fecha) & ", '" & objRs!Hora & "', " & j & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        i = i + 1
        If i Mod 2 = 0 Then
            j = j + 1
        End If
    objRs.MoveNext
Loop


'FGZ - 06/09/2011 ------------ se reemplazó la manera de operar -------
''Esto es lo nuevo
'StrSql = "SELECT * from " & TTempWFAuspa
'OpenRecordset StrSql, objRs, adLockOptimistic
'If Not objRs.EOF Then
'    objRs.MoveFirst
'    objRs.Delete
'End If
'If Not objRs.EOF Then
'    objRs.MoveLast
'    objRs.Delete
'End If


'Borro el 1er registro
StrSql = "SELECT * from " & TTempWFAuspa
OpenRecordset StrSql, objRs
If Not objRs.EOF Then
    objRs.MoveFirst
    StrSql = "DELETE from " & TTempWFAuspa
    StrSql = StrSql & " WHERE fecha = " & ConvFecha(objRs!Fecha)
    StrSql = StrSql & " AND hora = '" & objRs!Hora & "'"
    StrSql = StrSql & " AND par = " & objRs!par
    objConn.Execute StrSql, , adExecuteNoRecords
End If
'Borro el ultimo registro
StrSql = "SELECT * from " & TTempWFAuspa
OpenRecordset StrSql, objRs
If Not objRs.EOF Then
    objRs.MoveLast
    
    StrSql = "DELETE from " & TTempWFAuspa
    StrSql = StrSql & " WHERE fecha = " & ConvFecha(objRs!Fecha)
    StrSql = StrSql & " AND hora = '" & objRs!Hora & "'"
    StrSql = StrSql & " AND par = " & objRs!par
    objConn.Execute StrSql, , adExecuteNoRecords
End If

'FGZ - 06/09/2011 ------------ se reemplazó la manera de operar -------


'Fin de lo nuevo
i = 0

StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 19" & _
" AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
rs.Open StrSql, objConn

If Not rs.EOF Then
    thora = rs!thnro
Else
    'Entrada en la traza
    If depurar Then
        GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora Ausencia parcial para el Turno ", Str(Nro_Turno)
        Flog.writeline Espacios(Tabulador * 3) & "No esta configurado el Tipo de Hora Ausencia parcial para el Turno " & Str(Nro_Turno)
    End If
    GoTo CierroTodo
End If

For i = 1 To j

    StrSql = "SELECT * FROM " & TTempWFAuspa & " WHERE par = " & i
    'rs.Open StrSql, objConn, adOpenKeyset, adLockOptimistic
    OpenRecordset StrSql, objRs

    Do While Not objRs.EOF
        If Hora1(0) = "" Then
            Hora1(0) = objRs!Hora
            fecha1(0) = objRs!Fecha
        Else
            Hora2(0) = objRs!Hora
            Fecha2(0) = objRs!Fecha
            generar = True
        End If
        
        'FGZ - 29/09/2006 - le agregué el and
        If generar And Tiene_Justif Then
            'FGZ -17/08/2006 --------------------
            
            LS_AP = 0
            Indice_I = 0
            Do While Indice_I <= LS_AP
                Indice_J = 1
                Esta_Justificada = False
                Do While Not EsNulo(Arr_Justificaciones(Indice_J).Ent) And Not Esta_Justificada And Indice_J < 10
                    If Arr_Justificaciones(Indice_J).Ent = Hora1(Indice_I) And Arr_Justificaciones(Indice_J).Sal = Hora2(Indice_I) Then
                        Hora2(Indice_I) = Hora1(Indice_I)
                        Esta_Justificada = True
                    Else
                        'Puede que este parcialmente justificada
                        If Arr_Justificaciones(Indice_J).Ent > Hora1(Indice_I) And Arr_Justificaciones(Indice_J).Sal > Hora2(Indice_I) And Arr_Justificaciones(Indice_J).Ent < Hora2(Indice_I) Then
                            '-----(--------)-----
                            '---[------]---------
                            'LA fecha hasta de la AP es hasta donde empieza la justif
                            Hora2(Indice_I) = Arr_Justificaciones(Indice_J).Ent
                            Indice_I = Indice_I + 1
                        Else
                            If Arr_Justificaciones(Indice_J).Ent <= Hora1(Indice_I) And Arr_Justificaciones(Indice_J).Sal < Hora2(Indice_I) And Arr_Justificaciones(Indice_J).Sal > Hora1(Indice_I) Then
                                '---(------)------
                                '-----[-------]---
                                'LA fecha desde de la AP es hasta donde termina la justif
                                Hora1(Indice_I) = Arr_Justificaciones(Indice_J).Sal
                                Indice_I = Indice_I + 1
                            Else
                                If Arr_Justificaciones(Indice_J).Ent > Hora1(Indice_I) And Arr_Justificaciones(Indice_J).Sal < Hora2(Indice_I) Then
                                    '-----(----)-----
                                    '---[--------]---
                                    'creo la otra AP
                                    fecha1(LS_AP + 1) = fecha1(Indice_I)
                                    Hora1(LS_AP + 1) = Arr_Justificaciones(Indice_J).Sal
                                    fecha1(LS_AP + 1) = Fecha2(Indice_I)
                                    Hora2(LS_AP + 1) = Hora2(Indice_I)
                                    
                                    LS_AP = LS_AP + 1
                                    ' +
                                    
                                    'LA fecha hasta de la AP es hasta donde empieza la justif y otra desde que termina la justa hasta el hasta de la AP
                                    Hora2(Indice_I) = Arr_Justificaciones(Indice_J).Sal
                                    
                                    'Debe empezar a revisar nuevamente
                                    Indice_I = 0
                                    Esta_Justificada = True
                                Else
                                    'La justificacion no corta la AP
                                    Indice_I = Indice_I + 1
                                End If
                            End If
                        End If
                    End If
                    Indice_J = Indice_J + 1
                Loop
                'FGZ - 29/0/2006 - Si no hay justificaciones entonces queda en un loop infinito
                Indice_I = Indice_I + 1
            Loop
            
            
            
            If Esta_Justificada Then
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> No Inserto: Ausencia ya esta justificada"
                End If
            Else
                'Pueden quedar + 1 una AP
                For Indice_J = 0 To LS_AP
                    Call objFechasHoras.RestaHs(fecha1(Indice_J), Hora1(Indice_J), Fecha2(Indice_J), Hora2(Indice_J), Tdias, Thoras, Tmin)
                    canthoras = Thoras + (Tmin / 60)
        
                    If canthoras <> 0 Then
                        'FGZ - Se me ocurre revisar si ya fué insertada .... si es así ==> no la genero
                        StrSql = "SELECT hordesde, horhasta, horhoradesde, horhorahasta FROM gti_horcumplido "
                        StrSql = StrSql & " WHERE ternro = " & NroTer
                        StrSql = StrSql & " AND thnro = " & thora
                        StrSql = StrSql & " AND hordesde = " & ConvFecha(fecha1(Indice_J))
                        StrSql = StrSql & " AND horhasta = " & ConvFecha(Fecha2(Indice_J))
                        StrSql = StrSql & " AND horhoradesde = " & Hora1(Indice_J)
                        StrSql = StrSql & " AND horhorahasta = " & Hora2(Indice_J)
                        OpenRecordset StrSql, rs_HC
                        If rs_HC.EOF Then
                            
                            TotHorHHMM = CHoras(canthoras, 60)
                            
                            StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                            "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta" & _
                            ",horestado,normnro,normnro2) VALUES (" & TotHorHHMM & "," & canthoras & "," & _
                            ConvFecha(fecha1(Indice_J)) & "," & ConvFecha(Fecha2(Indice_J)) & "," & "0,-1," & _
                            NroTer & "," & thora & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
                            ConvFecha(Fecha) & "," & ConvFecha(Fecha) & ",'" & Hora1(Indice_J) & "','" & Hora2(Indice_J) & "',' ',7,7)"
                            objConn.Execute StrSql, , adExecuteNoRecords
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & thora & "- Cantidad: " & canthoras & " hs."
                            End If
                        Else
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 3) & "  ==> NO Insertó AP >> ya fué generada anteriormente."
                            End If
                        End If
                    End If
                Next Indice_J
            End If
            
            'FGZ - 17/08/2006
            For Indice_J = 0 To LS_AP
                fecha1(Indice_J) = objRs!Fecha
                Hora1(Indice_J) = ""
                
                Hora2(Indice_J) = ""
                Fecha2(Indice_J) = objRs!Fecha
            Next Indice_J
            generar = False
        End If
        objRs.MoveNext
    Loop
Next

CierroTodo:
If rs.State = adStateOpen Then rs.Close
Set rs = Nothing

If rs_HC.State = adStateOpen Then rs_HC.Close
Set rs_HC = Nothing

If objRs.State = adStateOpen Then objRs.Close
Set objRs = Nothing

' ---------------- CDM - Se cambia por la funcion BorrarTempTable ---------------------
'StrSql = "DROP TABLE " & TTempWFAuspa
'objConn.Execute StrSql, adExecuteNoRecords
BorrarTempTable (TTempWFAuspa)
' ---------------- CDM - Se cambia por la funcion BorrarTempTable ---------------------

End Sub
Sub Politica50(Fecha As Date, NroTer As Long, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Genera una ventana de 18, 20, 22 o 24 hs. a partir de la primera registracion del dia.
' Autor: ?
' Ultima modificacion: FGZ - 06/10/2003
' Ultima modificacion: FGZ - 11/01/2006 - Permito ventana de mas de 24 hs
' Ultima modificacion: FGZ - 03/04/2006 - Nueva version 5. Tope a las 24hs del dia de la primer registracion.Halliburton
' Ultima modificacion: FGZ - 21/03/2007 - Nueva version 6. Especial para Turnos Nocturnos. Desde las 0000 del dia hasta -0400 + tamVent horas
' Ultima modificacion: FGZ - 25/04/2007 - version 4. faltaba asignar fecha y hora desde
' Ultima modificacion: FGZ - 03/06/2008 - version 7.
' --------------------------------------------------------------
Dim rs As New Recordset

Dim Hora As String
Dim fecres As Date
Dim TamVent As String
Dim horres As String
Dim ok As Boolean
Dim Opcion As Integer
Dim Aux_Fecha As Date
Dim Aux_Hora As String
Dim Hora_Inicial As String


Call SetearParametrosPolitica(Detalle, ok)
If Not ok Then
    Exit Sub
End If
TamVent = st_TamañoVentana
Opcion = st_Opcion

Select Case Opcion
Case 1: 'Es la estandar. desde la primer registracion del dia hasta  hora de la reg + TamVent
    
    StrSql = "SELECT regfecha,reghora FROM gti_registracion "
    StrSql = StrSql & " WHERE ((regestado is null) OR (regestado = 'I'))"
    StrSql = StrSql & " AND ternro= " & NroTer
    StrSql = StrSql & " AND gti_registracion.regfecha = " & ConvFecha(Fecha)
    'StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC "
    OpenRecordset StrSql, rs
    'Si no hay ni una registracion salgo.
    If Not rs.EOF Then
        Hora = rs!reghora
        fecres = rs!regfecha
        horres = Hora
        Hora_Inicial = Hora
    
        fecha_desde = fecres
        hora_desde = horres
    
        'Sumo a la hora el tamano de la ventana
        Call objFechasHoras.SumoHoras(rs!regfecha, Hora, TamVent, fecres, horres)
        If objFechasHoras.ValidarHora(horres) Then
            fecha_hasta = fecres
            hora_hasta = horres
        End If
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Version 1: no hay registraciones. SQL: " & StrSql
        End If
    End If
Case 2:
    Call Politica50v2(Fecha, NroTer)
Case 3:
    Call Politica50v3(Fecha, NroTer, TamVent)
Case 4: 'Desde las 0000 del dia hasta + tamVent horas

    'Busco la primer registracion no procesada
    Call objFechasHoras.SumoHoras(Fecha, "0000", TamVent, Aux_Fecha, Aux_Hora)
    If Not objFechasHoras.ValidarHora(Aux_Hora) Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Hora resultante incorrecta"
        End If
        
        If rs.State = adStateOpen Then rs.Close
        Set rs = Nothing
        Exit Sub
    End If
    'FGZ - 25/04/2007 - faltaba asignar fecha y hora desde
    fecha_desde = Fecha
    hora_desde = "0000"


    StrSql = "SELECT regfecha,reghora FROM gti_registracion "
    StrSql = StrSql & " WHERE ((regestado is null) OR (regestado = 'I'))"
    StrSql = StrSql & " AND ternro= " & NroTer
    StrSql = StrSql & " AND (gti_registracion.regfecha = " & ConvFecha(Fecha) & " OR gti_registracion.regfecha = " & ConvFecha(Aux_Fecha) & ") "
    'StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC "
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs
    'Si no hay ni una registracion salgo.
    If Not rs.EOF Then
        Hora_Inicial = "0000"
        Hora = "0000"
        fecres = Fecha
        horres = Hora
        
        fecha_hasta = Aux_Fecha
        hora_hasta = Aux_Hora
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Version 4: no hay registraciones. SQL: " & StrSql
        End If
    End If
Case 5: 'Es la estandar + control de tope del dia, es decir, si se pasa de dia topea a las 2400 hs del dia
    StrSql = "SELECT regfecha,reghora FROM gti_registracion "
    StrSql = StrSql & " WHERE ((regestado is null) OR (regestado = 'I'))"
    StrSql = StrSql & " AND ternro= " & NroTer
    StrSql = StrSql & " AND gti_registracion.regfecha = " & ConvFecha(Fecha)
    'StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC "
    OpenRecordset StrSql, rs
    'Si no hay ni una registracion salgo.
    If Not rs.EOF Then
        Hora = rs!reghora
        fecres = rs!regfecha
        horres = Hora
        Hora_Inicial = Hora
    
        fecha_desde = fecres
        hora_desde = horres
    
        'Sumo a la hora el tamano de la ventana
        Call objFechasHoras.SumoHoras(rs!regfecha, Hora, TamVent, fecres, horres)
        If objFechasHoras.ValidarHora(horres) Then
            fecha_hasta = fecres
            hora_hasta = horres
        End If
        
        'Topeo
        If fecha_hasta > rs!regfecha Then
            If depurar Then
                Flog.writeline "Aplico tope de dia"
            End If
            fecha_hasta = rs!regfecha
            hora_hasta = "2400"
        End If
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Version 5: no hay registraciones. SQL: " & StrSql
        End If
    End If
Case 6: 'Especial para Turnos Nocturnos. Desde las 0000 del dia hasta -0400 + tamVent horas
    
    'Resto 4 hs a las 0000 del dia
    Call objFechasHoras.RestaXHoras(Fecha, "0000", "0400", fecres, horres)
    If objFechasHoras.ValidarHora(horres) Then
        fecha_desde = fecres
        hora_desde = horres
    End If

    'Busco la primer registracion no procesada
    Call objFechasHoras.SumoHoras(fecha_desde, hora_desde, TamVent, Aux_Fecha, Aux_Hora)
    If Not objFechasHoras.ValidarHora(Aux_Hora) Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Hora resultante incorrecta"
        End If
        
        If rs.State = adStateOpen Then rs.Close
        Set rs = Nothing
        Exit Sub
    End If

    StrSql = "SELECT regfecha,reghora FROM gti_registracion "
    StrSql = StrSql & " WHERE ((regestado is null) OR (regestado = 'I'))"
    StrSql = StrSql & " AND ternro= " & NroTer
    StrSql = StrSql & " AND (gti_registracion.regfecha = " & ConvFecha(Fecha) & " OR gti_registracion.regfecha = " & ConvFecha(Aux_Fecha) & ") "
    'StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC "
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs
    'Si no hay ni una registracion salgo.
    If Not rs.EOF Then
        'Hora_Inicial = "0000"
        'Hora = "0000"
        'fecres = Fecha
        'horres = Hora
        
        fecha_hasta = Aux_Fecha
        hora_hasta = Aux_Hora
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Version 6: no hay registraciones. SQL: " & StrSql
        End If
    End If
Case 7: 'Es igual a la estandar. pero si la 1er reg es un domingo despues de las 20 ==> no se toma ninguna registracion
    StrSql = "SELECT regfecha,reghora FROM gti_registracion "
    StrSql = StrSql & " WHERE ((regestado is null) OR (regestado = 'I'))"
    StrSql = StrSql & " AND ternro= " & NroTer
    StrSql = StrSql & " AND gti_registracion.regfecha = " & ConvFecha(Fecha)
    'StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC "
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        If Weekday(rs!regfecha) = 1 And rs!reghora > "2000" Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Version 7: la 1er reg supera las 20:00 hs. SQL: " & StrSql
            End If
        Else
            Hora = rs!reghora
            fecres = rs!regfecha
            horres = Hora
            Hora_Inicial = Hora
        
            fecha_desde = fecres
            hora_desde = horres
        
            'Sumo a la hora el tamano de la ventana
            Call objFechasHoras.SumoHoras(rs!regfecha, Hora, TamVent, fecres, horres)
            If objFechasHoras.ValidarHora(horres) Then
                fecha_hasta = fecres
                hora_hasta = horres
            End If
        End If
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Version 7: no hay registraciones. SQL: " & StrSql
        End If
    End If
Case 8: 'Especial para Turnos Nocturnos. Desde las 0000 del dia hasta -0600 + tamVent horas
    'Resto 6 hs a las 0000 del dia
    Call objFechasHoras.RestaXHoras(Fecha, "0000", "0600", fecres, horres)
    If objFechasHoras.ValidarHora(horres) Then
        fecha_desde = fecres
        hora_desde = horres
    End If

    'Busco la primer registracion no procesada
    Call objFechasHoras.SumoHoras(fecha_desde, hora_desde, TamVent, Aux_Fecha, Aux_Hora)
    If Not objFechasHoras.ValidarHora(Aux_Hora) Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Hora resultante incorrecta"
        End If
        
        If rs.State = adStateOpen Then rs.Close
        Set rs = Nothing
        Exit Sub
    End If

    StrSql = "SELECT regfecha,reghora FROM gti_registracion "
    StrSql = StrSql & " WHERE ((regestado is null) OR (regestado = 'I'))"
    StrSql = StrSql & " AND ternro= " & NroTer
    StrSql = StrSql & " AND (gti_registracion.regfecha = " & ConvFecha(Fecha) & " OR gti_registracion.regfecha = " & ConvFecha(Aux_Fecha) & ") "
    'StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC "
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs
    'Si no hay ni una registracion salgo.
    If Not rs.EOF Then
        'Hora_Inicial = "0000"
        'Hora = "0000"
        'fecres = Fecha
        'horres = Hora
        
        fecha_hasta = Aux_Fecha
        hora_hasta = Aux_Hora
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Version 8: no hay registraciones. SQL: " & StrSql
        End If
    End If
Case 9: 'Especial para Turnos Nocturnos. Desde las 0000 del dia hasta -0700 + tamVent horas
    
    'Resto 7 hs a las 0000 del dia
    Call objFechasHoras.RestaXHoras(Fecha, "0000", "0700", fecres, horres)
    If objFechasHoras.ValidarHora(horres) Then
        fecha_desde = fecres
        hora_desde = horres
    End If

    'Busco la primer registracion no procesada
    Call objFechasHoras.SumoHoras(fecha_desde, hora_desde, TamVent, Aux_Fecha, Aux_Hora)
    If Not objFechasHoras.ValidarHora(Aux_Hora) Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Hora resultante incorrecta"
        End If
        
        If rs.State = adStateOpen Then rs.Close
        Set rs = Nothing
        Exit Sub
    End If

    StrSql = "SELECT regfecha,reghora FROM gti_registracion "
    StrSql = StrSql & " WHERE ((regestado is null) OR (regestado = 'I'))"
    StrSql = StrSql & " AND ternro= " & NroTer
    StrSql = StrSql & " AND (gti_registracion.regfecha = " & ConvFecha(Fecha) & " OR gti_registracion.regfecha = " & ConvFecha(Aux_Fecha) & ") "
    'StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC "
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs
    'Si no hay ni una registracion salgo.
    If Not rs.EOF Then
        'Hora_Inicial = "0000"
        'Hora = "0000"
        'fecres = Fecha
        'horres = Hora
        
        fecha_hasta = Aux_Fecha
        hora_hasta = Aux_Hora
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Version 9: no hay registraciones. SQL: " & StrSql
        End If
    End If

End Select

'FGZ - 15/12/2006 - Control sobre al armado de la ventana
Call Politica(51)

'Cierro todo
If rs.State = adStateOpen Then rs.Close
Set rs = Nothing
End Sub

Sub Politica51(Fecha As Date, NroTer As Long, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Controla si en la ventana ya armada por la pol 50 hay 1 sola reg de entrada
' Autor: FGZ
' Ultima modificacion: FGZ - 21/12/2006 le faltaba la validacion de la hora resultante cuando la corta
' --------------------------------------------------------------
Dim rs As New Recordset

Dim fecres As Date
Dim TamVent As String
Dim horres As String
Dim ok As Boolean
Dim Opcion As Integer

Dim F_Desde As Date
Dim H_Desde As String
Dim F_Hasta As Date
Dim H_Hasta As String
Dim Hay_Salida As Boolean
Dim Reg_T As TipoTurno
Dim Justif As TJustif
Dim Turno As TTurno
Dim Emp As Templeado
Dim Reg_Dia As TDia
Dim EsFeriado_Sig As Boolean
Dim Sigue As Boolean
Dim Siguiente_Dia As THT
Dim Corto_Ventana As Boolean

Call SetearParametrosPolitica(Detalle, ok)
If Not ok Then
    Exit Sub
End If
TamVent = st_TamañoVentana
Opcion = st_Opcion

    Corto_Ventana = False
    'Busco si el siguiente dia es laboral
    EsFeriado_Sig = EsFeriado_Nuevo(p_fecha + 1, Empleado.Ternro, depurar)
    If Not EsFeriado_Sig Then
        Call Buscar_Turno_Nuevo(p_fecha + 1, Empleado.Ternro, depurar, Reg_T, Turno, Justif, Emp)
        If Reg_T.tiene_turno Then
            Call Buscar_Dia_Nuevo(p_fecha + 1, Fecha_Inicio, Reg_T.Nro_Turno, Empleado.Ternro, Reg_T.P_Asignacion, depurar, Reg_Dia)
            If Not Reg_Dia.Dia_Libre Then
                Sigue = True
                'Calculo en la variable Siguiente_Dia el Horario Teorico del siguiente dia
                Call Calcular_HT(p_fecha + 1, Reg_Dia.Nro_Dia, Siguiente_Dia)
            Else
                Sigue = False
            End If
        Else
            Sigue = False
        End If
    Else
        Sigue = False
    End If
    
    If Sigue Then
        StrSql = "SELECT * FROM gti_registracion "
        StrSql = StrSql & " WHERE ((regestado is null) OR (regestado = 'I'))"
        StrSql = StrSql & " AND ternro= " & NroTer
        StrSql = StrSql & " AND gti_registracion.regfecha = " & ConvFecha(Fecha)
        'StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
        'FGZ - 19/05/2010 ------------ Control FT -------------
        StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
        'FGZ - 19/05/2010 ------------ Control FT -------------
        StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC "
        OpenRecordset StrSql, rs
        If rs.RecordCount = 1 Then
            If rs!regentsal = "E" Then
                F_Desde = rs!regfecha
                H_Desde = rs!reghora
                Call objFechasHoras.SumoHoras(F_Desde, H_Desde, TamVent, fecres, horres)
                If objFechasHoras.ValidarHora(horres) Then
                    F_Hasta = fecres
                    H_Hasta = horres
                End If
                
                'Busco una salida dentro de la ventana
                If F_Hasta > F_Desde Then
                    StrSql = "SELECT * FROM gti_registracion "
                    StrSql = StrSql & " WHERE ((regestado is null) OR (regestado = 'I'))"
                    StrSql = StrSql & " AND ternro= " & NroTer
                    StrSql = StrSql & " AND gti_registracion.regentsal = 'S'"
                    StrSql = StrSql & " AND gti_registracion.regfecha >= " & ConvFecha(F_Desde)
                    StrSql = StrSql & " AND gti_registracion.reghora >= '" & H_Desde & "'"
                    StrSql = StrSql & " AND gti_registracion.regfecha <= " & ConvFecha(F_Hasta)
                    StrSql = StrSql & " AND gti_registracion.reghora <= '" & H_Hasta & "'"
                    'StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
                    'FGZ - 19/05/2010 ------------ Control FT -------------
                    StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
                    'FGZ - 19/05/2010 ------------ Control FT -------------
                    StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC "
                    OpenRecordset StrSql, rs
                    If Not rs.EOF Then
                        Hay_Salida = True
                    Else
                        Hay_Salida = False
                    End If
                Else
                    'Ya se que no va a haber pues ya busqué todas las registraciones del dia al principio y solo encontré una entrada
                    Hay_Salida = False
                End If
                
                If Not Hay_Salida Then
                    If Siguiente_Dia.FE1 > F_Desde And Siguiente_Dia.FE1 = F_Hasta And Siguiente_Dia.E1 <= H_Hasta Then
                        'La entrada teorica del siguiente dia esta dentro del tamaño de ventana
                        Corto_Ventana = True
                    End If
                End If
            End If
        End If
    End If
        
    If Corto_Ventana Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "Acorto Ventana a justo antes de la registracion " & F_Desde & " " & H_Desde
        End If
        
        'Fecha y hora desde quedan como estan pero fecha y hora hasta es justo antes de la entrada encontrada en la ventana inicial
        
        'lo que se quiere hacer es dejar esta registracion para el analisis del dia siguientes
        Call objFechasHoras.RestaXHoras(F_Desde, H_Desde, "0001", fecres, horres)
        If objFechasHoras.ValidarHora(horres) Then
            fecha_hasta = fecres
            hora_hasta = horres
        End If
    End If

'Cierro todo
If rs.State = adStateOpen Then rs.Close
Set rs = Nothing
End Sub



Sub Politica50v3(ByVal Fecha As Date, ByVal NroTer As Long, ByVal Ventana As String)
' --------------------------------------------------------------
' Descripcion:
' Autor: 'FGZ
' Ultima modificacion: 06/02/2004
' --------------------------------------------------------------
    fecha_desde = Fecha
    hora_desde = "0000"
    
    fecha_hasta = Fecha
    hora_hasta = Ventana
End Sub

Sub Politica50v2(Fecha As Date, NroTer As Long)

    fecha_desde = Fecha
    hora_desde = "0000"
    fecha_hasta = Fecha
    hora_hasta = "2359"

End Sub




Sub Politica20(fecdesde As Date, fechasta As Date, deb As Boolean, NroTer As Long, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Depura registraciones repetidas en un intervalo de 5, 10 minutos.
' Autor: ?
' Ultima modificacion: 28/07/2003
' Ultima modificacion: FGZ - 10/10/2006
'                       Reemplacé empleg por ternro en ...
'                       GeneraTraza rs!empleg, fecdesde, "Nº20 - Se Eliminó la Registraci¢n Nº", Str(rs!Regnro)
'                      04/04/2008 - Diego Rosso - Se agrego el parametro version a la politica.
'                                   Se creo la version 2--> Se queda con la registracion de mayor hora del intervalo y borra las restantes.
'                                   Se creo la version 3--> igual a la 2 pero con la diferencia que va recalculando el intervalo(tolerancia) cada vez que elimina una registracion.
'                                              Version 1--> Se queda con la primera registracion que encuentra en el intervalo y borra las restantes.
' --------------------------------------------------------------

Dim rs As New Recordset

Dim DifFecha As Integer
Dim intervalo As Integer
Dim min_ant As Integer
Dim MinResta As Integer
Dim Minutos As Integer
Dim fecha_ant As Date
Dim Opcion As Integer
Dim RegAnt
Dim Entrada_Ant As Boolean
Dim entrada As Boolean


min_ant = 0
Minutos = 0

Call SetearParametrosPolitica(Detalle, ok)
If ok Then
    intervalo = st_Tolerancia
    Opcion = st_Opcion
    If IsNull(Opcion) Or Opcion = 0 Then
        Opcion = 1
    End If
    
Else
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "no se encontro el detalle Pol 20"
    End If
    Exit Sub
End If



Select Case Opcion
Case 1: 'Version 1
    If depurar Then
        Flog.writeline Espacios(Tabulador * 5) & "Version 1. "
    End If

    
    'Busco la primer registración dentro del intervalo especificado
    StrSql = "SELECT regfecha,reghora,regnro FROM GTI_REGISTRACION WHERE ternro= " & NroTer
    StrSql = StrSql & " AND regfecha >= " & ConvFecha(fecdesde) & " and regfecha <= " & ConvFecha(fechasta)
    StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
    rs.Open StrSql, objConn, adOpenKeyset, adLockOptimistic
    ' Si no hay registraciones me voy
    If rs.EOF Then
        rs.Close
        Set rs = Nothing
        Exit Sub
    End If
    rs.MoveFirst
    'Paso a minutos la hora de la primera registracion (en min_ant)
    Call PasarMin(rs!reghora, 0, min_ant)
    fecha_ant = rs!regfecha
    
    rs.MoveNext
    'obtengo la siguiente registracion del empleado dentro del intervalo de interes.
    Do While Not rs.EOF
        DifFecha = DateDiff("d", rs!regfecha, fecha_ant)
        'Paso a minutos la hora de la siguiente registracion
        Call PasarMin(rs!reghora, DifFecha, Minutos)
        MinResta = Minutos - min_ant
        'Si la diferencia entre registraciones es mínima
        If MinResta < intervalo Then
            'Entonces sobra una registracion, que borro.
            'rs.Delete
            StrSql = "DELETE FROM gti_registracion WHERE regnro = " & rs!Regnro
            objConn.Execute StrSql, , adExecuteNoRecords
            
            If depurar Then
                'FGZ - 10/10/2006 - Reemplacé empleg por ternro
                'GeneraTraza rs!empleg, fecdesde, "Nº20 - Se Eliminó la Registraci¢n Nº", Str(rs!Regnro)
                GeneraTraza Empleado.Ternro, fecdesde, "Nº20 - Se Eliminó la Registraci¢n Nº", Str(rs!Regnro)
                Flog.writeline Espacios(Tabulador * 2) & "Se Eliminó la Registraci¢n Nº " & Str(rs!Regnro)
            End If
        Else
            min_ant = Minutos
            fecha_ant = rs!regfecha
        End If
        'Paso a la siguiente registracion
        rs.MoveNext
    Loop
    ' Cierro todo
    rs.Close
    Set rs = Nothing

Case 2: 'Version 2
    If depurar Then
        Flog.writeline Espacios(Tabulador * 5) & "Version 2. "
    End If
    
    'Busco la primer registración dentro del intervalo especificado
    StrSql = "SELECT regfecha,reghora,regnro FROM GTI_REGISTRACION WHERE ternro= " & NroTer
    StrSql = StrSql & " AND regfecha >= " & ConvFecha(fecdesde) & " and regfecha <= " & ConvFecha(fechasta)
    StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
    rs.Open StrSql, objConn, adOpenKeyset, adLockOptimistic
    ' Si no hay registraciones me voy
    If rs.EOF Then
        rs.Close
        Set rs = Nothing
        Exit Sub
    End If
    rs.MoveFirst
    'Paso a minutos la hora de la primera registracion (en min_ant)
    Call PasarMin(rs!reghora, 0, min_ant)
    fecha_ant = rs!regfecha
    
    'Guardo el numero de la registracion
    RegAnt = rs!Regnro
    
    rs.MoveNext
    'obtengo la siguiente registracion del empleado dentro del intervalo de interes.
    Do While Not rs.EOF
        DifFecha = DateDiff("d", rs!regfecha, fecha_ant)
        'Paso a minutos la hora de la siguiente registracion
        Call PasarMin(rs!reghora, DifFecha, Minutos)
        MinResta = Minutos - min_ant
        'Si la diferencia entre registraciones es mínima
        If MinResta <= intervalo Then
            'Entonces sobra una registracion, que borro.
            'rs.Delete
            StrSql = "DELETE FROM gti_registracion WHERE regnro = " & RegAnt
            objConn.Execute StrSql, , adExecuteNoRecords
            
            If depurar Then
                GeneraTraza Empleado.Ternro, fecdesde, "Nº20 - Se Eliminó la Registraci¢n Nº", Str(RegAnt)
                Flog.writeline Espacios(Tabulador * 2) & "Se Eliminó la Registraci¢n Nº " & Str(RegAnt)
            End If
            RegAnt = rs!Regnro
        Else
            min_ant = Minutos
            fecha_ant = rs!regfecha
            RegAnt = rs!Regnro
        End If
        'Paso a la siguiente registracion
        rs.MoveNext
    Loop
    ' Cierro todo
    rs.Close
    Set rs = Nothing

Case 3: 'Version 3
    If depurar Then
        Flog.writeline Espacios(Tabulador * 5) & "Version 3. "
    End If
    
    'Busco la primer registración dentro del intervalo especificado
    StrSql = "SELECT regfecha,reghora,regnro FROM GTI_REGISTRACION WHERE ternro= " & NroTer
    StrSql = StrSql & " AND regfecha >= " & ConvFecha(fecdesde) & " and regfecha <= " & ConvFecha(fechasta)
    StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
    rs.Open StrSql, objConn, adOpenKeyset, adLockOptimistic
    ' Si no hay registraciones me voy
    If rs.EOF Then
        rs.Close
        Set rs = Nothing
        Exit Sub
    End If
    rs.MoveFirst
    'Paso a minutos la hora de la primera registracion (en min_ant)
    Call PasarMin(rs!reghora, 0, min_ant)
    fecha_ant = rs!regfecha
    
    'Guardo el numero de la registracion
    RegAnt = rs!Regnro
    
    rs.MoveNext
    'obtengo la siguiente registracion del empleado dentro del intervalo de interes.
    Do While Not rs.EOF
        DifFecha = DateDiff("d", rs!regfecha, fecha_ant)
        'Paso a minutos la hora de la siguiente registracion
        Call PasarMin(rs!reghora, DifFecha, Minutos)
        MinResta = Minutos - min_ant
        'Si la diferencia entre registraciones es mínima
        If MinResta <= intervalo Then
            'Entonces sobra una registracion, que borro.
            'rs.Delete
            StrSql = "DELETE FROM gti_registracion WHERE regnro = " & RegAnt
            objConn.Execute StrSql, , adExecuteNoRecords
            
            If depurar Then
                GeneraTraza Empleado.Ternro, fecdesde, "Nº20 - Se Eliminó la Registraci¢n Nº", Str(RegAnt)
                Flog.writeline Espacios(Tabulador * 2) & "Se Eliminó la Registraci¢n Nº " & Str(RegAnt)
            End If
            RegAnt = rs!Regnro
            'RECALCULO------------
            Call PasarMin(rs!reghora, 0, min_ant)
            fecha_ant = rs!regfecha
        Else
            min_ant = Minutos
            fecha_ant = rs!regfecha
            RegAnt = rs!Regnro
        End If
        'Paso a la siguiente registracion
        rs.MoveNext
    Loop
    ' Cierro todo
    rs.Close
    Set rs = Nothing

Case 4: 'Version 4. Es similar a la v1 solo que tiene en cuenta el tipo de registracion y la marca
    If depurar Then
        Flog.writeline Espacios(Tabulador * 5) & "Version 4. Tiene en cuenta el tipo de registracion."
    End If

    
    'Busco la primer registración dentro del intervalo especificado
    StrSql = "SELECT regfecha,reghora,regnro, regentsal FROM GTI_REGISTRACION WHERE ternro= " & NroTer
    StrSql = StrSql & " AND regfecha >= " & ConvFecha(fecdesde) & " and regfecha <= " & ConvFecha(fechasta)
    StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
    rs.Open StrSql, objConn, adOpenKeyset, adLockOptimistic
    ' Si no hay registraciones me voy
    If rs.EOF Then
        rs.Close
        Set rs = Nothing
        Exit Sub
    End If
    rs.MoveFirst
    'Paso a minutos la hora de la primera registracion (en min_ant)
    Call PasarMin(rs!reghora, 0, min_ant)
    fecha_ant = rs!regfecha
    If Not EsNulo(rs!regentsal) Then
        If UCase(rs!regentsal) = "E" Then
            Entrada_Ant = True
        Else
            Entrada_Ant = False
        End If
    Else
        Entrada_Ant = True
    End If
    
    rs.MoveNext
    'obtengo la siguiente registracion del empleado dentro del intervalo de interes.
    Do While Not rs.EOF
        If Not EsNulo(rs!regentsal) Then
            If UCase(rs!regentsal) = "E" Then
                entrada = True
            Else
                entrada = False
            End If
        Else
            entrada = True
        End If
            
        DifFecha = DateDiff("d", rs!regfecha, fecha_ant)
        'Paso a minutos la hora de la siguiente registracion
        Call PasarMin(rs!reghora, DifFecha, Minutos)
        MinResta = Minutos - min_ant
        'Si la diferencia entre registraciones es mínima
        If MinResta < intervalo And (Entrada_Ant = entrada) Then
            'Entonces sobra una registracion, que borro.
            'rs.Delete
            StrSql = "DELETE FROM gti_registracion WHERE regnro = " & rs!Regnro
            objConn.Execute StrSql, , adExecuteNoRecords
            
            If depurar Then
                'FGZ - 10/10/2006 - Reemplacé empleg por ternro
                'GeneraTraza rs!empleg, fecdesde, "Nº20 - Se Eliminó la Registraci¢n Nº", Str(rs!Regnro)
                GeneraTraza Empleado.Ternro, fecdesde, "Nº20 - Se Eliminó la Registraci¢n Nº", Str(rs!Regnro)
                Flog.writeline Espacios(Tabulador * 2) & "Se Eliminó la Registraci¢n Nº " & Str(rs!Regnro)
            End If
        Else
            min_ant = Minutos
            fecha_ant = rs!regfecha
            'FGZ - 20/12/2010 ---------
            Entrada_Ant = entrada
            'FGZ - 20/12/2010 ---------
        End If
        
        'Paso a la siguiente registracion
        rs.MoveNext
    Loop
    ' Cierro todo
    rs.Close
    Set rs = Nothing
Case Else
    If depurar Then
        Flog.writeline Espacios(Tabulador * 6) & "Version " & Opcion & " desconocida."
    End If
End Select

End Sub



Sub Politica21(fecdesde As Date, fechasta As Date, deb As Boolean, NroTer As Long, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Parte las registraciones que pasan de dia.
' Autor: FGZ - 18/03/2009
' Ultima modificacion: FGZ - 04/06/2014 - Control sobre Justificaciones parciales fijas
' --------------------------------------------------------------
Dim rs As New Recordset
Dim rs_Auto As New Recordset
Dim Opcion As Integer
Dim Ultima_Es_Entrada As Boolean
Dim fecha_desde As Date
Dim hora_desde As String
Dim fecha_hasta As Date
Dim hora_hasta As String
Dim aplica As Boolean
Dim Aux_Regnro As Long
Dim RegTeoricas As Boolean
Dim Reloj As Long
Dim TH1 As Long
Dim AN1 As Long

Dim TotHor As Single
Dim TotHorHHMM As String
Dim Horas_Tol As Single
Dim Genera As Boolean
Dim JFD As Date     'Fecha desde de la justificacion
Dim JFH As Date     'Fecha hasta de la justificacion
Dim JHD As String   'Hora desde de la justificacion
Dim JHH As String   'Hora Hasta de la justificacion

Dim AuxE1 As String
Dim AuxE2 As String
Dim AuxE3 As String
Dim AuxS1 As String
Dim AuxS2 As String
Dim AuxS3 As String
Dim AuxFE1 As Date
Dim AuxFE2 As Date
Dim AuxFE3 As Date
Dim AuxFS1 As Date
Dim AuxFS2 As Date
Dim AuxFS3 As Date


Call SetearParametrosPolitica(Detalle, ok)
If ok Then
    Opcion = st_Opcion
    RegAuto_Permanentes = CBool(st_Continua)
    RegTeoricas = CBool(st_Modifica)
    TH1 = IIf(Not EsNulo(st_TipoHora1), st_TipoHora1, 0) 'Tipo de hora a generar
    AN1 = IIf(Not EsNulo(st_Anormalidad), st_Anormalidad, 0) 'Codigo de anormalidad a generar
Else
    RegAuto_Permanentes = False
    RegTeoricas = False
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "no se encontro el detalle Pol 21"
    End If
    Exit Sub
End If
'Opciones
'   1 --> Aplica en turnos normales en dias normales
'   2 --> Aplica en turnos libres o dias francos
'   3 --> Aplica en dias feriados
'   4 --> Aplica siempre


Select Case Opcion
Case 1: 'Version 1
    If depurar Then
        Flog.writeline Espacios(Tabulador * 5) & "Version 1. Aplica en turnos normales en dias normales."
    End If

    If (Tipo_Turno = 1 Or Tipo_Turno = 2) And (Not Dia_Libre) And ((UsaFeriadoConControl And esFeriado) Or (Not esFeriado)) Then
        'Dia normal en turno normal
        aplica = True
    Else
        'Dia libre, feriado o turno libre
        aplica = False
    End If
Case 2: 'Version 2
    If depurar Then
        Flog.writeline Espacios(Tabulador * 5) & "Version 2. Aplica en turnos libres o dias francos."
    End If

    If (Tipo_Turno = 1 Or Tipo_Turno = 2) And (Not Dia_Libre) And ((UsaFeriadoConControl And esFeriado) Or (Not esFeriado)) Then
        'Dia normal en turno normal
        aplica = False
    Else
        'Dia libre, feriado o turno libre
        aplica = True
    End If
Case 3: 'Version 3
    If depurar Then
        Flog.writeline Espacios(Tabulador * 5) & "Version 3. Aplica en dias feriados."
    End If
    If esFeriado Then
        aplica = True
    Else
        aplica = False
    End If
Case 4: 'Version 4
    If depurar Then
        Flog.writeline Espacios(Tabulador * 5) & "Version 4. Aplica siempre."
    End If
    aplica = True
Case Else
    If depurar Then
        Flog.writeline Espacios(Tabulador * 6) & "Version " & Opcion & " desconocida."
    End If
End Select

If aplica Then
    If RegTeoricas Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 7) & "Genera Registraciones de acuerdo al Horario Teorico"
        End If
    
        'Busco el 1er reloj
        StrSql = "SELECT relnro FROM gti_reloj ORDER BY relnro "
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            Reloj = rs!relnro
            If depurar Then
                Flog.writeline Espacios(Tabulador * 7) & "Reloj a utilizar: " & Reloj
            End If
        Else
            If depurar Then
                Flog.writeline Espacios(Tabulador * 7) & "No hay ningun reloj. No se pueden crear registraciones automáticas."
            End If
        End If
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 7) & "Corta las registraciones que pasan de dia"
        End If
    End If
End If

'FGZ - 09/06/2014 ----------------
If RegTeoricas And aplica Then
    'Reviso si hay registraciones manuales o automaticas. Si existiesen ==> no creo registraciones
    StrSql = "SELECT * FROM gti_registracion "
    StrSql = StrSql & " WHERE ternro = " & Empleado.Ternro
    StrSql = StrSql & " AND regfecha = " & ConvFecha(fecha_proceso) & ""
    StrSql = StrSql & " AND hornro is NULL"
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 7) & "Ya existen registraciones para el día. No Se crearán registraciones Teoricas."
        End If
        aplica = False
    End If
End If
'FGZ - 09/06/2014 ----------------

If aplica Then
    'EAM- Se valida que si tiene una justificación completa para el día que no se ingrese la registración. Syke 09/02/2011
    If Not Existe_Justificacion(FE1, NroTer) Then
        If RegTeoricas Then
            'FGZ - 30/01/2012 -----------------
            '  Reviso si hay registraciones generadas y en ese caso las dejo en estado 'X' para que no se tengan en cuenta.
            
            'MyBeginTrans
            '    StrSql = "UPDATE gti_registracion SET regestado = 'X'"
            '    StrSql = StrSql & " WHERE ternro = " & Empleado.Ternro
            '    StrSql = StrSql & " AND regfecha = " & ConvFecha(fecha_proceso) & ""
            '    objConn.Execute StrSql, , adExecuteNoRecords
            'MyCommitTrans
            'FGZ - 30/01/2012 -----------------
    
    
            'FGZ - 04/06/2014 ---------------------------------------------------------------------------------------
            'Reviso jsutificaciones parciales fijas y puede que deba ajustar las registraciones
            AuxE1 = E1
            AuxE2 = E2
            AuxE3 = E3
            AuxFE1 = FE1
            AuxFE2 = FE2
            AuxFE3 = FE3
            AuxS1 = S1
            AuxS3 = S2
            AuxS3 = S3
            AuxFS1 = FS1
            AuxFS3 = FS2
            AuxFS3 = FS3
            
            'FGZ - 31/07/2014 -----------------------------------
            AuxE1 = E1
            AuxFE1 = FE1
            AuxS1 = S1
            AuxFS1 = FS1
            Do While (AuxFE1 < AuxFS1) Or (AuxFE1 = AuxFS1 And (AuxE1 < AuxS1))
                If Existe_Justificacion_ParcialFija(AuxFE1, AuxE1, AuxFS1, AuxS1, NroTer, JFD, JHD, JFH, JHH) Then
                    If AuxE1 = JHD And AuxFE1 = JFD Then
                        'No inserto registraciones porque son continuadas
                        'Justificacion continuada
                        AuxE1 = JHH
                        AuxFE1 = JFH
                        If AuxE1 = "2400" Then
                            AuxE1 = "0000"
                            AuxFE1 = AuxFE1 + 1
                        End If
                    Else
                        Call InsertarReg(AuxE1, AuxFE1, JHD, JFD, 21, NroTer, p_fecha, Reloj, TH1, AN1)
                        AuxE1 = JHH
                        AuxFE1 = JFH
                        If AuxE1 = "2400" Then
                            AuxE1 = "0000"
                            AuxFE1 = AuxFE1 + 1
                        End If
                    End If
                Else
                    Call InsertarReg(AuxE1, AuxFE1, AuxS1, AuxFS1, 21, NroTer, p_fecha, Reloj, TH1, AN1)
                    AuxE1 = AuxS1
                    AuxFE1 = AuxFS1
                End If
            Loop
            'FGZ - 31/07/2014 -----------------------------------
            
            
'            'If Existe_Justificacion_ParcialFija(AuxFE1, NroTer, JFD, JHD, JFH, JHH) Then
'            If Existe_Justificacion_ParcialFija(AuxFE1, AuxE1, AuxFS1, AuxS1, NroTer, JFD, JHD, JFH, JHH) Then
'
'                'reg        [---------------]
'                'justif           (----------------)
'                If objFechasHoras.Menor_Hora(AuxFE1, AuxE1, JFD, JHD) And objFechasHoras.Menor_Hora(JFD, JHD, AuxFS1, AuxS1) And objFechasHoras.Menor_Igual_Hora(AuxFS1, AuxS1, JFH, JHH) Then
'                    'Registracion de E1 a JHD
'                    AuxFS1 = JFD
'                    AuxS1 = JHD
'                End If
'
'                'reg            [---------------]
'                'justif     (----------------)
'                If objFechasHoras.Mayor_Igual_Hora(AuxFE1, AuxE1, JFD, JHD) And objFechasHoras.Menor_Hora(AuxFE1, AuxE1, JFH, JHH) And objFechasHoras.Mayor_Hora(AuxFS1, AuxS1, JFH, JHH) Then
'                    'Registracion de E1 a JHH
'                    AuxFE1 = JFH
'                    AuxE1 = JHH
'                End If
'
'                'reg            [---------------]
'                'justif     (-----------------------)
'                If objFechasHoras.Mayor_Igual_Hora(AuxFE1, AuxE1, JFD, JHD) And objFechasHoras.Menor_Hora(AuxFE1, AuxE1, JFH, JHH) And objFechasHoras.Menor_Igual_Hora(AuxFS1, AuxS1, JFH, JHH) And objFechasHoras.Mayor_Hora(AuxFS1, AuxS1, JFD, JHD) Then
'                    'Registracion desaparece
'                    AuxE1 = E2
'                    AuxFE1 = FE2
'                    AuxS1 = S2
'                    AuxFS1 = FS2
'                End If
'
'                'reg        [---------------]
'                'justif         (--------)
'                If objFechasHoras.Menor_Hora(AuxFE1, AuxE1, JFD, JHD) And objFechasHoras.Mayor_Hora(AuxFS1, AuxS1, JFH, JHH) Then
'                    'Registracion de JHD a JHH
'                    'Debo agregar un nuevo par de registraciones
'
'                    AuxFE2 = JFH
'                    AuxE2 = JHH
'                    AuxFS2 = FS1
'                    AuxS2 = S1
'
'                    'Ajustar el par1
'                    AuxFS1 = JFD
'                    AuxS1 = JHD
'                End If
'            End If
'            'FGZ - 04/06/2014 ---------------------------------------------------------------------------------------
'
'            'Agregar validacion por si existen registraciones
'            If Not EsNulo(AuxE1) Then
'                'Genero la entrada Teorica
'                StrSql = "INSERT INTO gti_registracion ("
'                StrSql = StrSql & "Ternro"
'                StrSql = StrSql & ",relnro"
'                StrSql = StrSql & ",regfecha"
'                StrSql = StrSql & ",fechagen"
'                StrSql = StrSql & ",reghora"
'                StrSql = StrSql & ",regestado"
'                StrSql = StrSql & ",regentsal"
'                StrSql = StrSql & ",regllamada"
'                StrSql = StrSql & ",regmanual"
'                StrSql = StrSql & ",hornro"
'                StrSql = StrSql & " )"
'                StrSql = StrSql & " VALUES ("
'                StrSql = StrSql & NroTer
'                StrSql = StrSql & "," & Reloj
'                StrSql = StrSql & "," & ConvFecha(AuxFE1)
'                StrSql = StrSql & "," & ConvFecha(p_fecha)
'                StrSql = StrSql & "," & "'" & AuxE1 & "'"
'                StrSql = StrSql & "," & "'I'"
'                StrSql = StrSql & "," & "'E'"
'                StrSql = StrSql & "," & "0"
'                StrSql = StrSql & "," & "-1"
'                If RegAuto_Permanentes Then
'                    StrSql = StrSql & "," & "21"   'Automatica permanente
'                    'StrSql = StrSql & "," & "-121"  'Automatica Temporal
'                Else
'                    StrSql = StrSql & "," & "-121"  'Automatica Temporal
'                End If
'                StrSql = StrSql & " )"
'                objConn.Execute StrSql, , adExecuteNoRecords
'            Else
'                If depurar Then
'                    Flog.writeline Espacios(Tabulador * 7) & "Horario de entrada vacio. No se inserta."
'                End If
'            End If
'
'            If Not EsNulo(AuxS1) Then
'                'Genero la Salida Teorica
'                StrSql = "INSERT INTO gti_registracion ("
'                StrSql = StrSql & "Ternro"
'                StrSql = StrSql & ",relnro"
'                StrSql = StrSql & ",regfecha"
'                StrSql = StrSql & ",fechagen"
'                StrSql = StrSql & ",reghora"
'                StrSql = StrSql & ",regestado"
'                StrSql = StrSql & ",regentsal"
'                StrSql = StrSql & ",regllamada"
'                StrSql = StrSql & ",regmanual"
'                StrSql = StrSql & ",hornro"
'                StrSql = StrSql & " )"
'                StrSql = StrSql & " VALUES ("
'                StrSql = StrSql & NroTer
'                StrSql = StrSql & "," & Reloj
'                StrSql = StrSql & "," & ConvFecha(AuxFS1)
'                StrSql = StrSql & "," & ConvFecha(p_fecha)
'                StrSql = StrSql & "," & "'" & AuxS1 & "'"
'                StrSql = StrSql & "," & "'I'"
'                StrSql = StrSql & "," & "'S'"
'                StrSql = StrSql & "," & "0"
'                StrSql = StrSql & "," & "-1"
'                If RegAuto_Permanentes Then
'                    StrSql = StrSql & "," & "21"   'Automatica permanente
'                    'StrSql = StrSql & "," & "-121"  'Automatica Temporal
'                Else
'                    StrSql = StrSql & "," & "-121"  'Automatica Temporal
'                End If
'                StrSql = StrSql & " )"
'                objConn.Execute StrSql, , adExecuteNoRecords
'            Else
'                If depurar Then
'                    Flog.writeline Espacios(Tabulador * 7) & "Horario de Salida vacio. No se inserta."
'                End If
'            End If
'
'            If Not EsNulo(AuxE1) And Not EsNulo(AuxS1) Then
'                If depurar Then
'                    Flog.writeline Espacios(Tabulador * 7) & "Inserto registraciones Entrada " & AuxFE1 & " - " & AuxE1 & " y Salida: " & AuxFS1 & " - " & AuxS1
'                End If
'            End If
'
'            'Debo insertar tipo de hora y codigo de anormalidad
'            If Not EsNulo(AuxE1) And Not EsNulo(AuxS1) Then
'                If TH1 <> 0 Then
'                    Horas_Tol = objFechasHoras.HorasInterseccion(AuxFE1, AuxE1, AuxFS1, AuxS1, AuxFE1, AuxE1, AuxFS1, AuxS1)
'                    TotHorHHMM = CHoras(Horas_Tol, 60)
'
'                    StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
'                    "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
'                    "normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Horas_Tol & "," & _
'                    ConvFecha(AuxFE1) & "," & ConvFecha(AuxFS1) & "," & CInt(False) & "," & CInt(True) & "," & _
'                    NroTer & "," & TH1 & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
'                    ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",'" & AuxE1 & "','" & AuxS1 & "'," & AN1 & "," & AN1 & ",' ')"
'                    objConn.Execute StrSql, , adExecuteNoRecords
'                    If depurar Then
'                        Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TH1 & "- Cantidad: " & Horas_Tol & " hs."
'                    End If
'                End If
'            End If
'
'            'FGZ - 04/06/2014 ---------------------------------------------------------------------------------------
'            'Agrego control sobre par 2 de registraciones
'            'Agregar validacion por si existen registraciones
'            If Not EsNulo(AuxE2) Then
'                'Genero la entrada Teorica
'                StrSql = "INSERT INTO gti_registracion ("
'                StrSql = StrSql & "Ternro"
'                StrSql = StrSql & ",relnro"
'                StrSql = StrSql & ",regfecha"
'                StrSql = StrSql & ",fechagen"
'                StrSql = StrSql & ",reghora"
'                StrSql = StrSql & ",regestado"
'                StrSql = StrSql & ",regentsal"
'                StrSql = StrSql & ",regllamada"
'                StrSql = StrSql & ",regmanual"
'                StrSql = StrSql & ",hornro"
'                StrSql = StrSql & " )"
'                StrSql = StrSql & " VALUES ("
'                StrSql = StrSql & NroTer
'                StrSql = StrSql & "," & Reloj
'                StrSql = StrSql & "," & ConvFecha(AuxFE2)
'                StrSql = StrSql & "," & ConvFecha(p_fecha)
'                StrSql = StrSql & "," & "'" & AuxE2 & "'"
'                StrSql = StrSql & "," & "'I'"
'                StrSql = StrSql & "," & "'E'"
'                StrSql = StrSql & "," & "0"
'                StrSql = StrSql & "," & "-1"
'                If RegAuto_Permanentes Then
'                    StrSql = StrSql & "," & "21"   'Automatica permanente
'                    'StrSql = StrSql & "," & "-121"  'Automatica Temporal
'                Else
'                    StrSql = StrSql & "," & "-121"  'Automatica Temporal
'                End If
'                StrSql = StrSql & " )"
'                objConn.Execute StrSql, , adExecuteNoRecords
'            End If
'
'            If Not EsNulo(AuxS2) Then
'                'Genero la Salida Teorica
'                StrSql = "INSERT INTO gti_registracion ("
'                StrSql = StrSql & "Ternro"
'                StrSql = StrSql & ",relnro"
'                StrSql = StrSql & ",regfecha"
'                StrSql = StrSql & ",fechagen"
'                StrSql = StrSql & ",reghora"
'                StrSql = StrSql & ",regestado"
'                StrSql = StrSql & ",regentsal"
'                StrSql = StrSql & ",regllamada"
'                StrSql = StrSql & ",regmanual"
'                StrSql = StrSql & ",hornro"
'                StrSql = StrSql & " )"
'                StrSql = StrSql & " VALUES ("
'                StrSql = StrSql & NroTer
'                StrSql = StrSql & "," & Reloj
'                StrSql = StrSql & "," & ConvFecha(AuxFS2)
'                StrSql = StrSql & "," & ConvFecha(p_fecha)
'                StrSql = StrSql & "," & "'" & AuxS2 & "'"
'                StrSql = StrSql & "," & "'I'"
'                StrSql = StrSql & "," & "'S'"
'                StrSql = StrSql & "," & "0"
'                StrSql = StrSql & "," & "-1"
'                If RegAuto_Permanentes Then
'                    StrSql = StrSql & "," & "21"   'Automatica permanente
'                    'StrSql = StrSql & "," & "-121"  'Automatica Temporal
'                Else
'                    StrSql = StrSql & "," & "-121"  'Automatica Temporal
'                End If
'                StrSql = StrSql & " )"
'                objConn.Execute StrSql, , adExecuteNoRecords
'            End If
'
'            If Not EsNulo(AuxE2) And Not EsNulo(AuxS2) Then
'                If depurar Then
'                    Flog.writeline Espacios(Tabulador * 7) & "Inserto registraciones Entrada " & AuxFE2 & " - " & AuxE2 & " y Salida: " & AuxFS2 & " - " & AuxS2
'                End If
'            End If
'            'FGZ - 04/06/2014 ---------------------------------------------------------------------------------------
'
'            'Debo insertar tipo de hora y codigo de anormalidad
'            If Not EsNulo(AuxE2) And Not EsNulo(AuxS2) Then
'                If TH1 <> 0 Then
'                    Horas_Tol = objFechasHoras.HorasInterseccion(AuxFE2, AuxE2, AuxFS2, AuxS2, AuxFE2, AuxE2, AuxFS2, AuxS2)
'                    TotHorHHMM = CHoras(Horas_Tol, 60)
'
'                    StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
'                    "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
'                    "normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Horas_Tol & "," & _
'                    ConvFecha(AuxFE1) & "," & ConvFecha(AuxFS1) & "," & CInt(False) & "," & CInt(True) & "," & _
'                    NroTer & "," & TH1 & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
'                    ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",'" & AuxE2 & "','" & AuxS2 & "'," & AN1 & "," & AN1 & ",' ')"
'                    objConn.Execute StrSql, , adExecuteNoRecords
'                    If depurar Then
'                        Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TH1 & "- Cantidad: " & Horas_Tol & " hs."
'                    End If
'                End If
'            End If
            
            
    Else
            If Not RegAuto_Permanentes Then
                'FGZ - 07/12/2010 ------------------
                '   le agregué este control para que cree una registracion a las 00:00 del dia procesado si la ultima registracion del dia anterior
                '   quedó marcada como que fué procesado parcialmente
                StrSql = "SELECT * FROM GTI_REGISTRACION WHERE ternro= " & NroTer
                StrSql = StrSql & " AND hornro =-1"
                StrSql = StrSql & " AND ((regestado = 'P'"
                StrSql = StrSql & " AND fechaproc = " & ConvFecha(p_fecha - 1)
                StrSql = StrSql & " AND fechagen = " & ConvFecha(p_fecha - 1) & ")"
                StrSql = StrSql & " OR (regestado = 'L'"
                StrSql = StrSql & " AND regfecha = " & ConvFecha(p_fecha - 1) & ")"
                StrSql = StrSql & " OR (regestado = 'I'"
                StrSql = StrSql & " AND regfecha = " & ConvFecha(p_fecha - 1) & "))"
                StrSql = StrSql & " ORDER BY ternro ASC, regfecha desc, reghora desc"
                OpenRecordset StrSql, rs
                If Not rs.EOF Then
                    'entrada en este dia
                    StrSql = "INSERT INTO gti_registracion ("
                    StrSql = StrSql & "Ternro"
                    StrSql = StrSql & ",relnro"
                    StrSql = StrSql & ",regfecha"
                    StrSql = StrSql & ",fechagen"
                    StrSql = StrSql & ",reghora"
                    StrSql = StrSql & ",regestado"
                    StrSql = StrSql & ",regentsal"
                    StrSql = StrSql & ",regllamada"
                    StrSql = StrSql & ",regmanual"
                    StrSql = StrSql & ",hornro"
                    StrSql = StrSql & " )"
                    StrSql = StrSql & " VALUES ("
                    StrSql = StrSql & NroTer
                    StrSql = StrSql & "," & rs!relnro
                    StrSql = StrSql & "," & ConvFecha(p_fecha)
                    StrSql = StrSql & "," & ConvFecha(p_fecha)
                    StrSql = StrSql & "," & "'0000'"
                    StrSql = StrSql & "," & "'I'"
                    StrSql = StrSql & "," & "'E'"
                    StrSql = StrSql & "," & "0"
                    StrSql = StrSql & "," & "-1"
                    'StrSql = StrSql & "," & "21"   'Automatica permanente
                    StrSql = StrSql & "," & "-121"  'Automatica Temporal
                    StrSql = StrSql & " )"
                    objConn.Execute StrSql, , adExecuteNoRecords
        
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 5) & "Inserto una registracion a las 00:00 porque la ultima reg del dia anterior quedó marcada como procesado a medias."
                    End If
                End If
                'FGZ - 07/12/2010 ------------------
            End If

            Ultima_Es_Entrada = False
            
            'Busco la ultima registración del dia
            StrSql = "SELECT * FROM GTI_REGISTRACION WHERE ternro= " & NroTer
            StrSql = StrSql & " AND regfecha >= " & ConvFecha(fecdesde) & " and regfecha <= " & ConvFecha(fechasta)
            StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
            StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                rs.MoveLast
                fecha_desde = rs!regfecha
                hora_desde = rs!reghora
                Aux_Regnro = rs!Regnro
                
                ' FGZ - 30/03/2010 -----------------------------------------
                'If rs!regentsal = "E" Then
                '    Ultima_Es_Entrada = True
                'Else
                '    Ultima_Es_Entrada = False
                'End If
                
                If rs!regentsal = "E" Then
                    Ultima_Es_Entrada = True
                Else
                    If usaRelojEntradaSalida Then
                        Ultima_Es_Entrada = False
                    Else
                        If rs.RecordCount Mod 2 <> 0 Then
                            Ultima_Es_Entrada = True
                        Else
                            Ultima_Es_Entrada = False
                        End If
                    End If
                End If
                ' FGZ - 30/03/2010 -----------------------------------------
            Else
                'No hay nada para hacer
            End If
        
        
            If Ultima_Es_Entrada Then
                'Busco la primer registración del dia siguiente
                StrSql = "SELECT * FROM GTI_REGISTRACION WHERE ternro= " & NroTer
                StrSql = StrSql & " AND regfecha >= " & ConvFecha(DateAdd("d", 1, fecdesde)) & " and regfecha <= " & ConvFecha(DateAdd("d", 1, fechasta))
                StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
                StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
                OpenRecordset StrSql, rs
                If Not rs.EOF Then
                    rs.MoveFirst
                    fecha_hasta = rs!regfecha
                    hora_hasta = rs!reghora
                
                    'FGZ -30/03/2010 ---------------
                    'If rs!regentsal = "S" Then
                    'If rs!regentsal = "S" Or (EsNulo(rs!regentsal) And Not usaRelojEntradaSalida) then -mdf comentada
                    If rs!regentsal = "S" Or (EsNulo(rs!regentsal) And Not usaRelojEntradaSalida) Or (rs!regentsal = "E" And (rs!hornro = 21 Or rs!hornro = -121)) Then
                        'debo insertar una salidad a las 24:00 del dia anterior y una entrada a las 00 de este dia
                        
                        'Salida del dia anterior
                        StrSql = "INSERT INTO gti_registracion ("
                        StrSql = StrSql & "Ternro"
                        StrSql = StrSql & ",relnro"
                        StrSql = StrSql & ",regfecha"
                        StrSql = StrSql & ",fechagen"
                        StrSql = StrSql & ",reghora"
                        StrSql = StrSql & ",regestado"
                        StrSql = StrSql & ",regentsal"
                        StrSql = StrSql & ",regllamada"
                        StrSql = StrSql & ",regmanual"
                        StrSql = StrSql & ",hornro"
                        StrSql = StrSql & " )"
                        StrSql = StrSql & " VALUES ("
                        StrSql = StrSql & NroTer
                        StrSql = StrSql & "," & rs!relnro
                        StrSql = StrSql & "," & ConvFecha(DateAdd("d", -1, rs!regfecha))
                        StrSql = StrSql & "," & ConvFecha(p_fecha)
                        StrSql = StrSql & "," & "'2400'"
                        StrSql = StrSql & "," & "'I'"
                        StrSql = StrSql & "," & "'S'"
                        StrSql = StrSql & "," & "0"
                        StrSql = StrSql & "," & "-1"
                        If Not RegAuto_Permanentes Then
                            StrSql = StrSql & "," & "-121"
                        Else
                            StrSql = StrSql & "," & "21"
                        End If
                        StrSql = StrSql & " )"
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 5) & "Inserto una registracion a las 24:00."
                        End If
        
                        'entrada en este dia
                        'FGZ - 23/10/2014 ---------------------------------
                        'Le agrego control por si se reprocesa y el siguiente dia no marcó registraciones
                        StrSql = "SELECT regnro FROM GTI_REGISTRACION "
                        StrSql = StrSql & " WHERE ternro = " & Empleado.Ternro
                        StrSql = StrSql & " AND (fechagen = " & ConvFecha(rs!regfecha)
                        StrSql = StrSql & " OR ((regestado = 'I' OR regestado = 'L') AND regfecha = " & ConvFecha(rs!regfecha) & "))"
                        StrSql = StrSql & " AND hornro = 21"
                        StrSql = StrSql & " AND reghora = '0000'"
                        OpenRecordset StrSql, rs_Auto
                        If rs_Auto.EOF Then
                            StrSql = "INSERT INTO gti_registracion ("
                            StrSql = StrSql & "Ternro"
                            StrSql = StrSql & ",relnro"
                            StrSql = StrSql & ",regfecha"
                            StrSql = StrSql & ",fechagen"
                            StrSql = StrSql & ",reghora"
                            StrSql = StrSql & ",regestado"
                            StrSql = StrSql & ",regentsal"
                            StrSql = StrSql & ",regllamada"
                            StrSql = StrSql & ",regmanual"
                            StrSql = StrSql & ",hornro"
                            StrSql = StrSql & " )"
                            StrSql = StrSql & " VALUES ("
                            StrSql = StrSql & NroTer
                            StrSql = StrSql & "," & rs!relnro
                            StrSql = StrSql & "," & ConvFecha(rs!regfecha)
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & "," & "'0000'"
                            StrSql = StrSql & "," & "'I'"
                            StrSql = StrSql & "," & "'E'"
                            StrSql = StrSql & "," & "0"
                            StrSql = StrSql & "," & "-1"
                            If Not RegAuto_Permanentes Then
                                StrSql = StrSql & "," & "-121"
                            Else
                                StrSql = StrSql & "," & "21"
                            End If
                            StrSql = StrSql & " )"
                            objConn.Execute StrSql, , adExecuteNoRecords
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 5) & "Inserto una registracion a las 00:00."
                            End If
                            
                            If Not RegAuto_Permanentes Then
                                'FGZ - 07/12/2010 - Se agregó una marca a la registracion de origen para que en el procesamiento del dia siguiente se cree la reg de entrada
                                StrSql = "UPDATE gti_registracion SET hornro = -1"
                                StrSql = StrSql & " WHERE regnro = " & Aux_Regnro
                                objConn.Execute StrSql, , adExecuteNoRecords
                                If depurar Then
                                    Flog.writeline Espacios(Tabulador * 5) & "Marco la registracion para que el dias siguiente cree una registracion a las 00:00."
                                End If
                                'FGZ - 07/12/2010 - Se agregó una marca a la registracion de origen para que en el procesamiento del dia siguiente se cree la reg de entrada
                            End If
                        End If
                    Else
                        'la primer registracion es una entrada, aparentemente se olvidó de registrar la salida
                        ' no puedo hacer nada
                        
                        'FGZ - 17/10/2014 --------------------------------
                        'Cuando los relojes no distinguen entre entrada y salida y todas las registraciones tienen la marca de salida debemos tratar de resolverlo
                        If Not usaRelojEntradaSalida And (rs!regentsal = "S" Or EsNulo(rs!regentsal) Or (rs!regentsal = "E" And EsNulo(rs!hornro))) Then
                            'debo insertar una salidad a las 24:00 del dia anterior y una entrada a las 00 de este dia
                            
                            'Salida del dia anterior
                            StrSql = "INSERT INTO gti_registracion ("
                            StrSql = StrSql & "Ternro"
                            StrSql = StrSql & ",relnro"
                            StrSql = StrSql & ",regfecha"
                            StrSql = StrSql & ",fechagen"
                            StrSql = StrSql & ",reghora"
                            StrSql = StrSql & ",regestado"
                            StrSql = StrSql & ",regentsal"
                            StrSql = StrSql & ",regllamada"
                            StrSql = StrSql & ",regmanual"
                            StrSql = StrSql & ",hornro"
                            StrSql = StrSql & " )"
                            StrSql = StrSql & " VALUES ("
                            StrSql = StrSql & NroTer
                            StrSql = StrSql & "," & rs!relnro
                            StrSql = StrSql & "," & ConvFecha(DateAdd("d", -1, rs!regfecha))
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & "," & "'2400'"
                            StrSql = StrSql & "," & "'I'"
                            StrSql = StrSql & "," & "'S'"
                            StrSql = StrSql & "," & "0"
                            StrSql = StrSql & "," & "-1"
                            If Not RegAuto_Permanentes Then
                                StrSql = StrSql & "," & "-121"
                            Else
                                StrSql = StrSql & "," & "21"
                            End If
                            StrSql = StrSql & " )"
                            objConn.Execute StrSql, , adExecuteNoRecords
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 5) & "Inserto una registracion a las 24:00."
                            End If
            
                            'entrada en este dia
                            StrSql = "INSERT INTO gti_registracion ("
                            StrSql = StrSql & "Ternro"
                            StrSql = StrSql & ",relnro"
                            StrSql = StrSql & ",regfecha"
                            StrSql = StrSql & ",fechagen"
                            StrSql = StrSql & ",reghora"
                            StrSql = StrSql & ",regestado"
                            StrSql = StrSql & ",regentsal"
                            StrSql = StrSql & ",regllamada"
                            StrSql = StrSql & ",regmanual"
                            StrSql = StrSql & ",hornro"
                            StrSql = StrSql & " )"
                            StrSql = StrSql & " VALUES ("
                            StrSql = StrSql & NroTer
                            StrSql = StrSql & "," & rs!relnro
                            StrSql = StrSql & "," & ConvFecha(rs!regfecha)
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & "," & "'0000'"
                            StrSql = StrSql & "," & "'I'"
                            StrSql = StrSql & "," & "'E'"
                            StrSql = StrSql & "," & "0"
                            StrSql = StrSql & "," & "-1"
                            If Not RegAuto_Permanentes Then
                                StrSql = StrSql & "," & "-121"
                            Else
                                StrSql = StrSql & "," & "21"
                            End If
                            StrSql = StrSql & " )"
                            objConn.Execute StrSql, , adExecuteNoRecords
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 5) & "Inserto una registracion a las 00:00."
                            End If
                            
                            If Not RegAuto_Permanentes Then
                                'FGZ - 07/12/2010 - Se agregó una marca a la registracion de origen para que en el procesamiento del dia siguiente se cree la reg de entrada
                                StrSql = "UPDATE gti_registracion SET hornro = -1"
                                StrSql = StrSql & " WHERE regnro = " & Aux_Regnro
                                objConn.Execute StrSql, , adExecuteNoRecords
                                If depurar Then
                                    Flog.writeline Espacios(Tabulador * 5) & "Marco la registracion para que el dias siguiente cree una registracion a las 00:00."
                                End If
                                'FGZ - 07/12/2010 - Se agregó una marca a la registracion de origen para que en el procesamiento del dia siguiente se cree la reg de entrada
                            End If
                        Else
                            'la primer registracion es una entrada, aparentemente se olvidó de registrar la salida
                            ' no puedo hacer nada
                        End If
                        'FGZ - 17/10/2014 --------------------------------
                        
                    End If
                Else
                    'No hay nada para hacer
                End If
            Else
                'No hay nada que hacer
            End If
        End If
    End If
End If
    

'Cierro todo
If rs.State = adStateOpen Then rs.Close
Set rs = Nothing
End Sub


Public Sub InsertarReg(ByVal AuxE1 As String, ByVal AuxFE1 As Date, ByVal AuxS1 As String, ByVal AuxFS1 As Date, ByVal Codigo As Long, ByVal NroTer As Long, ByVal Aux_Fecha As Date, ByVal Reloj As Long, ByVal TH1 As Long, ByVal AN1 As Long)
' --------------------------------------------------------------
' Descripcion: inserta registraciones de entrada y salida segun los parametros.
' Autor: FGZ - 31/07/2014
' Ultima modificacion:
' --------------------------------------------------------------
Dim TotHor As Single
Dim TotHorHHMM As String
Dim Horas_Tol As Single

            'Agregar validacion por si existen registraciones
            If Not EsNulo(AuxE1) Then
                'Genero la entrada Teorica
                StrSql = "INSERT INTO gti_registracion ("
                StrSql = StrSql & "Ternro"
                StrSql = StrSql & ",relnro"
                StrSql = StrSql & ",regfecha"
                StrSql = StrSql & ",fechagen"
                StrSql = StrSql & ",reghora"
                StrSql = StrSql & ",regestado"
                StrSql = StrSql & ",regentsal"
                StrSql = StrSql & ",regllamada"
                StrSql = StrSql & ",regmanual"
                StrSql = StrSql & ",hornro"
                StrSql = StrSql & " )"
                StrSql = StrSql & " VALUES ("
                StrSql = StrSql & NroTer
                StrSql = StrSql & "," & Reloj
                StrSql = StrSql & "," & ConvFecha(AuxFE1)
                StrSql = StrSql & "," & ConvFecha(Aux_Fecha)
                StrSql = StrSql & "," & "'" & AuxE1 & "'"
                StrSql = StrSql & "," & "'I'"
                StrSql = StrSql & "," & "'E'"
                StrSql = StrSql & "," & "0"
                StrSql = StrSql & "," & "-1"
                StrSql = StrSql & "," & Codigo   'Automatica permanente
                StrSql = StrSql & " )"
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
        
            If Not EsNulo(AuxS1) Then
                'Genero la Salida Teorica
                StrSql = "INSERT INTO gti_registracion ("
                StrSql = StrSql & "Ternro"
                StrSql = StrSql & ",relnro"
                StrSql = StrSql & ",regfecha"
                StrSql = StrSql & ",fechagen"
                StrSql = StrSql & ",reghora"
                StrSql = StrSql & ",regestado"
                StrSql = StrSql & ",regentsal"
                StrSql = StrSql & ",regllamada"
                StrSql = StrSql & ",regmanual"
                StrSql = StrSql & ",hornro"
                StrSql = StrSql & " )"
                StrSql = StrSql & " VALUES ("
                StrSql = StrSql & NroTer
                StrSql = StrSql & "," & Reloj
                StrSql = StrSql & "," & ConvFecha(AuxFS1)
                StrSql = StrSql & "," & ConvFecha(Aux_Fecha)
                StrSql = StrSql & "," & "'" & AuxS1 & "'"
                StrSql = StrSql & "," & "'I'"
                StrSql = StrSql & "," & "'S'"
                StrSql = StrSql & "," & "0"
                StrSql = StrSql & "," & "-1"
                StrSql = StrSql & "," & Codigo   'Automatica permanente
                StrSql = StrSql & " )"
                objConn.Execute StrSql, , adExecuteNoRecords
    
                If Not EsNulo(AuxE1) And Not EsNulo(AuxS1) Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 7) & "Inserto registraciones Entrada " & AuxFE1 & " - " & AuxE1 & " y Salida: " & AuxFS1 & " - " & AuxS1
                    End If
                End If
            End If
            
            'Debo insertar tipo de hora y codigo de anormalidad
            If Not EsNulo(AuxE1) And Not EsNulo(AuxS1) Then
                If TH1 <> 0 Then
                    Horas_Tol = objFechasHoras.HorasInterseccion(AuxFE1, AuxE1, AuxFS1, AuxS1, AuxFE1, AuxE1, AuxFS1, AuxS1)
                    TotHorHHMM = CHoras(Horas_Tol, 60)
            
                    StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                    "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
                    "normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Horas_Tol & "," & _
                    ConvFecha(AuxFE1) & "," & ConvFecha(AuxFS1) & "," & CInt(False) & "," & CInt(True) & "," & _
                    NroTer & "," & TH1 & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
                    ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",'" & AuxE1 & "','" & AuxS1 & "'," & AN1 & "," & AN1 & ",' ')"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TH1 & "- Cantidad: " & Horas_Tol & " hs."
                    End If
                End If
            End If

End Sub

Sub Politica21_old(fecdesde As Date, fechasta As Date, deb As Boolean, NroTer As Long, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Parte las registraciones que pasan de dia.
' Autor: FGZ - 18/03/2009
' Ultima modificacion: FGZ - 04/06/2014 - Control sobre Justificaciones parciales fijas
' --------------------------------------------------------------
Dim rs As New Recordset

Dim Opcion As Integer
Dim Ultima_Es_Entrada As Boolean
Dim fecha_desde As Date
Dim hora_desde As String
Dim fecha_hasta As Date
Dim hora_hasta As String
Dim aplica As Boolean
Dim Aux_Regnro As Long
Dim RegTeoricas As Boolean
Dim Reloj As Long
Dim JFD As Date     'Fecha desde de la justificacion
Dim JFH As Date     'Fecha hasta de la justificacion
Dim JHD As String   'Hora desde de la justificacion
Dim JHH As String   'Hora Hasta de la justificacion


Call SetearParametrosPolitica(Detalle, ok)
If ok Then
    Opcion = st_Opcion
    RegAuto_Permanentes = CBool(st_Continua)
    RegTeoricas = CBool(st_Modifica)
Else
    RegAuto_Permanentes = False
    RegTeoricas = False
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "no se encontro el detalle Pol 21"
    End If
    Exit Sub
End If
'Opciones
'   1 --> Aplica en turnos normales en dias normales
'   2 --> Aplica en turnos libres o dias francos
'   3 --> Aplica en dias feriados
'   4 --> Aplica siempre


Select Case Opcion
Case 1: 'Version 1
    If depurar Then
        Flog.writeline Espacios(Tabulador * 5) & "Version 1. Aplica en turnos normales en dias normales."
    End If

    If (Tipo_Turno = 1 Or Tipo_Turno = 2) And (Not Dia_Libre) And ((UsaFeriadoConControl And esFeriado) Or (Not esFeriado)) Then
        'Dia normal en turno normal
        aplica = True
    Else
        'Dia libre, feriado o turno libre
        aplica = False
    End If
Case 2: 'Version 2
    If depurar Then
        Flog.writeline Espacios(Tabulador * 5) & "Version 2. Aplica en turnos libres o dias francos."
    End If

    If (Tipo_Turno = 1 Or Tipo_Turno = 2) And (Not Dia_Libre) And ((UsaFeriadoConControl And esFeriado) Or (Not esFeriado)) Then
        'Dia normal en turno normal
        aplica = False
    Else
        'Dia libre, feriado o turno libre
        aplica = True
    End If
Case 3: 'Version 3
    If depurar Then
        Flog.writeline Espacios(Tabulador * 5) & "Version 3. Aplica en dias feriados."
    End If
    If esFeriado Then
        aplica = True
    Else
        aplica = False
    End If
Case 4: 'Version 4
    If depurar Then
        Flog.writeline Espacios(Tabulador * 5) & "Version 4. Aplica siempre."
    End If
    aplica = True
Case Else
    If depurar Then
        Flog.writeline Espacios(Tabulador * 6) & "Version " & Opcion & " desconocida."
    End If
End Select

If aplica Then
    If RegTeoricas Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 7) & "Genera Registraciones de acuerdo al Horario Teorico"
        End If
    
        'Busco el 1er reloj
        StrSql = "SELECT relnro FROM gti_reloj ORDER BY relnro "
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            Reloj = rs!relnro
            If depurar Then
                Flog.writeline Espacios(Tabulador * 7) & "Reloj a utilizar: " & Reloj
            End If
        Else
            If depurar Then
                Flog.writeline Espacios(Tabulador * 7) & "No hay ningun reloj. No se pueden crear registraciones automáticas."
            End If
        End If
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 7) & "Corta las registraciones que pasan de dia"
        End If
    End If
End If

'FGZ - 09/06/2014 ----------------
If RegTeoricas And aplica Then
    'Reviso si hay registraciones manuales o automaticas. Si existiesen ==> no creo registraciones
    StrSql = "SELECT * FROM gti_registracion "
    StrSql = StrSql & " WHERE ternro = " & Empleado.Ternro
    StrSql = StrSql & " AND regfecha = " & ConvFecha(fecha_proceso) & ""
    StrSql = StrSql & " AND hornro is NULL"
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 7) & "Ya existen registraciones para el día. No Se crearán registraciones Teoricas."
        End If
        aplica = False
    End If
End If
'FGZ - 09/06/2014 ----------------

If aplica Then
    'EAM- Se valida que si tiene una justificación completa para el día que no se ingrese la registración. Syke 09/02/2011
    If Not Existe_Justificacion(FE1, NroTer) Then
        If RegTeoricas Then
            'FGZ - 30/01/2012 -----------------
            '  Reviso si hay registraciones generadas y en ese caso las dejo en estado 'X' para que no se tengan en cuenta.
            
            'MyBeginTrans
            '    StrSql = "UPDATE gti_registracion SET regestado = 'X'"
            '    StrSql = StrSql & " WHERE ternro = " & Empleado.Ternro
            '    StrSql = StrSql & " AND regfecha = " & ConvFecha(fecha_proceso) & ""
            '    objConn.Execute StrSql, , adExecuteNoRecords
            'MyCommitTrans
            'FGZ - 30/01/2012 -----------------
    
    
            'FGZ - 04/06/2014 ---------------------------------------------------------------------------------------
            'Reviso jsutificaciones parciales fijas y puede que deba ajustar las registraciones
            
            If Existe_Justificacion_ParcialFijaOLD(FE1, NroTer, JFD, JHD, JFH, JHH) Then
                
                'reg        [---------------]
                'justif           (----------------)
                If objFechasHoras.Menor_Hora(FE1, E1, JFD, JHD) And objFechasHoras.Menor_Hora(JFD, JHD, FS1, S1) And objFechasHoras.Menor_Igual_Hora(FS1, S1, JFH, JHH) Then
                    'Registracion de E1 a JHD
                    FS1 = JFD
                    S1 = JHD
                End If
    
                'reg            [---------------]
                'justif     (----------------)
                If objFechasHoras.Mayor_Igual_Hora(FE1, E1, JFD, JHD) And objFechasHoras.Menor_Hora(FE1, E1, JFH, JHH) And objFechasHoras.Mayor_Hora(FS1, S1, JFH, JHH) Then
                    'Registracion de E1 a JHH
                    FE1 = JFH
                    E1 = JHH
                End If
                
                'reg            [---------------]
                'justif     (-----------------------)
                If objFechasHoras.Mayor_Igual_Hora(FE1, E1, JFD, JHD) And objFechasHoras.Menor_Hora(FE1, E1, JFH, JHH) And objFechasHoras.Menor_Igual_Hora(FS1, S1, JFH, JHH) And objFechasHoras.Mayor_Hora(FS1, S1, JFD, JHD) Then
                    'Registracion desaparece
                    E1 = E2
                    FE1 = FE2
                    S1 = S2
                    FS1 = FS2
                End If
    
                'reg        [---------------]
                'justif         (--------)
                If objFechasHoras.Menor_Hora(FE1, E1, JFD, JHD) And objFechasHoras.Mayor_Hora(FS1, S1, JFH, JHH) Then
                    'Registracion de JHD a JHH
                    'Debo agregar un nuevo par de registraciones
                    
                    FE2 = JFH
                    E2 = JHH
                    FS2 = FS1
                    S2 = S1
                    
                    'Ajustar el par1
                    FS1 = JFD
                    S1 = JHD
                End If
            End If
            'FGZ - 04/06/2014 ---------------------------------------------------------------------------------------
    
            'Agregar validacion por si existen registraciones
            If Not EsNulo(E1) Then
                'Genero la entrada Teorica
                StrSql = "INSERT INTO gti_registracion ("
                StrSql = StrSql & "Ternro"
                StrSql = StrSql & ",relnro"
                StrSql = StrSql & ",regfecha"
                StrSql = StrSql & ",fechagen"
                StrSql = StrSql & ",reghora"
                StrSql = StrSql & ",regestado"
                StrSql = StrSql & ",regentsal"
                StrSql = StrSql & ",regllamada"
                StrSql = StrSql & ",regmanual"
                StrSql = StrSql & ",hornro"
                StrSql = StrSql & " )"
                StrSql = StrSql & " VALUES ("
                StrSql = StrSql & NroTer
                StrSql = StrSql & "," & Reloj
                StrSql = StrSql & "," & ConvFecha(FE1)
                StrSql = StrSql & "," & ConvFecha(p_fecha)
                StrSql = StrSql & "," & "'" & E1 & "'"
                StrSql = StrSql & "," & "'I'"
                StrSql = StrSql & "," & "'E'"
                StrSql = StrSql & "," & "0"
                StrSql = StrSql & "," & "-1"
                If RegAuto_Permanentes Then
                    StrSql = StrSql & "," & "21"   'Automatica permanente
                    'StrSql = StrSql & "," & "-121"  'Automatica Temporal
                Else
                    StrSql = StrSql & "," & "-121"  'Automatica Temporal
                End If
                StrSql = StrSql & " )"
                objConn.Execute StrSql, , adExecuteNoRecords
            Else
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 7) & "Horario de entrada vacio. No se inserta."
                End If
            End If
        
            If Not EsNulo(S1) Then
                'Genero la Salida Teorica
                StrSql = "INSERT INTO gti_registracion ("
                StrSql = StrSql & "Ternro"
                StrSql = StrSql & ",relnro"
                StrSql = StrSql & ",regfecha"
                StrSql = StrSql & ",fechagen"
                StrSql = StrSql & ",reghora"
                StrSql = StrSql & ",regestado"
                StrSql = StrSql & ",regentsal"
                StrSql = StrSql & ",regllamada"
                StrSql = StrSql & ",regmanual"
                StrSql = StrSql & ",hornro"
                StrSql = StrSql & " )"
                StrSql = StrSql & " VALUES ("
                StrSql = StrSql & NroTer
                StrSql = StrSql & "," & Reloj
                StrSql = StrSql & "," & ConvFecha(FS1)
                StrSql = StrSql & "," & ConvFecha(p_fecha)
                StrSql = StrSql & "," & "'" & S1 & "'"
                StrSql = StrSql & "," & "'I'"
                StrSql = StrSql & "," & "'S'"
                StrSql = StrSql & "," & "0"
                StrSql = StrSql & "," & "-1"
                If RegAuto_Permanentes Then
                    StrSql = StrSql & "," & "21"   'Automatica permanente
                    'StrSql = StrSql & "," & "-121"  'Automatica Temporal
                Else
                    StrSql = StrSql & "," & "-121"  'Automatica Temporal
                End If
                StrSql = StrSql & " )"
                objConn.Execute StrSql, , adExecuteNoRecords
            Else
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 7) & "Horario de Salida vacio. No se inserta."
                End If
            End If
    
            If Not EsNulo(E1) And Not EsNulo(S1) Then
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 7) & "Inserto registraciones Entrada " & FE1 & " - " & E1 & " y Salida: " & FS1 & " - " & S1
                End If
            End If
            
            
            'FGZ - 04/06/2014 ---------------------------------------------------------------------------------------
            'Agrego control sobre par 2 de registraciones
            'Agregar validacion por si existen registraciones
            If Not EsNulo(E2) Then
                'Genero la entrada Teorica
                StrSql = "INSERT INTO gti_registracion ("
                StrSql = StrSql & "Ternro"
                StrSql = StrSql & ",relnro"
                StrSql = StrSql & ",regfecha"
                StrSql = StrSql & ",fechagen"
                StrSql = StrSql & ",reghora"
                StrSql = StrSql & ",regestado"
                StrSql = StrSql & ",regentsal"
                StrSql = StrSql & ",regllamada"
                StrSql = StrSql & ",regmanual"
                StrSql = StrSql & ",hornro"
                StrSql = StrSql & " )"
                StrSql = StrSql & " VALUES ("
                StrSql = StrSql & NroTer
                StrSql = StrSql & "," & Reloj
                StrSql = StrSql & "," & ConvFecha(FE2)
                StrSql = StrSql & "," & ConvFecha(p_fecha)
                StrSql = StrSql & "," & "'" & E2 & "'"
                StrSql = StrSql & "," & "'I'"
                StrSql = StrSql & "," & "'E'"
                StrSql = StrSql & "," & "0"
                StrSql = StrSql & "," & "-1"
                If RegAuto_Permanentes Then
                    StrSql = StrSql & "," & "21"   'Automatica permanente
                    'StrSql = StrSql & "," & "-121"  'Automatica Temporal
                Else
                    StrSql = StrSql & "," & "-121"  'Automatica Temporal
                End If
                StrSql = StrSql & " )"
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
        
            If Not EsNulo(S2) Then
                'Genero la Salida Teorica
                StrSql = "INSERT INTO gti_registracion ("
                StrSql = StrSql & "Ternro"
                StrSql = StrSql & ",relnro"
                StrSql = StrSql & ",regfecha"
                StrSql = StrSql & ",fechagen"
                StrSql = StrSql & ",reghora"
                StrSql = StrSql & ",regestado"
                StrSql = StrSql & ",regentsal"
                StrSql = StrSql & ",regllamada"
                StrSql = StrSql & ",regmanual"
                StrSql = StrSql & ",hornro"
                StrSql = StrSql & " )"
                StrSql = StrSql & " VALUES ("
                StrSql = StrSql & NroTer
                StrSql = StrSql & "," & Reloj
                StrSql = StrSql & "," & ConvFecha(FS2)
                StrSql = StrSql & "," & ConvFecha(p_fecha)
                StrSql = StrSql & "," & "'" & S2 & "'"
                StrSql = StrSql & "," & "'I'"
                StrSql = StrSql & "," & "'S'"
                StrSql = StrSql & "," & "0"
                StrSql = StrSql & "," & "-1"
                If RegAuto_Permanentes Then
                    StrSql = StrSql & "," & "21"   'Automatica permanente
                    'StrSql = StrSql & "," & "-121"  'Automatica Temporal
                Else
                    StrSql = StrSql & "," & "-121"  'Automatica Temporal
                End If
                StrSql = StrSql & " )"
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
    
            If Not EsNulo(E2) And Not EsNulo(S2) Then
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 7) & "Inserto registraciones Entrada " & FE2 & " - " & E2 & " y Salida: " & FS2 & " - " & S2
                End If
            End If
            
            
            'FGZ - 04/06/2014 ---------------------------------------------------------------------------------------
            
            
            
            
    Else
            If Not RegAuto_Permanentes Then
                'FGZ - 07/12/2010 ------------------
                '   le agregué este control para que cree una registracion a las 00:00 del dia procesado si la ultima registracion del dia anterior
                '   quedó marcada como que fué procesado parcialmente
                StrSql = "SELECT * FROM GTI_REGISTRACION WHERE ternro= " & NroTer
                StrSql = StrSql & " AND hornro =-1"
                StrSql = StrSql & " AND ((regestado = 'P'"
                StrSql = StrSql & " AND fechaproc = " & ConvFecha(p_fecha - 1)
                StrSql = StrSql & " AND fechagen = " & ConvFecha(p_fecha - 1) & ")"
                StrSql = StrSql & " OR (regestado = 'L'"
                StrSql = StrSql & " AND regfecha = " & ConvFecha(p_fecha - 1) & ")"
                StrSql = StrSql & " OR (regestado = 'I'"
                StrSql = StrSql & " AND regfecha = " & ConvFecha(p_fecha - 1) & "))"
                StrSql = StrSql & " ORDER BY ternro ASC, regfecha desc, reghora desc"
                OpenRecordset StrSql, rs
                If Not rs.EOF Then
                    'entrada en este dia
                    StrSql = "INSERT INTO gti_registracion ("
                    StrSql = StrSql & "Ternro"
                    StrSql = StrSql & ",relnro"
                    StrSql = StrSql & ",regfecha"
                    StrSql = StrSql & ",fechagen"
                    StrSql = StrSql & ",reghora"
                    StrSql = StrSql & ",regestado"
                    StrSql = StrSql & ",regentsal"
                    StrSql = StrSql & ",regllamada"
                    StrSql = StrSql & ",regmanual"
                    StrSql = StrSql & ",hornro"
                    StrSql = StrSql & " )"
                    StrSql = StrSql & " VALUES ("
                    StrSql = StrSql & NroTer
                    StrSql = StrSql & "," & rs!relnro
                    StrSql = StrSql & "," & ConvFecha(p_fecha)
                    StrSql = StrSql & "," & ConvFecha(p_fecha)
                    StrSql = StrSql & "," & "'0000'"
                    StrSql = StrSql & "," & "'I'"
                    StrSql = StrSql & "," & "'E'"
                    StrSql = StrSql & "," & "0"
                    StrSql = StrSql & "," & "-1"
                    'StrSql = StrSql & "," & "21"   'Automatica permanente
                    StrSql = StrSql & "," & "-121"  'Automatica Temporal
                    StrSql = StrSql & " )"
                    objConn.Execute StrSql, , adExecuteNoRecords
        
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 5) & "Inserto una registracion a las 00:00 porque la ultima reg del dia anterior quedó marcada como procesado a medias."
                    End If
                End If
                'FGZ - 07/12/2010 ------------------
            End If

            Ultima_Es_Entrada = False
            
            'Busco la ultima registración del dia
            StrSql = "SELECT * FROM GTI_REGISTRACION WHERE ternro= " & NroTer
            StrSql = StrSql & " AND regfecha >= " & ConvFecha(fecdesde) & " and regfecha <= " & ConvFecha(fechasta)
            StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
            StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                rs.MoveLast
                fecha_desde = rs!regfecha
                hora_desde = rs!reghora
                Aux_Regnro = rs!Regnro
                
                ' FGZ - 30/03/2010 -----------------------------------------
                'If rs!regentsal = "E" Then
                '    Ultima_Es_Entrada = True
                'Else
                '    Ultima_Es_Entrada = False
                'End If
                
                If rs!regentsal = "E" Then
                    Ultima_Es_Entrada = True
                Else
                    If usaRelojEntradaSalida Then
                        Ultima_Es_Entrada = False
                    Else
                        If rs.RecordCount Mod 2 <> 0 Then
                            Ultima_Es_Entrada = True
                        Else
                            Ultima_Es_Entrada = False
                        End If
                    End If
                End If
                ' FGZ - 30/03/2010 -----------------------------------------
            Else
                'No hay nada para hacer
            End If
        
        
            If Ultima_Es_Entrada Then
                'Busco la primer registración del dia siguiente
                StrSql = "SELECT * FROM GTI_REGISTRACION WHERE ternro= " & NroTer
                StrSql = StrSql & " AND regfecha >= " & ConvFecha(DateAdd("d", 1, fecdesde)) & " and regfecha <= " & ConvFecha(DateAdd("d", 1, fechasta))
                StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
                StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
                OpenRecordset StrSql, rs
                If Not rs.EOF Then
                    rs.MoveFirst
                    fecha_hasta = rs!regfecha
                    hora_hasta = rs!reghora
                
                    'FGZ -30/03/2010 ---------------
                    'If rs!regentsal = "S" Then
                    'If rs!regentsal = "S" Or (EsNulo(rs!regentsal) And Not usaRelojEntradaSalida) then -mdf comentada
                    If rs!regentsal = "S" Or (EsNulo(rs!regentsal) And Not usaRelojEntradaSalida) Or (rs!regentsal = "E" And (rs!hornro = 21 Or rs!hornro = -121)) Then
                        'debo insertar una salidad a las 24:00 del dia anterior y una entrada a las 00 de este dia
                        
                        'Salida del dia anterior
                        StrSql = "INSERT INTO gti_registracion ("
                        StrSql = StrSql & "Ternro"
                        StrSql = StrSql & ",relnro"
                        StrSql = StrSql & ",regfecha"
                        StrSql = StrSql & ",fechagen"
                        StrSql = StrSql & ",reghora"
                        StrSql = StrSql & ",regestado"
                        StrSql = StrSql & ",regentsal"
                        StrSql = StrSql & ",regllamada"
                        StrSql = StrSql & ",regmanual"
                        StrSql = StrSql & ",hornro"
                        StrSql = StrSql & " )"
                        StrSql = StrSql & " VALUES ("
                        StrSql = StrSql & NroTer
                        StrSql = StrSql & "," & rs!relnro
                        StrSql = StrSql & "," & ConvFecha(DateAdd("d", -1, rs!regfecha))
                        StrSql = StrSql & "," & ConvFecha(p_fecha)
                        StrSql = StrSql & "," & "'2400'"
                        StrSql = StrSql & "," & "'I'"
                        StrSql = StrSql & "," & "'S'"
                        StrSql = StrSql & "," & "0"
                        StrSql = StrSql & "," & "-1"
                        If Not RegAuto_Permanentes Then
                            StrSql = StrSql & "," & "-121"
                        Else
                            StrSql = StrSql & "," & "21"
                        End If
                        StrSql = StrSql & " )"
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 5) & "Inserto una registracion a las 24:00."
                        End If
        
                        'entrada en este dia
                        StrSql = "INSERT INTO gti_registracion ("
                        StrSql = StrSql & "Ternro"
                        StrSql = StrSql & ",relnro"
                        StrSql = StrSql & ",regfecha"
                        StrSql = StrSql & ",fechagen"
                        StrSql = StrSql & ",reghora"
                        StrSql = StrSql & ",regestado"
                        StrSql = StrSql & ",regentsal"
                        StrSql = StrSql & ",regllamada"
                        StrSql = StrSql & ",regmanual"
                        StrSql = StrSql & ",hornro"
                        StrSql = StrSql & " )"
                        StrSql = StrSql & " VALUES ("
                        StrSql = StrSql & NroTer
                        StrSql = StrSql & "," & rs!relnro
                        StrSql = StrSql & "," & ConvFecha(rs!regfecha)
                        StrSql = StrSql & "," & ConvFecha(p_fecha)
                        StrSql = StrSql & "," & "'0000'"
                        StrSql = StrSql & "," & "'I'"
                        StrSql = StrSql & "," & "'E'"
                        StrSql = StrSql & "," & "0"
                        StrSql = StrSql & "," & "-1"
                        If Not RegAuto_Permanentes Then
                            StrSql = StrSql & "," & "-121"
                        Else
                            StrSql = StrSql & "," & "21"
                        End If
                        StrSql = StrSql & " )"
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 5) & "Inserto una registracion a las 00:00."
                        End If
                        
                        If Not RegAuto_Permanentes Then
                            'FGZ - 07/12/2010 - Se agregó una marca a la registracion de origen para que en el procesamiento del dia siguiente se cree la reg de entrada
                            StrSql = "UPDATE gti_registracion SET hornro = -1"
                            StrSql = StrSql & " WHERE regnro = " & Aux_Regnro
                            objConn.Execute StrSql, , adExecuteNoRecords
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 5) & "Marco la registracion para que el dias siguiente cree una registracion a las 00:00."
                            End If
                            'FGZ - 07/12/2010 - Se agregó una marca a la registracion de origen para que en el procesamiento del dia siguiente se cree la reg de entrada
                        End If
                    Else
                        'la primer registracion es una entrada, aparentemente se olvidó de registrar la salida
                        ' no puedo hacer nada
                    End If
                Else
                    'No hay nada para hacer
                End If
            Else
                'No hay nada que hacer
            End If
        End If
    End If
End If
    

'Cierro todo
If rs.State = adStateOpen Then rs.Close
Set rs = Nothing
End Sub



Sub Politica30(p_fecha As Date, nro_tercero As Long, Nro_Turno As Long, deb As Boolean, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Sin Registraciones
' Autor: ?
' Ultima modificacion: FGZ - 28/07/2003
' --------------------------------------------------------------
Dim rs_Dia As New ADODB.Recordset
Dim rs As New ADODB.Recordset


Dim i As Integer
Dim TotHor As Single
Dim Tdias As Integer
Dim Tmin As Integer
Dim Hora_Ausencia As Integer
Dim canthoras As Single
Dim fec_ent As Date
Dim hor_ent As String
Dim Es_Turno_Libre As Boolean

Dim HoraConvenio As Integer
Dim Texto As String
Dim Opcion As Integer
Dim TotHorHHMM As String
Dim AN As String

Call SetearParametrosPolitica(Detalle, ok)
HoraConvenio = st_TipoHora1
AN = IIf(Not EsNulo(st_Anormalidad), st_Anormalidad, 8) 'Codigo de anormalidad a generar

If depurar Then
    Flog.writeline Espacios(Tabulador * 3) & "Version: " & subn
    Flog.writeline Espacios(Tabulador * 3) & "  Tipo de hora a generar: " & HoraConvenio
    Flog.writeline Espacios(Tabulador * 3) & "  Codigo de Anormalidad: " & AN
End If

' No tiene mucha importancia el texto porque solo se usa para la traza
Texto = "Ausencia"

Select Case subn
Case 3:
    'Call Politica30v1(p_fecha, nro_tercero, Nro_Turno, Nro_Dia, HoraConvenio)
     If (Tipo_de_Justificacion = 3) Then  'MDF
      Call Politica30v1(p_fecha, nro_tercero, Nro_Turno, Nro_Dia, HoraConvenio, AN)
     End If
    Exit Sub
End Select



'' Parámetros
'Select Case subn
'Case 1          ' 030sraus
''Genera Horario Ausente para el empleado sin registraciones.
'    HoraConvenio = 2
'    Texto = "Ausencia"
'
'Case 2          ' 030srpre
'' Genera presente
'    HoraConvenio = 1
'    Texto = "Obligatoria"
'
'Case 3
'    HoraConvenio = 2
'    Call Politica30v1(p_fecha, nro_tercero, nro_turno, Nro_dia, HoraConvenio)
'    Exit Sub
'
'End Select
    

'Abro cursor wf_dia
' FGZ -12/11/2003
If TipoBD = 4 Then
    StrSql = "SELECT * FROM " & TTempWFDia & " WHERE (hora is not null) and (entrada is not null) " & _
             " ORDER BY codigo"
Else
    StrSql = "SELECT * FROM " & TTempWFDia & " WHERE (hora is not null) and (entrada is not null) " & _
             " AND (hora is not null) ORDER BY codigo"
End If
rs_Dia.Open StrSql, objConn
If Not rs_Dia.EOF Then rs_Dia.MoveFirst

'Por cada registro no vacio en wf_dia
Do While Not rs_Dia.EOF
    
    Es_Turno_Libre = False
    
    If rs_Dia!entrada Then
        fec_ent = rs_Dia!Fecha
        hor_ent = rs_Dia!Hora
        ' Next
        GoTo NextProgress
    
    Else
'       RUN gtir2f01.p(fec-ent, hor-ent, wf-dia.fecha, wf-dia.hora, output tdias, output thoras, output tmin).
        Call objFechasHoras.RestaHs(fec_ent, hor_ent, rs_Dia!Fecha, rs_Dia!Hora, Tdias, Thoras, Tmin)
        TotHor = Thoras + (Tmin / 60)
        If TotHor <= 0 Then
            ' Next
            GoTo NextProgress
        End If
        
        StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = " & HoraConvenio & _
        " AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
        rs.Open StrSql, objConn
       
        If Not rs.EOF Then
            Hora_Ausencia = rs!thnro
        Else
            'Entrada en la traza
            If depurar Then
                GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora " & Texto & " para el Turno:", Str(Nro_Turno)
            End If
            
            '/* Deberia salir de todo el procedimiento */
            GoTo CierroTodo
        End If
        
        'Call ValidarTipoDeHora(hora_ausencia, nro_turno, tipo_hora)
        ' Entrada en horario cumplido
        TotHorHHMM = CHoras(TotHor, 60)
        
        StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
        "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
        "normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & TotHor & "," & _
        ConvFecha(fec_ent) & "," & ConvFecha(rs_Dia!Fecha) & "," & CInt(False) & "," & CInt(True) & "," & _
        nro_tercero & "," & Hora_Ausencia & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
        ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",'" & hor_ent & "','" & rs_Dia!Hora & "'," & AN & "," & AN & ",' ')"
        objConn.Execute StrSql, , adExecuteNoRecords
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & Hora_Ausencia & "- Cantidad: " & TotHor & " hs."
        End If
        rs.Close
    End If

NextProgress:
    If Not rs_Dia.EOF Then
        rs_Dia.MoveNext
    End If
Loop
If rs.State = adStateOpen Then rs.Close

'/* Genera Horario Ausente para Turnos Libres - La tabla wf-dia no tiene datos */

If Es_Turno_Libre Then

'    FIND FIRST wf-dia NO-LOCK.
    rs_Dia.MoveFirst

'    FIND FIRST per.gti_dias WHERE per.gti_dias.dianro = wf-dia.codigo NO-LOCK.
    StrSql = "SELECT * FROM gti_dias WHERE dianro = " & rs_Dia!Codigo
    rs.Open StrSql, objConn
    canthoras = rs!diacanthoras
    
    ' Como no lo necesito mas lo cierro
    rs.Close
    
    StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = " & HoraConvenio & _
    " AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
    rs.Open StrSql, objConn
       
    If Not rs.EOF Then
        Hora_Ausencia = rs!thnro
    Else
        'Entrada en la traza
        'If deb Then GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora " & Texto & " para el Turno:", Str(Nro_Turno)
        'FGZ - 29/08/2006
        If depurar Then
            GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora " & Texto & " para el Turno:", Str(Nro_Turno)
        End If
        
        ' Salgo del procedimiento cerrando los recordsets
        GoTo CierroTodo
    End If

    'Call ValidarTipoDeHora(hora_ausencia, nro_turno, tipo_hora)
    ' Entrada en horario cumplido
    TotHorHHMM = CHoras(canthoras, 60)
    
    StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
    "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen," & _
    "normnro,normnro2) VALUES (" & TotHorHHMM & "," & canthoras & "," & _
    ConvFecha(rs_Dia!Fecha) & "," & ConvFecha(rs_Dia!Fecha) & "," & "0,1," & _
    nro_tercero & "," & Hora_Ausencia & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
    ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",8,8)"
    objConn.Execute StrSql, , adExecuteNoRecords
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & Hora_Ausencia & "- Cantidad: " & canthoras & " hs."
    End If

End If

CierroTodo:
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
    If rs_Dia.State = adStateOpen Then rs_Dia.Close
    Set rs_Dia = Nothing

End Sub



Sub Politica30v1(p_fecha As Date, nro_tercero As Long, Nro_Turno As Long, Nro_Dia As Integer, HoraConvenio As Integer, ByVal AN As String)
' --------------------------------------------------------------
' Descripcion: Sin Registraciones.
' Autor: ?
' Ultima modificacion: FGZ - 07/10/2003
' --------------------------------------------------------------
Dim rs_Dia As New ADODB.Recordset
Dim rs As New ADODB.Recordset

Dim HDesde As String
Dim HHasta As String
Dim TotHor As Single
Dim Hora_Ausencia As Integer
    
Dim HoraEntrada As String
Dim HoraSalida As String
Dim TotHorHHMM As String

StrSql = "SELECT * FROM gti_dias WHERE dianro = " & Nro_Dia
rs_Dia.Open StrSql, objConn
If Not rs_Dia.EOF Then
    TotHor = rs_Dia!diacanthoras
Else
    GoTo CierroTodo
End If

StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = " & HoraConvenio & _
" AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
rs.Open StrSql, objConn
       
If Not rs.EOF Then
    Hora_Ausencia = rs!thnro
Else
    GoTo CierroTodo
End If

'FGZ - 07/10/2003
HoraEntrada = E1
If S3 <> "0000" And Not IsNull(S3) And S3 <> "" Then
    HoraSalida = S3
Else
    If S2 <> "0000" And Not IsNull(S2) And S2 <> "" Then
        HoraSalida = S2
    Else
        HoraSalida = S1
    End If
End If

TotHorHHMM = CHoras(TotHor, 60)
StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,horhoradesde, horhorahasta,hormanual," & _
         "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen," & _
         "normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Round(TotHor, Presicion_HC) & "," & _
         ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",'" & HoraEntrada & "','" & HoraSalida & "'," & CInt(False) & "," & CInt(True) & "," & _
         nro_tercero & "," & Hora_Ausencia & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
         ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & "," & AN & "," & AN & ",' ')"
         objConn.Execute StrSql, , adExecuteNoRecords
         If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & Hora_Ausencia & "- Cantidad: " & TotHor & " hs."
        End If

CierroTodo:
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
    If rs_Dia.State = adStateOpen Then rs_Dia.Close
    Set rs_Dia = Nothing

End Sub


Sub Politica35(p_fecha As Date, nro_tercero As Long, Nro_Turno As Long, deb As Boolean, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Sin Registraciones en dias feriados y no Francos
' Autor: FGZ - 27/11/2006
' Ultima modificacion:
' --------------------------------------------------------------
Dim rs_Dia As New ADODB.Recordset
Dim rs As New ADODB.Recordset

Dim i As Integer
Dim TotHor As Single
Dim Tdias As Integer
Dim Tmin As Integer
Dim Hora_Ausencia As Integer
Dim canthoras As Single
Dim fec_ent As Date
Dim hor_ent As String
Dim Es_Turno_Libre As Boolean

Dim HoraConvenio As Integer
Dim Texto As String
Dim Opcion As Integer
Dim TotHorHHMM As String

'Versiones:
'   1: Genera Tipo de Hora configurada en el turno (Generalmente Ausencia) para el empleado sin registraciones.
'       Cantidad de Horas   ==> segun diferencia entre E/S teoricas del dia.
'       Anormalidad         ==> (8) Ausencia
'       Obs                 ==> El parametro de la politica que se configura es tipo de hora interna

'   2: Genera Tipo de Hora configurada en el turno (Generalmente Ausencia) para el empleado sin registraciones.
'       Cantidad de Horas   ==> segun horas obligatorias del dia.
'       Anormalidad         ==> (8) Ausencia
'       Obs                 ==> El parametro de la politica que se configura es tipo de hora interna


    Call SetearParametrosPolitica(Detalle, ok)
    HoraConvenio = st_TipoHora1
    Opcion = st_Opcion
    ok = True

    'Busco  el tipo de Hora a generar
    StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = " & HoraConvenio
    StrSql = StrSql & " AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        Hora_Ausencia = rs!thnro
    Else
        If depurar Then
            GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora " & Texto & " para el Turno:", Str(Nro_Turno)
        End If
        GoTo CierroTodo
    End If


Texto = CStr(HoraConvenio)  '"Ausencia"
Select Case Opcion
Case 2:
    Call Politica35v1(p_fecha, nro_tercero, Nro_Turno, Nro_Dia, HoraConvenio)
    Exit Sub
End Select

If TipoBD = 4 Then
    StrSql = "SELECT * FROM " & TTempWFDia & " WHERE (hora is not null) and (entrada is not null) " & _
             " ORDER BY codigo"
Else
    StrSql = "SELECT * FROM " & TTempWFDia & " WHERE (hora is not null) and (entrada is not null) " & _
             " AND (hora is not null) ORDER BY codigo"
End If
OpenRecordset StrSql, rs_Dia

'Por cada registro no vacio en wf_dia
Do While Not rs_Dia.EOF
    Es_Turno_Libre = False
    If rs_Dia!entrada Then
        fec_ent = rs_Dia!Fecha
        hor_ent = rs_Dia!Hora
        GoTo NextProgress
    Else
        Call objFechasHoras.RestaHs(fec_ent, hor_ent, rs_Dia!Fecha, rs_Dia!Hora, Tdias, Thoras, Tmin)
        TotHor = Thoras + (Tmin / 60)
        If TotHor = 0 Then
            GoTo NextProgress
        End If
        
        'Entrada en horario cumplido
        TotHorHHMM = CHoras(TotHor, 60)
        
        StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
        "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
        "normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & TotHor & "," & _
        ConvFecha(fec_ent) & "," & ConvFecha(rs_Dia!Fecha) & "," & CInt(False) & "," & CInt(True) & "," & _
        nro_tercero & "," & Hora_Ausencia & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
        ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",'" & hor_ent & "','" & rs_Dia!Hora & "',8,8,' ')"
        objConn.Execute StrSql, , adExecuteNoRecords
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & Hora_Ausencia & "- Cantidad: " & TotHor & " hs."
        End If
    End If

NextProgress:
    If Not rs_Dia.EOF Then
        rs_Dia.MoveNext
    End If
Loop
If rs.State = adStateOpen Then rs.Close

'Genera Horario Ausente para Turnos Libres - La tabla wf-dia no tiene datos
If Es_Turno_Libre Then
    rs_Dia.MoveFirst

    StrSql = "SELECT * FROM gti_dias WHERE dianro = " & rs_Dia!Codigo
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        canthoras = rs!diacanthoras
    Else
        canthoras = 0
        'Esto no deberia ocurrir pero ....
    End If
    
    'Entrada en horario cumplido
    TotHorHHMM = CHoras(canthoras, 60)
    
    StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
    "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen," & _
    "normnro,normnro2) VALUES (" & TotHorHHMM & "," & canthoras & "," & _
    ConvFecha(rs_Dia!Fecha) & "," & ConvFecha(rs_Dia!Fecha) & "," & "0,1," & _
    nro_tercero & "," & Hora_Ausencia & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
    ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",8,8)"
    objConn.Execute StrSql, , adExecuteNoRecords
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & Hora_Ausencia & "- Cantidad: " & canthoras & " hs."
    End If

End If

CierroTodo:
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
    If rs_Dia.State = adStateOpen Then rs_Dia.Close
    Set rs_Dia = Nothing
End Sub


Sub Politica35v1(p_fecha As Date, nro_tercero As Long, Nro_Turno As Long, Nro_Dia As Integer, HoraConvenio As Integer)
' --------------------------------------------------------------
' Descripcion: Sin Registraciones en dias feriados y no Francos.
' Autor: FGZ - 27/11/2006
' Ultima modificacion:
' --------------------------------------------------------------
Dim rs_Dia As New ADODB.Recordset
Dim rs As New ADODB.Recordset
Dim HDesde As String
Dim HHasta As String
Dim TotHor As Single
Dim Hora_Ausencia As Integer
Dim HoraEntrada As String
Dim HoraSalida As String
Dim TotHorHHMM As String

StrSql = "SELECT * FROM gti_dias WHERE dianro = " & Nro_Dia
OpenRecordset StrSql, rs_Dia
If Not rs_Dia.EOF Then
    TotHor = rs_Dia!diacanthoras
Else
    GoTo CierroTodo
End If

StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = " & HoraConvenio
StrSql = StrSql & " AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
OpenRecordset StrSql, rs
If Not rs.EOF Then
    Hora_Ausencia = rs!thnro
Else
    GoTo CierroTodo
End If

HoraEntrada = E1
If S3 <> "0000" And Not IsNull(S3) And S3 <> "" Then
    HoraSalida = S3
Else
    If S2 <> "0000" And Not IsNull(S2) And S2 <> "" Then
        HoraSalida = S2
    Else
        HoraSalida = S1
    End If
End If

TotHorHHMM = CHoras(TotHor, 60)
StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,horhoradesde, horhorahasta,hormanual," & _
         "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen," & _
         "normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Round(TotHor, Presicion_HC) & "," & _
         ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",'" & HoraEntrada & "','" & HoraSalida & "'," & CInt(False) & "," & CInt(True) & "," & _
         nro_tercero & "," & Hora_Ausencia & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
         ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",8,8,' ')"
         objConn.Execute StrSql, , adExecuteNoRecords
         If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & Hora_Ausencia & "- Cantidad: " & TotHor & " hs."
        End If

CierroTodo:
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
    If rs_Dia.State = adStateOpen Then rs_Dia.Close
    Set rs_Dia = Nothing
End Sub


Sub Politica40(p_fecha As Date, fecharegistracion As Date, HoraRegistracion As String, nro_tercero As Long, Nro_Turno As Long, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Genera Horario teórico para el empleado con una registracion.
' Autor: ?
' Ultima modificacion: FGZ - 09/06/2006
' Ultima modificacion: FGZ - 10/05/2007 - Busco cual es la registracio por la cual se generan las horas para marcarla como procesada
' --------------------------------------------------------------
Dim rs As New ADODB.Recordset
Dim rs_Dia As New ADODB.Recordset
Dim rs_reg As New ADODB.Recordset

Dim i As Integer
Dim TotHor As Single
Dim dif_ent    As Integer
Dim dif_sal    As Integer
Dim Tdias      As Integer
Dim Thoras     As Integer
Dim Tmin       As Integer
Dim fec_ent    As Date
Dim hor_ent    As String
Dim fec_sal    As Date
Dim hor_sal    As String
Dim hora_oblig As Integer
Dim Hor_Desde  As String
Dim Hor_Hasta  As String
Dim fec_desde  As Date
Dim fec_hasta  As Date
Dim canthoras As Single
Dim Regnro As Long

Dim TamVent As String
Dim ok As Boolean
Dim Opcion As Integer
Dim inserto As Boolean
Dim entrada As Boolean
Dim fecres As Date
Dim horres As String
Dim TotHorHHMM As String


Call SetearParametrosPolitica(Detalle, ok)
If Not ok Then
    TamVent = "0800"
    Opcion = 1
Else
    TamVent = st_TamañoVentana
    Opcion = st_Opcion
End If


Select Case Opcion
Case 1: 'Es la estandar. desde la primer registracion del dia hasta  hora de la reg + TamVent
    'FGZ - 09/06/2006
    'cargo la primer registracion que encuentro en
    If Not EsNulo(E1) Then
        HoraRegistracion = E1
    Else
        If Not EsNulo(S1) Then
            HoraRegistracion = S1
        Else
            If Not EsNulo(E2) Then
                HoraRegistracion = E2
            Else
                If Not EsNulo(S2) Then
                    HoraRegistracion = S2
                Else
                    If Not EsNulo(E3) Then
                        HoraRegistracion = E3
                    Else
                        If Not EsNulo(S3) Then
                            HoraRegistracion = S3
                        Else
                        End If
                    End If
                End If
            End If
        End If
    End If
    
    
    
    StrSql = "SELECT * FROM gti_turno WHERE turnro= " & Nro_Turno
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs
    If rs.EOF Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  No se encontró el turno " & Nro_Turno
        End If
        Exit Sub
    End If
    
    
    'Abro cursor wf_dia
    StrSql = "SELECT * FROM " & TTempWFDia & " ORDER BY codigo"
    If rs_Dia.State = adStateOpen Then rs_Dia.Close
    OpenRecordset StrSql, rs_Dia
    If Not rs_Dia.EOF Then
        If (rs!TipoTurno = 1) Or (rs!TipoTurno = 2) Then    'Normal o Rotativo
            Hor_Desde = rs_Dia!Hora
            fec_desde = rs_Dia!Fecha
            rs_Dia.MoveLast
            Hor_Hasta = rs_Dia!Hora
            fec_hasta = rs_Dia!Fecha
        
            
            Call objFechasHoras.RestaHs(fec_desde, Hor_Desde, fec_hasta, Hor_Hasta, Tdias, Thoras, Tmin)
            TotHor = Thoras + (Tmin / 60)
            If TotHor = 0 Then
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  Cantidad de horas en 0"
                End If
                GoTo CierroTodo
            End If
        
            'Horas Obligatorias
            StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 1 " & _
            " AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
                   
            If Not rs.EOF Then
                hora_oblig = rs!thnro
            Else
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  No esta configurado el Tipo de Hora Obligatoria para el Turno: " & Nro_Turno
                    GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora Obligatoria para el Turno:", Str(Nro_Turno)
                End If
                GoTo CierroTodo
            End If
                
            If TotHor > 0 Then
                
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                'Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
                Fecha_Generacion = p_fecha
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                
                TotHorHHMM = CHoras(TotHor, 60)
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                         "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                         "thnro,turnro,Empleg,horfecrep,horfecgen) VALUES (" & _
                         TotHorHHMM & "," & TotHor & "," & ConvFecha(fec_desde) & ",' '," & ConvFecha(fec_hasta) & ",'" & Hor_Desde & "','" & _
                         Hor_Hasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & ",3,3," & _
                         Empleado.Ternro & "," & hora_oblig & "," & Nro_Turno & "," & _
                         Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & hora_oblig & "- Cantidad: " & TotHor & " hs."
                End If
                
                'FGZ - 10/05/2007 - Busco cual es la registracio por la cual se generan las horas para marcarla como procesada
                StrSql = "SELECT regnro FROM " & TTempWFTurno & " WHERE evenro = 2 "
                OpenRecordset StrSql, rs_reg
                If Not rs_reg.EOF Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs_reg!Regnro
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & " ****  No se pudo marcar la registracion como procesado."
                    End If
                End If
                'FGZ - 10/05/2007 - Busco cual es la registracio por la cual se generan las horas para marcarla como procesada
            Else
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  Cantidad de horas = 0. No se inserta."
                End If
            End If
            
        Else    'Para turno Libre
            StrSql = "SELECT * FROM " & TTempWFDia & " ORDER BY codigo"
            If rs_Dia.State = adStateOpen Then rs_Dia.Close
            OpenRecordset StrSql, rs_Dia
        
            Hor_Desde = rs_Dia!Hora
            fec_desde = rs_Dia!Fecha
            rs_Dia.MoveLast
            Hor_Hasta = rs_Dia!Hora
            fec_hasta = rs_Dia!Fecha
        
            StrSql = "SELECT * FROM gti_dias WHERE dianro = " & rs_Dia!Codigo
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                TotHor = rs!diacanthoras
            Else
                TotHor = 0
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "Configuracion del día no encontrado: " & rs_Dia!Codigo
                End If
            End If
            
            StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 1 " & _
            " AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            
            If Not rs.EOF Then
                hora_oblig = rs!thnro
            Else
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  No esta configurado el Tipo de Hora Obligatoria para el Turno: " & Nro_Turno
                    GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora Obligatoria para el Turno:", Str(Nro_Turno)
                End If
                GoTo CierroTodo
            End If
        
            If TotHor > 0 Then
            
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                'Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
                Fecha_Generacion = p_fecha
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                TotHorHHMM = CHoras(TotHor, 60)
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                         "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                         "thnro,turnro,Empleg,horfecrep,horfecgen) VALUES (" & _
                         TotHorHHMM & "," & TotHor & "," & ConvFecha(fec_desde) & ",' '," & ConvFecha(fec_hasta) & ",'" & Hor_Desde & "','" & _
                         Hor_Hasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & ",3,3," & _
                         Empleado.Ternro & "," & hora_oblig & "," & Nro_Turno & "," & _
                         Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & hora_oblig & "- Cantidad: " & canthoras & " hs."
                End If
                
                'FGZ - 10/05/2007 - Busco cual es la registracio por la cual se generan las horas para marcarla como procesada
                StrSql = "SELECT regnro FROM " & TTempWFTurno & " WHERE evenro = 2 "
                OpenRecordset StrSql, rs_reg
                If Not rs_reg.EOF Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs_reg!Regnro
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & " ****  No se pudo marcar la registracion como procesado."
                    End If
                End If
                'FGZ - 10/05/2007 - Busco cual es la registracio por la cual se generan las horas para marcarla como procesada
            Else
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  no hay datos"
                End If
            End If
        End If
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  Cantidad de horas = 0. No se inserta."
        End If
    End If
Case 2: 'Desde la primer registracion del dia hasta  ST o ET segun si es entrada o salida y teniendo en cuenta que el harario cortado
    'cargo la primer registracion que encuentro en
    If Not EsNulo(E1) Then
        HoraRegistracion = E1
    Else
        If Not EsNulo(S1) Then
            HoraRegistracion = S1
        Else
            If Not EsNulo(E2) Then
                HoraRegistracion = E2
            Else
                If Not EsNulo(S2) Then
                    HoraRegistracion = S2
                Else
                    If Not EsNulo(E3) Then
                        HoraRegistracion = E3
                    Else
                        If Not EsNulo(S3) Then
                            HoraRegistracion = S3
                        Else
                        End If
                    End If
                End If
            End If
        End If
    End If
    
    
    
    StrSql = "SELECT * FROM gti_turno WHERE turnro= " & Nro_Turno
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs
    If rs.EOF Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  No se encontró el turno " & Nro_Turno
        End If
        Exit Sub
    End If
    
    
    'Abro cursor wf_dia
    StrSql = "SELECT * FROM " & TTempWFDia & " ORDER BY codigo"
    OpenRecordset StrSql, rs_Dia
    If Not rs_Dia.EOF Then
        If (rs!TipoTurno = 1) Or (rs!TipoTurno = 2) Then    'Normal o Rotativo
            Do While Not rs_Dia.EOF
                If rs_Dia!entrada Then
                    Hor_Desde = rs_Dia!Hora
                    fec_desde = rs_Dia!Fecha
                Else
                    Hor_Hasta = rs_Dia!Hora
                    fec_hasta = rs_Dia!Fecha
                
                    Call objFechasHoras.RestaHs(fec_desde, Hor_Desde, fec_hasta, Hor_Hasta, Tdias, Thoras, Tmin)
                    TotHor = TotHor + (Thoras + (Tmin / 60))
                End If
                
                rs_Dia.MoveNext
            Loop
            
            If TotHor = 0 Then
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  Cantidad de horas en 0"
                End If
                GoTo CierroTodo
            End If
        
            'Horas Obligatorias
            StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 1 " & _
            " AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                hora_oblig = rs!thnro
            Else
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  No esta configurado el Tipo de Hora Obligatoria para el Turno: " & Nro_Turno
                    GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora Obligatoria para el Turno:", Str(Nro_Turno)
                End If
                GoTo CierroTodo
            End If
                
            If TotHor > 0 Then
            
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                'Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
                Fecha_Generacion = p_fecha
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                
                TotHorHHMM = CHoras(TotHor, 60)
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                         "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                         "thnro,turnro,Empleg,horfecrep,horfecgen) VALUES (" & _
                         TotHorHHMM & "," & TotHor & "," & ConvFecha(fec_desde) & ",' '," & ConvFecha(fec_hasta) & ",'" & Hor_Desde & "','" & _
                         Hor_Hasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & ",3,3," & _
                         Empleado.Ternro & "," & hora_oblig & "," & Nro_Turno & "," & _
                         Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & hora_oblig & "- Cantidad: " & TotHor & " hs."
                End If
                
                'FGZ - 10/05/2007 - Busco cual es la registracio por la cual se generan las horas para marcarla como procesada
                StrSql = "SELECT regnro FROM " & TTempWFTurno & " WHERE evenro = 2 "
                OpenRecordset StrSql, rs_reg
                If Not rs_reg.EOF Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs_reg!Regnro
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & " ****  No se pudo marcar la registracion como procesado."
                    End If
                End If
                'FGZ - 10/05/2007 - Busco cual es la registracio por la cual se generan las horas para marcarla como procesada
            Else
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  Cantidad de horas = 0. No se inserta."
                End If
            End If
            
        Else    'Para turno Libre
            StrSql = "SELECT * FROM " & TTempWFDia & " ORDER BY codigo"
            If rs_Dia.State = adStateOpen Then rs_Dia.Close
            OpenRecordset StrSql, rs_Dia
        
            Hor_Desde = rs_Dia!Hora
            fec_desde = rs_Dia!Fecha
            rs_Dia.MoveLast
            Hor_Hasta = rs_Dia!Hora
            fec_hasta = rs_Dia!Fecha
        
            StrSql = "SELECT * FROM gti_dias WHERE dianro = " & rs_Dia!Codigo
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                TotHor = rs!diacanthoras
            Else
                TotHor = 0
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "Configuracion del día no encontrado: " & rs_Dia!Codigo
                End If
            End If
            
            StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 1 " & _
            " AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            
            If Not rs.EOF Then
                hora_oblig = rs!thnro
            Else
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  No esta configurado el Tipo de Hora Obligatoria para el Turno: " & Nro_Turno
                    GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora Obligatoria para el Turno:", Str(Nro_Turno)
                End If
                GoTo CierroTodo
            End If
        
            If TotHor > 0 Then
            
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                'Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
                Fecha_Generacion = p_fecha
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                TotHorHHMM = CHoras(TotHor, 60)
                
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                         "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                         "thnro,turnro,Empleg,horfecrep,horfecgen) VALUES (" & _
                         TotHorHHMM & "," & TotHor & "," & ConvFecha(fec_desde) & ",' '," & ConvFecha(fec_hasta) & ",'" & Hor_Desde & "','" & _
                         Hor_Hasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & ",3,3," & _
                         Empleado.Ternro & "," & hora_oblig & "," & Nro_Turno & "," & _
                         Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & hora_oblig & "- Cantidad: " & canthoras & " hs."
                End If
                
                'FGZ - 10/05/2007 - Busco cual es la registracio por la cual se generan las horas para marcarla como procesada
                StrSql = "SELECT regnro FROM " & TTempWFTurno & " WHERE evenro = 2 "
                OpenRecordset StrSql, rs_reg
                If Not rs_reg.EOF Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs_reg!Regnro
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & " ****  No se pudo marcar la registracion como procesado."
                    End If
                End If
                'FGZ - 10/05/2007 - Busco cual es la registracio por la cual se generan las horas para marcarla como procesada
            Else
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  no hay datos"
                End If
            End If
        End If
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  Cantidad de horas = 0. No se inserta."
        End If
    End If
Case 3: 'Desde la ET hasta la ST definido para el dia
    'Horas Obligatorias
    StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 1 " & _
    " AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        hora_oblig = rs!thnro
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  No esta configurado el Tipo de Hora Obligatoria para el Turno: " & Nro_Turno
            GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora Obligatoria para el Turno:", Str(Nro_Turno)
        End If
        GoTo CierroTodo
    End If
    
    'Busco el turno
    StrSql = "SELECT * FROM gti_turno WHERE turnro= " & Nro_Turno
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs
    If rs.EOF Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  No se encontró el turno " & Nro_Turno
        End If
        Exit Sub
    End If
    
    inserto = False
    'Abro cursor wf_dia
    StrSql = "SELECT * FROM " & TTempWFDia & " ORDER BY codigo"
    OpenRecordset StrSql, rs_Dia
    If Not rs_Dia.EOF Then
        If (rs!TipoTurno = 1) Or (rs!TipoTurno = 2) Then    'Normal o Rotativo
            Do While Not rs_Dia.EOF
                If rs_Dia!entrada Then
                    Hor_Desde = rs_Dia!Hora
                    fec_desde = rs_Dia!Fecha
                Else
                    Hor_Hasta = rs_Dia!Hora
                    fec_hasta = rs_Dia!Fecha
                
                    Call objFechasHoras.RestaHs(fec_desde, Hor_Desde, fec_hasta, Hor_Hasta, Tdias, Thoras, Tmin)
                    TotHor = TotHor + (Thoras + (Tmin / 60))
                
                    If TotHor > 0 Then
                    
                        'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                        'Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
                        Fecha_Generacion = p_fecha
                        'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                        TotHorHHMM = CHoras(TotHor, 60)
                        
                        StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                                 "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                                 "thnro,turnro,Empleg,horfecrep,horfecgen) VALUES (" & _
                                 TotHorHHMM & "," & TotHor & "," & ConvFecha(fec_desde) & ",' '," & ConvFecha(fec_hasta) & ",'" & Hor_Desde & "','" & _
                                 Hor_Hasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & ",3,3," & _
                                 Empleado.Ternro & "," & hora_oblig & "," & Nro_Turno & "," & _
                                 Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                        inserto = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & hora_oblig & "- Cantidad: " & TotHor & " hs."
                        End If
                        
                    Else
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & "  Cantidad de horas = 0. No se inserta."
                        End If
                    End If
                
                End If
                rs_Dia.MoveNext
            Loop
            
            If inserto Then
                'Busco cual es la registracio por la cual se generan las horas para marcarla como procesada
                StrSql = "SELECT regnro FROM " & TTempWFTurno & " WHERE evenro = 2 "
                OpenRecordset StrSql, rs_reg
                If Not rs_reg.EOF Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs_reg!Regnro
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & " ****  No se pudo marcar la registracion como procesado."
                    End If
                End If
            End If
        Else    'Para turno Libre
            StrSql = "SELECT * FROM " & TTempWFDia & " ORDER BY codigo"
            OpenRecordset StrSql, rs_Dia
        
            Hor_Desde = rs_Dia!Hora
            fec_desde = rs_Dia!Fecha
            rs_Dia.MoveLast
            Hor_Hasta = rs_Dia!Hora
            fec_hasta = rs_Dia!Fecha
        
            StrSql = "SELECT * FROM gti_dias WHERE dianro = " & rs_Dia!Codigo
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                TotHor = rs!diacanthoras
            Else
                TotHor = 0
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "Configuracion del día no encontrado: " & rs_Dia!Codigo
                End If
            End If
            
            StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 1 " & _
            " AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
            OpenRecordset StrSql, rs
            
            If Not rs.EOF Then
                hora_oblig = rs!thnro
            Else
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  No esta configurado el Tipo de Hora Obligatoria para el Turno: " & Nro_Turno
                    GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora Obligatoria para el Turno:", Str(Nro_Turno)
                End If
                GoTo CierroTodo
            End If
        
            If TotHor > 0 Then
            
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                'Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
                Fecha_Generacion = p_fecha
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                TotHorHHMM = CHoras(TotHor, 60)
                
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                         "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                         "thnro,turnro,Empleg,horfecrep,horfecgen) VALUES (" & _
                         TotHorHHMM & "," & TotHor & "," & ConvFecha(fec_desde) & ",' '," & ConvFecha(fec_hasta) & ",'" & Hor_Desde & "','" & _
                         Hor_Hasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & ",3,3," & _
                         Empleado.Ternro & "," & hora_oblig & "," & Nro_Turno & "," & _
                         Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & hora_oblig & "- Cantidad: " & canthoras & " hs."
                End If
                
                'FGZ - 10/05/2007 - Busco cual es la registracio por la cual se generan las horas para marcarla como procesada
                StrSql = "SELECT regnro FROM " & TTempWFTurno & " WHERE evenro = 2 "
                OpenRecordset StrSql, rs_reg
                If Not rs_reg.EOF Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs_reg!Regnro
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & " ****  No se pudo marcar la registracion como procesado."
                    End If
                End If
                'FGZ - 10/05/2007 - Busco cual es la registracio por la cual se generan las horas para marcarla como procesada
            Else
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  no hay datos"
                End If
            End If
        End If
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  Cantidad de horas = 0. No se inserta."
        End If
    End If

Case 4: 'Desde la primer registracion y por la cantidad de hs configurada
    'Busco Horas Obligatorias
    StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 1 " & _
    " AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        hora_oblig = rs!thnro
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  No esta configurado el Tipo de Hora Obligatoria para el Turno: " & Nro_Turno
            GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora Obligatoria para el Turno:", Str(Nro_Turno)
        End If
        GoTo CierroTodo
    End If
    
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Busco la registracion"
    End If
    
        
    StrSql = "SELECT * FROM " & TTempWFTurno
    StrSql = StrSql & " ORDER BY fecha ASC, hora ASC"
    OpenRecordset StrSql, rs_Dia
    If Not rs_Dia.EOF Then
        entrada = rs_Dia!entrada
        
        StrSql = "SELECT * FROM gti_registracion "
        StrSql = StrSql & " WHERE regnro = " & rs_Dia!Regnro
        OpenRecordset StrSql, rs_reg
        If Not rs_reg.EOF Then
            If UCase(rs_reg!regentsal) = "E" Then
                entrada = True
            Else
                If UCase(rs_reg!regentsal) = "S" Then
                    entrada = False
                End If
            End If
        End If
        If entrada Then
            Hor_Desde = rs_Dia!Hora
            fec_desde = rs_Dia!Fecha
            entrada = True
        Else
            Hor_Hasta = rs_Dia!Hora
            fec_hasta = rs_Dia!Fecha
            entrada = False
        End If
    End If
    
    If entrada Then
        'si la registracion es de entrada
        Call objFechasHoras.SumoHoras(fec_desde, Hor_Desde, TamVent, fecres, horres)
        If Not objFechasHoras.ValidarHora(horres) Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "Hora Invalida " & horres
            End If
            Exit Sub
        End If
        fec_hasta = fecres
        Hor_Hasta = horres
    Else
        'si la registracion es de salida
        Call objFechasHoras.RestaXHoras(fec_hasta, Hor_Hasta, TamVent, fecres, horres)
        If Not objFechasHoras.ValidarHora(horres) Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "Hora Invalida " & horres
            End If
            Exit Sub
        End If
        If Hor_Desde > Hor_Hasta Then
           fec_desde = fecres - 1
        Else
            fec_desde = fecres
        End If
        Hor_Desde = horres
    End If
    
    Call objFechasHoras.RestaHs(fec_desde, Hor_Desde, fec_hasta, Hor_Hasta, Tdias, Thoras, Tmin)
    TotHor = Thoras + (Tmin / 60)
    
    inserto = False
    If TotHor > 0 Then
    
        'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
        'Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
        Fecha_Generacion = p_fecha
        'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
        TotHorHHMM = CHoras(TotHor, 60)
        
        StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                 "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                 "thnro,turnro,Empleg,horfecrep,horfecgen) VALUES (" & _
                 TotHorHHMM & "," & TotHor & "," & ConvFecha(fec_desde) & ",' '," & ConvFecha(fec_hasta) & ",'" & Hor_Desde & "','" & _
                 Hor_Hasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & ",3,3," & _
                 Empleado.Ternro & "," & hora_oblig & "," & Nro_Turno & "," & _
                 Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        inserto = True
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & hora_oblig & "- Cantidad: " & TotHor & " hs."
        End If
        
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  Cantidad de horas = 0. No se inserta."
        End If
    End If
    If inserto Then
        'Busco cual es la registracio por la cual se generan las horas para marcarla como procesada
        StrSql = "SELECT regnro FROM " & TTempWFTurno & " WHERE evenro = 2 "
        OpenRecordset StrSql, rs_reg
        If Not rs_reg.EOF Then
            StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs_reg!Regnro
            objConn.Execute StrSql, , adExecuteNoRecords
        Else
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & " ****  No se pudo marcar la registracion como procesado."
            End If
        End If
    End If

End Select

CierroTodo:
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
    If rs_Dia.State = adStateOpen Then rs_Dia.Close
    Set rs_Dia = Nothing
    If rs_reg.State = adStateOpen Then rs_reg.Close
    Set rs_reg = Nothing
End Sub




Public Sub Politica130(subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Tolerancia general de llegada tarde.
' Autor: ?
' Ultima modificacion: FGZ - 28/07/2003
' --------------------------------------------------------------

Call SetearParametrosPolitica(Detalle, ok)
If ok Then
    tol = st_Tolerancia

    'Se agregaron 2 niveles mas de tolerancia
    If EsNulo(st_Tolerancia2) Then
        Tiene_tol_LLT_Grado2 = False
        tol_LLT_Grado2 = ""
    Else
        Tiene_tol_LLT_Grado2 = True
        tol_LLT_Grado2 = st_Tolerancia2
    End If
    
    If EsNulo(st_Tolerancia3) Then
        Tiene_tol_LLT_Grado3 = False
        tol_LLT_Grado3 = ""
    Else
        Tiene_tol_LLT_Grado3 = True
        tol_LLT_Grado3 = st_Tolerancia3
    End If
Else
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "no se encontro el detalle Pol 130"
    End If
    Exit Sub
End If

'Select Case subn
'Case 1
'    tol = "0005"
'Case 2
'    tol = "0010"
'Case 3
'    tol = "0015"
'Case 4
'    tol = "0000"
'End Select

End Sub

Public Sub Politica131(subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Tolerancia general de descuento llegada tarde.
' Autor: FGZ - 12/10/2010
' Ultima modificacion:
' --------------------------------------------------------------

Call SetearParametrosPolitica(Detalle, ok)
If ok Then
    TolDtoLLT = st_Tolerancia
Else
    TolDtoLLT = "0000"
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Sin Tolerancia de Dto de LLT"
    End If
    Exit Sub
End If
End Sub

Public Sub Politica140(subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Tolerancia general de salida temprano.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' --------------------------------------------------------------

Call SetearParametrosPolitica(Detalle, ok)
If ok Then
    toltemp = st_Tolerancia
    
    
    'Se agregaron 2 niveles mas de tolerancia
    If EsNulo(st_Tolerancia2) Then
        Tiene_tol_ST_Grado2 = False
        tol_ST_Grado2 = ""
    Else
        Tiene_tol_ST_Grado2 = True
        tol_ST_Grado2 = st_Tolerancia2
    End If
    
    If EsNulo(st_Tolerancia3) Then
        Tiene_tol_ST_Grado3 = False
        tol_ST_Grado3 = ""
    Else
        Tiene_tol_ST_Grado3 = True
        tol_ST_Grado3 = st_Tolerancia3
    End If
    
Else
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "No se encontro el detalle Pol 140"
    End If
    toltemp = "0000"
    Exit Sub
End If
End Sub

Public Sub Politica141(subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Tolerancia general de descuento Salida Temprano.
' Autor: FGZ - 12/10/2010
' Ultima modificacion:
' --------------------------------------------------------------
Call SetearParametrosPolitica(Detalle, ok)
If ok Then
    TolDtoST = st_Tolerancia
Else
    TolDtoST = "0000"
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Sin Tolerancia de Dto de Salida Temprano"
    End If
    Exit Sub
End If
End Sub


Public Sub Politica150(subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: tolerancia general de descuento.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' --------------------------------------------------------------

Call SetearParametrosPolitica(Detalle, ok)
If ok Then
    toldto = st_Tolerancia
Else
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "no se encontro el detalle Pol 150"
    End If
    Exit Sub
End If
End Sub

Public Sub Politica160()
' --------------------------------------------------------------
' Descripcion: Solamente devuelve true.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' --------------------------------------------------------------


     acumula = True

End Sub

Public Sub Politica170()
' --------------------------------------------------------------
' Descripcion: Devuelve true si acumula Hs de Ausencia.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' --------------------------------------------------------------


    acumula_dto = True

End Sub

Public Sub Politica180()
' --------------------------------------------------------------
' Descripcion: Devuelve true si acumula salidas temprano.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' --------------------------------------------------------------


    acumula_temp = True

End Sub

Public Sub Politica380(subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Devuelve true si un Feriado pesa mas que Día No laborable.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' --------------------------------------------------------------

Call SetearParametrosPolitica(Detalle, ok)
If ok Then
    diatipo = st_TipoDia1
Else
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "no se encontro el detalle Pol 380"
    End If
    Exit Sub
End If

End Sub

Public Sub Politica470(subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Licencia por dia completo Vs. HC.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' Ultima modificacion: FGZ - 07/11/2008 - se agrego el case 3
' --------------------------------------------------------------
Select Case subn
Case 1:
    'Genero la Justificacion y en caso de que el empleado registre, no se genera nada.
    '   Pero si se generan las horas sin control de presencia (Politica 450)
    Sigo_Generando = False
    Genero_Sin_Control_Presencia = True
Case 2:
    'Genero la Justificacion y en caso de que el empleado registre, se le genera el HC.
    Sigo_Generando = True
    Genero_Sin_Control_Presencia = True
Case 3:
    'Genero la Justificacion y en caso de que el empleado registre, no se genera nada.
    '   Pero NO se generan las horas sin control de presencia (Politica 450) ni la politica de Feriados (Politica 499)
    Sigo_Generando = False
    Genero_Sin_Control_Presencia = False
End Select
End Sub

Public Sub Politica470_old(ByRef Sigo_Generando As Boolean, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Licencia por dia completo Vs. HC.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' --------------------------------------------------------------

'Call SetearParametrosPolitica(Detalle, ok)
'If ok Then
'    Sigo_Generando = st_TipoDia1
'Else
'    Flog.writeline Espacios(Tabulador * 2) & "no se encontro el detalle Pol 140"
'    Exit Sub
'End If

Select Case subn
Case 1:
    'Genero la Justificacion y en caso de que el empleado registre, no se genera nada.
    '   Pero si se generan las horas sin control de presencia (Politica 450)
    Sigo_Generando = False
    Genero_Sin_Control_Presencia = True
Case 2:
    'Genero la Justificacion y en caso de que el empleado registre, se le genera el HC.
    Sigo_Generando = True
    Genero_Sin_Control_Presencia = True
End Select

End Sub

Public Sub Politica440(Fecha As Date, NroTer As Long, Nro_Dia As Integer, nro_tdia As Integer, nro_thora As Integer, ByRef TotHor As Single, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Conversión - Licencia dia completo a horas.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' Ultima modificacion: FGZ - 19/12/2006 - Agregué version 8
    '1) Si el dia es laborable ==> la cantidad de horas la saca de la hs obligatorias del dia
    '2) Si el dia es Franco    ==> la cantidad de horas la saca de la hs obligatorias del turno
    '3) Si el dia es feriado   ==> la cantidad de horas las resuleve dependiendo del tipo de dia original, es decir,
        'a) Si el dia es laborable ==> la cantidad de horas la saca de la hs obligatorias del dia
        'b) Si el dia es Franco    ==> la cantidad de horas la saca de la hs obligatorias del turno
' Ultima modificacion: FGZ - 06/06/2007 - Agregué version 9
'                        '1) Si el dia es laborable ==> la cantidad de horas la saca de la hs obligatorias del dia
'                        '2) Si el dia es Franco    ==> no justifica
'                        '3) Si el dia es Feriado   ==> no justifica
' --------------------------------------------------------------
Dim rs As New ADODB.Recordset
Dim objrhest As New ADODB.Recordset

Dim Nro_Dire As Long
Dim Nro_Ccos As Long

Select Case subn
Case 1:
    'Saca la cantidad de horas correspondientes de las horas obligatorias del turno del empleado
    'Busco en la tabla de dias del turno de trabajo
    If Not P_Asignacion Then
        StrSql = "SELECT * FROM gti_dias WHERE dianro= " & Nro_Dia
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            rs.MoveFirst
            TotHor = rs!diacanthoras
        End If
    Else
        StrSql = "SELECT * FROM gti_detturtemp WHERE ternro= " & NroTer & _
        " AND gttempdesde <= " & ConvFecha(Fecha) & " AND gttemphasta >= " & ConvFecha(Fecha)
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            rs.MoveFirst
            TotHor = rs!diacanthoras
        End If
    End If
Case 2:
    'Saca la cantidad de horas correspondientes por el convenio del empleado, el tipo de dia y el tipo de hora
    'Busco la cantidad de horas
    StrSql = "SELECT * FROM hsxconvenio where thnro = " & nro_thora & _
    " and tdnro = " & nro_tdia & " and convnro = " & convenio & _
    " ORDER BY convnro ASC, thnro ASC, tdnro ASC"
    rs.Open StrSql, objConn, adOpenForwardOnly, adLockReadOnly
    If Not rs.EOF Then
        rs.MoveFirst
        TotHor = rs!canths
    End If

Case 3:
    'Saca la cantidad de horas correspondientes desde lo configurado en el tipo de dia
    StrSql = "SELECT tdnro,tdcanthoras FROM tipdia where tdnro = " & _
    nro_tdia & " ORDER BY tdnro ASC"
    rs.Open StrSql, objConn, adOpenForwardOnly, adLockReadOnly
    If Not rs.EOF Then
        rs.MoveFirst
        TotHor = rs!tdcanthoras
    End If

Case 4:
    'segun el tipo de Lic
    'para tipodia = 2 o 4
    'Saca la cantidad de horas correspondientes de las horas obligatorias 1er dia del turno del empleado
    'sino
    'Saca la cantidad de horas correspondientes de las horas obligatorias del turno del empleado
    'Busco en la tabla de dias del turno de trabajo
    If (aux_TipoDia = 2 Or aux_TipoDia = 4) Then
        StrSql = "SELECT * FROM gti_dias WHERE subturnro = " & Nro_Subturno
        StrSql = StrSql & " ORDER BY diaorden"
        rs.Open StrSql, objConn, adOpenForwardOnly, adLockReadOnly
        If Not rs.EOF Then
            rs.MoveFirst
            TotHor = rs!diacanthoras
        End If
    Else
        If Not (Weekday(p_fecha) = 1 Or Weekday(p_fecha) = 7) Then
            'lo saca de las horas del dia
            StrSql = "SELECT * FROM gti_dias WHERE subturnro = " & Nro_Subturno
            StrSql = StrSql & " ORDER BY diaorden"
            rs.Open StrSql, objConn, adOpenForwardOnly, adLockReadOnly
            If Not rs.EOF Then
                rs.MoveFirst
                TotHor = rs!diacanthoras
            End If
        Else
            TotHor = 0 'rs!diacanthoras
        End If
    End If
Case 5:
    'Saca la cantidad de horas correspondientes de las horas obligatorias 1er dia del turno del empleado
    StrSql = "SELECT * FROM gti_dias WHERE subturnro = " & Nro_Subturno
    StrSql = StrSql & " ORDER BY diaorden"
    rs.Open StrSql, objConn, adOpenForwardOnly, adLockReadOnly
    If Not rs.EOF Then
        rs.MoveFirst
        TotHor = rs!diacanthoras
    End If
Case 6:
    'Saca la cantidad de horas correspondientes de las horas obligatorias del turno del empleado
    'Busco en la tabla de dias del turno de trabajo
    If Not P_Asignacion Then
        StrSql = "SELECT * FROM gti_dias WHERE dianro= " & Nro_Dia
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            rs.MoveFirst
            TotHor = rs!diacanthoras
        End If
    Else
        StrSql = "SELECT * FROM gti_detturtemp WHERE ternro= " & NroTer & _
        " AND gttempdesde <= " & ConvFecha(Fecha) & " AND gttemphasta >= " & ConvFecha(Fecha)
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            rs.MoveFirst
            TotHor = rs!diacanthoras
        End If
    End If

    StrSql = " SELECT estrcodext FROM his_estructura, estructura "
    StrSql = StrSql & " WHERE his_estructura.tenro = 35 and htethasta is null and ternro = " & NroTer & " and "
    StrSql = StrSql & " his_estructura.estrnro = estructura.estrnro"
    OpenRecordset StrSql, objrhest
    If Not objrhest.EOF Then
        Nro_Dire = CLng(objrhest!estrcodext)
    End If
            
    StrSql = " SELECT estrcodext FROM his_estructura, estructura "
    StrSql = StrSql & " WHERE his_estructura.tenro = 5 and htethasta is null and ternro = " & NroTer & " and "
    StrSql = StrSql & " his_estructura.estrnro = estructura.estrnro"
    OpenRecordset StrSql, objrhest
    If Not objrhest.EOF Then
        Nro_Ccos = CLng(objrhest!estrcodext)
    End If

    If Aux_Tipohora = 3 Then
        If Nro_Dire = 47 Then 'Gerencia de gastronomia
            If TotHor >= 6 Then
                TotHor = TotHor + 0.5
            End If
        Else
            If Nro_Ccos <> 286 Then  'Centro atencion a la visita
                If TotHor >= 6 Then
                    TotHor = TotHor + 1
                End If
            End If
        End If
    End If
Case 7: 'FGZ - 22/12/2005
    'Saca la cantidad de horas correspondientes de las horas obligatorias 1er dia del turno del empleado
    If Not P_Asignacion Then
        StrSql = "SELECT * FROM gti_dias WHERE subturnro = " & Nro_Subturno
        StrSql = StrSql & " ORDER BY diaorden"
        rs.Open StrSql, objConn, adOpenForwardOnly, adLockReadOnly
        If Not rs.EOF Then
            rs.MoveFirst
            TotHor = rs!diacanthoras
        End If
    Else
        StrSql = "SELECT * FROM gti_detturtemp WHERE ternro= " & NroTer & _
        " AND gttempdesde <= " & ConvFecha(Fecha) & " AND gttemphasta >= " & ConvFecha(Fecha)
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            rs.MoveFirst
            TotHor = rs!diacanthoras
        End If
    End If
Case 8: 'FGZ - 19/12/2006
    '1) Si el dia es laborable ==> la cantidad de horas la saca de la hs obligatorias del dia
    '2) Si el dia es Franco    ==> la cantidad de horas la saca de la hs obligatorias del turno
    '3) Si el dia es feriado   ==> la cantidad de horas las resuleve dependiendo del tipo de dia original, es decir,
        'a) Si el dia es laborable ==> la cantidad de horas la saca de la hs obligatorias del dia
        'b) Si el dia es Franco    ==> la cantidad de horas la saca de la hs obligatorias del turno
    If Not Dia_Libre And Not esFeriado Then
        'Saca la cantidad de horas correspondientes de las horas obligatorias 1er dia del turno del empleado
        If Not P_Asignacion Then
            StrSql = "SELECT * FROM gti_dias WHERE dianro= " & Nro_Dia
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                rs.MoveFirst
                TotHor = rs!diacanthoras
            End If
        Else
            StrSql = "SELECT * FROM gti_detturtemp WHERE ternro= " & NroTer & _
            " AND gttempdesde <= " & ConvFecha(Fecha) & " AND gttemphasta >= " & ConvFecha(Fecha)
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                rs.MoveFirst
                TotHor = rs!diacanthoras
            End If
        End If
    Else
        If esFeriado Then
            If Dia_Libre Then
                If Not P_Asignacion Then
                    StrSql = "SELECT * FROM gti_dias WHERE subturnro = " & Nro_Subturno
                    StrSql = StrSql & " ORDER BY diaorden"
                    rs.Open StrSql, objConn, adOpenForwardOnly, adLockReadOnly
                    If Not rs.EOF Then
                        rs.MoveFirst
                        TotHor = rs!diacanthoras
                    End If
                Else
                    StrSql = "SELECT * FROM gti_detturtemp WHERE ternro= " & NroTer & _
                    " AND gttempdesde <= " & ConvFecha(Fecha) & " AND gttemphasta >= " & ConvFecha(Fecha)
                    OpenRecordset StrSql, rs
                    If Not rs.EOF Then
                        rs.MoveFirst
                        TotHor = rs!diacanthoras
                    End If
                End If
            Else
                If Not P_Asignacion Then
                    StrSql = "SELECT * FROM gti_dias WHERE dianro= " & Nro_Dia
                    OpenRecordset StrSql, rs
                    If Not rs.EOF Then
                        rs.MoveFirst
                        TotHor = rs!diacanthoras
                    End If
                Else
                    StrSql = "SELECT * FROM gti_detturtemp WHERE ternro= " & NroTer & _
                    " AND gttempdesde <= " & ConvFecha(Fecha) & " AND gttemphasta >= " & ConvFecha(Fecha)
                    OpenRecordset StrSql, rs
                    If Not rs.EOF Then
                        rs.MoveFirst
                        TotHor = rs!diacanthoras
                    End If
                End If
            End If
        Else    'Dia libre
            If Not P_Asignacion Then
                StrSql = "SELECT * FROM gti_dias WHERE subturnro = " & Nro_Subturno
                StrSql = StrSql & " ORDER BY diaorden"
                rs.Open StrSql, objConn, adOpenForwardOnly, adLockReadOnly
                If Not rs.EOF Then
                    rs.MoveFirst
                    TotHor = rs!diacanthoras
                End If
            Else
                StrSql = "SELECT * FROM gti_detturtemp WHERE ternro= " & NroTer & _
                " AND gttempdesde <= " & ConvFecha(Fecha) & " AND gttemphasta >= " & ConvFecha(Fecha)
                OpenRecordset StrSql, rs
                If Not rs.EOF Then
                    rs.MoveFirst
                    TotHor = rs!diacanthoras
                End If
            End If
        End If
    End If
Case 9: 'FGZ - 06/06/2007
        '1) Si el dia es laborable ==> la cantidad de horas la saca de la hs obligatorias del dia
        '2) Si el dia es Franco    ==> no justifica
        '3) Si el dia es Feriado   ==> no justifica
    If Not Dia_Libre And Not esFeriado Then
        'Saca la cantidad de horas correspondientes de las horas obligatorias 1er dia del turno del empleado
        If Not P_Asignacion Then
            StrSql = "SELECT * FROM gti_dias WHERE dianro= " & Nro_Dia
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                rs.MoveFirst
                TotHor = rs!diacanthoras
            End If
        Else
            StrSql = "SELECT * FROM gti_detturtemp WHERE ternro= " & NroTer & _
            " AND gttempdesde <= " & ConvFecha(Fecha) & " AND gttemphasta >= " & ConvFecha(Fecha)
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                rs.MoveFirst
                TotHor = rs!diacanthoras
            End If
        End If
    Else
        TotHor = 0
    End If
End Select

If rs.State = adStateOpen Then rs.Close
Set rs = Nothing
End Sub

Public Sub Politica70(Fecha As Date, NroTer As Long, VentDesde As String, ventFdesde As Date, VentHasta As String, ventFhasta As Date, Nro_Turno As Long, deb As Boolean, ByRef ok As Boolean, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Borro la primera registracion impar.
' subn = 1 : descarto primera registración
' subn = 2 : descarto la última.
' subn = 3 : genera error de tipo de hora.
' subn = 4 : genera Anormalidad.
' Autor: ?
' Ultima modificacion: FGZ - 25/10/2005
' Ultima modificacion: FGZ - 11/04/2006 - Se agregó el subn 4
' Ultima modificacion: FGZ - 07/11/2008 - Se agregó el subn 5
' --------------------------------------------------------------
Dim rs As New ADODB.Recordset
Dim Cant As Integer
Dim contar As Boolean
Dim VentDConv As String
Dim VentHConv As String
Dim TotHorHHMM As String

ok = True
Cant = 0
contar = True
VentDConv = ConvHora(VentDesde)
VentHConv = ConvHora(VentHasta)
If depurar Then
    Flog.writeline Espacios(Tabulador * 2) & "Ventana Desde:" & ventFdesde & " Hasta: " & ventFhasta
    Flog.writeline Espacios(Tabulador * 2) & "Ventana Desde:" & VentDConv & " Hasta: " & VentHConv
End If

'cuento las registraciones dentro de la ventana
StrSql = "SELECT * FROM gti_registracion WHERE ternro= " & NroTer
StrSql = StrSql & " and regfecha >= " & ConvFecha(ventFdesde) & " and  regfecha <= " & ConvFecha(ventFhasta)
'FGZ - 28-07-2006
StrSql = StrSql & " AND ((regestado ='I') OR (regestado = 'S')) "
'FGZ - 28-07-2006
StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
'FGZ - 19/05/2010 ------------ Control FT -------------
StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
'FGZ - 19/05/2010 ------------ Control FT -------------
StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
If rs.State = adStateOpen Then rs.Close
OpenRecordset StrSql, rs

Do While Not rs.EOF
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "registracion fecha: " & rs!regfecha & " Hora: " & rs!reghora
    End If
    If rs!regfecha = ventFdesde Then
        'Convierto para comparar
        If rs!reghora < VentDesde Then
          'Si es temprano no la cuento
          If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Si es temprano no la cuento"
          End If
          contar = False
        End If
    End If
    If rs!regfecha = ventFhasta Then
        If rs!reghora > VentHasta Then
          'Si la registracion queda fuera de la ventana me voy
          If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "La registracion queda fuera de la ventana,Salgo."
          End If
          Exit Do
        End If
    End If
    If contar Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Cuento 1 mas"
        End If
        Cant = Cant + 1
    Else
        contar = True
    End If
    rs.MoveNext
Loop


rs.Close
If (Cant Mod 2) <> 0 Then 'las registraciones son impares
    Select Case subn
    Case 1
    'Busco la ultima registración del empleado en el intervalo
        StrSql = "SELECT * FROM gti_registracion WHERE ternro= " & NroTer
        StrSql = StrSql & " AND regfecha >= " & ConvFecha(ventFdesde) & " and  regfecha <= " & ConvFecha(ventFhasta)
        StrSql = StrSql & " AND reghora <= " & ConvHoraBD(VentHConv)
        StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
        'FGZ - 19/05/2010 ------------ Control FT -------------
        StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
        'FGZ - 19/05/2010 ------------ Control FT -------------
        StrSql = StrSql & " ORDER BY ternro DESC, regfecha DESC, reghora DESC"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            rs.MoveFirst
            If depurar Then
                GeneraTraza Empleado.Ternro, Fecha, "Nro70 - Se Eliminó la (última) Registración Nro ", Str(rs!Regnro)
            End If
            ' La elimino
            'rs.Delete
            'rs.UpdateBatch
            'rs.Close
            
            'FGZ - 25/10/2005
            'Reemplacé las 3 sentencias de arriba por esto (Razon: tremenda burrada, no se puede mezclar las cosas de esa manera.)
            StrSql = "DELETE FROM gti_registracion "
            StrSql = StrSql & " WHERE regnro= " & rs!Regnro
            objConn.Execute StrSql, , adExecuteNoRecords
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Registracion eliminada. Nro " & rs!Regnro & " Fecha " & rs!regfecha & " Hora " & rs!reghora
            End If
        End If
    Case 2
        'Busco la primer registración del empleado en el intervalo
        StrSql = "SELECT * FROM gti_registracion WHERE ternro= " & NroTer
        StrSql = StrSql & " AND regfecha >= " & ConvFecha(ventFdesde) & " AND regfecha <= " & ConvFecha(ventFhasta)
        StrSql = StrSql & " AND reghora >= " & ConvHoraBD(VentDConv)
        StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
        'FGZ - 19/05/2010 ------------ Control FT -------------
        StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
        'FGZ - 19/05/2010 ------------ Control FT -------------
        StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            rs.MoveFirst
            If depurar Then
                GeneraTraza Empleado.Ternro, Fecha, "Nro70 - Se Eliminó la (Primer) Registración Nro ", Str(rs!Regnro)
            End If
            ' La elimino
'            rs.Delete
'            rs.UpdateBatch
'            rs.Close
            
            'FGZ - 25/10/2005
            'Reemplacé las 3 sentencias de arriba por esto (Razon: tremenda burrada, no se puede mezclar las cosas de esa manera.)
            StrSql = "DELETE FROM gti_registracion "
            StrSql = StrSql & " WHERE regnro= " & rs!Regnro
            objConn.Execute StrSql, , adExecuteNoRecords
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Registracion eliminada. Nro " & rs!Regnro & " Fecha " & rs!regfecha & " Hora " & rs!reghora
            End If
        End If
    Case 3
        StrSql = "SELECT * FROM gti_config_tur_hor "
        StrSql = StrSql & " WHERE turnro= " & Nro_Turno
        StrSql = StrSql & " AND conhornro = 22"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "No Esta Configurado el Tipo de Hora de Registracione Impares para el Turno "
            End If
            rs.Close
            Exit Sub
        End If
        
        TotHorHHMM = CHoras(1, 60)
        
        StrSql = "INSERT INTO gti_horcumplido (Empleg,hordesde,horfecrep,horfecgen,horhasta,hormanual," & _
        "horvalido,ternro,thnro,turnro,horas,horcant,horestado) VALUES (" & Empleado.Legajo & "," & ConvFecha(Fecha) & "," & ConvFecha(Fecha) & "," & _
        ConvFecha(Fecha) & "," & ConvFecha(Fecha) & "," & "0,-1," & NroTer & "," & _
        rs!thnro & "," & Nro_Turno & "," & TotHorHHMM & ",1,' ')"
        objConn.Execute StrSql, , adExecuteNoRecords

        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & rs!thnro & "- Cantidad: " & 1 & " hs."
        End If
        
        'FGZ - 14/12/2005
        'NO sw porque OK =false, se lo saqué
        'ok = False
    Case 4: 'Customizacion Expofrut
        'Genera Anormalidad
        StrSql = "SELECT * FROM gti_config_tur_hor "
        StrSql = StrSql & " WHERE turnro = " & Nro_Turno
        StrSql = StrSql & " AND conhornro = 22"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "No Esta Configurado el Tipo de Hora de Registracione Impares para el Turno "
            End If
            rs.Close
            Exit Sub
        End If
        
        TotHorHHMM = CHoras(1, 60)
        
        StrSql = "INSERT INTO gti_horcumplido (Empleg,hordesde,horfecrep,horfecgen,horhasta,hormanual," & _
        "horvalido,ternro,thnro,turnro,horas,horcant,horestado, normnro) VALUES (" & Empleado.Legajo & "," & ConvFecha(Fecha) & "," & ConvFecha(Fecha) & "," & _
        ConvFecha(Fecha) & "," & ConvFecha(Fecha) & "," & "0,-1," & NroTer & "," & _
        rs!thnro & "," & Nro_Turno & "," & TotHorHHMM & ",1,'', 9)"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & rs!thnro & "- Cantidad: " & 1 & " hs."
        End If
    Case 5: '
        'Genera Anormalidad
        StrSql = "SELECT * FROM gti_config_tur_hor "
        StrSql = StrSql & " WHERE turnro = " & Nro_Turno
        StrSql = StrSql & " AND conhornro = 22"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "No Esta Configurado el Tipo de Hora de Registracione Impares para el Turno "
            End If
            rs.Close
            Exit Sub
        End If
        
        TotHorHHMM = CHoras(1, 60)
        
        StrSql = "INSERT INTO gti_horcumplido (Empleg,hordesde,horfecrep,horfecgen,horhasta,hormanual," & _
        "horvalido,ternro,thnro,turnro,horas,horcant,horestado, normnro) VALUES (" & Empleado.Legajo & "," & ConvFecha(Fecha) & "," & ConvFecha(Fecha) & "," & _
        ConvFecha(Fecha) & "," & ConvFecha(Fecha) & "," & "0,-1," & NroTer & "," & _
        rs!thnro & "," & Nro_Turno & "," & TotHorHHMM & ",1,'', 9)"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & rs!thnro & "- Cantidad: " & 1 & " hs."
        End If
        
        Continua_Procesando = False
    End Select
End If

'Saco al rs de memoria
If rs.State = adStateOpen Then rs.Close
Set rs = Nothing
End Sub


Public Sub Politica110v3(p_fecha As Date, nro_tercero As Long, Nro_Turno As Long, deb As Boolean, subn As Integer)
'Descripci¢n: Genera faltan Reg. Oblig. siempre y cuando la cantidad de registraciones sea impar

Dim rs_Dia As New ADODB.Recordset
Dim rs As New ADODB.Recordset
Dim rs_TipoH As New ADODB.Recordset


Dim i As Integer
Dim TotHor As Single
Dim Tdias As Integer
Dim Tmin As Integer
Dim hora_oblig As Integer
Dim Hora_Generada As Integer
Dim fec_ent As Date
Dim hor_ent As String
Dim msgTraza As String
Dim Es_Turno_Libre As Boolean
Dim TotHorHHMM As String

' Genro solo Si la cantidad de registraciones es impar
If (CantidadDeRegistraciones Mod 2) = 0 Then
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Pol 110v3 - NO Genero F.R.O. porque la cantidad de registraciones es par "
    End If
    GoTo CierroTodo
End If

If depurar Then
    Flog.writeline Espacios(Tabulador * 2) & "Pol 110v3 - Configurando Hora 10 "
End If
'/*Horas falta registracion */
StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 10 "
StrSql = StrSql & "AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
OpenRecordset StrSql, rs_TipoH
       
If Not rs_TipoH.EOF Then
    Hora_Generada = rs_TipoH!thnro
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Pol 110 v3 - Configurando Hora:  " & Hora_Generada
    End If
Else
    'Entrada en la traza
    If depurar Then
        msgTraza = "No esta configurado el Tipo de Hora Falta Registracion para el Turno:"
        GeneraTraza Empleado.Ternro, p_fecha, msgTraza, Str(Nro_Turno)
    End If
    '/* Deberia salir de todo el procedimiento */
    GoTo CierroTodo
End If


'Abro cursor
StrSql = "SELECT * FROM " & TTempWFDia & " ORDER BY codigo"
rs_Dia.Open StrSql, objConn
rs_Dia.MoveFirst

Do While Not rs_Dia.EOF
    
    If rs_Dia!entrada Then
        fec_ent = rs_Dia!Fecha
        hor_ent = rs_Dia!Hora
        ' Next
        GoTo NextProgress
    
    Else

        Call objFechasHoras.RestaHs(fec_ent, hor_ent, rs_Dia!Fecha, rs_Dia!Hora, Tdias, Thoras, Tmin)
        TotHor = Thoras + (Tmin / 60)
        If TotHor = 0 Then
            ' Next
            GoTo NextProgress
        End If

'       Creo un registro en la tabla de HC
        TotHorHHMM = CHoras(TotHor, 60)

        StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
        "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen," & _
        "normnro,normnro2,horhoradesde,horhorahasta,horestado) VALUES (" & TotHorHHMM & "," & Round(TotHor, Presicion_HC) & "," & _
        ConvFecha(fec_ent) & "," & ConvFecha(rs_Dia!Fecha) & "," & "0,-1," & _
        nro_tercero & "," & Hora_Generada & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
        ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",3,3,'" & hor_ent & "','" & rs_Dia!Hora & "',' ')"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & Hora_Generada & "- Cantidad: " & TotHor & " hs."
        End If

    End If
    rs_Dia.MoveNext

NextProgress:
    If Not rs_Dia.EOF Then
        rs_Dia.MoveNext
    End If
Loop


'Cierro y libero todos los recordsets
CierroTodo:
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
    If rs_Dia.State = adStateOpen Then rs_Dia.Close
    Set rs_Dia = Nothing
    If rs_TipoH.State = adStateOpen Then rs_TipoH.Close
    Set rs_TipoH = Nothing

End Sub

Sub Politica110(p_fecha As Date, nro_tercero As Long, Nro_Turno As Long, deb As Boolean, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripci¢n: Falta Registración obligatoria.
' subn = 1 Genera Horario Ausente para el empleado que le faltan Reg. Oblig.
' subn = 2 Genera Ausente
' subn = 3 Genera error por falta de registración
' subn = 4 Genera Horario Te¢rico para el empleado que le faltan Reg. Oblig.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' Ultima modificacion: FGZ - 28/11/2006
'                       subn = 7 Genera falta Reg. Oblig. y Anormalidad de AP
' Ultima modificacion: FGZ - 03/04/2007
        '   estaba mal la inicializacion de la variable pues ....
        '   la salida no entra dentro de la ventana por lo cual ... falta una registracion obligatoria
        ' antes ... Trabajo_Dia_Entero = True
        'Ahora  ... Trabajo_Dia_Entero = False
        
        'Ademas
'                       subn = 8 Genera falta Reg. Oblig. y Anormalidad de Falta de reg. Obligatoria
' --------------------------------------------------------------
Dim rs_Dia As New ADODB.Recordset
Dim rs As New ADODB.Recordset

Dim i As Integer
Dim TotHor As Single
Dim Tdias As Integer
Dim Tmin As Integer
Dim hora_oblig As Integer
Dim Hora_Generada As Integer
Dim fec_ent As Date
Dim hor_ent As String
Dim msgTraza As String
Dim Es_Turno_Libre As Boolean

Dim entrada As String
Dim salida As String
Dim EntradaTeo As String
Dim SalidaTeo As String
Dim Trabajo_Dia_Entero As Boolean
Dim TotHorHHMM As String


'FGZ - 28/08/2006
If depurar Then
    Flog.writeline Espacios(Tabulador * 2) & "Busco primera entrada Teorica y la ultima salida teorica"
End If
StrSql = "SELECT * FROM " & TTempWFDia & " ORDER BY codigo"
OpenRecordset StrSql, rs_Dia
If Not rs_Dia.EOF Then
    EntradaTeo = rs_Dia!Hora
    rs_Dia.MoveLast
    SalidaTeo = rs_Dia!Hora

    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "1er E teorica: " & EntradaTeo
        Flog.writeline Espacios(Tabulador * 3) & "Ultima S teorica: " & SalidaTeo
    End If
End If

If depurar Then
    Flog.writeline Espacios(Tabulador * 2) & "Busco primera entrada y salida reales"
End If
StrSql = "SELECT * FROM " & TTempWFTurno
StrSql = StrSql & " ORDER BY fecha ASC, hora ASC"
OpenRecordset StrSql, rs_Dia

Trabajo_Dia_Entero = False
If Not rs_Dia.EOF Then
    entrada = rs_Dia!Hora

    rs_Dia.MoveNext
    If Not rs_Dia.EOF Then
        salida = rs_Dia!Hora
        'If (Entrada = "0000" Or Entrada = "0001") And (Salida = "2359" Or Salida = "2400") Then
        If entrada <= EntradaTeo And salida >= SalidaTeo Then
            'trabajo el rango de registraciones completo de una sola vez, es decir, sin salida
            Trabajo_Dia_Entero = True
        End If
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "La salida esta en el siguiente dia"
        End If
        'FGZ - 03/04/2007
        '   estaba mal la inicializacion de la variable pues ....
        '   la salida no entra dentro de la ventana por lo cual ... falta una registracion obligatoria
        'Trabajo_Dia_Entero = True
        Trabajo_Dia_Entero = False
    End If
End If


If Not Trabajo_Dia_Entero Then
    StrSql = "SELECT * FROM " & TTempWFDia & " ORDER BY codigo"
    OpenRecordset StrSql, rs_Dia
    
    Do While Not rs_Dia.EOF
        Es_Turno_Libre = False
        
        If rs_Dia!entrada Then
            fec_ent = rs_Dia!Fecha
            hor_ent = rs_Dia!Hora
            GoTo NextProgress
        Else
            Call objFechasHoras.RestaHs(fec_ent, hor_ent, rs_Dia!Fecha, rs_Dia!Hora, Tdias, Thoras, Tmin)
            TotHor = Thoras + (Tmin / 60)
            If TotHor = 0 Then
                GoTo NextProgress
            End If
                   
            'Parametros
            Select Case subn
            Case 1, 3
                '/*Horas falta registracion */
                StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 10 "
                msgTraza = "No esta configurado el Tipo de Hora Falta Registracion para el Turno:"
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "Pol 110 - Configurando Hora 10 "
                End If
            Case 2
    '           /*Horas de Ausencia */
                StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 2 "
                msgTraza = "No esta configurado el Tipo de Hora Ausencia para el Turno:"
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "Pol 110 - Configurando Hora 2 "
                End If
            Case 4
                '/*Horas Obligatorias */
                StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 1 "
                msgTraza = "No esta configurado el Tipo de Hora Obligatoria para el Turno:"
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "Pol 110 - Configurando Hora 1 "
                End If
            Case 5
                Call Politica110v2(p_fecha, nro_tercero, Nro_Turno, deb, subn, Cabecera, Detalle)
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "Pol 110v2"
                End If
                Exit Sub
            Case 6: 'Nueva version agregada el 01/12/2003
                ' Genera Falta Registracion Obligatoria <==> la cantidad de registraciones es menor
                ' a la cantidad obligatoria y ademas la cantidad es impar
                Call Politica110v3(p_fecha, nro_tercero, Nro_Turno, deb, subn)
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "Pol 110v3"
                End If
                Exit Sub
            Case 7: 'Nueva version agregada el 28/11/2006
                Call Politica110v4(p_fecha, nro_tercero, Nro_Turno, deb, subn, Cabecera, Detalle)
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "Pol 110v4"
                End If
                Exit Sub
            Case 8: 'Nueva version agregada el 03/04/2007
                Call Politica110v5(p_fecha, nro_tercero, Nro_Turno, deb, subn, Cabecera, Detalle)
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "Pol 110v5"
                End If
                Exit Sub
            Case 9: 'Nueva version agregada el 08/10/2010
                Call Politica110v9(p_fecha, nro_tercero, Nro_Turno, deb, subn, Cabecera, Detalle)
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "Pol 110v9"
                End If
                Exit Sub
            Case Else
                '/*Horas falta registracion */
                StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 10 "
                msgTraza = "No esta configurado el Tipo de Hora Falta Registracion para el Turno:"
                
                If depurar Then
                    Flog.writeline
                    Flog.writeline Espacios(Tabulador * 2) & "Numero de Programa inválido " & subn & ". Se usara el default. 1."
                    Flog.writeline Espacios(Tabulador * 2) & "Valores Posibles:"
                    Flog.writeline Espacios(Tabulador * 2) & "                  1. Horas falta registracion"
                    Flog.writeline Espacios(Tabulador * 2) & "                  2. Horas de Ausencia"
                    Flog.writeline Espacios(Tabulador * 2) & "                  3. Horas falta registracion"
                    Flog.writeline Espacios(Tabulador * 2) & "                  4. Horas Obligatorias"
                    Flog.writeline Espacios(Tabulador * 2) & "                  5. Version de politica 110 v2."
                    Flog.writeline Espacios(Tabulador * 2) & "                  6. Version de politica 110 v3."
                    Flog.writeline Espacios(Tabulador * 2) & "                  7. Version de politica 110 v4."
                    Flog.writeline Espacios(Tabulador * 2) & "                  8. Version de politica 110 v5."
                    Flog.writeline Espacios(Tabulador * 2) & "            Default. Horas falta registracion"
                    Flog.writeline
                End If
            End Select
            StrSql = StrSql & " AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
            OpenRecordset StrSql, rs
           
            If Not rs.EOF Then
                Hora_Generada = rs!thnro
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "Pol 110 - Configurando Hora:  " & Hora_Generada
                End If
            Else
                'Entrada en la traza
                If depurar Then
                    GeneraTraza Empleado.Ternro, p_fecha, msgTraza, Str(Nro_Turno)
                End If
                '/* Deberia salir de todo el procedimiento */
                GoTo CierroTodo
            End If
            
            'Call ValidarTipoDeHora(hora_generada, nro_turno, tipo_hora)
    '       Creo un registro en la tabla de HC
            TotHorHHMM = CHoras(TotHor, 60)
    
            StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
            "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen," & _
            "normnro,normnro2,horhoradesde,horhorahasta,horestado) VALUES (" & TotHorHHMM & "," & Round(TotHor, Presicion_HC) & "," & _
            ConvFecha(fec_ent) & "," & ConvFecha(rs_Dia!Fecha) & "," & "0,-1," & _
            nro_tercero & "," & Hora_Generada & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
            ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",3,3,'" & hor_ent & "','" & rs_Dia!Hora & "',' ')"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & Hora_Generada & "- Cantidad: " & TotHor & " hs."
            End If
        End If
    
NextProgress:
        If Not rs_Dia.EOF Then
            rs_Dia.MoveNext
        End If
    
    Loop
Else
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "  trabajo el rango de registraciones completo de una sola vez, es decir, sin salidas parciales ==> no corresponde que le genera Faltas de registraciones"
    End If
End If

'Cierro y libero todos los recordsets
CierroTodo:
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
    If rs_Dia.State = adStateOpen Then rs_Dia.Close
    Set rs_Dia = Nothing
End Sub


Sub Politica85(p_fecha As Date, NroTer As Long, Nro_Grupo As Long, Nro_Turno As Long, Tiene_Justif As Boolean, No_Trabaja_just As Boolean, deb As Boolean, ok As Boolean, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Recorrida de registraciones a evaluar.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' Ultima modificacion: FGZ - 30/11/2006
' Ultima modificacion: FGZ - 03/04/2007
' --------------------------------------------------------------
Dim i, CantR, Cant_Reg, Reg_Oblig As Integer
Dim Hora_Generada As Integer
Dim entrada As Boolean
Dim msgTraza As String
Dim Registro As Long

Dim Cant_R As Integer
Dim Reg_Oblig_SinJust As Integer
Dim Aux_Entrada As String
Dim Aux_Salida As String

Dim rs As New ADODB.Recordset
Dim Indice As Integer
Dim Ultima_Franja As Integer
Dim Aux_FEntrada As Date
Dim Aux_FSalida As Date
Dim FE_Oblig As Date
Dim FS_Oblig As Date
Dim Entro_en_Franja As Boolean


'FGZ - 21/05/2008 - agregué esto para las horas de llamada de cargil -----------------------
i = 1
CantR = 1
entrada = True

StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 15"
StrSql = StrSql & " ORDER BY fecha ASC, hora ASC"
rs.Open StrSql, objConn, adOpenKeyset, adLockOptimistic, adCmdText
If Not rs.EOF Then rs.MoveFirst
'Por cada registro seleccionado de wf-turno
Do While Not rs.EOF
    Registro = rs!Regnro
    StrSql = "UPDATE " & TTempWFTurno & " SET par = " & i & ", entrada = " & CInt(entrada)
    StrSql = StrSql & " WHERE regnro = " & Registro
    StrSql = StrSql & " AND evenro = 15"
    objConn.Execute StrSql, , adExecuteNoRecords
    If (CantR Mod 2) = 0 Then
        i = i + 1
        entrada = True
    Else
        entrada = False
    End If
    CantR = CantR + 1
    rs.MoveNext
Loop
rs.Close

i = 1
CantR = 1
entrada = True

StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 16"
StrSql = StrSql & " ORDER BY fecha ASC, hora ASC"
rs.Open StrSql, objConn, adOpenKeyset, adLockOptimistic, adCmdText
If Not rs.EOF Then rs.MoveFirst
'Por cada registro seleccionado de wf-turno
Do While Not rs.EOF
    Registro = rs!Regnro
    StrSql = "UPDATE " & TTempWFTurno & " SET par = " & i & ", entrada = " & CInt(entrada)
    StrSql = StrSql & " WHERE regnro = " & Registro
    StrSql = StrSql & " AND evenro = 16"
    objConn.Execute StrSql, , adExecuteNoRecords
    If (CantR Mod 2) = 0 Then
        i = i + 1
        entrada = True
    Else
        entrada = False
    End If
    CantR = CantR + 1
    rs.MoveNext
Loop
rs.Close
'FGZ - 21/05/2008 - agregué esto para las horas de llamada de cargil -----------------------

i = 1
Cant_Reg = 0
CantR = 1
entrada = True
ok = True

StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2" & _
" ORDER BY fecha ASC, hora ASC"
rs.Open StrSql, objConn, adOpenKeyset, adLockOptimistic, adCmdText
If Not rs.EOF Then rs.MoveFirst

'Por cada registro seleccionado de wf-turno
Do While Not rs.EOF
    Registro = rs!Regnro
    'FGZ - 08/10/2010 --------------------------------------------------------------------
    If subn <> 2 Then
        StrSql = "UPDATE " & TTempWFTurno & " SET par = " & i & ", entrada = " & CInt(entrada)
    Else
        StrSql = "UPDATE " & TTempWFTurno & " SET par = " & i
    End If
    'FGZ - 08/10/2010 --------------------------------------------------------------------
    StrSql = StrSql & " WHERE regnro = " & Registro
    StrSql = StrSql & " AND evenro = 2"
    objConn.Execute StrSql, , adExecuteNoRecords
    If (CantR Mod 2) = 0 Then
        i = i + 1
        entrada = True
    Else
        entrada = False
    End If
    CantR = CantR + 1
    Cant_Reg = Cant_Reg + 1
    rs.MoveNext
Loop
rs.Close

'StrSql = "SELECT COUNT(codigo) as reg_oblig FROM " & TTempWFDia
'OpenRecordset StrSql, rs
'Reg_Oblig = rs!Reg_Oblig

'Limpio
'FGZ - 01/08/2014 -------
'For i = 1 To 3
For i = 1 To 6
    Arr_Oblig(i).Ent = ""
    Arr_Oblig(i).Sal = ""
Next i
'FGZ - 01/08/2014 -------
Indice = 1

StrSql = "SELECT * FROM " & TTempWFDia
OpenRecordset StrSql, rs
Do While Not rs.EOF
    Reg_Oblig = Reg_Oblig + 1
        
    If rs!entrada Then
        Arr_Oblig(Indice).Ent = rs!Hora
    Else
        Arr_Oblig(Indice).Sal = rs!Hora
    End If
    If Reg_Oblig Mod 2 = 0 Then
        Indice = Indice + 1
    End If
    rs.MoveNext
Loop


Reg_Oblig_SinJust = Reg_Oblig
If (Tiene_Justif) And (Not No_Trabaja_just) Then
    If Tipo_de_Justificacion = 2 Then 'Justificacion parcial fija
        'Reg_Oblig = Reg_Oblig - 2
        
        'FGZ - 18/04/2006
        'Unicamente hay que restar 2 registraciones si la cantidad de horas justificadas es mayor a la cantidad de horas de un par del turno
        Call Revisar_Justif(Reg_Oblig)
        
    Else
        'no resto nada
    End If
End If

' ---------------
' FGZ - 01/12/2003
'cargo el valor en esta variable global para no calcularlo
'nuevamente en la politica 110
CantidadDeRegistraciones = Cant_Reg
' ---------------


    'FGZ - 30/11/2006 - debo controlar que todas las registraciones que encontró esten
    '                   dentro de las franjas normales
    CantR = 0
    StrSql = "SELECT * FROM " & TTempWFTurno
    StrSql = StrSql & " WHERE evenro = 2 "
    OpenRecordset StrSql, rs
    Cant_R = 0
    Do While Not rs.EOF
        Cant_R = Cant_R + 1
        If rs!entrada Then
            Aux_Entrada = rs!Hora
            Aux_FEntrada = rs!Fecha
        Else
            Aux_Salida = rs!Hora
            Aux_FSalida = rs!Fecha
        End If
        
        If Cant_R Mod 2 = 0 Then
            'FGZ - 29/09/2011 --------
            'Cambié el ciclo porque cuando se trata de un turno partido puedo tener problemas si la justificaciones estan en la primera franja
            'For I = 1 To Reg_Oblig / 2
            For i = 1 To Reg_Oblig_SinJust / 2
                FE_Oblig = p_fecha
                If Arr_Oblig(i).Sal < Arr_Oblig(i).Ent Then
                    FS_Oblig = p_fecha + 1
                Else
                    'FGZ - 18/05/2007 - le faltaba esta asignacion, esto hacia que falle en ciertos casos
                    FS_Oblig = p_fecha
                End If
                
                'FGZ - 18/05/2007 -
                Entro_en_Franja = False
                'HT           [---------------]
                'Horario          (----------------)
                'If objFechasHoras.Menor_Hora(Aux_FEntrada, Aux_Entrada, FE_Oblig, Arr_Oblig(I).Ent) And objFechasHoras.Menor_Hora(FE_Oblig, Arr_Oblig(I).Ent, Aux_FSalida, Aux_Salida) And objFechasHoras.Menor_Igual_Hora(Aux_FSalida, Aux_Salida, FS_Oblig, Arr_Oblig(I).Sal) Then
                'If objFechasHoras.Menor_Igual_Hora(FE_Oblig, Arr_Oblig(I).Ent, Aux_FEntrada, Aux_Entrada) And objFechasHoras.Menor_Hora(FE_Oblig, Arr_Oblig(I).Ent, Aux_FSalida, Aux_Salida) And objFechasHoras.Menor_Igual_Hora(FS_Oblig, Arr_Oblig(I).Sal, Aux_FSalida, Aux_Salida) Then
                If objFechasHoras.Menor_Igual_Hora(FE_Oblig, Arr_Oblig(i).Ent, Aux_FEntrada, Aux_Entrada) And objFechasHoras.Menor_Igual_Hora(Aux_FEntrada, Aux_Entrada, FS_Oblig, Arr_Oblig(i).Sal) And objFechasHoras.Menor_Igual_Hora(FS_Oblig, Arr_Oblig(i).Sal, Aux_FSalida, Aux_Salida) Then
                    CantR = CantR + 2
                    'FGZ - 03/04/2007 - le agregué esto sino, podia evaluar 2 veces lo mismo y dar resultados incorrectos
                    'I = 2
                    'FGZ - 18/05/2007 - en lugar de ponerle 2, le sumo 1 pues en caso de que tuviese 3 pares de registraciones obligatoria no funcionaria
                    i = i + 1
                    Entro_en_Franja = True
                    Ultima_Franja = i
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & " 'HT           [---------------]"
                        Flog.writeline Espacios(Tabulador * 3) & " 'Horario          (----------------)"
                    End If
                End If
    
                'HT             [---------------]
                'Horario    (----------------)
                If Not Entro_en_Franja Then
                    'If objFechasHoras.Mayor_Igual_Hora(Aux_FEntrada, Aux_Entrada, FE_Oblig, Arr_Oblig(I).Ent) And objFechasHoras.Menor_Hora(Aux_FEntrada, Aux_Entrada, FS_Oblig, Arr_Oblig(I).Sal) And objFechasHoras.Mayor_Hora(Aux_FSalida, Aux_Salida, FS_Oblig, Arr_Oblig(I).Sal) Then
                    'If objFechasHoras.Mayor_Igual_Hora(FE_Oblig, Arr_Oblig(I).Ent, Aux_FEntrada, Aux_Entrada) And objFechasHoras.Menor_Hora(Aux_FEntrada, Aux_Entrada, FS_Oblig, Arr_Oblig(I).Sal) And objFechasHoras.Mayor_Hora(FS_Oblig, Arr_Oblig(I).Sal, Aux_FSalida, Aux_Salida) Then
                    If objFechasHoras.Menor_Igual_Hora(Aux_FEntrada, Aux_Entrada, FE_Oblig, Arr_Oblig(i).Ent) And objFechasHoras.Menor_Igual_Hora(FE_Oblig, Arr_Oblig(i).Ent, Aux_FSalida, Aux_Salida) And objFechasHoras.Menor_Igual_Hora(Aux_FSalida, Aux_Salida, FS_Oblig, Arr_Oblig(i).Sal) Then
                        CantR = CantR + 2
                        'FGZ - 03/04/2007 - le agregué esto sino, podia evaluar 2 veces lo mismo y dar resultados incorrectos
                        'I = 2
                        'FGZ - 18/05/2007 - en lugar de ponerle 2, le sumo 1 pues en caso de que tuviese 3 pares de registraciones obligatoria no funcionaria
                        i = i + 1
                        Entro_en_Franja = True
                        
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'HT             [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario    (----------------)"
                        End If
                    End If
                End If
                
                'HT             [---------------]
                'Horario    (-----------------------)
                'If objFechasHoras.Mayor_Igual_Hora(Aux_FEntrada, Aux_Entrada, FE_Oblig, Arr_Oblig(I).Ent) And objFechasHoras.Menor_Hora(Aux_FEntrada, Aux_Entrada, FS_Oblig, Arr_Oblig(I).Sal) And objFechasHoras.Menor_Igual_Hora(Aux_FSalida, Aux_Salida, FS_Oblig, Arr_Oblig(I).Sal) And objFechasHoras.Mayor_Hora(Aux_FSalida, Aux_Salida, FE_Oblig, Arr_Oblig(I).Ent) Then
                If Not Entro_en_Franja Then
                    'If objFechasHoras.Mayor_Igual_Hora(FE_Oblig, Arr_Oblig(I).Ent, Aux_FEntrada, Aux_Entrada) And objFechasHoras.Menor_Hora(Aux_FEntrada, Aux_Entrada, FS_Oblig, Arr_Oblig(I).Sal) And objFechasHoras.Menor_Igual_Hora(FS_Oblig, Arr_Oblig(I).Sal, Aux_FSalida, Aux_Salida) And objFechasHoras.Mayor_Hora(Aux_FSalida, Aux_Salida, FE_Oblig, Arr_Oblig(I).Ent) Then
                    If objFechasHoras.Menor_Igual_Hora(Aux_FEntrada, Aux_Entrada, FE_Oblig, Arr_Oblig(i).Ent) And objFechasHoras.Menor_Igual_Hora(FS_Oblig, Arr_Oblig(i).Sal, Aux_FSalida, Aux_Salida) Then
                        CantR = CantR + 2
                        'FGZ - 03/04/2007 - le agregué esto sino, podia evaluar 2 veces lo mismo y dar resultados incorrectos
                        'I = 2
                        'FGZ - 18/05/2007 - en lugar de ponerle 2, le sumo 1 pues en caso de que tuviese 3 pares de registraciones obligatoria no funcionaria
                        i = i + 1
                        Entro_en_Franja = True
                        
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'HT             [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario    (-----------------------)"
                        End If
                    End If
                End If
                
                'HT         [---------------]
                'Horario        (--------)
                'If objFechasHoras.Menor_Hora(Aux_FEntrada, Aux_Entrada, FE_Oblig, Arr_Oblig(I).Ent) And objFechasHoras.Mayor_Hora(Aux_FSalida, Aux_Salida, FS_Oblig, Arr_Oblig(I).Sal) Then
                If Not Entro_en_Franja Then
                    'If objFechasHoras.Menor_Hora(FE_Oblig, Arr_Oblig(I).Ent, Aux_FEntrada, Aux_Entrada) And objFechasHoras.Mayor_Hora(FS_Oblig, Arr_Oblig(I).Sal, Aux_FSalida, Aux_Salida) Then
                    If objFechasHoras.Menor_Igual_Hora(FE_Oblig, Arr_Oblig(i).Ent, Aux_FEntrada, Aux_Entrada) And objFechasHoras.Menor_Igual_Hora(Aux_FSalida, Aux_Salida, FS_Oblig, Arr_Oblig(i).Sal) Then
                        CantR = CantR + 2
                        'FGZ - 03/04/2007 - le agregué esto sino, podia evaluar 2 veces lo mismo y dar resultados incorrectos
                        'I = 2
                        'FGZ - 18/05/2007 - en lugar de ponerle 2, le sumo 1 pues en caso de que tuviese 3 pares de registraciones obligatoria no funcionaria
                        i = i + 1
                        Entro_en_Franja = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'HT         [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario        (--------)"
                        End If
                    End If
                End If
                
                'FGZ - 18/05/2007 - debo revisar ademas si no esta entrando en la siguiente franja (si existe)
                If Entro_en_Franja And i <= (Reg_Oblig / 2) Then
                    If depurar Then
                        Flog.writeline
                        Flog.writeline Espacios(Tabulador * 3) & " Comparo la registracion con la siguiente franja"
                        Flog.writeline
                    End If
                    'Hay otra franja mas adelante, reviso que la registracion no abarque tambien a la siguiente
                    If Arr_Oblig(i).Sal < Arr_Oblig(i).Ent Then
                        FS_Oblig = p_fecha + 1
                    Else
                        FS_Oblig = p_fecha
                    End If
                    Entro_en_Franja = False
                    'HT           [---------------]
                    'Horario          (----------------)
                    'If objFechasHoras.Menor_Igual_Hora(FE_Oblig, Arr_Oblig(I).Ent, Aux_FEntrada, Aux_Entrada) And objFechasHoras.Menor_Hora(FE_Oblig, Arr_Oblig(I).Ent, Aux_FSalida, Aux_Salida) And objFechasHoras.Menor_Igual_Hora(FS_Oblig, Arr_Oblig(I).Sal, Aux_FSalida, Aux_Salida) Then
                    If objFechasHoras.Menor_Igual_Hora(FE_Oblig, Arr_Oblig(i).Ent, Aux_FEntrada, Aux_Entrada) And objFechasHoras.Menor_Igual_Hora(Aux_FEntrada, Aux_Entrada, FS_Oblig, Arr_Oblig(i).Sal) And objFechasHoras.Menor_Igual_Hora(FS_Oblig, Arr_Oblig(i).Sal, Aux_FSalida, Aux_Salida) Then
                        CantR = CantR + 2
                        i = i + 1
                        Entro_en_Franja = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 4) & " 'HT           [---------------]"
                            Flog.writeline Espacios(Tabulador * 4) & " 'Horario          (----------------)"
                        End If
                    End If
        
                    'HT             [---------------]
                    'Horario    (----------------)
                    If Not Entro_en_Franja Then
                        'If objFechasHoras.Mayor_Igual_Hora(Aux_FEntrada, Aux_Entrada, FE_Oblig, Arr_Oblig(I).Ent) And objFechasHoras.Menor_Hora(Aux_FEntrada, Aux_Entrada, FS_Oblig, Arr_Oblig(I).Sal) And objFechasHoras.Mayor_Hora(Aux_FSalida, Aux_Salida, FS_Oblig, Arr_Oblig(I).Sal) Then
                        If objFechasHoras.Menor_Igual_Hora(Aux_FEntrada, Aux_Entrada, FE_Oblig, Arr_Oblig(i).Ent) And objFechasHoras.Menor_Igual_Hora(FE_Oblig, Arr_Oblig(i).Ent, Aux_FSalida, Aux_Salida) And objFechasHoras.Menor_Igual_Hora(Aux_FSalida, Aux_Salida, FS_Oblig, Arr_Oblig(i).Sal) Then
                            CantR = CantR + 2
                            i = i + 1
                            Entro_en_Franja = True
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 4) & " 'HT             [---------------]"
                                Flog.writeline Espacios(Tabulador * 4) & " 'Horario    (----------------)"
                            End If
                        End If
                    End If
                    
                    'HT             [---------------]
                    'Horario    (-----------------------)
                    If Not Entro_en_Franja Then
                        'If objFechasHoras.Mayor_Igual_Hora(FE_Oblig, Arr_Oblig(I).Ent, Aux_FEntrada, Aux_Entrada) And objFechasHoras.Menor_Hora(Aux_FEntrada, Aux_Entrada, FS_Oblig, Arr_Oblig(I).Sal) And objFechasHoras.Menor_Igual_Hora(FS_Oblig, Arr_Oblig(I).Sal, Aux_FSalida, Aux_Salida) And objFechasHoras.Mayor_Hora(Aux_FSalida, Aux_Salida, FE_Oblig, Arr_Oblig(I).Ent) Then
                        If objFechasHoras.Menor_Igual_Hora(Aux_FEntrada, Aux_Entrada, FE_Oblig, Arr_Oblig(i).Ent) And objFechasHoras.Menor_Igual_Hora(FS_Oblig, Arr_Oblig(i).Sal, Aux_FSalida, Aux_Salida) Then
                            CantR = CantR + 2
                            i = i + 1
                            Entro_en_Franja = True
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 4) & " 'HT             [---------------]"
                                Flog.writeline Espacios(Tabulador * 4) & " 'Horario    (-----------------------)"
                            End If
                        End If
                    End If
                    
                    'HT         [---------------]
                    'Horario        (--------)
                    If Not Entro_en_Franja Then
                        'If objFechasHoras.Menor_Hora(FE_Oblig, Arr_Oblig(I).Ent, Aux_FEntrada, Aux_Entrada) And objFechasHoras.Mayor_Hora(FS_Oblig, Arr_Oblig(I).Sal, Aux_FSalida, Aux_Salida) Then
                        If objFechasHoras.Menor_Igual_Hora(FE_Oblig, Arr_Oblig(i).Ent, Aux_FEntrada, Aux_Entrada) And objFechasHoras.Menor_Igual_Hora(Aux_FSalida, Aux_Salida, FS_Oblig, Arr_Oblig(i).Sal) Then
                            CantR = CantR + 2
                            i = i + 1
                            Entro_en_Franja = True
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 4) & " 'HT         [---------------]"
                                Flog.writeline Espacios(Tabulador * 4) & " 'Horario        (--------)"
                            End If
                        End If
                    End If
                    
                    'debo revisar ademas si no esta entrando en la siguiente franja (si existe)
                    If Entro_en_Franja And i <= (Reg_Oblig / 2) Then
                        If depurar Then
                            Flog.writeline
                            Flog.writeline Espacios(Tabulador * 4) & " Comparo la registracion con la siguiente franja"
                            Flog.writeline
                        End If
                        'Hay otra franja mas adelante, reviso que la registracion no abarque tambien a la siguiente
                        If Arr_Oblig(i).Sal < Arr_Oblig(i).Ent Then
                            FS_Oblig = p_fecha + 1
                        Else
                            FS_Oblig = p_fecha
                        End If
                        Entro_en_Franja = False
                        'HT           [---------------]
                        'Horario          (----------------)
                        'If objFechasHoras.Menor_Igual_Hora(FE_Oblig, Arr_Oblig(I).Ent, Aux_FEntrada, Aux_Entrada) And objFechasHoras.Menor_Hora(FE_Oblig, Arr_Oblig(I).Ent, Aux_FSalida, Aux_Salida) And objFechasHoras.Menor_Igual_Hora(FS_Oblig, Arr_Oblig(I).Sal, Aux_FSalida, Aux_Salida) Then
                        If objFechasHoras.Menor_Igual_Hora(FE_Oblig, Arr_Oblig(i).Ent, Aux_FEntrada, Aux_Entrada) And objFechasHoras.Menor_Igual_Hora(Aux_FEntrada, Aux_Entrada, FS_Oblig, Arr_Oblig(i).Sal) And objFechasHoras.Menor_Igual_Hora(FS_Oblig, Arr_Oblig(i).Sal, Aux_FSalida, Aux_Salida) Then
                            CantR = CantR + 2
                            i = i + 1
                            Entro_en_Franja = True
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 5) & " 'HT           [---------------]"
                                Flog.writeline Espacios(Tabulador * 5) & " 'Horario          (----------------)"
                            End If
                        End If
            
                        'HT             [---------------]
                        'Horario    (----------------)
                        If Not Entro_en_Franja Then
                            'If objFechasHoras.Mayor_Igual_Hora(Aux_FEntrada, Aux_Entrada, FE_Oblig, Arr_Oblig(I).Ent) And objFechasHoras.Menor_Hora(Aux_FEntrada, Aux_Entrada, FS_Oblig, Arr_Oblig(I).Sal) And objFechasHoras.Mayor_Hora(Aux_FSalida, Aux_Salida, FS_Oblig, Arr_Oblig(I).Sal) Then
                            If objFechasHoras.Menor_Igual_Hora(Aux_FEntrada, Aux_Entrada, FE_Oblig, Arr_Oblig(i).Ent) And objFechasHoras.Menor_Igual_Hora(FE_Oblig, Arr_Oblig(i).Ent, Aux_FSalida, Aux_Salida) And objFechasHoras.Menor_Igual_Hora(Aux_FSalida, Aux_Salida, FS_Oblig, Arr_Oblig(i).Sal) Then
                                CantR = CantR + 2
                                i = i + 1
                                Entro_en_Franja = True
                                If depurar Then
                                    Flog.writeline Espacios(Tabulador * 5) & " 'HT             [---------------]"
                                    Flog.writeline Espacios(Tabulador * 5) & " 'Horario    (----------------)"
                                End If
                            End If
                        End If
                        
                        'HT             [---------------]
                        'Horario    (-----------------------)
                        If Not Entro_en_Franja Then
                            'If objFechasHoras.Mayor_Igual_Hora(FE_Oblig, Arr_Oblig(I).Ent, Aux_FEntrada, Aux_Entrada) And objFechasHoras.Menor_Hora(Aux_FEntrada, Aux_Entrada, FS_Oblig, Arr_Oblig(I).Sal) And objFechasHoras.Menor_Igual_Hora(FS_Oblig, Arr_Oblig(I).Sal, Aux_FSalida, Aux_Salida) And objFechasHoras.Mayor_Hora(Aux_FSalida, Aux_Salida, FE_Oblig, Arr_Oblig(I).Ent) Then
                            If objFechasHoras.Menor_Igual_Hora(Aux_FEntrada, Aux_Entrada, FE_Oblig, Arr_Oblig(i).Ent) And objFechasHoras.Menor_Igual_Hora(FS_Oblig, Arr_Oblig(i).Sal, Aux_FSalida, Aux_Salida) Then
                                CantR = CantR + 2
                                i = i + 1
                                Entro_en_Franja = True
                                If depurar Then
                                    Flog.writeline Espacios(Tabulador * 5) & " 'HT             [---------------]"
                                    Flog.writeline Espacios(Tabulador * 5) & " 'Horario    (-----------------------)"
                                End If
                            End If
                        End If
                        
                        'HT         [---------------]
                        'Horario        (--------)
                        If Not Entro_en_Franja Then
                            'If objFechasHoras.Menor_Hora(Aux_FEntrada, Aux_Entrada, FE_Oblig, Arr_Oblig(I).Ent) And objFechasHoras.Mayor_Hora(FS_Oblig, Arr_Oblig(I).Sal, Aux_FSalida, Aux_Salida) Then
                            If objFechasHoras.Menor_Igual_Hora(FE_Oblig, Arr_Oblig(i).Ent, Aux_FEntrada, Aux_Entrada) And objFechasHoras.Menor_Igual_Hora(Aux_FSalida, Aux_Salida, FS_Oblig, Arr_Oblig(i).Sal) Then
                                CantR = CantR + 2
                                i = i + 1
                                Entro_en_Franja = True
                                If depurar Then
                                    Flog.writeline Espacios(Tabulador * 5) & " 'HT         [---------------]"
                                    Flog.writeline Espacios(Tabulador * 5) & " 'Horario        (--------)"
                                End If
                            End If
                        End If
                    End If
                End If
            Next i
            
        End If
        rs.MoveNext
    Loop

'Hay menos reg. que en la definicion del turno
If depurar Then
    Flog.writeline Espacios(Tabulador * 3) & "  ==> Registraciones Obligatorias: " & Reg_Oblig & "- Registraciones: " & Cant_Reg
End If
If (Cant_Reg < Reg_Oblig) Then
    If (CantR < Reg_Oblig) Then
        Call Politica(110)
    End If
    If Cant_Reg <= 1 Then
        ok = False
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  ==> Cant_Reg <=1 " & Cant_Reg & " Sale."
        End If
    End If
Else
    'FGZ - 05/12/2006 - debo controlar que todas las registraciones que encontró esten
    '                   dentro de las franjas normales
    If (CantR < Reg_Oblig) Then
        Call Politica(110)
        If CantR <= 1 Then
            ok = False
        End If
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  ==> Registraciones en franja: " & CantR
        End If
    End If

'    'FGZ - 30/11/2006 - debo controlar que todas las registraciones que encontró esten
'    '                   dentro de las franjas normales
'    Cantr = 0
'    StrSql = "SELECT * FROM " & TTempWFTurno
'    StrSql = StrSql & " WHERE evenro = 2 "
'    OpenRecordset StrSql, rs
'    Cant_R = 0
'    Do While Not rs.EOF
'        Cant_R = Cant_R + 1
'        If rs!Entrada Then
'            Aux_Entrada = rs!Hora
'        Else
'            Aux_Salida = rs!Hora
'        End If
'        If Cant_R Mod 2 = 0 Then
'            For I = 1 To Reg_Oblig / 2
'                'HT           [---------------]
'                'Horario          (----------------)
'                If objFechasHoras.Menor_Hora(p_fecha, Aux_Entrada, p_fecha, Arr_Oblig(I).Ent) And objFechasHoras.Menor_Hora(p_fecha, Arr_Oblig(I).Ent, p_fecha, Aux_Salida) And objFechasHoras.Menor_Igual_Hora(p_fecha, Aux_Salida, p_fecha, Arr_Oblig(I).Sal) Then
'                        Cantr = Cantr + 2
'                        Ultima_Franja = I
'                End If
'
'                'HT             [---------------]
'                'Horario    (----------------)
'                If objFechasHoras.Mayor_Igual_Hora(p_fecha, Aux_Entrada, p_fecha, Arr_Oblig(I).Ent) And objFechasHoras.Menor_Hora(p_fecha, Aux_Entrada, p_fecha, Arr_Oblig(I).Sal) And objFechasHoras.Mayor_Hora(p_fecha, Aux_Salida, p_fecha, Arr_Oblig(I).Sal) Then
'                    Cantr = Cantr + 2
'                End If
'
'                'HT             [---------------]
'                'Horario    (-----------------------)
'                If objFechasHoras.Mayor_Igual_Hora(p_fecha, Aux_Entrada, p_fecha, Arr_Oblig(I).Ent) And objFechasHoras.Menor_Hora(p_fecha, Aux_Entrada, p_fecha, Arr_Oblig(I).Sal) And objFechasHoras.Menor_Igual_Hora(p_fecha, Aux_Salida, p_fecha, Arr_Oblig(I).Sal) And objFechasHoras.Mayor_Hora(p_fecha, Aux_Salida, p_fecha, Arr_Oblig(I).Ent) Then
'                    Cantr = Cantr + 2
'                End If
'
'                'HT         [---------------]
'                'Horario        (--------)
'                If objFechasHoras.Menor_Hora(p_fecha, Aux_Entrada, p_fecha, Arr_Oblig(I).Ent) And objFechasHoras.Mayor_Hora(p_fecha, Aux_Salida, p_fecha, Arr_Oblig(I).Sal) Then
'                    Cantr = Cantr + 2
'                End If
'            Next I
'
'        End If
'        rs.MoveNext
'    Loop
'    If (Cantr < Reg_Oblig) Then
'        'La cantidad de registraciones que entran dentro de las franjas normales es menor que las obligatorias
'        Call Politica(110)
'        If Cantr <= 1 Then
'            ok = False
'        End If
'    End If
End If
        
        
'Cierro todo
If rs.State = adStateOpen Then rs.Close
Set rs = Nothing

End Sub

Sub Politica85_New(p_fecha As Date, NroTer As Long, Nro_Grupo As Long, Nro_Turno As Long, Tiene_Justif As Boolean, No_Trabaja_just As Boolean, deb As Boolean, ok As Boolean, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Recorrida de registraciones a evaluar.
' Autor: FGZ - 06/12/2005
' Ultima modificacion:
' --------------------------------------------------------------
Dim i As Integer
Dim CantR As Integer
Dim Cant_Reg As Integer
Dim Reg_Oblig As Integer
Dim Hora_Generada As Integer
Dim entrada As Boolean

Dim rs As New ADODB.Recordset

i = 1
Cant_Reg = 0
CantR = 1
entrada = True

'Abro temporal wf_turno
StrSql = "SELECT * FROM " & TTempWFTurno
StrSql = StrSql & " WHERE evenro = 2 "
StrSql = StrSql & " ORDER BY fecha ASC, hora ASC"
If rs.State = adStateOpen Then rs.Close
OpenRecordset StrSql, rs

'Por cada registro seleccionado de wf-turno
Do While Not rs.EOF
    StrSql = "UPDATE " & TTempWFTurno & " SET par = " & i & ", entrada = " & CInt(entrada)
    StrSql = StrSql & " WHERE regnro = " & rs!Regnro
    objConn.Execute StrSql, , adExecuteNoRecords
    If (CantR Mod 2) = 0 Then
        i = i + 1
        entrada = True
    Else
        entrada = False
    End If
    CantR = CantR + 1
    Cant_Reg = Cant_Reg + 1
    
    rs.MoveNext
Loop

StrSql = "SELECT COUNT(codigo) as reg_oblig FROM " & TTempWFDia
If rs.State = adStateOpen Then rs.Close
OpenRecordset StrSql, rs
If Not rs.EOF Then
    Reg_Oblig = rs!Reg_Oblig
Else
    Reg_Oblig = 0
End If
If (Tiene_Justif) And (Not No_Trabaja_just) Then
     Reg_Oblig = Reg_Oblig - 2
End If
CantidadDeRegistraciones = Cant_Reg

'Hay menos reg. que en la definicion del turno
If (Cant_Reg < Reg_Oblig) Then
    Call Politica(110)
    If Cant_Reg <= 1 Then
        ok = False
    End If
End If
        
        
ok = True
        
'Cierro y libero
If rs.State = adStateOpen Then rs.Close
Set rs = Nothing
End Sub


Public Sub Politica60(Fecha As Date, NroTer As Long, Nro_Dia As Integer, P_Asignacion As Boolean, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Busca la primera entrada y última salida y genera la ventana.
' veys 7 Ventana de 3 Horas para Entrada y 14 Para Salida.
' Nota: esto se necesita porque hace embudo con la ultima salida, debe tomar l corte final
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' Ultima modificacion: FGZ - 23/04/2007 - cambio en version estandar cuando el horario es movil, estaba cambiando la fecha de procesamiento.
' Ultima modificacion: FGZ - 19/07/2007 - Se agregó la llamada a la politica 61.
' --------------------------------------------------------------
Dim rs As New Recordset

Dim Hora As String
Dim VentEnt As String
Dim VentSal As String
Dim sumahoras As String
Dim Opcion As Integer
Dim fecres As Date
Dim TamVent As String
Dim horres As String
Dim ok As Boolean
'----------------------MDF
Dim arreglo_ventana
Dim cont
Dim encontre
'---------------------MDF

    Call SetearParametrosPolitica(Detalle, ok)

    Opcion = st_Opcion
    VentSal = st_VentSal
    VentEnt = st_VentEnt

    Select Case Opcion
    Case 1:
        'Es la 60 pura
    Case 2:
        Call Politica60v2(Fecha, NroTer, Nro_Dia, P_Asignacion, Cabecera, VentSal, VentEnt)
        Exit Sub
    Case 3:
        Call Politica60v3(Fecha, NroTer, Nro_Dia, P_Asignacion, Cabecera, VentSal, VentEnt)
        Exit Sub
    Case 4:  'para Expofrut 02/08/2005
        Call Politica60v4(Fecha, NroTer, Nro_Dia, P_Asignacion, Cabecera, VentSal, VentEnt)
        Exit Sub
    Case 9:  'para expofrut
        Call Politica60v9(Fecha, NroTer, Nro_Dia, P_Asignacion, Cabecera, VentSal, VentEnt)
        Exit Sub
    Case 10:  'para CCU (turnos rotativos)
        Call Politica60v10(Fecha, NroTer, Nro_Dia, P_Asignacion, Cabecera, VentSal, VentEnt)
        Exit Sub
    Case 11: 'para Monresa (turnos Nocturnos con Partes de Asignacion Horaria y fichadas dia anterior)
        Call Politica60v11(Fecha, NroTer, Nro_Dia, P_Asignacion, Cabecera, VentSal, VentEnt)
        Exit Sub
    Case 12: 'Politica para ILE - MDF - necesita aperturas diferentes dependiendo del subturno
        'Nro_Subturno
        Flog.writeline "            Politica 60 version 12 "
        Flog.writeline "            El turno es:" & Nro_Turno
        Flog.writeline "            El subturno es:" & Nro_Subturno
        StrSql = "select subturnro from gti_subturno where turnro= " & Nro_Turno & " order by subturnro asc"
        OpenRecordset StrSql, rs
        cont = 0
        encontre = False
        Do While Not rs.EOF And Not encontre
          If Not Nro_Subturno = rs!subturnro Then
             cont = cont + 1
          Else
            encontre = True
          End If
          rs.MoveNext
        Loop
        arreglo_ventana = Split(st_VentEnt, "-")
        If cont <= UBound(arreglo_ventana) Then
          st_VentEnt = arreglo_ventana(cont)
        Else
          Flog.writeline "         No se encontro ventana de entrada para el subturno, se toma la primera..."
          st_VentEnt = arreglo_ventana(0)
        End If
        arreglo_ventana = Split(st_VentSal, "-")
        If cont <= UBound(arreglo_ventana) Then
          st_VentSal = arreglo_ventana(cont)
        Else
          Flog.writeline "         No se encontro ventana de salida para el subturno, se toma la primera..."
          st_VentSal = arreglo_ventana(0)
        End If
        Flog.writeline "             La ventana queda configurada= Ventana Entrada: -" & st_VentEnt & ", Ventana salida: +" & st_VentSal
        Flog.writeline "             A partir de aca el comportamiento es como la version estandar......"
     '------------------------------------MDF
     End Select
If Not P_Asignacion Then
    StrSql = "SELECT diahoradesde1,diaanterior FROM gti_dias WHERE dianro= " & Nro_Dia
    OpenRecordset StrSql, rs
Else
    StrSql = "SELECT ttemphdesde1,diaanterior FROM gti_detturtemp WHERE ternro= " & NroTer & _
    " AND gttempdesde <= " & ConvFecha(Fecha) & " AND gttemphasta >= " & ConvFecha(Fecha)
    OpenRecordset StrSql, rs
End If

If rs.EOF Then
    Exit Sub
End If
rs.MoveFirst

If Not P_Asignacion Then
    If Not Horario_Movil And Not Horario_Flexible_Rotativo Then
        If Not EsNulo(rs!diahoradesde1) Then
            Hora = rs!diahoradesde1
        Else
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "Dia " & Nro_Dia & " con diahoradesde1 Nulo"
            End If
            Hora = "0000"
        End If
    Else
        'FGZ - 23/04/2007 ---
        If Horario_Movil Then
            Hora = E1
            fecha_desde = FE1
            'Fecha = FE1
        Else
            Hora = E1
            Fecha = FE1
        End If
        'FGZ - 23/04/2007 ---
'
'        'FGZ - 02/11/2006
'        If Horario_Flexible_Rotativo Then
'            Fecha = fe1
'        Else
'            Fecha = p_fecha
'        End If
    End If
Else
    If Not EsNulo(rs!ttemphdesde1) Then
        Hora = rs!ttemphdesde1
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "Parte con ttemphdesde1 Nulo"
        End If
        Hora = "0000"
    End If
End If

If Not objFechasHoras.ValidarHora(Hora) Then
    Exit Sub
End If

'FGZ - 16/09/2010 -----------------------------------------------------
'Call objFechasHoras.RestaXHoras(Fecha, Hora, VentEnt, fecres, horres)
If Opcion <> 12 Then
    If Horario_Movil Then
        Call objFechasHoras.RestaXHoras(fecha_desde, Hora, VentEnt, fecres, horres)
    Else
        Call objFechasHoras.RestaXHoras(Fecha, Hora, VentEnt, fecres, horres)
    End If
    
Else
    If Horario_Movil Then
        Call objFechasHoras.RestaXHoras(fecha_desde, Hora, st_VentEnt, fecres, horres)
    Else
        Call objFechasHoras.RestaXHoras(Fecha, Hora, st_VentEnt, fecres, horres)
    End If
    
End If

'FGZ - 16/09/2010 -----------------------------------------------------
If Not objFechasHoras.ValidarHora(horres) Then
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Hora Invalida " & horres
    End If
    Exit Sub
End If

'FGZ - 20/09/2004
If Not Horario_Movil And Not Horario_Flexible_Rotativo Then
    If Not EsNulo(rs!diaanterior) Then
        If CBool(rs!diaanterior) Then
            fecha_desde = fecres - 1
        Else
            fecha_desde = fecres
        End If
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "Dia anterior NULO "
            Flog.writeline Espacios(Tabulador * 3) & "fecha desde = " & fecres
        End If
        fecha_desde = fecres
    End If
Else
    fecha_desde = fecres
'    If Pasa_de_Dia Then
'        'fecha_desde = fecres - 1
'    Else
'        fecha_desde = fecres
'    End If
End If
'fecha_desde = fecres
hora_desde = horres

If Not objFechasHoras.ValidarHora(Hora) Then
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Hora Invalida " & Hora
    End If
    Exit Sub
End If
If Opcion <> 12 Then
  Call objFechasHoras.SumoHoras(fecha_desde, hora_desde, VentSal, fecres, horres)
Else
   Call objFechasHoras.SumoHoras(fecha_desde, hora_desde, st_VentSal, fecres, horres)
End If

If Not objFechasHoras.ValidarHora(horres) Then
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Hora Invalida " & horres
    End If
    Exit Sub
End If

fecha_hasta = fecres
hora_hasta = horres


'FGZ - 19/07/2007 - Control sobre al armado de la ventana
Call Politica(61)

If rs.State = adStateOpen Then rs.Close
Set rs = Nothing
End Sub
Public Sub Politica60v2(ByVal Fecha As Date, Ternro As Long, Nro_Dia As Integer, P_Asignacion As Boolean, ByVal Cabecera As Long, ByVal VentSal As String, ByVal VentEnt As String)
' --------------------------------------------------------------
' Descripcion:
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' --------------------------------------------------------------
Dim rs As New ADODB.Recordset
Dim Hora As String
Dim fecres As Date
Dim horres As String
Dim ok As Boolean

If P_Asignacion Then

    StrSql = "SELECT ttemphdesde1,ttemphhasta1,ttemphdesde2,ttemphhasta2,ttemphdesde3,ttemphhasta3,diasiguiente FROM gti_detturtemp WHERE ternro= " & Ternro & _
    " AND gttempdesde <= " & ConvFecha(Fecha) & " AND gttemphasta >= " & ConvFecha(Fecha)
    OpenRecordset StrSql, rs
    
    If rs.EOF Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "No hay nada en gti_detturtemp. SQL => " & StrSql
        End If
        Exit Sub
    End If
    
    rs.MoveFirst
    'realiza la resta
    Hora = rs!ttemphdesde1
    If Not objFechasHoras.ValidarHora(Hora) Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Hora invalida " & Hora
        End If
        Exit Sub
    End If
    
    'FGZ - 16/09/2010 -----------------------------------------------------
    'Call objFechasHoras.RestaXHoras(Fecha, Hora, VentEnt, fecres, horres)
    If Horario_Movil Then
        Call objFechasHoras.RestaXHoras(fecha_desde, Hora, VentEnt, fecres, horres)
    Else
        Call objFechasHoras.RestaXHoras(Fecha, Hora, VentEnt, fecres, horres)
    End If
    'FGZ - 16/09/2010 -----------------------------------------------------
    If Not objFechasHoras.ValidarHora(horres) Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Hora invalida " & horres
        End If
        Exit Sub
    End If
   
    fecha_desde = fecres
    hora_desde = horres
    
    If Not EsNulo(rs!ttemphdesde3) And Not EsNulo(rs!ttemphhasta3) And (rs!ttemphdesde3 <> "0000") And (rs!ttemphhasta3 <> "0000") Then
        If rs!diasiguiente = 1 Or rs!diasiguiente = 2 Or rs!diasiguiente = 3 Then
            Fecha = Fecha + 1
        End If
        Hora = rs!ttemphhasta3
    Else
        If Not EsNulo(rs!ttemphdesde2) And Not EsNulo(rs!ttemphhasta2) And (rs!ttemphdesde2 <> "0000") And (rs!ttemphhasta2 <> "0000") Then
            If rs!diasiguiente = 1 Or rs!diasiguiente = 2 Then
                Fecha = Fecha + 1
            End If
            Hora = rs!ttemphhasta2
        Else
            If rs!diasiguiente = 1 Then
                Fecha = Fecha + 1
            End If
            Hora = rs!ttemphhasta1
        End If
    End If

    If Not objFechasHoras.ValidarHora(Hora) Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Hora invalida " & Hora
        End If
        Exit Sub
    End If
    
    Call objFechasHoras.SumoHoras(Fecha, Hora, VentSal, fecres, horres)
    If Not objFechasHoras.ValidarHora(horres) Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Hora invalida " & horres
        End If
        Exit Sub
    End If

    fecha_hasta = fecres
    hora_hasta = horres
Else
    If Not Horario_Movil And Not Horario_Flexible_Rotativo Then
        StrSql = "SELECT diahoradesde1,diahorahasta1,diahoradesde2,diahorahasta2,diahoradesde3,diahorahasta3,diasiguiente FROM gti_dias WHERE dianro= " & Nro_Dia
        rs.Open StrSql, objConn, adOpenForwardOnly, adLockReadOnly
        
        If rs.EOF Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "No Hay configuracion del Dia. SQl => " & StrSql
            End If
            Exit Sub
        End If
        
        rs.MoveFirst
    
        Hora = rs!diahoradesde1
        If Not objFechasHoras.ValidarHora(Hora) Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Hora invalida " & Hora
            End If
            Exit Sub
        End If
    
        Call objFechasHoras.RestaXHoras(Fecha, Hora, VentEnt, fecres, horres)
        If Not objFechasHoras.ValidarHora(horres) Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Hora invalida " & horres
            End If
            Exit Sub
        End If
        fecha_desde = fecres
        hora_desde = horres
               
        If rs!diahoradesde3 <> "0000" And rs!diahorahasta3 <> "0000" Then
            If rs!diasiguiente = 1 Or rs!diasiguiente = 2 Or rs!diasiguiente = 3 Then
                Fecha = Fecha + 1
            End If
            Hora = rs!diahorahasta3
        Else
            If rs!diahoradesde2 <> "0000" And rs!diahorahasta2 <> "0000" Then
                If rs!diasiguiente = 1 Or rs!diasiguiente = 2 Then
                    Fecha = Fecha + 1
                End If
                Hora = rs!diahorahasta2
            Else
                If rs!diasiguiente = 1 Then
                    Fecha = Fecha + 1
                End If
                Hora = rs!diahorahasta1
            End If
        End If
        
        If Not objFechasHoras.ValidarHora(Hora) Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Hora invalida " & Hora
            End If
            Exit Sub
        End If
        Call objFechasHoras.SumoHoras(Fecha, Hora, VentSal, fecres, horres)
        If Not objFechasHoras.ValidarHora(horres) Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Hora invalida " & horres
            End If
            Exit Sub
        End If
        
        fecha_hasta = fecres
        hora_hasta = horres
    Else
        'Es horario movil
        'Entrada
        Hora = E1
        If Not objFechasHoras.ValidarHora(Hora) Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Hora invalida " & Hora
            End If
            Exit Sub
        End If
        Call objFechasHoras.RestaXHoras(Fecha, Hora, VentEnt, fecres, horres)
        If Not objFechasHoras.ValidarHora(horres) Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Hora invalida " & horres
            End If
            Exit Sub
        End If
        fecha_desde = fecres
        hora_desde = horres
        
        'Salida
        Hora = S1
        If Not objFechasHoras.ValidarHora(Hora) Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Hora invalida " & Hora
            End If
        Exit Sub
        End If
        Call objFechasHoras.SumoHoras(Fecha, Hora, VentSal, fecres, horres)
        If Not objFechasHoras.ValidarHora(horres) Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Hora invalida " & horres
            End If
            Exit Sub
        End If
        
        fecha_hasta = fecres
        hora_hasta = horres
        
        If Pasa_de_Dia Then
            Fecha = Fecha + 1
        End If
    End If
End If

If rs.State = adStateOpen Then rs.Close
Set rs = Nothing
End Sub



Public Sub Politica60v2_oldw(Fecha As Date, Ternro As Long, Nro_Dia As Integer, P_Asignacion As Boolean, ByVal Cabecera As Long, ByVal VentSal As String, ByVal VentEnt As String)
' --------------------------------------------------------------
' Descripcion:
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' --------------------------------------------------------------

Dim rs As New ADODB.Recordset

Dim Hora As String
Dim fecres As Date
Dim horres As String
Dim ok As Boolean


'Parametros

'Select Case subn
'Case 1  'veys 1
'    ventent = "0300"
'    ventsal = "0500"
'Case 2  'veys 3
'    ventent = "0400"
'    ventsal = "0600"
'Case 4  'veys 5
'    ventent = "0300"
'    ventsal = "0700"
'Case 5  'veys 6
'    ventent = "0300"
'    ventsal = "0900"
'End Select

If P_Asignacion Then

    StrSql = "SELECT * FROM gti_detturtemp WHERE ternro= " & Ternro & _
    " AND gttempdesde <= " & ConvFecha(Fecha) & " AND gttemphasta >= " & ConvFecha(Fecha)
    OpenRecordset StrSql, rs
    
    If rs.EOF Then
        Exit Sub
    End If
    
    rs.MoveFirst
'        /*** realiza la resta ***/
    Hora = rs!ttemphdesde1
    If Not objFechasHoras.ValidarHora(Hora) Then
        Exit Sub
    End If
    Call objFechasHoras.RestaXHoras(Fecha, Hora, VentEnt, fecres, horres)
    If Not objFechasHoras.ValidarHora(horres) Then
        Exit Sub
    End If
    
    
    fecha_desde = fecres
    hora_desde = horres
    
    If (rs!ttemphdesde3 <> "0000") And (rs!ttemphhasta3 <> "0000") Then
        If rs!diasiguiente = 1 Or rs!diasiguiente = 2 Or rs!diasiguiente = 3 Then
            Fecha = Fecha + 1
        End If
        Hora = rs!ttemphhasta3
    Else
        If (rs!ttemphdesde2 <> "0000") And (rs!ttemphhasta2 <> "0000") Then
            If rs!diasiguiente = 1 Or rs!diasiguiente = 2 Then
                Fecha = Fecha + 1
            End If
            Hora = rs!ttemphhasta2
        Else
            If rs!diasiguiente = 1 Then
                Fecha = Fecha + 1
            End If
            Hora = rs!ttemphhasta1
        End If
    End If

    If Not objFechasHoras.ValidarHora(Hora) Then
        Exit Sub
    End If
    
    Call objFechasHoras.SumoHoras(Fecha, Hora, VentSal, fecres, horres)
    If Not objFechasHoras.ValidarHora(horres) Then
        Exit Sub
    End If

    fecha_hasta = fecres
    hora_hasta = horres
Else
    StrSql = "SELECT * FROM gti_dias WHERE dianro= " & Nro_Dia
    rs.Open StrSql, objConn, adOpenForwardOnly, adLockReadOnly
    
    If rs.EOF Then
        Exit Sub
    End If
    
    rs.MoveFirst

    Hora = rs!diahoradesde1
    
    If Not objFechasHoras.ValidarHora(Hora) Then
        Exit Sub
    End If
    
    Call objFechasHoras.RestaXHoras(Fecha, Hora, VentEnt, fecres, horres)
    
    If Not objFechasHoras.ValidarHora(horres) Then
        Exit Sub
    End If
    
    fecha_desde = fecres
    hora_desde = horres
    
    If rs!diahoradesde3 <> "0000" And rs!diahorahasta3 <> "0000" Then
        If rs!diasiguiente = 1 Or rs!diasiguiente = 2 Or rs!diasiguiente = 3 Then
            Fecha = Fecha + 1
        End If
        Hora = rs!diahorahasta3
    Else
        If rs!diahoradesde2 <> "0000" And rs!diahorahasta2 <> "0000" Then
            If rs!diasiguiente = 1 Or rs!diasiguiente = 2 Then
                Fecha = Fecha + 1
            End If
            Hora = rs!diahorahasta2
        Else
            If rs!diasiguiente = 1 Then
                Fecha = Fecha + 1
            End If
            Hora = rs!diahorahasta1
        End If
    End If

    If Not objFechasHoras.ValidarHora(Hora) Then
        Exit Sub
    End If
    
    Call objFechasHoras.SumoHoras(Fecha, Hora, VentSal, fecres, horres)
    If Not objFechasHoras.ValidarHora(horres) Then
        Exit Sub
    End If
    
    fecha_hasta = fecres
    hora_hasta = horres
    
End If

If rs.State = adStateOpen Then rs.Close

Set rs = Nothing

End Sub

Public Sub Politica60v3_new(Fecha As Date, Ternro As Long, Nro_Dia As Integer, P_Asignacion As Boolean, ByVal Cabecera As Long, ByVal VentSal As String, ByVal VentEnt As String)
' --------------------------------------------------------------
' Descripcion:
' Autor: FGZ
' Ultima modificacion: FGZ - 20/10/2003
' --------------------------------------------------------------

    fecha_desde = Fecha
    hora_desde = VentEnt
    
    fecha_hasta = Fecha + 1
    hora_hasta = VentSal
End Sub

Public Sub Politica60v3(Fecha As Date, Ternro As Long, Nro_Dia As Integer, P_Asignacion As Boolean, ByVal Cabecera As Long, ByVal VentSal As String, ByVal VentEnt As String)
' --------------------------------------------------------------
' Descripcion:
' Autor: FGZ
' Ultima modificacion: FGZ - 20/10/2003
' --------------------------------------------------------------

    fecha_desde = Fecha
    hora_desde = VentEnt
    
    fecha_hasta = Fecha
    hora_hasta = VentSal
End Sub


Public Sub Politica60v9(Fecha As Date, Ternro As Long, Nro_Dia As Integer, P_Asignacion As Boolean, ByVal Cabecera As Long, ByVal VentSal As String, ByVal VentEnt As String)
Dim rs As New ADODB.Recordset
Dim Rt As New ADODB.Recordset

Dim entrada As Boolean
Dim HoraTeorica As String
Dim HoraRegistracion As String
' --------------------------------------------------------------
' Descripcion: Busca la primer entrada del día, si no encuentra busca la primer entrada del teorico sino 0
              'para la salida busca la ultima reg. del día, si es una entrada busca la siguiente registración que sea salida
' --------------------------------------------------------------


    'Fecha y Hora desde de la Ventana
    hora_desde = "0000"
    HoraRegistracion = "2400"
    HoraTeorica = "2400"
    fecha_desde = Fecha
    
    StrSql = "SELECT reghora "
    StrSql = StrSql & " FROM gti_registracion WHERE ternro= " & Ternro
    StrSql = StrSql & " AND regfecha = " & ConvFecha(Fecha)
    StrSql = StrSql & " AND regentsal = 'E' "
    StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " ORDER BY reghora"
    OpenRecordset StrSql, rs
    If Not (rs.EOF Or rs.BOF) Then
       If Not IsNull(rs.Fields!reghora) Then
          HoraRegistracion = Trim(rs.Fields!reghora)
       End If
    End If
       
    If P_Asignacion Then
       StrSql = "SELECT ttemphdesde1 FROM gti_detturtemp WHERE ternro= " & Ternro & _
                " AND gttempdesde <= " & ConvFecha(Fecha) & " AND gttemphasta >= " & ConvFecha(Fecha)
       OpenRecordset StrSql, Rt
       If Not (Rt.EOF Or Rt.BOF) Then
          Rt.MoveFirst
          If Not IsNull(Rt.Fields!ttemphdesde1) Then
             HoraTeorica = Trim(Rt!ttemphdesde1)
          End If
       End If
    Else
        If Not Horario_Movil And Not Horario_Flexible_Rotativo Then
           StrSql = "SELECT diahoradesde1 FROM gti_dias WHERE dianro= " & Nro_Dia
           OpenRecordset StrSql, Rt
        
           If Not (Rt.EOF Or Rt.BOF) Then
              Rt.MoveFirst
              If Not IsNull(Rt.Fields!diahoradesde1) Then
                 HoraTeorica = Trim(Rt!diahoradesde1)
              End If
           End If
        Else
            HoraTeorica = E1
        End If
    End If
    
    If objFechasHoras.ValidarHora(HoraTeorica) And objFechasHoras.ValidarHora(HoraRegistracion) Then
        If HoraTeorica <> "2400" And HoraRegistracion <> "2400" Then
           If CLng(HoraTeorica) >= CLng(HoraRegistracion) Then
              hora_desde = HoraRegistracion
           Else
              hora_desde = HoraTeorica
           End If
        Else
           If HoraTeorica = "2400" And HoraRegistracion = "2400" Then
              hora_desde = "0000"
           Else
              If HoraTeorica <> "2400" Then
                 hora_desde = HoraTeorica
              Else
                 hora_desde = HoraRegistracion
              End If
           End If
        End If
    
    Else
        hora_desde = "0000"
    End If
    
    If Not objFechasHoras.ValidarHora(hora_desde) Then
       hora_desde = "0000"
    End If
    
    'Fecha y Hora Hasta de la Ventana
    fecha_hasta = Fecha
    hora_hasta = "2359"
    
    
    StrSql = "SELECT reghora,regentsal "
    StrSql = StrSql & " FROM gti_registracion WHERE ternro= " & Ternro
    StrSql = StrSql & " AND regfecha = " & ConvFecha(Fecha)
    StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " ORDER BY reghora desc"
    OpenRecordset StrSql, rs
    entrada = False
    If Not (rs.EOF Or rs.BOF) Then
       If rs.Fields!regentsal = "S" Then
          entrada = False
          'If Not IsNull(rs.Fields!reghora) Then
             'hora_hasta = Trim(rs.Fields!reghora)
          'End If
          hora_hasta = "2359"
       Else
          entrada = True
       End If
    End If

    If entrada Then
       StrSql = "SELECT reghora,regfecha,regentsal "
       StrSql = StrSql & " FROM gti_registracion WHERE ternro= " & Ternro
       StrSql = StrSql & " AND regfecha = " & ConvFecha((Fecha + 1))
       StrSql = StrSql & " AND (regentsal = 'S' or regentsal = 'E')"
       StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
       'FGZ - 19/05/2010 ------------ Control FT -------------
       StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
       'FGZ - 19/05/2010 ------------ Control FT -------------
       StrSql = StrSql & " ORDER BY reghora"
       OpenRecordset StrSql, rs
       If Not (rs.EOF Or rs.BOF) Then
          If rs!regentsal = "E" Then
              fecha_hasta = Fecha
              hora_hasta = "2359"
          Else
              If Not IsNull(rs!reghora) Then
                 fecha_hasta = Fecha + 1
                 hora_hasta = Trim(rs!reghora)
              End If
          End If
       Else
          fecha_hasta = Fecha
          hora_hasta = "2359"
       End If
    End If
    If Not objFechasHoras.ValidarHora(hora_hasta) Then
       hora_hasta = "2359"
    End If

If rs.State = adStateOpen Then rs.Close
Set rs = Nothing

If Rt.State = adStateOpen Then Rt.Close
Set Rt = Nothing
End Sub


Public Sub Politica60v10(Fecha As Date, Ternro As Long, Nro_Dia As Integer, P_Asignacion As Boolean, ByVal Cabecera As Long, ByVal VentSal As String, ByVal VentEnt As String)
' --------------------------------------------------------------
' Descripcion: Esta version es igual que la version 1 pero hace unos controles extras
'       Busca la primer reg del día para determinar si el turno es nocturno o no
'       Si el turno es Noctruno ==> supone la entrada en el dia anterior al procesado
' Autor: FGZ - 25/10/2010
' Ultima modificacion:
' --------------------------------------------------------------
Dim rs As New ADODB.Recordset
Dim Rt As New ADODB.Recordset

Dim Hora As String
Dim entrada As Boolean
Dim HoraTeorica As String
Dim HoraRegistracion As String
Dim Turno_Nocturno As Boolean
Dim FechaTeorica As Date
Dim Aux_Entrada As Boolean

Dim fecres As Date
Dim horres As String
Dim ok As Boolean

Dim Aux_Fecha As Date


    'Funcionamiento
    '-----------------------------------------------------
    'Si hay parte de asignacion ==>
    '       funciona = que la v1 de la politca 60
    'SINO
    '       Busca la 1er registracion del dia
    '
    '   Opciones
    '   1)Si la primera registración es una S entre un rango de 04 am a 07 am, que arme la ventana buscando una registración E en el día anterior entre un rango de 20 pm a 24, sino que arme tal como lo hace la versión 1 Al horario de entrada teórico  del turno asociado al empleado, le resto una determinada cantidad de horas, formando el inicio de la ventana. Luego, a este resultado, le sumo una cantidad de horas formando el fin de la ventana..
    '   2)Si la primer registración de E entre un rango de 20 a 24, que descarte esta registración para el dia siguiente, sino que arme tal como lo hace la versión 1 Al horario de entrada teórico  del turno asociado al empleado, le resto una determinada cantidad de horas, formando el inicio de la ventana. Luego, a este resultado, le sumo una cantidad de horas formando el fin de la ventana..
    
    '   Ver si no corresponde aplicar mismas lógicas para la política 50.
    '   Cuando la política aplique la primera condición, de cualquiera de las opciones descriptas, debería armar una ventana parecida a la que se muestra en el log del doc,
    '   de esta forma se va a poder procesar las licencias de vacaciones cuando estas coincidan con una fichada de entrada al turno.
    
    '   Nota:
    '   En los casos en que falte una registración estas opciones no van a funcionar pero como tienen la política 110 que detecta las registraciones faltantes el usuario las va a completar.
    'End
    '-----------------------------------------------------
    
    'Fecha y Hora desde de la Ventana
    'hora_desde = "0000"
    'HoraRegistracion = "2400"
    'HoraTeorica = "2400"
    'fecha_desde = Fecha
    
    FechaTeorica = Fecha
    Turno_Nocturno = False
    
    If P_Asignacion Then
       StrSql = "SELECT ttemphdesde1 FROM gti_detturtemp WHERE ternro= " & Ternro & _
                " AND gttempdesde <= " & ConvFecha(Fecha) & " AND gttemphasta >= " & ConvFecha(Fecha)
       OpenRecordset StrSql, Rt
       If Not (Rt.EOF Or Rt.BOF) Then
          Rt.MoveFirst
          If Not IsNull(Rt.Fields!ttemphdesde1) Then
             HoraTeorica = Trim(Rt!ttemphdesde1)
          End If
       End If
    Else
        StrSql = "SELECT reghora,regentsal "
        StrSql = StrSql & " FROM gti_registracion WHERE ternro= " & Ternro
        StrSql = StrSql & " AND regfecha = " & ConvFecha(Fecha)
        StrSql = StrSql & " AND regestado = 'I' "
        StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
        StrSql = StrSql & " ORDER BY reghora"
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            If Not EsNulo(rs!regentsal) Then
                If rs!regentsal = "E" Then
                    Aux_Entrada = True
                Else
                    Aux_Entrada = False
                End If
            End If
            If Not IsNull(rs!reghora) Then
                HoraRegistracion = Trim(rs!reghora)
            
                If Aux_Entrada Then
                    'Si la Entrada es en un rango de 20 a 24, turno nocturno, con lo cual esta registracion será descartada
                    'sino que arme tal como lo hace la versión 1.
                    If HoraRegistracion >= "2000" Then
                        Turno_Nocturno = True
                        FechaTeorica = Fecha - 1
                    End If
                Else
                    'Si la Salida es en un rango de 04 am a 07, entonces es nocturno.
                    If HoraRegistracion >= "0400" And HoraRegistracion <= "0700" Then
                        Turno_Nocturno = True
                        FechaTeorica = Fecha - 1
                    End If
                End If
            End If
        End If
    End If

If Not P_Asignacion Then
    StrSql = "SELECT diahoradesde1,diaanterior FROM gti_dias WHERE dianro= " & Nro_Dia
    OpenRecordset StrSql, rs
Else
    StrSql = "SELECT ttemphdesde1,diaanterior FROM gti_detturtemp WHERE ternro= " & Ternro & _
    " AND gttempdesde <= " & ConvFecha(Fecha) & " AND gttemphasta >= " & ConvFecha(Fecha)
    OpenRecordset StrSql, rs
End If
If rs.EOF Then
    Exit Sub
End If
rs.MoveFirst

If Not P_Asignacion Then
    If Not Horario_Movil And Not Horario_Flexible_Rotativo Then
        If Not EsNulo(rs!diahoradesde1) Then
            Hora = rs!diahoradesde1
        Else
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "Dia " & Nro_Dia & " con diahoradesde1 Nulo"
            End If
            Hora = "0000"
        End If
    Else
        If Horario_Movil Then
            Hora = E1
            fecha_desde = FE1
        Else
            Hora = E1
            Fecha = FE1
        End If
    End If
Else
    If Not EsNulo(rs!ttemphdesde1) Then
        Hora = rs!ttemphdesde1
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "Parte con ttemphdesde1 Nulo"
        End If
        Hora = "0000"
    End If
End If
If Not objFechasHoras.ValidarHora(Hora) Then
    Exit Sub
End If


'Call objFechasHoras.RestaXHoras(Fecha, Hora, VentEnt, fecres, horres)
Call objFechasHoras.RestaXHoras(FechaTeorica, Hora, VentEnt, fecres, horres)
If Not objFechasHoras.ValidarHora(horres) Then
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Hora Invalida " & horres
    End If
    Exit Sub
End If

If Not Horario_Movil And Not Horario_Flexible_Rotativo Then
    If Not EsNulo(rs!diaanterior) Then
        If CBool(rs!diaanterior) Then
            fecha_desde = fecres - 1
        Else
            fecha_desde = fecres
        End If
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "Dia anterior NULO "
            Flog.writeline Espacios(Tabulador * 3) & "fecha desde = " & fecres
        End If
        fecha_desde = fecres
    End If
Else
    fecha_desde = fecres
End If
hora_desde = horres

If Not objFechasHoras.ValidarHora(Hora) Then
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Hora Invalida " & Hora
    End If
    Exit Sub
End If

Call objFechasHoras.SumoHoras(fecha_desde, hora_desde, VentSal, fecres, horres)
If Not objFechasHoras.ValidarHora(horres) Then
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Hora Invalida " & horres
    End If
    Exit Sub
End If

fecha_hasta = fecres
hora_hasta = horres
If Turno_Nocturno Then
    FE1 = FE1 - 1
    FS1 = FS1 - 1
    Horario_Movil = True
    Horario_Flexible_Rotativo = True
    Pasa_de_Dia = True
End If


'FGZ - 19/07/2007 - Control sobre al armado de la ventana
Call Politica(61)
'-------------------------------------------


If rs.State = adStateOpen Then rs.Close
Set rs = Nothing

If Rt.State = adStateOpen Then Rt.Close
Set Rt = Nothing
End Sub


Public Sub Politica60v11(Fecha As Date, Ternro As Long, Nro_Dia As Integer, P_Asignacion As Boolean, ByVal Cabecera As Long, ByVal VentSal As String, ByVal VentEnt As String)
' --------------------------------------------------------------
' Descripcion: Esta version es igual que la version 1 pero hace unos controles extras
'       Si encuentra un parte de Asignacion horaria se basa en dicho parte y determina si el turno es nocturno(Verifica si el empleado entra un dia y sale al dia siguiente).
'       Si el turno es nocturno busca la fichada desde el dia anterior a hoy segun la ventana configurada en la politica.
'       Si el turno es Noctruno ==> supone la entrada en el dia anterior al procesado
' Autor: EAM - 06/03/2012
' Ultima modificacion:
' --------------------------------------------------------------
Dim rs As New ADODB.Recordset
Dim Hora As String
Dim Turno_Nocturno As Boolean
Dim FechaTeorica As Date
Dim fecres As Date
Dim horres As String
Dim ok As Boolean

Dim Aux_Fecha As Date

    'Funcionamiento
    '-----------------------------------------------------
    'Si hay parte de asignacion ==>
    '       Se basa en el parte de asignacion horaria y arma la ventana igual que la version 1. Resta y suma horas al HT
    '       Determina si la fichada de salida cae al dia siguiente > 2400 para verificar si es un turno nocturno
    'SINO
    '   Se basa en el turno y arma la ventana igual que la version 1. Resta y suma horas al HT
    '       Determina si la fichada de salida cae al dia siguiente > 2400 para verificar si es un turno nocturno
    'End
    '-----------------------------------------------------


    FechaTeorica = Fecha
    Turno_Nocturno = False
    
    'EAM- Verifica si tiene un parte de asignacion horaria o sino se basa en el turno y verifica si el horario es Nocturno
    If P_Asignacion Then
        'EAM- si tiene un parte calcula la ventana en función de éste
        StrSql = "SELECT ttemphdesde1,ttemphhasta1,diaanterior FROM gti_detturtemp WHERE ternro= " & Ternro & _
                " AND gttempdesde <= " & ConvFecha(Fecha) & " AND gttemphasta >= " & ConvFecha(Fecha)
        OpenRecordset StrSql, rs
        
        If Not rs.EOF Then
            If rs!ttemphdesde1 > rs!ttemphhasta1 Then
                Turno_Nocturno = True
                FechaTeorica = Fecha - 1
            End If
        Else
            Exit Sub
        End If
    Else
        StrSql = "SELECT diahoradesde1,diahorahasta1,diaanterior FROM gti_dias WHERE dianro= " & Nro_Dia
        OpenRecordset StrSql, rs
        
        If Not rs.EOF Then
            If rs!diahoradesde1 > rs!diahorahasta1 Then
                Turno_Nocturno = True
                FechaTeorica = Fecha - 1
            End If
        Else
            Exit Sub
        End If
    End If
    

If Not P_Asignacion Then
    If Not Horario_Movil And Not Horario_Flexible_Rotativo Then
        If Not EsNulo(rs!diahoradesde1) Then
            Hora = rs!diahoradesde1
        Else
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "Dia " & Nro_Dia & " con diahoradesde1 Nulo"
            End If
            Hora = "0000"
        End If
    Else
        If Horario_Movil Then
            Hora = E1
            fecha_desde = FE1
        Else
            Hora = E1
            Fecha = FE1
        End If
    End If
Else
    If Not EsNulo(rs!ttemphdesde1) Then
        Hora = rs!ttemphdesde1
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "Parte con ttemphdesde1 Nulo"
        End If
        Hora = "0000"
    End If
End If
If Not objFechasHoras.ValidarHora(Hora) Then
    Exit Sub
End If


Call objFechasHoras.RestaXHoras(FechaTeorica, Hora, VentEnt, fecres, horres)
If Not objFechasHoras.ValidarHora(horres) Then
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Hora Invalida " & horres
    End If
    Exit Sub
End If

If Not Horario_Movil And Not Horario_Flexible_Rotativo Then
    If Not EsNulo(rs!diaanterior) Then
        If CBool(rs!diaanterior) Then
            fecha_desde = fecres - 1
        Else
            fecha_desde = fecres
        End If
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "Dia anterior NULO "
            Flog.writeline Espacios(Tabulador * 3) & "fecha desde = " & fecres
        End If
        fecha_desde = fecres
    End If
Else
    fecha_desde = fecres
End If
hora_desde = horres

If Not objFechasHoras.ValidarHora(Hora) Then
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Hora Invalida " & Hora
    End If
    Exit Sub
End If

Call objFechasHoras.SumoHoras(fecha_desde, hora_desde, VentSal, fecres, horres)
If Not objFechasHoras.ValidarHora(horres) Then
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Hora Invalida " & horres
    End If
    Exit Sub
End If

fecha_hasta = fecres
hora_hasta = horres
If Turno_Nocturno Then
    FE1 = FE1 - 1
    'FS1 = FS1 - 1
    Horario_Movil = True
    Horario_Flexible_Rotativo = True
    Pasa_de_Dia = True
End If


'FGZ - 19/07/2007 - Control sobre al armado de la ventana
Call Politica(61)
'-------------------------------------------


If rs.State = adStateOpen Then rs.Close
Set rs = Nothing

'If Rt.State = adStateOpen Then Rt.Close
'Set Rt = Nothing
End Sub


Public Sub Politica60v4(Fecha As Date, Ternro As Long, Nro_Dia As Integer, P_Asignacion As Boolean, ByVal Cabecera As Long, ByVal VentSal As String, ByVal VentEnt As String)
' --------------------------------------------------------------
' Descripcion:  El desde es la fecha y hora de la salida del dia anterior (Teorica) y el hasta
'                   es el desde + cantidad de horas (parametro de la politica).
' OBS:          1)
'                   Si el dia a analizar es Lunes entonces generalmente el dia anterior no se trabaja
'                   por le que se tomará la hora de salida del ultimo dia habil del turno,
'                   tipicamente Viernes.
'               2)
'                   Si tiene parte de asignacion para ese dia ==> se calcula segun los horarios del partes
'                       y se descarta el funcionamiento de la politica.
' Autor     :   FGZ
' Fecha     :   02/08/2005
' --------------------------------------------------------------
Dim rs As New ADODB.Recordset

Dim sumahoras As String
Dim Encontro As Boolean
Dim Dlibre As Boolean
Dim Aux_Fecha As Date
Dim Aux_Nro_dia As Integer

    Dlibre = False
    sumahoras = "0000"
    'Fecha y Hora desde de la Ventana
    If P_Asignacion Then
       StrSql = "SELECT ttemphdesde1 FROM gti_detturtemp WHERE ternro= " & Ternro
       StrSql = StrSql & " AND gttempdesde <= " & ConvFecha(Fecha) & " AND gttemphasta >= " & ConvFecha(Fecha)
       OpenRecordset StrSql, rs
       If Not rs.EOF Then
          rs.MoveFirst
          If Not IsNull(rs!ttemphdesde1) Then
             hora_desde = Trim(rs!ttemphdesde1)
             fecha_desde = Fecha
          End If
       End If
    Else
        Encontro = False
        Aux_Fecha = DateAdd("d", -1, Fecha)
        Do While Not Encontro
            Aux_Nro_dia = Buscar_Dia_W(Aux_Fecha, Fecha_Inicio, Nro_Turno, Empleado.Ternro)
        
            If Not Horario_Movil And Not Horario_Flexible_Rotativo Then
                StrSql = "SELECT diahoradesde1,diahorahasta1,diahoradesde2,diahorahasta2,diahoradesde3,diahorahasta3,diasiguiente FROM gti_dias WHERE dianro= " & Aux_Nro_dia
                OpenRecordset StrSql, rs
                If Not rs.EOF Then
                    rs.MoveLast
                    If Not IsNull(rs!diahorahasta3) And rs!diahorahasta3 <> "0000" Then
                        hora_desde = Trim(rs!diahorahasta3)
                        fecha_desde = Aux_Fecha
                        Encontro = True
                    Else
                        If Not IsNull(rs!diahorahasta2) And rs!diahorahasta2 <> "0000" Then
                            hora_desde = Trim(rs!diahorahasta2)
                            fecha_desde = Aux_Fecha
                            Encontro = True
                        Else
                            If Not IsNull(rs!diahorahasta1) And rs!diahorahasta1 <> "0000" Then
                                hora_desde = Trim(rs!diahorahasta1)
                                fecha_desde = Aux_Fecha
                                Encontro = True
                            End If
                        End If
                    End If
                End If
            Else
                'Horario Movil
                Call Buscar_HTeorico_Turno_Movil(Ternro, Aux_Fecha, hora_desde, fecha_desde, hora_hasta, fecha_hasta, Encontro)
            End If
            If Not Encontro Then
                Aux_Fecha = DateAdd("d", -1, Aux_Fecha)
                sumahoras = CStr(CInt(sumahoras) + 2400)
                Dlibre = True
            End If
        Loop
    End If
       
    If Not objFechasHoras.ValidarHora(hora_desde) Then
        hora_desde = "0000"
    End If
    
    'Fecha y Hora Hasta de la Ventana
    If Not Dlibre Then
        VentSal = CStr(CInt(sumahoras) + CInt(VentSal))
        Call objFechasHoras.SumoHoras(fecha_desde, hora_desde, VentSal, fecha_hasta, hora_hasta)
    Else
       hora_hasta = "2359"
       fecha_hasta = Fecha
    End If
    
'    If Not objFechasHoras.ValidarHora(hora_hasta) Then
'       hora_hasta = ventsal
'       fecha_hasta = Fecha
'    End If

End Sub

Public Sub Politica61(Fecha As Date, NroTer As Long, Nro_Dia As Integer, P_Asignacion As Boolean, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Acorta la ventana generada por la pol 60 bajo ciertas condiciones
'
' Autor: FGZ - 19/07/2007
' Ultima modificacion: FGZ - 21/09/2007 - se agregó control de si reloj marca e/s
' --------------------------------------------------------------
Dim rs As New ADODB.Recordset
Dim Cantidad As Integer

Dim Encontrado As Boolean
Dim fecres As Date
Dim horres As String
Dim ok As Boolean
Dim Opcion As Long
Dim Reg_Oblig As Integer
Dim F_Desde As Date
Dim H_Desde As String
Dim Ultima_Reg_nro As Long
Dim Ultima_Reg_Fecha As Date
Dim Ultima_Reg_hora As String

Call SetearParametrosPolitica(Detalle, ok)
If Not ok Then
    Exit Sub
End If
Opcion = st_Opcion


'Calculo la cantidad de reg obligatorias
Reg_Oblig = 0
If Not EsNulo(S1) Then
    Reg_Oblig = Reg_Oblig + 2
End If
If Not EsNulo(S2) Then
    Reg_Oblig = Reg_Oblig + 2
End If
If Not EsNulo(S3) Then
    Reg_Oblig = Reg_Oblig + 2
End If


'Busco las registraciones del intervalo en cuestión
If depurar Then
    Flog.writeline Espacios(Tabulador * 2) & " Antes del control "
    Flog.writeline Espacios(Tabulador * 2) & " DESDE    : " & fecha_desde & " " & hora_desde
    Flog.writeline Espacios(Tabulador * 2) & " HASTA    : " & fecha_hasta & " " & hora_hasta
End If

StrSql = "SELECT * FROM gti_registracion "
StrSql = StrSql & " WHERE ternro= " & NroTer
StrSql = StrSql & " AND ((regestado = 'I') OR (regestado = 'S'))"
StrSql = StrSql & " AND ( (regfecha > " & ConvFecha(fecha_desde) & ") OR (regfecha = " & ConvFecha(fecha_desde)
StrSql = StrSql & " AND reghora >= '" & hora_desde & "') )"
StrSql = StrSql & " AND ( (regfecha < " & ConvFecha(fecha_hasta) & ") OR (regfecha = " & ConvFecha(fecha_hasta)
StrSql = StrSql & " AND reghora <= '" & hora_hasta & "') )"
StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
'FGZ - 19/05/2010 ------------ Control FT -------------
StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
'FGZ - 19/05/2010 ------------ Control FT -------------
StrSql = StrSql & " ORDER BY regfecha, reghora"
OpenRecordset StrSql, rs
Cantidad = rs.RecordCount
If (Not rs.EOF) And (Not rs.BOF) Then
    rs.MoveLast
    F_Desde = rs!regfecha
    H_Desde = rs!reghora
    
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Cantidad de Registraciones encontradas en la ventana: " & Cantidad
        Flog.writeline Espacios(Tabulador * 2) & "Ultima Registracion: " & rs!regentsal & " " & F_Desde & " " & H_Desde
    End If
    
    'Si son impares, entonces me falta una.
    'Tengo que encontrar una de salida para cerrar.
    'La ultima encontrada tiene que ser de entrada
    'FGZ - 21/09/2007 - se agregó control de si el reloj marca e/s
    'If ((Cantidad Mod 2) <> 0) And rs!regentsal = "E" Then
    If ((Cantidad Mod 2) <> 0) And ((rs!regentsal = "E" And usaRelojEntradaSalida) Or (Not usaRelojEntradaSalida)) Then
        If Cantidad > Reg_Oblig And F_Desde > p_fecha Then
            'Descarto la ultima registracion y achico la ventana
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "Acorto Ventana a justo antes de la registracion " & F_Desde & " " & H_Desde
            End If
            
            'Fecha y hora desde quedan como estan pero fecha y hora hasta es justo antes de la entrada encontrada en la ventana inicial
            'lo que se quiere hacer es dejar esta registracion para el analisis del dia siguientes
            Call objFechasHoras.RestaXHoras(F_Desde, H_Desde, "0001", fecres, horres)
            If objFechasHoras.ValidarHora(horres) Then
                fecha_hasta = fecres
                hora_hasta = horres
            End If
        End If
    End If
End If

If rs.State = adStateOpen Then rs.Close
Set rs = Nothing
End Sub



Public Sub Politica650()

    usaControlDias = True

End Sub

Sub Politica700(Fecha As Date, NroTer As Long, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion:
' Autor:
' Ultima modificacion: FGZ - 20/09/2006 - Se redefinió porque cambiaron los coeficientes y agregaron un coeficiente nuevo(106)
' --------------------------------------------------------------
Dim rs As New ADODB.Recordset
Dim rs_His As New ADODB.Recordset
Dim rs_reg As New ADODB.Recordset
Dim rs_Rel As New ADODB.Recordset
Dim rs_Suc As New ADODB.Recordset
Dim rs_Estr_cod As New ADODB.Recordset
Dim rs_TH As New ADODB.Recordset

Dim ok As Boolean
Dim Opcion As Integer

Dim H50 As Long
Dim H72 As Long
Dim H100 As Long
Dim H130 As Long
Dim Hfer As Long
Dim Hnor As Long
Dim Hn50 As Long
Dim Hfrt As Long 'Franco Trabajado
Dim Hfrnt As Long 'Franco No Trabajado
Dim Hfenormal As Long ' Feriado Trabajado
Dim H1012 As Long
Dim H1027 As Long
Dim THOrigen As Long
Dim Destino As Long
Dim Codigo_Reg As Long
Dim Empsuc As Long
Dim Aux_CodExt As String
Dim Aux_Suc As String

Call SetearParametrosPolitica(Detalle, ok)
If Not ok Then
    Exit Sub
End If
Opcion = st_Opcion

Select Case Opcion
Case 1: 'Es la estandar. desde la primer registracion del dia hasta  hora de la reg + TamVent
    H50 = 1
    H72 = 5
    H100 = 2
    H130 = 67
    Hfer = 35
    Hnor = 3
    Hn50 = 1008
    Hfrt = 1013
    Hfrnt = 1014
    Hfenormal = 1015
    H1012 = 1012
    H1027 = 1027
    
    'Busco la sucursal del empleado
    StrSql = "SELECT sucursal.ternro FROM his_estructura "
    StrSql = StrSql & " INNER JOIN estructura ON his_estructura.estrnro = estructura.estrnro "
    StrSql = StrSql & " INNER JOIN sucursal ON sucursal.estrnro = estructura.estrnro"
    StrSql = StrSql & " WHERE his_estructura.tenro = 1"
    StrSql = StrSql & " AND his_estructura.ternro = " & NroTer
    StrSql = StrSql & " AND (his_estructura.htetdesde <= " & ConvFecha(Fecha) & ")"
    StrSql = StrSql & " AND ((" & ConvFecha(Fecha) & " <= his_estructura.htethasta) or (his_estructura.htethasta is null))"
    StrSql = StrSql & " ORDER BY his_estructura.htetdesde "
    If rs_His.State = adStateOpen Then rs_His.Close
    OpenRecordset StrSql, rs_His
    If Not rs_His.EOF Then
        Empsuc = rs_His!Ternro
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Empleado sin sucursal, conversion abortada. SQL: " & StrSql
        End If
    End If
    
    StrSql = "SELECT * FROM gti_horcumplido "
    StrSql = StrSql & " WHERE gti_horcumplido.horfecrep = " & ConvFecha(Fecha)
    StrSql = StrSql & " AND ternro = " & NroTer
    StrSql = StrSql & " AND ( thnro = " & H50
    StrSql = StrSql & " OR thnro = " & H72
    StrSql = StrSql & " OR thnro = " & H100
    StrSql = StrSql & " OR thnro = " & H130
    StrSql = StrSql & " OR thnro = " & Hn50
    StrSql = StrSql & " OR thnro = " & Hnor
    StrSql = StrSql & " OR thnro = " & Hfrt
    StrSql = StrSql & " OR thnro = " & Hfrnt
    StrSql = StrSql & " OR thnro = " & Hfer
    StrSql = StrSql & " OR thnro = " & Hfenormal
    StrSql = StrSql & ")"
    
    StrSql = StrSql & " ORDER BY gti_horcumplido.regent "
    OpenRecordset StrSql, rs
    Do While Not rs.EOF
    
        'si son horas generadas por sin registracion (fijas) no se convierten
        THOrigen = 0
        Destino = 0
        Codigo_Reg = 0
        THOrigen = rs!thnro
        If Not EsNulo(rs!regent) Then
            Codigo_Reg = rs!regent
        Else
            If Not EsNulo(rs!regsal) Then
                Codigo_Reg = rs!regsal
            End If
        End If
   
        StrSql = "SELECT * FROM gti_registracion "
        StrSql = StrSql & " WHERE gti_registracion.regnro = " & Codigo_Reg
        If rs_reg.State = adStateOpen Then rs_reg.Close
        OpenRecordset StrSql, rs_reg
        If rs_reg.EOF Then
            StrSql = "SELECT * FROM gti_registracion "
            StrSql = StrSql & " WHERE ternro= " & NroTer
            StrSql = StrSql & " AND gti_registracion.fechaproc = " & ConvFecha(Fecha)
            'FGZ - 19/05/2010 ------------ Control FT -------------
            StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
            'FGZ - 19/05/2010 ------------ Control FT -------------
            If rs_reg.State = adStateOpen Then rs_reg.Close
            OpenRecordset StrSql, rs_reg
        End If
        
        If Not rs_reg.EOF Then
        
            StrSql = "SELECT * FROM gti_reloj "
            StrSql = StrSql & " WHERE gti_reloj.relnro = " & rs_reg!relnro
            If rs_Rel.State = adStateOpen Then rs_Rel.Close
            OpenRecordset StrSql, rs_Rel
            If Not rs_Rel.EOF Then
                Aux_CodExt = IIf(Not EsNulo(rs_Rel!relcodext), rs_Rel!relcodext, "-1")
                If Empsuc <> CLng(Aux_CodExt) Then
                    'FGZ - 29/08/2006 - faltaba el campo sucursal.ternro
                    StrSql = "SELECT estructura.estrnro, sucursal.ternro FROM sucursal "
                    StrSql = StrSql & " INNER JOIN estructura ON estructura.estrnro = sucursal.estrnro "
                    StrSql = StrSql & " WHERE sucursal.ternro = " & CLng(Aux_CodExt)
                    If rs_Suc.State = adStateOpen Then rs_Suc.Close
                    OpenRecordset StrSql, rs_Suc
                    If Not rs_Suc.EOF Then
                        'Busco el tipo de codigo 48 asociado a la estructura sucursal
                        StrSql = "SELECT * FROM estr_cod WHERE estrnro =" & rs_Suc!estrnro
                        StrSql = StrSql & " AND tcodnro = 48"
                        If rs_Estr_cod.State = adStateOpen Then rs_Estr_cod.Close
                        OpenRecordset StrSql, rs_Estr_cod
                        If Not rs_Estr_cod.EOF Then
                            Aux_Suc = Trim(Left(CStr(rs_Estr_cod!nrocod), 3))
                        Else
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 2) & "No se encontró el codigo interno para la Sucursal. No hay conversión."
                            End If
                            Aux_Suc = "0"
                        End If
                        'Aux_Suc = Mid(rs_Suc!estrdabr, 1, 2)
                        
                        Select Case Aux_Suc
                        Case "42", "042":   'FGZ - 15/09/2006 -
                            If THOrigen = 1 Then Destino = 43
                            'If (THorigen = 3 And Empsuc = 2884) Then Destino = 1004
                            If THOrigen = 3 Then Destino = 1004
                            If THOrigen = 5 Then Destino = 47
                            If THOrigen = 1013 Then Destino = 1017
                            If THOrigen = 1014 Then Destino = 1021
                            If THOrigen = 1008 Then Destino = 1010
                            If THOrigen = 1015 Then Destino = 1025
                            If THOrigen = 2 Then Destino = 51
                            If THOrigen = 67 Then Destino = 55
                            If THOrigen = 35 Then Destino = 59
                        Case "63", "063":
                            If THOrigen = 1 Then Destino = 44
                            'If (THorigen = 3 And (Empsuc = 2884 Or Empsuc = 2973)) Then Destino = 1005
                            If THOrigen = 3 Then Destino = 1005
                            If THOrigen = 5 Then Destino = 48
                            If THOrigen = 1008 Then Destino = 1011
                            If THOrigen = 1013 Then Destino = 1018
                            If THOrigen = 1014 Then Destino = 1022
                            If THOrigen = 1015 Then Destino = 1026
                            If THOrigen = 2 Then Destino = 52
                            If THOrigen = 67 Then Destino = 56
                            If THOrigen = 35 Then Destino = 60
                        Case "85", "085":
                            If THOrigen = 1 Then Destino = 45
                            If (THOrigen = 3) Then Destino = 1006
                            If THOrigen = 1008 Then Destino = 1012
                            If THOrigen = 1013 Then Destino = 1019
                            If THOrigen = 1014 Then Destino = 1023
                            If THOrigen = 1015 Then Destino = 1027
                            If THOrigen = 5 Then Destino = 49
                            If THOrigen = 2 Then Destino = 53
                            If THOrigen = 67 Then Destino = 57
                            If THOrigen = 35 Then Destino = 61
                        Case "106": 'FGZ - 14/09/2006 Se agregó este coeficiente
                            If THOrigen = 1 Then Destino = 1039
                            If (THOrigen = 3) Then Destino = 1035
                            If THOrigen = 1008 Then Destino = 1036
                            If THOrigen = 1013 Then Destino = 1037
                            If THOrigen = 1014 Then Destino = 1038
                            If THOrigen = 1015 Then Destino = 1044
                            If THOrigen = 5 Then Destino = 1040
                            If THOrigen = 2 Then Destino = 1041
                            If THOrigen = 67 Then Destino = 1042
                            If THOrigen = 35 Then Destino = 1043
                        Case Else
                            'Nada
                        End Select
                        
                        'Convierto
                        If Destino <> 0 Then
                            'verificar que el tipo de hora destino exista
                            StrSql = "SELECT * FROM gti_config_tur_hor WHERE thnro = " & Destino
                            StrSql = StrSql & " AND turnro = " & Nro_Turno
                            OpenRecordset StrSql, rs_TH
                            If Not rs.EOF Then
                                StrSql = "UPDATE gti_horcumplido SET thnro = " & Destino
                                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, adExecuteNoRecords
                                
                                If depurar Then
                                    Flog.writeline Espacios(Tabulador * 2) & "UPDATE. Conversión. Tipo de hora: " & THOrigen & " por tipo de hora: " & Destino
                                End If
                            Else
                                If depurar Then
                                    Flog.writeline Espacios(Tabulador * 2) & "Pol 700 - Tipo de hora destino " & Destino & " no configurado para el turno."
                                End If
                            End If
                        End If
                    Else
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 2) & "No se encontró sucursal con ese codigo externo. SQL: " & StrSql
                        End If
                    End If
                End If
            End If
        End If
        
        rs.MoveNext
    Loop
    
Case Else:
End Select

'Cierro todo
If rs.State = adStateOpen Then rs.Close
Set rs = Nothing

If rs_His.State = adStateOpen Then rs_His.Close
Set rs_His = Nothing

If rs_reg.State = adStateOpen Then rs_reg.Close
Set rs_reg = Nothing

If rs_Rel.State = adStateOpen Then rs_Rel.Close
Set rs_Rel = Nothing

If rs_Suc.State = adStateOpen Then rs_Suc.Close
Set rs_Suc = Nothing

If rs_Estr_cod.State = adStateOpen Then rs_Estr_cod.Close
Set rs_Estr_cod = Nothing

If rs_TH.State = adStateOpen Then rs_TH.Close
Set rs_TH = Nothing

End Sub



Sub Politica700_old(Fecha As Date, NroTer As Long, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion:
' Autor:
' Ultima modificacion: FGZ - 14/09/2006 - Se agregó el coeficiente 106
' --------------------------------------------------------------
Dim rs As New ADODB.Recordset
Dim rs_His As New ADODB.Recordset
Dim rs_reg As New ADODB.Recordset
Dim rs_Rel As New ADODB.Recordset
Dim rs_Suc As New ADODB.Recordset
Dim rs_Estr_cod As New ADODB.Recordset
Dim rs_TH As New ADODB.Recordset

Dim ok As Boolean
Dim Opcion As Integer

Dim H50 As Long
Dim H72 As Long
Dim H100 As Long
Dim H130 As Long
Dim Hfer As Long
Dim Hnor As Long
Dim Hn50 As Long
Dim Hfrt As Long 'Franco Trabajado
Dim Hfrnt As Long 'Franco No Trabajado
Dim Hfenormal As Long ' Feriado Trabajado
Dim H1012 As Long
Dim H1027 As Long
Dim THOrigen As Long
Dim Destino As Long
Dim Codigo_Reg As Long
Dim Empsuc As Long
Dim Aux_CodExt As String
Dim Aux_Suc As String

Call SetearParametrosPolitica(Detalle, ok)
If Not ok Then
    Exit Sub
End If
Opcion = st_Opcion

Select Case Opcion
Case 1: 'Es la estandar. desde la primer registracion del dia hasta  hora de la reg + TamVent
    H50 = 1
    H72 = 5
    H100 = 2
    H130 = 67
    Hfer = 35
    Hnor = 3
    Hn50 = 1008
    Hfrt = 1013
    Hfrnt = 1014
    Hfenormal = 1015
    H1012 = 1012
    H1027 = 1027
    
    'Busco la sucursal del empleado
    StrSql = "SELECT sucursal.ternro FROM his_estructura "
    StrSql = StrSql & " INNER JOIN estructura ON his_estructura.estrnro = estructura.estrnro "
    StrSql = StrSql & " INNER JOIN sucursal ON sucursal.estrnro = estructura.estrnro"
    StrSql = StrSql & " WHERE his_estructura.tenro = 1"
    StrSql = StrSql & " AND his_estructura.ternro = " & NroTer
    StrSql = StrSql & " AND (his_estructura.htetdesde <= " & ConvFecha(Fecha) & ")"
    StrSql = StrSql & " AND ((" & ConvFecha(Fecha) & " <= his_estructura.htethasta) or (his_estructura.htethasta is null))"
    StrSql = StrSql & " ORDER BY his_estructura.htetdesde "
    If rs_His.State = adStateOpen Then rs_His.Close
    OpenRecordset StrSql, rs_His
    If Not rs_His.EOF Then
        Empsuc = rs_His!Ternro
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Empleado sin sucursal, conversion abortada. SQL: " & StrSql
        End If
    End If
    
    StrSql = "SELECT * FROM gti_horcumplido "
    StrSql = StrSql & " WHERE gti_horcumplido.horfecrep = " & ConvFecha(Fecha)
    StrSql = StrSql & " AND ternro = " & NroTer
    StrSql = StrSql & " AND ( thnro = " & H50
    StrSql = StrSql & " OR thnro = " & H72
    StrSql = StrSql & " OR thnro = " & H100
    StrSql = StrSql & " OR thnro = " & H130
    StrSql = StrSql & " OR thnro = " & Hn50
    StrSql = StrSql & " OR thnro = " & Hnor
    StrSql = StrSql & " OR thnro = " & Hfrt
    StrSql = StrSql & " OR thnro = " & Hfrnt
    StrSql = StrSql & " OR thnro = " & Hfer
    StrSql = StrSql & " OR thnro = " & Hfenormal
    StrSql = StrSql & ")"
    StrSql = StrSql & " ORDER BY gti_horcumplido.regent "
    OpenRecordset StrSql, rs
    Do While Not rs.EOF
    
        'si son horas generadas por sin registracion (fijas) no se convierten
        THOrigen = 0
        Destino = 0
        Codigo_Reg = 0
        THOrigen = rs!thnro
        If Not EsNulo(rs!regent) Then
            Codigo_Reg = rs!regent
        Else
            If Not EsNulo(rs!regsal) Then
                Codigo_Reg = rs!regsal
            End If
        End If
   
        StrSql = "SELECT * FROM gti_registracion "
        StrSql = StrSql & " WHERE gti_registracion.regnro = " & Codigo_Reg
        If rs_reg.State = adStateOpen Then rs_reg.Close
        OpenRecordset StrSql, rs_reg
        If rs_reg.EOF Then
            StrSql = "SELECT * FROM gti_registracion "
            StrSql = StrSql & " WHERE ternro= " & NroTer
            StrSql = StrSql & " AND gti_registracion.fechaproc = " & ConvFecha(Fecha)
            If rs_reg.State = adStateOpen Then rs_reg.Close
            OpenRecordset StrSql, rs_reg
        End If
        
        If Not rs_reg.EOF Then
        
            StrSql = "SELECT * FROM gti_reloj "
            StrSql = StrSql & " WHERE gti_reloj.relnro = " & rs_reg!relnro
            If rs_Rel.State = adStateOpen Then rs_Rel.Close
            OpenRecordset StrSql, rs_Rel
            If Not rs_Rel.EOF Then
                Aux_CodExt = IIf(Not EsNulo(rs_Rel!relcodext), rs_Rel!relcodext, "-1")
                If Empsuc <> CLng(Aux_CodExt) Then
                    'FGZ - 29/08/2006 - faltaba el campo sucursal.ternro
                    StrSql = "SELECT estructura.estrnro, sucursal.ternro FROM sucursal "
                    StrSql = StrSql & " INNER JOIN estructura ON estructura.estrnro = sucursal.estrnro "
                    StrSql = StrSql & " WHERE sucursal.ternro = " & CLng(Aux_CodExt)
                    If rs_Suc.State = adStateOpen Then rs_Suc.Close
                    OpenRecordset StrSql, rs_Suc
                    If Not rs_Suc.EOF Then
                        'Busco el tipo de codigo 48 asociado a la estructura sucursal
                        StrSql = "SELECT * FROM estr_cod WHERE estrnro =" & rs_Suc!estrnro
                        StrSql = StrSql & " AND tcodnro = 48"
                        If rs_Estr_cod.State = adStateOpen Then rs_Estr_cod.Close
                        OpenRecordset StrSql, rs_Estr_cod
                        If Not rs_Estr_cod.EOF Then
                            Aux_Suc = Trim(Left(CStr(rs_Estr_cod!nrocod), 3))
                        Else
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 2) & "No se encontró el codigo interno para la Sucursal. No hay conversión."
                            End If
                            Aux_Suc = "0"
                        End If
                        'Aux_Suc = Mid(rs_Suc!estrdabr, 1, 2)
                        
                        Select Case Aux_Suc
                        Case "10", "010":   'FGZ - 15/09/2006 - Teoricamente estos coeficientes no corren mas
                            If THOrigen = 1 Then Destino = 42
                            If (THOrigen = 3 And (Empsuc = 2884 Or Empsuc = 2973)) Then Destino = 1003
                            If THOrigen = 5 Then Destino = 46
                            If THOrigen = 1008 Then Destino = 1008
                            If THOrigen = 1013 Then Destino = 1016
                            If THOrigen = 1014 Then Destino = 1020
                            If THOrigen = 1015 Then Destino = 1024
                            If THOrigen = 2 Then Destino = 50
                            If THOrigen = 67 Then Destino = 54
                            If THOrigen = 35 Then Destino = 58
                        Case "20", "020":   'FGZ - 15/09/2006 - Teroricamente estos coeficientes no corren mas
                            If THOrigen = 1 Then Destino = 43
                            If (THOrigen = 3 And (Empsuc = 2884 Or Empsuc = 2973)) Then Destino = 1004
                            If THOrigen = 5 Then Destino = 47
                            If THOrigen = 1013 Then Destino = 1017
                            If THOrigen = 1014 Then Destino = 1021
                            If THOrigen = 1008 Then Destino = 1010
                            If THOrigen = 1015 Then Destino = 1025
                            If THOrigen = 2 Then Destino = 51
                            If THOrigen = 67 Then Destino = 55
                            If THOrigen = 35 Then Destino = 59
                        Case "42", "042":
                            If THOrigen = 1 Then Destino = 44
                            If (THOrigen = 3 And (Empsuc = 2884 Or Empsuc = 2973)) Then Destino = 1005
                            If THOrigen = 5 Then Destino = 48
                            If THOrigen = 1008 Then Destino = 1011
                            If THOrigen = 1013 Then Destino = 1018
                            If THOrigen = 1014 Then Destino = 1022
                            If THOrigen = 1015 Then Destino = 1026
                            If THOrigen = 2 Then Destino = 52
                            If THOrigen = 67 Then Destino = 56
                            If THOrigen = 35 Then Destino = 60
                        Case "85", "085":
                            If THOrigen = 1 Then Destino = 45
                            If (THOrigen = 3) Then
                                Destino = 1006
                                If rs_Suc!Ternro = 5945 Then Destino = 1030
                                If rs_Suc!Ternro = 5946 Then Destino = 1029
                            End If
                            If THOrigen = 1008 Then Destino = 1012
                            If THOrigen = 1013 Then Destino = 1019
                            If THOrigen = 1014 Then Destino = 1023
                            If THOrigen = 1015 Then
                                Destino = 1027
                                If rs_Suc!Ternro = 5945 Then Destino = 1032
                                If rs_Suc!Ternro = 5946 Then Destino = 1031
                            End If
                            If THOrigen = 5 Then Destino = 49
                            If THOrigen = 2 Then Destino = 53
                            If THOrigen = 67 Then Destino = 57
                            If THOrigen = 35 Then Destino = 61
                        Case "106": 'FGZ - 14/09/2006 Se agregó este coeficiente
                            If THOrigen = 1 Then Destino = 1039
                            If (THOrigen = 3) Then
                                Destino = 1035
                                'If rs_Suc!Ternro = 5945 Then Destino = 1030
                                'If rs_Suc!Ternro = 5946 Then Destino = 1029
                            End If
                            If THOrigen = 1008 Then Destino = 1036
                            If THOrigen = 1013 Then Destino = 1037
                            If THOrigen = 1014 Then Destino = 1038
                            If THOrigen = 1015 Then
                                Destino = 1044
                                'If rs_Suc!Ternro = 5945 Then Destino = 1032
                                'If rs_Suc!Ternro = 5946 Then Destino = 1031
                            End If
                            If THOrigen = 5 Then Destino = 1040
                            If THOrigen = 2 Then Destino = 1041
                            If THOrigen = 67 Then Destino = 1042
                            If THOrigen = 35 Then Destino = 1043
                        Case Else
                            'Nada
                        End Select
                        
                        'Convierto
                        If Destino <> 0 Then
                            'verificar que el tipo de hora destino exista
                            StrSql = "SELECT * FROM gti_config_tur_hor WHERE thnro = " & Destino
                            StrSql = StrSql & " AND turnro = " & Nro_Turno
                            OpenRecordset StrSql, rs_TH
                            If Not rs.EOF Then
                                StrSql = "UPDATE gti_horcumplido SET thnro = " & Destino
                                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, adExecuteNoRecords
                                
                                If depurar Then
                                    Flog.writeline Espacios(Tabulador * 2) & "UPDATE. Conversión. Tipo de hora: " & THOrigen & " por tipo de hora: " & Destino
                                End If
                            Else
                                If depurar Then
                                    Flog.writeline Espacios(Tabulador * 2) & "Pol 700 - Tipo de hora destino " & Destino & " no configurado para el turno."
                                End If
                            End If
                        End If
                    Else
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 2) & "No se encontró sucursal con ese codigo externo. SQL: " & StrSql
                        End If
                    End If
                End If
            End If
        End If
        
        rs.MoveNext
    Loop
    
Case Else:
End Select

'Cierro todo
If rs.State = adStateOpen Then rs.Close
Set rs = Nothing

If rs_His.State = adStateOpen Then rs_His.Close
Set rs_His = Nothing

If rs_reg.State = adStateOpen Then rs_reg.Close
Set rs_reg = Nothing

If rs_Rel.State = adStateOpen Then rs_Rel.Close
Set rs_Rel = Nothing

If rs_Suc.State = adStateOpen Then rs_Suc.Close
Set rs_Suc = Nothing

If rs_Estr_cod.State = adStateOpen Then rs_Estr_cod.Close
Set rs_Estr_cod = Nothing

If rs_TH.State = adStateOpen Then rs_TH.Close
Set rs_TH = Nothing

End Sub


Public Sub Politica450(Nro_Turno As Long, p_fecha As Date, NroTer As Long, Nro_Grupo As Long, Nro_fpgo As Integer, Dia_Libre As Boolean, esFeriado As Boolean, Existe_Reg As Boolean, deb As Boolean, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Imputa Horas sin control de presencia.
'    Busca el dia que le corresponde al empleado, de acuerdo al dia que se esta
'    procesando y al turno al que pertenece.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' Ultima modificacion: FGZ - 04/04/2006
'                   se saco la definicion de la variable diatipo de acá porque hace
'                   macanas dado que la variable es global y se setea en la politica 380.
'                   Ademas despues de llamar a la politica 380 vuelve a setear la variable diatipo, eso iba en el else
'                   Tambien se pasó la politica a configurable con parametro version y se crearon 2 versiones:
'                   Version 1(estandar): lo que qestaba antes
'                   Version 2(Custom): Version para Halliburton
' Ultima modificacion: FGZ - 21/01/2007
'                   Cuando el dia es feriado y franco pone al tipo de dia en 2. antes lo ponia en 0 y hacia que la version 1 no anduviese porque requeria un valor <> 0
' Ultima modificacion: FGZ - 29/10/2013
'                   Version 3(Genera hs segun desglose por franja o cantidad):
' --------------------------------------------------------------
Dim Weekdia As Integer
'Dim diatipo As Integer
Dim j As Integer
Dim Dia As Integer

Dim rs_wf_gtitpa As New ADODB.Recordset
Dim rs As New ADODB.Recordset
Dim rs_reg As New ADODB.Recordset

Dim ok As Boolean
Dim Opcion As Integer
Dim NroTh As Long
Dim NroReg As Long
Dim TotHorHHMM As String

'----------------------------------------
Dim TotHor As Single
Dim HDesde As String
Dim HHasta As String
Dim nro_desg As Long
Dim hora_desde_desg As String
Dim hora_hasta_desg As String

Dim hora_desde As String
Dim hora_hasta As String

Dim fecha_desde_desg As Date
Dim fecha_hasta_desg As Date
Dim Cambio_dia As Boolean
Dim fecpar1 As Date
Dim fecpar2 As Date
Dim HCDesde As String
Dim HCHasta As String
Dim Hora_a_Red As String
Dim HsJustif As Single

'-----------------------------------------


    'Se inicia el valor de "diatipo", considerando todas las combinaciones posibles. O.D.A. 12/04/2004
    diatipo = 0
    If esFeriado And Not Dia_Libre Then
      diatipo = 2
    End If
    If Not esFeriado And Dia_Libre Then
      diatipo = 1
    End If
    'FGZ - 12/01/2007 - Le agregué esto porque sino el diatipo quedaba en 0
    If esFeriado And Dia_Libre Then
      diatipo = 2
    End If


    Call SetearParametrosPolitica(Detalle, ok)
    If Not ok Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Error cargando configuracion de la politica. Se utilizara la Version 1. Default."
        End If
        st_Opcion = 1
        'Exit Sub
    End If
    Opcion = st_Opcion
    
    Select Case Opcion
'    Case 1: 'Es la estandar.
'        'Cuando el mismo dia es franco y feriado, la politica 380 determina la condicion que corresponde
'        If esFeriado And Dia_Libre Then
'            Call Politica(380)
'        Else
'            If Dia_Libre Then
'              diatipo = 1
'            Else
'              diatipo = 2
'            End If
'        End If
    Case 1: 'Es la estandar.
        'Cuando el mismo dia es franco y feriado, la politica 380 determina la condicion que corresponde
        If diatipo <> 0 Then
            If esFeriado And Dia_Libre Then
                Call Politica(380)
            Else
                If Dia_Libre Then
                  diatipo = 1
                Else
                  diatipo = 2
                End If
            End If
        End If
        Weekdia = Weekday(p_fecha)
        
'        StrSql = "SELECT * FROM gti_desgdia  WHERE fpgonro= " & Nro_fpgo & _
'        " AND desgdtipo = " & diatipo & " AND desgdnrodia = " & Weekdia & _
'        " ORDER BY desgdnrodia ASC, desgdtipo ASC"

        'FGZ - 22/05/2006
        StrSql = "SELECT * FROM gti_desgdia  WHERE fpgonro= " & Nro_fpgo & _
        " AND subturnro = " & Nro_Subturno & " AND desgdtipo = " & diatipo & " AND desgdnrodia = " & Weekdia & _
        " ORDER BY desgdnrodia ASC, desgdtipo ASC"
        rs.Open StrSql, objConn
        
        If Not rs.EOF Then
            rs.MoveFirst
            Dia = rs!desgdnro
            ' Cierro gti_desgdia
            rs.Close
        '    FOR EACH per.gti_desghora OF per.gti_desgdia where (PER.gti_desghora.desghplus = 2) or
        '                                                       (PER.gti_desghora.desghplus = 3) NO-LOCK:
            ' Para el dia en cuestion busco el desgloce de la hora
            StrSql = "SELECT * FROM gti_desghora  WHERE desgdnro = " & Dia & _
            " AND ((desghplus = 2) OR (desghplus = 3))"
            rs.Open StrSql, objConn
            ' Para todas las horas del dia...
            Do While Not rs.EOF
                If (rs!desghplus = 3) And Existe_Reg Then
                    rs.MoveNext
                Else
                    'Call ValidarTipoDeHora(rs!thnro, nro_turno, tipo_hora)
                ' Entrada en horario cumplido
                    TotHorHHMM = CHoras(rs!desgcantmin, 60)
                
                    StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                    "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horestado) VALUES (" & TotHorHHMM & "," & rs!desgcantmin & "," & _
                    ConvFecha(p_fecha) & "," & _
                    ConvFecha(p_fecha) & "," & "0,-1," & NroTer & "," & rs!thnro & "," & Nro_Turno & _
                    "," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",' ')"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & rs!thnro & "- Cantidad: " & rs!desgcantmin & " hs."
                    End If
                    
                    rs.MoveNext
                End If
            Loop
            rs.Close
            
        Else
            If depurar Then
                GeneraTraza Empleado.Ternro, p_fecha, "No existe el desgloce del día"
            End If
        End If
    Case 2: 'Version para Halliburton
        'Cuando el mismo dia es franco y feriado, la politica 380 determina la condicion que corresponde
        If esFeriado And Dia_Libre Then
            Call Politica(380)
        Else
            If Dia_Libre Then
              diatipo = 1
            Else
              diatipo = 2
            End If
        End If
        
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Dia Tipo = " & diatipo
        End If
        
        Weekdia = Weekday(p_fecha)
        
        StrSql = "SELECT * FROM gti_desgdia  "
        StrSql = StrSql & " WHERE fpgonro= " & Nro_fpgo
        StrSql = StrSql & " AND desgdtipo = " & diatipo
        StrSql = StrSql & " AND desgdnrodia = " & Weekdia
        StrSql = StrSql & " ORDER BY desgdnrodia ASC, desgdtipo ASC"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        
        If Not rs.EOF Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Hay desgloces de tipo " & diatipo & " para el orden de dia " & Weekdia
            End If
            
            rs.MoveFirst
            Dia = rs!desgdnro
        '    FOR EACH per.gti_desghora OF per.gti_desgdia where (PER.gti_desghora.desghplus = 2) or
        '                                                       (PER.gti_desghora.desghplus = 3) NO-LOCK:
        
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "-------------------------------------------------"
                Flog.writeline Espacios(Tabulador * 2) & "                Tipos de Desgloces               "
                Flog.writeline Espacios(Tabulador * 2) & "-------------------------------------------------"
                Flog.writeline Espacios(Tabulador * 2) & "-                    -- 1) Segun Registracion    -"
                Flog.writeline Espacios(Tabulador * 2) & "-                    -- 2) Fijo                  -"
                Flog.writeline Espacios(Tabulador * 2) & "-                    -- 1) Fijo sin Registracion -"
                Flog.writeline Espacios(Tabulador * 2) & "-------------------------------------------------"
                Flog.writeline
                Flog.writeline Espacios(Tabulador * 2) & "Para el dia en cuestion busco el desgloce de tipo 2 o 3 de la hora"
            End If
            'Para el dia en cuestion busco el desgloce de la hora
            StrSql = "SELECT * FROM gti_desghora  "
            StrSql = StrSql & " WHERE desgdnro = " & Dia
            StrSql = StrSql & " AND ((desghplus = 2) OR (desghplus = 3))"
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            
            If rs.EOF Then
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "No Hay desgloces"
                End If
            End If
            'Para todas las horas del dia...
            Do While Not rs.EOF
                If (rs!desghplus = 3) And Existe_Reg Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Fijo sin Registraciones y Hay registraciones ==> descarto"
                    End If
                    rs.MoveNext
                Else
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Fijo"
                    End If
                    'FGZ - 04/04/2006 - Esto es lo distinto a la version 1
                    If (rs!thnro = 1013) And Existe_Reg Then
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 2) & "Custom. El tipo de Hora es 1013 y existen registraciones ==> se genera thnro = 1014."
                        End If
                        NroTh = 1014    'OJO: Este es el tipo de hora que se debe insertar en el horario cumplido si entra en el if.
                    Else
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 2) & " ==> se genera thnro " & rs!thnro
                        End If
                        NroTh = rs!thnro
                    End If
                    If Existe_Reg Then
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 2) & " Existen REgistraciones ==> "
                        End If
                        StrSql = "SELECT * FROM gti_registracion "
                        StrSql = StrSql & " WHERE ternro= " & NroTer
                        StrSql = StrSql & " AND gti_registracion.regfecha = " & ConvFecha(p_fecha)
                        StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
                        'FGZ - 19/05/2010 ------------ Control FT -------------
                        StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
                        'FGZ - 19/05/2010 ------------ Control FT -------------
                        StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC "
                        If rs_reg.State = adStateOpen Then rs_reg.Close
                        OpenRecordset StrSql, rs_reg
                        If Not rs.EOF Then
                            NroReg = rs_reg!Regnro 'OJO: regent y regsal del horario cumplido hay que cargarlo con este valor
                        Else
                            NroReg = 0
                        End If
                    Else
                        NroReg = 0
                    End If

                    TotHorHHMM = CHoras(rs!desgcantmin, 60)
                    
                    StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                    "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horestado,regent,regsal) VALUES (" & TotHorHHMM & "," & rs!desgcantmin & "," & _
                    ConvFecha(p_fecha) & "," & _
                    ConvFecha(p_fecha) & "," & "0,-1," & NroTer & "," & NroTh & "," & Nro_Turno & _
                    "," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",' '," & NroReg & "," & NroReg & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & NroTh & "- Cantidad: " & rs!desgcantmin & " hs."
                    End If
                    
                    rs.MoveNext
                End If
            Loop
        Else
            GeneraTraza Empleado.Ternro, p_fecha, "No existe el desgloce del día"
        End If
    
    Case 3: 'Permite generar cantidad de hs teoricas, cuando el dia es laborable.
        If Not Tiene_Justif Or (Tiene_Justif And Not Justif_Completa) Then
            'Cuando el mismo dia es franco y feriado, la politica 380 determina la condicion que corresponde
            If diatipo <> 0 Then
                If esFeriado And Dia_Libre Then
                    Call Politica(380)
                Else
                    If Dia_Libre Then
                      diatipo = 1
                    Else
                      diatipo = 2
                    End If
                End If
            End If
            Weekdia = Weekday(p_fecha)
            
            StrSql = "SELECT * FROM gti_desgdia  WHERE fpgonro= " & Nro_fpgo & _
            " AND subturnro = " & Nro_Subturno & " AND desgdtipo = " & diatipo & " AND desgdnrodia = " & Weekdia & _
            " ORDER BY desgdnrodia ASC, desgdtipo ASC"
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                Dia = rs!desgdnro
                
                ' Para el dia en cuestion busco el desgloce de la hora
                StrSql = "SELECT * FROM gti_desghora  WHERE desgdnro = " & Dia & " AND ((desghplus = 2) OR (desghplus = 3))"
                OpenRecordset StrSql, rs
                'Para todas las horas del dia...
                Do While Not rs.EOF
                    If (rs!desghplus = 3) And Existe_Reg Then
                        'El desglose es fijo sin registracion y hay registraciones ==> no se debe generar
                        rs.MoveNext
                    Else
                        '------------------------------------------------------------------------------------------------------
                        '1 Horario Fijo
                        '2 Horario Variable
                        '3 Horario Fijo/Variable
                        Tipo_de_Desgloce = rs!desghorfijo
                    
                        'si cambio de dia ==> no debria generar horarios absolutos
                        TotHor = 0
                        hora_desde = HDesde
                        hora_hasta = HHasta
                        nro_desg = rs!desghnro
        
                        Call Cambiar_Horas_Desde_Sykes(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_dia)
                        Call Cambiar_Horas_hasta_Sykes(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_dia)
                    
                        'Cuando la FP es relativa y va de posterior a la salida y anterior a la entrada
                        ' tiene problemas con los turnos nocturnos ya que la salida pasa de dia ==>
                        '   hay que hacer el control desde afuera y pasar de dia al calculo de la fecha hasta
                        If objFechasHoras.Menor_Hora(fecha_hasta_desg, hora_hasta_desg, fecha_desde_desg, hora_desde_desg) Then
                            fecha_hasta_desg = DateAdd("d", 1, fecha_hasta_desg)
                        End If
                        
                        Call fraccionar_horas(fecpar1, hora_desde, hora_hasta, rs!desghfractpdesde, rs!desghfractphasta, hora_desde, hora_hasta)
        
                        'Cantidad de hs
                        objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                        HCDesde = hora_desde_desg
                        HCHasta = hora_hasta_desg
                        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                            
                        TotHorHHMM = CHorasSF(TotHor, rs!desghdurhora)
                        Call Redondeo_enHorasMinutos(TotHorHHMM, rs!desghredtipo, rs!desghdurhora, TotHorHHMM)
                        TotHorHHMM = "'" & TotHorHHMM & "'"
                    
                        Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, rs!desghdurhora, Hora_a_Red)
                        Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, rs!desghredtipo, rs!desghdurhora, TotHor)
                                    
                        Tipo_Hora = rs!thnro
                        
                        HsJustif = CantidadHsJustificadas(Empleado.Ternro, p_fecha)
                        
                        
                        Total_horas = TotHor - HsJustif
                        TotHor = Total_horas
                    
                        If TotHor > 0 Then
                            'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                            '   Se agregó la llamada a esta funcion que retorna la fecha de generacion de las horas de acuerdo a la conf del ST
                            Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
                            'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                            
                             
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                                     "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                                     "thnro,turnro,Empleg,horfecrep,horfecgen) VALUES (" & _
                                     TotHorHHMM & "," & TotHor & "," & ConvFecha(fecpar1) & ",' '," & ConvFecha(fecpar1) & ",'" & HCDesde & "','" & _
                                     HCHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                                     ValorNulo & "," & Empleado.Ternro & "," & Tipo_Hora & "," & Nro_Turno & "," & Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & Tipo_Hora & "- Cantidad: " & TotHor & " hs."
                            End If
                        End If
                        '------------------------------------------------------------------------------------------------------
                       
                        rs.MoveNext
                    End If
                Loop
                rs.Close
                
            Else
                If depurar Then
                    GeneraTraza Empleado.Ternro, p_fecha, "No existe el desgloce del día"
                End If
            End If
        Else
            'Hay justificaciones por lo cual no se debe ejecutar
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Hay justificaciones por lo cual no se debe ejecutar"
            End If
        End If
    Case Else
        'Nada
        
    End Select

'Libero los recordsets
If rs_wf_gtitpa.State = adStateOpen Then rs_wf_gtitpa.Close
Set rs_wf_gtitpa = Nothing
If rs.State = adStateOpen Then rs.Close
Set rs = Nothing
End Sub



Public Sub Politica80(p_ternro As Long, Fecha As Date, fecha_desde As Date, hora_desde As String, fecha_hasta As Date, hora_hasta As String, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Registracion a evaluar.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
'                      FGZ - 19/05/2004
' --------------------------------------------------------------

Dim rs As New ADODB.Recordset


Dim p_horario As Boolean
Dim salir As Boolean
Dim TEmp As String
Dim Cantidad As Integer
Dim Opcion As Integer
Dim TamañoVentana As String ' formato "0000"
Dim Iteraciones As Integer
Dim Aux_Entrada As Boolean


Call SetearParametrosPolitica(Detalle, ok)
Opcion = st_Opcion
TamañoVentana = st_TamañoVentana
Iteraciones = st_Iteraciones

Select Case Opcion
Case 2:
    Call Politica80v1(p_ternro, Fecha, fecha_desde, hora_desde, fecha_hasta, hora_hasta, subn, TamañoVentana, Iteraciones)
    Exit Sub
Case 3:
    Call Politica80v2(p_ternro, Fecha, fecha_desde, hora_desde, fecha_hasta, hora_hasta, subn, TamañoVentana, Iteraciones)
    Exit Sub
Case 4:
    Call Politica80v3(p_ternro, Fecha, fecha_desde, hora_desde, fecha_hasta, hora_hasta, subn, TamañoVentana, Iteraciones)
    Exit Sub
Case 5:
    Call Politica80v4(p_ternro, Fecha, fecha_desde, hora_desde, fecha_hasta, hora_hasta, subn, TamañoVentana, Iteraciones)
    Exit Sub
Case 6:
    Call Politica80v5(p_ternro, Fecha, fecha_desde, hora_desde, fecha_hasta, hora_hasta, subn, TamañoVentana, Iteraciones)
    Exit Sub
Case 7:
    Call Politica80vBB(p_ternro, Fecha, fecha_desde, hora_desde, fecha_hasta, hora_hasta, subn, TamañoVentana, Iteraciones)
    Exit Sub
Case 8:
    Call Politica80vAPQ(p_ternro, Fecha, fecha_desde, hora_desde, fecha_hasta, hora_hasta, subn, TamañoVentana, Iteraciones)
    Exit Sub
Case 9:
    Call Politica80vAPS(p_ternro, Fecha, fecha_desde, hora_desde, fecha_hasta, hora_hasta, subn, TamañoVentana, Iteraciones)
    Exit Sub
Case 10:
    Call Politica80vBB2(p_ternro, Fecha, fecha_desde, hora_desde, fecha_hasta, hora_hasta, subn, TamañoVentana, Iteraciones)
    Exit Sub
Case 11:
    Call Politica80v11(p_ternro, Fecha, fecha_desde, hora_desde, fecha_hasta, hora_hasta, subn, TamañoVentana, Iteraciones)
    Exit Sub
End Select

salir = False

'Busco en el Detalle del parte de autorizacion de Horarios una entrada para p_ternro
StrSql = "SELECT * FROM gti_regdet WHERE ternro = " & p_ternro & _
" and gprdfecdesde <= " & ConvFecha(Fecha) & " and gprdfechasta >= " & ConvFecha(Fecha) & _
" ORDER BY ternro ASC, gprdfecdesde ASC, gprdfechasta ASC"
rs.Open StrSql, objConn
If Not rs.EOF Then
    rs.MoveFirst
    'Registracion - entrada
    StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,entrada,evenro)" & _
    " VALUES(" & p_ternro & "," & ConvFecha(rs!gprdfecdesde) & ",'" & _
    rs!grpdhoradesde & "',-1,2)"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    'Registracion - salida
    StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,entrada,evenro)" & _
    " VALUES(" & p_ternro & "," & ConvFecha(rs!gprdfechasta) & ",'" & _
    rs!grpdhorahasta & "',0,2)"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    p_horario = True
End If
rs.Close

'Generar el wf con cada registracion dentro de la ventana
StrSql = "SELECT gti_registracion.* FROM gti_reloj "
StrSql = StrSql & " INNER JOIN gti_registracion ON gti_reloj.relnro = gti_registracion.relnro "
StrSql = StrSql & " WHERE ternro= " & p_ternro
StrSql = StrSql & " AND ((regestado ='I') OR (regestado = 'S'))"
StrSql = StrSql & " AND regfecha >= " & ConvFecha(fecha_desde)
StrSql = StrSql & " AND regfecha <= " & ConvFecha(fecha_hasta)
'StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
'FGZ - 19/05/2010 ------------ Control FT -------------
StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
'FGZ - 19/05/2010 ------------ Control FT -------------
StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
rs.Open StrSql, objConn
Do While Not rs.EOF
    If rs!regfecha = fecha_desde Then
        If rs!reghora < hora_desde Then
            salir = True
        End If
    End If
    If rs!regfecha = fecha_hasta And Not salir Then
        If rs!reghora > hora_hasta Then
            'Si la registracion queda fuera de la ventana termino de procesar
            Exit Do
        End If
    End If
 
    If Not salir Then
        If p_horario Then
            StrSql = "UPDATE gti_registracion SET regestado = 'L' WHERE regnro = " & rs!Regnro
            objConn.Execute StrSql, , adExecuteNoRecords
        Else
            If Not EsNulo(rs!regentsal) Then
                If rs!regentsal = "E" Then
                    Aux_Entrada = True
                Else
                    Aux_Entrada = False
                End If
            Else
                Select Case UltimaRegInsertadaWFTurno
                    Case "N":   Aux_Entrada = True
                                UltimaRegInsertadaWFTurno = "E"
                    Case "E":   Aux_Entrada = False
                                UltimaRegInsertadaWFTurno = "S"
                    Case "S":   Aux_Entrada = True
                                UltimaRegInsertadaWFTurno = "E"
                End Select
            End If
            
            'FGZ - 04/02/2015 ------------------------- lo agrege MDF
            UltimaRegHora = rs!reghora
            UltimaRegFecha = rs!regfecha
            'FGZ - 04/02/2015 -------------------------

   

            StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro) "
            StrSql = StrSql & " VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'"
            StrSql = StrSql & rs!reghora & "'," & rs!Regnro
            StrSql = StrSql & "," & CInt(Aux_Entrada)
            If Not EsNulo(rs!regllamada) Then
                If CBool(rs!regllamada) Then
                    StrSql = StrSql & ",16"
                Else
                    StrSql = StrSql & ",2"
                End If
            Else
                StrSql = StrSql & ",2"
            End If
            StrSql = StrSql & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
        
            'FGZ - 08/04/2008 - no estaba marcando la registracion
            StrSql = "UPDATE gti_registracion SET regestado = 'L' "
            StrSql = StrSql & " WHERE regnro = " & rs!Regnro
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
    Else
        salir = False
    End If
    rs.MoveNext
Loop

If rs.State = adStateOpen Then rs.Close
Set rs = Nothing
End Sub


Public Sub Politica80_old(p_ternro As Long, Fecha As Date, fecha_desde As Date, hora_desde As String, fecha_hasta As Date, hora_hasta As String, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Registracion a evaluar.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' --------------------------------------------------------------

Dim rs As New ADODB.Recordset


Dim p_horario As Boolean
Dim salir As Boolean
Dim TEmp As String
Dim Cantidad As Integer
Dim Opcion As Integer
Dim TamañoVentana As String ' formato "0000"
Dim Iteraciones As Integer

Call SetearParametrosPolitica(Detalle, ok)
Opcion = st_Opcion
TamañoVentana = st_TamañoVentana
Iteraciones = st_Iteraciones

Select Case Opcion
Case 2:
    Call Politica80v1(p_ternro, Fecha, fecha_desde, hora_desde, fecha_hasta, hora_hasta, subn, TamañoVentana, Iteraciones)
    Exit Sub
Case 3:
    Call Politica80v2(p_ternro, Fecha, fecha_desde, hora_desde, fecha_hasta, hora_hasta, subn, TamañoVentana, Iteraciones)
    Exit Sub
Case 4:
    Call Politica80v3(p_ternro, Fecha, fecha_desde, hora_desde, fecha_hasta, hora_hasta, subn, TamañoVentana, Iteraciones)
    Exit Sub
End Select

salir = False

' Busco en el Detalle del parte de autorizacion de Horarios
' una entrada para p_ternro

'FIND FIRST gti_regdet where PER.gti_regdet.ternro = p-ternro AND
'                            PER.gti_regdet.gprdfecdesde <= fecha AND
'                            fecha <= PER.gti_regdet.gprdfechasta no-lock no-error.
StrSql = "SELECT * FROM gti_regdet WHERE ternro = " & p_ternro & _
" and gprdfecdesde <= " & ConvFecha(Fecha) & " and gprdfechasta >= " & ConvFecha(Fecha) & _
" ORDER BY ternro ASC, gprdfecdesde ASC, gprdfechasta ASC"
rs.Open StrSql, objConn

If Not rs.EOF Then
    rs.MoveFirst
' MUY IMPORTANTE
' Chequear en la BD que los campos corresp a horas
' sean de tipo Fecha o con formato de hora
' Cambiar ConvHoraBD segun corresponda.
    
    ' Registracion - entrada

    StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,entrada,evenro)" & _
    " VALUES(" & p_ternro & "," & ConvFecha(rs!gprdfecdesde) & ",'" & _
    rs!grpdhoradesde & "',1,2)"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    ' Registracion - salida
    StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,entrada,evenro)" & _
    " VALUES(" & p_ternro & "," & ConvFecha(rs!gprdfechasta) & ",'" & _
    rs!grpdhorahasta & "',0,2)"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    p_horario = True
    
End If
rs.Close

'  /* Generar el wf con cada registracion dentro de la ventana */

' Revisar: completar la consulta

StrSql = "SELECT gti_registracion.* " & _
"FROM gti_reloj INNER JOIN gti_registracion ON gti_reloj.relnro = gti_registracion.relnro" & _
" WHERE ternro= " & p_ternro & _
" AND ((regestado ='I') OR (regestado = 'S'))" & _
" AND regfecha >= " & ConvFecha(fecha_desde) & " AND regfecha <= " & _
ConvFecha(fecha_hasta) & _
" ORDER BY ternro ASC, regfecha ASC, reghora ASC"
' Permito modificaciones
rs.Open StrSql, objConn

Do While Not rs.EOF
'Revisar: fn de formateo de hora
    If rs!regfecha = fecha_desde Then
        ' Convierto para comparar
        If rs!reghora < hora_desde Then
        ' Proceso el proximo
        ' Con esto reemplazo al next
            salir = True
        End If
    End If
    If rs!regfecha = fecha_hasta And Not salir Then
        If rs!reghora > hora_hasta Then
        'Si la registracion queda fuera de la ventana termino de procesar
            Exit Do
        End If
    End If
 
    If Not salir Then
    
        If p_horario Then
    
            StrSql = "UPDATE gti_registracion SET regestado = 'S' WHERE regnro = " & rs!Regnro
            objConn.Execute StrSql, , adExecuteNoRecords
        
        Else
            
            StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro)" & _
            " VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'" & _
            rs!reghora & "'," & rs!Regnro & _
            "," & IIf(rs!regentsal = "E", -1, 0) & ",2)"
            objConn.Execute StrSql, , adExecuteNoRecords
        
        End If
        
    Else
        salir = False
    
    End If
    rs.MoveNext
Loop

If rs.State = adStateOpen Then rs.Close

Set rs = Nothing

End Sub


Public Sub Politica200V1(NroTer As Long, Nro_Turno As Long, p_fecha As Date, tol As String, acumula As Boolean, deb As Boolean, toldto As String, acumula_dto As Boolean, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Generacion de las salidas temprano.
' Autor: ?
' Ultima modificacion: FGZ - 24/05/2004
' Ultima modificacion: FGZ - 02/10/2006 - Estaba armando mal la consulta cuando la salida del embudo pasaba de dia
'                       FGZ - 07/04/2010 - Estaba aplicando el redondeo de la ST aun cuando debia generar AP, se arregló para que use el redondeo que corresponde
' --------------------------------------------------------------
Dim rs_Dia As New ADODB.Recordset
Dim rs As New ADODB.Recordset

Dim TH_tol As Integer
Dim Horas_Acum As Integer
Dim hora_red   As String
Dim Hora_a_Red As String
Dim tothoras   As Single
Dim Tdias      As Integer
Dim Thoras     As Integer
Dim Tmin       As Integer
Dim Horas_Tol As Single
Dim Fecha_Tol As Date
Dim Hora_Tol  As String
Dim ok As Boolean
Dim ConhRedTipo As Integer
Dim ConhRedTipoAP As Integer
Dim RedTipoaGenerar As Integer
Dim i As Integer

Dim fecres As Date
Dim horres As String

Dim fecha_toldto As Date
Dim hora_toldto As String

Dim Aux_FechaHasta As Date
Dim Aux_HoraHasta As String
Dim rs2 As New ADODB.Recordset
Dim rs3 As New ADODB.Recordset
Dim TipoHoraAGenerar As Long
Dim TipoHoraAusenciaParcial As Long
Dim TotHorHHMM As String

StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 5 " & _
" AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
rs.Open StrSql, objConn

If Not rs.EOF Then
    TH_tol = rs!thnro
    'conhredtipo = rs!conhredondeo
    ConhRedTipo = IIf(Not EsNulo(rs!conhredondeo), rs!conhredondeo, 0)
Else
    If depurar Then
        GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora Llegada Tarde para el Turno:", Str(Nro_Turno)
        Flog.writeline Espacios(Tabulador * 2) & "Salida Temprano. No está configurado el tipo de Hora para este turno"
    End If
    rs.Close
    Set rs = Nothing
    Exit Sub
End If

' FGZ - 24/10/2003
'Busco el tipo de Hora de Ausencia Parcial
StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 19 " & _
" AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
rs3.Open StrSql, objConn

If Not rs3.EOF Then
    TipoHoraAusenciaParcial = rs3!thnro
    ConhRedTipoAP = IIf(Not EsNulo(rs3!conhredondeo), rs3!conhredondeo, 0)
Else
    If depurar Then
        GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora Llegada Tarde para el Turno:", Str(Nro_Turno)
        Flog.writeline Espacios(Tabulador * 2) & "Ausencia Parcial. No está configurado el tipo de Hora para este turno"
    End If
    rs3.Close
    Set rs = Nothing
    Exit Sub
End If


TipoHoraAGenerar = TH_tol
RedTipoaGenerar = ConhRedTipo

StrSql = "SELECT * FROM " & TTempWFDia & " WHERE entrada = " & CInt(False) & " ORDER BY codigo ASC"
rs_Dia.Open StrSql, objConn

Do While Not rs_Dia.EOF
    
    StrSql = "SELECT * FROM " & TTempWFEmbudo & " WHERE codigo = " & rs_Dia!Codigo
    rs.Close
    rs.Open StrSql, objConn
    
    If rs_Dia.RecordCount = 1 Then
        'Horario corrido
        ' busco las llegadas tardes en todo el horario teorico
'        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE entrada = " & CInt(False) & " AND " & _
'        " (( fecha > " & ConvFecha(rs!fecha_desde) & " ) OR " & _
'        "  ( fecha = " & ConvFecha(rs!fecha_desde) & " and hora <= '" & rs_dia!hora & "'))" & _
'        " ORDER BY fecha ASC, hora ASC"
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE entrada = " & CInt(False) & " AND " & _
        " (( fecha > " & ConvFecha(rs!fecha_desde) & " ) OR " & _
        "  ( fecha = " & ConvFecha(rs!fecha_desde) & " and hora <= '" & rs_Dia!Hora & "')) and" & _
        " (( fecha < " & ConvFecha(rs!fecha_hasta) & " ) OR " & _
        "  ( fecha = " & ConvFecha(rs!fecha_hasta) & " and hora <= '" & rs_Dia!Hora & "'))" & _
        " AND evenro = 2 " & _
        " ORDER BY fecha ASC, hora ASC"
    Else
'FGZ - 02/10/2006 - Estaba mal armada la consulta
'        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE entrada = " & CInt(False) & " AND " & _
'        " (( fecha > " & ConvFecha(p_fecha) & " ) OR " & _
'        "  ( fecha = " & ConvFecha(p_fecha) & " and hora >= '" & rs!hora_desde & "')) and" & _
'        " (( fecha < " & ConvFecha(p_fecha) & " ) OR " & _
'        "  ( fecha = " & ConvFecha(p_fecha) & " and hora <= '" & rs!hora_hasta & "'))" & _
'        " ORDER BY fecha ASC, hora ASC"
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE entrada = " & CInt(False) & " AND " & _
        " (( fecha > " & ConvFecha(rs!fecha_desde) & " ) OR " & _
        "  ( fecha = " & ConvFecha(rs!fecha_desde) & " and hora >= '" & rs!hora_desde & "')) and" & _
        " (( fecha < " & ConvFecha(rs!fecha_hasta) & " ) OR " & _
        "  ( fecha = " & ConvFecha(rs!fecha_hasta) & " and hora <= '" & rs!hora_hasta & "'))" & _
        " AND evenro = 2 " & _
        " ORDER BY fecha ASC, hora ASC"
    End If
    rs.Close
    rs.Open StrSql, objConn, adOpenDynamic, adLockOptimistic
    
    If Not rs.EOF Then rs.MoveFirst
       
    Do While Not rs.EOF

        StrSql = " UPDATE " & TTempWFTurno & " SET anornro = 6 WHERE regnro = " & rs!Regnro
        StrSql = StrSql & " AND evenro = 2 "
        objConn.Execute StrSql, , adExecuteNoRecords

        Call objFechasHoras.RestaXHoras(rs_Dia!Fecha, rs_Dia!Hora, tol, Fecha_Tol, Hora_Tol)
        ok = objFechasHoras.ValidarHora(Hora_Tol)
        If (rs!Fecha = Fecha_Tol) And (rs!Hora < Hora_Tol) And (rs!Hora < rs_Dia!Hora) Then
            
            Aux_FechaHasta = rs_Dia!Fecha
            Aux_HoraHasta = rs_Dia!Hora
            'FGZ - 23/10/2003
            ' Busco otra reg. de entrada entre la hora que deberia haber salido y la hora en que salió.
            If HayOtraRegEntreHoras(Aux_FechaHasta, rs!Hora, Hora_Tol) Then
                StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE entrada = " & CInt(True) & " AND " & _
                "  fecha = " & ConvFecha(Aux_FechaHasta) & " AND hora > '" & rs!Hora & "' AND " & _
                "  hora < '" & Hora_Tol & "' " & _
                " AND evenro = 2 " & _
                " ORDER BY fecha ASC, hora ASC"
                If rs2.State = adStateOpen Then rs2.Close
    
                rs2.Open StrSql, objConn, adOpenDynamic, adLockOptimistic
    
                If Not rs2.EOF Then
                    rs2.MoveFirst
                    Aux_FechaHasta = rs2!Fecha
                    Aux_HoraHasta = rs2!Hora
                    TipoHoraAGenerar = TipoHoraAusenciaParcial
                    RedTipoaGenerar = ConhRedTipoAP
                End If

            End If
            
            If acumula = True Then
                 'FGZ - 12/10/2010 --------------------------------------------------------------------------
                'Call objFechasHoras.RestaHs(rs!Fecha, rs!Hora, Aux_FechaHasta, Aux_HoraHasta, Tdias, Thoras, Tmin)
                'tothoras = (Tdias * 24) + (Thoras + (Tmin / 60))
                If TolDtoST > toltemp Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 4) & "La tolerancia de Dto debe ser menor que la Tolerancia de ST"
                        Flog.writeline Espacios(Tabulador * 4) & "No se generará Anormalidad."
                    End If
                    tothoras = 0
                    Aux_FechaHasta = rs_Dia!Fecha
                    Aux_HoraHasta = rs_Dia!Hora
                Else
                    Aux_FechaHasta = rs!Fecha
                    Aux_HoraHasta = rs!Hora
                    Call objFechasHoras.SumoHoras(Aux_FechaHasta, Aux_HoraHasta, TolDtoST, fecres, horres)
                    ok = objFechasHoras.ValidarHora(horres)
                    Aux_FechaHasta = fecres
                    Aux_HoraHasta = horres
                    Call objFechasHoras.RestaHs(Aux_FechaHasta, Aux_HoraHasta, rs_Dia!Fecha, rs_Dia!Hora, Tdias, Thoras, Tmin)
                    tothoras = (Tdias * 24) + (Thoras + (Tmin / 60))
                End If
                'FGZ - 12/10/2010 --------------------------------------------------------------------------
                
                Call objFechasHoras.Convertir_A_Hora(tothoras * 60, Hora_a_Red)
                Call objFechasHoras.Redondeo_Horas_Tipo(Hora_a_Red, RedTipoaGenerar, Horas_Tol)
                
                If Horas_Tol <= 0 Then
                    GoTo salida
                End If
                
                TotHorHHMM = CHoras(Horas_Tol, 60)
                
                'FGZ - 12/10/2010 --------------------------------------------------------------------------
                'StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                '"horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
                '"normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Horas_Tol & "," & _
                'ConvFecha(Fecha_Tol) & "," & ConvFecha(Fecha_Tol) & "," & "0,-1," & _
                'NroTer & "," & TipoHoraAGenerar & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
                'ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",'" & rs!Hora & "','" & Aux_HoraHasta & "',6,6,' ')"
                'objConn.Execute StrSql, , adExecuteNoRecords
                
                'FGZ - 22/10/2010 ----------------------------------------------------------------------------
                'StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                '"horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
                '"normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Horas_Tol & "," & _
                'ConvFecha(Fecha_Tol) & "," & ConvFecha(Fecha_Tol) & "," & "0,-1," & _
                'NroTer & "," & TipoHoraAGenerar & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
                'ConvFecha(Aux_FechaHasta) & "," & ConvFecha(rs_Dia!Fecha) & ",'" & Aux_HoraHasta & "','" & rs_Dia!Hora & "',6,6,' ')"
                
                StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
                "normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Horas_Tol & "," & _
                ConvFecha(Fecha_Tol) & "," & ConvFecha(Fecha_Tol) & "," & "0,-1," & _
                NroTer & "," & TipoHoraAGenerar & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
                ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",'" & Aux_HoraHasta & "','" & rs_Dia!Hora & "',6,6,' ')"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TipoHoraAGenerar & "- Cantidad: " & Horas_Tol & " hs."
                End If
                'FGZ - 12/10/2010 --------------------------------------------------------------------------
                
                TipoHoraAGenerar = TH_tol
                RedTipoaGenerar = ConhRedTipo
            End If
            
            fecha_toldto = Aux_FechaHasta: hora_toldto = Aux_HoraHasta
            Call objFechasHoras.SumoHoras(fecha_toldto, hora_toldto, toldto, fecres, horres)

            ok = objFechasHoras.ValidarHora(horres)
            
            If (rs!Fecha = fecres And rs!Hora > horres) And (acumula_dto) Then
                
                Call objFechasHoras.RestaHs(fecres, horres, rs!Fecha, rs!Hora, Tdias, Thoras, Tmin)
                tothoras = (Tdias * 24) + (Thoras + (Tmin / 60))
                
                If tothoras = 0 Then
                    GoTo salida
                Else
                    'Call DescontarHoras(rs!Fecha, tothoras, Nro_Turno, p_fecha)
                    'FGZ - 01/12/2005
                    Call Descontar_Horas(rs!Fecha, tothoras, 2)
                End If
                            
            End If
        Else
            
            If (rs!Fecha = Fecha_Tol) And (rs!Hora < rs_Dia!Hora) Then

                StrSql = " UPDATE " & TTempWFTurno & " SET fecha = " & _
                ConvFecha(rs!Fecha) & ", hora = '" & rs_Dia!Hora & _
                "' WHERE regnro = " & rs!Regnro
                StrSql = StrSql & " AND evenro = 2 "
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
        End If
    
        rs.MoveNext
        
    Loop
salida:
        rs_Dia.MoveNext
Loop

rs.Close
Set rs = Nothing
rs_Dia.Close
Set rs_Dia = Nothing

End Sub

Public Sub Politica200(NroTer As Long, Nro_Turno As Long, p_fecha As Date, tol As String, acumula As Boolean, deb As Boolean, toldto As String, acumula_dto As Boolean, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Generacion de las salidas temprano.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' Ultima modificacion: FGZ - 26/12/2005
'                       no registra las ST cuando hay ausencias en una mitad del turno
' Ultima modificacion: FGZ - 02/10/2006 - Politica200V1
' Ultima modificacion: FGZ - 30/11/2006
'       Se agregó la version 3: para turnos partidos analizando franjas enteras y no 1/2 franja como la version 1
'                       Ademas a la esta version le modifique la anormalidad que generaba
'                       FGZ - 07/04/2010 - Estaba aplicando el redondeo de la ST aun cuando debia generar AP, se arregló para que use el redondeo que corresponde
' --------------------------------------------------------------
Dim rs_Dia As New ADODB.Recordset
Dim rs As New ADODB.Recordset

Dim TH_tol As Integer
Dim Horas_Acum As Integer
Dim hora_red   As String
Dim Hora_a_Red As String
Dim tothoras   As Single
Dim Tdias      As Integer
Dim Thoras     As Integer
Dim Tmin       As Integer
Dim Horas_Tol As Single
Dim Fecha_Tol As Date
Dim Hora_Tol  As String
Dim ok As Boolean
Dim ConhRedTipo As Integer
Dim ConhRedTipoAP As Integer
Dim RedTipoaGenerar As Integer

Dim i As Integer

Dim fecres As Date
Dim horres As String

Dim fecha_toldto As Date
Dim hora_toldto As String

Dim Aux_FechaHasta As Date
Dim Aux_HoraHasta As String
Dim rs2 As New ADODB.Recordset
Dim rs3 As New ADODB.Recordset
Dim TipoHoraAGenerar As Long
Dim TipoHoraAusenciaParcial As Long
Dim Aux_Anormalidad As Integer
Dim TotHorHHMM As String

Dim Opcion  As Integer
Dim TH1 As Long
Dim TH2 As Long
Dim TH3 As Long
Dim AN1 As String
Dim AN2 As String
Dim AN3 As String

TolDtoST = "0000"
Call Politica(141)


'FGZ - 08/09/2011 -------------------
Call SetearParametrosPolitica(Detalle, ok)
If ok Then
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Version Configurable"
    End If
    
    Opcion = st_Opcion
    If IsNull(Opcion) Or Opcion = 0 Then
        Opcion = 1
    End If
    
    TH1 = IIf(Not EsNulo(st_TipoHora1), st_TipoHora1, 0) 'Tipo de hora a generar
    TH2 = IIf(Not EsNulo(st_TipoHora2), st_TipoHora2, 0) 'Tipo de hora a generar
    TH3 = IIf(Not EsNulo(st_TipoHora3), st_TipoHora3, 0) 'Tipo de hora a generar
    
    AN1 = IIf(Not EsNulo(st_Anormalidad), st_Anormalidad, 0) 'Codigo de anormalidad a generar
    AN2 = IIf(Not EsNulo(st_Anormalidad2), st_Anormalidad2, 0) 'Codigo de anormalidad a generar
    AN3 = IIf(Not EsNulo(st_Anormalidad3), st_Anormalidad3, 0) 'Codigo de anormalidad a generar
    
    'FGZ - 16/05/2013 ------------------------------------------------------------------
    toltemp = IIf(Not EsNulo(toltemp), toltemp, "0000")                     'Tolerancia
    tol_ST_Grado2 = IIf(Not EsNulo(tol_ST_Grado2), tol_ST_Grado2, "0000")   'Tolerancia
    tol_ST_Grado3 = IIf(Not EsNulo(tol_ST_Grado3), tol_ST_Grado3, "0000")   'Tolerancia
    'FGZ - 16/05/2013 ------------------------------------------------------------------
    
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Version: " & Opcion
        Flog.writeline Espacios(Tabulador * 3) & "Rango 1"
        Flog.writeline Espacios(Tabulador * 3) & "  Tolerancia: " & toltemp
        Flog.writeline Espacios(Tabulador * 3) & "  Tipo de hora a generar: " & TH1
        Flog.writeline Espacios(Tabulador * 3) & "  Codigo de Anormalidad: " & AN1
        Flog.writeline Espacios(Tabulador * 3) & "Rango 2"
        Flog.writeline Espacios(Tabulador * 3) & "  Tolerancia: " & tol_ST_Grado2
        Flog.writeline Espacios(Tabulador * 3) & "  Tipo de hora a generar: " & TH2
        Flog.writeline Espacios(Tabulador * 3) & "  Codigo de Anormalidad: " & AN2
        Flog.writeline Espacios(Tabulador * 3) & "Rango 3"
        Flog.writeline Espacios(Tabulador * 3) & "  Tolerancia: " & tol_ST_Grado3
        Flog.writeline Espacios(Tabulador * 3) & "  Tipo de hora a generar: " & TH3
        Flog.writeline Espacios(Tabulador * 3) & "  Codigo de Anormalidad: " & AN3
    End If
    
    Select Case Opcion
    Case 1: 'Version 1
        'Call Politica190_Configurable(NroTer, Nro_Turno, p_fecha, tol, acumula, deb, toldto, acumula_dto, subn, Cabecera, Detalle, TH1, TH2, TH3, AN1, AN2, AN3)
        Call Politica200_Configurable(NroTer, Nro_Turno, p_fecha, tol, acumula, deb, toldto, acumula_dto, subn, Cabecera, Detalle, TH1, TH2, TH3, AN1, AN2, AN3)
    Case Else:
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "Version inexistente. Se utilizará versión default 1. "
        End If
        Call Politica200_Configurable(NroTer, Nro_Turno, p_fecha, tol, acumula, deb, toldto, acumula_dto, subn, Cabecera, Detalle, TH1, TH2, TH3, AN1, AN2, AN3)
    End Select

    Exit Sub
Else
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Version NO Configurable"
    End If
End If
'FGZ - 08/09/2011 -------------------


' Hay Problemas con los turnos corridos
Select Case subn
Case 1:
    ' esta misma (para turnos partidos)
Case 2: 'para turnos corridos
    Politica200V1 NroTer, Nro_Turno, p_fecha, tol, acumula, deb, toldto, acumula_dto, subn, Cabecera, Detalle
    Exit Sub
Case 3: 'para turnos partidos analizando franjas enteras y no 1/2 franja como la version 1
    Politica200V2 NroTer, Nro_Turno, p_fecha, tol, acumula, deb, toldto, acumula_dto, subn, Cabecera, Detalle
    Exit Sub
End Select


StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 5 " & _
" AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
'rs.Open StrSql, objConn
OpenRecordset StrSql, rs

If Not rs.EOF Then
    TH_tol = rs!thnro
    'conhredtipo = rs!conhredondeo
    ConhRedTipo = IIf(Not EsNulo(rs!conhredondeo), rs!conhredondeo, 0)
Else
    If depurar Then
        GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora Llegada Tarde para el Turno:", Str(Nro_Turno)
        Flog.writeline Espacios(Tabulador * 2) & "Salida Temprano. No está configurado el tipo de Hora para este turno"
    End If
    rs.Close
    Set rs = Nothing
    Exit Sub
End If

' FGZ - 24/10/2003
'Busco el tipo de Hora de Ausencia Parcial
StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 19 " & _
" AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
'rs3.Open StrSql, objConn
OpenRecordset StrSql, rs3

If Not rs3.EOF Then
    TipoHoraAusenciaParcial = rs3!thnro
    ConhRedTipoAP = IIf(Not EsNulo(rs3!conhredondeo), rs3!conhredondeo, 0)
Else
    If depurar Then
        GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora Llegada Tarde para el Turno:", Str(Nro_Turno)
        Flog.writeline Espacios(Tabulador * 2) & "Ausencia Parcial. No está configurado el tipo de Hora para este turno"
    End If
    rs3.Close
    Set rs = Nothing
    Exit Sub
End If


TipoHoraAGenerar = TH_tol
RedTipoaGenerar = ConhRedTipo

StrSql = "SELECT * FROM " & TTempWFDia & " WHERE entrada = " & CInt(False) & " ORDER BY codigo ASC"
'rs_dia.Open StrSql, objConn
OpenRecordset StrSql, rs_Dia

Do While Not rs_Dia.EOF
    
    StrSql = "SELECT * FROM " & TTempWFEmbudo & " WHERE codigo = " & rs_Dia!Codigo
    'rs.Close
    'rs.Open StrSql, objConn
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs

    StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE entrada = " & CInt(False) & " AND " & _
    " (( fecha > " & ConvFecha(rs!fecha_desde) & " ) OR " & _
    "  ( fecha = " & ConvFecha(rs!fecha_desde) & " and hora >= '" & rs!hora_desde & "')) and" & _
    " (( fecha < " & ConvFecha(rs!fecha_hasta) & " ) OR " & _
    "  ( fecha = " & ConvFecha(rs!fecha_hasta) & " and hora <= '" & rs!hora_hasta & "'))" & _
    " AND evenro = 2 " & _
    " ORDER BY fecha ASC, hora ASC"
    'rs.Close
    'rs.Open StrSql, objConn, adOpenDynamic, adLockOptimistic
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs
    
    If Not rs.EOF Then rs.MoveFirst
       
    Do While Not rs.EOF

'        StrSql = " UPDATE " & TTempWFTurno & " SET anornro = 6 WHERE regnro = " & rs!Regnro
'        objConn.Execute StrSql, , adExecuteNoRecords

        Call objFechasHoras.RestaXHoras(rs_Dia!Fecha, rs_Dia!Hora, tol, Fecha_Tol, Hora_Tol)
        ok = objFechasHoras.ValidarHora(Hora_Tol)
        If (rs!Fecha = Fecha_Tol) And (rs!Hora < Hora_Tol) And (rs!Hora < rs_Dia!Hora) Then
            
'            'FGZ - 26/12/2005
'            'moví esto aca porque sino registraba la anormalidad aun si no la habia
'            StrSql = " UPDATE " & TTempWFTurno & " SET anornro = 6 WHERE regnro = " & rs!Regnro
'            objConn.Execute StrSql, , adExecuteNoRecords
            
            Aux_FechaHasta = rs_Dia!Fecha
            Aux_HoraHasta = rs_Dia!Hora
            ' Busco otra reg. de entrada entre la hora que deberia haber salido y la hora en que salió.
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Busco otra reg. de entrada entre la hora que deberia haber salido y la hora en que salió."
            End If
            If HayOtraRegEntreHoras(Aux_FechaHasta, rs!Hora, Hora_Tol) Then
                StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE entrada = " & CInt(True) & " AND " & _
                "  fecha = " & ConvFecha(Aux_FechaHasta) & " AND hora > '" & rs!Hora & "' AND " & _
                "  hora < '" & Hora_Tol & "' " & _
                " AND evenro = 2 " & _
                " ORDER BY fecha ASC, hora ASC"
                If rs2.State = adStateOpen Then rs2.Close
                'rs2.Open StrSql, objConn, adOpenDynamic, adLockOptimistic
                OpenRecordset StrSql, rs2
    
                If Not rs2.EOF Then
                    rs2.MoveFirst
                    Aux_FechaHasta = rs2!Fecha
                    Aux_HoraHasta = rs2!Hora
                    TipoHoraAGenerar = TipoHoraAusenciaParcial
                    RedTipoaGenerar = ConhRedTipoAP
                    
                    'FGZ - 30/11/2006
                    'moví esto aca porque sino registraba la anormalidad de ST cuando era AP
                    StrSql = " UPDATE " & TTempWFTurno & " SET anornro = 7 WHERE regnro = " & rs!Regnro
                    StrSql = StrSql & " AND evenro = 2 "
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Aux_Anormalidad = 7
                    
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "SQL = " & StrSql
                        Flog.writeline Espacios(Tabulador * 2) & "Encontró: Fecha " & rs2!Fecha & " Hora " & rs2!Hora & " ==> Genero Ausencia parcial"
                    End If
                Else
                    'FGZ - 30/11/2006
                    'moví esto aca porque sino registraba la anormalidad de ST cuando era AP
                    StrSql = " UPDATE " & TTempWFTurno & " SET anornro = 6 WHERE regnro = " & rs!Regnro
                    StrSql = StrSql & " AND evenro = 2 "
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Aux_Anormalidad = 6
                End If
            Else
                'FGZ - 30/11/2006
                'moví esto aca porque sino registraba la anormalidad de ST cuando era AP
                StrSql = " UPDATE " & TTempWFTurno & " SET anornro = 6 WHERE regnro = " & rs!Regnro
                StrSql = StrSql & " AND evenro = 2 "
                objConn.Execute StrSql, , adExecuteNoRecords
                Aux_Anormalidad = 6
            End If
            
            If acumula = True Then
                 'FGZ - 12/10/2010 --------------------------------------------------------------------------
                'Call objFechasHoras.RestaHs(rs!Fecha, rs!Hora, Aux_FechaHasta, Aux_HoraHasta, Tdias, Thoras, Tmin)
                'tothoras = (Tdias * 24) + (Thoras + (Tmin / 60))
                If TolDtoST > toltemp Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 4) & "La tolerancia de Dto debe ser menor que la Tolerancia de ST"
                        Flog.writeline Espacios(Tabulador * 4) & "No se generará Anormalidad."
                    End If
                    tothoras = 0
                    Aux_FechaHasta = rs_Dia!Fecha
                    Aux_HoraHasta = rs_Dia!Hora
                Else
                    Aux_FechaHasta = rs!Fecha
                    Aux_HoraHasta = rs!Hora
                    Call objFechasHoras.SumoHoras(Aux_FechaHasta, Aux_HoraHasta, TolDtoST, fecres, horres)
                    ok = objFechasHoras.ValidarHora(horres)
                    Aux_FechaHasta = fecres
                    Aux_HoraHasta = horres
                    Call objFechasHoras.RestaHs(Aux_FechaHasta, Aux_HoraHasta, rs_Dia!Fecha, rs_Dia!Hora, Tdias, Thoras, Tmin)
                    tothoras = (Tdias * 24) + (Thoras + (Tmin / 60))
                End If
                'FGZ - 12/10/2010 --------------------------------------------------------------------------
                
                Call objFechasHoras.Convertir_A_Hora(tothoras * 60, Hora_a_Red)
                Call objFechasHoras.Redondeo_Horas_Tipo(Hora_a_Red, RedTipoaGenerar, Horas_Tol)
                
                If Horas_Tol <= 0 Then
                    GoTo salida
                End If
                
                TotHorHHMM = CHoras(Horas_Tol, 60)
                
                'FGZ - 12/10/2010 --------------------------------------------------------------------------
                'StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                '"horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
                '"normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Horas_Tol & "," & _
                'ConvFecha(Fecha_Tol) & "," & ConvFecha(Fecha_Tol) & "," & "0,-1," & _
                'NroTer & "," & TipoHoraAGenerar & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
                'ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",'" & rs!Hora & "','" & Aux_HoraHasta & "'," & Aux_Anormalidad & "," & Aux_Anormalidad & ",' ')"
                'objConn.Execute StrSql, , adExecuteNoRecords
                'If depurar Then
                '    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TipoHoraAGenerar & "- Cantidad: " & Horas_Tol & " hs."
                'End If
                
                'FGZ - 22/10/2010 ----------------------------------------------------------------------------
                'StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                '"horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
                '"normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Horas_Tol & "," & _
                'ConvFecha(Fecha_Tol) & "," & ConvFecha(Fecha_Tol) & "," & "0,-1," & _
                'NroTer & "," & TipoHoraAGenerar & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
                'ConvFecha(Aux_FechaHasta) & "," & ConvFecha(rs_Dia!Fecha) & ",'" & Aux_HoraHasta & "','" & rs_Dia!Hora & "'," & Aux_Anormalidad & "," & Aux_Anormalidad & ",' ')"
                
                StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
                "normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Horas_Tol & "," & _
                ConvFecha(Fecha_Tol) & "," & ConvFecha(Fecha_Tol) & "," & "0,-1," & _
                NroTer & "," & TipoHoraAGenerar & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
                ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",'" & Aux_HoraHasta & "','" & rs_Dia!Hora & "'," & Aux_Anormalidad & "," & Aux_Anormalidad & ",' ')"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TipoHoraAGenerar & "- Cantidad: " & Horas_Tol & " hs."
                End If
                'FGZ - 12/10/2010 --------------------------------------------------------------------------
                    
                TipoHoraAGenerar = TH_tol
                RedTipoaGenerar = ConhRedTipo
            End If
            
            fecha_toldto = Aux_FechaHasta
            hora_toldto = Aux_HoraHasta
            Call objFechasHoras.SumoHoras(fecha_toldto, hora_toldto, toldto, fecres, horres)

            ok = objFechasHoras.ValidarHora(horres)
            
            If (rs!Fecha = fecres And rs!Hora > horres) And (acumula_dto) Then
                
                Call objFechasHoras.RestaHs(fecres, horres, rs!Fecha, rs!Hora, Tdias, Thoras, Tmin)
                tothoras = (Tdias * 24) + (Thoras + (Tmin / 60))
                
                If tothoras = 0 Then
                    GoTo salida
                Else
                    'Call DescontarHoras(rs!Fecha, tothoras, Nro_Turno, p_fecha)
                    'FGZ - 01/12/2005
                    Call Descontar_Horas(rs!Fecha, tothoras, 2)
                    
                End If
            End If
        Else
            
            If (rs!Fecha = Fecha_Tol) And (rs!Hora < rs_Dia!Hora) Then

                StrSql = " UPDATE " & TTempWFTurno & " SET fecha = " & _
                ConvFecha(rs!Fecha) & ", hora = '" & rs_Dia!Hora & _
                "' WHERE regnro = " & rs!Regnro
                StrSql = StrSql & " AND evenro = 2 "
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
        End If
    
        rs.MoveNext
        
    Loop
salida:
        rs_Dia.MoveNext
Loop

rs.Close
Set rs = Nothing
rs_Dia.Close
Set rs_Dia = Nothing

End Sub

Public Sub Politica200V2(NroTer As Long, Nro_Turno As Long, p_fecha As Date, tol As String, acumula As Boolean, deb As Boolean, toldto As String, acumula_dto As Boolean, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Generacion de las salidas temprano para turnos partidos analizando franjas enteras.
'                      Problema: no registra las ST cuando sale antes de la mitad de la franja del turno
'                      Sol:      Analiza en toda la franja en lugar de solo la 1era mitad de la franja
' Autor: FGZ 30/11/2006
' Ultima modificacion:
'                       FGZ - 07/04/2010 - Estaba aplicando el redondeo de la ST aun cuando debia generar AP, se arregló para que use el redondeo que corresponde
' --------------------------------------------------------------
Dim rs_Dia As New ADODB.Recordset
Dim rs As New ADODB.Recordset

Dim TH_tol As Integer
Dim Horas_Acum As Integer
Dim hora_red   As String
Dim Hora_a_Red As String
Dim tothoras   As Single
Dim Tdias      As Integer
Dim Thoras     As Integer
Dim Tmin       As Integer
Dim Horas_Tol As Single
Dim Fecha_Tol As Date
Dim Hora_Tol  As String
Dim ok As Boolean
Dim ConhRedTipo As Integer
Dim ConhRedTipoAP As Integer
Dim RedTipoaGenerar As Integer
Dim i As Integer

Dim fecres As Date
Dim horres As String

Dim fecha_toldto As Date
Dim hora_toldto As String

Dim Aux_FechaHasta As Date
Dim Aux_HoraHasta As String
Dim Aux_FechaDesde As Date
Dim Aux_HoraDesde As String

Dim rs2 As New ADODB.Recordset
Dim rs3 As New ADODB.Recordset
Dim TipoHoraAGenerar As Long
Dim TipoHoraAusenciaParcial As Long
Dim entrada_salida As Integer
Dim Aux_Anormalidad As Integer
Dim TotHorHHMM As String


StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 5 " & _
" AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
OpenRecordset StrSql, rs

If Not rs.EOF Then
    TH_tol = rs!thnro
    ConhRedTipo = IIf(Not EsNulo(rs!conhredondeo), rs!conhredondeo, 0)
Else
    If depurar Then
        GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora Salida Temprano para el Turno:", Str(Nro_Turno)
        Flog.writeline Espacios(Tabulador * 2) & "Salida Temprano. No está configurado el tipo de Hora para este turno"
    End If
    rs.Close
    Set rs = Nothing
    Exit Sub
End If

' FGZ - 24/10/2003
'Busco el tipo de Hora de Ausencia Parcial
StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 19 " & _
" AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
OpenRecordset StrSql, rs3

If Not rs3.EOF Then
    TipoHoraAusenciaParcial = rs3!thnro
    ConhRedTipoAP = IIf(Not EsNulo(rs3!conhredondeo), rs3!conhredondeo, 0)
Else
    If depurar Then
        GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora Ausencia Parcial para el Turno:", Str(Nro_Turno)
        Flog.writeline Espacios(Tabulador * 2) & "Ausencia Parcial. No está configurado el tipo de Hora para este turno"
    End If
    rs3.Close
    Set rs = Nothing
    Exit Sub
End If
TipoHoraAGenerar = TH_tol
RedTipoaGenerar = ConhRedTipo

StrSql = "SELECT * FROM " & TTempWFDia & " WHERE entrada = " & CInt(False) & " ORDER BY codigo ASC"
OpenRecordset StrSql, rs_Dia
Do While Not rs_Dia.EOF
    
' FGZ - 30/11/2006
'    StrSql = "SELECT * FROM " & TTempWFEmbudo & " WHERE codigo = " & rs_dia!Codigo
'    If rs.State = adStateOpen Then rs.Close
'    OpenRecordset StrSql, rs

    entrada_salida = IIf((rs_Dia!Codigo = 1 Or rs_Dia!Codigo = 2), 1, IIf((rs_Dia!Codigo = 3 Or rs_Dia!Codigo = 4), 2, 3))
    StrSql = "SELECT fecha_entrada fecha_desde,fecha_salida fecha_hasta,hora_entrada hora_desde, hora_salida hora_hasta FROM " & TTempWFDiaLaboral
    StrSql = StrSql & " WHERE entrada_salida = " & entrada_salida
    StrSql = StrSql & " ORDER BY fecha_desde, hora_desde DESC"
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE entrada = " & CInt(False) & " AND " & _
        " (( fecha > " & ConvFecha(rs!fecha_desde) & " ) OR " & _
        "  ( fecha = " & ConvFecha(rs!fecha_desde) & " and hora >= '" & rs!hora_desde & "')) and" & _
        " (( fecha < " & ConvFecha(rs!fecha_hasta) & " ) OR " & _
        "  ( fecha = " & ConvFecha(rs!fecha_hasta) & " and hora <= '" & rs!hora_hasta & "'))" & _
        " AND evenro = 2 " & _
        " ORDER BY fecha ASC, hora ASC"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
    End If
    If Not rs.EOF Then rs.MoveFirst
    Do While Not rs.EOF
        Call objFechasHoras.RestaXHoras(rs_Dia!Fecha, rs_Dia!Hora, tol, Fecha_Tol, Hora_Tol)
        ok = objFechasHoras.ValidarHora(Hora_Tol)
        'FGZ - 19/07/2007 - Se estaba escapando la condicion que salga el dia anterior(EN caso de que sea un turno Nocturno)
        'If (rs!Fecha = fecha_tol) And (rs!Hora < hora_tol) And (rs!Hora < rs_dia!Hora) Then
        If ((rs!Fecha = Fecha_Tol) And (rs!Hora < Hora_Tol) And (rs!Hora < rs_Dia!Hora)) Or (rs!Fecha < Fecha_Tol) Then
            Aux_FechaHasta = rs_Dia!Fecha
            Aux_HoraHasta = rs_Dia!Hora
            ' Busco otra reg. de entrada entre la hora que deberia haber salido y la hora en que salió.
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Busco otra reg. de entrada entre la hora que deberia haber salido y la hora en que salió."
            End If
            If HayOtraRegEntreHoras(Aux_FechaHasta, rs!Hora, Hora_Tol) Then
                StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE entrada = " & CInt(True) & " AND " & _
                "  fecha = " & ConvFecha(Aux_FechaHasta) & " AND hora > '" & rs!Hora & "' AND " & _
                "  hora < '" & Hora_Tol & "' " & _
                " AND evenro = 2 " & _
                " ORDER BY fecha ASC, hora ASC"
                If rs2.State = adStateOpen Then rs2.Close
                OpenRecordset StrSql, rs2
                If Not rs2.EOF Then
                    rs2.MoveFirst
                    Aux_FechaHasta = rs2!Fecha
                    Aux_HoraHasta = rs2!Hora
                    TipoHoraAGenerar = TipoHoraAusenciaParcial
                    RedTipoaGenerar = ConhRedTipoAP
                    
                    StrSql = " UPDATE " & TTempWFTurno & " SET anornro = 7 WHERE regnro = " & rs!Regnro
                    StrSql = StrSql & " AND evenro = 2 "
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Aux_Anormalidad = 7
                    
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "SQL = " & StrSql
                        Flog.writeline Espacios(Tabulador * 2) & "Encontró: Fecha " & rs2!Fecha & " Hora " & rs2!Hora & " ==> Genero Ausencia parcial"
                    End If
                Else
                    StrSql = " UPDATE " & TTempWFTurno & " SET anornro = 6 WHERE regnro = " & rs!Regnro
                    StrSql = StrSql & " AND evenro = 2 "
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Aux_Anormalidad = 6
                End If
            Else
                StrSql = " UPDATE " & TTempWFTurno & " SET anornro = 6 WHERE regnro = " & rs!Regnro
                StrSql = StrSql & " AND evenro = 2 "
                objConn.Execute StrSql, , adExecuteNoRecords
                Aux_Anormalidad = 6
            End If
            
            If acumula = True Then
                 'FGZ - 12/10/2010 --------------------------------------------------------------------------
                'Call objFechasHoras.RestaHs(rs!Fecha, rs!Hora, Aux_FechaHasta, Aux_HoraHasta, Tdias, Thoras, Tmin)
                'tothoras = (Tdias * 24) + (Thoras + (Tmin / 60))
                If TolDtoST > toltemp Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 4) & "La tolerancia de Dto debe ser menor que la Tolerancia de ST"
                        Flog.writeline Espacios(Tabulador * 4) & "No se generará Anormalidad."
                    End If
                    tothoras = 0
                    Aux_FechaHasta = rs_Dia!Fecha
                    Aux_HoraHasta = rs_Dia!Hora
                Else
                    'FGZ - 18/09/2012 -------------------------------------------
                    If Aux_Anormalidad = 7 Then
                        'nada porque habia reg en el medio
                        Aux_FechaDesde = rs!Fecha
                        Aux_HoraDesde = rs!Hora
                    Else
                        Aux_FechaDesde = rs!Fecha
                        Aux_HoraDesde = rs!Hora
                    
                        Aux_FechaHasta = rs_Dia!Fecha
                        Aux_HoraHasta = rs_Dia!Hora
                    End If
                    Call objFechasHoras.SumoHoras(Aux_FechaHasta, Aux_HoraHasta, TolDtoST, fecres, horres)
                    ok = objFechasHoras.ValidarHora(horres)
                    Aux_FechaHasta = fecres
                    Aux_HoraHasta = horres
                    'Call objFechasHoras.RestaHs(Aux_FechaHasta, Aux_HoraHasta, rs_Dia!Fecha, rs_Dia!Hora, Tdias, Thoras, Tmin)
                    Call objFechasHoras.RestaHs(Aux_FechaDesde, Aux_HoraDesde, Aux_FechaHasta, Aux_HoraHasta, Tdias, Thoras, Tmin)
                    tothoras = (Tdias * 24) + (Thoras + (Tmin / 60))
                    'FGZ - 18/09/2012 -------------------------------------------
                End If
                'FGZ - 12/10/2010 --------------------------------------------------------------------------
                
                Call objFechasHoras.Convertir_A_Hora(tothoras * 60, Hora_a_Red)
                Call objFechasHoras.Redondeo_Horas_Tipo(Hora_a_Red, RedTipoaGenerar, Horas_Tol)
                
                If Horas_Tol <= 0 Then
                    GoTo salida
                End If
                
                
                TotHorHHMM = CHoras(Horas_Tol, 60)
                
                'FGZ - 12/10/2010 --------------------------------------------------------------------------
                'StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                '"horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
                '"normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Horas_Tol & "," & _
                'ConvFecha(rs!Fecha) & "," & ConvFecha(Fecha_Tol) & "," & "0,-1," & _
                'NroTer & "," & TipoHoraAGenerar & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
                'ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",'" & rs!Hora & "','" & Aux_HoraHasta & "'," & Aux_Anormalidad & "," & Aux_Anormalidad & ",' ')"
                
                'FGZ - 22/10/2010 ----------------------------------------------------------------------------
                'StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                '"horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
                '"normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Horas_Tol & "," & _
                'ConvFecha(rs!Fecha) & "," & ConvFecha(Fecha_Tol) & "," & "0,-1," & _
                'NroTer & "," & TipoHoraAGenerar & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
                'ConvFecha(Aux_FechaHasta) & "," & ConvFecha(rs_Dia!Fecha) & ",'" & Aux_HoraHasta & "','" & rs_Dia!Hora & "'," & Aux_Anormalidad & "," & Aux_Anormalidad & ",' ')"
                
                
                'FGZ - 18/09/2012 ----------------------------------------------------------------------------
                'StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                '"horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
                '"normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Horas_Tol & "," & _
                'ConvFecha(rs!Fecha) & "," & ConvFecha(Fecha_Tol) & "," & "0,-1," & _
                'NroTer & "," & TipoHoraAGenerar & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
                'ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",'" & Aux_HoraHasta & "','" & rs_Dia!Hora & "'," & Aux_Anormalidad & "," & Aux_Anormalidad & ",' ')"
                
                StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
                "normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Horas_Tol & "," & _
                ConvFecha(Aux_FechaDesde) & "," & ConvFecha(Fecha_Tol) & "," & "0,-1," & _
                NroTer & "," & TipoHoraAGenerar & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
                ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",'" & Aux_HoraDesde & "','" & Aux_HoraHasta & "'," & Aux_Anormalidad & "," & Aux_Anormalidad & ",' ')"
                objConn.Execute StrSql, , adExecuteNoRecords
                'FGZ - 12/10/2010 --------------------------------------------------------------------------
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TipoHoraAGenerar & "- Cantidad: " & Horas_Tol & " hs."
                End If
                    
                TipoHoraAGenerar = TH_tol
                RedTipoaGenerar = ConhRedTipo
            End If
            
            fecha_toldto = Aux_FechaHasta
            hora_toldto = Aux_HoraHasta
            Call objFechasHoras.SumoHoras(fecha_toldto, hora_toldto, toldto, fecres, horres)

            ok = objFechasHoras.ValidarHora(horres)
            
            If (rs!Fecha = fecres And rs!Hora > horres) And (acumula_dto) Then
                
                Call objFechasHoras.RestaHs(fecres, horres, rs!Fecha, rs!Hora, Tdias, Thoras, Tmin)
                tothoras = (Tdias * 24) + (Thoras + (Tmin / 60))
                
                If tothoras = 0 Then
                    GoTo salida
                Else
                    Call Descontar_Horas(rs!Fecha, tothoras, 2)
                End If
            End If
        Else
             If (rs!Fecha = Fecha_Tol) And (rs!Hora < rs_Dia!Hora) Then
                StrSql = " UPDATE " & TTempWFTurno & " SET fecha = " & _
                ConvFecha(rs!Fecha) & ", hora = '" & rs_Dia!Hora & _
                "' WHERE regnro = " & rs!Regnro
                StrSql = StrSql & " AND evenro = 2 "
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
        End If
        rs.MoveNext
    Loop

salida:
    rs_Dia.MoveNext
Loop

'Cierro todo y libero
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
    If rs_Dia.State = adStateOpen Then rs_Dia.Close
    Set rs_Dia = Nothing
End Sub


Public Sub Politica200_Configurable(ByVal NroTer As Long, ByVal Nro_Turno As Long, ByVal p_fecha As Date, ByVal tol As String, ByVal acumula As Boolean, ByVal deb As Boolean, ByVal toldto As String, ByVal acumula_dto As Boolean, ByVal subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long, ByVal TH1, ByVal TH2, ByVal TH3, ByVal AN1, ByVal AN2, ByVal AN3)
' --------------------------------------------------------------
' Descripcion: Generacion de las salidas temprano.
' Autor: FGZ 14/09/2011
' Ultima modificacion:
' --------------------------------------------------------------
Dim rs_Dia As New ADODB.Recordset
Dim rs As New ADODB.Recordset

'Dim TH_tol As Integer
Dim Horas_Acum As Integer
Dim hora_red   As String
Dim Hora_a_Red As String
Dim tothoras   As Single
Dim Tdias      As Integer
Dim Thoras     As Integer
Dim Tmin       As Integer
Dim Horas_Tol As Single
Dim Fecha_Tol As Date
Dim Hora_Tol  As String
Dim ok As Boolean
Dim ConhRedTipo As Integer
Dim ConhRedTipoAP As Integer
Dim RedTipoaGenerar As Integer
Dim i As Integer
Dim fecres As Date
Dim horres As String
Dim fecha_toldto As Date
Dim hora_toldto As String
Dim Aux_FechaHasta As Date
Dim Aux_HoraHasta As String
Dim Aux_FechaDesde As Date
Dim Aux_HoraDesde As String

Dim rs2 As New ADODB.Recordset
Dim rs3 As New ADODB.Recordset
Dim TipoHoraAGenerar As Long
Dim TipoHoraAusenciaParcial As Long
Dim entrada_salida As Integer
Dim Aux_Anormalidad As Integer

Dim Genero_HS As Boolean
Dim tol_Aplicada As String
Dim TminST    As Integer
Dim TH_tol As Long
Dim AN_tol As Long

Dim TotHorHHMM As String


'StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 5 " & _
'" AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
'OpenRecordset StrSql, rs
'
'If Not rs.EOF Then
'    TH_tol = rs!thnro
'    ConhRedTipo = IIf(Not EsNulo(rs!conhredondeo), rs!conhredondeo, 0)
'Else
'    If depurar Then
'        GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora Salida Temprano para el Turno:", Str(Nro_Turno)
'        Flog.writeline Espacios(Tabulador * 2) & "Salida Temprano. No está configurado el tipo de Hora para este turno"
'    End If
'    rs.Close
'    Set rs = Nothing
'    Exit Sub
'End If

'FGZ - 13/12/2013 --------------------------------
StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 5 " & _
" AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
OpenRecordset StrSql, rs
If Not rs.EOF Then
    ConhRedTipo = IIf(Not EsNulo(rs!conhredondeo), rs!conhredondeo, 0)
Else
    If depurar Then
        Flog.writeline Espacios(Tabulador * 4) & "No esta configurado el Tipo de Hora Salida Temprano para el Turno:" & Str(Nro_Turno)
        Flog.writeline Espacios(Tabulador * 4) & "NO se Podrá redondear."
    End If
End If
'FGZ - 13/12/2013 --------------------------------


' FGZ - 24/10/2003
'Busco el tipo de Hora de Ausencia Parcial
StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 19 " & _
" AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
OpenRecordset StrSql, rs3

If Not rs3.EOF Then
    TipoHoraAusenciaParcial = rs3!thnro
    ConhRedTipoAP = IIf(Not EsNulo(rs3!conhredondeo), rs3!conhredondeo, 0)
Else
    If depurar Then
        GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora Ausencia Parcial para el Turno:", Str(Nro_Turno)
        Flog.writeline Espacios(Tabulador * 2) & "Ausencia Parcial. No está configurado el tipo de Hora para este turno"
    End If
    rs3.Close
    Set rs = Nothing
    Exit Sub
End If
TipoHoraAGenerar = TH_tol
RedTipoaGenerar = ConhRedTipo

StrSql = "SELECT * FROM " & TTempWFDia & " WHERE entrada = " & CInt(False) & " ORDER BY codigo ASC"
OpenRecordset StrSql, rs_Dia
Do While Not rs_Dia.EOF
    
' FGZ - 30/11/2006
'    StrSql = "SELECT * FROM " & TTempWFEmbudo & " WHERE codigo = " & rs_dia!Codigo
'    If rs.State = adStateOpen Then rs.Close
'    OpenRecordset StrSql, rs

    entrada_salida = IIf((rs_Dia!Codigo = 1 Or rs_Dia!Codigo = 2), 1, IIf((rs_Dia!Codigo = 3 Or rs_Dia!Codigo = 4), 2, 3))
    StrSql = "SELECT fecha_entrada fecha_desde,fecha_salida fecha_hasta,hora_entrada hora_desde, hora_salida hora_hasta FROM " & TTempWFDiaLaboral
    StrSql = StrSql & " WHERE entrada_salida = " & entrada_salida
    StrSql = StrSql & " ORDER BY fecha_desde, hora_desde DESC"
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE entrada = " & CInt(False) & " AND " & _
        " (( fecha > " & ConvFecha(rs!fecha_desde) & " ) OR " & _
        "  ( fecha = " & ConvFecha(rs!fecha_desde) & " and hora >= '" & rs!hora_desde & "')) and" & _
        " (( fecha < " & ConvFecha(rs!fecha_hasta) & " ) OR " & _
        "  ( fecha = " & ConvFecha(rs!fecha_hasta) & " and hora <= '" & rs!hora_hasta & "'))" & _
        " AND evenro = 2 " & _
        " ORDER BY fecha ASC, hora ASC"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
    End If
    If Not rs.EOF Then rs.MoveFirst
    Do While Not rs.EOF
        '=========================================================
            'calcular la diferencia entre real y teorico
            Call objFechasHoras.RestaHs(rs!Fecha, rs!Hora, rs_Dia!Fecha, rs_Dia!Hora, Tdias, Thoras, Tmin)
            TminST = Tmin + 60 * Thoras + 60 * 24 * Tdias
            
            Genero_HS = False
            If Tiene_tol_ST_Grado3 Then
                If TminST > tol_ST_Grado3 Then
                    tothoras = (Tdias * 24) + (Thoras + (Tmin / 60))
                    TH_tol = TH3
                    AN_tol = AN3
                    Genero_HS = True
                    tol_Aplicada = tol_ST_Grado3
                End If
            End If
            If Not Genero_HS Then
                If Tiene_tol_ST_Grado2 Then
                    If TminST > tol_ST_Grado2 Then
                        tothoras = (Tdias * 24) + (Thoras + (Tmin / 60))
                        TH_tol = TH2
                        AN_tol = AN2
                        Genero_HS = True
                        tol_Aplicada = tol_ST_Grado2
                    End If
                End If
            End If
            If Not Genero_HS Then
                'FGZ - 19/09/2012 -----------------
                'If Tiene_tol_ST_Grado2 Then
                    If TminST > toltemp Then
                        tothoras = (Tdias * 24) + (Thoras + (Tmin / 60))
                        TH_tol = TH1
                        AN_tol = AN1
                        Genero_HS = True
                        tol_Aplicada = toltemp
                    End If
                'End If
                'FGZ - 19/09/2012 -----------------
            End If
            TipoHoraAGenerar = TH_tol
            If Genero_HS And TH_tol = 0 Then
                Genero_HS = False
            End If
    
    
        If Genero_HS Then
            Call objFechasHoras.RestaXHoras(rs_Dia!Fecha, rs_Dia!Hora, tol, Fecha_Tol, Hora_Tol)
            ok = objFechasHoras.ValidarHora(Hora_Tol)
            Aux_FechaHasta = rs_Dia!Fecha
            Aux_HoraHasta = rs_Dia!Hora
            'Busco otra reg. de entrada entre la hora que deberia haber salido y la hora en que salió.
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Busco otra reg. de entrada entre la hora que deberia haber salido y la hora en que salió."
            End If
            'FGZ - 10/05/2013 ------------------------------------------------
            'If HayOtraRegEntreHoras(Aux_FechaHasta, rs!Hora, Hora_Tol) Then
            If HayOtraRegEntreHorasDH(rs!Fecha, rs!Hora, Aux_FechaHasta, Hora_Tol) Then
                'StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE entrada = " & CInt(True) & " AND " & _
                '"  fecha = " & ConvFecha(Aux_FechaHasta) & " AND hora > '" & rs!Hora & "' AND " & _
                '"  hora < '" & Hora_Tol & "' " & _
                '" AND evenro = 2 " & _
                '" ORDER BY fecha ASC, hora ASC"
                'If rs2.State = adStateOpen Then rs2.Close
                'OpenRecordset StrSql, rs2
                
                StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE entrada = " & CInt(True)
                StrSql = StrSql & " AND ( (fecha = " & ConvFecha(rs!Fecha) & " AND hora > '" & rs!Hora & "')"
                ' StrSql = StrSql & " or (fecha > " & ConvFecha(Aux_FechaHasta) & " AND hora < '" & Hora_Tol & "'))" mdf
                StrSql = StrSql & " and (fecha >= " & ConvFecha(Aux_FechaHasta) & " AND hora < '" & Hora_Tol & "'))"
                
                StrSql = StrSql & " ORDER BY fecha ASC, hora ASC "
                OpenRecordset StrSql, rs2
                If Not rs2.EOF Then
                    rs2.MoveFirst
                    Aux_FechaHasta = rs2!Fecha
                    Aux_HoraHasta = rs2!Hora
                    TipoHoraAGenerar = TipoHoraAusenciaParcial
                    RedTipoaGenerar = ConhRedTipoAP
                    
                    StrSql = " UPDATE " & TTempWFTurno & " SET anornro = 7 WHERE regnro = " & rs!Regnro
                    StrSql = StrSql & " AND evenro = 2 "
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Aux_Anormalidad = 7
                    
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "SQL = " & StrSql
                        Flog.writeline Espacios(Tabulador * 2) & "Encontró: Fecha " & rs2!Fecha & " Hora " & rs2!Hora & " ==> Genero Ausencia parcial"
                    End If
                Else
                    StrSql = " UPDATE " & TTempWFTurno & " SET anornro = " & AN_tol & " WHERE regnro = " & rs!Regnro
                    StrSql = StrSql & " AND evenro = 2 "
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Aux_Anormalidad = AN_tol
                End If
            Else
                StrSql = " UPDATE " & TTempWFTurno & " SET anornro = " & AN_tol & " WHERE regnro = " & rs!Regnro
                StrSql = StrSql & " AND evenro = 2 "
                objConn.Execute StrSql, , adExecuteNoRecords
                Aux_Anormalidad = AN_tol
            End If
            
            If acumula = True Then
                If TolDtoST > toltemp Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 4) & "La tolerancia de Dto debe ser menor que la Tolerancia de ST"
                        Flog.writeline Espacios(Tabulador * 4) & "No se generará Anormalidad."
                    End If
                    tothoras = 0
                    Aux_FechaHasta = rs_Dia!Fecha
                    Aux_HoraHasta = rs_Dia!Hora
                Else
                    'FGZ - 18/09/2012 -------------------------------------------
                    'Aux_FechaHasta = rs!Fecha
                    'Aux_HoraHasta = rs!Hora
                    'Call objFechasHoras.SumoHoras(Aux_FechaHasta, Aux_HoraHasta, TolDtoST, fecres, horres)
                    'ok = objFechasHoras.ValidarHora(horres)
                    'Aux_FechaHasta = fecres
                    'Aux_HoraHasta = horres
                    'Call objFechasHoras.RestaHs(Aux_FechaHasta, Aux_HoraHasta, rs_Dia!Fecha, rs_Dia!Hora, Tdias, Thoras, Tmin)
                    'tothoras = (Tdias * 24) + (Thoras + (Tmin / 60))
                    
                    'FGZ - 18/09/2012 -------------------------------------------
                    If Aux_Anormalidad = 7 Then
                        'nada porque habia reg en el medio
                        Aux_FechaDesde = rs!Fecha
                        Aux_HoraDesde = rs!Hora
                    Else
                        Aux_FechaDesde = rs!Fecha
                        Aux_HoraDesde = rs!Hora
                    
                        Aux_FechaHasta = rs_Dia!Fecha
                        Aux_HoraHasta = rs_Dia!Hora
                    End If
                    Call objFechasHoras.SumoHoras(Aux_FechaHasta, Aux_HoraHasta, TolDtoST, fecres, horres)
                    ok = objFechasHoras.ValidarHora(horres)
                    Aux_FechaHasta = fecres
                    Aux_HoraHasta = horres
                    'Call objFechasHoras.RestaHs(Aux_FechaHasta, Aux_HoraHasta, rs_Dia!Fecha, rs_Dia!Hora, Tdias, Thoras, Tmin)
                    Call objFechasHoras.RestaHs(Aux_FechaDesde, Aux_HoraDesde, Aux_FechaHasta, Aux_HoraHasta, Tdias, Thoras, Tmin)
                    tothoras = (Tdias * 24) + (Thoras + (Tmin / 60))
                    'FGZ - 18/09/2012 -------------------------------------------
                End If
                
                Call objFechasHoras.Convertir_A_Hora(tothoras * 60, Hora_a_Red)
                Call objFechasHoras.Redondeo_Horas_Tipo(Hora_a_Red, RedTipoaGenerar, Horas_Tol)
                
                If Horas_Tol <= 0 Then
                    GoTo salida
                End If
                
                
                TotHorHHMM = CHoras(Horas_Tol, 60)
                
                'FGZ - 18/09/2012 -------------------------------------------
                'StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                '"horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
                '"normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Horas_Tol & "," & _
                'ConvFecha(rs!Fecha) & "," & ConvFecha(Fecha_Tol) & "," & "0,-1," & _
                'NroTer & "," & TipoHoraAGenerar & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
                'ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",'" & Aux_HoraHasta & "','" & rs_Dia!Hora & "'," & Aux_Anormalidad & "," & Aux_Anormalidad & ",' ')"
                
                StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
                "normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Horas_Tol & "," & _
                ConvFecha(Aux_FechaDesde) & "," & ConvFecha(Fecha_Tol) & "," & "0,-1," & _
                NroTer & "," & TipoHoraAGenerar & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
                ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",'" & Aux_HoraDesde & "','" & Aux_HoraHasta & "'," & Aux_Anormalidad & "," & Aux_Anormalidad & ",' ')"
                objConn.Execute StrSql, , adExecuteNoRecords

                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TipoHoraAGenerar & "- Cantidad: " & Horas_Tol & " hs."
                End If
                    
                TipoHoraAGenerar = TH_tol
                RedTipoaGenerar = ConhRedTipo
            End If
            
            fecha_toldto = Aux_FechaHasta
            hora_toldto = Aux_HoraHasta
            Call objFechasHoras.SumoHoras(fecha_toldto, hora_toldto, toldto, fecres, horres)

            ok = objFechasHoras.ValidarHora(horres)
            
            If (rs!Fecha = fecres And rs!Hora > horres) And (acumula_dto) Then
                
                Call objFechasHoras.RestaHs(fecres, horres, rs!Fecha, rs!Hora, Tdias, Thoras, Tmin)
                tothoras = (Tdias * 24) + (Thoras + (Tmin / 60))
                
                If tothoras = 0 Then
                    GoTo salida
                Else
                    Call Descontar_Horas(rs!Fecha, tothoras, 2)
                End If
            End If
        Else
             If (rs!Fecha = Fecha_Tol) And (rs!Hora < rs_Dia!Hora) Then
                StrSql = " UPDATE " & TTempWFTurno & " SET fecha = " & _
                ConvFecha(rs!Fecha) & ", hora = '" & rs_Dia!Hora & _
                "' WHERE regnro = " & rs!Regnro
                StrSql = StrSql & " AND evenro = 2 "
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
        End If
        rs.MoveNext
    Loop
    
    
        '=========================================================
    
    
    
    
    
    
    
    
    
    
    
'        Call objFechasHoras.RestaXHoras(rs_Dia!Fecha, rs_Dia!Hora, tol, Fecha_Tol, Hora_Tol)
'        ok = objFechasHoras.ValidarHora(Hora_Tol)
'        'FGZ - 19/07/2007 - Se estaba escapando la condicion que salga el dia anterior(EN caso de que sea un turno Nocturno)
'        'If (rs!Fecha = fecha_tol) And (rs!Hora < hora_tol) And (rs!Hora < rs_dia!Hora) Then
'        If ((rs!Fecha = Fecha_Tol) And (rs!Hora < Hora_Tol) And (rs!Hora < rs_Dia!Hora)) Or (rs!Fecha < Fecha_Tol) Then
'            Aux_FechaHasta = rs_Dia!Fecha
'            Aux_HoraHasta = rs_Dia!Hora
'            ' Busco otra reg. de entrada entre la hora que deberia haber salido y la hora en que salió.
'            If depurar Then
'                Flog.writeline Espacios(Tabulador * 2) & "Busco otra reg. de entrada entre la hora que deberia haber salido y la hora en que salió."
'            End If
'            If HayOtraRegEntreHoras(Aux_FechaHasta, rs!Hora, Hora_Tol) Then
'                StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE entrada = " & CInt(True) & " AND " & _
'                "  fecha = " & ConvFecha(Aux_FechaHasta) & " AND hora > '" & rs!Hora & "' AND " & _
'                "  hora < '" & Hora_Tol & "' " & _
'                " AND evenro = 2 " & _
'                " ORDER BY fecha ASC, hora ASC"
'                If rs2.State = adStateOpen Then rs2.Close
'                OpenRecordset StrSql, rs2
'                If Not rs2.EOF Then
'                    rs2.MoveFirst
'                    Aux_FechaHasta = rs2!Fecha
'                    Aux_HoraHasta = rs2!Hora
'                    TipoHoraAGenerar = TipoHoraAusenciaParcial
'                    RedTipoaGenerar = ConhRedTipoAP
'
'                    StrSql = " UPDATE " & TTempWFTurno & " SET anornro = 7 WHERE regnro = " & rs!Regnro
'                    StrSql = StrSql & " AND evenro = 2 "
'                    objConn.Execute StrSql, , adExecuteNoRecords
'                    Aux_Anormalidad = 7
'
'                    If depurar Then
'                        Flog.writeline Espacios(Tabulador * 2) & "SQL = " & StrSql
'                        Flog.writeline Espacios(Tabulador * 2) & "Encontró: Fecha " & rs2!Fecha & " Hora " & rs2!Hora & " ==> Genero Ausencia parcial"
'                    End If
'                Else
'                    StrSql = " UPDATE " & TTempWFTurno & " SET anornro = 6 WHERE regnro = " & rs!Regnro
'                    StrSql = StrSql & " AND evenro = 2 "
'                    objConn.Execute StrSql, , adExecuteNoRecords
'                    Aux_Anormalidad = 6
'                End If
'            Else
'                StrSql = " UPDATE " & TTempWFTurno & " SET anornro = 6 WHERE regnro = " & rs!Regnro
'                StrSql = StrSql & " AND evenro = 2 "
'                objConn.Execute StrSql, , adExecuteNoRecords
'                Aux_Anormalidad = 6
'            End If
'
'            If acumula = True Then
'                 'FGZ - 12/10/2010 --------------------------------------------------------------------------
'                'Call objFechasHoras.RestaHs(rs!Fecha, rs!Hora, Aux_FechaHasta, Aux_HoraHasta, Tdias, Thoras, Tmin)
'                'tothoras = (Tdias * 24) + (Thoras + (Tmin / 60))
'                If TolDtoST > tol Then
'                    If depurar Then
'                        Flog.writeline Espacios(Tabulador * 4) & "La tolerancia de Dto debe ser menor que la Tolerancia de ST"
'                        Flog.writeline Espacios(Tabulador * 4) & "No se generará Anormalidad."
'                    End If
'                    tothoras = 0
'                    Aux_FechaHasta = rs_Dia!Fecha
'                    Aux_HoraHasta = rs_Dia!Hora
'                Else
'                    Aux_FechaHasta = rs!Fecha
'                    Aux_HoraHasta = rs!Hora
'                    Call objFechasHoras.SumoHoras(Aux_FechaHasta, Aux_HoraHasta, TolDtoST, fecres, horres)
'                    ok = objFechasHoras.ValidarHora(horres)
'                    Aux_FechaHasta = fecres
'                    Aux_HoraHasta = horres
'                    Call objFechasHoras.RestaHs(Aux_FechaHasta, Aux_HoraHasta, rs_Dia!Fecha, rs_Dia!Hora, Tdias, Thoras, Tmin)
'                    tothoras = (Tdias * 24) + (Thoras + (Tmin / 60))
'                End If
'                'FGZ - 12/10/2010 --------------------------------------------------------------------------
'
'                Call objFechasHoras.Convertir_A_Hora(tothoras * 60, Hora_a_Red)
'                Call objFechasHoras.Redondeo_Horas_Tipo(Hora_a_Red, RedTipoaGenerar, Horas_Tol)
'
'                If Horas_Tol <= 0 Then
'                    GoTo Salida
'                End If
'
'
'                TotHorHHMM = CHoras(Horas_Tol, 60)
'
'                'FGZ - 12/10/2010 --------------------------------------------------------------------------
'                'StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
'                '"horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
'                '"normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Horas_Tol & "," & _
'                'ConvFecha(rs!Fecha) & "," & ConvFecha(Fecha_Tol) & "," & "0,-1," & _
'                'NroTer & "," & TipoHoraAGenerar & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
'                'ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",'" & rs!Hora & "','" & Aux_HoraHasta & "'," & Aux_Anormalidad & "," & Aux_Anormalidad & ",' ')"
'
'                'FGZ - 22/10/2010 ----------------------------------------------------------------------------
'                'StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
'                '"horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
'                '"normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Horas_Tol & "," & _
'                'ConvFecha(rs!Fecha) & "," & ConvFecha(Fecha_Tol) & "," & "0,-1," & _
'                'NroTer & "," & TipoHoraAGenerar & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
'                'ConvFecha(Aux_FechaHasta) & "," & ConvFecha(rs_Dia!Fecha) & ",'" & Aux_HoraHasta & "','" & rs_Dia!Hora & "'," & Aux_Anormalidad & "," & Aux_Anormalidad & ",' ')"
'
'                StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
'                "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
'                "normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Horas_Tol & "," & _
'                ConvFecha(rs!Fecha) & "," & ConvFecha(Fecha_Tol) & "," & "0,-1," & _
'                NroTer & "," & TipoHoraAGenerar & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
'                ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",'" & Aux_HoraHasta & "','" & rs_Dia!Hora & "'," & Aux_Anormalidad & "," & Aux_Anormalidad & ",' ')"
'                objConn.Execute StrSql, , adExecuteNoRecords
'                'FGZ - 12/10/2010 --------------------------------------------------------------------------
'                If depurar Then
'                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TipoHoraAGenerar & "- Cantidad: " & Horas_Tol & " hs."
'                End If
'
'                TipoHoraAGenerar = TH_tol
'                RedTipoaGenerar = ConhRedTipo
'            End If
'
'            fecha_toldto = Aux_FechaHasta
'            hora_toldto = Aux_HoraHasta
'            Call objFechasHoras.SumoHoras(fecha_toldto, hora_toldto, toldto, fecres, horres)
'
'            ok = objFechasHoras.ValidarHora(horres)
'
'            If (rs!Fecha = fecres And rs!Hora > horres) And (acumula_dto) Then
'
'                Call objFechasHoras.RestaHs(fecres, horres, rs!Fecha, rs!Hora, Tdias, Thoras, Tmin)
'                tothoras = (Tdias * 24) + (Thoras + (Tmin / 60))
'
'                If tothoras = 0 Then
'                    GoTo Salida
'                Else
'                    Call Descontar_Horas(rs!Fecha, tothoras, 2)
'                End If
'            End If
'        Else
'             If (rs!Fecha = Fecha_Tol) And (rs!Hora < rs_Dia!Hora) Then
'                StrSql = " UPDATE " & TTempWFTurno & " SET fecha = " & _
'                ConvFecha(rs!Fecha) & ", hora = '" & rs_Dia!Hora & _
'                "' WHERE regnro = " & rs!Regnro
'                StrSql = StrSql & " AND evenro = 2 "
'                objConn.Execute StrSql, , adExecuteNoRecords
'            End If
'        End If
'        rs.MoveNext
'    Loop
'

salida:
    rs_Dia.MoveNext
Loop

'Cierro todo y libero
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
    If rs_Dia.State = adStateOpen Then rs_Dia.Close
    Set rs_Dia = Nothing
End Sub




Public Sub Politica201(NroTer As Long, Nro_Turno As Long, p_fecha As Date, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Generacion de Impuntualidad.
' Autor: FGZ - 15/01/2010
' Ultima modificacion:
'
' --------------------------------------------------------------
Dim i  As Integer
Dim j  As Integer

Dim Opcion  As Integer
Dim Tol1 As String
Dim Tol2 As String
Dim Tol3 As String
Dim TH1 As Long
Dim TH2 As Long
Dim TH3 As Long
Dim AN1 As String
Dim AN2 As String
Dim AN3 As String

Dim TotHor As Single
Dim TotHorHHMM As String

Dim THaGen As Long
Dim AnaGen As String
Dim Fecha_Tol As Date
Dim Hora_Tol  As String
Dim entrada_salida As Integer
Dim ConhRedTipo As Integer
Dim Hora_a_Red As String
Dim Horas_Tol As Single
Dim Genera As Boolean



Dim rs As New ADODB.Recordset
Dim rs_Dia As New ADODB.Recordset
Dim rs_diaL As New ADODB.Recordset
Dim rs_Conf As New ADODB.Recordset

    Nivel_Tab_Log = 3
   
    Call SetearParametrosPolitica(Detalle, ok)

    Opcion = st_Opcion  'Version de la politica
    
    Tol1 = IIf(Not EsNulo(st_Tolerancia), st_Tolerancia, "0000")
    Tol2 = IIf(Not EsNulo(st_Tolerancia2), st_Tolerancia2, "0000")
    Tol3 = IIf(Not EsNulo(st_Tolerancia3), st_Tolerancia3, "0000")
    
    TH1 = IIf(Not EsNulo(st_TipoHora1), st_TipoHora1, 0) 'Tipo de hora a generar
    TH2 = IIf(Not EsNulo(st_TipoHora2), st_TipoHora2, 0) 'Tipo de hora a generar
    TH3 = IIf(Not EsNulo(st_TipoHora3), st_TipoHora3, 0) 'Tipo de hora a generar
        
    AN1 = IIf(Not EsNulo(st_Anormalidad), st_Anormalidad, 0) 'Codigo de anormalidad a generar
    AN2 = IIf(Not EsNulo(st_Anormalidad2), st_Anormalidad2, 0) 'Codigo de anormalidad a generar
    AN3 = IIf(Not EsNulo(st_Anormalidad3), st_Anormalidad3, 0) 'Codigo de anormalidad a generar
    
    If depurar Then
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Version: " & Opcion
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Rango 1"
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "  Tolerancia: " & Tol1
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "  Tipo de hora a generar: " & TH1
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "  Codigo de Anormalidad: " & AN1
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Rango 2"
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "  Tolerancia: " & Tol2
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "  Tipo de hora a generar: " & TH2
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "  Codigo de Anormalidad: " & AN2
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Rango 3"
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "  Tolerancia: " & Tol3
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "  Tipo de hora a generar: " & TH3
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "  Codigo de Anormalidad: " & AN3
    End If
   
   
Select Case Opcion
Case 1: 'Estandar. Genera siempre valor 1.

    '1) Cuando la cantidad de minutos entre la ET y la Reg de entrada es menor o igual que TOL1
    '       ==> no se generará nada
    '2) Cuando la cantidad de minutos entre la ET y la reg de entrada es mayor a la TOL1 y menor o igual que TOL2
    '       ==> se generará el tipo de hora 1 por la cantidad de minutos de diferencia entre la ET y la reg de entrada
    '           y se generará la anormalidad 1 configurada (se puede dejar la anormalidad en blanco para no generar anormalidad).
    '3) Cuando la cantidad de minutos entre la ET y la registración de entrada es mayor a la TOL2
    '       ==> se generará el tipo de hora 2 por la cantidad de minutos de diferencia entre la ET y la reg de entrada
    '           y se generará la anormalidad 2 configurada (se puede dejar la anormalidad en blanco para no generar anormalidad).
    '4) Cuando la cantidad de minutos entre la ET y la registración de entrada es mayor a la TOL3
    '       ==> se generará el tipo de hora 3 por la cantidad de minutos de diferencia entre la ET y la reg de entrada
    '           y se generará la anormalidad 3 configurada (se puede dejar la anormalidad en blanco para no generar anormalidad).


    StrSql = "SELECT * FROM " & TTempWFDia & " WHERE entrada = " & CInt(True) & " ORDER BY codigo ASC"
    OpenRecordset StrSql, rs_Dia
    Do While Not rs_Dia.EOF
        entrada_salida = IIf((rs_Dia!Codigo = 1 Or rs_Dia!Codigo = 2), 1, IIf((rs_Dia!Codigo = 3 Or rs_Dia!Codigo = 4), 2, 3))
        StrSql = "SELECT fecha_entrada fecha_desde,fecha_salida fecha_hasta,hora_entrada hora_desde, hora_salida hora_hasta FROM " & TTempWFDiaLaboral
        StrSql = StrSql & " WHERE entrada_salida = " & entrada_salida
        StrSql = StrSql & " ORDER BY fecha_desde, hora_desde ASC"
        OpenRecordset StrSql, rs_diaL
        If Not rs_diaL.EOF Then
            StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE entrada = " & CInt(True) & " AND "
            StrSql = StrSql & " (( fecha > " & ConvFecha(rs_diaL!fecha_desde) & " ) OR "
            StrSql = StrSql & "  ( fecha = " & ConvFecha(rs_diaL!fecha_desde) & " and hora >= '" & rs_diaL!hora_desde & "')) and "
            StrSql = StrSql & " (( fecha < " & ConvFecha(rs_diaL!fecha_hasta) & " ) OR "
            StrSql = StrSql & "  ( fecha = " & ConvFecha(rs_diaL!fecha_hasta) & " and hora <= '" & rs_diaL!hora_hasta & "'))"
            StrSql = StrSql & " AND evenro = 2 "
            StrSql = StrSql & " AND par = " & entrada_salida
            StrSql = StrSql & " ORDER BY fecha ASC, hora ASC"
            OpenRecordset StrSql, rs
            
            If Not rs.EOF Then
                Genera = False
                
                'Evaluo condicion 1
                If TH1 <> 0 Then
                    Call objFechasHoras.SumoHoras(rs_Dia!Fecha, rs_Dia!Hora, Tol1, Fecha_Tol, Hora_Tol)
                    ok = objFechasHoras.ValidarHora(Hora_Tol)
                    If (rs!Fecha = Fecha_Tol) And (rs!Hora > Hora_Tol) And (rs!Hora > rs_Dia!Hora) Then
                        THaGen = TH1
                        AnaGen = AN1
                        
                        Call objFechasHoras.RestaHs(rs_Dia!Fecha, rs_Dia!Hora, rs!Fecha, rs!Hora, Tdias, Thoras, Tmin)
                        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        If TotHor >= 0 Then
                            TotHor = 1
                            Genera = True
                        End If
                    End If
                End If
                
                'Evaluo condicion 2
                If TH2 <> 0 Then
                    Call objFechasHoras.SumoHoras(rs_Dia!Fecha, rs_Dia!Hora, Tol2, Fecha_Tol, Hora_Tol)
                    ok = objFechasHoras.ValidarHora(Hora_Tol)
                    If (rs!Fecha = Fecha_Tol) And (rs!Hora > Hora_Tol) And (rs!Hora > rs_Dia!Hora) Then
                        THaGen = TH2
                        AnaGen = AN2
                        
                        Call objFechasHoras.RestaHs(rs_Dia!Fecha, rs_Dia!Hora, rs!Fecha, rs!Hora, Tdias, Thoras, Tmin)
                        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        If TotHor >= 0 Then
                            TotHor = 1
                            Genera = True
                        End If
                    End If
                End If
                
                        
                'Evaluo condicion 3
                If TH3 <> 0 Then
                    Call objFechasHoras.SumoHoras(rs_Dia!Fecha, rs_Dia!Hora, Tol3, Fecha_Tol, Hora_Tol)
                    ok = objFechasHoras.ValidarHora(Hora_Tol)
                    If (rs!Fecha = Fecha_Tol) And (rs!Hora > Hora_Tol) And (rs!Hora > rs_Dia!Hora) Then
                        THaGen = TH3
                        AnaGen = AN3
                        
                        Call objFechasHoras.RestaHs(rs_Dia!Fecha, rs_Dia!Hora, rs!Fecha, rs!Hora, Tdias, Thoras, Tmin)
                        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        If TotHor >= 0 Then
                            TotHor = 1
                            Genera = True
                        End If
                    End If
                End If
                        
                If Genera Then
                
                    'Busco la configuracion del tipo de hora a generar
                    StrSql = "SELECT * FROM gti_config_tur_hor WHERE thnro = " & THaGen & _
                    " AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
                    OpenRecordset StrSql, rs_Conf
                    If Not rs_Conf.EOF Then
                        ConhRedTipo = rs_Conf!conhredondeo
                    Else
                        'If depurar Then GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora Llegada Tarde para el Turno:", Str(Nro_Turno)
                        ConhRedTipo = 0
                    End If
               
               
                    Call objFechasHoras.Convertir_A_Hora(TotHor * 60, Hora_a_Red)
                    Call objFechasHoras.Redondeo_Horas_Tipo(Hora_a_Red, ConhRedTipo, Horas_Tol)
                        
                    If Horas_Tol >= 0 Then
                        
                        StrSql = " UPDATE " & TTempWFTurno & " SET anornro = " & AnaGen & " WHERE regnro = " & rs!Regnro
                        StrSql = StrSql & " AND evenro = 2 "
                        objConn.Execute StrSql, , adExecuteNoRecords
                        
                        TotHorHHMM = CHoras(Horas_Tol, 60)
                        
                        StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                        "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
                        "normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Horas_Tol & "," & _
                        ConvFecha(Fecha_Tol) & "," & ConvFecha(Fecha_Tol) & "," & CInt(False) & "," & CInt(True) & "," & _
                        NroTer & "," & THaGen & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
                        ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",'" & rs_Dia!Hora & "','" & rs!Hora & "'," & AnaGen & "," & AnaGen & ",' ')"
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & THaGen & "- Cantidad: " & Horas_Tol & " hs."
                        End If
                    End If
                End If
            End If
        End If
        rs_Dia.MoveNext
    Loop

Case 2: 'Genera la fraccion de horas de anormalidad

    '1) Cuando la cantidad de minutos entre la ET y la Reg de entrada es menor o igual que TOL1
    '       ==> no se generará nada
    '2) Cuando la cantidad de minutos entre la ET y la reg de entrada es mayor a la TOL1 y menor o igual que TOL2
    '       ==> se generará el tipo de hora 1 por la cantidad de minutos de diferencia entre la ET y la reg de entrada
    '           y se generará la anormalidad 1 configurada (se puede dejar la anormalidad en blanco para no generar anormalidad).
    '3) Cuando la cantidad de minutos entre la ET y la registración de entrada es mayor a la TOL2
    '       ==> se generará el tipo de hora 2 por la cantidad de minutos de diferencia entre la ET y la reg de entrada
    '           y se generará la anormalidad 2 configurada (se puede dejar la anormalidad en blanco para no generar anormalidad).
    '4) Cuando la cantidad de minutos entre la ET y la registración de entrada es mayor a la TOL3
    '       ==> se generará el tipo de hora 3 por la cantidad de minutos de diferencia entre la ET y la reg de entrada
    '           y se generará la anormalidad 3 configurada (se puede dejar la anormalidad en blanco para no generar anormalidad).


    StrSql = "SELECT * FROM " & TTempWFDia & " WHERE entrada = " & CInt(True) & " ORDER BY codigo ASC"
    OpenRecordset StrSql, rs_Dia
    Do While Not rs_Dia.EOF
        entrada_salida = IIf((rs_Dia!Codigo = 1 Or rs_Dia!Codigo = 2), 1, IIf((rs_Dia!Codigo = 3 Or rs_Dia!Codigo = 4), 2, 3))
        StrSql = "SELECT fecha_entrada fecha_desde,fecha_salida fecha_hasta,hora_entrada hora_desde, hora_salida hora_hasta FROM " & TTempWFDiaLaboral
        StrSql = StrSql & " WHERE entrada_salida = " & entrada_salida
        StrSql = StrSql & " ORDER BY fecha_desde, hora_desde ASC"
        OpenRecordset StrSql, rs_diaL
        If Not rs_diaL.EOF Then
            StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE entrada = " & CInt(True) & " AND "
            StrSql = StrSql & " (( fecha > " & ConvFecha(rs_diaL!fecha_desde) & " ) OR "
            StrSql = StrSql & "  ( fecha = " & ConvFecha(rs_diaL!fecha_desde) & " and hora >= '" & rs_diaL!hora_desde & "')) and "
            StrSql = StrSql & " (( fecha < " & ConvFecha(rs_diaL!fecha_hasta) & " ) OR "
            StrSql = StrSql & "  ( fecha = " & ConvFecha(rs_diaL!fecha_hasta) & " and hora <= '" & rs_diaL!hora_hasta & "'))"
            StrSql = StrSql & " AND evenro = 2 "
            StrSql = StrSql & " AND par = " & entrada_salida
            StrSql = StrSql & " ORDER BY fecha ASC, hora ASC"
            OpenRecordset StrSql, rs
            
            If Not rs.EOF Then
                Genera = False
                
                'Evaluo condicion 1
                If TH1 <> 0 Then
                    Call objFechasHoras.SumoHoras(rs_Dia!Fecha, rs_Dia!Hora, Tol1, Fecha_Tol, Hora_Tol)
                    ok = objFechasHoras.ValidarHora(Hora_Tol)
                    If (rs!Fecha = Fecha_Tol) And (rs!Hora > Hora_Tol) And (rs!Hora > rs_Dia!Hora) Then
                        THaGen = TH1
                        AnaGen = AN1
                        
                        Call objFechasHoras.RestaHs(rs_Dia!Fecha, rs_Dia!Hora, rs!Fecha, rs!Hora, Tdias, Thoras, Tmin)
                        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        If TotHor >= 0 Then
                            Genera = True
                        End If
                    End If
                End If
                
                'Evaluo condicion 2
                If TH2 <> 0 Then
                    Call objFechasHoras.SumoHoras(rs_Dia!Fecha, rs_Dia!Hora, Tol2, Fecha_Tol, Hora_Tol)
                    ok = objFechasHoras.ValidarHora(Hora_Tol)
                    If (rs!Fecha = Fecha_Tol) And (rs!Hora > Hora_Tol) And (rs!Hora > rs_Dia!Hora) Then
                        THaGen = TH2
                        AnaGen = AN2
                        
                        Call objFechasHoras.RestaHs(rs_Dia!Fecha, rs_Dia!Hora, rs!Fecha, rs!Hora, Tdias, Thoras, Tmin)
                        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        If TotHor >= 0 Then
                            Genera = True
                        End If
                    End If
                End If
                
                        
                'Evaluo condicion 3
                If TH3 <> 0 Then
                    Call objFechasHoras.SumoHoras(rs_Dia!Fecha, rs_Dia!Hora, Tol3, Fecha_Tol, Hora_Tol)
                    ok = objFechasHoras.ValidarHora(Hora_Tol)
                    If (rs!Fecha = Fecha_Tol) And (rs!Hora > Hora_Tol) And (rs!Hora > rs_Dia!Hora) Then
                        THaGen = TH3
                        AnaGen = AN3
                        
                        Call objFechasHoras.RestaHs(rs_Dia!Fecha, rs_Dia!Hora, rs!Fecha, rs!Hora, Tdias, Thoras, Tmin)
                        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        If TotHor >= 0 Then
                            Genera = True
                        End If
                    End If
                End If
                        
                If Genera Then
                
                    'Busco la configuracion del tipo de hora a generar
                    StrSql = "SELECT * FROM gti_config_tur_hor WHERE thnro = " & THaGen & _
                    " AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
                    OpenRecordset StrSql, rs_Conf
                    If Not rs_Conf.EOF Then
                        ConhRedTipo = rs_Conf!conhredondeo
                    Else
                        'If depurar Then GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora Llegada Tarde para el Turno:", Str(Nro_Turno)
                        ConhRedTipo = 0
                    End If
               
               
                    Call objFechasHoras.Convertir_A_Hora(TotHor * 60, Hora_a_Red)
                    Call objFechasHoras.Redondeo_Horas_Tipo(Hora_a_Red, ConhRedTipo, Horas_Tol)
                        
                    If Horas_Tol >= 0 Then
                        
                        StrSql = " UPDATE " & TTempWFTurno & " SET anornro = " & AnaGen & " WHERE regnro = " & rs!Regnro
                        StrSql = StrSql & " AND evenro = 2 "
                        objConn.Execute StrSql, , adExecuteNoRecords
                        
                        TotHorHHMM = CHoras(Horas_Tol, 60)
                        
                        StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                        "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
                        "normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Horas_Tol & "," & _
                        ConvFecha(Fecha_Tol) & "," & ConvFecha(Fecha_Tol) & "," & CInt(False) & "," & CInt(True) & "," & _
                        NroTer & "," & THaGen & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
                        ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",'" & rs_Dia!Hora & "','" & rs!Hora & "'," & AnaGen & "," & AnaGen & ",' ')"
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & THaGen & "- Cantidad: " & Horas_Tol & " hs."
                        End If
                    End If
                End If
            End If
        End If
        rs_Dia.MoveNext
    Loop


Case Else:  'Version inexistente
    If depurar Then
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Version inexistente. " & Opcion
    End If
End Select




'Cierro todo y libero
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
End Sub






Public Sub Politica220(NroTer As Long, Nro_Turno As Long, p_fecha As Date, tol As String, acumula As Boolean, deb As Boolean, toldto As String, acumula_dto As Boolean, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Politica que indica si el proceso debe realizar la cuenta de las horas o no.
'               TRUE  - Realiza la Cuenta y el Pago en Cuestion
'               FALSE - Paga segun la forma de pago
' Autor: FGZ - 03/04/2006
' Ultima modificacion: 06/12/2006 - Se la rehizo
' Ultima modificacion: 19/12/2006 - FGZ - Se le agregó los tipos de hora para francos y feriados
' Ultima modificacion: 21/12/2006 - FGZ -
' Ultima modificacion: 08/03/2007 - FGZ - los Codigos de registracion q se generan deben ser los codigos de las reg del segundo dia
'                                         y no los codigos del 1er dia como estaban antes
' Ultima modificacion: 18/04/2007 - FGZ - le agregué el control por EOF
' --------------------------------------------------------------
Dim rs As New Recordset
Dim rs_HC2 As New ADODB.Recordset
Dim rs_HC1 As New ADODB.Recordset
Dim rs_gti_Proc_Emp As New ADODB.Recordset

Dim ok          As Boolean
Dim Opcion      As Integer
Dim Aux_HoraDesde As String
Dim Aux_HoraHasta As String
Dim Aux_FechaDesde As Date
Dim Aux_FechaHasta As Date

Dim CantMin     As Integer
Dim Tdias       As Integer
Dim Thoras      As Integer
Dim Tmin        As Integer
Dim Horas12   As Integer
Dim SinDescanzo As Boolean

Dim Ultima_Salida As String
Dim Fecha_Ultima_Salida As Date
Dim Ultima_Entrada As String
Dim Fecha_Ultima_Entrada As Date
Dim Anterior_salida As String
Dim Fecha_Anterior_salida As Date
Dim Aux_CantMin     As Integer

Dim HUltima_Entrada_Ayer As String
Dim FUltima_Entrada_Ayer As Date
Dim PET As String
Dim UET As String

'Dim DesdeT As String
'Dim Fecha_DesdeT As Date
'Dim HastaT As String
'Dim Fecha_HastaT As Date
Dim HN(1 To 10) As T_HN
Dim i As Integer
Dim j As Integer

Dim Primera As Boolean


Dim HCDesde As String
Dim HCHasta As String
Dim TotHor As Single
Dim NroTh As Long
Dim Laborable As Boolean
Dim Total_Generado As Single

Dim StrSql2 As String

Dim Aux_CodRegEnt As Long
Dim Aux_CodRegSal As Long

'Inicializo
Horas12 = 720

If depurar Then
    Flog.writeline Espacios(Tabulador * 4) & "Inicio Pol 220... " & Now
End If

Call SetearParametrosPolitica(Detalle, ok)
If Not ok Then
    Exit Sub
End If
Opcion = st_Opcion

Select Case Opcion
Case 1: 'Version 1. Halliburton
    If depurar Then
        Flog.writeline Espacios(Tabulador * 5) & "Version 1. Halliburton"
    End If
    
    StrSql = "SELECT * FROM gti_registracion "
    StrSql = StrSql & " WHERE ternro= " & NroTer
    StrSql = StrSql & " AND gti_registracion.regfecha = " & ConvFecha(p_fecha)
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC "
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 6) & "Registracion Hora: " & rs!reghora
        End If
        If rs!reghora = "0000" Or rs!reghora = "0001" Then
            StrSql = "SELECT * FROM gti_registracion "
            StrSql = StrSql & " WHERE ternro= " & NroTer
            StrSql = StrSql & " AND ((gti_registracion.regfecha = " & ConvFecha(rs!regfecha)
            StrSql = StrSql & " AND gti_registracion.reghora < " & rs!reghora & ")"
            StrSql = StrSql & " OR (gti_registracion.regfecha = " & ConvFecha(C_Date(rs!regfecha - 1)) & " AND gti_registracion.regfecha < " & ConvFecha(rs!regfecha) & "))"
            StrSql = StrSql & " AND regentsal = 'E'"
            'FGZ - 19/05/2010 ------------ Control FT -------------
            StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
            'FGZ - 19/05/2010 ------------ Control FT -------------
            StrSql = StrSql & " ORDER BY regfecha desc, reghora desc "
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                If rs!reghora <= "1800" Then
                    SinDescanzo = True
                Else
'                    If depurar Then
'                        Flog.writeline Espacios(Tabulador * 6) & "Registracion > 1800. SinDescanzo = False"
'                    End If
                    SinDescanzo = True
                End If
            Else
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 6) & "no se encontró registracion anterior a las 0000."
                End If
                SinDescanzo = False
            End If
        Else
            Aux_HoraHasta = rs!reghora
            Aux_FechaHasta = rs!regfecha
        
            StrSql = "SELECT * FROM gti_registracion "
            StrSql = StrSql & " WHERE ternro= " & NroTer
            StrSql = StrSql & " AND ((gti_registracion.regfecha = " & ConvFecha(rs!regfecha)
            StrSql = StrSql & " AND gti_registracion.reghora < " & rs!reghora & ") "
            StrSql = StrSql & " OR (gti_registracion.regfecha = " & ConvFecha(C_Date(rs!regfecha - 1)) & " AND gti_registracion.regfecha < " & ConvFecha(rs!regfecha) & "))"
            'FGZ - 19/05/2010 ------------ Control FT -------------
            StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
            'FGZ - 19/05/2010 ------------ Control FT -------------
            StrSql = StrSql & " ORDER BY regfecha desc, reghora desc "
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                Aux_HoraDesde = rs!reghora
                Aux_FechaDesde = rs!regfecha
        
                Call objFechasHoras.RestaHs(Aux_FechaDesde, Aux_HoraDesde, Aux_FechaHasta, Aux_HoraHasta, Tdias, Thoras, Tmin)
                CantMin = Tdias * 1440 + Thoras * 60 + Tmin
                If CantMin < Horas12 Then
                    SinDescanzo = True
                Else
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 6) & "Cantidad de minutos entre registraciones < a 12 horas. SinDescanzo = False"
                    End If
                End If
            Else
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 6) & "No hay regsitracion anterior. SinDescanzo = False"
                End If
                SinDescanzo = False
            End If
        End If
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 6) & "No hay registraciones. SinDescanzo = False"
        End If
    End If
    
    If SinDescanzo Then
        'Reviso si en el dia hay + de 12 hs de descanzo entre cada par de registraciones
        StrSql = "SELECT * FROM gti_registracion "
        StrSql = StrSql & " WHERE ternro= " & NroTer
        StrSql = StrSql & " AND gti_registracion.regfecha = " & ConvFecha(p_fecha)
        'FGZ - 19/05/2010 ------------ Control FT -------------
        StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
        'FGZ - 19/05/2010 ------------ Control FT -------------
        StrSql = StrSql & " ORDER BY ternro ASC, regfecha desc, reghora desc "
        OpenRecordset StrSql, rs
        Primera = True
        SinDescanzo = False
        Do While Not rs.EOF And Not SinDescanzo
            If Primera Then
                'FGZ - 08/03/2007 ------------
                Aux_CodRegEnt = rs!Regnro
                Aux_CodRegSal = rs!Regnro
                'FGZ - 08/03/2007 ------------
                
                Primera = False
                Ultima_Salida = rs!reghora
                Fecha_Ultima_Salida = rs!regfecha
                rs.MoveNext
                If Not rs.EOF Then
                    Ultima_Entrada = rs!reghora
                    Fecha_Ultima_Entrada = rs!regfecha
                Else
                    Fecha_Ultima_Entrada = p_fecha
                    Ultima_Entrada = "0000"
                End If
                Anterior_salida = "0000"
                Fecha_Anterior_salida = p_fecha
                Call objFechasHoras.RestaHs(Fecha_Anterior_salida, Anterior_salida, Fecha_Ultima_Entrada, Ultima_Entrada, Tdias, Thoras, Tmin)
                Aux_CantMin = Tdias * 1440 + Thoras * 60 + Tmin
                If Aux_CantMin < Horas12 Then
                    SinDescanzo = True
                Else
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 6) & "Cantidad de minutos entre registraciones < a 12 horas. SinDescanzo = False"
                    End If
                End If
'                'Busco la salida enterior y reviso que la cantidad de horas no sea >= 12
'                rs.MoveNext
            
            Else
                If Not rs.EOF Then
                    'FGZ - 08/03/2007 ------------
                    Aux_CodRegEnt = rs!Regnro
                    'FGZ - 08/03/2007 ------------
                
                    Anterior_salida = rs!reghora
                    Fecha_Anterior_salida = rs!regfecha
                Else
                    Anterior_salida = "0000"
                    Fecha_Anterior_salida = p_fecha
                End If
                Call objFechasHoras.RestaHs(Fecha_Anterior_salida, Anterior_salida, Fecha_Ultima_Entrada, Ultima_Entrada, Tdias, Thoras, Tmin)
                Aux_CantMin = Tdias * 1440 + Thoras * 60 + Tmin
                If Aux_CantMin < Horas12 Then
                    SinDescanzo = True
                Else
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 6) & "Cantidad de minutos entre registraciones < a 12 horas. SinDescanzo = False"
                    End If
                End If
            End If
            rs.MoveNext
        Loop
    End If
    
    If SinDescanzo Then

        'FGZ - 18/12/2006
        'Reviso si el dia anterior fué Franco, Feriado o Laborable
        StrSql = "SELECT * FROM gti_proc_emp WHERE ternro =" & NroTer
        StrSql = StrSql & " AND fecha = " & ConvFecha(p_fecha - 1)
        OpenRecordset StrSql, rs_gti_Proc_Emp
        If Not rs_gti_Proc_Emp.EOF Then
            If Not CBool(rs_gti_Proc_Emp!Dialibre) Then
                Laborable = True
            Else
                Laborable = False
            End If
        Else
            Laborable = True
        End If
            
        NroTh = 1008
        If Laborable Then
            i = 1
            HN(i).DesdeT = "0000"
            HN(i).Fecha_DesdeT = p_fecha
            HN(i).HastaT = Ultima_Salida
            HN(i).Fecha_HastaT = Fecha_Ultima_Salida
            
            'Todas las Hs Normales echas entre DesdeT y HastaT de este dia que crucen con las hs normales del dia anterior se pagan como HN100%
            ' Ejemplo
            ' D1  ----[----]--[----]----
            ' D2  (-------------)-------
            '   DesdeT       HastaT
        Else
            'busco todas las horas normales generadas en el dia
            
            'Todas las Hs Normales echas entre DesdeT y HastaT de este dia que crucen con las del dia anterior se pagan como HN100%
            ' Ejemplo
            '   DesdeT       HastaT
            ' D1  -(-----------------)---
            ' D2  ----[----]--[----]----
            
            StrSql = "SELECT * FROM gti_horcumplido "
            StrSql = StrSql & " WHERE ternro =" & Empleado.Ternro
            StrSql = StrSql & " AND (thnro = 3 "
            StrSql = StrSql & " OR thnro = 1004 "
            StrSql = StrSql & " OR thnro = 1005 "
            StrSql = StrSql & " OR thnro = 1006 "
            StrSql = StrSql & " OR thnro = 1035) "
            StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
            StrSql = StrSql & " ORDER BY thnro "
            OpenRecordset StrSql, rs_HC1
            i = 0
            Do While Not rs_HC1.EOF
                i = i + 1
                HN(i).DesdeT = rs_HC1!horhoradesde
                HN(i).Fecha_DesdeT = rs_HC1!hordesde
                HN(i).HastaT = rs_HC1!horhorahasta
                HN(i).Fecha_HastaT = rs_HC1!horhasta
                
                rs_HC1.MoveNext
            Loop
        End If
            
        'Busco las normales de ayer y las comparo con las de hoy
        StrSql = "SELECT * FROM gti_horcumplido "
        StrSql = StrSql & " WHERE ternro =" & Empleado.Ternro
        If Laborable Then
            StrSql = StrSql & " AND (thnro = 3 "
            StrSql = StrSql & " OR thnro = 1004 "
            StrSql = StrSql & " OR thnro = 1005 "
            StrSql = StrSql & " OR thnro = 1006 "
            StrSql = StrSql & " OR thnro = 1035) "
        Else
            'Feriados
            StrSql = StrSql & " AND (thnro = 35 "
            StrSql = StrSql & " OR thnro = 59 "
            StrSql = StrSql & " OR thnro = 60 "
            StrSql = StrSql & " OR thnro = 61 "
            StrSql = StrSql & " OR thnro = 1043 "
'            'Francos
'            StrSql = StrSql & " OR thnro = 1014 "
'            StrSql = StrSql & " OR thnro = 1017 "
'            StrSql = StrSql & " OR thnro = 1018 "
'            StrSql = StrSql & " OR thnro = 1019 "
'            StrSql = StrSql & " OR thnro = 1037 "
            'H130
            StrSql = StrSql & " OR thnro = 41 "
            StrSql = StrSql & " OR thnro = 55 "
            StrSql = StrSql & " OR thnro = 56 "
            StrSql = StrSql & " OR thnro = 57 "
            StrSql = StrSql & " OR thnro = 1042 "
            'H100
            StrSql = StrSql & " OR thnro = 2 "
            StrSql = StrSql & " OR thnro = 40 "
            StrSql = StrSql & " OR thnro = 51 "
            StrSql = StrSql & " OR thnro = 52 "
            StrSql = StrSql & " OR thnro = 53 "
            StrSql = StrSql & " OR thnro = 1041) "
        End If
        
        
        'FGZ - 22/01/2006 - Busco la ultima entrada dentro del HT del dia anterior
        If Not EsNulo(S1) Then
            HUltima_Entrada_Ayer = S1
            FUltima_Entrada_Ayer = FS1
            PET = E1
            UET = E1
        End If
        If Not EsNulo(S2) Then
            HUltima_Entrada_Ayer = S2
            FUltima_Entrada_Ayer = FS2
            UET = E2
        End If
        If Not EsNulo(S3) Then
            HUltima_Entrada_Ayer = S3
            FUltima_Entrada_Ayer = FS3
            UET = E3
        End If
        
        'FGZ - 22/01/2007 - Busco la ultima registracion de entrada del dia anterior dentro del HT de hoy
        StrSql2 = "SELECT * FROM gti_registracion "
        StrSql2 = StrSql2 & " WHERE ternro= " & NroTer
        StrSql2 = StrSql2 & " AND gti_registracion.regfecha = " & ConvFecha(FUltima_Entrada_Ayer - 1)
        StrSql2 = StrSql2 & " AND reghora <= '" & HUltima_Entrada_Ayer & "'"
        StrSql2 = StrSql2 & " AND regentsal = 'E'"
        'FGZ - 19/05/2010 ------------ Control FT -------------
        StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
        'FGZ - 19/05/2010 ------------ Control FT -------------
        StrSql2 = StrSql2 & " ORDER BY ternro ASC, regfecha desc, reghora desc "
        OpenRecordset StrSql2, rs
        If rs.EOF Then
            HUltima_Entrada_Ayer = "0000"
        Else
            HUltima_Entrada_Ayer = rs!reghora
        End If
        If HUltima_Entrada_Ayer <= PET Then
            HUltima_Entrada_Ayer = PET
        End If
        
        
        
        StrSql = StrSql & " AND  horfecrep = " & ConvFecha(p_fecha - 1)
        'FGZ - 19/01/2007 - Busco las que fueron generadas a partir de la ultima entrada dentro del HT
        If Laborable Then
            StrSql = StrSql & " AND  ((horhoradesde >= '" & HUltima_Entrada_Ayer & "'"
        Else
            StrSql = StrSql & " AND  ((horhoradesde <= '" & HUltima_Entrada_Ayer & "'"
        End If
        StrSql = StrSql & " AND   hordesde = " & ConvFecha(FUltima_Entrada_Ayer - 1) & ")"
        StrSql = StrSql & " OR (horhoradesde  is null)) "
        StrSql = StrSql & " ORDER BY hordesde , horhoradesde, thnro "
        OpenRecordset StrSql, rs_HC1
        
        If Laborable Then
            'FGZ - 19/01/2007 - le saqué esta parte
'            'Solo se cuenta a partir de la ultima franja normal
            'If Not rs_HC1.EOF Then
            '    rs_HC1.MoveLast
            'End If
            'FGZ - 19/01/2007 - le saqué esta parte
            Do While Not rs_HC1.EOF
                TotHor = 0
                
                'D1          [---------------]
                'D2               (----------------)
                If objFechasHoras.Menor_Hora(p_fecha, rs_HC1!horhoradesde, p_fecha, HN(i).DesdeT) And objFechasHoras.Menor_Hora(p_fecha, rs_HC1!horhoradesde, p_fecha, HN(i).HastaT) And objFechasHoras.Menor_Igual_Hora(p_fecha, HN(i).HastaT, p_fecha, rs_HC1!horhorahasta) Then
                    objFechasHoras.RestaHs p_fecha, HN(i).DesdeT, p_fecha, rs_HC1!horhorahasta, Tdias, Thoras, Tmin
                    HCDesde = HN(i).DesdeT
                    HCHasta = rs_HC1!horhorahasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                End If
    
                'D1             [---------------]
                'D2         (----------------)
                If objFechasHoras.Mayor_Igual_Hora(p_fecha, rs_HC1!horhoradesde, p_fecha, HN(i).DesdeT) And objFechasHoras.Menor_Hora(p_fecha, HN(i).DesdeT, p_fecha, rs_HC1!horhorahasta) And objFechasHoras.Mayor_Hora(p_fecha, rs_HC1!horhorahasta, p_fecha, HN(i).HastaT) And objFechasHoras.Menor_Hora(p_fecha, rs_HC1!horhoradesde, p_fecha, HN(i).HastaT) Then
                    objFechasHoras.RestaHs p_fecha, rs_HC1!horhoradesde, p_fecha, HN(i).HastaT, Tdias, Thoras, Tmin
                    HCDesde = rs_HC1!horhoradesde
                    HCHasta = HN(i).HastaT
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                End If
                
                'D1             [---------------]
                'D2         (-----------------------)
                If objFechasHoras.Mayor_Igual_Hora(p_fecha, rs_HC1!horhoradesde, p_fecha, HN(i).DesdeT) And objFechasHoras.Mayor_Igual_Hora(p_fecha, HN(i).HastaT, p_fecha, rs_HC1!horhorahasta) And objFechasHoras.Menor_Igual_Hora(p_fecha, rs_HC1!horhorahasta, p_fecha, HN(i).HastaT) And objFechasHoras.Mayor_Hora(p_fecha, HN(i).HastaT, p_fecha, rs_HC1!horhoradesde) Then
                    objFechasHoras.RestaHs p_fecha, rs_HC1!horhoradesde, p_fecha, rs_HC1!horhorahasta, Tdias, Thoras, Tmin
                    HCDesde = rs_HC1!horhoradesde
                    HCHasta = rs_HC1!horhorahasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                End If
    
                'D1         [---------------]
                'D2             (--------)
                If objFechasHoras.Menor_Hora(p_fecha, rs_HC1!horhoradesde, p_fecha, HN(i).DesdeT) And objFechasHoras.Mayor_Hora(p_fecha, rs_HC1!horhorahasta, p_fecha, HN(i).HastaT) Then
                    objFechasHoras.RestaHs p_fecha, HN(i).DesdeT, p_fecha, HN(i).HastaT, Tdias, Thoras, Tmin
                    HCDesde = HN(i).DesdeT
                    HCHasta = HN(i).HastaT
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                End If
            
                            
                If (TotHor <> 0) Then
                    StrSql = "INSERT INTO gti_horcumplido "
                    StrSql = StrSql & "(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                    StrSql = StrSql & "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                    StrSql = StrSql & "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                    StrSql = StrSql & TotHor & ","
                    StrSql = StrSql & ConvFecha(p_fecha) & ","
                    StrSql = StrSql & "' ',"
                    StrSql = StrSql & ConvFecha(p_fecha) & ","
                    StrSql = StrSql & "'" & HCDesde & "',"
                    StrSql = StrSql & "'" & HCHasta & "',"
                    StrSql = StrSql & CInt(False) & ","
                    StrSql = StrSql & CInt(True) & ","
                    StrSql = StrSql & ValorNulo & ","
                    StrSql = StrSql & ValorNulo & ","
                    StrSql = StrSql & ValorNulo & ","
                    StrSql = StrSql & ValorNulo & ","
                    StrSql = StrSql & Empleado.Ternro & ","
                    StrSql = StrSql & NroTh & ","
                    StrSql = StrSql & rs_HC1!turnro & ","
                    'FGZ - 08/03/2007 ------------
                    'cambié
                    'StrSql = StrSql & rs_HC1!regent & ","
                    'x
                    StrSql = StrSql & Aux_CodRegEnt & ","
                    'FGZ - 08/03/2007 ------------
                    StrSql = StrSql & "'" & rs_HC1!horrealent & "',"
                    'FGZ - 08/03/2007 ------------
                    'cambié
                    'StrSql = StrSql & rs_HC1!regsal & ","
                    'x
                    StrSql = StrSql & Aux_CodRegSal & ","
                    'FGZ - 08/03/2007 ------------
                    StrSql = StrSql & "'" & rs_HC1!horrealsal & "',"
                    StrSql = StrSql & rs_HC1!empleg & ","
                    StrSql = StrSql & ConvFecha(p_fecha) & ","
                    StrSql = StrSql & ConvFecha(p_fecha)
                    StrSql = StrSql & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & NroTh & "- Cantidad: " & TotHor & " hs."
                    End If
                Else
                    If depurar Then
                        'Flog.writeline Espacios(Tabulador * 3) & "  ==> "
                    End If
                End If
            
                rs_HC1.MoveNext
            Loop
        Else
            'Solo se cuenta a partir de la ultima franja
            If Not rs_HC1.EOF Then
                rs_HC1.MoveLast
            End If
        
            For j = 1 To i
                Do While Not rs_HC1.EOF
                    TotHor = 0
                    
'                    'D1          [---------------]
'                    'D2               (----------------)
'                    If objFechasHoras.Menor_Hora(p_fecha, rs_HC1!horhoradesde, p_fecha, HN(I).DesdeT) And objFechasHoras.Menor_Hora(p_fecha, rs_HC1!horhoradesde, p_fecha, HN(I).HastaT) And objFechasHoras.Menor_Igual_Hora(p_fecha, HN(I).HastaT, p_fecha, rs_HC1!horhorahasta) Then
'                        objFechasHoras.RestaHs p_fecha, HN(I).DesdeT, p_fecha, rs_HC1!horhorahasta, tdias, thoras, tmin
'                        hcdesde = HN(I).DesdeT
'                        hchasta = rs_HC1!horhorahasta
'                        TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    End If
'
'                    'D1             [---------------]
'                    'D2         (----------------)
'                    If objFechasHoras.Mayor_Igual_Hora(p_fecha, rs_HC1!horhoradesde, p_fecha, HN(I).DesdeT) And objFechasHoras.Menor_Hora(p_fecha, HN(I).DesdeT, p_fecha, rs_HC1!horhorahasta) And objFechasHoras.Mayor_Hora(p_fecha, rs_HC1!horhorahasta, p_fecha, HN(I).HastaT) Then
'                        objFechasHoras.RestaHs p_fecha, rs_HC1!horhoradesde, p_fecha, HN(I).HastaT, tdias, thoras, tmin
'                        hcdesde = rs_HC1!horhoradesde
'                        hchasta = HN(I).HastaT
'                        TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    End If
'
'                    'D1             [---------------]
'                    'D2         (-----------------------)
'                    If objFechasHoras.Mayor_Igual_Hora(p_fecha, rs_HC1!horhoradesde, p_fecha, HN(I).DesdeT) And objFechasHoras.Mayor_Igual_Hora(p_fecha, HN(I).HastaT, p_fecha, rs_HC1!horhorahasta) And objFechasHoras.Menor_Igual_Hora(p_fecha, rs_HC1!horhorahasta, p_fecha, HN(I).HastaT) And objFechasHoras.Mayor_Hora(p_fecha, HN(I).HastaT, p_fecha, rs_HC1!horhoradesde) Then
'                        objFechasHoras.RestaHs p_fecha, rs_HC1!horhoradesde, p_fecha, rs_HC1!horhorahasta, tdias, thoras, tmin
'                        hcdesde = rs_HC1!horhoradesde
'                        hchasta = rs_HC1!horhorahasta
'                        TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    End If
'
'                    'D1         [---------------]
'                    'D2             (--------)
'                    If objFechasHoras.Menor_Hora(p_fecha, rs_HC1!horhoradesde, p_fecha, HN(I).DesdeT) And objFechasHoras.Mayor_Hora(p_fecha, rs_HC1!horhorahasta, p_fecha, HN(I).HastaT) Then
'                        objFechasHoras.RestaHs p_fecha, HN(I).DesdeT, p_fecha, HN(I).HastaT, tdias, thoras, tmin
'                        hcdesde = HN(I).DesdeT
'                        hchasta = HN(I).HastaT
'                        TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    End If
                
                                
                                
                    'Desgloce   [---------------]
                    'Horario          (----------------)
                    If objFechasHoras.Menor_Hora(p_fecha, rs_HC1!horhoradesde, p_fecha, HN(j).DesdeT) And objFechasHoras.Menor_Hora(p_fecha, HN(j).DesdeT, p_fecha, rs_HC1!horhorahasta) And objFechasHoras.Menor_Igual_Hora(p_fecha, rs_HC1!horhorahasta, p_fecha, HN(j).HastaT) Then
                        objFechasHoras.RestaHs p_fecha, HN(j).DesdeT, p_fecha, rs_HC1!horhorahasta, Tdias, Thoras, Tmin
                        HCDesde = HN(j).DesdeT
                        HCHasta = rs_HC1!horhorahasta
                        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    End If
    
                    'Desgloce       [---------------]
                    'Horario    (----------------)
                    If objFechasHoras.Mayor_Igual_Hora(p_fecha, rs_HC1!horhoradesde, p_fecha, HN(j).DesdeT) And objFechasHoras.Menor_Hora(p_fecha, rs_HC1!horhoradesde, p_fecha, HN(j).HastaT) And objFechasHoras.Mayor_Hora(p_fecha, rs_HC1!horhorahasta, p_fecha, HN(j).HastaT) Then
                        objFechasHoras.RestaHs p_fecha, rs_HC1!horhoradesde, p_fecha, HN(j).HastaT, Tdias, Thoras, Tmin
                        HCDesde = rs_HC1!horhoradesde
                        HCHasta = HN(j).HastaT
                        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    End If
    
                    'Desgloce       [---------------]
                    'Horario    (-----------------------)
                    If objFechasHoras.Mayor_Igual_Hora(p_fecha, rs_HC1!horhoradesde, p_fecha, HN(j).DesdeT) And objFechasHoras.Menor_Hora(p_fecha, rs_HC1!horhoradesde, p_fecha, HN(j).HastaT) And objFechasHoras.Menor_Igual_Hora(p_fecha, rs_HC1!horhorahasta, p_fecha, HN(j).HastaT) And objFechasHoras.Mayor_Hora(p_fecha, rs_HC1!horhorahasta, p_fecha, HN(j).DesdeT) Then
                        objFechasHoras.RestaHs p_fecha, rs_HC1!horhoradesde, p_fecha, rs_HC1!horhorahasta, Tdias, Thoras, Tmin
                        HCDesde = rs_HC1!horhoradesde
                        HCHasta = rs_HC1!horhorahasta
                        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    End If
    
                    'Desgloce   [---------------]
                    'Horario        (--------)
                    If objFechasHoras.Menor_Hora(p_fecha, rs_HC1!horhoradesde, p_fecha, HN(j).DesdeT) And objFechasHoras.Mayor_Hora(p_fecha, rs_HC1!horhorahasta, p_fecha, HN(j).HastaT) Then
                        objFechasHoras.RestaHs p_fecha, HN(j).DesdeT, p_fecha, HN(j).HastaT, Tdias, Thoras, Tmin
                        HCDesde = HN(j).DesdeT
                        HCHasta = HN(j).HastaT
                        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    End If
                                
                    If (TotHor <> 0) Then
                        StrSql = "INSERT INTO gti_horcumplido "
                        StrSql = StrSql & "(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                        StrSql = StrSql & "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                        StrSql = StrSql & "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                        StrSql = StrSql & TotHor & ","
                        StrSql = StrSql & ConvFecha(p_fecha) & ","
                        StrSql = StrSql & "' ',"
                        StrSql = StrSql & ConvFecha(p_fecha) & ","
                        StrSql = StrSql & "'" & HCDesde & "',"
                        StrSql = StrSql & "'" & HCHasta & "',"
                        StrSql = StrSql & CInt(False) & ","
                        StrSql = StrSql & CInt(True) & ","
                        StrSql = StrSql & ValorNulo & ","
                        StrSql = StrSql & ValorNulo & ","
                        StrSql = StrSql & ValorNulo & ","
                        StrSql = StrSql & ValorNulo & ","
                        StrSql = StrSql & Empleado.Ternro & ","
                        StrSql = StrSql & NroTh & ","
                        StrSql = StrSql & rs_HC1!turnro & ","
                        'FGZ - 08/03/2007 ------------
                        'cambié
                        'StrSql = StrSql & rs_HC1!regent & ","
                        'x
                        StrSql = StrSql & Aux_CodRegEnt & ","
                        'FGZ - 08/03/2007 ------------
                        StrSql = StrSql & "'" & rs_HC1!horrealent & "',"
                        'FGZ - 08/03/2007 ------------
                        'cambié
                        'StrSql = StrSql & rs_HC1!regsal & ","
                        'x
                        StrSql = StrSql & Aux_CodRegSal & ","
                        'FGZ - 08/03/2007 ------------
                        StrSql = StrSql & "'" & rs_HC1!horrealsal & "',"
                        StrSql = StrSql & rs_HC1!empleg & ","
                        StrSql = StrSql & ConvFecha(p_fecha) & ","
                        StrSql = StrSql & ConvFecha(p_fecha)
                        StrSql = StrSql & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & NroTh & "- Cantidad: " & TotHor & " hs."
                        End If
                    Else
                        If depurar Then
                            'Flog.writeline Espacios(Tabulador * 3) & "  ==> "
                        End If
                    End If
                
                    rs_HC1.MoveNext
                Loop
                'FGZ - 18/04/2007 - le agregué el control por EOF
                If Not rs_HC1.EOF Then
                    rs_HC1.MoveFirst
                End If
                'FGZ - 18/04/2007 - le agregué el control por EOF
            Next j
        End If
    End If
        
        
Case Else
    If depurar Then
        Flog.writeline Espacios(Tabulador * 6) & "Version " & Opcion & " desconocida."
    End If
End Select

If depurar Then
    Flog.writeline Espacios(Tabulador * 4) & "Fin Pol 221. " & Now
End If

'Cierro todo
If rs.State = adStateOpen Then rs.Close
Set rs = Nothing
If rs_HC1.State = adStateOpen Then rs_HC1.Close
Set rs_HC1 = Nothing
If rs_HC2.State = adStateOpen Then rs_HC2.Close
Set rs_HC2 = Nothing
If rs_gti_Proc_Emp.State = adStateOpen Then rs_gti_Proc_Emp.Close
Set rs_gti_Proc_Emp = Nothing

End Sub


Private Function HayOtraRegEntreHoras(ByVal Fecha As Date, ByVal Hora1 As String, ByVal Hora2 As String) As Boolean

Dim rs As New ADODB.Recordset

    StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE entrada = " & CInt(True) & " AND " & _
    "  fecha = " & ConvFecha(Fecha) & " AND hora > '" & Hora1 & "' AND " & _
    "  hora < '" & Hora2 & "'" & _
    " ORDER BY fecha ASC, hora ASC"

    rs.Open StrSql, objConn
    
    If Not rs.EOF Then
        HayOtraRegEntreHoras = True
    Else
        HayOtraRegEntreHoras = False
    End If
End Function

Private Function HayOtraRegEntreHorasDH(ByVal FechaD As Date, ByVal Hora1 As String, ByVal FechaH As Date, ByVal Hora2 As String) As Boolean
' --------------------------------------------------------------
' Descripcion: Busca si hay otra registracion entre 2 pares de fechas-horas.
' Autor: FGZ - 10/05/2013
' Ultima modificacion:
' --------------------------------------------------------------
Dim rs As New ADODB.Recordset

    StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE entrada = " & CInt(True)
    StrSql = StrSql & " AND ( (fecha = " & ConvFecha(FechaD) & " AND hora > '" & Hora1 & "')"
    StrSql = StrSql & " OR (fecha > " & ConvFecha(FechaD) & " AND hora < '" & Hora2 & "'))"
    StrSql = StrSql & " ORDER BY fecha ASC, hora ASC "
    rs.Open StrSql, objConn
    If Not rs.EOF Then
        HayOtraRegEntreHorasDH = True
    Else
        HayOtraRegEntreHorasDH = False
    End If
    
End Function


Public Sub Politica200_old(NroTer As Long, Nro_Turno As Long, p_fecha As Date, tol As String, acumula As Boolean, deb As Boolean, toldto As String, acumula_dto As Boolean, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Generacion de las salidas temprano.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' --------------------------------------------------------------

Dim rs_Dia As New ADODB.Recordset
Dim rs As New ADODB.Recordset

Dim TH_tol As Integer
Dim Horas_Acum As Integer
Dim hora_red   As String
Dim Hora_a_Red As String
Dim tothoras   As Single
Dim Tdias      As Integer
Dim Thoras     As Integer
Dim Tmin       As Integer
Dim Horas_Tol As Single
Dim Fecha_Tol As Date
Dim Hora_Tol  As String
Dim ok As Boolean
Dim ConhRedTipo As Integer
Dim i As Integer

Dim fecres As Date
Dim horres As String

Dim fecha_toldto As Date
Dim hora_toldto As String


StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 5 " & _
" AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
rs.Open StrSql, objConn

If Not rs.EOF Then
    TH_tol = rs!thnro
    ConhRedTipo = rs!conhredondeo
Else
    If depurar Then GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora Llegada Tarde para el Turno:", Str(Nro_Turno)
    rs.Close
    Set rs = Nothing
    Exit Sub
End If

StrSql = "SELECT * FROM " & TTempWFDia & " WHERE entrada = " & CInt(False) & " ORDER BY codigo ASC"

rs_Dia.Open StrSql, objConn

Do While Not rs_Dia.EOF
    
    StrSql = "SELECT * FROM " & TTempWFEmbudo & " WHERE codigo = " & rs_Dia!Codigo
    
    rs.Close
    rs.Open StrSql, objConn

    StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE entrada = " & CInt(False) & " AND " & _
    " (( fecha > " & ConvFecha(rs!fecha_desde) & " ) OR " & _
    "  ( fecha = " & ConvFecha(rs!fecha_desde) & " and hora >= '" & rs!hora_desde & "')) and" & _
    " (( fecha < " & ConvFecha(rs!fecha_hasta) & " ) OR " & _
    "  ( fecha = " & ConvFecha(rs!fecha_hasta) & " and hora <= '" & rs!hora_hasta & "'))" & _
    " ORDER BY fecha ASC, hora ASC"
    
    rs.Close
    
    rs.Open StrSql, objConn, adOpenDynamic, adLockOptimistic
    
    If Not rs.EOF Then rs.MoveFirst
       
    Do While Not rs.EOF

        StrSql = " UPDATE " & TTempWFTurno & " SET anornro = 6 WHERE regnro = " & rs!Regnro
        objConn.Execute StrSql, , adExecuteNoRecords

        Call objFechasHoras.RestaXHoras(rs_Dia!Fecha, rs_Dia!Hora, tol, Fecha_Tol, Hora_Tol)
        ok = objFechasHoras.ValidarHora(Hora_Tol)
        If (rs!Fecha = Fecha_Tol) And (rs!Hora < Hora_Tol) And _
        (rs!Hora < rs_Dia!Hora) Then

            If acumula = True Then
                Call objFechasHoras.RestaHs(rs!Fecha, rs!Hora, rs_Dia!Fecha, rs_Dia!Hora, Tdias, Thoras, Tmin)
                tothoras = (Tdias * 24) + (Thoras + (Tmin / 60))
                
                Call objFechasHoras.Convertir_A_Hora(tothoras * 60, Hora_a_Red)

                Call objFechasHoras.Redondeo_Horas_Tipo(Hora_a_Red, ConhRedTipo, Horas_Tol)
                
                If Horas_Tol <= 0 Then
                    GoTo salida
                End If
                
                'Call ValidarTipoDeHora(th_tol, nro_turno, tipo_hora)
                
                StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                "horvalido,ternro,thnro,turnro,empleg,horfecrep,horhoradesde,horhorahasta," & _
                "normnro,normnro2,horestado) VALUES (" & Horas_Tol & "," & _
                ConvFecha(Fecha_Tol) & "," & ConvFecha(Fecha_Tol) & "," & "0,-1," & _
                NroTer & "," & TH_tol & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
                ConvFecha(p_fecha) & ",'" & rs!Hora & "','" & rs_Dia!Hora & "',6,6,' ')"
                objConn.Execute StrSql, , adExecuteNoRecords
                    
            End If
            fecha_toldto = rs_Dia!Fecha: hora_toldto = rs_Dia!Hora
            Call objFechasHoras.SumoHoras(fecha_toldto, hora_toldto, toldto, fecres, horres)

            ok = objFechasHoras.ValidarHora(horres)
            
            If (rs!Fecha = fecres And rs!Hora > horres) And (acumula_dto) Then
                
                Call objFechasHoras.RestaHs(fecres, horres, rs!Fecha, rs!Hora, Tdias, Thoras, Tmin)
                tothoras = (Tdias * 24) + (Thoras + (Tmin / 60))
                
                If tothoras = 0 Then
                    GoTo salida
                Else
                    'Call DescontarHoras(rs!Fecha, tothoras, Nro_Turno, p_fecha)
                    'FGZ - 01/12/2005
                    Call Descontar_Horas(rs!Fecha, tothoras, 2)
                End If
                            
            End If
        Else
            
            If (rs!Fecha = Fecha_Tol) And (rs!Hora < rs_Dia!Hora) Then

                StrSql = " UPDATE " & TTempWFTurno & " SET fecha = " & _
                ConvFecha(rs!Fecha) & ", hora = '" & rs_Dia!Hora & _
                "' WHERE regnro = " & rs!Regnro
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
        End If
    
        rs.MoveNext
        
    Loop
salida:
        rs_Dia.MoveNext
Loop

rs.Close
Set rs = Nothing
rs_Dia.Close
Set rs_Dia = Nothing

End Sub


Private Sub DescontarHoras(fecha_dto As Date, horas_dto As Single, Nro_Turno As Long, p_fecha As Date)

Dim rs As New ADODB.Recordset


Dim TH_Dto As Integer
Dim Horas_Acum As Single
Dim hora_red   As String
Dim Hora_a_Red As String
Dim Limite As Integer

If depurar Then
    Flog.writeline Espacios(Tabulador * 2) & "Horas de descuento"
End If

Horas_Acum = 0

'If horas_dto = 0 Then
    'Next
'End If

'  FIND FIRST per.gti_config-hora WHERE per.gti_config-hora.conhornro = 3 NO-LOCK NO-ERROR. /* Horas de Dto. */
'  FIND FIRST per.gti_config-tur-hora OF per.gti_config-hora WHERE per.gti_config-tur-hora.turnro = nro-turno NO-LOCK NO-ERROR.
' /* Horas de Dto. */
StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 3 " & _
" AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
rs.Open StrSql, objConn

If Not rs.EOF Then
    TH_Dto = rs!thnro
Else
    If depurar Then
        GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora Descuento para el Turno:", Str(Nro_Turno)
    End If

'/* Deberia salir de todo el procedimiento */
    rs.Close
    Set rs = Nothing
    Exit Sub
End If

Limite = rs!conhfracc / 60
Do While Limite < horas_dto
    Horas_Acum = Horas_Acum + Limite
    horas_dto = horas_dto - Limite
Loop

Horas_Acum = Horas_Acum + Limite
Call objFechasHoras.Convertir_A_Hora(Horas_Acum * 60, Hora_a_Red)

'  RUN gtired01.p(hora-a-red,per.gti_config-tur-hora.conhredtipo,OUTPUT horas-acum).
'Call objFechasHoras.Redondeo_Horas_Tipo(hora_a_red, rs!conhredondeo, horas_acum)
Call objFechasHoras.Redondeo_Horas_Tipo(Hora_a_Red, IIf(Not EsNulo(rs!conhredondeo), rs!conhredondeo, 0), Horas_Acum)

'Call ValidarTipoDeHora(th_dto, nro_turno, tipo_hora)

StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
"horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen" & _
") VALUES (" & CHoras(Horas_Acum, 60) & Horas_Acum & "," & _
ConvFecha(fecha_dto) & "," & ConvFecha(fecha_dto) & "," & "0,-1," & _
Empleado.Ternro & "," & TH_Dto & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
objConn.Execute StrSql, , adExecuteNoRecords
If depurar Then
    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TH_Dto & "- Cantidad: " & Horas_Acum & " hs."
    Flog.writeline Espacios(Tabulador * 2) & "Fin Horas de descuento"
End If

End Sub

Public Sub Politica190(NroTer As Long, Nro_Turno As Long, p_fecha As Date, tol As String, acumula As Boolean, deb As Boolean, toldto As String, acumula_dto As Boolean, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Generacion de llegadas tardes.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' Ultima modificacion: FGZ - 26/12/2005
'                       no registra las LLT cuando hay ausencias en una mitad del turno
' Ultima modificacion: FGZ - 30/11/2006
'       Se agregó la version 3: para turnos partidos analizando franjas enteras y no 1/2 franja como la version 1
' Ultima modificacion: FGZ - 14/09/2011
'       La politica pasó a ser paratemtrizable
' --------------------------------------------------------------
Dim TH_tol As Integer
Dim Horas_Acum As Integer
Dim hora_red   As String
Dim Hora_a_Red As String
Dim tothoras   As Single
Dim Tdias      As Integer
Dim Thoras     As Integer
Dim Tmin       As Integer
Dim Horas_Tol As Single
Dim Fecha_Tol As Date
Dim Hora_Tol  As String
Dim ok As Boolean
Dim ConhRedTipo As Integer
Dim i As Integer

Dim fecha_toldto As Date
Dim hora_toldto As String

Dim fecres As Date
Dim horres As String

Dim rs_Dia As New ADODB.Recordset
Dim rs As New ADODB.Recordset
Dim TotHorHHMM As String

Dim Opcion  As Integer
Dim TH1 As Long
Dim TH2 As Long
Dim TH3 As Long
Dim AN1 As String
Dim AN2 As String
Dim AN3 As String


TolDtoLLT = "0000"
Call Politica(131)


'FGZ - 08/09/2011 -------------------
Call SetearParametrosPolitica(Detalle, ok)
If ok Then
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Version Configurable"
    End If
    
    Opcion = st_Opcion
    If IsNull(Opcion) Or Opcion = 0 Then
        Opcion = 1
    End If
    
    TH1 = IIf(Not EsNulo(st_TipoHora1), st_TipoHora1, 0) 'Tipo de hora a generar
    TH2 = IIf(Not EsNulo(st_TipoHora2), st_TipoHora2, 0) 'Tipo de hora a generar
    TH3 = IIf(Not EsNulo(st_TipoHora3), st_TipoHora3, 0) 'Tipo de hora a generar
    
    AN1 = IIf(Not EsNulo(st_Anormalidad), st_Anormalidad, 0) 'Codigo de anormalidad a generar
    AN2 = IIf(Not EsNulo(st_Anormalidad2), st_Anormalidad2, 0) 'Codigo de anormalidad a generar
    AN3 = IIf(Not EsNulo(st_Anormalidad3), st_Anormalidad3, 0) 'Codigo de anormalidad a generar
    
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Version: " & Opcion
        Flog.writeline Espacios(Tabulador * 3) & "Rango 1"
        Flog.writeline Espacios(Tabulador * 3) & "  Tolerancia: " & tol
        Flog.writeline Espacios(Tabulador * 3) & "  Tipo de hora a generar: " & TH1
        Flog.writeline Espacios(Tabulador * 3) & "  Codigo de Anormalidad: " & AN1
        Flog.writeline Espacios(Tabulador * 3) & "Rango 2"
        Flog.writeline Espacios(Tabulador * 3) & "  Tolerancia: " & tol_LLT_Grado2
        Flog.writeline Espacios(Tabulador * 3) & "  Tipo de hora a generar: " & TH2
        Flog.writeline Espacios(Tabulador * 3) & "  Codigo de Anormalidad: " & AN2
        Flog.writeline Espacios(Tabulador * 3) & "Rango 3"
        Flog.writeline Espacios(Tabulador * 3) & "  Tolerancia: " & tol_LLT_Grado3
        Flog.writeline Espacios(Tabulador * 3) & "  Tipo de hora a generar: " & TH3
        Flog.writeline Espacios(Tabulador * 3) & "  Codigo de Anormalidad: " & AN3
    End If
    
    Select Case Opcion
    Case 1: 'Version 1
        Call Politica190_Configurable(NroTer, Nro_Turno, p_fecha, tol, acumula, deb, toldto, acumula_dto, subn, Cabecera, Detalle, TH1, TH2, TH3, AN1, AN2, AN3)
        'Call Politica190_Configurable(NroTer, Nro_Turno, p_fecha, tol, acumula, deb, toldto, acumula_dto, subn, Cabecera, Detalle, TH1, TH2, TH3, AN1, AN2, AN3)
        '   (NroTer As Long, Nro_Turno As Long, p_fecha As Date, tol As String, acumula As Boolean, deb As Boolean, toldto As String, acumula_dto As Boolean, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
        
    Case Else:
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "Version inexistente. Se utilizará versión default 1. "
        End If
        Call Politica190_Configurable(NroTer, Nro_Turno, p_fecha, tol, acumula, deb, toldto, acumula_dto, subn, Cabecera, Detalle, TH1, TH2, TH3, AN1, AN2, AN3)
    End Select

    Exit Sub
Else
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Version NO Configurable"
    End If
End If
'FGZ - 08/09/2011 -------------------

' Hay Problemas con los turnos corridos
Select Case subn
Case 1:
    ' esta misma (para turnos partidos)
Case 2: 'para turnos corridos
    Politica190V1 NroTer, Nro_Turno, p_fecha, tol, acumula, deb, toldto, acumula_dto, subn, Cabecera, Detalle
    Exit Sub
Case 3: 'para turnos partidos analizando franjas enteras y no 1/2 franja como la version 1
    Politica190V2 NroTer, Nro_Turno, p_fecha, tol, acumula, deb, toldto, acumula_dto, subn, Cabecera, Detalle
    Exit Sub
End Select
i = -1

If depurar Then
    Flog.writeline Espacios(Tabulador * 3) & "Version para Turno Partido"
End If

StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 4 " & _
" AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
OpenRecordset StrSql, rs

If Not rs.EOF Then
    TH_tol = rs!thnro
    ConhRedTipo = rs!conhredondeo
Else
    If depurar Then GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora Llegada Tarde para el Turno:", Str(Nro_Turno)
    Exit Sub
End If

'StrSql = "SELECT * FROM " & TTempWFdia & " WHERE entrada = " & CInt(True) & " ORDER BY codigo ASC"

StrSql = "SELECT " & TTempWFDia & ".Codigo,fecha,hora,fecha_desde,fecha_hasta,hora_desde,hora_hasta FROM " & TTempWFDia & " "
StrSql = StrSql & " INNER JOIN " & TTempWFEmbudo & " ON " & TTempWFDia & ".Codigo = " & TTempWFEmbudo & ".Codigo "
StrSql = StrSql & " WHERE " & TTempWFDia & ".entrada = " & CInt(True) & " ORDER BY " & TTempWFDia & ".codigo ASC"
OpenRecordset StrSql, rs_Dia, adLockOptimistic

Do While Not rs_Dia.EOF
    
    StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE entrada = " & CInt(True) & " AND " & _
    " (( fecha > " & ConvFecha(rs_Dia!fecha_desde) & " ) OR " & _
    "  ( fecha = " & ConvFecha(rs_Dia!fecha_desde) & " and hora >= '" & rs_Dia!hora_desde & "')) and" & _
    " (( fecha < " & ConvFecha(rs_Dia!fecha_hasta) & " ) OR " & _
    "  ( fecha = " & ConvFecha(rs_Dia!fecha_hasta) & " and hora <= '" & rs_Dia!hora_hasta & "'))" & _
    " AND evenro = 2 " & _
    " ORDER BY fecha ASC, hora ASC"
    
    OpenRecordset StrSql, rs, adLockOptimistic
    If Not rs.EOF Then rs.MoveFirst
    
    Do While Not rs.EOF
        If (Fix((rs_Dia!Codigo / 2)) + 1 = rs!par) Or (Fix((rs_Dia!Codigo / 2)) + 1 = rs!par + 1) Then
            Call objFechasHoras.SumoHoras(rs_Dia!Fecha, rs_Dia!Hora, tol, Fecha_Tol, Hora_Tol)
            ok = objFechasHoras.ValidarHora(Hora_Tol)
            If (rs!Fecha = Fecha_Tol) And (rs!Hora > Hora_Tol) And _
            (rs!Hora > rs_Dia!Hora) Then
            
                StrSql = " UPDATE " & TTempWFTurno & " SET anornro = 5 WHERE regnro = " & rs!Regnro
                StrSql = StrSql & " AND evenro = 2 "
                objConn.Execute StrSql, , adExecuteNoRecords
                
                If acumula = True Then
                    
                    'FGZ - 12/10/2010 --------------------------------------------------------------------------
                    'Call objFechasHoras.RestaHs(rs_Dia!Fecha, rs_Dia!Hora, rs!Fecha, rs!Hora, Tdias, Thoras, Tmin)
                    'tothoras = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TolDtoLLT > tol Then
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 4) & "La tolerancia de Dto debe ser menor que la Tolerancia de LLT"
                            Flog.writeline Espacios(Tabulador * 4) & "No se generará Anormalidad."
                        End If
                        tothoras = 0
                        fecha_toldto = rs_Dia!Fecha
                        hora_toldto = rs_Dia!Hora
                    Else
                        fecha_toldto = rs_Dia!Fecha
                        hora_toldto = rs_Dia!Hora
                        Call objFechasHoras.SumoHoras(fecha_toldto, hora_toldto, TolDtoLLT, fecres, horres)
                        ok = objFechasHoras.ValidarHora(horres)
                        fecha_toldto = fecres
                        hora_toldto = horres
                        Call objFechasHoras.RestaHs(fecres, horres, rs!Fecha, rs!Hora, Tdias, Thoras, Tmin)
                        tothoras = (Tdias * 24) + (Thoras + (Tmin / 60))
                    End If
                    'FGZ - 12/10/2010 --------------------------------------------------------------------------
                    
                    Call objFechasHoras.Convertir_A_Hora(tothoras * 60, Hora_a_Red)
    
                    Call objFechasHoras.Redondeo_Horas_Tipo(Hora_a_Red, ConhRedTipo, Horas_Tol)
                    
                    If Horas_Tol <= 0 Then
                        GoTo salida
                    End If
                    
                    'Call ValidarTipoDeHora(th_tol, nro_turno, tipo_hora)
                    TotHorHHMM = CHoras(Horas_Tol, 60)
                    
                    'FGZ - 12/10/2010 --------------------------------------------------------------------------
                    'StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                    '"horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
                    '"normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Horas_Tol & "," & _
                    'ConvFecha(Fecha_Tol) & "," & ConvFecha(Fecha_Tol) & "," & CInt(False) & "," & CInt(True) & "," & _
                    'NroTer & "," & th_tol & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
                    'ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",'" & rs_Dia!Hora & "','" & rs!Hora & "',5,5,' ')"
                    
                    'FGZ - 22/10/2010 --------------------------------------------------------------------------
                    'StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                    '"horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
                    '"normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Horas_Tol & "," & _
                    'ConvFecha(Fecha_Tol) & "," & ConvFecha(Fecha_Tol) & "," & CInt(False) & "," & CInt(True) & "," & _
                    'NroTer & "," & th_tol & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
                    'ConvFecha(fecha_toldto) & "," & ConvFecha(p_fecha) & ",'" & hora_toldto & "','" & rs!Hora & "',5,5,' ')"
                    
                    StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                    "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
                    "normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Horas_Tol & "," & _
                    ConvFecha(Fecha_Tol) & "," & ConvFecha(Fecha_Tol) & "," & CInt(False) & "," & CInt(True) & "," & _
                    NroTer & "," & TH_tol & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
                    ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",'" & hora_toldto & "','" & rs!Hora & "',5,5,' ')"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TH_tol & "- Cantidad: " & Horas_Tol & " hs."
                    End If
                    'FGZ - 12/10/2010 --------------------------------------------------------------------------
                End If
                fecha_toldto = rs_Dia!Fecha
                hora_toldto = rs_Dia!Hora
                Call objFechasHoras.SumoHoras(fecha_toldto, hora_toldto, toldto, fecres, horres)
    
                ok = objFechasHoras.ValidarHora(horres)
                
                If (rs!Fecha = fecres And rs!Hora > horres) And (acumula_dto) Then
                    Call objFechasHoras.RestaHs(fecres, horres, rs!Fecha, rs!Hora, Tdias, Thoras, Tmin)
                    tothoras = (Tdias * 24) + (Thoras + (Tmin / 60))
                    
                    If tothoras = 0 Then
                        GoTo salida
                    Else
                        'Call DescontarHoras(rs!Fecha, tothoras, Nro_Turno, p_fecha)
                        'FGZ - 01/12/2005
                        Call Descontar_Horas(rs!Fecha, tothoras, 1)
                    End If
                End If
            Else
                If (rs!Fecha = Fecha_Tol) And (rs!Hora > rs_Dia!Hora) Then
                    StrSql = " UPDATE " & TTempWFTurno & " SET fecha  = " & ConvFecha(rs_Dia!Fecha) & ", hora = '" & rs_Dia!Hora & "' WHERE regnro = " & rs!Regnro
                    StrSql = StrSql & " AND evenro = 2 "
                    objConn.Execute StrSql, , adExecuteNoRecords
                End If
            End If
        End If
        rs.MoveNext
    
    Loop

salida:
    rs_Dia.MoveNext
    
Loop

' Cierro todo antes de salir
rs.Close
Set rs = Nothing
rs_Dia.Close
Set rs_Dia = Nothing


End Sub





Public Sub Politica190V1(NroTer As Long, Nro_Turno As Long, p_fecha As Date, tol As String, acumula As Boolean, deb As Boolean, toldto As String, acumula_dto As Boolean, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Generacion de llegadas tardes para turnos Corridos.
' Autor: FGZ
' Ultima modificacion: FGZ - 12/02/2004
' --------------------------------------------------------------
Dim TH_tol As Integer
Dim Horas_Acum As Integer
Dim hora_red   As String
Dim Hora_a_Red As String
Dim tothoras   As Single
Dim Tdias      As Integer
Dim Thoras     As Integer
Dim Tmin       As Integer
Dim Horas_Tol As Single
Dim Fecha_Tol As Date
Dim Hora_Tol  As String
Dim ok As Boolean
Dim ConhRedTipo As Integer
Dim i As Integer

Dim fecha_toldto As Date
Dim hora_toldto As String

Dim fecres As Date
Dim horres As String

Dim rs_Dia As New ADODB.Recordset
Dim rs As New ADODB.Recordset
Dim TotHorHHMM As String


i = -1
If depurar Then
    Flog.writeline Espacios(Tabulador * 3) & "Version para Turno Corridos"
End If

StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 4 " & _
" AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
OpenRecordset StrSql, rs

If Not rs.EOF Then
    TH_tol = rs!thnro
    'conhredtipo = rs!conhredondeo
    ConhRedTipo = IIf(Not EsNulo(rs!conhredondeo), rs!conhredondeo, 0)
Else
    If depurar Then GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora Llegada Tarde para el Turno:", Str(Nro_Turno)
    Exit Sub
End If

StrSql = "SELECT " & TTempWFDia & ".Codigo,fecha,hora,fecha_desde,fecha_hasta,hora_desde,hora_hasta FROM " & TTempWFDia & " "
StrSql = StrSql & " INNER JOIN " & TTempWFEmbudo & " ON " & TTempWFDia & ".Codigo = " & TTempWFEmbudo & ".Codigo "
StrSql = StrSql & " WHERE " & TTempWFDia & ".entrada = " & CInt(True) & " ORDER BY " & TTempWFDia & ".codigo ASC"

OpenRecordset StrSql, rs_Dia, adLockOptimistic

Do While Not rs_Dia.EOF
    StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE entrada = " & CInt(True) & " AND " & _
    " (( fecha > " & ConvFecha(rs_Dia!fecha_desde) & " ) OR " & _
    "  ( fecha = " & ConvFecha(rs_Dia!fecha_desde) & " and hora >= '" & rs_Dia!hora_desde & "')) and" & _
    " (( fecha < " & ConvFecha(rs_Dia!fecha_hasta) & " ) OR " & _
    "  ( fecha = " & ConvFecha(rs_Dia!fecha_hasta) & " and hora <= '" & rs_Dia!hora_hasta & "'))" & _
    " AND evenro = 2 " & _
    " ORDER BY fecha ASC, hora ASC"
    OpenRecordset StrSql, rs, adLockOptimistic
    
    If Not rs.EOF Then rs.MoveFirst
    
    If Not rs.EOF Then
        
        Call objFechasHoras.SumoHoras(rs_Dia!Fecha, rs_Dia!Hora, tol, Fecha_Tol, Hora_Tol)
        ok = objFechasHoras.ValidarHora(Hora_Tol)
        If (rs!Fecha = Fecha_Tol) And (rs!Hora > Hora_Tol) And _
        (rs!Hora > rs_Dia!Hora) Then
        
            StrSql = " UPDATE " & TTempWFTurno & " SET anornro = 5 WHERE regnro = " & rs!Regnro
            StrSql = StrSql & " AND evenro = 2 "
            objConn.Execute StrSql, , adExecuteNoRecords
            
            If acumula = True Then
                'FGZ - 12/10/2010 --------------------------------------------------------------------------
                'Call objFechasHoras.RestaHs(rs_Dia!Fecha, rs_Dia!Hora, rs!Fecha, rs!Hora, Tdias, Thoras, Tmin)
                'tothoras = (Tdias * 24) + (Thoras + (Tmin / 60))
                If TolDtoLLT > tol Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 4) & "La tolerancia de Dto debe ser menor que la Tolerancia de LLT"
                        Flog.writeline Espacios(Tabulador * 4) & "No se generará Anormalidad."
                    End If
                    tothoras = 0
                    fecha_toldto = rs_Dia!Fecha
                    hora_toldto = rs_Dia!Hora
                Else
                    fecha_toldto = rs_Dia!Fecha
                    hora_toldto = rs_Dia!Hora
                    Call objFechasHoras.SumoHoras(fecha_toldto, hora_toldto, TolDtoLLT, fecres, horres)
                    ok = objFechasHoras.ValidarHora(horres)
                    fecha_toldto = fecres
                    hora_toldto = horres
                    Call objFechasHoras.RestaHs(fecres, horres, rs!Fecha, rs!Hora, Tdias, Thoras, Tmin)
                    tothoras = (Tdias * 24) + (Thoras + (Tmin / 60))
                End If
                'FGZ - 12/10/2010 --------------------------------------------------------------------------
                
                Call objFechasHoras.Convertir_A_Hora(tothoras * 60, Hora_a_Red)
                Call objFechasHoras.Redondeo_Horas_Tipo(Hora_a_Red, ConhRedTipo, Horas_Tol)
                
                If Horas_Tol <= 0 Then
                    GoTo salida
                End If
                
                'Call ValidarTipoDeHora(th_tol, nro_turno, tipo_hora)
                TotHorHHMM = CHoras(Horas_Tol, 60)
                
                'FGZ - 12/10/2010 --------------------------------------------------------------------------
                'StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                '"horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
                '"normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Horas_Tol & "," & _
                'ConvFecha(Fecha_Tol) & "," & ConvFecha(Fecha_Tol) & "," & CInt(False) & "," & CInt(True) & "," & _
                'NroTer & "," & th_tol & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
                'ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",'" & rs_Dia!Hora & "','" & rs!Hora & "',5,5,' ')"
                
                'FGZ - 22/10/2010 --------------------------------------------------------------------------
                'StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                '"horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
                '"normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Horas_Tol & "," & _
                'ConvFecha(Fecha_Tol) & "," & ConvFecha(Fecha_Tol) & "," & CInt(False) & "," & CInt(True) & "," & _
                'NroTer & "," & th_tol & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
                'ConvFecha(fecha_toldto) & "," & ConvFecha(p_fecha) & ",'" & hora_toldto & "','" & rs!Hora & "',5,5,' ')"
                
                StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
                "normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Horas_Tol & "," & _
                ConvFecha(Fecha_Tol) & "," & ConvFecha(Fecha_Tol) & "," & CInt(False) & "," & CInt(True) & "," & _
                NroTer & "," & TH_tol & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
                ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",'" & hora_toldto & "','" & rs!Hora & "',5,5,' ')"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TH_tol & "- Cantidad: " & Horas_Tol & " hs."
                End If
                'FGZ - 12/10/2010 --------------------------------------------------------------------------
            End If
            fecha_toldto = rs_Dia!Fecha
            hora_toldto = rs_Dia!Hora
            Call objFechasHoras.SumoHoras(fecha_toldto, hora_toldto, toldto, fecres, horres)

            ok = objFechasHoras.ValidarHora(horres)
            
            If (rs!Fecha = fecres And rs!Hora > horres) And (acumula_dto) Then
                Call objFechasHoras.RestaHs(fecres, horres, rs!Fecha, rs!Hora, Tdias, Thoras, Tmin)
                tothoras = (Tdias * 24) + (Thoras + (Tmin / 60))
                
                If tothoras = 0 Then
                    GoTo salida
                Else
                    'Call DescontarHoras(rs!Fecha, tothoras, Nro_Turno, p_fecha)
                    'FGZ - 01/12/2005
                    Call Descontar_Horas(rs!Fecha, tothoras, 1)
                End If
            End If
        Else
            If (rs!Fecha = Fecha_Tol) And (rs!Hora > rs_Dia!Hora) Then
                StrSql = " UPDATE " & TTempWFTurno & " SET fecha  = " & ConvFecha(rs_Dia!Fecha) & ", hora = '" & rs_Dia!Hora & "' WHERE regnro = " & rs!Regnro
                StrSql = StrSql & " AND evenro = 2 "
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
        End If
    End If
    
salida:
    rs_Dia.MoveNext
    
Loop

' Cierro todo antes de salir
rs.Close
Set rs = Nothing
rs_Dia.Close
Set rs_Dia = Nothing
End Sub

Public Sub Politica190V2(NroTer As Long, Nro_Turno As Long, p_fecha As Date, tol As String, acumula As Boolean, deb As Boolean, toldto As String, acumula_dto As Boolean, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Generacion de llegadas tardes.
'                      Problema: no registra las LLT cuando hay ausencias en una mitad del turno
'                      Sol:      Analiza en toda la franja en lugar de solo la 1era mitad de la franja
' Autor: FGZ - 30/11/2006
' Ultima modificacion: FGZ - 20/07/2007 - en ciertos casos no estaba generando la LLT
'                       Ej. HT  -->    ----------------[-----------------------]------------
'                           Reg -->    ---(-------)------------------------(-------------)--
'
'                       FGZ - 24/06/2009 - en ciertos casos estaba generando la LLT y no correspondia
'                                   (turnos corridos cuando habia mas registraciones que las obligatorias)
' --------------------------------------------------------------
Dim TH_tol As Integer
Dim Horas_Acum As Integer
Dim hora_red   As String
Dim Hora_a_Red As String
Dim tothoras   As Single
Dim Tdias      As Integer
Dim Thoras     As Integer
Dim Tmin       As Integer
Dim Horas_Tol As Single
Dim Fecha_Tol As Date
Dim Hora_Tol  As String
Dim ok As Boolean
Dim ConhRedTipo As Integer
Dim i As Integer
Dim fecha_toldto As Date
Dim hora_toldto As String
Dim fecres As Date
Dim horres As String
Dim entrada_salida As Integer

Dim rs_Dia As New ADODB.Recordset
Dim rs As New ADODB.Recordset
Dim rs_diaL As New ADODB.Recordset

Dim TotHorHHMM As String

If depurar Then
    Flog.writeline Espacios(Tabulador * 3) & "Version integrada"
End If

StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 4 " & _
" AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
OpenRecordset StrSql, rs
If Not rs.EOF Then
    TH_tol = rs!thnro
    ConhRedTipo = rs!conhredondeo
Else
    If depurar Then GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora Llegada Tarde para el Turno:", Str(Nro_Turno)
        If depurar Then 'mdf
        Flog.writeline Espacios(Tabulador * 3) & "No esta configurado el Tipo de Hora Llegada Tarde para el Turno:" & Nro_Turno
         End If

    Exit Sub
End If


StrSql = "SELECT * FROM " & TTempWFDia & " WHERE entrada = " & CInt(True) & " ORDER BY codigo ASC"
OpenRecordset StrSql, rs_Dia

If rs_Dia.EOF Then 'mdf
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "No hay detalle de toericos en TTempWFDia"
    End If
Else
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Hay detalle de toericos en TTempWFDia"
    End If
End If


Do While Not rs_Dia.EOF
    entrada_salida = IIf((rs_Dia!Codigo = 1 Or rs_Dia!Codigo = 2), 1, IIf((rs_Dia!Codigo = 3 Or rs_Dia!Codigo = 4), 2, 3))
    StrSql = "SELECT fecha_entrada fecha_desde,fecha_salida fecha_hasta,hora_entrada hora_desde, hora_salida hora_hasta FROM " & TTempWFDiaLaboral
    StrSql = StrSql & " WHERE entrada_salida = " & entrada_salida
    StrSql = StrSql & " ORDER BY fecha_desde, hora_desde ASC"
    OpenRecordset StrSql, rs_diaL
    If Not rs_diaL.EOF Then
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE entrada = " & CInt(True) & " AND "
        StrSql = StrSql & " (( fecha > " & ConvFecha(rs_diaL!fecha_desde) & " ) OR "
        StrSql = StrSql & "  ( fecha = " & ConvFecha(rs_diaL!fecha_desde) & " and hora >= '" & rs_diaL!hora_desde & "')) and "
        StrSql = StrSql & " (( fecha < " & ConvFecha(rs_diaL!fecha_hasta) & " ) OR "
        StrSql = StrSql & "  ( fecha = " & ConvFecha(rs_diaL!fecha_hasta) & " and hora <= '" & rs_diaL!hora_hasta & "'))"
        StrSql = StrSql & " AND evenro = 2 "
        'FGZ - 23/06/2009 ------------------------------------------------------------------------------
        ' le agregué esta linea porque sino traia registraciones que no eran la correspondiente al par
        StrSql = StrSql & " AND par = " & entrada_salida
        'FGZ - 23/06/2009 ------------------------------------------------------------------------------
        StrSql = StrSql & " ORDER BY fecha ASC, hora ASC"
             
        
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            Call objFechasHoras.SumoHoras(rs_Dia!Fecha, rs_Dia!Hora, tol, Fecha_Tol, Hora_Tol)
            ok = objFechasHoras.ValidarHora(Hora_Tol)
            If (rs!Fecha = Fecha_Tol) And (rs!Hora > Hora_Tol) And _
            (rs!Hora > rs_Dia!Hora) Then
            
                StrSql = " UPDATE " & TTempWFTurno & " SET anornro = 5 WHERE regnro = " & rs!Regnro
                StrSql = StrSql & " AND evenro = 2 "
                objConn.Execute StrSql, , adExecuteNoRecords
                
                If acumula = True Then
                    'FGZ - 12/10/2010 --------------------------------------------------------------------------
                    'Call objFechasHoras.RestaHs(rs_Dia!Fecha, rs_Dia!Hora, rs!Fecha, rs!Hora, Tdias, Thoras, Tmin)
                    'tothoras = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TolDtoLLT > tol Then
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 4) & "La tolerancia de Dto debe ser menor que la Tolerancia de LLT"
                            Flog.writeline Espacios(Tabulador * 4) & "No se generará Anormalidad."
                        End If
                        tothoras = 0
                        fecha_toldto = rs_Dia!Fecha
                        hora_toldto = rs_Dia!Hora
                    Else
                        fecha_toldto = rs_Dia!Fecha
                        hora_toldto = rs_Dia!Hora
                        Call objFechasHoras.SumoHoras(fecha_toldto, hora_toldto, TolDtoLLT, fecres, horres)
                        ok = objFechasHoras.ValidarHora(horres)
                        fecha_toldto = fecres
                        hora_toldto = horres
                        Call objFechasHoras.RestaHs(fecres, horres, rs!Fecha, rs!Hora, Tdias, Thoras, Tmin)
                        tothoras = (Tdias * 24) + (Thoras + (Tmin / 60))
                    End If
                    'FGZ - 12/10/2010 --------------------------------------------------------------------------
                    
                    Call objFechasHoras.Convertir_A_Hora(tothoras * 60, Hora_a_Red)
                    Call objFechasHoras.Redondeo_Horas_Tipo(Hora_a_Red, ConhRedTipo, Horas_Tol)
                    
                    If Horas_Tol <= 0 Then
                        GoTo salida
                    End If
                    
                    TotHorHHMM = CHoras(Horas_Tol, 60)
                    
                    'FGZ - 12/10/2010 --------------------------------------------------------------------------
                    'StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                    '"horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
                    '"normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Horas_Tol & "," & _
                    'ConvFecha(Fecha_Tol) & "," & ConvFecha(Fecha_Tol) & "," & CInt(False) & "," & CInt(True) & "," & _
                    'NroTer & "," & th_tol & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
                    'ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",'" & rs_Dia!Hora & "','" & rs!Hora & "',5,5,' ')"
                    'objConn.Execute StrSql, , adExecuteNoRecords
                    'If depurar Then
                    '    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & th_tol & "- Cantidad: " & Horas_Tol & " hs."
                    'End If
                    
                    'FGZ - 22/10/2010 --------------------------------------------------------------------------
                    'StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                    '"horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
                    '"normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Horas_Tol & "," & _
                    'ConvFecha(Fecha_Tol) & "," & ConvFecha(Fecha_Tol) & "," & CInt(False) & "," & CInt(True) & "," & _
                    'NroTer & "," & th_tol & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
                    'ConvFecha(fecha_toldto) & "," & ConvFecha(p_fecha) & ",'" & hora_toldto & "','" & rs!Hora & "',5,5,' ')"
                    
                    StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                    "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
                    "normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Horas_Tol & "," & _
                    ConvFecha(Fecha_Tol) & "," & ConvFecha(Fecha_Tol) & "," & CInt(False) & "," & CInt(True) & "," & _
                    NroTer & "," & TH_tol & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
                    ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",'" & hora_toldto & "','" & rs!Hora & "',5,5,' ')"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TH_tol & "- Cantidad: " & Horas_Tol & " hs."
                    End If
                    
                    'FGZ - 12/10/2010 --------------------------------------------------------------------------
                End If
                fecha_toldto = rs_Dia!Fecha
                hora_toldto = rs_Dia!Hora
                Call objFechasHoras.SumoHoras(fecha_toldto, hora_toldto, toldto, fecres, horres)
    
                ok = objFechasHoras.ValidarHora(horres)
                
                If (rs!Fecha = fecres And rs!Hora > horres) And (acumula_dto) Then
                    Call objFechasHoras.RestaHs(fecres, horres, rs!Fecha, rs!Hora, Tdias, Thoras, Tmin)
                    tothoras = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If tothoras = 0 Then
                        GoTo salida
                    Else
                        Call Descontar_Horas(rs!Fecha, tothoras, 1)
                    End If
                End If
            Else
                If (rs!Fecha = Fecha_Tol) And (rs!Hora > rs_Dia!Hora) Then
                    StrSql = " UPDATE " & TTempWFTurno & " SET fecha  = " & ConvFecha(rs_Dia!Fecha) & ", hora = '" & rs_Dia!Hora & "' WHERE regnro = " & rs!Regnro
                    StrSql = StrSql & " AND evenro = 2 "
                    objConn.Execute StrSql, , adExecuteNoRecords
                End If
            End If
        End If
    End If
salida:
    rs_Dia.MoveNext
Loop

'Cierro todo antes de salir
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
    If rs_Dia.State = adStateOpen Then rs_Dia.Close
    Set rs_Dia = Nothing
End Sub



Public Sub Politica190_Configurable(ByVal NroTer As Long, ByVal Nro_Turno As Long, ByVal p_fecha As Date, ByVal tol As String, ByVal acumula As Boolean, ByVal deb As Boolean, ByVal toldto As String, ByVal acumula_dto As Boolean, ByVal subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long, ByVal TH1, ByVal TH2, ByVal TH3, ByVal AN1, ByVal AN2, ByVal AN3)
' --------------------------------------------------------------
' Descripcion: Generacion de llegadas tardes.
'               Version Configurable
' Autor: FGZ - 08/09/2011
' Ultima modificacion:
' --------------------------------------------------------------
Dim Horas_Acum As Integer
Dim hora_red   As String
Dim Hora_a_Red As String
Dim tothoras   As Single
Dim Tdias      As Integer
Dim Thoras     As Integer
Dim Tmin       As Integer
Dim Horas_Tol As Single
Dim Fecha_Tol As Date
Dim Hora_Tol  As String
Dim ok As Boolean
Dim ConhRedTipo As Integer
Dim i As Integer
Dim fecha_toldto As Date
Dim hora_toldto As String
Dim fecres As Date
Dim horres As String
Dim entrada_salida As Integer
Dim rs_Dia As New ADODB.Recordset
Dim rs As New ADODB.Recordset
Dim rs_diaL As New ADODB.Recordset

Dim Genero_HS As Boolean
Dim tol_Aplicada As String
Dim TminLLT    As Integer
Dim TH_tol As Long
Dim AN_tol As Long

Dim TotHorHHMM As String

Dim Movio_Par As Boolean     'mdff


'FGZ - 05/02/2015 ---------------------
'Busco si el par1 está completamente fuera del teorico ==> actualizo par = = par-1 y luego de la politica vuelvo a actualizar
        Movio_Par = False
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE entrada = " & CInt(False)
        StrSql = StrSql & " AND  (( fecha < " & ConvFecha(FE1) & ") OR (fecha = " & ConvFecha(FE1) & " and hora < '" & E1 & "')) "
        StrSql = StrSql & " AND evenro = 2 "
        StrSql = StrSql & " AND par = 1"
        StrSql = StrSql & " ORDER BY fecha ASC, hora ASC"
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 4) & "Primer par fuera del teorico ==> muevo " & rs!Fecha & " " & rs!Hora & " " & rs!entrada & " " & rs!par
            End If
            Movio_Par = True
            
            StrSql = " UPDATE " & TTempWFTurno & " SET par = par -1"
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
'FGZ - 05/02/2015 ---------------------


'FGZ - 13/12/2013 --------------------------------
StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 4 " & _
" AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
OpenRecordset StrSql, rs
If Not rs.EOF Then
    ConhRedTipo = rs!conhredondeo
Else
    If depurar Then
        'Flog.writeline Espacios(Tabulador * 4) & "No esta configurado el Tipo de Hora Llegada Tarde para el Turno:", Str(Nro_Turno) mdf
        Flog.writeline Espacios(Tabulador * 4) & "No esta configurado el Tipo de Hora Llegada Tarde para el Turno:" & Str(Nro_Turno)
        Flog.writeline Espacios(Tabulador * 4) & "NO se Podrá redondear."
    End If
End If
'FGZ - 13/12/2013 --------------------------------

StrSql = "SELECT * FROM " & TTempWFDia & " WHERE entrada = " & CInt(True) & " ORDER BY codigo ASC"
OpenRecordset StrSql, rs_Dia
Do While Not rs_Dia.EOF
    entrada_salida = IIf((rs_Dia!Codigo = 1 Or rs_Dia!Codigo = 2), 1, IIf((rs_Dia!Codigo = 3 Or rs_Dia!Codigo = 4), 2, 3))
    StrSql = "SELECT fecha_entrada fecha_desde,fecha_salida fecha_hasta,hora_entrada hora_desde, hora_salida hora_hasta FROM " & TTempWFDiaLaboral
    StrSql = StrSql & " WHERE entrada_salida = " & entrada_salida
    StrSql = StrSql & " ORDER BY fecha_desde, hora_desde ASC"
    OpenRecordset StrSql, rs_diaL
    If Not rs_diaL.EOF Then
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE entrada = " & CInt(True) & " AND "
        StrSql = StrSql & " (( fecha > " & ConvFecha(rs_diaL!fecha_desde) & " ) OR "
        StrSql = StrSql & "  ( fecha = " & ConvFecha(rs_diaL!fecha_desde) & " and hora >= '" & rs_diaL!hora_desde & "')) and "
        StrSql = StrSql & " (( fecha < " & ConvFecha(rs_diaL!fecha_hasta) & " ) OR "
        StrSql = StrSql & "  ( fecha = " & ConvFecha(rs_diaL!fecha_hasta) & " and hora <= '" & rs_diaL!hora_hasta & "'))"
        StrSql = StrSql & " AND evenro = 2 "
        'FGZ - 23/06/2009 ------------------------------------------------------------------------------
        ' le agregué esta linea porque sino traia registraciones que no eran la correspondiente al par
        StrSql = StrSql & " AND par = " & entrada_salida
        'FGZ - 23/06/2009 ------------------------------------------------------------------------------
        StrSql = StrSql & " ORDER BY fecha ASC, hora ASC"
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            'calcular la diferencia entre real y teorico
            Call objFechasHoras.RestaHs(rs_Dia!Fecha, rs_Dia!Hora, rs!Fecha, rs!Hora, Tdias, Thoras, Tmin)
            'tothoras = (Tdias * 24) + (Thoras + (Tmin / 60))
            TminLLT = Tmin + 60 * Thoras + 60 * 24 * Tdias
            
            Genero_HS = False
            If Tiene_tol_LLT_Grado3 Then
                If TminLLT > tol_LLT_Grado3 Then
                    tothoras = (Tdias * 24) + (Thoras + (Tmin / 60))
                    TH_tol = TH3
                    AN_tol = AN3
                    Genero_HS = True
                    tol_Aplicada = tol_LLT_Grado3
                End If
            End If
            If Not Genero_HS Then
                If Tiene_tol_LLT_Grado2 Then
                    If TminLLT > tol_LLT_Grado2 Then
                        tothoras = (Tdias * 24) + (Thoras + (Tmin / 60))
                        TH_tol = TH2
                        AN_tol = AN2
                        Genero_HS = True
                        tol_Aplicada = tol_LLT_Grado2
                    End If
                End If
            End If
            If Not Genero_HS Then
                'FGZ - 04/12/2013 ----------------
                'If Tiene_tol_LLT_Grado2 Then
                    If TminLLT > tol Then
                        tothoras = (Tdias * 24) + (Thoras + (Tmin / 60))
                        TH_tol = TH1
                        AN_tol = AN1
                        Genero_HS = True
                        tol_Aplicada = tol
                    End If
                'End If
                'FGZ - 04/12/2013 ----------------
            End If
            
            If TH_tol = 0 Then
                Genero_HS = False
            End If
            
            
            If Genero_HS Then
                StrSql = " UPDATE " & TTempWFTurno & " SET anornro = " & AN_tol & " WHERE regnro = " & rs!Regnro
                StrSql = StrSql & " AND evenro = 2 "
                objConn.Execute StrSql, , adExecuteNoRecords
            
                If acumula = True Then
                    If TolDtoLLT > tol_Aplicada Then
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 4) & "La tolerancia de Dto debe ser menor que la Tolerancia de LLT"
                            Flog.writeline Espacios(Tabulador * 4) & "No se generará Anormalidad."
                        End If
                        tothoras = 0
                        fecha_toldto = rs_Dia!Fecha
                        hora_toldto = rs_Dia!Hora
                    Else
                        fecha_toldto = rs_Dia!Fecha
                        hora_toldto = rs_Dia!Hora
                        Call objFechasHoras.SumoHoras(fecha_toldto, hora_toldto, TolDtoLLT, fecres, horres)
                        ok = objFechasHoras.ValidarHora(horres)
                        fecha_toldto = fecres
                        hora_toldto = horres
                        Call objFechasHoras.RestaHs(fecres, horres, rs!Fecha, rs!Hora, Tdias, Thoras, Tmin)
                        tothoras = (Tdias * 24) + (Thoras + (Tmin / 60))
                    End If
                    'FGZ - 12/10/2010 --------------------------------------------------------------------------
                    
                    Call objFechasHoras.Convertir_A_Hora(tothoras * 60, Hora_a_Red)
                    Call objFechasHoras.Redondeo_Horas_Tipo(Hora_a_Red, ConhRedTipo, Horas_Tol)
                    
                    If Horas_Tol <= 0 Then
                        GoTo salida
                    End If
                    
                    TotHorHHMM = CHoras(Horas_Tol, 60)
                    
                    StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                    "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
                    "normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Horas_Tol & "," & _
                    ConvFecha(fecha_toldto) & "," & ConvFecha(rs!Fecha) & "," & CInt(False) & "," & CInt(True) & "," & _
                    NroTer & "," & TH_tol & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
                    ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",'" & hora_toldto & "','" & rs!Hora & "'," & AN_tol & "," & AN_tol & ",' ')"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    'ConvFecha(Fecha_Tol) & "," & ConvFecha(Fecha_Tol) & "," & CInt(False) & "," & CInt(True) & "," & _

                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TH_tol & "- Cantidad: " & Horas_Tol & " hs."
                    End If
                    
                    'FGZ - 12/10/2010 --------------------------------------------------------------------------
                End If
                fecha_toldto = rs_Dia!Fecha
                hora_toldto = rs_Dia!Hora
                Call objFechasHoras.SumoHoras(fecha_toldto, hora_toldto, toldto, fecres, horres)
    
                ok = objFechasHoras.ValidarHora(horres)
                
                If (rs!Fecha = fecres And rs!Hora > horres) And (acumula_dto) Then
                    Call objFechasHoras.RestaHs(fecres, horres, rs!Fecha, rs!Hora, Tdias, Thoras, Tmin)
                    tothoras = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If tothoras = 0 Then
                        GoTo salida
                    Else
                        Call Descontar_Horas(rs!Fecha, tothoras, 1)
                    End If
                End If
            Else
                If (rs!Fecha = Fecha_Tol) And (rs!Hora > rs_Dia!Hora) Then
                    StrSql = " UPDATE " & TTempWFTurno & " SET fecha  = " & ConvFecha(rs_Dia!Fecha) & ", hora = '" & rs_Dia!Hora & "' WHERE regnro = " & rs!Regnro
                    StrSql = StrSql & " AND evenro = 2 "
                    objConn.Execute StrSql, , adExecuteNoRecords
                End If
            End If
            
            
            
        '========================================================================================
'            Call objFechasHoras.SumoHoras(rs_Dia!Fecha, rs_Dia!Hora, tol, Fecha_Tol, Hora_Tol)
'            ok = objFechasHoras.ValidarHora(Hora_Tol)
'
'            If (rs!Fecha = Fecha_Tol) And (rs!Hora > Hora_Tol) And (rs!Hora > rs_Dia!Hora) Then
'
'                StrSql = " UPDATE " & TTempWFTurno & " SET anornro = 5 WHERE regnro = " & rs!Regnro
'                StrSql = StrSql & " AND evenro = 2 "
'                objConn.Execute StrSql, , adExecuteNoRecords
'
'                If acumula = True Then
'                    If TolDtoLLT > tol Then
'                        If depurar Then
'                            Flog.writeline Espacios(Tabulador * 4) & "La tolerancia de Dto debe ser menor que la Tolerancia de LLT"
'                            Flog.writeline Espacios(Tabulador * 4) & "No se generará Anormalidad."
'                        End If
'                        tothoras = 0
'                        fecha_toldto = rs_Dia!Fecha
'                        hora_toldto = rs_Dia!Hora
'                    Else
'                        fecha_toldto = rs_Dia!Fecha
'                        hora_toldto = rs_Dia!Hora
'                        Call objFechasHoras.SumoHoras(fecha_toldto, hora_toldto, TolDtoLLT, fecres, horres)
'                        ok = objFechasHoras.ValidarHora(horres)
'                        fecha_toldto = fecres
'                        hora_toldto = horres
'                        Call objFechasHoras.RestaHs(fecres, horres, rs!Fecha, rs!Hora, Tdias, Thoras, Tmin)
'                        tothoras = (Tdias * 24) + (Thoras + (Tmin / 60))
'                    End If
'                    'FGZ - 12/10/2010 --------------------------------------------------------------------------
'
'                    Call objFechasHoras.Convertir_A_Hora(tothoras * 60, Hora_a_Red)
'                    Call objFechasHoras.Redondeo_Horas_Tipo(Hora_a_Red, ConhRedTipo, Horas_Tol)
'
'                    If Horas_Tol <= 0 Then
'                        GoTo Salida
'                    End If
'
'                    TotHorHHMM = CHoras(Horas_Tol, 60)
'
'                    StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
'                    "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
'                    "normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Horas_Tol & "," & _
'                    ConvFecha(Fecha_Tol) & "," & ConvFecha(Fecha_Tol) & "," & CInt(False) & "," & CInt(True) & "," & _
'                    NroTer & "," & TH_tol & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
'                    ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",'" & hora_toldto & "','" & rs!Hora & "'," & AN_tol & "," & AN_tol & ",' ')"
'                    objConn.Execute StrSql, , adExecuteNoRecords
'
'                    If depurar Then
'                        Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TH_tol & "- Cantidad: " & Horas_Tol & " hs."
'                    End If
'
'                    'FGZ - 12/10/2010 --------------------------------------------------------------------------
'                End If
'                fecha_toldto = rs_Dia!Fecha
'                hora_toldto = rs_Dia!Hora
'                Call objFechasHoras.SumoHoras(fecha_toldto, hora_toldto, toldto, fecres, horres)
'
'                ok = objFechasHoras.ValidarHora(horres)
'
'                If (rs!Fecha = fecres And rs!Hora > horres) And (acumula_dto) Then
'                    Call objFechasHoras.RestaHs(fecres, horres, rs!Fecha, rs!Hora, Tdias, Thoras, Tmin)
'                    tothoras = (Tdias * 24) + (Thoras + (Tmin / 60))
'                    If tothoras = 0 Then
'                        GoTo Salida
'                    Else
'                        Call Descontar_Horas(rs!Fecha, tothoras, 1)
'                    End If
'                End If
'            Else
'                If (rs!Fecha = Fecha_Tol) And (rs!Hora > rs_Dia!Hora) Then
'                    StrSql = " UPDATE " & TTempWFTurno & " SET fecha  = " & ConvFecha(rs_Dia!Fecha) & ", hora = '" & rs_Dia!Hora & "' WHERE regnro = " & rs!Regnro
'                    StrSql = StrSql & " AND evenro = 2 "
'                    objConn.Execute StrSql, , adExecuteNoRecords
'                End If
'            End If
        
        
        
        End If
    End If
salida:
    rs_Dia.MoveNext
Loop
'FGZ - 05/02/2015 -----------------------  MDF
If Movio_Par Then
    StrSql = " UPDATE " & TTempWFTurno & " SET par = par + 1"
    objConn.Execute StrSql, , adExecuteNoRecords
    If depurar Then
        Flog.writeline Espacios(Tabulador * 4) & "Primer par dentro del teorico restaurado"
    End If
End If


'FGZ - 05/02/2015 -----------------------


'Cierro todo antes de salir
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
    If rs_Dia.State = adStateOpen Then rs_Dia.Close
    Set rs_Dia = Nothing
End Sub





Public Sub Politica480(NroTer As Long, p_fecha As Date, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' ---------------------------------------------------------------------------------------------
' Descripcion: Generacion de justificaciones parciales variables
' Autor: ?
' Fecha:
' Ultima Mod: No Andaba Bien, tenia problemas de avance de recordsets y estaba muy enquilombada.
'             Muchas manos ...
' Autor: FGZ
' Fecha Ultima Mod: 06/10/2003
' Ultima Mod.: FGZ - 17/11/2005
' Descripcion: Levanta solo las licencias en estado AUTORIZADAS
' Ultima Mod.: FGZ - 22/12/2005 - Casi la volví a reescribir, mucha mezcla de metodos y ...
' Ultima Mod.: FGZ - 17/08/2006 - ...
' Ultima Mod.: FGZ - 02/10/2006 - Siempre inserto
' Ultima Mod.: FGZ - 15/06/2011 - se agregó control de firmas para las novedades horarias
' ----------------------------------------------------------------------------------------------
Dim Aux_Tipohora As Long
Dim Aux_Hora As Long
Dim Hora As String
Dim fecres As Date
Dim horres As String
Dim ok As Boolean
Dim VHora  As String
Dim VFecha As Date
Dim VCant  As Single
Dim Sigue As Boolean
Dim Aux_NroJustif As Long

Dim Jus_Hor_Desde As String
Dim Jus_Hor_Hasta As String
Dim Jus_Fec_Desde As Date
Dim Jus_Fec_Hasta As Date

Dim wf_Hcp As New ADODB.Recordset
Dim wf_Hcp2 As New ADODB.Recordset
Dim Rs_Justif As New ADODB.Recordset
Dim rs As New ADODB.Recordset
Dim TotHorHHMM As String
Dim Nov_Firmada As Boolean

'Comienzo del codigo
Call CreateTempTable(TTempWFJustif)

StrSql = "SELECT * FROM GTI_JUSTIFICACION WHERE ternro = " & NroTer
StrSql = StrSql & " AND juseltipo = 3 AND jusdesde <= " & ConvFecha(p_fecha)
StrSql = StrSql & " AND jushasta >= " & ConvFecha(p_fecha)
StrSql = StrSql & " ORDER BY juselorden "
If Rs_Justif.State = adStateOpen Then Rs_Justif.Close
OpenRecordset StrSql, Rs_Justif

Do While Not Rs_Justif.EOF

    Select Case Rs_Justif!jussigla
    Case "NOV":
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & " Justificacion: NOV"
        End If
        
        'FGZ - 15/06/2011 ------------------------------------------------------------------------
        If Firma_Novedades Then
            StrSql = "SELECT * FROM cysfirmas "
            StrSql = StrSql & " WHERE cysfirfin = -1"
            StrSql = StrSql & " AND cysfircodext = '" & Rs_Justif!juscodext & "' "
            StrSql = StrSql & " AND cystipnro = 7"
            OpenRecordset StrSql, rs
            If rs.EOF Then
                Nov_Firmada = False
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "Hay una novedad horaria NO aprobado(" & Rs_Justif!juscodext & "). Se descarta."
                End If
            Else
                Nov_Firmada = True
            End If
        Else
            Nov_Firmada = True
        End If
        
        If Nov_Firmada Then
            StrSql = " SELECT gti_tiponovedad.thnro FROM gti_novedad "
            StrSql = StrSql & " INNER JOIN gti_tiponovedad ON gti_tiponovedad.gtnovnro = gti_novedad.gtnovnro "
            StrSql = StrSql & " WHERE gti_novedad.gnovotoa = " & NroTer
            StrSql = StrSql & " AND gti_novedad.gnovnro = " & Rs_Justif!juscodext
            'FGZ - 19/05/2010 ------------ Control FT -------------
            StrSql = StrSql & " AND (gti_novedad.ft = 0 OR (gti_novedad.ft = -1 AND gti_novedad.ftap = -1))"
            'FGZ - 19/05/2010 ------------ Control FT -------------
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If rs.EOF Then
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "Hay problemas con la Novedad"
                End If
                GoTo CierroTodo
            Else
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "Tipo de Hora: " & Aux_Tipohora
                End If
                Aux_Tipohora = rs!thnro
            End If
    
            StrSql = "INSERT INTO " & TTempWFJustif & " (codext,desde,hasta,maxhoras,orden,"
            StrSql = StrSql & " nro,sigla,ternro,tjusnro,horadesde,horahasta,thnro)"
            StrSql = StrSql & " VALUES( "
            StrSql = StrSql & Rs_Justif!juscodext
            StrSql = StrSql & "," & ConvFecha(Rs_Justif!jusdesde)
            StrSql = StrSql & "," & ConvFecha(Rs_Justif!jushasta)
            StrSql = StrSql & "," & Rs_Justif!juselMaxHoras
            StrSql = StrSql & "," & Rs_Justif!juselorden
            StrSql = StrSql & "," & Rs_Justif!jusnro
            StrSql = StrSql & ",'" & Rs_Justif!jussigla & "'"
            StrSql = StrSql & "," & Rs_Justif!Ternro
            StrSql = StrSql & "," & Rs_Justif!tjusnro
            StrSql = StrSql & ",'" & Rs_Justif!jushoradesde & "'"
            StrSql = StrSql & ",'" & Rs_Justif!jushorahasta & "'"
            StrSql = StrSql & "," & Aux_Tipohora
            StrSql = StrSql & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Insertó en WF_Justif "
            End If
        End If
    Case "LIC"
        If depurar Then
            Flog.writeline " Justificacion: LIC"
        End If
        
        StrSql = "SELECT tipdia.thnro FROM emp_lic "
        StrSql = StrSql & " INNER JOIN tipdia ON emp_lic.tdnro = tipdia.tdnro "
        StrSql = StrSql & " WHERE emp_lic.empleado = " & NroTer
        StrSql = StrSql & " AND emp_lic.emp_licnro = " & Rs_Justif!juscodext
        StrSql = StrSql & " AND (emp_lic.licestnro = 2)" 'Autorizada
        'FGZ - 19/05/2010 ------------ Control FT -------------
        StrSql = StrSql & " AND (emp_lic.ft = 0 OR (emp_lic.ft = -1 AND emp_lic.ftap = -1))"
        'FGZ - 19/05/2010 ------------ Control FT -------------
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
            If depurar Then
                Flog.writeline "Hay problemas con la Licencia"
            End If
            GoTo CierroTodo
        Else
            If depurar Then
                Flog.writeline "Tipo de Hora: " & Aux_Tipohora
            End If
            Aux_Tipohora = rs!thnro
        End If
        
        StrSql = "INSERT INTO " & TTempWFJustif & " (codext,desde,hasta,maxhoras,orden,"
        StrSql = StrSql & " nro,sigla,ternro,tjusnro,horadesde,horahasta,thnro) "
        StrSql = StrSql & " VALUES("
        StrSql = StrSql & Rs_Justif!juscodext
        StrSql = StrSql & "," & ConvFecha(Rs_Justif!jusdesde)
        StrSql = StrSql & "," & ConvFecha(Rs_Justif!jushasta)
        StrSql = StrSql & "," & Rs_Justif!juselMaxHoras
        StrSql = StrSql & "," & Rs_Justif!juselorden
        StrSql = StrSql & "," & Rs_Justif!jusnro
        StrSql = StrSql & ",'" & Rs_Justif!jussigla & "'"
        StrSql = StrSql & "," & Rs_Justif!Ternro
        StrSql = StrSql & "," & Rs_Justif!tjusnro
        StrSql = StrSql & ",'" & Rs_Justif!jushoradesde & "'"
        StrSql = StrSql & ",'" & Rs_Justif!jushorahasta & "'"
        StrSql = StrSql & "," & Aux_Tipohora
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Insertó en WF_Justif"
        End If
    'FGZ - 14/08/2008 - Le agregué este case por las justificaciones automaticas de la politica 400
    Case "ALM":
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & " Justificacion: NOV Automatica de Almuerzo"
        End If
        
        StrSql = " SELECT gti_tiponovedad.thnro FROM gti_novedad "
        StrSql = StrSql & " INNER JOIN gti_tiponovedad ON gti_tiponovedad.gtnovnro = gti_novedad.gtnovnro "
        StrSql = StrSql & " WHERE gti_novedad.gnovotoa = " & NroTer
        StrSql = StrSql & " AND gti_novedad.gnovnro = " & Rs_Justif!juscodext
        'FGZ - 19/05/2010 ------------ Control FT -------------
        StrSql = StrSql & " AND (gti_novedad.ft = 0 OR (gti_novedad.ft = -1 AND gti_novedad.ftap = -1))"
        'FGZ - 19/05/2010 ------------ Control FT -------------
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Hay problemas con la Novedad"
            End If
            GoTo CierroTodo
        Else
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Tipo de Hora: " & Aux_Tipohora
            End If
            Aux_Tipohora = rs!thnro
        End If

        StrSql = "INSERT INTO " & TTempWFJustif & " (codext,desde,hasta,maxhoras,orden,"
        StrSql = StrSql & " nro,sigla,ternro,tjusnro,horadesde,horahasta,thnro)"
        StrSql = StrSql & " VALUES( "
        StrSql = StrSql & Rs_Justif!juscodext
        StrSql = StrSql & "," & ConvFecha(Rs_Justif!jusdesde)
        StrSql = StrSql & "," & ConvFecha(Rs_Justif!jushasta)
        StrSql = StrSql & "," & Rs_Justif!juselMaxHoras
        StrSql = StrSql & "," & Rs_Justif!juselorden
        StrSql = StrSql & "," & Rs_Justif!jusnro
        StrSql = StrSql & ",'" & Rs_Justif!jussigla & "'"
        StrSql = StrSql & "," & Rs_Justif!Ternro
        StrSql = StrSql & "," & Rs_Justif!tjusnro
        StrSql = StrSql & ",'" & Rs_Justif!jushoradesde & "'"
        StrSql = StrSql & ",'" & Rs_Justif!jushorahasta & "'"
        StrSql = StrSql & "," & Aux_Tipohora
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Insertó en WF_Justif "
        End If
    Case Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "La justificacion no es ni NOV ni LIC : " & Rs_Justif!jussigla
        End If
    End Select
    
    Rs_Justif.MoveNext
Loop

StrSql = "SELECT * FROM gti_horcumplido WHERE ternro = " & NroTer
StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
StrSql = StrSql & " AND (normnro IS NOT NULL)"
StrSql = StrSql & " AND (normnro2 IS NOT NULL)"
'FGZ - 26/12/2005
'esto podria ser configurable por ahora lo pongo fijo
'StrSql = StrSql & " ORDER BY thnro "
'FGZ - 02/10/2006 - Ordeno por hora en que se generó
StrSql = StrSql & " AND (jusnro IS NULL)"
StrSql = StrSql & " AND (jusnro2 IS NULL)"
StrSql = StrSql & " ORDER BY horhoradesde, horhorahasta, thnro "
If rs.State = adStateOpen Then rs.Close
OpenRecordset StrSql, rs

'Si No Hay horas a Justificar ==> Termino
Sigue = True
If Not rs.EOF Then
    StrSql = "SELECT * FROM " & TTempWFJustif
    StrSql = StrSql & " ORDER BY orden"
    If Rs_Justif.State = adStateOpen Then Rs_Justif.Close
    OpenRecordset StrSql, Rs_Justif
    
    'Miemtras tenga horas para justificar y tenga Justificaciones
    Do While Not Rs_Justif.EOF And Not rs.EOF And Sigue
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "justificacion Tipo de Hora : " & Rs_Justif!thnro
        End If
        
        If Rs_Justif!thnro <> 0 Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "rs.Horcant: " & rs!horcant & " y rs_justif!maxhoras: " & Rs_Justif!MaxHoras
            End If
            
            'FGZ - 02/10/2006 - Esto esta acumulando mal
            'Total_Hs_Justificadas = Total_Hs_Justificadas + rs_Justif!maxhoras
            Total_Hs_Justificadas = Rs_Justif!MaxHoras
            
            'caso 1: Justificacion Menor que las Horas generadas
            If rs!horcant > Rs_Justif!MaxHoras Then

                StrSql = "SELECT * FROM GTI_HORCUMPLIDO WHERE hornro = " & rs!hornro
                If wf_Hcp.State = adStateOpen Then wf_Hcp.Close
                OpenRecordset StrSql, wf_Hcp
                'wf_Hcp.Open StrSql, objConn
                If Not wf_Hcp.EOF Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "wf_hcp!horcant= " & wf_Hcp!horcant
                        Flog.writeline Espacios(Tabulador * 2) & "rs_justif!maxhoras= " & Rs_Justif!MaxHoras
                    End If
                    
                    VCant = CSng("0" & wf_Hcp!horcant) - Rs_Justif!MaxHoras
                    
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "wf_hcp!horcant - rs_justif!maxhoras = " & VCant
                    End If
                    
                    Call Calcula_Hora(VCant, wf_Hcp!hordesde, VHora, VFecha)
                    If Not EsNulo(wf_Hcp!horhorahasta) Then
                        Call objFechasHoras.RestaXHoras(wf_Hcp!horfecrep, wf_Hcp!horhorahasta, VHora, fecres, horres)
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 2) & "ValidarHora(horres): " & horres
                        End If
                        ok = objFechasHoras.ValidarHora(horres)
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 2) & "OK: " & ok
                        End If
                    End If
                    
                    'FGZ - 14/08/2008 - calculo la hora desde y hasta de la justificacion a insertar
                    Jus_Fec_Hasta = fecres
                    Jus_Hor_Hasta = horres
                    Call objFechasHoras.RestaXHoras(wf_Hcp!horfecrep, Jus_Hor_Hasta, Total_Hs_Justificadas, Jus_Fec_Desde, Jus_Hor_Desde)
                    ok = objFechasHoras.ValidarHora(Jus_Hor_Desde)
                    'FGZ - 14/08/2008 - calculo la hora desde y hasta de la justificacion a insertar
                    
                    TotHorHHMM = CHoras(VCant, 60)
                    
                    StrSql = "UPDATE gti_horcumplido SET horcant = " & Round(VCant, Presicion_HC)
                    StrSql = StrSql & ", horas = " & TotHorHHMM
                    StrSql = StrSql & ", horhoradesde = '" & horres & "'"
                    StrSql = StrSql & " WHERE hornro = " & rs!hornro
                    objConn.Execute StrSql, adExecuteNoRecords
                    
                    'Actualizo el rs
                    Flog.writeline Espacios(Tabulador * 2) & "Actualizó gti_horcumplido " & Round(VCant, Presicion_HC)
                    StrSql = "SELECT * FROM gti_horcumplido WHERE ternro = " & NroTer
                    StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
                    StrSql = StrSql & " AND (normnro IS NOT NULL)"
                    StrSql = StrSql & " AND (normnro2 IS NOT NULL)"
                    If rs.State = adStateOpen Then rs.Close
                    OpenRecordset StrSql, rs
                    rs.MoveFirst
                End If
                'wf_hcp.UpdateBatch
                If wf_Hcp.State = adStateOpen Then wf_Hcp.Close
                
' FGZ - 02/10/2006 - Siempre inserto
'                StrSql = "SELECT * FROM gti_horcumplido WHERE ternro = " & NroTer
'                StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
'                StrSql = StrSql & " AND thnro = " & rs_Justif!thnro
'                If wf_Hcp2.State = adStateOpen Then wf_Hcp2.Close
'                OpenRecordset StrSql, wf_Hcp2
'                'wf_hcp2.Open StrSql, objConn, adOpenKeyset, adLockOptimistic
'
'                'wf_Hcp2.Open StrSql, objConn
'                ' Si no hay uno que cumpla con las condiciones lo creo
'
'                If wf_Hcp2.EOF Then
'                    'wf_hcp2.AddNew
'                    'Call ValidarTipoDeHora(rs_justif!thnro, nro_turno, tipo_hora)
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "INSERT"
                    End If
                    
                    TotHorHHMM = CHoras(Rs_Justif!MaxHoras, 60)
                    
                    If Trim(Rs_Justif!sigla) = "ALM" Then
                        If Rs_Justif!Orden = 1 Then
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                            StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                            StrSql = StrSql & "horfecrep,horfecgen,normnro,normnro2,horestado) VALUES ("
                            StrSql = StrSql & TotHorHHMM
                            StrSql = StrSql & "," & Round(Rs_Justif!MaxHoras, Presicion_HC)
                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                            StrSql = StrSql & ",'" & Jus_Hor_Desde & "'"
                            StrSql = StrSql & ",'" & Jus_Hor_Hasta & "'"
                            StrSql = StrSql & ",0,-1"
                            StrSql = StrSql & "," & Empleado.Ternro
                            StrSql = StrSql & "," & Rs_Justif!thnro
                            StrSql = StrSql & "," & Empleado.Legajo
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & ",7,7"
                            StrSql = StrSql & ",' '"
                            StrSql = StrSql & ")"
                        Else
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                            StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                            StrSql = StrSql & "horfecrep,horfecgen,horestado) VALUES ("
                            StrSql = StrSql & TotHorHHMM
                            StrSql = StrSql & "," & Round(Rs_Justif!MaxHoras, Presicion_HC)
                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                            StrSql = StrSql & ",'" & Jus_Hor_Desde & "'"
                            StrSql = StrSql & ",'" & Jus_Hor_Hasta & "'"
                            StrSql = StrSql & ",0,-1"
                            StrSql = StrSql & "," & Empleado.Ternro
                            StrSql = StrSql & "," & Rs_Justif!thnro
                            StrSql = StrSql & "," & Empleado.Legajo
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & ",' '"
                            StrSql = StrSql & ")"
                        End If
                    Else
                        StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                        StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                        StrSql = StrSql & "horfecrep,horfecgen,horestado) VALUES ("
                        StrSql = StrSql & TotHorHHMM
                        StrSql = StrSql & "," & Round(Rs_Justif!MaxHoras, Presicion_HC)
                        StrSql = StrSql & "," & ConvFecha(p_fecha)
                        StrSql = StrSql & "," & ConvFecha(p_fecha)
                        StrSql = StrSql & ",'" & Rs_Justif!HoraDesde & "'"
                        StrSql = StrSql & ",'" & Rs_Justif!HoraHasta & "'"
                        StrSql = StrSql & ",0,-1"
                        StrSql = StrSql & "," & Empleado.Ternro
                        StrSql = StrSql & "," & Rs_Justif!thnro
                        StrSql = StrSql & "," & Empleado.Legajo
                        StrSql = StrSql & "," & ConvFecha(p_fecha)
                        StrSql = StrSql & "," & ConvFecha(p_fecha)
                        StrSql = StrSql & ",' '"
                        StrSql = StrSql & ")"
                    End If
'                Else
'                    If depurar Then
'                        Flog.writeline Espacios(Tabulador * 2) & "UPDATE"
'                    End If
'
'                    StrSql = "UPDATE gti_horcumplido SET horcant = " & Round(CSng("0" & wf_Hcp2!horcant) + rs_Justif!maxhoras, Presicion_HC)
'                    StrSql = StrSql & ",hordesde = " & ConvFecha(p_fecha)
'                    StrSql = StrSql & ",horhasta = " & ConvFecha(p_fecha)
'                    StrSql = StrSql & ",horhoradesde ='" & rs_Justif!HoraDesde & "'"
'                    StrSql = StrSql & ",horhorahasta ='" & rs_Justif!HoraHasta & "'"
'                    StrSql = StrSql & ",hormanual = 0"
'                    StrSql = StrSql & ",horvalido = -1"
'                    StrSql = StrSql & ",ternro = " & Empleado.Ternro
'                    StrSql = StrSql & ",thnro = " & rs_Justif!thnro
'                    StrSql = StrSql & ",empleg = " & Empleado.Legajo
'                    StrSql = StrSql & ",horfecrep = " & ConvFecha(p_fecha)
'                    StrSql = StrSql & ",horestado = ' '"
'                    StrSql = StrSql & " WHERE hornro = " & wf_Hcp2!hornro
'                End If
                
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "SQL " & StrSql
                End If
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "Ejecutó bien "
                End If
                
                'Grabo y cierro el recordset
                If wf_Hcp2.State = adStateOpen Then wf_Hcp2.Close
                
                'DELETE wf-justif.
                StrSql = "DELETE FROM " & TTempWFJustif & " WHERE nro = " & Rs_Justif!nro
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "Borra de WF_Justif"
                End If
                
                ' FGZ  - 01/09/2003
                ' NO Avanzo el rs porque me quedó saldo
                ' Pero como Actualicé tengo que leer nuevamente en rs
                
                ' rs.MoveNext
                
                ' FGZ  - 01/09/2003
                ' Avanzo el wfJustif porque Eliminé de wf_Justif
                Rs_Justif.MoveNext
                
            Else 'If rs!horcant > rs_justif!maxhoras Then
                ' 2_ Justificacion = que las Horas generadas
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "rs!horcant no es > rs_justif!maxhoras"
                End If
                
                'FGZ - 14/08/2008 - calculo la hora desde y hasta de la justificacion a insertar
                Jus_Fec_Desde = rs!hordesde
                Jus_Hor_Desde = rs!horhoradesde
                Jus_Fec_Hasta = rs!horhasta
                Jus_Hor_Hasta = rs!horhorahasta
                'FGZ - 14/08/2008 - calculo la hora desde y hasta de la justificacion a insertar
                
                If rs!horcant = Rs_Justif!MaxHoras Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "rs!horcant = rs_justif!maxhoras"
                    End If
                    'FIND FIRST wf-hcp WHERE RECID(wf-hcp) = RECID(gti_horcumplido) EXCLUSIVE-LOCK NO-ERROR.
                    StrSql = "SELECT * FROM gti_horcumplido WHERE hornro = " & rs!hornro
                    If wf_Hcp.State = adStateOpen Then wf_Hcp.Close
                    OpenRecordset StrSql, wf_Hcp
                    
                    'If wf_Hcp.State = adStateOpen Then wf_Hcp.Close
                    'wf_Hcp.Open StrSql, objConn
                    
                    StrSql = "DELETE FROM gti_horcumplido WHERE hornro = " & rs!hornro
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Borra de gti_horcumplido tipo de hora: " & rs!hornro
                    End If
                    
                    StrSql = "SELECT * FROM gti_horcumplido "
                    StrSql = StrSql & " WHERE ternro = " & NroTer
                    StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
                    StrSql = StrSql & " AND thnro = " & Rs_Justif!thnro
                    If wf_Hcp2.State = adStateOpen Then wf_Hcp2.Close
                    OpenRecordset StrSql, wf_Hcp2
                    'wf_Hcp2.Open StrSql, objConn
        
                    ' Si no hay uno que cumpla con las condiciones lo creo
                    If wf_Hcp2.EOF Then
                        'wf_hcp2.AddNew
                        'Call ValidarTipoDeHora(rs_justif!thnro, nro_turno, tipo_hora)
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 2) & "Inserta "
                        End If
                        
                        TotHorHHMM = CHoras(Rs_Justif!MaxHoras, 60)
                        If Trim(Rs_Justif!sigla) = "ALM" Then
                            If Rs_Justif!Orden = 1 Then
                                'Exceso de Almuerzo ==> genero anormalidad
                                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                                StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                                StrSql = StrSql & "horfecrep,horfecgen,normnro,normnro2,horestado) VALUES ("
                                StrSql = StrSql & TotHorHHMM
                                StrSql = StrSql & "," & Round(Rs_Justif!MaxHoras, Presicion_HC)
                                StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                                StrSql = StrSql & "," & ConvFecha(Jus_Fec_Hasta)
                                StrSql = StrSql & ",'" & Jus_Hor_Desde & "'"
                                StrSql = StrSql & ",'" & Jus_Hor_Hasta & "'"
                                StrSql = StrSql & ",0,-1"
                                StrSql = StrSql & "," & Empleado.Ternro
                                StrSql = StrSql & "," & Rs_Justif!thnro
                                StrSql = StrSql & "," & Empleado.Legajo
                                StrSql = StrSql & "," & ConvFecha(p_fecha)
                                StrSql = StrSql & "," & ConvFecha(p_fecha)
                                StrSql = StrSql & ",7,7"
                                StrSql = StrSql & ",' '"
                                StrSql = StrSql & ")"
                            Else
                                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                                StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                                StrSql = StrSql & "horfecrep,horfecgen,horestado) VALUES ("
                                StrSql = StrSql & TotHorHHMM
                                StrSql = StrSql & "," & Round(Rs_Justif!MaxHoras, Presicion_HC)
                                StrSql = StrSql & "," & ConvFecha(p_fecha)
                                StrSql = StrSql & "," & ConvFecha(p_fecha)
                                StrSql = StrSql & ",'" & Rs_Justif!HoraDesde & "'"
                                StrSql = StrSql & ",'" & Rs_Justif!HoraHasta & "'"
                                StrSql = StrSql & ",0,-1"
                                StrSql = StrSql & "," & Empleado.Ternro
                                StrSql = StrSql & "," & Rs_Justif!thnro
                                StrSql = StrSql & "," & Empleado.Legajo
                                StrSql = StrSql & "," & ConvFecha(p_fecha)
                                StrSql = StrSql & "," & ConvFecha(p_fecha)
                                StrSql = StrSql & ",' '"
                                StrSql = StrSql & ")"
                            End If
                        Else
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                            StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                            StrSql = StrSql & "horfecrep,horfecgen,horestado) VALUES ("
                            StrSql = StrSql & TotHorHHMM
                            StrSql = StrSql & "," & Round(Rs_Justif!MaxHoras, Presicion_HC)
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & ",'" & Rs_Justif!HoraDesde & "'"
                            StrSql = StrSql & ",'" & Rs_Justif!HoraHasta & "'"
                            StrSql = StrSql & ",0,-1"
                            StrSql = StrSql & "," & Empleado.Ternro
                            StrSql = StrSql & "," & Rs_Justif!thnro
                            StrSql = StrSql & "," & Empleado.Legajo
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & ",' '"
                            StrSql = StrSql & ")"
                        End If
                    Else
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 2) & "Actualiza"
                        End If
                        
                        TotHorHHMM = CHoras(CSng("0" & wf_Hcp2!horcant) + Rs_Justif!MaxHoras, 60)
                        
                        StrSql = "UPDATE gti_horcumplido SET horcant = " & Round(CSng("0" & wf_Hcp2!horcant) + Rs_Justif!MaxHoras, Presicion_HC)
                        StrSql = StrSql & ",horas = " & TotHorHHMM
                        StrSql = StrSql & ",hordesde = " & ConvFecha(p_fecha)
                        StrSql = StrSql & ",horhasta = " & ConvFecha(p_fecha)
                        StrSql = StrSql & ",horhoradesde='" & Rs_Justif!HoraDesde & "'"
                        StrSql = StrSql & ",horhorahasta='" & Rs_Justif!HoraHasta & "'"
                        StrSql = StrSql & ",hormanual = 0"
                        StrSql = StrSql & ",horvalido = -1"
                        StrSql = StrSql & ",ternro = " & Empleado.Ternro
                        StrSql = StrSql & ",thnro = " & Rs_Justif!thnro
                        StrSql = StrSql & ",empleg = " & Empleado.Legajo
                        StrSql = StrSql & ",horfecrep = " & ConvFecha(p_fecha)
                        StrSql = StrSql & ",horfecgen = " & ConvFecha(p_fecha)
                        StrSql = StrSql & ",horestado=' '"
                        StrSql = StrSql & " WHERE hornro = " & wf_Hcp2!hornro
                    End If
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "SQL:" & StrSql
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Ejecuto bien"
                    End If
                    
                    wf_Hcp2.Close
                    
                    StrSql = "DELETE FROM " & TTempWFJustif & " where nro = " & Rs_Justif!nro
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Borra de WF_justif"
                    End If
                    
                    ' Avanzo el rs porque eliminé el registro de GTI_HORCUMPLIDO
                    rs.MoveNext
                    
                    ' Avanzo el wfJustif porque Eliminé de wf_Justif
                    Rs_Justif.MoveNext
                    
                Else ' If rs!horcant = rs_justif!maxhoras Then
                    ' 3_ Justificacion Mayor que las Horas generadas
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "rs!horcant no es = rs_justif!maxhoras"
                    End If
                    If rs!horcant < Rs_Justif!MaxHoras Then
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 2) & "rs!horcant < rs_justif!maxhoras"
                            End If
                            
                            'FGZ - 17/08/2006 -------Siempre inserto -----------------------
'                            StrSql = "SELECT * FROM gti_horcumplido"
'                            StrSql = StrSql & " WHERE ternro = " & NroTer
'                            StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
'                            StrSql = StrSql & " AND thnro = " & rs_Justif!thnro
'                            If wf_Hcp2.State = adStateOpen Then wf_Hcp2.Close
'                            OpenRecordset StrSql, wf_Hcp2
'                            'wf_Hcp2.Open StrSql, objConn
'
'                            ' Si no hay uno que cumpla con las condiciones lo creo
'                            If wf_Hcp2.EOF Then
                                If depurar Then
                                    Flog.writeline Espacios(Tabulador * 2) & "Inserta"
                                End If
                                
                                TotHorHHMM = CHoras(rs!horcant, 60)
                                
                                If Trim(Rs_Justif!sigla) = "ALM" Then
                                    If Rs_Justif!Orden = 1 Then
                                        'Exceso de Almuerzo ==> genero anormalidad
                                        StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                                        StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                                        StrSql = StrSql & "horfecrep,horfecgen,normnro,normnro2,horestado) VALUES ("
                                        StrSql = StrSql & TotHorHHMM
                                        StrSql = StrSql & "," & Round(rs!horcant, Presicion_HC)
                                        StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                                        StrSql = StrSql & "," & ConvFecha(Jus_Fec_Hasta)
                                        StrSql = StrSql & ",'" & Jus_Hor_Desde & "'"
                                        StrSql = StrSql & ",'" & Jus_Hor_Hasta & "'"
                                        StrSql = StrSql & ",0,-1"
                                        StrSql = StrSql & "," & Empleado.Ternro
                                        StrSql = StrSql & "," & Rs_Justif!thnro
                                        StrSql = StrSql & "," & Empleado.Legajo
                                        StrSql = StrSql & "," & ConvFecha(p_fecha)
                                        StrSql = StrSql & "," & ConvFecha(p_fecha)
                                        StrSql = StrSql & ",7,7"
                                        StrSql = StrSql & ",' '"
                                        StrSql = StrSql & ")"
                                    Else
                                        StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                                        StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                                        StrSql = StrSql & "horfecrep,horfecgen,horestado) VALUES ("
                                        StrSql = StrSql & TotHorHHMM
                                        StrSql = StrSql & "," & Round(rs!horcant, Presicion_HC)
                                        StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                                        StrSql = StrSql & "," & ConvFecha(Jus_Fec_Hasta)
                                        StrSql = StrSql & ",'" & Jus_Hor_Desde & "'"
                                        StrSql = StrSql & ",'" & Jus_Hor_Hasta & "'"
                                        StrSql = StrSql & ",0,-1"
                                        StrSql = StrSql & "," & Empleado.Ternro
                                        StrSql = StrSql & "," & Rs_Justif!thnro
                                        StrSql = StrSql & "," & Empleado.Legajo
                                        StrSql = StrSql & "," & ConvFecha(p_fecha)
                                        StrSql = StrSql & "," & ConvFecha(p_fecha)
                                        StrSql = StrSql & ",' '"
                                        StrSql = StrSql & ")"
                                    End If
                                Else
                                    StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                                    StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                                    StrSql = StrSql & "horfecrep,horfecgen,horestado) VALUES ("
                                    StrSql = StrSql & TotHorHHMM
                                    StrSql = StrSql & "," & Round(rs!horcant, Presicion_HC)
                                    StrSql = StrSql & "," & ConvFecha(p_fecha)
                                    StrSql = StrSql & "," & ConvFecha(p_fecha)
                                    StrSql = StrSql & ",'" & Rs_Justif!HoraDesde & "'"
                                    StrSql = StrSql & ",'" & Rs_Justif!HoraHasta & "'"
                                    StrSql = StrSql & ",0,-1"
                                    StrSql = StrSql & "," & Empleado.Ternro
                                    StrSql = StrSql & "," & Rs_Justif!thnro
                                    StrSql = StrSql & "," & Empleado.Legajo
                                    StrSql = StrSql & "," & ConvFecha(p_fecha)
                                    StrSql = StrSql & "," & ConvFecha(p_fecha)
                                    StrSql = StrSql & ",' '"
                                    StrSql = StrSql & ")"
                                End If
'                            Else
'                                Flog.writeline Espacios(Tabulador * 2) & "Actualiza"
'
'                                StrSql = "UPDATE gti_horcumplido SET horcant = " & Round(CSng("0" & wf_Hcp2!horcant) + rs!horcant, Presicion_HC)
'                                StrSql = StrSql & ",hordesde = " & ConvFecha(p_fecha)
'                                StrSql = StrSql & ", horhasta = " & ConvFecha(p_fecha)
'                                StrSql = StrSql & ",horhoradesde = '" & rs_Justif!HoraDesde & "'"
'                                StrSql = StrSql & ",horhorahasta = '" & rs_Justif!HoraHasta & "'"
'                                StrSql = StrSql & ",hormanual = 0"
'                                StrSql = StrSql & ",horvalido = -1"
'                                StrSql = StrSql & ",ternro = " & Empleado.Ternro
'                                StrSql = StrSql & ",thnro = " & rs_Justif!thnro
'                                StrSql = StrSql & ",empleg = " & Empleado.Legajo
'                                StrSql = StrSql & ",horfecrep = " & ConvFecha(p_fecha)
'                                StrSql = StrSql & ",horestado=' '"
'                                StrSql = StrSql & " WHERE hornro = " & wf_Hcp2!hornro
'                            End If
                             'FGZ - 17/08/2006 -------Siempre inserto -----------------------
                             If depurar Then
                                Flog.writeline Espacios(Tabulador * 2) & "SQL: " & StrSql
                             End If
                            objConn.Execute StrSql, , adExecuteNoRecords
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 2) & "Ejecutó Bien"
                            End If
                            
                            StrSql = "UPDATE " & TTempWFJustif & " SET maxhoras = " & Rs_Justif!MaxHoras - rs!horcant
                            StrSql = StrSql & " WHERE nro = " & Rs_Justif!nro
                            objConn.Execute StrSql, , adExecuteNoRecords
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 2) & "Actualizó WF_Justif"
                            End If
                            
                            'FGZ - 17/08/2006 - debo actualizar el WF_Justif -------------
                            Aux_NroJustif = Rs_Justif!nro
                            StrSql = "SELECT * FROM " & TTempWFJustif
                            StrSql = StrSql & " ORDER BY orden"
                            OpenRecordset StrSql, Rs_Justif
                            If Not Rs_Justif.EOF Then
                                'Ciclar hasta encontrar el registro en que estaba
                                Do Until Rs_Justif!nro = Aux_NroJustif
                                    Rs_Justif.MoveNext
                                Loop
                            End If
                            'FGZ - 17/08/2006 - debo actualizar el WF_Justif -------------
                            
                            StrSql = "DELETE FROM gti_horcumplido WHERE hornro = " & rs!hornro
                            objConn.Execute StrSql, , adExecuteNoRecords
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 2) & "Borro de gti_horcumplido"
                            End If
                            
                            ' Avanzo el rs porque eliminé el registro de GTI_HORCUMPLIDO
                            rs.MoveNext
                            
                            ' No Avanzo el wfJustif porque me quedó saldo a justificar
                            ' rs_justif.MoveNext
                            
                    End If ' If rs!horcant < rs_justif!maxhoras Then
                End If ' If rs!horcant = rs_justif!maxhoras Then
            End If 'If rs!horcant > rs_justif!maxhoras Then
        
        Else 'If rs_justif!thnro <> 0 Then
            Rs_Justif.MoveNext
        End If
    
        ' Si no tengo mas Justificaciones o No tengo mas horas a Justificar ==> NO Continuo
        If rs.EOF Or Rs_Justif.EOF Then
            Sigue = False
        End If
    
    Loop 'wfJustif
    
End If
'Loop 'rs (GTI_HORCUMPLIDO)


CierroTodo:
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
    
'    If rs_Justif.State = adStateOpen Then
'        rs_Justif.UpdateBatch
'        rs_Justif.Close
'    End If
    If Rs_Justif.State = adStateOpen Then Rs_Justif.Close
    Set Rs_Justif = Nothing
    
    Call BorrarTempTable(TTempWFJustif)
    
'    StrSql = "DROP TABLE " & TTempWFJustif
'    objConn.Execute StrSql, adExecuteNoRecords
End Sub



Public Sub Politica480_old(NroTer As Long, p_fecha As Date, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' ---------------------------------------------------------------------
' Descripcion: Generacion de justificaciones parciales variables
' Autor: ?
' Fecha:
' Ultima Mod: No Andaba Bien, tenia problemas de avance de recordsets y estaba muy enquilombada.
'             Muchas manos ...
' Autor: FGZ
' Fecha Ultima Mod: 06/10/2003
' Ultima Mod.: FGZ - 17/11/2005
' Descripcion: Levanta solo las licencias en estado AUTORIZADAS
' ---------------------------------------------------------------------
Dim Aux_Tipohora As Integer
Dim Aux_Hora As Integer
Dim Hora As String
Dim fecres As Date
Dim horres As String
Dim ok As Boolean
Dim VHora  As String
Dim VFecha As Date
Dim VCant  As Single
'Buffers
Dim wf_Hcp As New ADODB.Recordset
Dim wf_Hcp2 As New ADODB.Recordset
Dim Rs_Justif As New ADODB.Recordset
Dim rs As New ADODB.Recordset

Dim Sigue As Boolean



'Call CreateTempWFJustif
Call CreateTempTable(TTempWFJustif)

StrSql = "SELECT * FROM GTI_JUSTIFICACION WHERE ternro = " & NroTer & _
" AND juseltipo = 3 AND jusdesde <= " & ConvFecha(p_fecha) & " AND " & _
" jushasta >= " & ConvFecha(p_fecha) & " ORDER BY juselorden"

If Rs_Justif.State = adStateOpen Then Rs_Justif.Close
'rs_justif.Open StrSql, objConn, adOpenKeyset, adLockOptimistic
OpenRecordset StrSql, Rs_Justif

Do While Not Rs_Justif.EOF

    Select Case Rs_Justif!jussigla
    
    Case "NOV"
        Flog.writeline Espacios(Tabulador * 2) & " Justificacion: NOV"
        StrSql = "SELECT gti_tiponovedad.thnro FROM gti_novedad " & _
                 " INNER JOIN gti_tiponovedad ON gti_tiponovedad.gtnovnro = gti_novedad.gtnovnro " & _
                 " WHERE gti_novedad.gnovotoa = " & NroTer & _
                 " AND gti_novedad.gnovnro = " & Rs_Justif!juscodext
        
        OpenRecordset StrSql, rs
        If rs.EOF Then
            Flog.writeline Espacios(Tabulador * 2) & "Hay problemas con la Novedad"
            GoTo CierroTodo
        Else
            Flog.writeline Espacios(Tabulador * 2) & "Tipo de Hora: " & Aux_Tipohora
            Aux_Tipohora = rs!thnro
        End If

        StrSql = "INSERT INTO " & TTempWFJustif & " (codext,desde,hasta,maxhoras,orden," & _
        "nro,sigla,ternro,tjusnro,horadesde,horahasta,thnro) " & _
        " VALUES(" & Rs_Justif!juscodext & "," & ConvFecha(Rs_Justif!jusdesde) & _
        "," & ConvFecha(Rs_Justif!jushasta) & _
        "," & Rs_Justif!juselMaxHoras & "," & Rs_Justif!juselorden & "," & Rs_Justif!jusnro & ",'" & Rs_Justif!jussigla & _
        "'," & Rs_Justif!Ternro & "," & Rs_Justif!tjusnro & ",'" & _
        Rs_Justif!jushoradesde & "','" & _
        Rs_Justif!jushorahasta & "'," & Aux_Tipohora & ")"
        
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline Espacios(Tabulador * 2) & "Insertó en WF_Justif "

    Case "LIC"
        Flog.writeline " Justificacion: LIC"
        StrSql = "SELECT tipdia.thnro FROM emp_lic "
        StrSql = StrSql & " INNER JOIN tipdia ON emp_lic.tdnro = tipdia.tdnro "
        StrSql = StrSql & " WHERE emp_lic.empleado = " & NroTer
        StrSql = StrSql & " AND emp_lic.emp_licnro = " & Rs_Justif!juscodext
        'FGZ - 17/11/2005
        StrSql = StrSql & " AND (emp_lic.licestnro = 2)" 'Autorizada
        OpenRecordset StrSql, rs
        If rs.EOF Then
            Flog.writeline "Hay problemas con la Licencia"
            GoTo CierroTodo
        Else
            Flog.writeline "Tipo de Hora: " & Aux_Tipohora
            Aux_Tipohora = rs!thnro
        End If
        
        StrSql = "INSERT INTO " & TTempWFJustif & " (codext,desde,hasta,maxhoras,orden," & _
        "nro,sigla,ternro,tjusnro,horadesde,horahasta,thnro) " & _
        " VALUES(" & Rs_Justif!juscodext & "," & ConvFecha(Rs_Justif!jusdesde) & _
        "," & ConvFecha(Rs_Justif!jushasta) & _
        "," & Rs_Justif!juselMaxHoras & "," & Rs_Justif!juselorden & "," & Rs_Justif!jusnro & ",'" & Rs_Justif!jussigla & _
        "'," & Rs_Justif!Ternro & "," & Rs_Justif!tjusnro & ",'" & _
        Rs_Justif!jushoradesde & "','" & _
        Rs_Justif!jushorahasta & "'," & Aux_Tipohora & ")"
        
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline Espacios(Tabulador * 2) & "Insertó en WF_Justif"
    Case Else
        Flog.writeline Espacios(Tabulador * 2) & "La justificacion no es ni NOV ni LIC : " & Rs_Justif!jussigla
    End Select
    
    Rs_Justif.MoveNext

Loop

StrSql = "SELECT * FROM gti_horcumplido WHERE ternro = " & NroTer & _
" AND horfecrep = " & ConvFecha(p_fecha) & " AND (normnro IS NOT NULL)" & _
" AND (normnro2 IS NOT NULL)"
'" ORDER BY juselorden"
OpenRecordset StrSql, rs


'rs_Justif.UpdateBatch
'If rs_Justif.State = adStateOpen Then rs_Justif.Close


'Do While Not (rs.EOF)

Sigue = True
' FGZ -  01/09/2003
' Si No Hay horas a Justificar ==> Termino
If Not rs.EOF Then
    StrSql = "SELECT * FROM " & TTempWFJustif & " ORDER BY orden"
 
    If Rs_Justif.State = adStateOpen Then Rs_Justif.Close
    Rs_Justif.Open StrSql, objConn, adOpenKeyset, adLockOptimistic
    ' OpenRecordset StrSql, rs_justif
    
    ' Miemtras tenga horas para justificar y tenga Justificaciones
    Do While Not Rs_Justif.EOF And Not rs.EOF And Sigue
        Flog.writeline Espacios(Tabulador * 2) & "justificacion Tipo de Hora : " & Rs_Justif!thnro
        If Rs_Justif!thnro <> 0 Then
            Flog.writeline Espacios(Tabulador * 2) & "rs.Horcant: " & rs!horcant & " y rs_justif!maxhoras: " & Rs_Justif!MaxHoras
            ' 1_ Justificacion Menor que las Horas generadas
            If rs!horcant > Rs_Justif!MaxHoras Then
                ' Abro el buffer hcp
                StrSql = "SELECT * FROM GTI_HORCUMPLIDO WHERE hornro = " & rs!hornro
                If wf_Hcp.State = adStateOpen Then wf_Hcp.Close
                wf_Hcp.Open StrSql, objConn
                
                If Not wf_Hcp.EOF Then
                    Flog.writeline Espacios(Tabulador * 2) & "wf_hcp!horcant= " & wf_Hcp!horcant
                    Flog.writeline Espacios(Tabulador * 2) & "rs_justif!maxhoras= " & Rs_Justif!MaxHoras
                    
                    VCant = CSng("0" & wf_Hcp!horcant) - Rs_Justif!MaxHoras
                    
                    Flog.writeline Espacios(Tabulador * 2) & "wf_hcp!horcant - rs_justif!maxhoras = " & VCant
                    
                    Call Calcula_Hora(VCant, wf_Hcp!hordesde, VHora, VFecha)
                    Call objFechasHoras.RestaXHoras(wf_Hcp!horfecrep, wf_Hcp!horhorahasta, VHora, fecres, horres)
    
                    Flog.writeline Espacios(Tabulador * 2) & "ValidarHora(horres): " & horres
                    
                    ok = objFechasHoras.ValidarHora(horres)
                    
                    Flog.writeline Espacios(Tabulador * 2) & "OK: " & ok
                    
                    StrSql = "update gti_horcumplido set horcant = " & Round(VCant, Presicion_HC) & _
                    ", horhoradesde = '" & horres & _
                    "' where hornro = " & rs!hornro
                    objConn.Execute StrSql, adExecuteNoRecords
                    
                    Flog.writeline Espacios(Tabulador * 2) & "Actualizó gti_horcumplido " & Round(VCant, Presicion_HC)
                    
                    If rs.State = adStateOpen Then rs.Close
                    StrSql = "SELECT * FROM gti_horcumplido WHERE ternro = " & NroTer & _
                             " AND horfecrep = " & ConvFecha(p_fecha) & " AND (normnro IS NOT NULL)" & _
                             " AND (normnro2 IS NOT NULL)"
                    OpenRecordset StrSql, rs
                    rs.MoveFirst

                End If
                'wf_hcp.UpdateBatch
                If wf_Hcp.State = adStateOpen Then wf_Hcp.Close
                
                StrSql = "SELECT * FROM gti_horcumplido WHERE ternro = " & NroTer & _
                " AND horfecrep = " & ConvFecha(p_fecha) & " AND thnro = " & _
                Rs_Justif!thnro
                If wf_Hcp2.State = adStateOpen Then wf_Hcp2.Close
                'wf_hcp2.Open StrSql, objConn, adOpenKeyset, adLockOptimistic
                wf_Hcp2.Open StrSql, objConn
                ' Si no hay uno que cumpla con las condiciones lo creo
                
                If wf_Hcp2.EOF Then
                    'wf_hcp2.AddNew
                    'Call ValidarTipoDeHora(rs_justif!thnro, nro_turno, tipo_hora)
                    Flog.writeline Espacios(Tabulador * 2) & "INSERT"
                    StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta," & _
                    "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg," & _
                    "horfecrep,horestado) values (" & _
                    Round(Rs_Justif!MaxHoras, Presicion_HC) & "," & _
                    ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",'" & _
                    Rs_Justif!HoraDesde & "','" & Rs_Justif!HoraHasta & "',0,-1," & _
                    Empleado.Ternro & "," & Rs_Justif!thnro & "," & Empleado.Legajo & _
                    "," & ConvFecha(p_fecha) & ",' ')"
                Else
                    Flog.writeline Espacios(Tabulador * 2) & "UPDATE"
                    StrSql = "UPDATE gti_horcumplido set horcant = " & Round(CSng("0" & wf_Hcp2!horcant) + Rs_Justif!MaxHoras, Presicion_HC) & _
                    ",hordesde = " & ConvFecha(p_fecha) & ", horhasta = " & _
                    ConvFecha(p_fecha) & ",horhoradesde='" & Rs_Justif!HoraDesde & _
                    "',horhorahasta='" & Rs_Justif!HoraHasta & _
                    "',hormanual=0,horvalido=-1,ternro=" & Empleado.Ternro & _
                    ",thnro=" & Rs_Justif!thnro & ",empleg = " & Empleado.Legajo & _
                    ",horfecrep = " & ConvFecha(p_fecha) & ",horestado=' ' where hornro=" & _
                    wf_Hcp2!hornro
                    
                End If
                Flog.writeline Espacios(Tabulador * 2) & "SQL " & StrSql
                
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Flog.writeline Espacios(Tabulador * 2) & "Ejecutó bien "
                
                'Grabo y cierro el recordset
                wf_Hcp2.Close
                
                'DELETE wf-justif.
                StrSql = "DELETE FROM " & TTempWFJustif & " where nro = " & Rs_Justif!nro
                objConn.Execute StrSql, , adExecuteNoRecords
                Flog.writeline Espacios(Tabulador * 2) & "Borra de WF_Justif"
                
                ' FGZ  - 01/09/2003
                ' NO Avanzo el rs porque me quedó saldo
                ' Pero como Actualicé tengo que leer nuevamente en rs
                
                ' rs.MoveNext
                
                ' FGZ  - 01/09/2003
                ' Avanzo el wfJustif porque Eliminé de wf_Justif
                Rs_Justif.MoveNext
                
            Else 'If rs!horcant > rs_justif!maxhoras Then
                ' 2_ Justificacion = que las Horas generadas
                Flog.writeline Espacios(Tabulador * 2) & "rs!horcant no es > rs_justif!maxhoras"
                
                If rs!horcant = Rs_Justif!MaxHoras Then
                    Flog.writeline Espacios(Tabulador * 2) & "rs!horcant = rs_justif!maxhoras"
                    'FIND FIRST wf-hcp WHERE RECID(wf-hcp) = RECID(gti_horcumplido) EXCLUSIVE-LOCK NO-ERROR.
                    StrSql = "SELECT * FROM gti_horcumplido WHERE hornro = " & rs!hornro
                    
                    If wf_Hcp.State = adStateOpen Then wf_Hcp.Close
                    'wf_hcp.Open StrSql, objConn, adOpenKeyset, adLockOptimistic
                    
                    wf_Hcp.Open StrSql, objConn
                    StrSql = "DELETE FROM gti_horcumplido WHERE hornro = " & rs!hornro
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    Flog.writeline Espacios(Tabulador * 2) & "Borra de gti_horcumplido tipo de hora: " & rs!hornro
                    
                    StrSql = "SELECT * FROM gti_horcumplido WHERE ternro = " & NroTer & _
                        " AND horfecrep = " & ConvFecha(p_fecha) & " AND thnro = " & _
                        Rs_Justif!thnro
                    
                    If wf_Hcp2.State = adStateOpen Then wf_Hcp2.Close
                    wf_Hcp2.Open StrSql, objConn
        
                    ' Si no hay uno que cumpla con las condiciones lo creo
                    If wf_Hcp2.EOF Then
                        'wf_hcp2.AddNew
                        'Call ValidarTipoDeHora(rs_justif!thnro, nro_turno, tipo_hora)
                        Flog.writeline Espacios(Tabulador * 2) & "Inserta "
                        StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta," & _
                        "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg," & _
                        "horfecrep,horestado) values (" & _
                        Round(Rs_Justif!MaxHoras, Presicion_HC) & "," & _
                        ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",'" & _
                        Rs_Justif!HoraDesde & "','" & Rs_Justif!HoraHasta & "',0,-1," & _
                        Empleado.Ternro & "," & Rs_Justif!thnro & "," & Empleado.Legajo & _
                        "," & ConvFecha(p_fecha) & ",' ')"
                    Else
                        Flog.writeline Espacios(Tabulador * 2) & "Actualiza"
                        StrSql = "UPDATE gti_horcumplido set horcant = " & Round(CSng("0" & wf_Hcp2!horcant) + Rs_Justif!MaxHoras, Presicion_HC) & _
                        ",hordesde = " & ConvFecha(p_fecha) & ", horhasta = " & _
                        ConvFecha(p_fecha) & ",horhoradesde='" & Rs_Justif!HoraDesde & _
                        "',horhorahasta='" & Rs_Justif!HoraHasta & _
                        "',hormanual=0,horvalido=-1,ternro=" & Empleado.Ternro & _
                        ",thnro=" & Rs_Justif!thnro & ",empleg = " & Empleado.Legajo & _
                        ",horfecrep = " & ConvFecha(p_fecha) & ",horestado=' ' where hornro=" & _
                        wf_Hcp2!hornro
                        
                    End If
                    
                    Flog.writeline Espacios(Tabulador * 2) & "SQL:" & StrSql
                    
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    Flog.writeline Espacios(Tabulador * 2) & "Ejecuto bien"
                    
                    wf_Hcp2.Close
                    
                    StrSql = "DELETE FROM " & TTempWFJustif & " where nro = " & Rs_Justif!nro
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    Flog.writeline Espacios(Tabulador * 2) & "Borra de WF_justif"
                    
                    'Next.
                    
                    ' FGZ  - 01/09/2003
                    ' Avanzo el rs porque eliminé el registro de GTI_HORCUMPLIDO
                    rs.MoveNext
                    
                    ' FGZ  - 01/09/2003
                    ' Avanzo el wfJustif porque Eliminé de wf_Justif
                    Rs_Justif.MoveNext
                    
                Else ' If rs!horcant = rs_justif!maxhoras Then
                    ' 3_ Justificacion Mayor que las Horas generadas
                    Flog.writeline Espacios(Tabulador * 2) & "rs!horcant no es = rs_justif!maxhoras"
                    If rs!horcant < Rs_Justif!MaxHoras Then
                            
                            Flog.writeline Espacios(Tabulador * 2) & "rs!horcant < rs_justif!maxhoras"
                            
                            StrSql = "SELECT * FROM gti_horcumplido WHERE ternro = " & NroTer & _
                            " AND horfecrep = " & ConvFecha(p_fecha) & " AND thnro = " & _
                            Rs_Justif!thnro
                        
                            If wf_Hcp2.State = adStateOpen Then wf_Hcp2.Close
                            wf_Hcp2.Open StrSql, objConn
                                        
                            ' Si no hay uno que cumpla con las condiciones lo creo
                            If wf_Hcp2.EOF Then
                                
                                Flog.writeline Espacios(Tabulador * 2) & "Inserta"
                                
                                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta," & _
                                "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg," & _
                                "horfecrep,horestado) values (" & _
                                Round(rs!horcant, Presicion_HC) & "," & _
                                ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",'" & _
                                Rs_Justif!HoraDesde & "','" & Rs_Justif!HoraHasta & "',0,-1," & _
                                Empleado.Ternro & "," & Rs_Justif!thnro & "," & Empleado.Legajo & _
                                "," & ConvFecha(p_fecha) & ",' ')"
                            Else
                                Flog.writeline Espacios(Tabulador * 2) & "Actualiza"
                                StrSql = "UPDATE gti_horcumplido set horcant = " & Round(CSng("0" & wf_Hcp2!horcant) + rs!horcant, Presicion_HC) & _
                                ",hordesde = " & ConvFecha(p_fecha) & ", horhasta = " & _
                                ConvFecha(p_fecha) & ",horhoradesde='" & Rs_Justif!HoraDesde & _
                                "',horhorahasta='" & Rs_Justif!HoraHasta & _
                                "',hormanual=0,horvalido=-1,ternro=" & Empleado.Ternro & _
                                ",thnro=" & Rs_Justif!thnro & ",empleg = " & Empleado.Legajo & _
                                ",horfecrep = " & ConvFecha(p_fecha) & ",horestado=' ' where hornro=" & _
                                wf_Hcp2!hornro
                            End If
                            Flog.writeline Espacios(Tabulador * 2) & "SQL: " & StrSql
                            objConn.Execute StrSql, , adExecuteNoRecords
                            
                            Flog.writeline Espacios(Tabulador * 2) & "Ejecutó Bien"
                            
                            StrSql = "UPDATE " & TTempWFJustif & " SET maxhoras = " & Rs_Justif!MaxHoras - rs!horcant & _
                            " WHERE nro = " & Rs_Justif!nro
                            objConn.Execute StrSql, , adExecuteNoRecords
                                       
                            Flog.writeline Espacios(Tabulador * 2) & "Actualizó WF_Justif"
                            
                            StrSql = "DELETE FROM gti_horcumplido WHERE hornro = " & rs!hornro
                            objConn.Execute StrSql, , adExecuteNoRecords
                            
                            Flog.writeline Espacios(Tabulador * 2) & "Borro de gti_horcumplido"
                            
                            ' FGZ  - 01/09/2003
                            ' Avanzo el rs porque eliminé el registro de GTI_HORCUMPLIDO
                            rs.MoveNext
                            
                            ' FGZ  - 01/09/2003
                            ' No Avanzo el wfJustif porque me quedó saldo a justificar
                            ' rs_justif.MoveNext
                            
                    End If ' If rs!horcant < rs_justif!maxhoras Then
                End If ' If rs!horcant = rs_justif!maxhoras Then
            End If 'If rs!horcant > rs_justif!maxhoras Then
        
        Else 'If rs_justif!thnro <> 0 Then
            Rs_Justif.MoveNext
        End If
    
        ' Si no tengo mas Justificaciones o No tengo mas horas a Justificar ==> NO Continuo
        If rs.EOF Or Rs_Justif.EOF Then
            Sigue = False
        End If
    
    Loop 'wfJustif
    
End If
'Loop 'rs (GTI_HORCUMPLIDO)


CierroTodo:
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
    
    If Rs_Justif.State = adStateOpen Then
        Rs_Justif.UpdateBatch
        Rs_Justif.Close
    End If
    Set Rs_Justif = Nothing
    
    
StrSql = "DROP TABLE " & TTempWFJustif
objConn.Execute StrSql, adExecuteNoRecords
    
    
    
End Sub


Public Sub Politica490(Fecha As Date, NroTer As Long, VentDesde As String, ventFdesde As Date, VentHasta As String, ventFhasta As Date, Nro_Turno As Long, deb As Boolean, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Política de descuentos Autorizados por novedad horaria.
'   La idea es que la política busque novedades horarias cargadas y descuente las horas generadas en esos intervalos de tiempo.
' Autor: FGZ - 20/10/2010
' Ultima modificacion: FGZ - 15/06/2011 - se le agregó control de firmas
'
' --------------------------------------------------------------
Dim Opcion As Long
Dim TH_Descuento As Long
'Dim TH_Pausa As Long

Dim Thoras As Integer
Dim Tmin As Integer
Dim Tdias As Integer

Dim TotHor As Single '(descuento - pausa)
Dim TotHorHHMM As String

Dim Descuento As Single
Dim Diferencia As Single
Dim Horas_HC As Double
Dim Hora_HDesde As String
Dim Hora_HHasta As String

Dim Hora_FDesde As Date
Dim Hora_FHasta As Date

Dim NovHDesde As String
Dim NovHHasta As String
Dim NovFDesde As Date
Dim NovFHasta As Date
Dim NovHoras As Single

Dim RegHDesde As String
Dim RegHHasta As String
Dim RegFDesde As Date
Dim RegFHasta As Date

Dim HCDesde As String
Dim HCHasta As String
Dim HCFDesde As Date
Dim HCFHasta As Date
Dim Hay_Reg As Boolean

Dim Cant_Reg As Integer
Dim Cant_Pares As Integer
Dim i As Integer

Dim par1 As String
Dim fecpar1 As Date
Dim par2 As String
Dim fecpar2 As Date
Dim Lista_Horas As String
Dim Actualiza As Boolean

Dim rs As New ADODB.Recordset
Dim rs_Nov As New ADODB.Recordset
Dim rs_Firma As New ADODB.Recordset
Dim Nov_Firmada As Boolean


    StrSql = " SELECT gnovotoa,gnovdesde, gnovhasta,gnovhoradesde,gnovhorahasta,gnovmaxhoras, gti_tiponovedad.thnro,juseltipo,gti_justificacion.juscodext FROM gti_justificacion "
    StrSql = StrSql & " INNER JOIN gti_novedad ON gti_justificacion.juscodext = gti_novedad.gnovnro "
    StrSql = StrSql & " INNER JOIN gti_tiponovedad ON gti_novedad.gtnovnro = gti_tiponovedad.gtnovnro "
    StrSql = StrSql & " WHERE (Ternro = " & NroTer & ")"
    StrSql = StrSql & " AND (gnovdesde <= " & ConvFecha(p_fecha) & " AND gnovhasta >= " & ConvFecha(p_fecha) & ")"
    StrSql = StrSql & " AND jussigla = 'NOV'"
    StrSql = StrSql & " AND juseltipo = 2" 'Parcial fija
    StrSql = StrSql & " AND (gti_novedad.ft = 0 OR (gti_novedad.ft = -1 AND gti_novedad.ftap = -1))"
    OpenRecordset StrSql, rs_Nov
    If rs_Nov.EOF Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No hay paros Novedades horarias en el dia."
        End If
        GoTo Fin_Descuentos
    Else
        Call SetearParametrosPolitica(Detalle, ok)
        Opcion = st_Opcion
        TH_Descuento = IIf(EsNulo(st_TipoHora1), 0, st_TipoHora1)
        Lista_Horas = IIf(EsNulo(st_ListaTH), 0, st_ListaTH)
        
        If depurar Then
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Version: " & Opcion
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "  Tipo Hora Descuento: " & TH_Descuento
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "  Lista de Horas a descontar: " & Lista_Horas
        End If
    End If
   
    
    
    Do While Not rs_Nov.EOF
            
        'FGZ - 15/06/2011 ------------------------------------------------------------------------
        If Firma_Novedades Then
            StrSql = "SELECT * FROM cysfirmas "
            StrSql = StrSql & " WHERE cysfirfin = -1"
            StrSql = StrSql & " AND cysfircodext = '" & rs_Nov!juscodext & "' "
            StrSql = StrSql & " AND cystipnro = 7"
            OpenRecordset StrSql, rs
            If rs.EOF Then
                Nov_Firmada = False
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "Hay una novedad horaria NO aprobado(" & rs_Nov!juscodext & "). Se descarta."
                End If
            Else
                Nov_Firmada = True
            End If
        End If
        
        If Nov_Firmada Then
            'TH_Descuento = rs_Nov!thnro
            
            NovHoras = IIf(Not EsNulo(rs_Nov!gnovmaxhoras), rs_Nov!gnovmaxhoras, 0)
            
            NovHDesde = rs_Nov!gnovhoradesde
            NovHHasta = rs_Nov!gnovhorahasta
            'NovFDesde = rs_Nov!gnovdesde
            'NovFHasta = rs_Nov!gnovhasta
            NovFDesde = p_fecha
            NovFHasta = p_fecha
            
            If depurar Then
                Flog.writeline
                Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Novedad "
                Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "  Desde: " & NovFDesde & " - " & NovHDesde
                Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "  Hasta: " & NovFHasta & " - " & NovHHasta
            End If
            
            Descuento = 0
            
            '-----------------------------------------------------
            'Reviso las horas a descontar
            'Si intersectan las horas del paro ==> generan hs_descuento y actualizan las horas originales
            StrSql = "SELECT hornro, horcant cantidad,hordesde, horhoradesde,horhasta, horhorahasta, normnro, normnro2, thnro FROM gti_horcumplido WHERE ternro = " & NroTer
            'StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
            StrSql = StrSql & " AND horfecgen = " & ConvFecha(p_fecha)
            StrSql = StrSql & " AND thnro IN (" & Lista_Horas & ")"
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                rs.MoveFirst
            End If
            Do While Not rs.EOF
                Horas_HC = rs!Cantidad
                
                Hora_FDesde = IIf(Not EsNulo(rs!hordesde), rs!hordesde, p_fecha)
                Hora_FHasta = IIf(Not EsNulo(rs!horhasta), rs!horhasta, p_fecha)
                Hora_HDesde = IIf(Not EsNulo(rs!horhoradesde), rs!horhoradesde, "0000")
                Hora_HHasta = IIf(Not EsNulo(rs!horhorahasta), rs!horhorahasta, "0000")
        
                If depurar Then
                    Flog.writeline
                    Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Hora encontrada " & rs!thnro
                    Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "  Desde: " & Hora_FDesde & " - " & Hora_HDesde
                    Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "  Hasta: " & Hora_FHasta & " - " & Hora_HHasta
                    Flog.writeline
                End If
                
                'Reviso la interseccion de la pausa con el horario del paro
                'Paro       [---------------]
                'Pausa            (----------------)
                If objFechasHoras.Menor_Hora(NovFDesde, NovHDesde, Hora_FDesde, Hora_HDesde) And objFechasHoras.Menor_Hora(Hora_FDesde, Hora_HDesde, NovFHasta, NovHHasta) And objFechasHoras.Menor_Igual_Hora(NovFHasta, NovHHasta, Hora_FHasta, Hora_HHasta) Then
                    objFechasHoras.RestaHs Hora_FDesde, Hora_HDesde, NovFHasta, NovHHasta, Tdias, Thoras, Tmin
                    HCFDesde = Hora_FDesde
                    HCDesde = Hora_HDesde
                    HCFHasta = NovFHasta
                    HCHasta = NovHHasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    
                    If TotHor > 0 Then
                        TotHorHHMM = CHoras(TotHor, 60)
                
                        StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                        StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                        StrSql = StrSql & " thnro,turnro,horrealent,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                        StrSql = StrSql & TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'" & HCDesde & "','" & HCHasta & "'"
                        StrSql = StrSql & "," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                        StrSql = StrSql & ValorNulo & "," & Empleado.Ternro & "," & TH_Descuento & "," & Nro_Turno & ","
                        StrSql = StrSql & "'',''," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TH_Descuento & "- Cantidad: " & TotHor & " hs."
                        End If
                        
                        'Actualizo las horas originales
                        Diferencia = rs!Cantidad - TotHor
                        If Diferencia > 0 Then
                            HCFDesde = NovFHasta
                            HCDesde = NovHHasta
                            HCFHasta = Hora_FHasta
                            HCHasta = Hora_HHasta
                            objFechasHoras.RestaHs HCFDesde, HCDesde, HCFHasta, HCHasta, Tdias, Thoras, Tmin
                            TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                            TotHorHHMM = CHoras(TotHor, 60)
                           
                            StrSql = "UPDATE gti_horcumplido SET "
                            StrSql = StrSql & " horcant = " & Diferencia
                            StrSql = StrSql & " ,horas = " & TotHorHHMM
                            StrSql = StrSql & " ,hordesde = " & ConvFecha(HCFDesde)
                            StrSql = StrSql & " ,horhoradesde = '" & HCDesde & "'"
                            StrSql = StrSql & " ,horhasta = " & ConvFecha(HCFHasta)
                            StrSql = StrSql & " ,horhorahasta = '" & HCHasta & "'"
                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
                            objConn.Execute StrSql, , adExecuteNoRecords
                        Else
                            StrSql = "DELETE gti_horcumplido "
                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                End If
    
                'Paro           [---------------]
                'Pausa      (----------------)
                If objFechasHoras.Mayor_Igual_Hora(NovFDesde, NovHDesde, p_fecha, Hora_HDesde) And objFechasHoras.Menor_Hora(NovFDesde, NovHDesde, p_fecha, Hora_HHasta) And objFechasHoras.Mayor_Hora(NovFHasta, NovHHasta, p_fecha, Hora_HHasta) Then
                    objFechasHoras.RestaHs NovFDesde, NovHDesde, p_fecha, Hora_HHasta, Tdias, Thoras, Tmin
                    HCDesde = NovHDesde
                    HCHasta = Hora_HHasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor > 0 Then
                        TotHorHHMM = CHoras(TotHor, 60)
                
                        StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                        StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                        StrSql = StrSql & " thnro,turnro,horrealent,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                        StrSql = StrSql & TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'" & HCDesde & "','" & HCHasta & "'"
                        StrSql = StrSql & "," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                        StrSql = StrSql & ValorNulo & "," & Empleado.Ternro & "," & TH_Descuento & "," & Nro_Turno & ","
                        StrSql = StrSql & "'',''," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TH_Descuento & "- Cantidad: " & TotHor & " hs."
                        End If
                        
                        'Actualizo las horas originales
                        Diferencia = rs!Cantidad - TotHor
                        If Diferencia > 0 Then
                            HCFDesde = Hora_FDesde
                            HCDesde = Hora_HDesde
                            HCFHasta = NovFDesde
                            HCHasta = NovHDesde
                            objFechasHoras.RestaHs HCFDesde, HCDesde, HCFHasta, HCHasta, Tdias, Thoras, Tmin
                            TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                            TotHorHHMM = CHoras(TotHor, 60)
                           
                            StrSql = "UPDATE gti_horcumplido SET "
                            StrSql = StrSql & " horcant = " & Diferencia
                            StrSql = StrSql & " ,horas = " & TotHorHHMM
                            StrSql = StrSql & " ,hordesde = " & ConvFecha(HCFDesde)
                            StrSql = StrSql & " ,horhoradesde = '" & HCDesde & "'"
                            StrSql = StrSql & " ,horhasta = " & ConvFecha(HCFHasta)
                            StrSql = StrSql & " ,horhorahasta = '" & HCHasta & "'"
                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
                            objConn.Execute StrSql, , adExecuteNoRecords
                        Else
                            StrSql = "DELETE gti_horcumplido "
                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                End If
    
                'Paro           [---------------]
                'Pausa      (-----------------------)
                If objFechasHoras.Mayor_Igual_Hora(NovFDesde, NovHDesde, p_fecha, Hora_HDesde) And objFechasHoras.Menor_Hora(NovFDesde, NovHDesde, p_fecha, Hora_HHasta) And objFechasHoras.Menor_Igual_Hora(NovFHasta, NovHHasta, p_fecha, Hora_HHasta) And objFechasHoras.Mayor_Hora(NovFHasta, NovHHasta, p_fecha, Hora_HDesde) Then
                    objFechasHoras.RestaHs NovFDesde, NovHDesde, NovFHasta, NovHHasta, Tdias, Thoras, Tmin
                    HCFDesde = NovFDesde
                    HCDesde = NovHDesde
                    HCFHasta = NovFHasta
                    HCHasta = NovHHasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor > 0 Then
                        TotHorHHMM = CHoras(TotHor, 60)
                
                        StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                        StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                        StrSql = StrSql & " thnro,turnro,horrealent,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                        StrSql = StrSql & TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'" & HCDesde & "','" & HCHasta & "'"
                        StrSql = StrSql & "," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                        StrSql = StrSql & ValorNulo & "," & Empleado.Ternro & "," & TH_Descuento & "," & Nro_Turno & ","
                        StrSql = StrSql & "'',''," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TH_Descuento & "- Cantidad: " & TotHor & " hs."
                        End If
                        
                        'Actualizo las horas originales
                        Diferencia = rs!Cantidad - TotHor
                        If Diferencia > 0 Then
                            HCFDesde = Hora_FDesde
                            HCDesde = Hora_HDesde
                            HCFHasta = NovFDesde
                            HCHasta = NovHDesde
                            objFechasHoras.RestaHs HCFDesde, HCDesde, HCFHasta, HCHasta, Tdias, Thoras, Tmin
                            TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                            TotHorHHMM = CHoras(TotHor, 60)
                            If TotHor > 0 Then
                                Actualiza = True
                                StrSql = "UPDATE gti_horcumplido SET "
                                StrSql = StrSql & " horcant = " & TotHor
                                StrSql = StrSql & " ,horas = " & TotHorHHMM
                                StrSql = StrSql & " ,hordesde = " & ConvFecha(HCFDesde)
                                StrSql = StrSql & " ,horhoradesde = '" & HCDesde & "'"
                                StrSql = StrSql & " ,horhasta = " & ConvFecha(HCFHasta)
                                StrSql = StrSql & " ,horhorahasta = '" & HCHasta & "'"
                                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, , adExecuteNoRecords
                            Else
                                Actualiza = False
                            End If
                            
                            HCFDesde = NovFHasta
                            HCDesde = NovHHasta
                            HCFHasta = Hora_FHasta
                            HCHasta = Hora_HHasta
                            objFechasHoras.RestaHs HCFDesde, HCDesde, HCFHasta, HCHasta, Tdias, Thoras, Tmin
                            TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                            If TotHor > 0 Then
                                TotHorHHMM = CHoras(TotHor, 60)
                                
                                If Actualiza Then
                                    StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                                    StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                                    StrSql = StrSql & " thnro,turnro,horrealent,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                                    StrSql = StrSql & TotHorHHMM & "," & TotHor & "," & ConvFecha(HCFDesde) & ",' '," & ConvFecha(HCFHasta) & ",'" & HCDesde & "','" & HCHasta & "'"
                                    StrSql = StrSql & "," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & IIf(EsNulo(rs!normnro), ValorNulo, "'" & rs!normnro & "'") & ","
                                    StrSql = StrSql & IIf(EsNulo(rs!normnro2), ValorNulo, "'" & rs!normnro2 & "'") & "," & Empleado.Ternro & "," & rs!thnro & "," & Nro_Turno & ","
                                    StrSql = StrSql & "'',''," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                Else
                                    StrSql = "UPDATE gti_horcumplido SET "
                                    StrSql = StrSql & " horcant = " & TotHor
                                    StrSql = StrSql & " ,horas = " & TotHorHHMM
                                    StrSql = StrSql & " ,hordesde = " & ConvFecha(HCFDesde)
                                    StrSql = StrSql & " ,horhoradesde = '" & HCDesde & "'"
                                    StrSql = StrSql & " ,horhasta = " & ConvFecha(HCFHasta)
                                    StrSql = StrSql & " ,horhorahasta = '" & HCHasta & "'"
                                    StrSql = StrSql & " WHERE hornro = " & rs!hornro
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                End If
                            End If
                        Else
                            StrSql = "DELETE gti_horcumplido "
                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                End If
    
                'Paro       [---------------]
                'Pausa          (--------)
                If objFechasHoras.Menor_Hora(NovFDesde, NovHDesde, p_fecha, Hora_HDesde) And objFechasHoras.Mayor_Hora(NovFHasta, NovHHasta, p_fecha, Hora_HHasta) Then
                    objFechasHoras.RestaHs p_fecha, Hora_HDesde, p_fecha, Hora_HHasta, Tdias, Thoras, Tmin
                    HCDesde = Hora_HDesde
                    HCHasta = Hora_HHasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor > 0 Then
                        TotHorHHMM = CHoras(TotHor, 60)
                
                        StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                        StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                        StrSql = StrSql & " thnro,turnro,horrealent,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                        StrSql = StrSql & TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'" & HCDesde & "','" & HCHasta & "'"
                        StrSql = StrSql & "," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                        StrSql = StrSql & ValorNulo & "," & Empleado.Ternro & "," & TH_Descuento & "," & Nro_Turno & ","
                        StrSql = StrSql & "'',''," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TH_Descuento & "- Cantidad: " & TotHor & " hs."
                        End If
                        
                        StrSql = "DELETE gti_horcumplido "
                        StrSql = StrSql & " WHERE hornro = " & rs!hornro
                        objConn.Execute StrSql, , adExecuteNoRecords
                    End If
                End If
        
        
                rs.MoveNext
            Loop
        Else
            
        End If
        
SiguienteNovedad:
        rs_Nov.MoveNext
    Loop
    '----------------------------------------------------------------------------------------------------
    '----------------------------------------------------------------------------------------------------
        
    
    
Fin_Descuentos:
'cierro y libero
    If rs.State = adStateOpen Then rs.Close
    If rs_Nov.State = adStateOpen Then rs_Nov.Close
    Set rs = Nothing
    Set rs_Nov = Nothing
    
    
End Sub


Private Sub Calcula_Hora(ByVal Cant As Single, Fecha As Date, VHora As String, VFecha As Date)
Dim cantminutos As Integer
'cantidad de minutos en una hora
Dim Hora As Integer
Dim CHoras As Integer

Hora = 60
CHoras = 0
cantminutos = Cant * Hora

Do While cantminutos >= Hora
    CHoras = CHoras + 1
    cantminutos = cantminutos - 60
Loop

VHora = Format(CHoras, "00") + Format(cantminutos, "00")
VFecha = IIf(CHoras > 24, Fecha + 1, Fecha)

End Sub



Public Sub Politica499(ByVal Ternro As Long, ByVal Fecha As Date, ByVal subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' ---------------------------------------------------------------------------------------------
' Descripcion: Feriados Nacionales
' Autor: FGZ
' Fecha:
' Ultima Mod:
' ----------------------------------------------------------------------------------------------
' a)El empleado ha trabajado al menos 48 horas ó 6 de los ultimos 10 dias habiles al feriado.
' b)El empleado ha trabajado el dia habil anterior al feriado y al menos 1 dia mas
'       dentro de los 5 dias habiles posteriores.
'OBS:
'hay que tener en cuenta que las licencias pagas por ley,
'   enfermedad, accidente, etc. se tienen que tomar como trabajado
'salvo el caso de que la licencia se superponga sobre el dia del feriado
' que ahi si no corresponde el feriado.
' ----------------------------------------------------------------------------------------------
' Ultima Mod: FGZ - 13/10/2009
' ----------------------------------------------------------------------------------------------
' Se separaró la condicion a) en 2 ==> las condiciones quedarian
'   a)El empleado ha trabajado al menos 48 horas en los ultimos 10 dias habiles
'   b)El empleado ha trabajado al menos 6 de los ultimos 10 dias habiles al feriado.
'   c)El empleado ha trabajado el dia habil anterior al feriado y al menos 1 dia mas
'       dentro de los 5 dias habiles posteriores.
'
'   Ademas
'       Se cambió la manera de controlar cuando un dia es habil (ahorora sale de la definicion del turno)
'
'       Se agregaron 2 parametros a la politica para poder configurar los tipos de Licencias que justifican y los tipos de horas que cuentan para la suma de hs del punto a).
' ----------------------------------------------------------------------------------------------
Dim FechaActual As Date
Dim Trabajo As Boolean
Dim CantDiasARevisar As Integer
Dim DiasTrabajados As Integer
Dim HorasTrabajadas As Single
Dim hora_desde As String
Dim hora_hasta As String

Dim esFeriado As Boolean
Dim DHabiles(1 To 7) As Boolean
Dim ExcluyeFeriados As Boolean
Dim ok As Boolean
Dim Opcion As Integer
Dim TipoHoraFranco As Long
Dim TipoHoraNoFranco As Long
Dim ListaTH
Dim ListaTD


    Call SetearParametrosPolitica(Detalle, ok)
    TipoHoraFranco = st_TipoHora1
    TipoHoraNoFranco = st_TipoHora2
    
    'FGZ - 15/10/2009 - Nuevos parametros --------------------
    If Not ok Then
        Exit Sub
    End If
    
    If EsNulo(st_Opcion) Then
        Opcion = 0
    Else
        Opcion = st_Opcion
    End If
    ListaTH = st_ListaTH 'Lista de horas configuradas
    ListaTD = st_ListaF1 'Lista de tipos de licencias configuradas
    
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Parametros: "
        Flog.writeline Espacios(Tabulador * 2) & "  Versión: " & Opcion
        Flog.writeline Espacios(Tabulador * 2) & "  Tipo de Hora cuando corresponde Feriado: " & TipoHoraFranco
        Flog.writeline Espacios(Tabulador * 2) & "  Tipo de Hora cuando NO corresponde Feriado: " & TipoHoraNoFranco
        Flog.writeline Espacios(Tabulador * 2) & "  Tipos de Hora que se consideran: " & ListaTH
        Flog.writeline Espacios(Tabulador * 2) & "  Tipos de Licencias que justifican: " & ListaTD
        Flog.writeline
    End If
    'FGZ - 15/10/2009 - Nuevos parametros --------------------
        
    'FGZ - 12/08/2014 -----------
    If EsNulo(ListaTH) Then
        ListaTH = 0
    End If
    If EsNulo(ListaTD) Then
        ListaTD = 0
    End If
    'FGZ - 12/08/2014 -----------
    
Select Case Opcion
Case 0, 2:
    'hay que contemplar que los dias sean habiles
    DHabiles(1) = False
    DHabiles(2) = True
    DHabiles(3) = True
    DHabiles(4) = True
    DHabiles(5) = True
    DHabiles(6) = True
    DHabiles(7) = False
    ExcluyeFeriados = False

    ' a) El empleado ha trabajado al menos 6 de los ultimos 10 dias habiles al feriado.
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Evaluo condicion a) El empleado ha trabajado al menos 6 de los ultimos 10 dias habiles al feriado."
    End If
    
    'CantDiasARevisar = 11
    'C.A.T 19/08/2008 Son 10 dias a revisar
    CantDiasARevisar = 10
    FechaActual = AnteriorDiaHabil(Fecha, Ternro)
    DiasTrabajados = 0
    hora_desde = "0000"
    hora_hasta = "2359"
    
    Do While CantDiasARevisar > 0 And DiasTrabajados < 6
        esFeriado = objFeriado.Feriado(FechaActual, Ternro, depurar)
        If Not (esFeriado And Not ExcluyeFeriados) Then
            If DHabiles(Weekday(FechaActual)) Then
                ' si existen registraciones en ese dia, entonces trabajo
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "Se evalua el dia: " & FechaActual
                End If
                If Existe_Registracion(Ternro, FechaActual, hora_desde, FechaActual, hora_hasta) Then
                    DiasTrabajados = DiasTrabajados + 1
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Existe Registracion. Dias Trabajados: " & DiasTrabajados
                    End If
                End If
                CantDiasARevisar = CantDiasARevisar - 1
            End If
        End If
        FechaActual = AnteriorDiaHabil(FechaActual, Ternro)
    Loop
    
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Dias Trabajados: " & DiasTrabajados
    End If
    
    ' si se cumple la condicion a)
    If DiasTrabajados >= 6 Then
        Call InsertarFranco(Ternro, Fecha, TipoHoraFranco)
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Inserto Feriado: " & Ternro & " " & Fecha
        End If
        Exit Sub
    End If
    
    If depurar Then
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 2) & "Evaluo condicion b)El empleado ha trabajado el dia habil anterior al feriado y al menos 1 dia mas"
        Flog.writeline Espacios(Tabulador * 2) & "                     dentro de los 5 dias habiles posteriores."
    End If
    ' b)El empleado ha trabajado el dia habil anterior al feriado y al menos 1 dia mas
    '       dentro de los 5 dias habiles posteriores.
    'CantDiasARevisar = 6
    CantDiasARevisar = 5
    'C.A.T 19/08/2008 Son 5 dias a revisar
    FechaActual = AnteriorDiaHabil(Fecha, Ternro)
    Trabajo = False
    
    ' si trabajó el dia habil anterior
    If Existe_Registracion(Ternro, FechaActual, hora_desde, FechaActual, hora_hasta) Then
        ' entonces reviso si trabajo al menos un dia mas en los cinco dias posteriores
        FechaActual = SiguienteDiaHabil(Fecha, Ternro)
        
        Do While CantDiasARevisar > 0 And Not Trabajo
            esFeriado = objFeriado.Feriado(FechaActual, Ternro, depurar)
            If Not (esFeriado And Not ExcluyeFeriados) Then
                If DHabiles(Weekday(FechaActual)) Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Se evalua el dia: " & FechaActual
                    End If
                    If Existe_Registracion(Ternro, FechaActual, hora_desde, FechaActual, hora_hasta) Then
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 2) & "Existe Registracion. "
                        End If
                        Trabajo = True
                    End If
                
                    CantDiasARevisar = CantDiasARevisar - 1
                End If
            End If
            FechaActual = SiguienteDiaHabil(FechaActual, Ternro)
        Loop
    End If
    
    If depurar Then
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 2) & "Trabajó: " & Trabajo
    End If
    If Trabajo Then
        Call InsertarFranco(Ternro, Fecha, TipoHoraFranco)
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Inserto Feriado: " & Ternro & " " & Fecha
        End If
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "No cumplio con las condiciones ==> GENERA HORAS NO CORRESPONDE FERIADO: " & Ternro & " " & Fecha
        End If
        Call InsertarNOFranco(Ternro, Fecha, TipoHoraNoFranco)
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Inserto No Corresponde Feriado: " & Ternro & " " & Fecha
        End If
    End If
'---------------------------------------------------------------------------------------------------------------------
Case 1: 'Es la estandar.
    ExcluyeFeriados = False

    ' a) El empleado ha trabajado al menos 48 hs en los ultimos 10 dias habiles al feriado.
    ' si se cumple la condicion a)
    CantDiasARevisar = 10
    FechaActual = AnteriorDiaHabilSTurno(Fecha, Ternro)
    HorasTrabajadas = 0
    
    Do While CantDiasARevisar > 0 And HorasTrabajadas < 48 And FechaActual <> CDate("01/01/1900")
        esFeriado = objFeriado.Feriado(FechaActual, Ternro, depurar)
        If Not (esFeriado And Not ExcluyeFeriados) Then
            If DiaHabilSegunTurno(FechaActual, Ternro) Then
                ' si existen registraciones en ese dia, entonces trabajo
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "Se evalua el dia: " & FechaActual
                End If
                HorasTrabajadas = HorasTrabajadas + ContarHoras(Ternro, FechaActual, ListaTH)
                CantDiasARevisar = CantDiasARevisar - 1
            End If
        End If
        FechaActual = AnteriorDiaHabilSTurno(FechaActual, Ternro)
    Loop
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Horas Trabajadas: " & HorasTrabajadas
    End If
    
    If HorasTrabajadas >= 48 Then
        Call InsertarFranco(Ternro, Fecha, TipoHoraFranco)
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Inserto Feriado: " & Ternro & " " & Fecha
        End If
        Exit Sub
    End If
    If depurar Then
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 2) & "Evaluo condicion b)El empleado ha trabajado al menos 6 de los ultimos 10 dias habiles al feriado."
    End If
    
    
    ' b) El empleado ha trabajado al menos 6 de los ultimos 10 dias habiles al feriado.
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Evaluo condicion a) El empleado ha trabajado al menos 6 de los ultimos 10 dias habiles al feriado."
    End If
    
    'CantDiasARevisar = 11
    'C.A.T 19/08/2008 Son 10 dias a revisar
    CantDiasARevisar = 10
    FechaActual = AnteriorDiaHabilSTurno(Fecha, Ternro)
    DiasTrabajados = 0
    hora_desde = "0000"
    hora_hasta = "2359"
    
    Do While CantDiasARevisar > 0 And DiasTrabajados < 6 And FechaActual <> CDate("01/01/1900")
        esFeriado = objFeriado.Feriado(FechaActual, Ternro, depurar)
        If Not (esFeriado And Not ExcluyeFeriados) Then
            'If DHabiles(Weekday(FechaActual)) Then
            If DiaHabilSegunTurno(FechaActual, Ternro) Then
                ' si existen registraciones en ese dia, entonces trabajo
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "Se evalua el dia: " & FechaActual
                End If
                If Existe_Registracion2(Ternro, FechaActual, hora_desde, FechaActual, hora_hasta, ListaTD) Then
                    DiasTrabajados = DiasTrabajados + 1
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Existe Registracion. Dias Trabajados: " & DiasTrabajados
                    End If
                End If
                CantDiasARevisar = CantDiasARevisar - 1
            End If
        End If
        FechaActual = AnteriorDiaHabilSTurno(FechaActual, Ternro)
    Loop
    
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Dias Trabajados: " & DiasTrabajados
    End If
    
    ' si se cumple la condicion a)
    If DiasTrabajados >= 6 Then
        Call InsertarFranco(Ternro, Fecha, TipoHoraFranco)
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Inserto Feriado: " & Ternro & " " & Fecha
        End If
        Exit Sub
    End If
    
    If depurar Then
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 2) & "Evaluo condicion b)El empleado ha trabajado el dia habil anterior al feriado y al menos 1 dia mas"
        Flog.writeline Espacios(Tabulador * 2) & "                     dentro de los 5 dias habiles posteriores."
    End If
    
    ' b)El empleado ha trabajado el dia habil anterior al feriado y al menos 1 dia mas
    '       dentro de los 5 dias habiles posteriores.
    'CantDiasARevisar = 6
    CantDiasARevisar = 5
    'C.A.T 19/08/2008 Son 5 dias a revisar
    FechaActual = AnteriorDiaHabilSTurno(Fecha, Ternro)
    Trabajo = False
    
    ' si trabajó el dia habil anterior
    If Existe_Registracion(Ternro, FechaActual, hora_desde, FechaActual, hora_hasta) Then
        ' entonces reviso si trabajo al menos un dia mas en los cinco dias posteriores
        FechaActual = SiguienteDiaHabil(Fecha, Ternro)
        
        Do While CantDiasARevisar > 0 And Not Trabajo
            esFeriado = objFeriado.Feriado(FechaActual, Ternro, depurar)
            If Not (esFeriado And Not ExcluyeFeriados) Then
                'If DHabiles(Weekday(FechaActual)) Then
                If DiaHabilSegunTurno(FechaActual, Ternro) Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Se evalua el dia: " & FechaActual
                    End If
                    If Existe_Registracion2(Ternro, FechaActual, hora_desde, FechaActual, hora_hasta, ListaTD) Then
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 2) & "Existe Registracion. "
                        End If
                        Trabajo = True
                    End If
                
                    CantDiasARevisar = CantDiasARevisar - 1
                End If
            End If
            FechaActual = SiguienteDiaHabil(FechaActual, Ternro)
        Loop
    End If
    
    If depurar Then
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 2) & "Trabajó: " & Trabajo
    End If
    If Trabajo Then
        Call InsertarFranco(Ternro, Fecha, TipoHoraFranco)
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Inserto Feriado: " & Ternro & " " & Fecha
        End If
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "No cumplio con las condiciones ==> GENERA HORAS NO CORRESPONDE FERIADO: " & Ternro & " " & Fecha
        End If
        Call InsertarNOFranco(Ternro, Fecha, TipoHoraNoFranco)
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Inserto No Corresponde Feriado: " & Ternro & " " & Fecha
        End If
    End If

Case Else
    'Version Incorrecta
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Version inexistente: " & Opcion
    End If
End Select

End Sub


Public Function ContarHoras(ByVal Ternro As Long, ByVal Fecha As Date, ByVal lista) As Single
' ---------------------------------------------------------------------------------------------
' Descripcion: Cuenta la cantidad de horas en el horario de tipos incluidos en la lista
' Autor: FGZ
' Fecha: 14/10/2009
' Ultima Mod:
' ----------------------------------------------------------------------------------------------
Dim rs_HC As New ADODB.Recordset
Dim Cantidad As Single

    Cantidad = 0
    
    StrSql = " SELECT sum(horcant) horas FROM gti_horcumplido "
    StrSql = StrSql & " WHERE ternro = " & Ternro
    StrSql = StrSql & " AND horfecgen = " & ConvFecha(Fecha)
    'StrSql = StrSql & " AND horfecrep = " & ConvFecha(Fecha)
    StrSql = StrSql & " AND thnro  IN (" & lista & ")"
    OpenRecordset StrSql, rs_HC
    If Not rs_HC.EOF Then
       Cantidad = Cantidad + IIf(Not EsNulo(rs_HC!Horas), rs_HC!Horas, 0)
    Else
       Cantidad = 0
    End If
    
    ContarHoras = Cantidad
End Function





Private Function Existe_Registracion(Ternro As Long, fecha_desde As Date, hora_desde As String, fecha_hasta As Date, hora_hasta As String) As Boolean
Dim result As Boolean
Dim Continuar As Boolean
Dim salir As Boolean
Dim objRs As New ADODB.Recordset
Dim rs_ExisteLic As New ADODB.Recordset
Dim lista As String

    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Existe_Registracion Desde: " & fecha_desde & " " & hora_desde & " hasta: " & fecha_hasta & " " & hora_hasta
    End If
    salir = False
    Existe_Registracion = False
    result = False

    'StrSql = "SELECT * FROM gti_registracion WHERE ternro = " & Ternro & " AND  regfecha >= " & ConvFecha(fecha_desde) & " AND " & _
    '"regfecha <=" & ConvFecha(fecha_hasta)
    
    StrSql = "SELECT * FROM gti_registracion WHERE ternro = " & Ternro
    StrSql = StrSql & " AND  regfecha >= " & ConvFecha(fecha_desde)
    StrSql = StrSql & " AND regfecha <=" & ConvFecha(fecha_hasta)
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    OpenRecordset StrSql, objRs
    Do While Not salir And Not objRs.EOF
        Continuar = True
        If objRs!regfecha = fecha_desde Then
            If objRs!reghora < hora_desde Then
                objRs.MoveNext
                Continuar = False
            End If
        End If
        
        If Continuar Then
            If (objRs!regfecha = fecha_hasta) And (Continuar) Then
                If objRs!reghora > hora_hasta Then
                    Continuar = False
                    salir = True
                End If
            End If
        End If
        
        If (Continuar) Then result = True
        If Not objRs.EOF Then objRs.MoveNext
    Loop
    
    lista = "2,3,4,5,7,8,9,19,22,23,28,30,31,32,34"
    If Not result Then
        StrSql = " SELECT * FROM emp_lic WHERE (empleado = " & Ternro
        StrSql = StrSql & " ) AND (tdnro IN (" & lista & "))"
        StrSql = StrSql & " AND eltipo = 1"
        StrSql = StrSql & " AND elfechadesde <= " & ConvFecha(fecha_desde)
        StrSql = StrSql & " AND elfechahasta >= " & ConvFecha(fecha_hasta)
        'FGZ - 19/05/2010 ------------ Control FT -------------
        StrSql = StrSql & " AND (emp_lic.ft = 0 OR (emp_lic.ft = -1 AND emp_lic.ftap = -1))"
        'FGZ - 19/05/2010 ------------ Control FT -------------
        If rs_ExisteLic.State = adStateOpen Then rs_ExisteLic.Close
        OpenRecordset StrSql, rs_ExisteLic
        If Not rs_ExisteLic.EOF Then
            result = True
        End If
    End If
    Existe_Registracion = result
    
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Fin Existe_Registracion"
    End If
    'cierro y libero
    If objRs.State = adStateOpen Then objRs.Close
    Set objRs = Nothing
    
    If rs_ExisteLic.State = adStateOpen Then rs_ExisteLic.Close
    Set rs_ExisteLic = Nothing
End Function

Private Function Existe_Registracion2(ByVal Ternro As Long, ByVal fecha_desde As Date, ByVal hora_desde As String, ByVal fecha_hasta As Date, ByVal hora_hasta As String, ByVal lista) As Boolean
Dim result As Boolean
Dim Continuar As Boolean
Dim salir As Boolean
Dim objRs As New ADODB.Recordset
Dim rs_ExisteLic As New ADODB.Recordset
'Dim Lista As String

    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Existe_Registracion Desde: " & fecha_desde & " " & hora_desde & " hasta: " & fecha_hasta & " " & hora_hasta
    End If
    salir = False
    Existe_Registracion2 = False
    result = False
    'StrSql = "SELECT * FROM gti_registracion WHERE ternro = " & Ternro & " AND  regfecha >= " & ConvFecha(fecha_desde) & " AND " & _
    '         "regfecha <=" & ConvFecha(fecha_hasta)
    
    StrSql = "SELECT * FROM gti_registracion WHERE ternro = " & Ternro
    StrSql = StrSql & " AND  regfecha >= " & ConvFecha(fecha_desde)
    StrSql = StrSql & " AND regfecha <=" & ConvFecha(fecha_hasta)
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    OpenRecordset StrSql, objRs
    Do While Not salir And Not objRs.EOF
        Continuar = True
        If objRs!regfecha = fecha_desde Then
            If objRs!reghora < hora_desde Then
                objRs.MoveNext
                Continuar = False
            End If
        End If
        
        If Continuar Then
            If (objRs!regfecha = fecha_hasta) And (Continuar) Then
                If objRs!reghora > hora_hasta Then
                    Continuar = False
                    salir = True
                End If
            End If
        End If
        
        If (Continuar) Then result = True
        If Not objRs.EOF Then objRs.MoveNext
    Loop
    
    'Lista = "2,3,4,5,7,8,9,19,22,23,28,30,31,32,34"
    If Not result Then
        StrSql = " SELECT * FROM emp_lic WHERE (empleado = " & Ternro
        StrSql = StrSql & " ) AND (tdnro IN (" & lista & "))"
        StrSql = StrSql & " AND eltipo = 1"
        StrSql = StrSql & " AND elfechadesde <= " & ConvFecha(fecha_desde)
        StrSql = StrSql & " AND elfechahasta >= " & ConvFecha(fecha_hasta)
        'FGZ - 19/05/2010 ------------ Control FT -------------
        StrSql = StrSql & " AND (emp_lic.ft = 0 OR (emp_lic.ft = -1 AND emp_lic.ftap = -1))"
        'FGZ - 19/05/2010 ------------ Control FT -------------
        If rs_ExisteLic.State = adStateOpen Then rs_ExisteLic.Close
        OpenRecordset StrSql, rs_ExisteLic
        If Not rs_ExisteLic.EOF Then
            result = True
        End If
    End If
    Existe_Registracion2 = result
    
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Fin Existe_Registracion"
    End If
    'cierro y libero
    If objRs.State = adStateOpen Then objRs.Close
    Set objRs = Nothing
    
    If rs_ExisteLic.State = adStateOpen Then rs_ExisteLic.Close
    Set rs_ExisteLic = Nothing
End Function


Private Sub InsertarFranco(Ternro As Long, Fecha As Date, ByVal TipoHora As Long)
    ' obtengo el turno del empleado, busco el tipo de hora franco nacional e inserto en
    ' el acumulado diario por 8 horas (en principio)
Dim rs As New ADODB.Recordset
Dim rsEsta As New ADODB.Recordset
Dim ThNroFranco As Long
Dim canthoras As Single
Dim HoraFeriadoNacionalporConvenio As Long
Dim Rs_HorasTurno As New ADODB.Recordset
Dim TotHorHHMM As String

    If depurar Then
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 2) & "Inserto el franco"
    End If
    HoraFeriadoNacionalporConvenio = TipoHora
    'ThNroFranco = HoraFeriadoNacionalporConvenio
    
     'busco el tipo de hora franco Nacional
     StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = " & HoraFeriadoNacionalporConvenio & _
                " AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
     OpenRecordset StrSql, rs
     'rs.Open StrSql, objConn
     If Not rs.EOF Then
         ThNroFranco = rs!thnro
     Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Error, no esta configurado el tipo de hora" & Ternro & " " & Fecha
        End If
         Exit Sub
     End If
    
    'seteo la cantidad de horas
    'FGZ - 27/07/2005
    'Busco la cantidad de horas del turno
    StrSql = "SELECT * FROM gti_dias WHERE subturnro = " & Nro_Subturno
    StrSql = StrSql & " ORDER BY diaorden"
    If Rs_HorasTurno.State = adStateOpen Then Rs_HorasTurno.Close
    OpenRecordset StrSql, Rs_HorasTurno
    If Not Rs_HorasTurno.EOF Then
        canthoras = Rs_HorasTurno!diacanthoras
    Else
        canthoras = 8
    End If
    
    TotHorHHMM = CHoras(canthoras, 60)
    
    'FGZ - 02/09/2003 Debo insertar en el Horario Cumplido
    StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,horestado,hormanual,horvalido,Ternro,thnro,horfecrep,horfecgen) " & _
            " VALUES (" & _
            TotHorHHMM & "," & _
            canthoras & "," & _
            ConvFecha(Fecha) & "," & _
            ConvFecha(Fecha) & ",' '," & _
            CInt(False) & "," & _
            CInt(True) & "," & _
            Ternro & "," & _
            ThNroFranco & "," & _
            ConvFecha(Fecha) & "," & _
            ConvFecha(Fecha) & ")"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Fin Inserto el franco"
    End If
    
    'cierro
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
    If rsEsta.State = adStateOpen Then rsEsta.Close
    Set rsEsta = Nothing
    If Rs_HorasTurno.State = adStateOpen Then Rs_HorasTurno.Close
    Set Rs_HorasTurno = Nothing
End Sub

Private Sub InsertarNOFranco(ByVal Ternro As Long, ByVal Fecha As Date, ByVal TipoHora As Long)
    ' obtengo el turno del empleado, busco el tipo de hora franco nacional e inserto en
    ' el acumulado diario por 8 horas (en principio)
Dim rs As New ADODB.Recordset
Dim rsEsta As New ADODB.Recordset
Dim ThNroNOFranco As Long
Dim canthoras As Single
Dim HoraFeriadoNacionalporConvenio As Long
Dim Rs_HorasTurno As New ADODB.Recordset
Dim TotHorHHMM As String

    
    ' Tipo de Hora "NO Corresponde Feriado"
    HoraFeriadoNacionalporConvenio = TipoHora
    
     'busco el tipo de hora franco Nacional
     StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = " & HoraFeriadoNacionalporConvenio & _
                " AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
     rs.Open StrSql, objConn
     If Not rs.EOF Then
         ThNroNOFranco = rs!thnro
     Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Error, no esta configurado el tipo de hora" & Ternro & " " & Fecha
        End If
        Exit Sub
     End If
    
    
    'seteo la cantidad de horas
    'Busco la cantidad de horas del turno
    StrSql = "SELECT * FROM gti_dias WHERE subturnro = " & Nro_Subturno
    StrSql = StrSql & " ORDER BY diaorden"
    If Rs_HorasTurno.State = adStateOpen Then Rs_HorasTurno.Close
    OpenRecordset StrSql, Rs_HorasTurno
    If Not Rs_HorasTurno.EOF Then
        canthoras = Rs_HorasTurno!diacanthoras
    Else
        canthoras = 8
    End If
    
    TotHorHHMM = CHoras(canthoras, 60)
    
    'FGZ - 02/09/2003 Debo insertar en el Horario Cumplido
    StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,horestado,hormanual,horvalido,Ternro,thnro,horfecrep,horfecgen) " & _
            " VALUES (" & _
            TotHorHHMM & "," & _
            canthoras & "," & _
            ConvFecha(Fecha) & "," & _
            ConvFecha(Fecha) & ",' ',0,-1," & _
            Ternro & "," & _
            ThNroNOFranco & "," & _
            ConvFecha(Fecha) & "," & _
            ConvFecha(Fecha) & ")"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    ' cierro los rs
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
    If rsEsta.State = adStateOpen Then rsEsta.Close
    Set rsEsta = Nothing
    If Rs_HorasTurno.State = adStateOpen Then Rs_HorasTurno.Close
    Set Rs_HorasTurno = Nothing
    
End Sub

Private Function SiguienteDiaHabil(Fecha As Date, Ternro As Long) As Date
Dim Aux_Fecha As Date
Dim DHabiles(1 To 7) As Boolean
Dim ExcluyeFeriados As Boolean

    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Dia hábil siguiente a " & Fecha & " para el tercero " & Ternro
    End If
    'FGZ - 20/07/2005
    'hay que contemplar que los dias sean habiles
    DHabiles(1) = False
    DHabiles(2) = True
    DHabiles(3) = True
    DHabiles(4) = True
    DHabiles(5) = True
    DHabiles(6) = True
    DHabiles(7) = False
    ExcluyeFeriados = False

    Set objFeriado.Conexion = objConn
    'depurar = False
    Aux_Fecha = Fecha + 1
    Do While (objFeriado.Feriado(Aux_Fecha, Ternro, depurar) = True Or Not DHabiles(Weekday(Aux_Fecha)))
        Aux_Fecha = Aux_Fecha + 1
    Loop
    
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Fin Dia hábil siguiente " & Aux_Fecha
    End If
    SiguienteDiaHabil = Aux_Fecha
End Function

Private Function DiaHabilSegunTurno(ByVal Fecha As Date, Ternro As Long) As Boolean
' ---------------------------------------------------------------------------------------------
' Descripcion: Retorna TRUE si el dia es habil para el empleado segun la definicion del turno
' Autor: FGZ
' Fecha:
' Ultima Mod:
' ----------------------------------------------------------------------------------------------
Dim Reg_T As TipoTurno
Dim Justif As TJustif
Dim Turno As TTurno
Dim Emp As Templeado
Dim Reg_Dia As TDia


    Call Buscar_Turno_Nuevo(Fecha, Ternro, depurar, Reg_T, Turno, Justif, Emp)

    If Reg_T.tiene_turno Then
        Call Buscar_Dia_Nuevo(Fecha, Fecha, Reg_T.Nro_Turno, Ternro, Reg_T.P_Asignacion, depurar, Reg_Dia)
        DiaHabilSegunTurno = Not Reg_Dia.Dia_Libre
    Else
        DiaHabilSegunTurno = False
    End If

End Function


Private Function AnteriorDiaHabilSTurno(ByVal Fecha As Date, ByVal Ternro As Long) As Date
' ---------------------------------------------------------------------------------------------
' Descripcion: Retorna el dia habil anterior a la fecha para el empleado segun la definicion del turno
' Autor: FGZ
' Fecha:
' Ultima Mod:
' ----------------------------------------------------------------------------------------------
Dim Reg_T As TipoTurno
Dim Justif As TJustif
Dim Turno As TTurno
Dim Emp As Templeado
Dim Reg_Dia As TDia
Dim Aux_Fecha As Date
Dim Encontro As Boolean
Dim contador As Integer



    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Dia hábil anterior a " & Fecha & " para el tercero " & Ternro
    End If

    Set objFeriado.Conexion = objConn
    'depurar = False
    Aux_Fecha = Fecha - 1
    Encontro = False
    contador = 0
    Do While Not Encontro And contador < 40
        If objFeriado.Feriado(Aux_Fecha, Ternro, depurar) Then
            Aux_Fecha = Aux_Fecha - 1
        Else
            Call Buscar_Turno_Nuevo(Aux_Fecha, Ternro, depurar, Reg_T, Turno, Justif, Emp)
            If Reg_T.tiene_turno Then
                Call Buscar_Dia_Nuevo(Aux_Fecha, Reg_T.Fecha_Inicio, Reg_T.Nro_Turno, Ternro, Reg_T.P_Asignacion, depurar, Reg_Dia)
                If Not Reg_Dia.Dia_Libre Then
                    Encontro = True
                Else
                    Aux_Fecha = Aux_Fecha - 1
                    contador = contador + 1
                End If
            Else
                Aux_Fecha = Aux_Fecha - 1
                contador = contador + 1
            End If
        End If
    Loop
    If contador = 40 Then
     AnteriorDiaHabilSTurno = "01/01/1900"
     Flog.writeline "Posiblemente no tiene turno y no puede seguir analizando"
    Else
     AnteriorDiaHabilSTurno = Aux_Fecha
     If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Fin dia hábil anterior " & Aux_Fecha
     End If
    End If
    
    
End Function


Private Function SiguienteDiaHabilSTurno(Fecha As Date, Ternro As Long) As Date
' ---------------------------------------------------------------------------------------------
' Descripcion: Retorna el dia habil anterior a la fecha para el empleado segun la definicion del turno
' Autor: FGZ
' Fecha:
' Ultima Mod:
' ----------------------------------------------------------------------------------------------
Dim Reg_T As TipoTurno
Dim Justif As TJustif
Dim Turno As TTurno
Dim Emp As Templeado
Dim Reg_Dia As TDia
Dim Aux_Fecha As Date
Dim Encontro As Boolean


    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Dia hábil siguiente a " & Fecha & " para el tercero " & Ternro
    End If

    Set objFeriado.Conexion = objConn
    'depurar = False
    Aux_Fecha = Fecha + 1
    Encontro = False
    
    Do While Not Encontro
        If objFeriado.Feriado(Aux_Fecha, Ternro, depurar) Then
            Aux_Fecha = Aux_Fecha - 1
        Else
            Call Buscar_Turno_Nuevo(Aux_Fecha, Ternro, depurar, Reg_T, Turno, Justif, Emp)
            If Reg_T.tiene_turno Then
                Call Buscar_Dia_Nuevo(Aux_Fecha, Reg_T.Fecha_Inicio, Reg_T.Nro_Turno, Ternro, Reg_T.P_Asignacion, depurar, Reg_Dia)
                If Not Reg_Dia.Dia_Libre Then
                    Encontro = True
                Else
                    Aux_Fecha = Aux_Fecha - 1
                End If
            Else
                Aux_Fecha = Aux_Fecha - 1
            End If
        End If
    Loop
    
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Fin Dia hábil siguiente " & Aux_Fecha
    End If
    SiguienteDiaHabilSTurno = Aux_Fecha
End Function



Private Function AnteriorDiaHabil(Fecha As Date, Ternro As Long) As Date
Dim Aux_Fecha As Date
Dim DHabiles(1 To 7) As Boolean
Dim ExcluyeFeriados As Boolean

    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Dia hábil anterior a " & Fecha & " para el tercero " & Ternro
    End If
    'FGZ - 20/07/2005
    'hay que contemplar que los dias sean habiles
    DHabiles(1) = False
    DHabiles(2) = True
    DHabiles(3) = True
    DHabiles(4) = True
    DHabiles(5) = True
    DHabiles(6) = True
    DHabiles(7) = False
    ExcluyeFeriados = False

    Set objFeriado.Conexion = objConn
    'Set objBTurno.ConexionTraza = CnTraza
    'depurar = False
    Aux_Fecha = Fecha - 1
    
    Do While (objFeriado.Feriado(Aux_Fecha, Ternro, depurar) = True Or Not DHabiles(Weekday(Aux_Fecha)))
        Aux_Fecha = Aux_Fecha - 1
    Loop
    
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Fin dia hábil anterior " & Aux_Fecha
    End If
    AnteriorDiaHabil = Aux_Fecha
End Function





Public Sub Politica80v1(p_ternro As Long, Fecha As Date, fecha_desde As Date, hora_desde As String, fecha_hasta As Date, hora_hasta As String, subn As Integer, ByVal TamañoVentana As String, ByVal Iteraciones As Integer)
' --------------------------------------------------------------
' Descripcion: Registracion a evaluar.
' subn = 2 repun  - Proceso las puntas, borro el resto.
' subn = 4 repes  - Proceso las puntas segun E o S, mantengo el resto.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
'                      FGZ - 19/05/2004
'                      EAM - 19/12/2011 - Se creo una procedimiento para cuando procese las puntas, marque lo de adentro como leido
' --------------------------------------------------------------

Dim rs As New ADODB.Recordset


Dim p_horario As Boolean
Dim salir As Boolean
Dim TEmp As String
Dim Cantidad As Integer
Dim Aux_Entrada As Boolean

salir = False

' Busco en el Detalle del parte de autorizacion de Horarios
' una entrada para p_ternro
StrSql = "SELECT * FROM gti_regdet WHERE ternro= " & p_ternro & _
" and gprdfecdesde <= " & ConvFecha(Fecha) & " and gprdfechasta >= " & ConvFecha(Fecha) & _
" ORDER BY ternro ASC, gprdfecdesde ASC, gprdfechasta ASC"

' Abro sin bloqueo
rs.Open StrSql, objConn
If Not rs.EOF Then
    
    ' Registracion - entrada

    StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,entrada,evenro)" & _
    " VALUES(" & p_ternro & "," & ConvFecha(rs!gprdfecdesde) & ",'" & _
    rs!grpdhoradesde & "',-1,2)"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    ' Registracion - salida
    StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,entrada,evenro)" & _
    " VALUES(" & p_ternro & "," & ConvFecha(rs!gprdfechasta) & ",'" & _
    rs!grpdhorahasta & "',0,2)"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    p_horario = True
End If
rs.Close

'  /* Generar el wf con cada registracion dentro de la ventana */

If p_horario Then

    StrSql = "SELECT * FROM gti_registracion " & _
    " WHERE ternro= " & p_ternro & _
    " AND (regestado = 'I')" & _
    " AND ( (regfecha > " & ConvFecha(fecha_desde) & _
    ") OR (regfecha = " & ConvFecha(fecha_desde) & _
    " AND reghora >= '" & hora_desde & "') )" & _
    " AND ( (regfecha < " & ConvFecha(fecha_hasta) & _
    ") OR (regfecha = " & ConvFecha(fecha_hasta) & _
    " AND reghora <= '" & hora_hasta & "') )"
    StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
    OpenRecordset StrSql, rs
    
    Do While Not rs.EOF
        StrSql = "UPDATE gti_registracion SET regestado = 'L' " & _
        " WHERE regnro = " & rs!Regnro
        objConn.Execute StrSql, , adExecuteNoRecords
        rs.MoveNext
    Loop
    rs.Close
Else

    'Proceso las puntas
    StrSql = "SELECT * FROM gti_registracion " & _
    " WHERE ternro= " & p_ternro & _
    " AND ((regestado = 'I') OR (regestado = 'S'))" & _
    " AND ( (regfecha > " & ConvFecha(fecha_desde) & _
    ") OR (regfecha = " & ConvFecha(fecha_desde) & _
    " AND reghora >= '" & hora_desde & "') )" & _
    " AND ( (regfecha < " & ConvFecha(fecha_hasta) & _
    ") OR (regfecha = " & ConvFecha(fecha_hasta) & _
    " AND reghora <= '" & hora_hasta & "') )"
    
    If subn = 4 Then
        StrSql = StrSql & " AND regentsal = 'E'"
    End If
    StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
       
    ' Solo lectura con keyset (para poder contar)
    rs.Open StrSql, objConn, adOpenKeyset, adLockReadOnly
    
    Cantidad = rs.RecordCount
    ' assign rec-ent = recid(gti_registracion).

    ' Si hay un registro disponible
    If Not rs.EOF Then
 
        rs.MoveFirst
    
        'FGZ - 19/05/2004
        Select Case UltimaRegInsertadaWFTurno
            Case "N":   Aux_Entrada = True
                        UltimaRegInsertadaWFTurno = "E"
            Case "E":   Aux_Entrada = False
                        UltimaRegInsertadaWFTurno = "S"
            Case "S":   Aux_Entrada = True
                        UltimaRegInsertadaWFTurno = "E"
        End Select
        ' genero el wf con la Registracion
        StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro)" & _
        " VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'" & _
        rs!reghora & "'," & rs!Regnro & _
        "," & CInt(Aux_Entrada) & ",2)"
        objConn.Execute StrSql, , adExecuteNoRecords
    
        'FGZ - 08/04/2008 - no estaba marcando la registracion
        StrSql = "UPDATE gti_registracion SET regestado = 'L' " & _
        " WHERE regnro = " & rs!Regnro
        objConn.Execute StrSql, , adExecuteNoRecords
    
    
'        ' genero el wf con la Registracion
'        StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro)" & _
'        " VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'" & _
'        rs!reghora & "'," & rs!Regnro & _
'        "," & IIf(rs!regentsal = "E", -1, 0) & ",2)"
'        objConn.Execute StrSql, , adExecuteNoRecords
      
    End If
    
    
    'Proceso las puntas
    rs.Close

    StrSql = "SELECT * FROM gti_registracion " & _
    " WHERE ternro= " & p_ternro & _
    " AND ((regestado = 'I') OR (regestado = 'S'))" & _
    " AND ( (regfecha > " & ConvFecha(fecha_desde) & _
    ") OR (regfecha = " & ConvFecha(fecha_desde) & _
    " AND reghora >= '" & hora_desde & "') )" & _
    " AND ( (regfecha < " & ConvFecha(fecha_hasta) & _
    ") OR (regfecha = " & ConvFecha(fecha_hasta) & _
    " AND reghora <= '" & hora_hasta & "') )"
    
    If subn = 4 Then
        StrSql = StrSql & " AND regentsal = 'S'"
    End If
    StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
              
    ' Solo lectura
    rs.Open StrSql, objConn
    
    If Not rs.EOF Then
    
        rs.MoveLast
    
        ' genero el wf con la Registracion
        'FGZ - 19/05/2004
        Select Case UltimaRegInsertadaWFTurno
            Case "N":   Aux_Entrada = True
                        UltimaRegInsertadaWFTurno = "E"
            Case "E":   Aux_Entrada = False
                        UltimaRegInsertadaWFTurno = "S"
            Case "S":   Aux_Entrada = True
                        UltimaRegInsertadaWFTurno = "E"
        End Select
        If Cantidad = 1 Then
            StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro)" & _
            " VALUES(" & rs!Ternro & "," & ConvFecha(fecha_hasta) & ",'" & _
            hora_hasta & "'," & rs!Regnro & _
            "," & CInt(Aux_Entrada) & ",2)"
    
        Else
            StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro)" & _
            " VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'" & _
            rs!reghora & "'," & rs!Regnro & _
            "," & CInt(Aux_Entrada) & ",2)"
        End If
        objConn.Execute StrSql, , adExecuteNoRecords
        
        'FGZ - 08/04/2008 - no estaba marcando la registracion
        StrSql = "UPDATE gti_registracion SET regestado = 'L' " & _
        " WHERE regnro = " & rs!Regnro
        objConn.Execute StrSql, , adExecuteNoRecords
        
        
'        If cantidad = 1 Then
'            StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro)" & _
'            " VALUES(" & rs!Ternro & "," & ConvFecha(fecha_hasta) & ",'" & _
'            hora_hasta & "'," & rs!Regnro & _
'            "," & IIf(rs!regentsal = "E", -1, 0) & ",2)"
'
'        Else
'            StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro)" & _
'            " VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'" & _
'            rs!reghora & "'," & rs!Regnro & _
'            "," & IIf(rs!regentsal = "E", -1, 0) & ",2)"
'        End If
'        objConn.Execute StrSql, , adExecuteNoRecords
        
    End If

End If

Call Marcar_Registraciones("L", p_ternro, fecha_desde, fecha_hasta, hora_desde, hora_hasta)

If rs.State = adStateOpen Then rs.Close
Set rs = Nothing

End Sub




Public Sub Politica80v3(p_ternro As Long, Fecha As Date, fecha_desde As Date, hora_desde As String, fecha_hasta As Date, hora_hasta As String, subn As Integer, ByVal TamañoVentana As String, ByVal Iteraciones As Integer)
' --------------------------------------------------------------
' Descripcion: Registracion a evaluar.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
'                      FGZ - 19/05/2004
' --------------------------------------------------------------

Dim rs As New ADODB.Recordset


Dim p_horario As Boolean
Dim salir As Boolean
Dim TEmp As String
Dim Cantidad As Integer

Dim Encontrado As Boolean
Dim fecres As Date
Dim horres As String
Dim ok As Boolean
Dim Veces As Integer
Dim Aux_Entrada As Boolean

'Este es similar al retod pero
'cuando al terminar tiene registraciones impares
'amplía la ventana de búsqueda hasta encontrar la registracion de
'salida faltante.

salir = False

' Busco en el Detalle del parte de autorizacion de Horarios
' una entrada para p_ternro

StrSql = "SELECT * FROM gti_regdet WHERE ternro = " & p_ternro & _
" and gprdfecdesde <= " & ConvFecha(Fecha) & " and gprdfechasta >= " & ConvFecha(Fecha) & _
" ORDER BY ternro ASC, gprdfecdesde ASC, gprdfechasta ASC"
rs.Open StrSql, objConn

If Not rs.EOF Then
    rs.MoveFirst
' MUY IMPORTANTE
' Chequear en la BD que los campos corresp a horas
' sean de tipo Fecha o con formato de hora
' Cambiar ConvHoraBD segun corresponda.
    
    ' Registracion - entrada

    StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,entrada,evenro)" & _
    " VALUES(" & p_ternro & "," & ConvFecha(rs!gprdfecdesde) & ",'" & _
    rs!grpdhoradesde & "',-1,2)"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    ' Registracion - salida
    StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,entrada,evenro)" & _
    " VALUES(" & p_ternro & "," & ConvFecha(rs!gprdfechasta) & ",'" & _
    rs!grpdhorahasta & "',0,2)"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    p_horario = True
    
    
    
End If
rs.Close

'  /* Generar el wf con cada registracion dentro de la ventana */

StrSql = "SELECT gti_registracion.* FROM gti_reloj "
StrSql = StrSql & " INNER JOIN gti_registracion ON gti_reloj.relnro = gti_registracion.relnro"
StrSql = StrSql & " WHERE ternro= " & p_ternro
StrSql = StrSql & " AND ((regestado ='I') OR (regestado = 'S'))"
StrSql = StrSql & " AND regfecha >= " & ConvFecha(fecha_desde) & " AND regfecha <= " & ConvFecha(fecha_hasta)
StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
'FGZ - 19/05/2010 ------------ Control FT -------------
StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
'FGZ - 19/05/2010 ------------ Control FT -------------
StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
rs.Open StrSql, objConn
If rs.EOF Then Exit Sub

Do While Not rs.EOF
'Revisar: fn de formateo de hora
    If rs!regfecha = fecha_desde Then
        ' Convierto para comparar
        If rs!reghora < hora_desde Then
        ' Proceso el proximo
        ' Con esto reemplazo al next
            salir = True
        End If
    End If
    If rs!regfecha = fecha_hasta And Not salir Then
        If rs!reghora > hora_hasta Then
        'Si la registracion queda fuera de la ventana termino de procesar
            Exit Do
        End If
    End If
 
    If Not salir Then
    
        If p_horario Then
    
            StrSql = "UPDATE gti_registracion SET regestado = 'S' WHERE regnro = " & rs!Regnro
            objConn.Execute StrSql, , adExecuteNoRecords
        
        Else
            
            'FGZ - 19/05/2004
            Select Case UltimaRegInsertadaWFTurno
                Case "N":   Aux_Entrada = True
                            UltimaRegInsertadaWFTurno = "E"
                Case "E":   Aux_Entrada = False
                            UltimaRegInsertadaWFTurno = "S"
                Case "S":   Aux_Entrada = True
                            UltimaRegInsertadaWFTurno = "E"
            End Select
            StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro)" & _
            " VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'" & _
            rs!reghora & "'," & rs!Regnro & _
            "," & CInt(Aux_Entrada) & ",2)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
        'FGZ - 08/04/2008 - no estaba marcando la registracion
        StrSql = "UPDATE gti_registracion SET regestado = 'L' " & _
        " WHERE regnro = " & rs!Regnro
        objConn.Execute StrSql, , adExecuteNoRecords
            
            
'            StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro)" & _
'            " VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'" & _
'            rs!reghora & "'," & rs!Regnro & _
'            "," & IIf(rs!regentsal = "E", -1, 0) & ",2)"
'            objConn.Execute StrSql, , adExecuteNoRecords
        
        End If
        
    Else
        salir = False
    
    End If
    rs.MoveNext
Loop

' Busco las registraciones del intervalo en cuestión
If depurar Then
    Flog.writeline Espacios(Tabulador * 2) & " Busco las Registraciones para el Pago "
End If

StrSql = "SELECT * FROM gti_registracion "
StrSql = StrSql & " WHERE ternro= " & p_ternro
'StrSql = StrSql & " AND ((regestado = 'I') OR (regestado = 'S'))"
StrSql = StrSql & " AND ((regestado = 'I') OR (regestado = 'S') OR (regestado = 'L'))"
StrSql = StrSql & " AND ( (regfecha > " & ConvFecha(fecha_desde)
StrSql = StrSql & ") OR (regfecha = " & ConvFecha(fecha_desde)
StrSql = StrSql & " AND reghora >= '" & hora_desde & "') )"
StrSql = StrSql & " AND ( (regfecha < " & ConvFecha(fecha_hasta)
StrSql = StrSql & ") OR (regfecha = " & ConvFecha(fecha_hasta)
StrSql = StrSql & " AND reghora <= '" & hora_hasta & "') )"
StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
'FGZ - 19/05/2010 ------------ Control FT -------------
StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
'FGZ - 19/05/2010 ------------ Control FT -------------
StrSql = StrSql & " ORDER BY regfecha asc, reghora asc"
If depurar Then
    Flog.writeline Espacios(Tabulador * 2) & StrSql
End If

OpenRecordset StrSql, rs
Cantidad = rs.RecordCount

If (Not rs.EOF) And (Not rs.BOF) Then
    
    rs.MoveLast
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Cantidad de Registraciones encontradas enla ventana: " & Cantidad
        Flog.writeline Espacios(Tabulador * 2) & "Marca de la Ultima Registracion: " & rs!regentsal
    End If
    
    'Si son impares, entonces me falta una.
    'Tengo que encontrar una de salida para cerrar.
    'La ultima encontrada tiene que ser de entrada
    If ((Cantidad Mod 2) <> 0) And rs!regentsal = "E" Then
        ' FGZ - 27/10/2003
        ' Buscar la Registracion
        Encontrado = False
        Call BuscarRegistracionSalida(p_ternro, TamañoVentana, Iteraciones, fecha_desde, hora_desde, fecha_hasta, hora_hasta, False, "0000", Encontrado)
    End If
    
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing

End If

End Sub

Public Sub Politica80v4(p_ternro As Long, Fecha As Date, fecha_desde As Date, hora_desde As String, fecha_hasta As Date, hora_hasta As String, subn As Integer, ByVal TamañoVentana As String, ByVal Iteraciones As Integer)
' --------------------------------------------------------------
' Descripcion: Registracion a evaluar.
' subn = 2 repun  - Proceso las puntas, borro el resto.
' Autor: FGZ - 03/07/2007
' Ultima modificacion:
' --------------------------------------------------------------
Dim rs As New ADODB.Recordset

Dim p_horario As Boolean
Dim salir As Boolean
Dim TEmp As String
Dim Cantidad As Integer
Dim Aux_Entrada As Boolean

salir = False

' Busco en el Detalle del parte de autorizacion de Horarios
' una entrada para p_ternro
StrSql = "SELECT * FROM gti_regdet WHERE ternro= " & p_ternro & _
" and gprdfecdesde <= " & ConvFecha(Fecha) & " and gprdfechasta >= " & ConvFecha(Fecha) & _
" ORDER BY ternro ASC, gprdfecdesde ASC, gprdfechasta ASC"

' Abro sin bloqueo
rs.Open StrSql, objConn
If Not rs.EOF Then
    
    ' Registracion - entrada

    StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,entrada,evenro)" & _
    " VALUES(" & p_ternro & "," & ConvFecha(rs!gprdfecdesde) & ",'" & _
    rs!grpdhoradesde & "',-1,2)"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    ' Registracion - salida
    StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,entrada,evenro)" & _
    " VALUES(" & p_ternro & "," & ConvFecha(rs!gprdfechasta) & ",'" & _
    rs!grpdhorahasta & "',0,2)"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    p_horario = True
End If
rs.Close

'Generar el wf con cada registracion dentro de la ventana

If p_horario Then
    StrSql = "SELECT * FROM gti_registracion "
    StrSql = StrSql & " WHERE ternro= " & p_ternro
    StrSql = StrSql & " AND (regestado = 'I')"
    StrSql = StrSql & " AND ( (regfecha > " & ConvFecha(fecha_desde)
    StrSql = StrSql & ") OR (regfecha = " & ConvFecha(fecha_desde)
    StrSql = StrSql & " AND reghora >= '" & hora_desde & "') )"
    StrSql = StrSql & " AND ( (regfecha < " & ConvFecha(fecha_hasta)
    StrSql = StrSql & ") OR (regfecha = " & ConvFecha(fecha_hasta)
    StrSql = StrSql & " AND reghora <= '" & hora_hasta & "') )"
    StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
    OpenRecordset StrSql, rs
    Do While Not rs.EOF
        StrSql = "UPDATE gti_registracion SET regestado = 'L' " & _
        " WHERE regnro = " & rs!Regnro
        objConn.Execute StrSql, , adExecuteNoRecords
        rs.MoveNext
    Loop
    rs.Close
Else

    'Si la cantidad de registraciones es
    StrSql = "SELECT * FROM gti_registracion " & _
    " WHERE ternro= " & p_ternro & _
    " AND ((regestado = 'I') OR (regestado = 'S'))" & _
    " AND ( (regfecha > " & ConvFecha(fecha_desde) & _
    ") OR (regfecha = " & ConvFecha(fecha_desde) & _
    " AND reghora >= '" & hora_desde & "') )" & _
    " AND ( (regfecha < " & ConvFecha(fecha_hasta) & _
    ") OR (regfecha = " & ConvFecha(fecha_hasta) & _
    " AND reghora <= '" & hora_hasta & "') )"
    StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
    OpenRecordset StrSql, rs
    Cantidad = rs.RecordCount
    
    If Not rs.EOF Then
        If Cantidad = 1 Then
            If Not EsNulo(rs!regentsal) Then
                If rs!regentsal = "E" Then
                    Aux_Entrada = True
                Else
                    Aux_Entrada = False
                End If
            Else
                Select Case UltimaRegInsertadaWFTurno
                    Case "N":   Aux_Entrada = True
                                UltimaRegInsertadaWFTurno = "E"
                    Case "E":   Aux_Entrada = False
                                UltimaRegInsertadaWFTurno = "S"
                    Case "S":   Aux_Entrada = True
                                UltimaRegInsertadaWFTurno = "E"
                End Select
            End If
        Else
            Select Case UltimaRegInsertadaWFTurno
                Case "N":   Aux_Entrada = True
                            UltimaRegInsertadaWFTurno = "E"
                Case "E":   Aux_Entrada = False
                            UltimaRegInsertadaWFTurno = "S"
                Case "S":   Aux_Entrada = True
                            UltimaRegInsertadaWFTurno = "E"
            End Select
        End If
        
        If Cantidad = 1 Then
            StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro)" & _
            " VALUES(" & rs!Ternro & "," & ConvFecha(fecha_desde) & ",'" & _
            hora_desde & "'," & rs!Regnro & _
            "," & CInt(Aux_Entrada) & ",2)"
            objConn.Execute StrSql, , adExecuteNoRecords
        Else
            StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro)" & _
            " VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'" & _
            rs!reghora & "'," & rs!Regnro & _
            "," & CInt(Aux_Entrada) & ",2)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            'FGZ - 08/04/2008 - no estaba marcando la registracion
            StrSql = "UPDATE gti_registracion SET regestado = 'L' " & _
            " WHERE regnro = " & rs!Regnro
            objConn.Execute StrSql, , adExecuteNoRecords
            
            
            'Busco la ultima registracion
            rs.MoveLast
            
            Select Case UltimaRegInsertadaWFTurno
                Case "N":   Aux_Entrada = True
                            UltimaRegInsertadaWFTurno = "E"
                Case "E":   Aux_Entrada = False
                            UltimaRegInsertadaWFTurno = "S"
                Case "S":   Aux_Entrada = True
                            UltimaRegInsertadaWFTurno = "E"
            End Select
        
            StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro)" & _
            " VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'" & _
            rs!reghora & "'," & rs!Regnro & _
            "," & CInt(Aux_Entrada) & ",2)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            'FGZ - 08/04/2008 - no estaba marcando la registracion
            StrSql = "UPDATE gti_registracion SET regestado = 'L' " & _
            " WHERE regnro = " & rs!Regnro
            objConn.Execute StrSql, , adExecuteNoRecords

        End If
    End If
End If

If rs.State = adStateOpen Then rs.Close
Set rs = Nothing
End Sub

Public Sub Politica80v5(p_ternro As Long, Fecha As Date, fecha_desde As Date, hora_desde As String, fecha_hasta As Date, hora_hasta As String, subn As Integer, ByVal TamañoVentana As String, ByVal Iteraciones As Integer)
' --------------------------------------------------------------
' Descripcion: Registracion a evaluar.
' subn = 2 repun  - Proceso las puntas, borro el resto. Inserta Reg Teorica faltante(si hay 1 sola reg)
' Autor: FGZ - 04/07/2007
' Ultima modificacion:
' --------------------------------------------------------------
Dim rs As New ADODB.Recordset

Dim p_horario As Boolean
Dim salir As Boolean
Dim TEmp As String
Dim Cantidad As Integer
Dim Aux_Entrada As Boolean

salir = False

' Busco en el Detalle del parte de autorizacion de Horarios
' una entrada para p_ternro
StrSql = "SELECT * FROM gti_regdet WHERE ternro= " & p_ternro & _
" and gprdfecdesde <= " & ConvFecha(Fecha) & " and gprdfechasta >= " & ConvFecha(Fecha) & _
" ORDER BY ternro ASC, gprdfecdesde ASC, gprdfechasta ASC"

' Abro sin bloqueo
rs.Open StrSql, objConn
If Not rs.EOF Then
    
    ' Registracion - entrada

    StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,entrada,evenro)" & _
    " VALUES(" & p_ternro & "," & ConvFecha(rs!gprdfecdesde) & ",'" & _
    rs!grpdhoradesde & "',-1,2)"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    ' Registracion - salida
    StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,entrada,evenro)" & _
    " VALUES(" & p_ternro & "," & ConvFecha(rs!gprdfechasta) & ",'" & _
    rs!grpdhorahasta & "',0,2)"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    p_horario = True
End If
rs.Close

'Generar el wf con cada registracion dentro de la ventana

If p_horario Then
    StrSql = "SELECT * FROM gti_registracion " & _
    " WHERE ternro= " & p_ternro & _
    " AND (regestado = 'I')" & _
    " AND ( (regfecha > " & ConvFecha(fecha_desde) & _
    ") OR (regfecha = " & ConvFecha(fecha_desde) & _
    " AND reghora >= '" & hora_desde & "') )" & _
    " AND ( (regfecha < " & ConvFecha(fecha_hasta) & _
    ") OR (regfecha = " & ConvFecha(fecha_hasta) & _
    " AND reghora <= '" & hora_hasta & "') )"
    StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
    OpenRecordset StrSql, rs
    Do While Not rs.EOF
        StrSql = "UPDATE gti_registracion SET regestado = 'L' " & _
        " WHERE regnro = " & rs!Regnro
        objConn.Execute StrSql, , adExecuteNoRecords
        rs.MoveNext
    Loop
    rs.Close
Else

    'Si la cantidad de registraciones es
    StrSql = "SELECT * FROM gti_registracion " & _
    " WHERE ternro= " & p_ternro & _
    " AND ((regestado = 'I') OR (regestado = 'S'))" & _
    " AND ( (regfecha > " & ConvFecha(fecha_desde) & _
    ") OR (regfecha = " & ConvFecha(fecha_desde) & _
    " AND reghora >= '" & hora_desde & "') )" & _
    " AND ( (regfecha < " & ConvFecha(fecha_hasta) & _
    ") OR (regfecha = " & ConvFecha(fecha_hasta) & _
    " AND reghora <= '" & hora_hasta & "') )"
    StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
    OpenRecordset StrSql, rs
    Cantidad = rs.RecordCount
    
    If Not rs.EOF Then
        If Cantidad = 1 Then
            If Not EsNulo(rs!regentsal) Then
                If rs!regentsal = "E" Then
                    Aux_Entrada = True
                Else
                    Aux_Entrada = False
                End If
            Else
                Select Case UltimaRegInsertadaWFTurno
                    Case "N":   Aux_Entrada = True
                                UltimaRegInsertadaWFTurno = "E"
                    Case "E":   Aux_Entrada = False
                                UltimaRegInsertadaWFTurno = "S"
                    Case "S":   Aux_Entrada = True
                                UltimaRegInsertadaWFTurno = "E"
                End Select
            End If
        Else
            Select Case UltimaRegInsertadaWFTurno
                Case "N":   Aux_Entrada = True
                            UltimaRegInsertadaWFTurno = "E"
                Case "E":   Aux_Entrada = False
                            UltimaRegInsertadaWFTurno = "S"
                Case "S":   Aux_Entrada = True
                            UltimaRegInsertadaWFTurno = "E"
            End Select
        End If
        
        If Cantidad = 1 Then
            If CInt(Aux_Entrada) Then
                StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro)" & _
                " VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'" & _
                rs!reghora & "'," & rs!Regnro & _
                "," & CInt(Aux_Entrada) & ",2)"
                objConn.Execute StrSql, , adExecuteNoRecords
            
                'inserto la salida faltante
                StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro)" & _
                " VALUES(" & rs!Ternro & "," & ConvFecha(FS1) & ",'" & _
                S1 & "',0,0,2)"
                objConn.Execute StrSql, , adExecuteNoRecords
                
                'FGZ - 08/04/2008 - no estaba marcando la registracion
                StrSql = "UPDATE gti_registracion SET regestado = 'L' " & _
                " WHERE regnro = " & rs!Regnro
                objConn.Execute StrSql, , adExecuteNoRecords
                
            Else
                'inserto la entrada faltante
                StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro)" & _
                " VALUES(" & rs!Ternro & "," & ConvFecha(FE1) & ",'" & _
                E1 & "',0,-1,2)"
                objConn.Execute StrSql, , adExecuteNoRecords
                
                StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro)" & _
                " VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'" & _
                rs!reghora & "'," & rs!Regnro & _
                "," & CInt(Aux_Entrada) & ",2)"
                objConn.Execute StrSql, , adExecuteNoRecords
                
                'FGZ - 08/04/2008 - no estaba marcando la registracion
                StrSql = "UPDATE gti_registracion SET regestado = 'L' " & _
                " WHERE regnro = " & rs!Regnro
                objConn.Execute StrSql, , adExecuteNoRecords
                
            End If
        Else
            StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro)" & _
            " VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'" & _
            rs!reghora & "'," & rs!Regnro & _
            "," & CInt(Aux_Entrada) & ",2)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            'Busco la ultima registracion
            rs.MoveLast
            
            Select Case UltimaRegInsertadaWFTurno
                Case "N":   Aux_Entrada = True
                            UltimaRegInsertadaWFTurno = "E"
                Case "E":   Aux_Entrada = False
                            UltimaRegInsertadaWFTurno = "S"
                Case "S":   Aux_Entrada = True
                            UltimaRegInsertadaWFTurno = "E"
            End Select
        
            StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro)" & _
            " VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'" & _
            rs!reghora & "'," & rs!Regnro & _
            "," & CInt(Aux_Entrada) & ",2)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            'FGZ - 08/04/2008 - no estaba marcando la registracion
            StrSql = "UPDATE gti_registracion SET regestado = 'L' " & _
            " WHERE regnro = " & rs!Regnro
            objConn.Execute StrSql, , adExecuteNoRecords
            
        End If
    End If
End If

If rs.State = adStateOpen Then rs.Close
Set rs = Nothing
End Sub



Public Sub Politica80vBB(p_ternro As Long, Fecha As Date, fecha_desde As Date, hora_desde As String, fecha_hasta As Date, hora_hasta As String, subn As Integer, ByVal TamañoVentana As String, ByVal Iteraciones As Integer)
' --------------------------------------------------------------
' Descripcion: Registracion a evaluar. CUSTOM CARGIL
' Autor: FGZ - 20/05/2008
' Ultima modificacion:
' --------------------------------------------------------------
Dim rs As New ADODB.Recordset

Dim p_horario As Boolean
Dim salir As Boolean
Dim TEmp As String
Dim Cantidad As Integer
Dim Aux_Entrada As Boolean
Dim NroReg_Llamada As Integer
Dim NroReg As Integer
Dim Encontrado As Boolean
Dim UltimaRegEntradaLlamada As Boolean

salir = False
NroReg_Llamada = 0
NroReg = 0

'Busco en el Detalle del parte de autorizacion de Horarios una entrada para p_ternro
StrSql = "SELECT * FROM gti_regdet WHERE ternro = " & p_ternro
StrSql = StrSql & " and gprdfecdesde <= " & ConvFecha(Fecha) & " and gprdfechasta >= " & ConvFecha(Fecha)
StrSql = StrSql & " ORDER BY ternro ASC, gprdfecdesde ASC, gprdfechasta ASC"
rs.Open StrSql, objConn
If Not rs.EOF Then
    rs.MoveFirst
    'Registracion - entrada
    StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,entrada,evenro)" & _
    " VALUES(" & p_ternro & "," & ConvFecha(rs!gprdfecdesde) & ",'" & _
    rs!grpdhoradesde & "',-1,2)"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    'Registracion - salida
    StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,entrada,evenro)" & _
    " VALUES(" & p_ternro & "," & ConvFecha(rs!gprdfechasta) & ",'" & _
    rs!grpdhorahasta & "',0,2)"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    p_horario = True
End If
rs.Close



'FGZ - 14/09/2010 -----------------------------------------------------------
''Generar el wf con cada registracion dentro de la ventana
'StrSql = "SELECT gti_registracion.* FROM gti_reloj "
'StrSql = StrSql & " INNER JOIN gti_registracion ON gti_reloj.relnro = gti_registracion.relnro "
'StrSql = StrSql & " WHERE ternro= " & p_ternro
'StrSql = StrSql & " AND ((regestado ='I') OR (regestado = 'S'))"
'StrSql = StrSql & " AND regfecha >= " & ConvFecha(fecha_desde)
'StrSql = StrSql & " AND regfecha <= " & ConvFecha(fecha_hasta)
''StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
'StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
'rs.Open StrSql, objConn

StrSql = "SELECT gti_registracion.* FROM gti_reloj "
StrSql = StrSql & " INNER JOIN gti_registracion ON gti_reloj.relnro = gti_registracion.relnro "
StrSql = StrSql & " WHERE ternro= " & p_ternro
StrSql = StrSql & " AND ((regestado ='I') OR (regestado = 'S'))"
StrSql = StrSql & " AND ( (regfecha > " & ConvFecha(fecha_desde)
StrSql = StrSql & ") OR (regfecha = " & ConvFecha(fecha_desde)
StrSql = StrSql & " AND reghora >= '" & hora_desde & "') )"
StrSql = StrSql & " AND ( (regfecha < " & ConvFecha(fecha_hasta)
StrSql = StrSql & ") OR (regfecha = " & ConvFecha(fecha_hasta)
StrSql = StrSql & " AND reghora <= '" & hora_hasta & "') )"
'StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
rs.Open StrSql, objConn
'FGZ - 14/09/2010 -----------------------------------------------------------
Do While Not rs.EOF
        'C.A.T 26/09/2008
        'Si es una registracion de llamada de entrada y estamos en el
        'dia siguiente al de procesamiento => Salir
        'Esas registraciones se controlaran en el siguiente dia de procesamiento
        If Not EsNulo(rs!regllamada) And _
               CBool(rs!regllamada) And _
               rs!regentsal = "E" And _
               rs!regfecha <> fecha_desde Then
               Exit Do
        End If
        'C.A.T 01/10/2008
        'Guardo en una Variable de que tipo es la ultima registracion procesada
        'en el Caso que sea una Llamada de Entrada se correra un prodimiento
        'que buscara la primer registracion del diasiguiente y de ser una salida
        'de llamada se considerara en el procesamiento
        UltimaRegEntradaLlamada = CBool(rs!regllamada) And rs!regentsal = "E"


        If p_horario Then
            StrSql = "UPDATE gti_registracion SET regestado = 'L' WHERE regnro = " & rs!Regnro
            objConn.Execute StrSql, , adExecuteNoRecords
        Else
            Select Case UltimaRegInsertadaWFTurno
                Case "N":   Aux_Entrada = True
                            UltimaRegInsertadaWFTurno = "E"
                Case "E":   Aux_Entrada = False
                            UltimaRegInsertadaWFTurno = "S"
                Case "S":   Aux_Entrada = True
                            UltimaRegInsertadaWFTurno = "E"
            End Select
            
            'Ademas si es llamada Inserto otra vez
            If Not EsNulo(rs!regllamada) Then
                If CBool(rs!regllamada) Then
                    StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro) "
                    StrSql = StrSql & " VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'"
                    StrSql = StrSql & rs!reghora & "'," & rs!Regnro
                    StrSql = StrSql & "," & CInt(Aux_Entrada)
                    StrSql = StrSql & ",15"
                    StrSql = StrSql & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    NroReg_Llamada = NroReg_Llamada + 1
                    
                    StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro) "
                    StrSql = StrSql & " VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'"
                    StrSql = StrSql & rs!reghora & "'," & rs!Regnro
                    StrSql = StrSql & "," & CInt(Aux_Entrada)
                    StrSql = StrSql & ",2"
                    StrSql = StrSql & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    NroReg = NroReg + 1
                Else
                    If rs!regfecha = fecha_desde Then
                        If rs!reghora < hora_desde Then
                            salir = True
                        End If
                    End If
                    If rs!regfecha = fecha_hasta And Not salir Then
                        If rs!reghora > hora_hasta Then
                            'Si la registracion queda fuera de la ventana termino de procesar
                            Exit Do
                        End If
                    End If
                    If Not salir Then
                        StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro) "
                        StrSql = StrSql & " VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'"
                        StrSql = StrSql & rs!reghora & "'," & rs!Regnro
                        StrSql = StrSql & "," & CInt(Aux_Entrada)
                        StrSql = StrSql & ",2"
                        StrSql = StrSql & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                        NroReg = NroReg + 1
                    Else
                        salir = False
                    End If
                End If
            Else
                If rs!regfecha = fecha_desde Then
                    If rs!reghora < hora_desde Then
                        salir = True
                    End If
                End If
                If rs!regfecha = fecha_hasta And Not salir Then
                    If rs!reghora > hora_hasta Then
                        'Si la registracion queda fuera de la ventana termino de procesar
                        Exit Do
                    End If
                End If
                If Not salir Then
                    StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro) "
                    StrSql = StrSql & " VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'"
                    StrSql = StrSql & rs!reghora & "'," & rs!Regnro
                    StrSql = StrSql & "," & CInt(Aux_Entrada)
                    StrSql = StrSql & ",2"
                    StrSql = StrSql & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    NroReg = NroReg + 1
                Else
                    salir = False
                End If
            End If
            
            'FGZ - 08/04/2008 - no estaba marcando la registracion
            StrSql = "UPDATE gti_registracion SET regestado = 'L' "
            StrSql = StrSql & " WHERE regnro = " & rs!Regnro
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
    
    rs.MoveNext
Loop

Cantidad = Cantidad_Reg_Obligatorias()
If depurar Then
    Flog.writeline Espacios(Tabulador * 2) & "Cantidad de Registraciones Obligatorias " & Cantidad
    Flog.writeline Espacios(Tabulador * 2) & "Cantidad de Registraciones encontradas en la ventana: " & NroReg
    Flog.writeline Espacios(Tabulador * 2) & "Cantidad de Registraciones de llamadas encontradas en la ventana: " & NroReg_Llamada
    Flog.writeline Espacios(Tabulador * 2) & "Marca de la Ultima Registracion: " & UltimaRegInsertadaWFTurno
End If
    
'Reviso si la Cantidad de Registraciones encontrada es menor que las obligatorias
If NroReg < Cantidad Then
    If ((NroReg Mod 2) <> 0) And UltimaRegInsertadaWFTurno = "E" Then
        'Buscar la Registracion
        Encontrado = False
        Call BuscarRegistracionSalida(p_ternro, TamañoVentana, Iteraciones, fecha_desde, hora_desde, fecha_hasta, hora_hasta, False, "0000", Encontrado)
    End If
End If
   
If (NroReg_Llamada Mod 2) <> 0 Then
    If UltimaRegEntradaLlamada Then
        Call BuscarSalidaLlamada(p_ternro, fecha_desde, 15, True)
    Else
        Call BuscarRegistracionLLamada(p_ternro, 15)
    End If
Else
    'Controlar y Corregir el caso que tenga una llamada antes del turno y una llamada despues de turno */
    If NroReg = 0 Then
        Call Solo_LLamadas(p_ternro, 15)
    End If
End If


If rs.State = adStateOpen Then rs.Close
Set rs = Nothing
End Sub


Public Sub Politica80vBB2(p_ternro As Long, Fecha As Date, fecha_desde As Date, hora_desde As String, fecha_hasta As Date, hora_hasta As String, subn As Integer, ByVal TamañoVentana As String, ByVal Iteraciones As Integer)
' --------------------------------------------------------------
' Descripcion: Registracion a evaluar. CUSTOM CARGIL
' Autor: FGZ - 20/05/2008
' Ultima modificacion:
' --------------------------------------------------------------
Dim rs As New ADODB.Recordset

Dim p_horario As Boolean
Dim salir As Boolean
Dim TEmp As String
Dim Cantidad As Integer
Dim Aux_Entrada As Boolean
Dim NroReg_Llamada As Integer
Dim NroReg As Integer
Dim Encontrado As Boolean
Dim UltimaRegEntradaLlamada As Boolean

salir = False
NroReg_Llamada = 0
NroReg = 0

'Busco en el Detalle del parte de autorizacion de Horarios una entrada para p_ternro
StrSql = "SELECT * FROM gti_regdet WHERE ternro = " & p_ternro
StrSql = StrSql & " and gprdfecdesde <= " & ConvFecha(Fecha) & " and gprdfechasta >= " & ConvFecha(Fecha)
StrSql = StrSql & " ORDER BY ternro ASC, gprdfecdesde ASC, gprdfechasta ASC"
rs.Open StrSql, objConn
If Not rs.EOF Then
    rs.MoveFirst
    'Registracion - entrada
    StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,entrada,evenro)" & _
    " VALUES(" & p_ternro & "," & ConvFecha(rs!gprdfecdesde) & ",'" & _
    rs!grpdhoradesde & "',-1,2)"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    'Registracion - salida
    StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,entrada,evenro)" & _
    " VALUES(" & p_ternro & "," & ConvFecha(rs!gprdfechasta) & ",'" & _
    rs!grpdhorahasta & "',0,2)"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    p_horario = True
End If
rs.Close


'FGZ - 14/09/2010 -----------------------------------------------------------
''Generar el wf con cada registracion dentro de la ventana
'StrSql = "SELECT gti_registracion.* FROM gti_reloj "
'StrSql = StrSql & " INNER JOIN gti_registracion ON gti_reloj.relnro = gti_registracion.relnro "
'StrSql = StrSql & " WHERE ternro= " & p_ternro
'StrSql = StrSql & " AND ((regestado ='I') OR (regestado = 'S'))"
'StrSql = StrSql & " AND regfecha >= " & ConvFecha(fecha_desde)
'StrSql = StrSql & " AND regfecha <= " & ConvFecha(fecha_hasta)
''StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
'StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
'rs.Open StrSql, objConn

StrSql = "SELECT gti_registracion.* FROM gti_reloj "
StrSql = StrSql & " INNER JOIN gti_registracion ON gti_reloj.relnro = gti_registracion.relnro "
StrSql = StrSql & " WHERE ternro= " & p_ternro
StrSql = StrSql & " AND ((regestado ='I') OR (regestado = 'S'))"
StrSql = StrSql & " AND ( (regfecha > " & ConvFecha(fecha_desde)
StrSql = StrSql & ") OR (regfecha = " & ConvFecha(fecha_desde)
StrSql = StrSql & " AND reghora >= '" & hora_desde & "') )"
StrSql = StrSql & " AND ( (regfecha < " & ConvFecha(fecha_hasta)
StrSql = StrSql & ") OR (regfecha = " & ConvFecha(fecha_hasta)
StrSql = StrSql & " AND reghora <= '" & hora_hasta & "') )"
'StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
rs.Open StrSql, objConn
'FGZ - 14/09/2010 -----------------------------------------------------------
Do While Not rs.EOF
        'C.A.T 26/09/2008
        'Si es una registracion de llamada de entrada y estamos en el
        'dia siguiente al de procesamiento => Salir
        'Esas registraciones se controlaran en el siguiente dia de procesamiento
        If Not EsNulo(rs!regllamada) And _
               CBool(rs!regllamada) And _
               rs!regentsal = "E" And _
               rs!regfecha <> fecha_desde Then
               Exit Do
        End If
        'C.A.T 01/10/2008
        'Guardo en una Variable de que tipo es la ultima registracion procesada
        'en el Caso que sea una Llamada de Entrada se correra un prodimiento
        'que buscara la primer registracion del diasiguiente y de ser una salida
        'de llamada se considerara en el procesamiento
        UltimaRegEntradaLlamada = CBool(rs!regllamada) And rs!regentsal = "E"




        If p_horario Then
            StrSql = "UPDATE gti_registracion SET regestado = 'L' WHERE regnro = " & rs!Regnro
            objConn.Execute StrSql, , adExecuteNoRecords
        Else
            Select Case UltimaRegInsertadaWFTurno
                Case "N":   Aux_Entrada = True
                            UltimaRegInsertadaWFTurno = "E"
                Case "E":   Aux_Entrada = False
                            UltimaRegInsertadaWFTurno = "S"
                Case "S":   Aux_Entrada = True
                            UltimaRegInsertadaWFTurno = "E"
            End Select
            
            'Ademas si es llamada Inserto otra vez
            If Not EsNulo(rs!regllamada) Then
                If CBool(rs!regllamada) Then
                    StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro) "
                    StrSql = StrSql & " VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'"
                    StrSql = StrSql & rs!reghora & "'," & rs!Regnro
                    StrSql = StrSql & "," & CInt(Aux_Entrada)
                    StrSql = StrSql & ",16"
                    StrSql = StrSql & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    NroReg_Llamada = NroReg_Llamada + 1
                    
                    StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro) "
                    StrSql = StrSql & " VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'"
                    StrSql = StrSql & rs!reghora & "'," & rs!Regnro
                    StrSql = StrSql & "," & CInt(Aux_Entrada)
                    StrSql = StrSql & ",2"
                    StrSql = StrSql & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    NroReg = NroReg + 1
                Else
                    If rs!regfecha = fecha_desde Then
                        If rs!reghora < hora_desde Then
                            salir = True
                        End If
                    End If
                    If rs!regfecha = fecha_hasta And Not salir Then
                        If rs!reghora > hora_hasta Then
                            'Si la registracion queda fuera de la ventana termino de procesar
                            Exit Do
                        End If
                    End If
                    If Not salir Then
                        StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro) "
                        StrSql = StrSql & " VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'"
                        StrSql = StrSql & rs!reghora & "'," & rs!Regnro
                        StrSql = StrSql & "," & CInt(Aux_Entrada)
                        StrSql = StrSql & ",2"
                        StrSql = StrSql & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                        NroReg = NroReg + 1
                    Else
                        salir = False
                    End If
                End If
            Else
                If rs!regfecha = fecha_desde Then
                    If rs!reghora < hora_desde Then
                        salir = True
                    End If
                End If
                If rs!regfecha = fecha_hasta And Not salir Then
                    If rs!reghora > hora_hasta Then
                        'Si la registracion queda fuera de la ventana termino de procesar
                        Exit Do
                    End If
                End If
                If Not salir Then
                    StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro) "
                    StrSql = StrSql & " VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'"
                    StrSql = StrSql & rs!reghora & "'," & rs!Regnro
                    StrSql = StrSql & "," & CInt(Aux_Entrada)
                    StrSql = StrSql & ",2"
                    StrSql = StrSql & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    NroReg = NroReg + 1
                Else
                    salir = False
                End If
            End If
            
            'FGZ - 08/04/2008 - no estaba marcando la registracion
            StrSql = "UPDATE gti_registracion SET regestado = 'L' "
            StrSql = StrSql & " WHERE regnro = " & rs!Regnro
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
    
    rs.MoveNext
Loop

Cantidad = Cantidad_Reg_Obligatorias()
If depurar Then
    Flog.writeline Espacios(Tabulador * 2) & "Cantidad de Registraciones Obligatorias " & Cantidad
    Flog.writeline Espacios(Tabulador * 2) & "Cantidad de Registraciones encontradas en la ventana: " & NroReg
    Flog.writeline Espacios(Tabulador * 2) & "Cantidad de Registraciones de llamadas encontradas en la ventana: " & NroReg_Llamada
    Flog.writeline Espacios(Tabulador * 2) & "Marca de la Ultima Registracion: " & UltimaRegInsertadaWFTurno
End If
    

'Reviso si la Cantidad de Registraciones encontrada es menor que las obligatorias
If NroReg < Cantidad Then
    If ((NroReg Mod 2) <> 0) And UltimaRegInsertadaWFTurno = "E" Then
        'Buscar la Registracion
        Encontrado = False
        Call BuscarRegistracionSalida(p_ternro, TamañoVentana, Iteraciones, fecha_desde, hora_desde, fecha_hasta, hora_hasta, False, "0000", Encontrado)
    End If
End If
   
If (NroReg_Llamada Mod 2) <> 0 Then
    If UltimaRegEntradaLlamada Then
        Call BuscarSalidaLlamada(p_ternro, fecha_desde, 16, True)
    Else
        Call BuscarRegistracionLLamada(p_ternro, 16)
    End If
Else
    'Controlar y Corregir el caso que tenga una llamada antes del turno y una llamada despues de turno */
    If NroReg = 0 Then
        Call Solo_LLamadas(p_ternro, 16)
    End If
End If


If rs.State = adStateOpen Then rs.Close
Set rs = Nothing
End Sub


Public Sub Politica80v11(p_ternro As Long, Fecha As Date, fecha_desde As Date, hora_desde As String, fecha_hasta As Date, hora_hasta As String, subn As Integer, ByVal TamañoVentana As String, ByVal Iteraciones As Integer)
' --------------------------------------------------------------
' Descripcion: Registracion a evaluar. Procesa las puntas pero inserta todas (puntas con evenro = 2 y el resto con evenro = 1)
'               Esta version actua en conjunto con la politica 111.
'               La idea es que las registraciones del medio no se tengan en cuenta para pagar pero si para controlar la secuencia
'       CUSTOM MONRESA
' Autor: FGZ
' Ultima modificacion: FGZ - 24/09/2010
' --------------------------------------------------------------
Dim rs As New ADODB.Recordset

Dim p_horario As Boolean
Dim salir As Boolean
Dim TEmp As String
Dim Cantidad As Integer

Dim Encontrado As Boolean
Dim fecres As Date
Dim horres As String
Dim ok As Boolean
Dim Veces As Integer
Dim Aux_Entrada As Boolean
Dim Primera As Boolean
Dim Ultima As Boolean
Dim evenro As Long


salir = False

' Busco en el Detalle del parte de autorizacion de Horarios una entrada para p_ternro
StrSql = "SELECT * FROM gti_regdet WHERE ternro = " & p_ternro & _
" and gprdfecdesde <= " & ConvFecha(Fecha) & " and gprdfechasta >= " & ConvFecha(Fecha) & _
" ORDER BY ternro ASC, gprdfecdesde ASC, gprdfechasta ASC"
'rs.Open StrSql, objConn
OpenRecordset StrSql, rs

If Not rs.EOF Then
    rs.MoveFirst
    ' MUY IMPORTANTE
    ' Chequear en la BD que los campos corresp a horas
    ' sean de tipo Fecha o con formato de hora
    ' Cambiar ConvHoraBD segun corresponda.
    
    ' Registracion - entrada
    StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,entrada,evenro)" & _
    " VALUES(" & p_ternro & "," & ConvFecha(rs!gprdfecdesde) & ",'" & _
    rs!grpdhoradesde & "',-1,2)"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    ' Registracion - salida
    StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,entrada,evenro)" & _
    " VALUES(" & p_ternro & "," & ConvFecha(rs!gprdfechasta) & ",'" & _
    rs!grpdhorahasta & "',0,2)"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    p_horario = True
End If
rs.Close

'  /* Generar el wf con cada registracion dentro de la ventana */
StrSql = "SELECT gti_registracion.* FROM gti_reloj "
StrSql = StrSql & " INNER JOIN gti_registracion ON gti_reloj.relnro = gti_registracion.relnro"
StrSql = StrSql & " WHERE ternro= " & p_ternro
StrSql = StrSql & " AND ((regestado ='I') OR (regestado = 'S'))"
StrSql = StrSql & " AND regfecha >= " & ConvFecha(fecha_desde) & " AND regfecha <= " & ConvFecha(fecha_hasta)
StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
'FGZ - 19/05/2010 ------------ Control FT -------------
StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
'FGZ - 19/05/2010 ------------ Control FT -------------
StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
rs.Open StrSql, objConn
If rs.EOF Then Exit Sub

Primera = True
Do While Not rs.EOF
    'Revisar: fn de formateo de hora
    If rs!regfecha = fecha_desde Then
        ' Convierto para comparar
        If rs!reghora < hora_desde Then
        ' Proceso el proximo
        ' Con esto reemplazo al next
            salir = True
        End If
    End If
    If rs!regfecha = fecha_hasta And Not salir Then
        If rs!reghora > hora_hasta Then
        'Si la registracion queda fuera de la ventana termino de procesar
            Exit Do
        End If
    End If
 
    If Not salir Then
        If p_horario Then
            StrSql = "UPDATE gti_registracion SET regestado = 'S' WHERE regnro = " & rs!Regnro
            objConn.Execute StrSql, , adExecuteNoRecords
        Else
            'FGZ - 19/05/2004
            Select Case UltimaRegInsertadaWFTurno
                Case "N":   Aux_Entrada = True
                            UltimaRegInsertadaWFTurno = "E"
                Case "E":   Aux_Entrada = False
                            UltimaRegInsertadaWFTurno = "S"
                Case "S":   Aux_Entrada = True
                            UltimaRegInsertadaWFTurno = "E"
            End Select
            
            If Primera Then
                evenro = 2
            Else
                'Reviso que no sea la ultima
                rs.MoveNext
                If rs.EOF Then
                    Ultima = True
                Else
                    Ultima = False
                End If
                rs.MovePrevious
                If Ultima Or rs!tiporeg = "01" Or rs!tiporeg = "1" Or rs!tiporeg = "04" Or rs!tiporeg = "4" Then
                    evenro = 2
                Else
                    evenro = 1
                End If
            End If
            
            StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro)" & _
            " VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'" & _
            rs!reghora & "'," & rs!Regnro & _
            "," & CInt(Aux_Entrada) & "," & evenro & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            Primera = False
        
            'FGZ - 08/04/2008 - no estaba marcando la registracion
            'StrSql = "UPDATE gti_registracion SET regestado = 'L' " & _
            '" WHERE regnro = " & rs!Regnro
            StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs!Regnro
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
    Else
        salir = False
    End If
    rs.MoveNext
Loop


' Busco las registraciones del intervalo en cuestión
If depurar Then
    Flog.writeline Espacios(Tabulador * 2) & " Busco las Registraciones para el Pago "
End If

StrSql = "SELECT * FROM gti_registracion "
StrSql = StrSql & " WHERE ternro= " & p_ternro
'StrSql = StrSql & " AND ((regestado = 'I') OR (regestado = 'S'))"
StrSql = StrSql & " AND ((regestado = 'I') OR (regestado = 'S') OR (regestado = 'L'))"
StrSql = StrSql & " AND ( (regfecha > " & ConvFecha(fecha_desde)
StrSql = StrSql & ") OR (regfecha = " & ConvFecha(fecha_desde)
StrSql = StrSql & " AND reghora >= '" & hora_desde & "') )"
StrSql = StrSql & " AND ( (regfecha < " & ConvFecha(fecha_hasta)
StrSql = StrSql & ") OR (regfecha = " & ConvFecha(fecha_hasta)
StrSql = StrSql & " AND reghora <= '" & hora_hasta & "') )"
StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
'FGZ - 19/05/2010 ------------ Control FT -------------
StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
'FGZ - 19/05/2010 ------------ Control FT -------------
StrSql = StrSql & " ORDER BY regfecha asc, reghora asc"
If depurar Then
    Flog.writeline Espacios(Tabulador * 2) & StrSql
End If

OpenRecordset StrSql, rs
Cantidad = rs.RecordCount

If (Not rs.EOF) And (Not rs.BOF) Then
    
    rs.MoveLast
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Cantidad de Registraciones encontradas enla ventana: " & Cantidad
        Flog.writeline Espacios(Tabulador * 2) & "Marca de la Ultima Registracion: " & rs!regentsal
    End If
    
    'Si son impares, entonces me falta una.
    'Tengo que encontrar una de salida para cerrar.
    'La ultima encontrada tiene que ser de entrada
    If ((Cantidad Mod 2) <> 0) And rs!regentsal = "E" Then
        ' FGZ - 27/10/2003
        ' Buscar la Registracion
        Encontrado = False
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Buscar registracion de salida"
        End If
        Call BuscarRegistracionSalida(p_ternro, TamañoVentana, Iteraciones, fecha_desde, hora_desde, fecha_hasta, hora_hasta, False, "0000", Encontrado)
    End If
    
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing

End If

End Sub




Public Sub BuscarRegistracionLLamada(ByVal Ternro As Long, ByVal evenro As Long)
' --------------------------------------------------------------
' Descripcion: Busca cual es la registracion de llamada faltante y la crea. CUSTOM CARGIL
' Autor: FGZ - 21/05/2008
' Ultima modificacion:
' --------------------------------------------------------------
Dim rs_Dia As New ADODB.Recordset
Dim rs_T As New ADODB.Recordset

Dim fecha_desde As String
Dim fecha_hasta As String
Dim hora_desde As String
Dim hora_hasta As String
Dim entrada As Boolean
Dim Tiene_Entrada As Boolean
Dim Encontro As Boolean


    Encontro = False
    
    'Busco la entrada y salida teorica
    StrSql = "SELECT * FROM " & TTempWFDia
    StrSql = StrSql & " WHERE codigo = 1"
    OpenRecordset StrSql, rs_Dia
    If Not rs_Dia.EOF Then
        fecha_desde = rs_Dia!Fecha
        hora_desde = rs_Dia!Hora
        Encontro = True
    End If
    StrSql = "SELECT * FROM " & TTempWFDia
    StrSql = StrSql & " WHERE codigo = 2"
    OpenRecordset StrSql, rs_Dia
    If Not rs_Dia.EOF Then
        fecha_hasta = rs_Dia!Fecha
        hora_hasta = rs_Dia!Hora
        Encontro = True
    End If

    Tiene_Entrada = False
    StrSql = "SELECT * FROM " & TTempWFTurno
    StrSql = StrSql & " WHERE evenro = " & evenro
    OpenRecordset StrSql, rs_T
    If Not rs_T.EOF Then
        If rs_T!entrada Then
            Tiene_Entrada = True
        End If
    End If
    
    If Encontro Then
        'Inserto la registracion faltante
        StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro) VALUES( "
        StrSql = StrSql & Ternro
        If Tiene_Entrada Then
            StrSql = StrSql & "," & ConvFecha(fecha_desde) & ",'"
            StrSql = StrSql & hora_desde & "',0"
        Else
            StrSql = StrSql & "," & ConvFecha(fecha_hasta) & ",'"
            StrSql = StrSql & hora_hasta & "',0"
        End If
        StrSql = StrSql & "," & CInt(Not Tiene_Entrada)
        StrSql = StrSql & "," & evenro
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
    End If
If rs_Dia.State = adStateOpen Then rs_Dia.Close
Set rs_Dia = Nothing
If rs_T.State = adStateOpen Then rs_T.Close
Set rs_T = Nothing
End Sub


Public Sub Solo_LLamadas(ByVal Ternro As Long, ByVal evenro As Long)
' --------------------------------------------------------------
' Descripcion: Busca cual es la registracion de llamada faltante y la crea. CUSTOM CARGIL
' Autor: FGZ - 21/05/2008
' Ultima modificacion:
' --------------------------------------------------------------
Dim rs_Dia As New ADODB.Recordset
Dim rs_T As New ADODB.Recordset

Dim fecha_desde As String
Dim fecha_hasta As String
Dim hora_desde As String
Dim hora_hasta As String
Dim LLFecha_Desde As String
Dim LLFecha_Hasta As String
Dim LLHora_Desde As String
Dim LLHora_Hasta As String

    'Busco la entrada y salida teorica
    StrSql = "SELECT * FROM " & TTempWFDia
    StrSql = StrSql & " WHERE codigo = 1"
    OpenRecordset StrSql, rs_Dia
    If Not rs_Dia.EOF Then
        fecha_desde = rs_Dia!Fecha
        hora_desde = rs_Dia!Hora
    End If
    StrSql = "SELECT * FROM " & TTempWFDia
    StrSql = StrSql & " WHERE codigo = 2"
    OpenRecordset StrSql, rs_Dia
    If Not rs_Dia.EOF Then
        fecha_hasta = rs_Dia!Fecha
        hora_hasta = rs_Dia!Hora
    End If

    StrSql = "SELECT * FROM " & TTempWFTurno
    StrSql = StrSql & " WHERE evenro = " & evenro
    OpenRecordset StrSql, rs_T
    If Not rs_T.EOF Then
        LLFecha_Desde = rs_T!Fecha
        LLHora_Desde = rs_T!Hora
        
        rs_T.MoveLast
        LLFecha_Hasta = rs_T!Fecha
        LLHora_Hasta = rs_T!Hora
        
        If (LLFecha_Desde < fecha_desde Or (LLFecha_Desde = fecha_desde And LLHora_Desde < hora_desde)) _
            And (LLFecha_Hasta > fecha_hasta Or (LLFecha_Hasta = fecha_hasta And LLHora_Hasta > hora_hasta)) Then
    
            'Inserto las registraciones faltantes
            StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro) VALUES( "
            StrSql = StrSql & Ternro
            StrSql = StrSql & "," & ConvFecha(fecha_desde) & ",'"
            StrSql = StrSql & hora_desde & "',0"
            StrSql = StrSql & "," & CInt(False)
            StrSql = StrSql & "," & evenro
            StrSql = StrSql & ")"
            objConn.Execute StrSql, , adExecuteNoRecords

            StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro) VALUES( "
            StrSql = StrSql & Ternro
            StrSql = StrSql & "," & ConvFecha(fecha_hasta) & ",'"
            StrSql = StrSql & hora_hasta & "',1"
            StrSql = StrSql & "," & CInt(True)
            StrSql = StrSql & "," & evenro
            StrSql = StrSql & ")"
            objConn.Execute StrSql, , adExecuteNoRecords

        'FGZ - 26/05/2008 - le saqué lo de arriba --------
        '   hasta donde veo yo, esto no hace falta pues por cada reg de llamada
        '   se inserta un wf_turno con evento 2 (como si hubiese una registracion normal)
        'FGZ - 26/05/2008 - le saqué lo de arriba --------

        End If
    End If
    

If rs_Dia.State = adStateOpen Then rs_Dia.Close
Set rs_Dia = Nothing
If rs_T.State = adStateOpen Then rs_T.Close
Set rs_T = Nothing
End Sub



Public Sub Politica80vAPQ(p_ternro As Long, Fecha As Date, fecha_desde As Date, hora_desde As String, fecha_hasta As Date, hora_hasta As String, subn As Integer, ByVal TamañoVentana As String, ByVal Iteraciones As Integer)
' --------------------------------------------------------------
' Descripcion: Registracion a evaluar. CUSTOM CARGIL
' Autor: FGZ - 20/05/2008
' Ultima modificacion:
' --------------------------------------------------------------
Dim rs As New ADODB.Recordset

Dim p_horario As Boolean
Dim salir As Boolean
Dim TEmp As String
Dim Cantidad As Integer
Dim Aux_Entrada As Boolean
Dim NroReg_Llamada As Integer
Dim NroReg As Integer
Dim Encontrado As Boolean
Dim UltimaRegEntradaLlamada As Boolean

salir = False
NroReg_Llamada = 0
NroReg = 0

'Busco en el Detalle del parte de autorizacion de Horarios una entrada para p_ternro
StrSql = "SELECT * FROM gti_regdet WHERE ternro = " & p_ternro
StrSql = StrSql & " and gprdfecdesde <= " & ConvFecha(Fecha) & " and gprdfechasta >= " & ConvFecha(Fecha)
StrSql = StrSql & " ORDER BY ternro ASC, gprdfecdesde ASC, gprdfechasta ASC"
rs.Open StrSql, objConn
If Not rs.EOF Then
    rs.MoveFirst
    'Registracion - entrada
    StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,entrada,evenro)" & _
    " VALUES(" & p_ternro & "," & ConvFecha(rs!gprdfecdesde) & ",'" & _
    rs!grpdhoradesde & "',-1,2)"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    'Registracion - salida
    StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,entrada,evenro)" & _
    " VALUES(" & p_ternro & "," & ConvFecha(rs!gprdfechasta) & ",'" & _
    rs!grpdhorahasta & "',0,2)"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    p_horario = True
End If
rs.Close

'FGZ - 14/09/2010 -----------------------------------------------------------
''Generar el wf con cada registracion dentro de la ventana
'StrSql = "SELECT gti_registracion.* FROM gti_reloj "
'StrSql = StrSql & " INNER JOIN gti_registracion ON gti_reloj.relnro = gti_registracion.relnro "
'StrSql = StrSql & " WHERE ternro= " & p_ternro
'StrSql = StrSql & " AND ((regestado ='I') OR (regestado = 'S'))"
'StrSql = StrSql & " AND regfecha >= " & ConvFecha(fecha_desde)
'StrSql = StrSql & " AND regfecha <= " & ConvFecha(fecha_hasta)
''StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
'StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
'rs.Open StrSql, objConn

StrSql = "SELECT gti_registracion.* FROM gti_reloj "
StrSql = StrSql & " INNER JOIN gti_registracion ON gti_reloj.relnro = gti_registracion.relnro "
StrSql = StrSql & " WHERE ternro= " & p_ternro
StrSql = StrSql & " AND ((regestado ='I') OR (regestado = 'S'))"
StrSql = StrSql & " AND ( (regfecha > " & ConvFecha(fecha_desde)
StrSql = StrSql & ") OR (regfecha = " & ConvFecha(fecha_desde)
StrSql = StrSql & " AND reghora >= '" & hora_desde & "') )"
StrSql = StrSql & " AND ( (regfecha < " & ConvFecha(fecha_hasta)
StrSql = StrSql & ") OR (regfecha = " & ConvFecha(fecha_hasta)
StrSql = StrSql & " AND reghora <= '" & hora_hasta & "') )"
'StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
rs.Open StrSql, objConn
'FGZ - 14/09/2010 -----------------------------------------------------------
Do While Not rs.EOF
        'C.A.T 26/09/2008
        'Si es una registracion de llamada de entrada y estamos en el
        'dia siguiente al de procesamiento => Salir
        'Esas registraciones se controlaran en el siguiente dia de procesamiento
        If Not EsNulo(rs!regllamada) And _
               CBool(rs!regllamada) And _
               rs!regentsal = "E" And _
               rs!regfecha <> fecha_desde Then
               Exit Do
        End If
        'C.A.T 01/10/2008
        'Guardo en una Variable de que tipo es la ultima registracion procesada
        'en el Caso que sea una Llamada de Entrada se correra un prodimiento
        'que buscara la primer registracion del diasiguiente y de ser una salida
        'de llamada se considerara en el procesamiento
        UltimaRegEntradaLlamada = CBool(rs!regllamada) And rs!regentsal = "E"



        If p_horario Then
            StrSql = "UPDATE gti_registracion SET regestado = 'L' WHERE regnro = " & rs!Regnro
            objConn.Execute StrSql, , adExecuteNoRecords
        Else
            Select Case UltimaRegInsertadaWFTurno
                Case "N":   Aux_Entrada = True
                            UltimaRegInsertadaWFTurno = "E"
                Case "E":   Aux_Entrada = False
                            UltimaRegInsertadaWFTurno = "S"
                Case "S":   Aux_Entrada = True
                            UltimaRegInsertadaWFTurno = "E"
            End Select
            
            If rs!regllamada And rs!regfecha > p_fecha And rs!regentsal = "E" Then
                Exit Do
            End If
            
            'Ademas si es llamada Inserto otra vez
            If Not EsNulo(rs!regllamada) Then
                If CBool(rs!regllamada) Then
                    StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro) "
                    StrSql = StrSql & " VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'"
                    StrSql = StrSql & rs!reghora & "'," & rs!Regnro
                    StrSql = StrSql & "," & CInt(Aux_Entrada)
                    StrSql = StrSql & ",16"
                    StrSql = StrSql & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    NroReg_Llamada = NroReg_Llamada + 1
                    
'                    StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro) "
'                    StrSql = StrSql & " VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'"
'                    StrSql = StrSql & rs!reghora & "'," & rs!Regnro
'                    StrSql = StrSql & "," & CInt(Aux_Entrada)
'                    StrSql = StrSql & ",2"
'                    StrSql = StrSql & ")"
'                    objConn.Execute StrSql, , adExecuteNoRecords
'                    NroReg = NroReg + 1
                Else
                    If rs!regfecha = fecha_desde Then
                        If rs!reghora < hora_desde Then
                            salir = True
                        End If
                    End If
                    If rs!regfecha = fecha_hasta And Not salir Then
                        If rs!reghora > hora_hasta Then
                            'Si la registracion queda fuera de la ventana termino de procesar
                            Exit Do
                        End If
                    End If
                    If Not salir Then
                        StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro) "
                        StrSql = StrSql & " VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'"
                        StrSql = StrSql & rs!reghora & "'," & rs!Regnro
                        StrSql = StrSql & "," & CInt(Aux_Entrada)
                        StrSql = StrSql & ",2"
                        StrSql = StrSql & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                        NroReg = NroReg + 1
                    Else
                        salir = False
                    End If
                End If
            Else
                If rs!regfecha = fecha_desde Then
                    If rs!reghora < hora_desde Then
                        salir = True
                    End If
                End If
                If rs!regfecha = fecha_hasta And Not salir Then
                    If rs!reghora > hora_hasta Then
                        'Si la registracion queda fuera de la ventana termino de procesar
                        Exit Do
                    End If
                End If
                If Not salir Then
                    StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro) "
                    StrSql = StrSql & " VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'"
                    StrSql = StrSql & rs!reghora & "'," & rs!Regnro
                    StrSql = StrSql & "," & CInt(Aux_Entrada)
                    StrSql = StrSql & ",2"
                    StrSql = StrSql & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    NroReg = NroReg + 1
                Else
                    salir = False
                End If
            End If
            
            'FGZ - 08/04/2008 - no estaba marcando la registracion
            StrSql = "UPDATE gti_registracion SET regestado = 'L' "
            StrSql = StrSql & " WHERE regnro = " & rs!Regnro
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
    
    rs.MoveNext
Loop

Cantidad = Cantidad_Reg_Obligatorias()
If depurar Then
    Flog.writeline Espacios(Tabulador * 2) & "Cantidad de Registraciones Obligatorias " & Cantidad
    Flog.writeline Espacios(Tabulador * 2) & "Cantidad de Registraciones encontradas en la ventana: " & NroReg
    Flog.writeline Espacios(Tabulador * 2) & "Cantidad de Registraciones de llamadas encontradas en la ventana: " & NroReg_Llamada
    Flog.writeline Espacios(Tabulador * 2) & "Marca de la Ultima Registracion: " & UltimaRegInsertadaWFTurno
End If
    

'Reviso si la Cantidad de Registraciones encontrada es menor que las obligatorias
If NroReg < Cantidad Then
    If ((NroReg Mod 2) <> 0) And UltimaRegInsertadaWFTurno = "E" Then
        'Buscar la Registracion
        Encontrado = False
        Call BuscarRegistracionSalida(p_ternro, TamañoVentana, Iteraciones, fecha_desde, hora_desde, fecha_hasta, hora_hasta, False, "0000", Encontrado)
    End If
End If
   
If (NroReg_Llamada Mod 2) <> 0 Then
    If UltimaRegEntradaLlamada Then
        Call BuscarSalidaLlamada(p_ternro, fecha_desde, 16, False)
    Else
        Call BuscarRegistracionLLamada(p_ternro, 16)
    End If
Else
    'Controlar y Corregir el caso que tenga una llamada antes del turno y una llamada despues de turno */
    If NroReg = 0 Then
        Call Solo_LLamadas(p_ternro, 16)
    End If
End If

If rs.State = adStateOpen Then rs.Close
Set rs = Nothing
End Sub





Public Sub Politica80vAPS(p_ternro As Long, Fecha As Date, fecha_desde As Date, hora_desde As String, fecha_hasta As Date, hora_hasta As String, subn As Integer, ByVal TamañoVentana As String, ByVal Iteraciones As Integer)
' --------------------------------------------------------------
' Descripcion: Registracion a evaluar. CUSTOM CARGIL
' Autor: FGZ - 20/05/2008
' Ultima modificacion:
' --------------------------------------------------------------
Dim rs As New ADODB.Recordset

Dim p_horario As Boolean
Dim salir As Boolean
Dim TEmp As String
Dim Cantidad As Integer
Dim Aux_Entrada As Boolean
Dim NroReg_Llamada As Integer
Dim NroReg As Integer
Dim Encontrado As Boolean
Dim UltimaRegEntradaLlamada As Boolean


salir = False
NroReg_Llamada = 0
NroReg = 0

'Busco en el Detalle del parte de autorizacion de Horarios una entrada para p_ternro
StrSql = "SELECT * FROM gti_regdet WHERE ternro = " & p_ternro
StrSql = StrSql & " and gprdfecdesde <= " & ConvFecha(Fecha) & " and gprdfechasta >= " & ConvFecha(Fecha)
StrSql = StrSql & " ORDER BY ternro ASC, gprdfecdesde ASC, gprdfechasta ASC"
rs.Open StrSql, objConn
If Not rs.EOF Then
    rs.MoveFirst
    'Registracion - entrada
    StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,entrada,evenro)" & _
    " VALUES(" & p_ternro & "," & ConvFecha(rs!gprdfecdesde) & ",'" & _
    rs!grpdhoradesde & "',-1,2)"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    'Registracion - salida
    StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,entrada,evenro)" & _
    " VALUES(" & p_ternro & "," & ConvFecha(rs!gprdfechasta) & ",'" & _
    rs!grpdhorahasta & "',0,2)"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    p_horario = True
End If
rs.Close



'FGZ - 14/09/2010 -----------------------------------------------------------
''Generar el wf con cada registracion dentro de la ventana
'StrSql = "SELECT gti_registracion.* FROM gti_reloj "
'StrSql = StrSql & " INNER JOIN gti_registracion ON gti_reloj.relnro = gti_registracion.relnro "
'StrSql = StrSql & " WHERE ternro= " & p_ternro
'StrSql = StrSql & " AND ((regestado ='I') OR (regestado = 'S'))"
'StrSql = StrSql & " AND regfecha >= " & ConvFecha(fecha_desde)
'StrSql = StrSql & " AND regfecha <= " & ConvFecha(fecha_hasta)
''StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
'StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
'rs.Open StrSql, objConn


StrSql = "SELECT gti_registracion.* FROM gti_reloj "
StrSql = StrSql & " INNER JOIN gti_registracion ON gti_reloj.relnro = gti_registracion.relnro "
StrSql = StrSql & " WHERE ternro= " & p_ternro
StrSql = StrSql & " AND ((regestado ='I') OR (regestado = 'S'))"
StrSql = StrSql & " AND ( (regfecha > " & ConvFecha(fecha_desde)
StrSql = StrSql & ") OR (regfecha = " & ConvFecha(fecha_desde)
StrSql = StrSql & " AND reghora >= '" & hora_desde & "') )"
StrSql = StrSql & " AND ( (regfecha < " & ConvFecha(fecha_hasta)
StrSql = StrSql & ") OR (regfecha = " & ConvFecha(fecha_hasta)
StrSql = StrSql & " AND reghora <= '" & hora_hasta & "') )"
'StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
rs.Open StrSql, objConn
'FGZ - 14/09/2010 -----------------------------------------------------------
Do While Not rs.EOF

        'C.A.T 26/09/2008
        'Si es una registracion de llamada de entrada y estamos en el
        'dia siguiente al de procesamiento => Salir
        'Esas registraciones se controlaran en el siguiente dia de procesamiento
        If Not EsNulo(rs!regllamada) And _
               CBool(rs!regllamada) And _
               rs!regentsal = "E" And _
               rs!regfecha <> fecha_desde Then
               Exit Do
        End If
        'C.A.T 01/10/2008
        'Guardo en una Variable de que tipo es la ultima registracion procesada
        'en el Caso que sea una Llamada de Entrada se correra un prodimiento
        'que buscara la primer registracion del diasiguiente y de ser una salida
        'de llamada se considerara en el procesamiento
        UltimaRegEntradaLlamada = CBool(rs!regllamada) And rs!regentsal = "E"

        If p_horario Then
            StrSql = "UPDATE gti_registracion SET regestado = 'L' WHERE regnro = " & rs!Regnro
            objConn.Execute StrSql, , adExecuteNoRecords
        Else
            Select Case UltimaRegInsertadaWFTurno
                Case "N":   Aux_Entrada = True
                            UltimaRegInsertadaWFTurno = "E"
                Case "E":   Aux_Entrada = False
                            UltimaRegInsertadaWFTurno = "S"
                Case "S":   Aux_Entrada = True
                            UltimaRegInsertadaWFTurno = "E"
            End Select
            
            'Ademas si es llamada Inserto otra vez
            If Not EsNulo(rs!regllamada) Then
                If CBool(rs!regllamada) Then
                    StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro) "
                    StrSql = StrSql & " VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'"
                    StrSql = StrSql & rs!reghora & "'," & rs!Regnro
                    StrSql = StrSql & "," & CInt(Aux_Entrada)
                    StrSql = StrSql & ",15"
                    StrSql = StrSql & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    NroReg_Llamada = NroReg_Llamada + 1
                    
                    StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro) "
                    StrSql = StrSql & " VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'"
                    StrSql = StrSql & rs!reghora & "'," & rs!Regnro
                    StrSql = StrSql & "," & CInt(Aux_Entrada)
                    StrSql = StrSql & ",2"
                    StrSql = StrSql & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    NroReg = NroReg + 1
                Else
                    If rs!regfecha = fecha_desde Then
                        If rs!reghora < hora_desde Then
                            salir = True
                        End If
                    End If
                    If rs!regfecha = fecha_hasta And Not salir Then
                        If rs!reghora > hora_hasta Then
                            'Si la registracion queda fuera de la ventana termino de procesar
                            Exit Do
                        End If
                    End If
                    If Not salir Then
                        StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro) "
                        StrSql = StrSql & " VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'"
                        StrSql = StrSql & rs!reghora & "'," & rs!Regnro
                        StrSql = StrSql & "," & CInt(Aux_Entrada)
                        StrSql = StrSql & ",2"
                        StrSql = StrSql & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                        NroReg = NroReg + 1
                    Else
                        salir = False
                    End If
                End If
            Else
                If rs!regfecha = fecha_desde Then
                    If rs!reghora < hora_desde Then
                        salir = True
                    End If
                End If
                If rs!regfecha = fecha_hasta And Not salir Then
                    If rs!reghora > hora_hasta Then
                        'Si la registracion queda fuera de la ventana termino de procesar
                        Exit Do
                    End If
                End If
                If Not salir Then
                    StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro) "
                    StrSql = StrSql & " VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'"
                    StrSql = StrSql & rs!reghora & "'," & rs!Regnro
                    StrSql = StrSql & "," & CInt(Aux_Entrada)
                    StrSql = StrSql & ",2"
                    StrSql = StrSql & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    NroReg = NroReg + 1
                Else
                    salir = False
                End If
            End If
            
            'FGZ - 08/04/2008 - no estaba marcando la registracion
            StrSql = "UPDATE gti_registracion SET regestado = 'L' "
            StrSql = StrSql & " WHERE regnro = " & rs!Regnro
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
    
    rs.MoveNext
Loop

Cantidad = Cantidad_Reg_Obligatorias()
If depurar Then
    Flog.writeline Espacios(Tabulador * 2) & "Cantidad de Registraciones Obligatorias " & Cantidad
    Flog.writeline Espacios(Tabulador * 2) & "Cantidad de Registraciones encontradas en la ventana: " & NroReg
    Flog.writeline Espacios(Tabulador * 2) & "Cantidad de Registraciones de llamadas encontradas en la ventana: " & NroReg_Llamada
    Flog.writeline Espacios(Tabulador * 2) & "Marca de la Ultima Registracion: " & UltimaRegInsertadaWFTurno
End If
    
'Reviso si la Cantidad de Registraciones encontrada es menor que las obligatorias
If NroReg < Cantidad Then
    If ((NroReg Mod 2) <> 0) And UltimaRegInsertadaWFTurno = "E" Then
        'Buscar la Registracion
        Encontrado = False
        Call BuscarRegistracionSalida(p_ternro, TamañoVentana, Iteraciones, fecha_desde, hora_desde, fecha_hasta, hora_hasta, False, "0000", Encontrado)
    End If
End If
   
If (NroReg_Llamada Mod 2) <> 0 Then
    'Call BuscarRegistracionLLamada(p_ternro, TamañoVentana, Iteraciones, fecha_desde, hora_desde, fecha_hasta, hora_hasta, False, "0000", Encontrado)
    If UltimaRegEntradaLlamada Then
        Call BuscarSalidaLlamada(p_ternro, fecha_desde, 15, True)
    Else
        Call BuscarRegistracionLLamada(p_ternro, 15)
    End If
Else
    'Controlar y Corregir el caso que tenga una llamada antes del turno y una llamada despues de turno */
    If NroReg = 0 Then
        Call Solo_LLamadas(p_ternro, 15)
    End If
End If


If rs.State = adStateOpen Then rs.Close
Set rs = Nothing
End Sub



Private Sub BuscarSalidaLlamada(ByVal p_ternro As Long, ByVal fecha_desde As Date, ByVal evenro, ByVal InsertaRegNormal As Boolean)
' -------------------------------------------------------
'Descripcion: Busca la primer registracion del dia siguiente y si es una salida de llamada la considera
' -------------------------------------------------------
Dim rs As New ADODB.Recordset
Dim Fecha As Date
    'busco en el dia siguiente
    Fecha = DateAdd("d", 1, fecha_desde)


    'La primer registracion del dia siguiente
    StrSql = " SELECT * FROM gti_registracion "
    StrSql = StrSql & " WHERE ternro = " & p_ternro
    StrSql = StrSql & " AND (regestado = 'I' OR regestado = 'S')"
    StrSql = StrSql & " AND regfecha = " & ConvFecha(Fecha)
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
    OpenRecordset StrSql, rs
    
    If Not rs.EOF Then
        'si es una salida de llamada
        If rs!regentsal = "S" And rs!regllamada = -1 Then
            StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro)" & _
            " VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'" & _
            rs!reghora & "'," & rs!Regnro & ",0," & evenro & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            'Si se paga lo que dice la forma de pago, se inserta
            'un wfturno comun (no todas las politicas)
            If InsertaRegNormal Then
                StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro)" & _
                " VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'" & _
                rs!reghora & "'," & rs!Regnro & ",0,2)"
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
            'FGZ - 08/04/2008 - no estaba marcando la registracion
            StrSql = "UPDATE gti_registracion SET regestado = 'L' "
            StrSql = StrSql & " WHERE regnro = " & rs!Regnro
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
    End If

    'Cierro y libero
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
End Sub


Private Sub BuscarRegistracionSalida(ByVal p_ternro As Long, ByVal TamañoVentana As String, ByVal Iteraciones As Integer, fecha_desde As Date, hora_desde As String, fecha_hasta As Date, hora_hasta As String, ByVal ConTopeHs As Boolean, ByVal Tope As String, Encontro As Boolean)
' -------------------------------------------------------
'Descripcion: Busca una registracion de salida, una determinada cantidad de veces (iteraciones) aumentando la ventana en un valor (TamañoVentana)
' hasta encontrar la registracion de Salida ó
' hasta encontrar una entrada (No puedo hacer nada, no hay solucion) ó
' hasta llegar al tope de Horas, en caso de que se use
' El procedimiento setea la variable encontró, si es que encontro una salida y las variables
' Fecha_desde, Hora_desde y
' Fecha_hasta, Hora_hasta y ademas si la encuentra la inserta en WFTurno

'Ultima Modificacion: 28/05/2007 - FGZ
'                           Si encuentra otra registracion ==> borra anormalidades de reg impares posiblemente generadas por la politica 70
' -------------------------------------------------------
Dim rs As New ADODB.Recordset
Dim rs_TipoH As New ADODB.Recordset
Dim Encontrado As Boolean
Dim Veces As Integer
Dim ok As Boolean
Dim fecres As Date
Dim horres As String
Dim AuxTopeHs As Integer
Dim AuxTopeHsActual As Integer

    ' Seteo el tope de Horas
    If ConTopeHs Then
        AuxTopeHs = CInt(Tope)
    Else
        AuxTopeHs = CInt(TamañoVentana) * Iteraciones
    End If
    
    AuxTopeHsActual = 0
    Encontrado = False
    Veces = 1
    Do While Not Encontrado And (Veces <= Iteraciones) And (AuxTopeHsActual <= AuxTopeHs)
    'Armo una ventana de búsqueda de tres horas para encontrar
    'la registracion faltante
                
        fecha_desde = fecha_hasta
        hora_desde = hora_hasta
        
        ' Tipicamente el Tamño de la Ventana (TamañoVentana) es "0300"
        objFechasHoras.SumoHoras fecha_desde, hora_desde, TamañoVentana, fecres, horres
        
        AuxTopeHsActual = AuxTopeHsActual + CInt(TamañoVentana)
        
        ok = objFechasHoras.ValidarHora(horres)
        If Not ok Then Exit Sub
        hora_hasta = horres
        fecha_hasta = fecres
       
        'Consulto con la nueva ventana
        StrSql = "SELECT * FROM gti_registracion " & _
        " WHERE ternro = " & p_ternro & _
        " AND ((regestado = 'I') OR (regestado = 'S'))" & _
        " AND ( (regfecha > " & ConvFecha(fecha_desde) & _
        ") OR (regfecha = " & ConvFecha(fecha_desde) & _
        " AND reghora >= '" & hora_desde & "') )" & _
        " AND ( (regfecha < " & ConvFecha(fecha_hasta) & _
        ") OR (regfecha = " & ConvFecha(fecha_hasta) & _
        " AND reghora <= '" & hora_hasta & "') )"
        StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
        'FGZ - 19/05/2010 ------------ Control FT -------------
        StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
        'FGZ - 19/05/2010 ------------ Control FT -------------
        StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
        OpenRecordset StrSql, rs
        
        'Si encuentro registraciones en la ventana
        If Not rs.EOF Then
        
            If (rs!regentsal = "S" And usaRelojEntradaSalida) Or (Not rs.EOF And Not usaRelojEntradaSalida) Then
            'Encontre la registracion de salida que me faltaba
                StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro)" & _
                " VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'" & _
                rs!reghora & "'," & rs!Regnro & _
                "," & IIf(rs!regentsal = "E", -1, 0) & ",2)"
                objConn.Execute StrSql, , adExecuteNoRecords
            
                Encontrado = True
                
                'FGZ - 28/05/2007 - Si ampliando la ventana se encontró una reg de salida ==>
                '                       debo revisar si inserté horas de registraciones impares (Pol 70) y borrarlas
                StrSql = "SELECT * FROM gti_config_tur_hor "
                StrSql = StrSql & " WHERE turnro = " & Nro_Turno
                StrSql = StrSql & " AND conhornro = 22"
                If rs.State = adStateOpen Then rs.Close
                OpenRecordset StrSql, rs_TipoH
                If rs_TipoH.EOF Then
                    Exit Sub
                Else
                    'Borro las horas de anormalidad posiblemente generadas
                    StrSql = "DELETE FROM gti_horcumplido "
                    'FGZ - 28/5/2009 - cambié empleg por ternro ----
                    'StrSql = StrSql & " WHERE empleg = " & Empleado.Legajo
                    StrSql = StrSql & " WHERE ternro = " & Empleado.Ternro
                    'FGZ - 28/5/2009 - cambié empleg por ternro ----
                    StrSql = StrSql & " AND thnro = " & rs_TipoH!thnro
                    'FGZ - 28/5/2009 - le faltaba la fecha al query ----
                    StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
                    'FGZ - 28/5/2009 - le faltaba la fecha al query ----
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & "  ==> Borro anormalidades de reg impares generadas"
                    End If
                End If
            Else
                'Encontre una de entrada. No hay solución
                Exit Sub
            End If
        ' FGZ 15/07/2003
'        Else
'            ' No tiene solucion
'            Exit Sub
        End If
        Veces = Veces + 1
    Loop
'End If

Encontro = Encontrado

'Cierro y libero
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
    If rs_TipoH.State = adStateOpen Then rs_TipoH.Close
    Set rs_TipoH = Nothing
End Sub



Public Sub politica810(ByRef Usa_Conv As Boolean)
' --------------------------------------------------------------
' Descripcion: Politica que indica si se usa conversi¢n de horas
'               true  = Usa Conversi¢n
'               false = No Usa Conversi¢n
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' --------------------------------------------------------------

    Usa_Conv = True

End Sub


Public Sub Politica390()
' --------------------------------------------------------------
' Descripcion: Devuelve TRUE si se paga horas extras el almuerzo por no tomarlo
'                      FALSE si no se paga.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' --------------------------------------------------------------

StrSql = "INSERT INTO wf_gtitpa(tpanro, vallog) VALUES (1, 0)"
objConn.Execute StrSql, , adExecuteNoRecords

End Sub


Public Sub politica800(ByRef fecha_proc As Integer, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Política que indica que fecha se debe tomar del HC para calcular el Acum. Diario.
'               1 - Fecha Desde del HC
'               2 - Fecha de Procesamiento del HC
'               3 - Fecha Hasta del HC
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' --------------------------------------------------------------
Select Case subn
Case 1:
    'Fecha de primer registracion del HC
    fecha_proc = 1
Case 2:
    'Fecha del HC
    fecha_proc = 2
Case 3:
    'Fecha de la ultima registracion del HC
    fecha_proc = 3
Case Else
    'Fecha de la registracion
    fecha_proc = 2
End Select


'StrSql = " SELECT gti_DetPolitica.detpolvalor1 FROM gti_detpolitica " & _
'         " INNER JOIN gti_alcanpolitica ON gti_detpolitica.detpolnro = gti_alcanpolitica.detpolnro " & _
'         " WHERE gti_alcanpolitica.cabpolnro = " & Cabecera & " And gti_detpolitica.detpolprograma = " & subn & _
'         " AND gti_detpolitica.detpolnro = " & Detalle & _
'         " AND gti_alcanpolitica.alcpolestado = -1 "
'OpenRecordset StrSql, rsPolitica
'
'If Not rsPolitica.EOF Then
'    fecha_proc = rsPolitica!detpolvalor1
'Else
'    ' no se encontro el detalle
'    Exit Sub
'End If

End Sub


Public Sub Politica90(Fecha As Date, NroTer As Long, VentDesde As String, ventFdesde As Date, VentHasta As String, ventFhasta As Date, Nro_Turno As Long, ByRef ok As Boolean, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripci¢n: Devuelve TRUE si el empleado tiene MENOS o IGUAL de 6 registraciones
'                       FALSE si el empleado tiene MAS de 6 registraciones.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' --------------------------------------------------------------

Dim rs As New ADODB.Recordset

Dim Cant As Integer
Dim contar As Boolean


Cant = 0
'/*** cuento las registraciones dentro de la ventana ***/
StrSql = "SELECT * FROM gti_registracion WHERE ternro= " & NroTer
StrSql = StrSql & " and regfecha >= " & ConvFecha(ventFdesde) & " and  regfecha <= " & ConvFecha(ventFhasta)
StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
'FGZ - 19/05/2010 ------------ Control FT -------------
StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
'FGZ - 19/05/2010 ------------ Control FT -------------
StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
OpenRecordset StrSql, rs
Do While Not rs.EOF
  If rs!regfecha = ventFdesde Then
      If rs!reghora < VentDesde Then
        'Si es temprano no la cuento
        contar = False
      End If
  End If
  If rs!regfecha = ventFhasta Then
      If rs!reghora > VentHasta Then
        'Si la registracion queda fuera de la ventana me voy
        Exit Do
      End If
  End If
  If contar Then
    Cant = Cant + 1
  Else
    contar = True
  End If
  rs.MoveNext
Loop
ok = Cant <= 6

End Sub



Public Sub Politica91(Fecha As Date, NroTer As Long, VentDesde As String, ventFdesde As Date, VentHasta As String, ventFhasta As Date, Nro_Turno As Long, deb As Boolean, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Chequea inconsistencias del tipo Licencias o Novedad de dia completo y tiene registraciones.
' Autor: FGZ - 06/11/2008
' Ultima modificacion: FGZ - 12/09/2011 - Se le agregó control de nulo sobre VentDConv y VentHConv
' --------------------------------------------------------------
Dim rs As New ADODB.Recordset
Dim Hay_Registraciones As Boolean

Dim Opcion As Integer
Dim TiposLic As String
Dim TipoHora As Long
Dim Anormalidad As String
Dim ok As Boolean
Dim Continua As Boolean
Dim VentDConv As String
Dim VentHConv As String
Dim TotHorHHMM As String


'Defaults
ok = True
Anormalidad = 0 'significa sin anormalidad
'VentDConv = ConvHora(VentDesde)
'VentHConv = ConvHora(VentHasta)

VentDConv = VentDesde
VentHConv = VentHasta


Call SetearParametrosPolitica(Detalle, ok)
Opcion = st_Opcion
TipoHora = st_TipoHora1
Continua = CBool(st_Continua)
Anormalidad = IIf(Not EsNulo(st_Anormalidad), CLng(st_Anormalidad), 0)
    
If depurar Then
    Flog.writeline Espacios(Tabulador * 2) & "Ventana Desde:" & ventFdesde & " Hasta: " & ventFhasta
    Flog.writeline Espacios(Tabulador * 2) & "Ventana Desde:" & VentDConv & " Hasta: " & VentHConv
End If

'FGZ - 09/09/2011 ----------------------------
If EsNulo(VentDConv) Then
    Flog.writeline Espacios(Tabulador * 2) & "Ventana - Desde No resuelta.Se tomará como default de 00:00"
    VentDConv = "0000"
End If
If EsNulo(VentHConv) Then
    Flog.writeline Espacios(Tabulador * 2) & "Ventana - Hasta No resuelta.Se tomará como default de 24:00"
    VentHConv = "2400"
End If
'FGZ - 09/09/2011 ----------------------------

'cuento las registraciones dentro de la ventana
StrSql = "SELECT * FROM gti_registracion WHERE ternro= " & NroTer
'StrSql = StrSql & " and regfecha >= " & ConvFecha(ventFdesde) & " and  regfecha <= " & ConvFecha(ventFhasta)

StrSql = StrSql & " and ("
StrSql = StrSql & " (regfecha > " & ConvFecha(ventFdesde) & " and  regfecha < " & ConvFecha(ventFhasta) & ")"
'StrSql = StrSql & " OR (regfecha = " & ConvFecha(ventFdesde) & " and  reghora > " & VentDesde & ")"
'StrSql = StrSql & " OR (regfecha = " & ConvFecha(ventFhasta) & " and  reghora < " & VentHasta & ")"
StrSql = StrSql & " OR (regfecha = " & ConvFecha(ventFdesde) & " and  reghora > '" & VentDConv & "')"
StrSql = StrSql & " OR (regfecha = " & ConvFecha(ventFhasta) & " and  reghora < '" & VentHConv & "')"
StrSql = StrSql & " )"
StrSql = StrSql & " AND ((regestado ='I') OR (regestado = 'S')) "
StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
'FGZ - 19/05/2010 ------------ Control FT -------------
StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
'FGZ - 19/05/2010 ------------ Control FT -------------
StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
OpenRecordset StrSql, rs
Hay_Registraciones = False
If Not rs.EOF Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Se encontraron registraciones y ademas tiene el dia justificado. "
        End If
        
        'Genera Anormalidad
        StrSql = "SELECT * FROM gti_config_tur_hor "
        StrSql = StrSql & " WHERE turnro = " & Nro_Turno
        StrSql = StrSql & " AND conhornro = " & TipoHora
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "No esta configurado el tipo de hora de Inconsistencia (" & TipoHora & ") para el Turno."
            End If
            rs.Close
            Exit Sub
        End If
        
        TotHorHHMM = CHoras(1, 60)
        
        StrSql = "INSERT INTO gti_horcumplido (Empleg,hordesde,horfecrep,horfecgen,horhasta,hormanual," & _
        "horvalido,ternro,thnro,turnro,horas,horcant,horestado,normnro) VALUES (" & Empleado.Legajo & "," & ConvFecha(Fecha) & "," & _
        ConvFecha(Fecha) & "," & ConvFecha(Fecha) & "," & ConvFecha(Fecha) & "," & "0,-1," & NroTer & "," & _
        rs!thnro & "," & Nro_Turno & "," & TotHorHHMM & ",1,''," & Anormalidad & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & rs!thnro & "- Cantidad: " & 1 & " hs."
        End If
        Continua_Procesando = Continua
Else
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "No Se encontraron registraciones."
    End If
    Continua_Procesando = True
End If
'Saco al rs de memoria
If rs.State = adStateOpen Then rs.Close
Set rs = Nothing
End Sub



Public Sub Politica92(Fecha As Date, NroTer As Long, VentDesde As String, ventFdesde As Date, VentHasta As String, ventFhasta As Date, Nro_Turno As Long, deb As Boolean, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Chequea inconsistencias del tipo Licencias o novedad parcial y tiene registraciones solapadas.
' Autor: FGZ - 06/11/2008
' Ultima modificacion:
' --------------------------------------------------------------
Dim rs As New ADODB.Recordset
Dim objRsJustif As New ADODB.Recordset

Dim Hay_Registraciones As Boolean

Dim Opcion As Integer
Dim TiposLic As String
Dim TipoHora As Long
Dim Anormalidad As String
Dim ok As Boolean
Dim Continua As Boolean
Dim VentDConv As String
Dim VentHConv As String

Dim Se_Cruza As Boolean
Dim HDesde As String
Dim HHasta As String

Dim Aux_FEntrada As Date
Dim Aux_Entrada As String
Dim Aux_FSalida As Date
Dim Aux_Salida As String
Dim Cant_R As Integer
Dim TotHorHHMM As String

'Defaults
ok = True
Anormalidad = 0 'significa sin anormalidad
VentDConv = ConvHora(VentDesde)
VentHConv = ConvHora(VentHasta)


Call SetearParametrosPolitica(Detalle, ok)
Opcion = st_Opcion
TipoHora = st_TipoHora1
Continua = CBool(st_Continua)
Anormalidad = IIf(Not EsNulo(st_Anormalidad), CLng(st_Anormalidad), 0)
    
'Busco las registraciones
StrSql = "SELECT * FROM " & TTempWFTurno
StrSql = StrSql & " WHERE evenro = 2 "
OpenRecordset StrSql, rs
If Not rs.EOF Then
    'debo buscar las justificaciones fijas cargadas y cruzarlas con las registraciones
    StrSql = "SELECT gti_justificacion.*,gti_tipojust.thnro FROM gti_justificacion"
    StrSql = StrSql & " INNER JOIN gti_tipojust ON gti_justificacion.tjusnro = gti_tipojust.tjusnro "
    StrSql = StrSql & " WHERE gti_justificacion.ternro = " & NroTer
    StrSql = StrSql & " AND gti_justificacion.jusdesde <= " & ConvFecha(p_fecha)
    StrSql = StrSql & " AND gti_justificacion.jushasta >= " & ConvFecha(p_fecha)
    StrSql = StrSql & " AND gti_justificacion.juseltipo = 2"
    OpenRecordset StrSql, objRsJustif
    Se_Cruza = False
    Do While Not objRsJustif.EOF And Not Se_Cruza
        HDesde = objRsJustif!jushoradesde
        HHasta = objRsJustif!jushorahasta
        
        'Busco alguna registracion que cruce la justificacion
        rs.MoveFirst
        Cant_R = 0
        Do While Not rs.EOF And Not Se_Cruza
            Cant_R = Cant_R + 1
            If rs!entrada Then
                Aux_Entrada = rs!Hora
                Aux_FEntrada = rs!Fecha
            Else
                Aux_Salida = rs!Hora
                Aux_FSalida = rs!Fecha
            End If
            
            If Cant_R Mod 2 = 0 Then
              'debo comprobar si los pares se cruzan
              'HDesde --- HHasta con Aux_entrada ---- Aux_salida
                If objFechasHoras.HorasInterseccion(p_fecha, HDesde, p_fecha, HHasta, Aux_FEntrada, Aux_Entrada, Aux_FSalida, Aux_Salida) > 0 Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Solapamiento."
                        Flog.writeline Espacios(Tabulador * 3) & "Justificación: " & " de " & p_fecha & " " & HDesde & " a " & p_fecha & " " & HHasta
                        Flog.writeline Espacios(Tabulador * 3) & "Registración : " & " de " & Aux_FEntrada & " " & Aux_Entrada & " a " & Aux_FSalida & " " & Aux_Salida
                    End If
                
                
                    Se_Cruza = True
                End If
            End If
            
            'siguiente registracion
            rs.MoveNext
        Loop
        
        'siguiente justificacion
        objRsJustif.MoveNext
    Loop
    
    If Se_Cruza Then
        'Genera Anormalidad
        StrSql = "SELECT * FROM gti_config_tur_hor "
        StrSql = StrSql & " WHERE turnro = " & Nro_Turno
        StrSql = StrSql & " AND conhornro = " & TipoHora
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "No Esta Configurado el Tipo de Hora de Registracione Impares para el Turno "
            End If
            rs.Close
            Exit Sub
        End If
        
        TotHorHHMM = CHoras(1, 60)
        
        StrSql = "INSERT INTO gti_horcumplido (Empleg,hordesde,horfecrep,horfecgen,horhasta,hormanual," & _
        "horvalido,ternro,thnro,turnro,horas,horcant,horestado,normnro) VALUES (" & Empleado.Legajo & "," & ConvFecha(Fecha) & "," & _
        ConvFecha(Fecha) & "," & ConvFecha(Fecha) & "," & ConvFecha(Fecha) & "," & "0,-1," & NroTer & "," & _
        rs!thnro & "," & Nro_Turno & "," & TotHorHHMM & ",1,''," & Anormalidad & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & rs!thnro & "- Cantidad: " & 1 & " hs."
        End If
        Continua_Procesando = Continua
    End If
Else
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "No Se encontraron registraciones."
    End If
    Continua_Procesando = True
End If

'Saco al rs de memoria
If rs.State = adStateOpen Then rs.Close
Set rs = Nothing

If objRsJustif.State = adStateOpen Then objRsJustif.Close
Set objRsJustif = Nothing
End Sub



Public Sub Politica464(p_fecha As Date, nro_tercero As Long, Nro_Turno As Long, Dias_trabajados As Integer, Dias_laborables As Integer, deb As Boolean, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Genera los francos trabajados.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' --------------------------------------------------------------
Dim TotHor As Single

Dim rs As New ADODB.Recordset
Dim TotHorHHMM As String


If Dias_trabajados > Dias_laborables Then

        StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 29" & _
        " AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
        rs.Open StrSql, objConn
       
        If rs.EOF Then
            'Entrada en la traza
            If depurar Then
                GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora Franco Trabajado para el Turno ", Str(Nro_Turno)
            End If
            GoTo CierroTodo
        End If
        
        TotHor = Dias_trabajados - Dias_laborables
        
        'Call ValidarTipoDeHora(rs!thnro, nro_turno, tipo_hora)
        ' Entrada en horario cumplido
        
        TotHorHHMM = CHoras(TotHor, 60)
        
        StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
        "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta" & _
        ") VALUES (" & TotHorHHMM & "," & TotHor & "," & _
        ConvFecha(DateAdd("d", -1, p_fecha)) & "," & ConvFecha(DateAdd("d", -1, p_fecha)) & "," & "0,-1," & _
        nro_tercero & "," & rs!thnro & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
        ConvFecha(DateAdd("d", -1, p_fecha)) & "," & ConvFecha(p_fecha) & ",'0000','0000')"
        objConn.Execute StrSql, , adExecuteNoRecords
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & rs!thnro & "- Cantidad: " & TotHor & " hs."
        End If
        rs.Close

End If

CierroTodo:
If rs.State = adStateOpen Then rs.Close
Set rs = Nothing

End Sub


Public Sub Politica465(ByVal Fecha As Date, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Genera porcion de devengamiento para francos compensatorios.
' Autor: FGZ - 20/04/2011
' Ultima modificacion:
' --------------------------------------------------------------
Dim Opcion  As Integer
Dim FactorLab As Double
Dim FactorNoLab As Double
Dim FactorFer As Double
'Dim Hay_Licencia As Boolean
Dim Cantidad As Double
Dim Descripcion As String
Dim objFeriado As New Feriado
Dim Tipo_Dia As Integer
Dim tipoPeriodoGTI
Dim arrDiasAnalizar
Dim tipoHoras


Dim rs_Franco As New ADODB.Recordset
Dim rsAD As New ADODB.Recordset

'------------
    Call SetearParametrosPolitica(Detalle, ok)

    Opcion = st_Opcion  'Version de la politica
    FactorLab = st_Factor 'Factor para dia laboral
    FactorNoLab = st_Factor2 'Factor para dia No laboral
    FactorFer = st_FactorDivision 'Factor para dia feriado
    tipoPeriodoGTI = st_TipoPeriodo 'Tipo de periodo
    arrDiasAnalizar = Split(st_ListaF1, "-")    'TIpo de periodo
    tipoHoras = st_ListaF2  'Tipos de horas
    If depurar Then
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Version: " & Opcion
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Factor dia Laborable: " & FactorLab
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Factor dia No Laborable: " & FactorNoLab
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Factor dia Feriado: " & FactorFer
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Tipo de Período de GTI: " & tipoPeriodoGTI
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Días a Analizar: " & st_ListaF1
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Tipos de horas considerar: " & tipoHoras
    End If
   
   
   Select Case Opcion
   Case 1: 'Estandar

   Case 1, 2: 'Custom Valle las leñas
        'la idea es que si en el dia el empleado tiene cargada una licencias de dia completo ==> no suma factor a cta cte de francos
        '   y caso contrarios suma el factor de acuerdo al tipo de dia.
        
        Set objFeriado.Conexion = objConn
        Set objFeriado.ConexionTraza = CnTraza
        objFeriado.Feriado Fecha, Empleado.Ternro, depurar
        
        Tipo_Dia = 1    'Laborable
        If esFeriado Then
            Tipo_Dia = 3
        End If
        
        Select Case Tipo_Dia
        Case 1: 'laboral
            Cantidad = FactorLab
        Case 2: 'No laboral
            Cantidad = FactorNoLab
        Case 3: 'Feriado
            Cantidad = FactorFer
        End Select
        Descripcion = "Fraccion Automatica por dia. Politica 465."
        If Not Existe_Justificacion(Fecha, Empleado.Ternro) Then
            'si no existe franco cargado ==> inserto registro y si existe actualizo
            StrSql = "SELECT * FROM emp_fr_comp "
            StrSql = StrSql & " WHERE ternro = " & Empleado.Ternro
            StrSql = StrSql & " AND fecha = " & ConvFecha(Fecha)
            OpenRecordset StrSql, rs_Franco
            If rs_Franco.EOF Then
               'Inserto el franco
                StrSql = "INSERT INTO emp_fr_comp ("
                StrSql = StrSql & "ternro,fecha,cantidad,unidad,comentario"
                StrSql = StrSql & ") VALUES (" & Empleado.Ternro
                StrSql = StrSql & "," & ConvFecha(Fecha)
                StrSql = StrSql & "," & Cantidad
                StrSql = StrSql & ",0"
                StrSql = StrSql & ",'" & Descripcion & "'"
                StrSql = StrSql & " )"
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Flog.writeline " Franco insertado "
            Else
                'Ya existe un Franco para la fecha. Actualizo
                StrSql = "UPDATE emp_fr_comp SET "
                StrSql = StrSql & " cantidad = " & Cantidad
                StrSql = StrSql & ",comentario ='" & Descripcion & "'"
                StrSql = StrSql & " WHERE frannro = " & rs_Franco!frannro
                objConn.Execute StrSql, , adExecuteNoRecords
                Flog.writeline " Franco Actualizado "
            End If
        Else
            'si no existe dejo como esta y si existe elimino
            'a fin de hacerlo mas eficiente directamente borro
            
            StrSql = "SELECT * FROM emp_fr_comp "
            StrSql = StrSql & " WHERE ternro = " & Empleado.Ternro
            StrSql = StrSql & " AND fecha = " & ConvFecha(Fecha)
            OpenRecordset StrSql, rs_Franco
            If Not rs_Franco.EOF Then
                'Ya existe un Franco para la fecha. Actualizo
                StrSql = "DELETE emp_fr_comp "
                StrSql = StrSql & " WHERE frannro = " & rs_Franco!frannro
                objConn.Execute StrSql, , adExecuteNoRecords
                Flog.writeline " Franco eliminado"
            End If
        End If
    
    Case 3:
        StrSql = "SELECT * FROM periodoAdicional " & _
                " WHERE fdesde <= " & ConvFecha(Fecha) & " AND fhasta >= " & ConvFecha(Fecha) & " AND tipoperiodoadicional= " & tipoPeriodoGTI
        OpenRecordset StrSql, rs_Franco
            
        If Not rs_Franco.EOF Then
            If arrDiasAnalizar(Weekday(Fecha, vbMonday) - 1) = "F" Then
                StrSql = "SELECT SUM(adcanthoras) adcanthoras FROM gti_acumdiario where thnro IN (" & tipoHoras & ") AND adfecha=" & ConvFecha(Fecha)
                OpenRecordset StrSql, rsAD
                Cantidad = FactorNoLab * CDbl(rsAD!adcanthoras)
                
                If Cantidad > 0 Then
                    StrSql = "SELECT * FROM emp_fr_comp " & _
                            " WHERE ternro = " & Empleado.Ternro & " AND fecha = " & ConvFecha(Fecha)
                    OpenRecordset StrSql, rs_Franco
                    If rs_Franco.EOF Then
                       'Inserto el franco
                        StrSql = "INSERT INTO emp_fr_comp ("
                        StrSql = StrSql & "ternro,fecha,cantidad,unidad,comentario"
                        StrSql = StrSql & ") VALUES (" & Empleado.Ternro
                        StrSql = StrSql & "," & ConvFecha(Fecha)
                        StrSql = StrSql & "," & Cantidad
                        StrSql = StrSql & ",0"
                        StrSql = StrSql & ",'" & Descripcion & "'"
                        StrSql = StrSql & " )"
                        objConn.Execute StrSql, , adExecuteNoRecords
                        
                        Flog.writeline " Franco insertado. Día: " & Fecha
                    Else
                        'Ya existe un Franco para la fecha. Actualizo
                        StrSql = "UPDATE emp_fr_comp SET "
                        StrSql = StrSql & " cantidad = " & Cantidad
                        StrSql = StrSql & ",comentario ='" & Descripcion & "'"
                        StrSql = StrSql & " WHERE frannro = " & rs_Franco!frannro
                        objConn.Execute StrSql, , adExecuteNoRecords
                        Flog.writeline " Franco Actualizado. Día: " & Fecha
                    End If
                End If
                
            Else
                Flog.writeline "Día " & Fecha & " laborable."
            End If
        End If
        
    
    Case Else
        'No hay procedimiento estandar aun
   End Select
   
   
'cierro y libero
If rs_Franco.State = adStateOpen Then rs_Franco.Close

Set rs_Franco = Nothing
End Sub

Public Sub Politica400(Fecha As Date, NroTer As Long, VentDesde As String, ventFdesde As Date, VentHasta As String, ventFhasta As Date, Nro_Turno As Long, deb As Boolean, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Política de almuerzo variable.
'               Lo genera segun las 2 registraciones del medio.
' Autor: ?
' Ultima modificacion: FGZ - 15/08/2006
' Ultima modificacion: FGZ - 17/06/2008 - versionado de la politica + agregado de parametros
' Ultima modificacion: FGZ - 23/09/2010 - nueva version 4 (custom Monresa)
' --------------------------------------------------------------
Dim Opcion As Long
Dim TH_Justif As Long
Dim TH_ExcesoComedor As Long
Dim VentSal As String
Dim VentEnt As String
Dim HsComedor As Integer
Dim ListaTH As String
Dim ListaTH1 As String


    Call SetearParametrosPolitica(Detalle, ok)

    Opcion = st_Opcion
    TH_Justif = st_TipoHora1
    TH_ExcesoComedor = st_TipoHora2
    VentSal = st_VentEnt
    VentEnt = st_VentSal
    HsComedor = st_Minutos
    'FGZ - 25/10/2011 -----------------------------------
    'Parametro opcional. Solo se usa en la V4
    ListaTH = st_ListaTH 'Lista de horas configuradas
    ListaTH1 = st_ListaF1 'EAM (5.49) - Lista de horas a las cuales se le descuentan las hs lunch
    
    'FGZ - 04/12/2014 ----------------------------------
    'Se le agregó detalle de log
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Version: " & Opcion
        Flog.writeline Espacios(Tabulador * 3) & "  Accion de Politica: " & Detalle
        Flog.writeline Espacios(Tabulador * 3) & "  Rango desde " & VentEnt & " hasta " & VentSal
        Flog.writeline Espacios(Tabulador * 3) & "  Minutos de Almuerzo: " & HsComedor
        Flog.writeline Espacios(Tabulador * 3) & "  Tipo Hora almuerzo: " & TH_Justif
        Flog.writeline Espacios(Tabulador * 3) & "  Tipo Hora Exceso de almuerzo: " & TH_ExcesoComedor
    End If
    'FGZ - 04/12/2014 ----------------------------------
    
    
    
    Select Case Opcion
    Case 1: 'Estandar (en realidad es la que estaba, no se si alguien la utiliza)
        If (Existe_Reg Or Existe_Reg_LLamada) Then
            Call Politica400V1(Fecha, NroTer, VentDesde, ventFdesde, VentHasta, ventFhasta, Nro_Turno, deb, subn, Cabecera, Detalle)
        Else
            Flog.writeline Espacios(Tabulador * 3) & "No hay registraciones. No se analiza Almuerzos."
        End If
    Case 2: 'Andreani (Nueva version)
        If (Existe_Reg Or Existe_Reg_LLamada) Then
            Call Politica400V2(Fecha, TH_Justif, TH_ExcesoComedor, HsComedor, VentEnt, VentSal)
        Else
            Flog.writeline Espacios(Tabulador * 3) & "No hay registraciones. No se analiza Almuerzos."
        End If
        'Exit Sub
    Case 3: 'Nueva Estandar (Nueva version)
        If (Existe_Reg Or Existe_Reg_LLamada) Then
            Call Politica400V3(Fecha, TH_Justif, TH_ExcesoComedor, HsComedor, VentEnt, VentSal)
        Else
            Flog.writeline Espacios(Tabulador * 3) & "No hay registraciones. No se analiza Almuerzos."
        End If
        'Exit Sub
    Case 4: 'Sykes (Nueva version)
        Call Politica400V4(Fecha, TH_Justif, TH_ExcesoComedor, HsComedor, VentEnt, VentSal, ListaTH1)
        'Exit Sub
    
    'Se reemplazó por la politica 401
    '    Case 4: 'Monresa ()
    '        Call Politica400V4(Fecha, TH_Justif, TH_ExcesoComedor, HsComedor, VentEnt, VentSal)
    '        Exit Sub
    Case 5: 'PROTOTIPO de Nueva Estandar (Nueva version aun NO liberada)
        If (Existe_Reg Or Existe_Reg_LLamada) Then
            Call Politica400V5(Fecha, TH_Justif, TH_ExcesoComedor, HsComedor, VentEnt, VentSal)
        Else
            Flog.writeline Espacios(Tabulador * 3) & "No hay registraciones. No se analiza Almuerzos."
        End If
    Case 6: 'EAM (5.49) Sykes SV - Se agrego una nueva version que funcina igual que la de CR version 4. La diferencia que las horas de lunch se restan a los tipos de horas configuradas
        Flog.writeline Espacios(Tabulador * 3) & "Version de la política: " & Opcion
        Call Politica400V6(Fecha, TH_Justif, TH_ExcesoComedor, HsComedor, VentEnt, VentSal, ListaTH, ListaTH1)
   Case 7: 'Tata (Ventana Dinamia)  - FZ-MDF
        If (Existe_Reg Or Existe_Reg_LLamada) Then
            Call Politica400V7(Fecha, TH_Justif, TH_ExcesoComedor, HsComedor, VentEnt, VentSal)
        Else
            Flog.writeline Espacios(Tabulador * 3) & "No hay registraciones. No se analiza Almuerzos."
        End If
   Case 8: 'Tata (Ventana Dinamia)  FZ-MDF
        If (Existe_Reg Or Existe_Reg_LLamada) Then
            Call Politica400V8(Fecha, TH_Justif, TH_ExcesoComedor, HsComedor, VentEnt, VentSal)
        Else
            Flog.writeline Espacios(Tabulador * 3) & "No hay registraciones. No se analiza Almuerzos."
        End If
    
    
    
    Case Else:
        'Version inexistente ==> ejecuto la estandar Nueva
        If (Existe_Reg Or Existe_Reg_LLamada) Then
            Call Politica400V3(Fecha, TH_Justif, TH_ExcesoComedor, HsComedor, VentEnt, VentSal)
        Else
            Flog.writeline Espacios(Tabulador * 3) & "No hay registraciones. No se analiza Almuerzos."
        End If
        'Exit Sub
    End Select
End Sub


Public Sub Politica400V1(Fecha As Date, NroTer As Long, VentDesde As String, ventFdesde As Date, VentHasta As String, ventFhasta As Date, Nro_Turno As Long, deb As Boolean, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Política de almuerzo variable.
'               Lo genera segun las 2 registraciones del medio.
' Autor: ?
' Ultima modificacion: FGZ - 15/08/2006
' --------------------------------------------------------------
Dim regnro_ent As Long
Dim regnro_sal As Long
Dim rec As Integer
Dim thora As Integer
Dim Hora1 As String
Dim Hora2 As String
Dim fecha1 As Date
Dim Fecha2 As Date
Dim canthoras As Single
Dim Thoras As Integer
Dim Tmin As Integer
Dim Tdias As Integer
Dim TotHor As Single
Dim rs As New ADODB.Recordset
Dim TotHorHHMM As String

Hora1 = ""
StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 18 "
StrSql = StrSql & " AND turnro = " & Nro_Turno
StrSql = StrSql & " ORDER BY conhornro ASC, turnro ASC"
OpenRecordset StrSql, rs
If Not rs.EOF Then
    thora = rs!thnro
Else
    If depurar Then
        GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora Almuerzo para el Turno ", Str(Nro_Turno)
        Flog.writeline Espacios(Tabulador * 3) & "No esta configurado el Tipo de Hora Almuerzo para el Turno " & Str(Nro_Turno)
    End If
    GoTo CierroTodo
End If

'busco la primer registracion de la ventana
StrSql = "SELECT * FROM gti_registracion WHERE ternro= " & NroTer
StrSql = StrSql & " and regfecha >= " & ConvFecha(ventFdesde) & " AND regfecha <= " & ConvFecha(ventFhasta)
StrSql = StrSql & " AND reghora >= '" & VentDesde & "' AND reghora <= '" & VentHasta
StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
'FGZ - 19/05/2010 ------------ Control FT -------------
StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
'FGZ - 19/05/2010 ------------ Control FT -------------
StrSql = StrSql & "' ORDER BY ternro ASC, regfecha ASC, reghora ASC"
OpenRecordset StrSql, rs
If Not rs.EOF Then
    regnro_ent = rs!Regnro
    
    rs.MoveLast
    regnro_sal = rs!Regnro
Else
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "No hay registraciones en esa ventana. Desde " & ventFdesde & "(" & VentDesde & ") Hasta: " & ventFhasta & "(" & VentHasta & ")"
    End If
    GoTo CierroTodo
End If

If regnro_ent = regnro_sal Then
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Una sola registracion en el embudo. Salgo."
    End If
    GoTo CierroTodo
End If

StrSql = "SELECT * FROM gti_registracion WHERE ternro= " & NroTer
StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
'FGZ - 19/05/2010 ------------ Control FT -------------
StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
'FGZ - 19/05/2010 ------------ Control FT -------------
StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
OpenRecordset StrSql, rs
Do While Not rs.EOF
    If (rs!Regnro = regnro_sal) Then
        Exit Do
    End If
    If Hora1 = "" Then
        Hora1 = rs!reghora
        fecha1 = rs!regfecha
    Else
        Hora2 = rs!reghora
        Fecha2 = rs!regfecha
    End If
    
    'Actualizo la registracion
    StrSql = "UPDATE gti_registracion SET regestado = 'P'"
    StrSql = StrSql & ", fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs!Regnro
    objConn.Execute StrSql, , adExecuteNoRecords
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "  ==> marco la registracion como procesada. " & rs!Regnro
    End If
    
    rs.MoveNext
Loop

Call objFechasHoras.RestaHs(fecha1, Hora1, Fecha2, Hora2, Tdias, Thoras, Tmin)
canthoras = Thoras + (Tmin / 60)

Call ValorenHs(Tdias, Thoras, Tmin, TotHorHHMM)
TotHorHHMM = "'" & TotHorHHMM & "'"
'TotHorHHMM = CHoras(horas_tol, 60)

'Entrada en horario cumplido
StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual,"
StrSql = StrSql & "horvalido,ternro,thnro,turnro,empleg,horfecrep,,horfecgen,horhoradesde,horhorahasta"
StrSql = StrSql & ") VALUES (" & TotHorHHMM & "," & canthoras & ","
StrSql = StrSql & ConvFecha(Fecha) & "," & ConvFecha(Fecha) & "," & "0,-1,"
StrSql = StrSql & NroTer & "," & thora & "," & Nro_Turno & "," & Empleado.Legajo & ","
StrSql = StrSql & ConvFecha(Fecha) & "," & ConvFecha(Fecha) & ",'" & Hora1 & "','" & Hora2 & "')"
objConn.Execute StrSql, , adExecuteNoRecords
If depurar Then
    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & thora & "- Cantidad: " & canthoras & " hs."
End If



CierroTodo:
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
End Sub

Public Sub Politica400V2(ByVal Fecha As Date, ByVal TH_Justif As Long, ByVal TH_ExcesoComedor As Long, ByVal HsComedor As Integer, ByVal VentEnt As String, ByVal VentSal As String)
' --------------------------------------------------------------
' Descripcion: Política de almuerzo variable. Andreani
' Autor: FGZ - 18/06/2008
' --------------------------------------------------------------
Dim THJust As Long
Dim THExceso As Long
Dim TNovJust As Long
Dim TNovExceso As Long
Dim TJusJust As Long
Dim TJusExceso As Long
Dim HSExcesoComedor As Single

Dim J1Desde As String
Dim J1Hasta As String
Dim J2Desde As String
Dim J2Hasta As String
Dim fecres As Date

Dim Thoras As Integer
Dim Tmin As Integer
Dim Tdias As Integer
Dim TotHor As Single
Dim NroTer As Long
Dim Gnovnro As Long

Dim rs As New ADODB.Recordset
Dim rs_Tjus As New ADODB.Recordset

Dim TotHorHHMM As String


StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = " & TH_Justif
StrSql = StrSql & " AND turnro = " & Nro_Turno
StrSql = StrSql & " ORDER BY conhornro ASC, turnro ASC"
OpenRecordset StrSql, rs
If Not rs.EOF Then
    THJust = rs!thnro
    TJusJust = 2
    
    'Busco el tipo de novedad asociado
    StrSql = "SELECT gtnovnro FROM gti_tiponovedad"
    StrSql = StrSql & " WHERE thnro = " & THJust
    OpenRecordset StrSql, rs_Tjus
    If rs_Tjus.EOF Then
        If depurar Then
            GeneraTraza Empleado.Ternro, p_fecha, "El tipo de Hora " & THJust & " no tiene Tipo de Justificacion (Novedad) asociado", Str(Nro_Turno)
            Flog.writeline Espacios(Tabulador * 3) & "El tipo de Hora " & THJust & " no tiene Tipo de Justificacion (Novedad) asociado"
        End If
        GoTo CierroTodo
    Else
        TNovJust = rs_Tjus!gtnovnro
    End If
    
Else
    If depurar Then
        GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora Almuerzo para el Turno ", Str(Nro_Turno)
        Flog.writeline Espacios(Tabulador * 3) & "No esta configurado el Tipo de Hora Almuerzo para el Turno " & Str(Nro_Turno)
    End If
    GoTo CierroTodo
End If

StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = " & TH_ExcesoComedor
StrSql = StrSql & " AND turnro = " & Nro_Turno
StrSql = StrSql & " ORDER BY conhornro ASC, turnro ASC"
OpenRecordset StrSql, rs
If Not rs.EOF Then
    THExceso = rs!thnro
    TJusExceso = 2
    
    'Busco el tipo de novedad asociado
    StrSql = "SELECT gtnovnro FROM gti_tiponovedad"
    StrSql = StrSql & " WHERE thnro = " & THExceso
    OpenRecordset StrSql, rs_Tjus
    If rs_Tjus.EOF Then
        If depurar Then
            GeneraTraza Empleado.Ternro, p_fecha, "El tipo de Hora " & THExceso & " no tiene Tipo de Justificacion (Novedad) asociado", Str(Nro_Turno)
            Flog.writeline Espacios(Tabulador * 3) & "El tipo de Hora " & THExceso & " no tiene Tipo de Justificacion (Novedad) asociado"
        End If
        GoTo CierroTodo
    Else
        TNovExceso = rs_Tjus!gtnovnro
    End If
Else
    If depurar Then
        GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora de Exceso de Almuerzo para el Turno ", Str(Nro_Turno)
        Flog.writeline Espacios(Tabulador * 3) & "No esta configurado el Tipo de Hora de Exceso de Almuerzo para el Turno " & Str(Nro_Turno)
    End If
    GoTo CierroTodo
End If

    
 'Borro las novedades horarias y justificaciones insertadas por esta politica
 StrSql = "SELECT gnovnro FROM gti_novedad "
 StrSql = StrSql & " WHERE gnovorden = -1"
 StrSql = StrSql & " AND gnovdesde = " & ConvFecha(p_fecha)
 StrSql = StrSql & " AND gnovhasta = " & ConvFecha(p_fecha)
 StrSql = StrSql & " AND gnovotoa = " & Empleado.Ternro
 'FGZ - 19/05/2010 ------------ Control FT -------------
 StrSql = StrSql & " AND (gti_novedad.ft = 0 OR (gti_novedad.ft = -1 AND gti_novedad.ftap = -1))"
 'FGZ - 19/05/2010 ------------ Control FT -------------
 OpenRecordset StrSql, rs
 Do While Not rs.EOF
     StrSql = "DELETE gti_justificacion WHERE juscodext = " & rs!Gnovnro
     'FGZ - 21/01/2009 - LE agregue este control porque sino podria borrar justificaciones que no corresponden
     StrSql = StrSql & " AND jussigla = 'ALM'"
     StrSql = StrSql & " AND ternro = " & Empleado.Ternro
     objConn.Execute StrSql, , adExecuteNoRecords

     rs.MoveNext
 Loop
 StrSql = "DELETE gti_novedad "
 StrSql = StrSql & " WHERE gnovorden = -1"
 StrSql = StrSql & " AND gnovdesde = " & ConvFecha(p_fecha)
 StrSql = StrSql & " AND gnovhasta = " & ConvFecha(p_fecha)
 StrSql = StrSql & " AND gnovotoa = " & Empleado.Ternro
 objConn.Execute StrSql, , adExecuteNoRecords



    'Las inserto como de tipo 4 (que no existe) para que se traten en forma distinta a las de
    '   tipo 2 --> Parciales Fijas
    '   tipo 3 --> Parciales Variables

    'Insertar la novedad
    StrSql = "INSERT INTO gti_novedad(gnovdesabr,gnovdesext,gnovotoa,"
    StrSql = StrSql & "gnovdesde, gnovhasta, gnovestado,gtnovnro,gnovdiacompleto,"
    StrSql = StrSql & "gnovtipo,gnovorden,gnovmaxhoras)"
    StrSql = StrSql & " VALUES ("
    StrSql = StrSql & "'Almuerzo'" & ","
    StrSql = StrSql & "'Novedad Automatica por Politica 400'" & ","
    StrSql = StrSql & Empleado.Ternro & ","
    StrSql = StrSql & ConvFecha(p_fecha) & ","
    StrSql = StrSql & ConvFecha(p_fecha) & ","
    StrSql = StrSql & "' '" & ","
    StrSql = StrSql & TNovJust & ","
    StrSql = StrSql & -1 & ","
    StrSql = StrSql & 4 & ","
    StrSql = StrSql & -1 & ","
    StrSql = StrSql & (HsComedor / 60) & ")"
    objConn.Execute StrSql, , adExecuteNoRecords

    Gnovnro = getLastIdentity(objConn, "gti_novedad")

    
    J1Desde = VentEnt
    Call objFechasHoras.SumoHoras(p_fecha, J1Desde, Format(HsComedor, "0000"), fecres, J1Hasta)
    If Not objFechasHoras.ValidarHora(J1Hasta) Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "Hora Invalida " & J1Hasta
        End If
        Exit Sub
    End If
    
    J2Desde = J1Hasta
    J2Hasta = VentSal

    'Inserto la justificacion para el almuerzo
    StrSql = "INSERT INTO gti_justificacion(jussigla,turnro,ternro,tjusnro,"
    StrSql = StrSql & "jusdiacompleto,jusdesde,jushasta,jussistema,juscanths,"
    StrSql = StrSql & "jushoradesde,jushorahasta,juseltipo,juselmaxhoras,juselorden,juscodext)"
    StrSql = StrSql & " VALUES ("
    StrSql = StrSql & "'ALM'" & ","
    StrSql = StrSql & Nro_Turno & ","
    StrSql = StrSql & Empleado.Ternro & ","
    StrSql = StrSql & TJusJust & ","
    StrSql = StrSql & "0," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",-1,"
    StrSql = StrSql & (HsComedor / 60) & ","
    StrSql = StrSql & "'" & VentEnt & "'" & ","
    StrSql = StrSql & "'" & VentSal & "'" & ","
    StrSql = StrSql & "4" & ","
    StrSql = StrSql & (HsComedor / 60) & ","
    StrSql = StrSql & "0,"
    StrSql = StrSql & Gnovnro & ")"
    objConn.Execute StrSql, , adExecuteNoRecords
    If depurar Then
        Flog.writeline Espacios(Tabulador * 4) & "  ==> Insertó Justificación (Almuerzo)--> Novedad: " & Gnovnro & "- Cantidad: " & HsComedor & " hs."
    End If

    'Inserto la justificacion para el exceso del almuerzo
    HSExcesoComedor = 0
    objFechasHoras.RestaHs Fecha, VentEnt, Fecha, VentSal, Tdias, Thoras, Tmin
    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
    HSExcesoComedor = TotHor - (HsComedor / 60)
    
    'Insertar la novedad
    StrSql = "INSERT INTO gti_novedad(gnovdesabr,gnovdesext,gnovotoa,"
    StrSql = StrSql & "gnovdesde, gnovhasta, gnovestado,gtnovnro,gnovdiacompleto,"
    StrSql = StrSql & "gnovtipo,gnovorden,gnovmaxhoras)"
    StrSql = StrSql & " VALUES ("
    StrSql = StrSql & "'Exceso Almuerzo'" & ","
    StrSql = StrSql & "'Novedad Automatica por Politica 400'" & ","
    StrSql = StrSql & Empleado.Ternro & ","
    StrSql = StrSql & ConvFecha(p_fecha) & ","
    StrSql = StrSql & ConvFecha(p_fecha) & ","
    StrSql = StrSql & "' '" & ","
    StrSql = StrSql & TNovExceso & ","
    StrSql = StrSql & -1 & ","
    StrSql = StrSql & 4 & ","
    StrSql = StrSql & -1 & ","
    StrSql = StrSql & HSExcesoComedor & ")"
    objConn.Execute StrSql, , adExecuteNoRecords
    Gnovnro = getLastIdentity(objConn, "gti_novedad")

    'Inserto la justificacion
    StrSql = "INSERT INTO gti_justificacion(jussigla,turnro,ternro,tjusnro,"
    StrSql = StrSql & "jusdiacompleto,jusdesde,jushasta,jussistema,juscanths,"
    StrSql = StrSql & "jushoradesde,jushorahasta,juseltipo,juselmaxhoras,juselorden,juscodext)"
    StrSql = StrSql & " VALUES ("
    StrSql = StrSql & "'ALM'" & ","
    StrSql = StrSql & Nro_Turno & ","
    StrSql = StrSql & Empleado.Ternro & ","
    StrSql = StrSql & TJusExceso & ","
    StrSql = StrSql & "0," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",-1,"
    StrSql = StrSql & HSExcesoComedor & ","
    StrSql = StrSql & "'" & VentEnt & "'" & ","
    StrSql = StrSql & "'" & VentSal & "'" & ","
    StrSql = StrSql & "4" & ","
    StrSql = StrSql & HSExcesoComedor & ","
    StrSql = StrSql & "1,"
    StrSql = StrSql & Gnovnro & ")"
    objConn.Execute StrSql, , adExecuteNoRecords
    If depurar Then
        Flog.writeline Espacios(Tabulador * 4) & "  ==> Insertó Justificación (Exceso de Almuerzo)--> Novedad: " & Gnovnro & "- Cantidad: " & HsComedor & " hs."
    End If
    
    'Genero las horas Justificadas
    Call GenerarJustificacionesAutomaticas(Empleado.Ternro, p_fecha)

CierroTodo:
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
    
    If rs_Tjus.State = adStateOpen Then rs_Tjus.Close
    Set rs_Tjus = Nothing
End Sub


Public Sub Politica400V3(ByVal Fecha As Date, ByVal TH_Justif As Long, ByVal TH_ExcesoComedor As Long, ByVal HsComedor As Integer, ByVal VentEnt As String, ByVal VentSal As String)
' --------------------------------------------------------------
' Descripcion: Política de almuerzo variable. Estandar NUEVA
' Autor: FGZ - 20/08/2008
' --------------------------------------------------------------
Dim THJust As Long
Dim THExceso As Long
Dim TNovJust As Long
Dim TNovExceso As Long
Dim TJusJust As Long
Dim TJusExceso As Long
Dim HSExcesoComedor As Single

Dim J1Desde As String
Dim J1Hasta As String
Dim J2Desde As String
Dim J2Hasta As String
Dim fecres As Date

Dim Thoras As Integer
Dim Tmin As Integer
Dim Tdias As Integer
Dim TotHor As Single
Dim NroTer As Long
Dim Gnovnro As Long

Dim rs As New ADODB.Recordset
Dim rs_Tjus As New ADODB.Recordset

StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = " & TH_Justif
StrSql = StrSql & " AND turnro = " & Nro_Turno
StrSql = StrSql & " ORDER BY conhornro ASC, turnro ASC"
OpenRecordset StrSql, rs
If Not rs.EOF Then
    THJust = rs!thnro
    TJusJust = 2
    
    'Busco el tipo de novedad asociado
    StrSql = "SELECT gtnovnro FROM gti_tiponovedad"
    StrSql = StrSql & " WHERE thnro = " & THJust
    OpenRecordset StrSql, rs_Tjus
    If rs_Tjus.EOF Then
        If depurar Then
            GeneraTraza Empleado.Ternro, p_fecha, "El tipo de Hora " & THJust & " no tiene Tipo de Justificacion (Novedad) asociado", Str(Nro_Turno)
            Flog.writeline Espacios(Tabulador * 3) & "El tipo de Hora " & THJust & " no tiene Tipo de Justificacion (Novedad) asociado"
        End If
        GoTo CierroTodo
    Else
        TNovJust = rs_Tjus!gtnovnro
    End If
    
Else
    If depurar Then
        GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora Almuerzo para el Turno ", Str(Nro_Turno)
        Flog.writeline Espacios(Tabulador * 3) & "No esta configurado el Tipo de Hora Almuerzo para el Turno " & Str(Nro_Turno)
    End If
    GoTo CierroTodo
End If


StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = " & TH_ExcesoComedor
StrSql = StrSql & " AND turnro = " & Nro_Turno
StrSql = StrSql & " ORDER BY conhornro ASC, turnro ASC"
OpenRecordset StrSql, rs
If Not rs.EOF Then
    THExceso = rs!thnro
    TJusExceso = 2
    
    'Busco el tipo de novedad asociado
    StrSql = "SELECT gtnovnro FROM gti_tiponovedad"
    StrSql = StrSql & " WHERE thnro = " & THExceso
    OpenRecordset StrSql, rs_Tjus
    If rs_Tjus.EOF Then
        If depurar Then
            GeneraTraza Empleado.Ternro, p_fecha, "El tipo de Hora " & THExceso & " no tiene Tipo de Justificacion (Novedad) asociado", Str(Nro_Turno)
            Flog.writeline Espacios(Tabulador * 3) & "El tipo de Hora " & THExceso & " no tiene Tipo de Justificacion (Novedad) asociado. No se genera justificacion por Exceso."
        End If
    Else
        TNovExceso = rs_Tjus!gtnovnro
    End If
Else
    If depurar Then
        GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora de Exceso de Almuerzo para el Turno ", Str(Nro_Turno)
        Flog.writeline Espacios(Tabulador * 3) & "No esta configurado el Tipo de Hora de Exceso de Almuerzo para el Turno " & Str(Nro_Turno) & ". No se genera justificacion por Exceso."
    End If
End If

    
 'Borro las novedades horarias y justificaciones insertadas por esta politica
 StrSql = "SELECT gnovnro FROM gti_novedad "
  StrSql = StrSql & " WHERE (gnovorden = -1 OR gnovorden = -2)"  'estaba solo el -1
 StrSql = StrSql & " AND gnovdesde = " & ConvFecha(p_fecha)
 StrSql = StrSql & " AND gnovhasta = " & ConvFecha(p_fecha)
 StrSql = StrSql & " AND gnovotoa = " & Empleado.Ternro
 'FGZ - 19/05/2010 ------------ Control FT -------------
 StrSql = StrSql & " AND (gti_novedad.ft = 0 OR (gti_novedad.ft = -1 AND gti_novedad.ftap = -1))"
 'FGZ - 19/05/2010 ------------ Control FT -------------
 OpenRecordset StrSql, rs
 Do While Not rs.EOF
     StrSql = "DELETE gti_justificacion WHERE juscodext = " & rs!Gnovnro
     'FGZ - 21/01/2009 - LE agregue este control porque sino podria borrar justificaciones que no corresponden
     StrSql = StrSql & " AND jussigla = 'ALM'"
     StrSql = StrSql & " AND ternro = " & Empleado.Ternro
     objConn.Execute StrSql, , adExecuteNoRecords

     rs.MoveNext
 Loop
 StrSql = "DELETE gti_novedad "
 'StrSql = StrSql & " WHERE gnovorden = -1"
 StrSql = StrSql & " WHERE (gnovorden = -1 OR gnovorden = -2)"
 StrSql = StrSql & " AND gnovdesde = " & ConvFecha(p_fecha)
 StrSql = StrSql & " AND gnovhasta = " & ConvFecha(p_fecha)
 StrSql = StrSql & " AND gnovotoa = " & Empleado.Ternro
 objConn.Execute StrSql, , adExecuteNoRecords



    'Las inserto como de tipo 4 (que no existe) para que se traten en forma distinta a las de
    '   tipo 2 --> Parciales Fijas
    '   tipo 3 --> Parciales Variables

    'Insertar la novedad
    StrSql = "INSERT INTO gti_novedad(gnovdesabr,gnovdesext,gnovotoa,"
    StrSql = StrSql & "gnovdesde, gnovhasta, gnovestado,gtnovnro,gnovdiacompleto,"
    StrSql = StrSql & "gnovtipo,gnovorden,gnovmaxhoras)"
    StrSql = StrSql & " VALUES ("
    StrSql = StrSql & "'Almuerzo'" & ","
    StrSql = StrSql & "'Novedad Automatica por Politica 400'" & ","
    StrSql = StrSql & Empleado.Ternro & ","
    StrSql = StrSql & ConvFecha(p_fecha) & ","
    StrSql = StrSql & ConvFecha(p_fecha) & ","
    StrSql = StrSql & "' '" & ","
    StrSql = StrSql & TNovJust & ","
    StrSql = StrSql & -1 & ","
    StrSql = StrSql & 4 & ","
    StrSql = StrSql & -2 & ","
    StrSql = StrSql & (HsComedor / 60) & ")"
    objConn.Execute StrSql, , adExecuteNoRecords

    Gnovnro = getLastIdentity(objConn, "gti_novedad")

    
    J1Desde = VentEnt
    Call objFechasHoras.SumoHoras(p_fecha, J1Desde, Format(HsComedor, "0000"), fecres, J1Hasta)
    If Not objFechasHoras.ValidarHora(J1Hasta) Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "Hora Invalida " & J1Hasta
        End If
        Exit Sub
    End If
    
    J2Desde = J1Hasta
    J2Hasta = VentSal

    'Inserto la justificacion para el almuerzo
    StrSql = "INSERT INTO gti_justificacion(jussigla,turnro,ternro,tjusnro,"
    StrSql = StrSql & "jusdiacompleto,jusdesde,jushasta,jussistema,juscanths,"
    StrSql = StrSql & "jushoradesde,jushorahasta,juseltipo,juselmaxhoras,juselorden,juscodext)"
    StrSql = StrSql & " VALUES ("
    StrSql = StrSql & "'ALM'" & ","
    StrSql = StrSql & Nro_Turno & ","
    StrSql = StrSql & Empleado.Ternro & ","
    StrSql = StrSql & TJusJust & ","
    StrSql = StrSql & "0," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",-1,"
    StrSql = StrSql & (HsComedor / 60) & ","
    StrSql = StrSql & "'" & VentEnt & "'" & ","
    StrSql = StrSql & "'" & VentSal & "'" & ","
    StrSql = StrSql & "4" & ","
    StrSql = StrSql & (HsComedor / 60) & ","
    StrSql = StrSql & "-2,"
    StrSql = StrSql & Gnovnro & ")"
    objConn.Execute StrSql, , adExecuteNoRecords
    If depurar Then
        Flog.writeline Espacios(Tabulador * 4) & "  ==> Insertó Justificación (Almuerzo)--> Novedad: " & Gnovnro & "- Cantidad: " & HsComedor & " hs."
    End If


    If THExceso <> 0 Then
        'Inserto la justificacion para el exceso del almuerzo
        HSExcesoComedor = 0
        objFechasHoras.RestaHs Fecha, VentEnt, Fecha, VentSal, Tdias, Thoras, Tmin
        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
        HSExcesoComedor = TotHor - (HsComedor / 60)
        
        'Insertar la novedad
        StrSql = "INSERT INTO gti_novedad(gnovdesabr,gnovdesext,gnovotoa,"
        StrSql = StrSql & "gnovdesde, gnovhasta, gnovestado,gtnovnro,gnovdiacompleto,"
        StrSql = StrSql & "gnovtipo,gnovorden,gnovmaxhoras)"
        StrSql = StrSql & " VALUES ("
        StrSql = StrSql & "'Exceso Almuerzo'" & ","
        StrSql = StrSql & "'Novedad Automatica por Politica 400'" & ","
        StrSql = StrSql & Empleado.Ternro & ","
        StrSql = StrSql & ConvFecha(p_fecha) & ","
        StrSql = StrSql & ConvFecha(p_fecha) & ","
        StrSql = StrSql & "' '" & ","
        StrSql = StrSql & TNovExceso & ","
        StrSql = StrSql & -1 & ","
        StrSql = StrSql & 4 & ","
        StrSql = StrSql & -1 & ","
        StrSql = StrSql & HSExcesoComedor & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        Gnovnro = getLastIdentity(objConn, "gti_novedad")
    
        'Inserto la justificacion
        StrSql = "INSERT INTO gti_justificacion(jussigla,turnro,ternro,tjusnro,"
        StrSql = StrSql & "jusdiacompleto,jusdesde,jushasta,jussistema,juscanths,"
        StrSql = StrSql & "jushoradesde,jushorahasta,juseltipo,juselmaxhoras,juselorden,juscodext)"
        StrSql = StrSql & " VALUES ("
        StrSql = StrSql & "'ALM'" & ","
        StrSql = StrSql & Nro_Turno & ","
        StrSql = StrSql & Empleado.Ternro & ","
        StrSql = StrSql & TJusExceso & ","
        StrSql = StrSql & "0," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",-1,"
        StrSql = StrSql & HSExcesoComedor & ","
        'FGZ - 24/05/2013 -------------------------------------
        'StrSql = StrSql & "'" & VentEnt & "'" & ","
        'StrSql = StrSql & "'" & VentSal & "'" & ","
        StrSql = StrSql & "'" & J2Desde & "'" & ","
        StrSql = StrSql & "'" & J2Hasta & "'" & ","
        'FGZ - 24/05/2013 -------------------------------------
        StrSql = StrSql & "4" & ","
        StrSql = StrSql & HSExcesoComedor & ","
        StrSql = StrSql & "-1,"
        StrSql = StrSql & Gnovnro & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        If depurar Then
            Flog.writeline Espacios(Tabulador * 4) & "  ==> Insertó Justificación (Exceso de Almuerzo)--> Novedad: " & Gnovnro & "- Cantidad: " & HsComedor & " hs."
        End If
    Else
        'No se generan justificaciones por exceso de almuerzo
    End If
    
    'Genero las horas Justificadas
    Call GenerarJustificacionesAutomaticas(Empleado.Ternro, p_fecha)

CierroTodo:
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
    
    If rs_Tjus.State = adStateOpen Then rs_Tjus.Close
    Set rs_Tjus = Nothing
End Sub


Public Sub Politica400V4(ByVal Fecha As Date, ByVal TH_Justif As Long, ByVal TH_ExcesoComedor As Long, ByVal HsComedor As Integer, ByVal VentEnt As String, ByVal VentSal As String, ByVal ListaTH As String)
' --------------------------------------------------------------
' Descripcion: Política de almuerzo variable. Custom Sykes
' Autor: FGZ - 26/05/2011
' --------------------------------------------------------------
Dim THJust As Long
Dim THExceso As Long
Dim Diferencia As Long
Dim Hs_Exceso_Lunch As Single
Dim Hs_Lunch As Single
Dim Hor_Desde As String
Dim Hor_Hasta As String
Dim Lunch_Teorico As Long
Dim Lunch_Real As Long
Dim TotHorHHMM As String
Dim Cant_Tarj As Long
Dim i As Long
Dim rs As New ADODB.Recordset
Dim rs_Tarjeta As New ADODB.Recordset
Dim rs_Hor_Cumplido As New ADODB.Recordset
Dim Generar_Lunch As Boolean

StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = " & TH_Justif
StrSql = StrSql & " AND turnro = " & Nro_Turno
StrSql = StrSql & " ORDER BY conhornro ASC, turnro ASC"
OpenRecordset StrSql, rs
If Not rs.EOF Then
    THJust = rs!thnro
Else
    If depurar Then
        GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora Lunch para el Turno ", Str(Nro_Turno)
        Flog.writeline Espacios(Tabulador * 3) & "No esta configurado el Tipo de Hora Lunch para el Turno " & Str(Nro_Turno)
    End If
End If

StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = " & TH_ExcesoComedor
StrSql = StrSql & " AND turnro = " & Nro_Turno
StrSql = StrSql & " ORDER BY conhornro ASC, turnro ASC"
OpenRecordset StrSql, rs
If Not rs.EOF Then
    THExceso = rs!thnro
Else
    If depurar Then
        GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora Exceso de Lunch para el Turno ", Str(Nro_Turno)
        Flog.writeline Espacios(Tabulador * 3) & "No esta configurado el Tipo de Hora Exceso de Lunch para el Turno " & Str(Nro_Turno)
    End If
End If



'si Minutos lunch teóricos <= 30
'   Solo se resta el tiempo de lunch que exceda los minutos de lunch teóricos

'si Minutos lunch teóricos > 30
'   Se resta el tiempo de lunch efectivo completo


'Busco los minutos teoricos de lunch
    StrSql = "SELECT fecdesde,fechasta FROM WC_MOV_HORARIOS "
    StrSql = StrSql & " WHERE ternro = " & Empleado.Ternro
    StrSql = StrSql & " AND fecdesde <= " & ConvFecha(Fecha) & " AND fechasta >= " & ConvFecha(Fecha)
    StrSql = StrSql & " ORDER BY fecdesde desc, fechasta desc"
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
    
        'si existe ==> busco el dia en esa vigencia
        StrSql = "SELECT desmin FROM WC_MOV_HORARIOS WHERE fechor = " & ConvFecha(Fecha)
        StrSql = StrSql & " AND ternro = " & Empleado.Ternro
        StrSql = StrSql & " AND fecdesde = " & ConvFecha(rs!fecdesde) & " AND fechasta = " & ConvFecha(rs!fechasta)
        StrSql = StrSql & " ORDER BY fecdesde desc, fechasta desc"
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            Lunch_Teorico = rs!desmin
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  ==> Lunch Teorico: " & Lunch_Teorico
            End If
        Else
            'No hay parte para el dia con lo cual supongo que es franco. No hay que hacer nada.
            Lunch_Teorico = 0
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  ==> No hay parte para el dia. Lunch Teorico: " & Lunch_Teorico
            End If
        End If
    Else
        'No hay parte para el dia con lo cual supongo que es franco. No hay que hacer nada.
        Lunch_Teorico = 0
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  ==> No hay parte para el dia. Lunch Teorico: " & Lunch_Teorico
        End If
    End If


'FGZ - 16/06/2011 -----------------------------------------------------
' Busco las tarjetas del empleado para poder buscar los lunch
'   tendría que buscar en c_lunch para una fecha, para todas las tipo (tarjeta y tarjetas) del empleado
Cant_Tarj = 0
StrSql = "SELECT hstjnrotar, tptrnro FROM gti_histarjeta "
StrSql = StrSql & " WHERE ternro = " & Empleado.Ternro
StrSql = StrSql & " AND (hstjfecdes <= " & ConvFecha(Fecha) & ") AND ( (" & ConvFecha(Fecha) & " <= hstjfechas) OR ( hstjfechas is null ))"
OpenRecordset StrSql, rs_Tarjeta
If Not rs_Tarjeta.EOF Then
    ReDim Preserve Tarjetas(rs_Tarjeta.RecordCount + 1) As TTarjeta
Else
    ReDim Preserve Tarjetas(1) As TTarjeta
End If
Do While Not rs_Tarjeta.EOF
    Cant_Tarj = Cant_Tarj + 1
    Tarjetas(Cant_Tarj).tptrnro = rs_Tarjeta!tptrnro
    Tarjetas(Cant_Tarj).hstjnrotar = rs_Tarjeta!hstjnrotar
    
    rs_Tarjeta.MoveNext
Loop
'FGZ - 16/06/2011 -----------------------------------------------------


'Busco los minutos de lunch efectivamente tomados
'StrSql = "SELECT lunchmin FROM WC_LUNCH "
'StrSql = StrSql & " WHERE empleg = " & Empleado.Legajo
'StrSql = StrSql & " AND tptnrofecha = " & ConvFecha(Fecha)
'StrSql = StrSql & " AND fecha = " & ConvFecha(Fecha)
'StrSql = StrSql & " ORDER BY fecgen desc"

If Cant_Tarj = 0 Then
    Lunch_Real = 0
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "  El empleado no tiene tarjetas ==> No se puede determinar el tiempo de Lunch real"
    End If
Else
    StrSql = "SELECT lunchmin FROM WC_LUNCH "
    StrSql = StrSql & " WHERE fecha = " & ConvFecha(Fecha)
    StrSql = StrSql & " AND ("
    For i = 1 To Cant_Tarj
        If i = 1 Then
            StrSql = StrSql & " (empleg = '" & Tarjetas(i).hstjnrotar & "' AND tptnro = " & Tarjetas(i).tptrnro & ")"
        Else
            StrSql = StrSql & " OR (empleg = '" & Tarjetas(i).hstjnrotar & "' AND tptnro = " & Tarjetas(i).tptrnro & ")"
        End If
    Next i
    StrSql = StrSql & " )"
    StrSql = StrSql & " ORDER BY fecgen desc"
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        Lunch_Real = rs!lunchmin
    End If
End If

'If Lunch_Teorico <= HsComedor Then
'    'Solo se resta el tiempo de lunch que exceda los minutos de lunch teóricos
'    Diferencia = Lunch_Real - Lunch_Teorico
'    If Diferencia > 0 Then
'        Hs_Lunch = Lunch_Teorico / 60
'        Hs_Exceso_Lunch = Diferencia / 60
'    Else
'        Hs_Lunch = Lunch_Teorico / 60
'    End If
'Else
'    'Se resta el tiempo de lunch efectivo completo
'    Diferencia = Lunch_Real
'    If Diferencia > 0 Then
'        Hs_Lunch = 0
'        Hs_Exceso_Lunch = Lunch_Real / 60
'    End If
'End If

'FGZ - 25/10/2011 ---------------------
'Si existiese algun tipo de hora generado con los codigos de anormalidad configurados en el parametro de la politica
'       ==> no se debe generar las hs de lunch

Generar_Lunch = True
If Not EsNulo(ListaTH) Then
    StrSql = "SELECT * FROM gti_horcumplido "
    StrSql = StrSql & " WHERE ternro =" & Empleado.Ternro
    StrSql = StrSql & " AND  horfecrep = " & ConvFecha(p_fecha)
    StrSql = StrSql & " AND (normnro in (" & ListaTH & ") or normnro2 in (" & ListaTH & "))"
    OpenRecordset StrSql, rs_Hor_Cumplido
    If Not rs_Hor_Cumplido.EOF Then
        Generar_Lunch = False
    End If
End If

'FGZ - 25/10/2011 ---------------------


'FGZ - 30/06/2011 ------------
' Modificacion sugerida por JI
If Lunch_Teorico < HsComedor Then
     'Solo se resta el tiempo de lunch que exceda los minutos de lunch teóricos
     Diferencia = Lunch_Real - Lunch_Teorico
     Hs_Lunch = 0
     If Diferencia > 0 Then
        Hs_Exceso_Lunch = Diferencia / 60
     End If
Else
     'Se resta el tiempo de lunch efectivo completo
    If Lunch_Real <= HsComedor Then
        Lunch_Real = HsComedor
    End If
 
    Hs_Lunch = HsComedor / 60
    Hs_Exceso_Lunch = (Lunch_Real - Hs_Lunch) / 60
End If


'Genero las hs configuradas
If Generar_Lunch Then
    If Hs_Lunch > 0 And THJust <> 0 Then
        'Genero hs de lunch
        TotHorHHMM = CHoras(Hs_Lunch, 60)
        
        Hor_Desde = ""
        Hor_Hasta = ""
        
        StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
        StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
        StrSql = StrSql & "horfecrep,horfecgen,horestado) VALUES ("
        StrSql = StrSql & TotHorHHMM
        StrSql = StrSql & "," & Round(Hs_Lunch, Presicion_HC)
        StrSql = StrSql & "," & ConvFecha(Fecha)
        StrSql = StrSql & "," & ConvFecha(Fecha)
        StrSql = StrSql & ",'" & Hor_Desde & "'"
        StrSql = StrSql & ",'" & Hor_Hasta & "'"
        StrSql = StrSql & ",0,-1"
        StrSql = StrSql & "," & Empleado.Ternro
        StrSql = StrSql & "," & THJust
        StrSql = StrSql & "," & Empleado.Legajo
        StrSql = StrSql & "," & ConvFecha(Fecha)
        StrSql = StrSql & "," & ConvFecha(Fecha)
        StrSql = StrSql & ",' '"
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & THJust & "- Cantidad: " & Round(Hs_Lunch, Presicion_HC) & " hs."
        End If
    End If

    If Hs_Exceso_Lunch > 0 And THExceso <> 0 Then
        'Genero hs de exceso de Lunch
        'Genero hs de lunch
        TotHorHHMM = CHoras(Hs_Exceso_Lunch, 60)
        
        Hor_Desde = ""
        Hor_Hasta = ""
        
        StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
        StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
        StrSql = StrSql & "horfecrep,horfecgen,horestado) VALUES ("
        StrSql = StrSql & TotHorHHMM
        StrSql = StrSql & "," & Round(Hs_Exceso_Lunch, Presicion_HC)
        StrSql = StrSql & "," & ConvFecha(Fecha)
        StrSql = StrSql & "," & ConvFecha(Fecha)
        StrSql = StrSql & ",'" & Hor_Desde & "'"
        StrSql = StrSql & ",'" & Hor_Hasta & "'"
        StrSql = StrSql & ",0,-1"
        StrSql = StrSql & "," & Empleado.Ternro
        StrSql = StrSql & "," & THExceso
        StrSql = StrSql & "," & Empleado.Legajo
        StrSql = StrSql & "," & ConvFecha(Fecha)
        StrSql = StrSql & "," & ConvFecha(Fecha)
        StrSql = StrSql & ",' '"
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
    
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & THExceso & "- Cantidad: " & Round(Hs_Exceso_Lunch, Presicion_HC) & " hs."
        End If
    End If
End If

CierroTodo:
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
    If rs_Tarjeta.State = adStateOpen Then rs_Tarjeta.Close
    Set rs_Tarjeta = Nothing
End Sub


Public Sub Politica400V5(ByVal Fecha As Date, ByVal TH_Justif As Long, ByVal TH_ExcesoComedor As Long, ByVal HsComedor As Integer, ByVal VentEnt As String, ByVal VentSal As String)
' --------------------------------------------------------------
' Descripcion: Política de almuerzo variable. Prototipo. Justifica salidas temprano y ausencias parciales.
' Autor: FGZ - 27/05/2013
' --------------------------------------------------------------
Dim THJust As Long
Dim THExceso As Long
Dim TNovJust As Long
Dim TNovExceso As Long
Dim TJusJust As Long
Dim TJusExceso As Long
Dim HSExcesoComedor As Single

Dim J1Desde As String
Dim J1Hasta As String
Dim J2Desde As String
Dim J2Hasta As String
Dim fecres As Date

Dim Thoras As Integer
Dim Tmin As Integer
Dim Tdias As Integer
Dim TotHor As Single
Dim NroTer As Long
Dim Gnovnro As Long

Dim rs As New ADODB.Recordset
Dim rs_Tjus As New ADODB.Recordset

StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = " & TH_Justif
StrSql = StrSql & " AND turnro = " & Nro_Turno
StrSql = StrSql & " ORDER BY conhornro ASC, turnro ASC"
OpenRecordset StrSql, rs
If Not rs.EOF Then
    THJust = rs!thnro
    TJusJust = 2
    
    'Busco el tipo de novedad asociado
    StrSql = "SELECT gtnovnro FROM gti_tiponovedad"
    StrSql = StrSql & " WHERE thnro = " & THJust
    OpenRecordset StrSql, rs_Tjus
    If rs_Tjus.EOF Then
        If depurar Then
            GeneraTraza Empleado.Ternro, p_fecha, "El tipo de Hora " & THJust & " no tiene Tipo de Justificacion (Novedad) asociado", Str(Nro_Turno)
            Flog.writeline Espacios(Tabulador * 3) & "El tipo de Hora " & THJust & " no tiene Tipo de Justificacion (Novedad) asociado"
        End If
        GoTo CierroTodo
    Else
        TNovJust = rs_Tjus!gtnovnro
    End If
    
Else
    If depurar Then
        GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora Almuerzo para el Turno ", Str(Nro_Turno)
        Flog.writeline Espacios(Tabulador * 3) & "No esta configurado el Tipo de Hora Almuerzo para el Turno " & Str(Nro_Turno)
    End If
    GoTo CierroTodo
End If


StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = " & TH_ExcesoComedor
StrSql = StrSql & " AND turnro = " & Nro_Turno
StrSql = StrSql & " ORDER BY conhornro ASC, turnro ASC"
OpenRecordset StrSql, rs
If Not rs.EOF Then
    THExceso = rs!thnro
    TJusExceso = 2
    
    'Busco el tipo de novedad asociado
    StrSql = "SELECT gtnovnro FROM gti_tiponovedad"
    StrSql = StrSql & " WHERE thnro = " & THExceso
    OpenRecordset StrSql, rs_Tjus
    If rs_Tjus.EOF Then
        If depurar Then
            GeneraTraza Empleado.Ternro, p_fecha, "El tipo de Hora " & THExceso & " no tiene Tipo de Justificacion (Novedad) asociado", Str(Nro_Turno)
            Flog.writeline Espacios(Tabulador * 3) & "El tipo de Hora " & THExceso & " no tiene Tipo de Justificacion (Novedad) asociado. No se genera justificacion por Exceso."
        End If
    Else
        TNovExceso = rs_Tjus!gtnovnro
    End If
Else
    If depurar Then
        GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora de Exceso de Almuerzo para el Turno ", Str(Nro_Turno)
        Flog.writeline Espacios(Tabulador * 3) & "No esta configurado el Tipo de Hora de Exceso de Almuerzo para el Turno " & Str(Nro_Turno) & ". No se genera justificacion por Exceso."
    End If
End If

    
 'Borro las novedades horarias y justificaciones insertadas por esta politica
 StrSql = "SELECT gnovnro FROM gti_novedad "
 StrSql = StrSql & " WHERE gnovorden = -1"
 StrSql = StrSql & " AND gnovdesde = " & ConvFecha(p_fecha)
 StrSql = StrSql & " AND gnovhasta = " & ConvFecha(p_fecha)
 StrSql = StrSql & " AND gnovotoa = " & Empleado.Ternro
 'FGZ - 19/05/2010 ------------ Control FT -------------
 StrSql = StrSql & " AND (gti_novedad.ft = 0 OR (gti_novedad.ft = -1 AND gti_novedad.ftap = -1))"
 'FGZ - 19/05/2010 ------------ Control FT -------------
 OpenRecordset StrSql, rs
 Do While Not rs.EOF
     StrSql = "DELETE gti_justificacion WHERE juscodext = " & rs!Gnovnro
     'FGZ - 21/01/2009 - LE agregue este control porque sino podria borrar justificaciones que no corresponden
     StrSql = StrSql & " AND jussigla = 'ALM'"
     StrSql = StrSql & " AND ternro = " & Empleado.Ternro
     objConn.Execute StrSql, , adExecuteNoRecords

     rs.MoveNext
 Loop
 StrSql = "DELETE gti_novedad "
 StrSql = StrSql & " WHERE gnovorden = -1"
 StrSql = StrSql & " AND gnovdesde = " & ConvFecha(p_fecha)
 StrSql = StrSql & " AND gnovhasta = " & ConvFecha(p_fecha)
 StrSql = StrSql & " AND gnovotoa = " & Empleado.Ternro
 objConn.Execute StrSql, , adExecuteNoRecords



    'Las inserto como de tipo 4 (que no existe) para que se traten en forma distinta a las de
    '   tipo 2 --> Parciales Fijas
    '   tipo 3 --> Parciales Variables

    'Insertar la novedad
    StrSql = "INSERT INTO gti_novedad(gnovdesabr,gnovdesext,gnovotoa,"
    StrSql = StrSql & "gnovdesde, gnovhasta, gnovestado,gtnovnro,gnovdiacompleto,"
    StrSql = StrSql & "gnovtipo,gnovorden,gnovmaxhoras)"
    StrSql = StrSql & " VALUES ("
    StrSql = StrSql & "'Almuerzo'" & ","
    StrSql = StrSql & "'Novedad Automatica por Politica 400'" & ","
    StrSql = StrSql & Empleado.Ternro & ","
    StrSql = StrSql & ConvFecha(p_fecha) & ","
    StrSql = StrSql & ConvFecha(p_fecha) & ","
    StrSql = StrSql & "' '" & ","
    StrSql = StrSql & TNovJust & ","
    StrSql = StrSql & -1 & ","
    StrSql = StrSql & 4 & ","
    StrSql = StrSql & -1 & ","
    StrSql = StrSql & (HsComedor / 60) & ")"
    objConn.Execute StrSql, , adExecuteNoRecords

    Gnovnro = getLastIdentity(objConn, "gti_novedad")

    
    J1Desde = VentEnt
    Call objFechasHoras.SumoHoras(p_fecha, J1Desde, Format(HsComedor, "0000"), fecres, J1Hasta)
    If Not objFechasHoras.ValidarHora(J1Hasta) Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "Hora Invalida " & J1Hasta
        End If
        Exit Sub
    End If
    
    J2Desde = J1Hasta
    J2Hasta = VentSal

    'Inserto la justificacion para el almuerzo
    StrSql = "INSERT INTO gti_justificacion(jussigla,turnro,ternro,tjusnro,"
    StrSql = StrSql & "jusdiacompleto,jusdesde,jushasta,jussistema,juscanths,"
    StrSql = StrSql & "jushoradesde,jushorahasta,juseltipo,juselmaxhoras,juselorden,juscodext)"
    StrSql = StrSql & " VALUES ("
    StrSql = StrSql & "'ALM'" & ","
    StrSql = StrSql & Nro_Turno & ","
    StrSql = StrSql & Empleado.Ternro & ","
    StrSql = StrSql & TJusJust & ","
    StrSql = StrSql & "0," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",-1,"
    StrSql = StrSql & (HsComedor / 60) & ","
    StrSql = StrSql & "'" & VentEnt & "'" & ","
    StrSql = StrSql & "'" & VentSal & "'" & ","
    StrSql = StrSql & "4" & ","
    StrSql = StrSql & (HsComedor / 60) & ","
    StrSql = StrSql & "0,"
    StrSql = StrSql & Gnovnro & ")"
    objConn.Execute StrSql, , adExecuteNoRecords
    If depurar Then
        Flog.writeline Espacios(Tabulador * 4) & "  ==> Insertó Justificación (Almuerzo)--> Novedad: " & Gnovnro & "- Cantidad: " & HsComedor & " hs."
    End If


    If THExceso <> 0 Then
        'Inserto la justificacion para el exceso del almuerzo
        HSExcesoComedor = 0
        objFechasHoras.RestaHs Fecha, VentEnt, Fecha, VentSal, Tdias, Thoras, Tmin
        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
        HSExcesoComedor = TotHor - (HsComedor / 60)
        
        'Insertar la novedad
        StrSql = "INSERT INTO gti_novedad(gnovdesabr,gnovdesext,gnovotoa,"
        StrSql = StrSql & "gnovdesde, gnovhasta, gnovestado,gtnovnro,gnovdiacompleto,"
        StrSql = StrSql & "gnovtipo,gnovorden,gnovmaxhoras)"
        StrSql = StrSql & " VALUES ("
        StrSql = StrSql & "'Exceso Almuerzo'" & ","
        StrSql = StrSql & "'Novedad Automatica por Politica 400'" & ","
        StrSql = StrSql & Empleado.Ternro & ","
        StrSql = StrSql & ConvFecha(p_fecha) & ","
        StrSql = StrSql & ConvFecha(p_fecha) & ","
        StrSql = StrSql & "' '" & ","
        StrSql = StrSql & TNovExceso & ","
        StrSql = StrSql & -1 & ","
        StrSql = StrSql & 4 & ","
        StrSql = StrSql & -1 & ","
        StrSql = StrSql & HSExcesoComedor & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        Gnovnro = getLastIdentity(objConn, "gti_novedad")
    
        'Inserto la justificacion
        StrSql = "INSERT INTO gti_justificacion(jussigla,turnro,ternro,tjusnro,"
        StrSql = StrSql & "jusdiacompleto,jusdesde,jushasta,jussistema,juscanths,"
        StrSql = StrSql & "jushoradesde,jushorahasta,juseltipo,juselmaxhoras,juselorden,juscodext)"
        StrSql = StrSql & " VALUES ("
        StrSql = StrSql & "'ALM'" & ","
        StrSql = StrSql & Nro_Turno & ","
        StrSql = StrSql & Empleado.Ternro & ","
        StrSql = StrSql & TJusExceso & ","
        StrSql = StrSql & "0," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",-1,"
        StrSql = StrSql & HSExcesoComedor & ","
        'FGZ - 24/05/2013 -------------------------------------
        'StrSql = StrSql & "'" & VentEnt & "'" & ","
        'StrSql = StrSql & "'" & VentSal & "'" & ","
        StrSql = StrSql & "'" & J2Desde & "'" & ","
        StrSql = StrSql & "'" & J2Hasta & "'" & ","
        'FGZ - 24/05/2013 -------------------------------------
        StrSql = StrSql & "4" & ","
        StrSql = StrSql & HSExcesoComedor & ","
        StrSql = StrSql & "1,"
        StrSql = StrSql & Gnovnro & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        If depurar Then
            Flog.writeline Espacios(Tabulador * 4) & "  ==> Insertó Justificación (Exceso de Almuerzo)--> Novedad: " & Gnovnro & "- Cantidad: " & HsComedor & " hs."
        End If
    Else
        'No se generan justificaciones por exceso de almuerzo
    End If
    
    'Genero las horas Justificadas
    'FGZ - 24/05/2013 ----------------------------------------------
    'Call GenerarJustificacionesAutomaticas(Empleado.Ternro, p_fecha)
    Call GenerarJustificacionesAutomaticas2(Empleado.Ternro, p_fecha)
    'FGZ - 24/05/2013 ----------------------------------------------

CierroTodo:
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
    
    If rs_Tjus.State = adStateOpen Then rs_Tjus.Close
    Set rs_Tjus = Nothing
End Sub


Public Sub Politica400V6(ByVal Fecha As Date, ByVal TH_Justif As Long, ByVal TH_ExcesoComedor As Long, ByVal HsComedor As Integer, ByVal VentEnt As String, ByVal VentSal As String, ByVal ListaTH As String, ByVal ListaTH1 As String)
' --------------------------------------------------------------
' Descripcion: Política de almuerzo variable. Custom Sykes SC
' Autor: EAM - 13/02/2014
'           EAM (5.49) Sykes SV - Se agrego una nueva version que funcina igual que la de CR version 4. La diferencia que las horas de lunch se restan a los tipos de horas configuradas.
' --------------------------------------------------------------
Dim THJust As Long
Dim THExceso As Long
Dim Diferencia As Long
Dim Hs_Exceso_Lunch As Single
Dim Hs_Lunch As Single
Dim Hor_Desde As String
Dim Hor_Hasta As String
Dim Lunch_Teorico As Long
Dim Lunch_Real As Long
Dim TotHorHHMM As String
Dim Cant_Tarj As Long
Dim i As Long
Dim rs As New ADODB.Recordset
Dim rs_Tarjeta As New ADODB.Recordset
Dim rs_Hor_Cumplido As New ADODB.Recordset
Dim Generar_Lunch As Boolean
Dim arrTH1
Dim cantHsNocturna As Single
Dim cantHsDiurna As Single


'EAM- (5.48) Busco el tipo asociada al turno con el tipo de hora de la plítica
StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = " & TH_Justif & _
        " AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
OpenRecordset StrSql, rs
If Not rs.EOF Then
    THJust = rs!thnro
Else
    If depurar Then
        GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora Lunch para el Turno ", Str(Nro_Turno)
        Flog.writeline Espacios(Tabulador * 3) & "No esta configurado el Tipo de Hora Lunch para el Turno " & Str(Nro_Turno)
    End If
End If

'EAM- (5.49) Busco el tipo asociada al turno con el tipo de hora de la plítica
StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = " & TH_ExcesoComedor & _
        " AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
OpenRecordset StrSql, rs

If Not rs.EOF Then
    THExceso = rs!thnro
Else
    If depurar Then
        GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora Exceso de Lunch para el Turno ", Str(Nro_Turno)
        Flog.writeline Espacios(Tabulador * 3) & "No esta configurado el Tipo de Hora Exceso de Lunch para el Turno " & Str(Nro_Turno)
    End If
End If



    'si Minutos lunch teóricos <= 30
    '   Solo se resta el tiempo de lunch que exceda los minutos de lunch teóricos

    'si Minutos lunch teóricos > 30
    '   Se resta el tiempo de lunch efectivo completo
    'Busco los minutos teoricos de lunch
    StrSql = "SELECT fecdesde,fechasta FROM WC_MOV_HORARIOS " & _
            " WHERE ternro = " & Empleado.Ternro & " AND fecdesde <= " & ConvFecha(Fecha) & " AND fechasta >= " & ConvFecha(Fecha) & _
            " ORDER BY fecdesde desc, fechasta desc"
    OpenRecordset StrSql, rs
    
    If Not rs.EOF Then
        'si existe ==> busco el dia en esa vigencia
        StrSql = "SELECT desmin FROM WC_MOV_HORARIOS WHERE fechor = " & ConvFecha(Fecha) & _
                " AND ternro = " & Empleado.Ternro & " AND fecdesde = " & ConvFecha(rs!fecdesde) & " AND fechasta = " & ConvFecha(rs!fechasta) & _
                " ORDER BY fecdesde desc, fechasta desc"
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            Lunch_Teorico = rs!desmin
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  ==> Lunch Teorico: " & Lunch_Teorico
            End If
        Else
            'No hay parte para el dia con lo cual supongo que es franco. No hay que hacer nada.
            Lunch_Teorico = 0
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  ==> No hay parte para el dia. Lunch Teorico: " & Lunch_Teorico
            End If
        End If
    Else
        'No hay parte para el dia con lo cual supongo que es franco. No hay que hacer nada.
        Lunch_Teorico = 0
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  ==> No hay parte para el dia. Lunch Teorico: " & Lunch_Teorico
        End If
    End If


'FGZ - 16/06/2011 -----------------------------------------------------
' Busco las tarjetas del empleado para poder buscar los lunch
'   tendría que buscar en c_lunch para una fecha, para todas las tipo (tarjeta y tarjetas) del empleado
Cant_Tarj = 0
StrSql = "SELECT hstjnrotar, tptrnro FROM gti_histarjeta "
StrSql = StrSql & " WHERE ternro = " & Empleado.Ternro
StrSql = StrSql & " AND (hstjfecdes <= " & ConvFecha(Fecha) & ") AND ( (" & ConvFecha(Fecha) & " <= hstjfechas) OR ( hstjfechas is null ))"
OpenRecordset StrSql, rs_Tarjeta
If Not rs_Tarjeta.EOF Then
    ReDim Preserve Tarjetas(rs_Tarjeta.RecordCount + 1) As TTarjeta
Else
    ReDim Preserve Tarjetas(1) As TTarjeta
End If
Do While Not rs_Tarjeta.EOF
    Cant_Tarj = Cant_Tarj + 1
    Tarjetas(Cant_Tarj).tptrnro = rs_Tarjeta!tptrnro
    Tarjetas(Cant_Tarj).hstjnrotar = rs_Tarjeta!hstjnrotar
    
    rs_Tarjeta.MoveNext
Loop

'FGZ - 16/06/2011 -----------------------------------------------------

If Cant_Tarj = 0 Then
    Lunch_Real = 0
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "  El empleado no tiene tarjetas ==> No se puede determinar el tiempo de Lunch real"
    End If
Else
    StrSql = "SELECT lunchmin FROM WC_LUNCH "
    StrSql = StrSql & " WHERE fecha = " & ConvFecha(Fecha)
    StrSql = StrSql & " AND ("
    For i = 1 To Cant_Tarj
        If i = 1 Then
            StrSql = StrSql & " (empleg = '" & Tarjetas(i).hstjnrotar & "' AND tptnro = " & Tarjetas(i).tptrnro & ")"
        Else
            StrSql = StrSql & " OR (empleg = '" & Tarjetas(i).hstjnrotar & "' AND tptnro = " & Tarjetas(i).tptrnro & ")"
        End If
    Next i
    StrSql = StrSql & " )"
    StrSql = StrSql & " ORDER BY fecgen desc"
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        Lunch_Real = rs!lunchmin
    End If
End If


'FGZ - 25/10/2011 ---------------------
'Si existiese algun tipo de hora generado con los codigos de anormalidad configurados en el parametro de la politica
'       ==> no se debe generar las hs de lunch
Generar_Lunch = True
If Not EsNulo(ListaTH) Then
    StrSql = "SELECT * FROM gti_horcumplido "
    StrSql = StrSql & " WHERE ternro =" & Empleado.Ternro
    StrSql = StrSql & " AND  horfecrep = " & ConvFecha(p_fecha)
    StrSql = StrSql & " AND (normnro in (" & ListaTH & ") or normnro2 in (" & ListaTH & "))"
    OpenRecordset StrSql, rs_Hor_Cumplido
    If Not rs_Hor_Cumplido.EOF Then
        Generar_Lunch = False
    End If
End If

'FGZ - 25/10/2011 ---------------------


'FGZ - 30/06/2011 ------------
' Modificacion sugerida por JI
If Lunch_Teorico < HsComedor Then
     'Si tiene horas lunch informadas se le descuenta dicha cantidad
     If Lunch_Teorico > 0 Then
        Hs_Lunch = Lunch_Teorico / 60
     End If
Else
     'Se resta el tiempo de lunch efectivo completo
    If Lunch_Real <= HsComedor Then
        Lunch_Real = HsComedor
    End If
 
    Hs_Lunch = HsComedor / 60
    Hs_Exceso_Lunch = (Lunch_Real - Hs_Lunch) / 60
End If


'Genero las hs configuradas
If Generar_Lunch Then
    If Hs_Lunch > 0 And THJust <> 0 Then
        'Genero hs de lunch
        TotHorHHMM = CHoras(Hs_Lunch, 60)
        
        Hor_Desde = ""
        Hor_Hasta = ""
        
        StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
        StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
        StrSql = StrSql & "horfecrep,horfecgen,horestado) VALUES ("
        StrSql = StrSql & TotHorHHMM
        StrSql = StrSql & "," & Round(Hs_Lunch, Presicion_HC)
        StrSql = StrSql & "," & ConvFecha(Fecha)
        StrSql = StrSql & "," & ConvFecha(Fecha)
        StrSql = StrSql & ",'" & Hor_Desde & "'"
        StrSql = StrSql & ",'" & Hor_Hasta & "'"
        StrSql = StrSql & ",0,-1"
        StrSql = StrSql & "," & Empleado.Ternro
        StrSql = StrSql & "," & THJust
        StrSql = StrSql & "," & Empleado.Legajo
        StrSql = StrSql & "," & ConvFecha(Fecha)
        StrSql = StrSql & "," & ConvFecha(Fecha)
        StrSql = StrSql & ",' '"
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & THJust & "- Cantidad: " & Round(Hs_Lunch, Presicion_HC) & " hs."
        End If
        
        'EAM (v5.49) - Descuento las horas de lunch al tipo de hora con mayor peso, configurada en la politica.
        StrSql = "SELECT SUM(horcant) horcant,thnro FROM gti_horcumplido " & _
            " WHERE ternro =" & Empleado.Ternro & " AND  horfecgen = " & ConvFecha(Fecha) & " AND thnro in (" & ListaTH1 & ") group by thnro "
            '" GROUP by thnro " & _
            '" HAVING MAX(horcant)= (SELECT max(horcant) FROM gti_horcumplido  WHERE ternro =" & Empleado.Ternro & " AND  horfecrep = " & ConvFecha(Fecha) & "  AND thnro in (" & ListaTH1 & "))"
        OpenRecordset StrSql, rs_Hor_Cumplido
        
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  ==> Obtiene las horas: " & StrSql
        End If
        
        'EAM (5.49) - Verifica si tiene configurado los tipos de horas a descontar
        arrTH1 = Split(ListaTH1, ",")
        If UBound(arrTH1) < 1 Then
            Flog.writeline Espacios(Tabulador * 3) & "  ==> No se encuentran configurada los tipos de horas Diurna y noctunras"
            Exit Sub
        End If
        Do While Not rs_Hor_Cumplido.EOF
            cantHsDiurna = cantHsDiurna + IIf(CInt(arrTH1(0)) = CInt(rs_Hor_Cumplido!thnro), rs_Hor_Cumplido!horcant, 0)
            cantHsNocturna = cantHsNocturna + IIf(CInt(arrTH1(1)) = CInt(rs_Hor_Cumplido!thnro), rs_Hor_Cumplido!horcant, 0)
            rs_Hor_Cumplido.MoveNext
        Loop
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  ==> Horas Diurna : " & cantHsDiurna & " Horas Nocturna: " & cantHsNocturna
        End If
        
        If cantHsNocturna > 4 Then
        
                StrSql = "SELECT hornro,horcant FROM gti_horcumplido " & _
                        " WHERE ternro =" & Empleado.Ternro & " AND  horfecgen = " & ConvFecha(Fecha) & " AND thnro = " & CInt(arrTH1(1)) & _
                        " ORDER BY horcant DESC"
                OpenRecordset StrSql, rs_Hor_Cumplido
                If Not rs_Hor_Cumplido.EOF Then
                    StrSql = "UPDATE gti_horcumplido SET horcant=" & (rs_Hor_Cumplido!horcant - Hs_Lunch) & " where thnro= " & arrTH1(1) & _
                            " AND ternro =" & Empleado.Ternro & " AND  horfecgen = " & ConvFecha(Fecha) & " AND hornro=" & rs_Hor_Cumplido!hornro
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & "  ==> Descuenta al tipo de hora : " & arrTH1(1) & " la cantidad de horas: " & Hs_Lunch
                    End If
                End If
        Else
                StrSql = "SELECT hornro,horcant FROM gti_horcumplido " & _
                        " WHERE ternro =" & Empleado.Ternro & " AND  horfecgen = " & ConvFecha(Fecha) & " AND thnro = " & CInt(arrTH1(0)) & _
                        " ORDER BY horcant DESC"
                OpenRecordset StrSql, rs_Hor_Cumplido
                If Not rs_Hor_Cumplido.EOF Then
                    StrSql = "UPDATE gti_horcumplido SET horcant=" & (rs_Hor_Cumplido!horcant - Hs_Lunch) & " where thnro= " & arrTH1(0) & _
                            " AND ternro =" & Empleado.Ternro & " AND  horfecgen = " & ConvFecha(Fecha) & " AND hornro=" & rs_Hor_Cumplido!hornro
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & "  ==> Descuenta al tipo de hora : " & arrTH1(0) & " la cantidad de horas: " & Hs_Lunch
                    End If
                End If
        End If
        
'EAM - Version que descuenta segun que tipo de hora es mayor
'        If UBound(arrTH1) <= 1 Then
'            If Not rs_Hor_Cumplido.EOF Then
'                cantHsTH1Aux = rs_Hor_Cumplido!horcant
'                rs_Hor_Cumplido.MoveNext
'
'                If Not rs_Hor_Cumplido.EOF Then
'                    'EAM (5.48) - Verifica q tipo de hora tiene mas peso
'                    If (cantHsTH1Aux - CSng(rs_Hor_Cumplido!horcant)) >= CSng(rs_Hor_Cumplido!horcant) Then
'                        StrSql = "UPDATE gti_horcumplido SET horcant=" & (cantHsTH1Aux - Hs_Lunch) & " where thnro= " & arrTH1(0) & _
'                                    " AND ternro =" & Empleado.Ternro & " AND  horfecgen = " & ConvFecha(Fecha)
'                            If depurar Then
'                                Flog.writeline Espacios(Tabulador * 3) & "  ==> Descuenta al tipo de hora : " & arrTH1(0) & " la cantidad de horas: " & Hs_Lunch
'                            End If
'                    Else
'                        StrSql = "UPDATE gti_horcumplido SET horcant=" & (CSng(rs_Hor_Cumplido!horcant) - Hs_Lunch) & " where thnro= " & arrTH1(1) & _
'                                    " AND ternro =" & Empleado.Ternro & " AND  horfecgen = " & ConvFecha(Fecha)
'                            If depurar Then
'                                Flog.writeline Espacios(Tabulador * 3) & "  ==> Descuenta al tipo de hora : " & arrTH1(1) & " la cantidad de horas: " & Hs_Lunch
'                            End If
'                    End If
'
'                    objConn.Execute StrSql, , adExecuteNoRecords
'                Else
'                    StrSql = "UPDATE gti_horcumplido SET horcant=" & (cantHsTH1Aux - Hs_Lunch) & " where thnro= " & arrTH1(0) & _
'                            " AND ternro =" & Empleado.Ternro & " AND  horfecgen = " & ConvFecha(Fecha)
'                    If depurar Then
'                        Flog.writeline Espacios(Tabulador * 3) & "  ==> Descuenta al tipo de hora : " & arrTH1(0) & " la cantidad de horas: " & Hs_Lunch
'                    End If
'                    objConn.Execute StrSql, , adExecuteNoRecords
'                End If
'            Else
'                Flog.writeline Espacios(Tabulador * 3) & "  ==> No se encontraron tipos de horas " & ListaTH1 & " horas generadas para descontar horas de Lunch."
'            End If
'        Else
'            Flog.writeline Espacios(Tabulador * 3) & "  ==> Se encontraron mas tipos de horas configuradas que las permitidas. Se deben configurar 2 tipos de horas."
'        End If
        
    End If
    
    

    If Hs_Exceso_Lunch > 0 And THExceso <> 0 Then
        'Genero hs de exceso de Lunch
        'Genero hs de lunch
        TotHorHHMM = CHoras(Hs_Exceso_Lunch, 60)
        
        Hor_Desde = ""
        Hor_Hasta = ""
        
        StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
        StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
        StrSql = StrSql & "horfecrep,horfecgen,horestado) VALUES ("
        StrSql = StrSql & TotHorHHMM
        StrSql = StrSql & "," & Round(Hs_Exceso_Lunch, Presicion_HC)
        StrSql = StrSql & "," & ConvFecha(Fecha)
        StrSql = StrSql & "," & ConvFecha(Fecha)
        StrSql = StrSql & ",'" & Hor_Desde & "'"
        StrSql = StrSql & ",'" & Hor_Hasta & "'"
        StrSql = StrSql & ",0,-1"
        StrSql = StrSql & "," & Empleado.Ternro
        StrSql = StrSql & "," & THExceso
        StrSql = StrSql & "," & Empleado.Legajo
        StrSql = StrSql & "," & ConvFecha(Fecha)
        StrSql = StrSql & "," & ConvFecha(Fecha)
        StrSql = StrSql & ",' '"
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
    
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & THExceso & "- Cantidad: " & Round(Hs_Exceso_Lunch, Presicion_HC) & " hs."
        End If
    End If
    
        
    
End If

CierroTodo:
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
    If rs_Tarjeta.State = adStateOpen Then rs_Tarjeta.Close
    Set rs_Tarjeta = Nothing
End Sub





Public Sub Politica400V7(ByVal Fecha As Date, ByVal TH_Justif As Long, ByVal TH_ExcesoComedor As Long, ByVal HsComedor As Integer, ByVal VentEnt As String, ByVal VentSal As String)
' --------------------------------------------------------------
' Descripcion: Política de almuerzo variable con Ventana dinamica.
'               TATA. desde ET+2 y hasta ST -1
' Autor: FGZ - 03/02/2015
' --------------------------------------------------------------
Dim THJust As Long
Dim THExceso As Long
Dim TNovJust As Long
Dim TNovExceso As Long
Dim TJusJust As Long
Dim TJusExceso As Long
Dim HSExcesoComedor As Single

Dim J1Desde As String
Dim J1Hasta As String
Dim J2Desde As String
Dim J2Hasta As String
Dim fecres As Date

Dim FJ1Desde As Date
Dim FJ1Hasta As Date
Dim FJ2Desde As Date
Dim FJ2Hasta As Date


Dim Thoras As Integer
Dim Tmin As Integer
Dim Tdias As Integer
Dim TotHor As Single
Dim NroTer As Long
Dim Gnovnro As Long

Dim rs As New ADODB.Recordset
Dim rs_Tjus As New ADODB.Recordset

StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = " & TH_Justif
StrSql = StrSql & " AND turnro = " & Nro_Turno
StrSql = StrSql & " ORDER BY conhornro ASC, turnro ASC"
OpenRecordset StrSql, rs
If Not rs.EOF Then
    THJust = rs!thnro
    TJusJust = 2
    
    'Busco el tipo de novedad asociado
    StrSql = "SELECT gtnovnro FROM gti_tiponovedad"
    StrSql = StrSql & " WHERE thnro = " & THJust
    OpenRecordset StrSql, rs_Tjus
    If rs_Tjus.EOF Then
        If depurar Then
            GeneraTraza Empleado.Ternro, p_fecha, "El tipo de Hora " & THJust & " no tiene Tipo de Justificacion (Novedad) asociado", Str(Nro_Turno)
            Flog.writeline Espacios(Tabulador * 3) & "El tipo de Hora " & THJust & " no tiene Tipo de Justificacion (Novedad) asociado"
        End If
        GoTo CierroTodo
    Else
        TNovJust = rs_Tjus!gtnovnro
    End If
    
Else
    If depurar Then
        GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora Almuerzo para el Turno ", Str(Nro_Turno)
        Flog.writeline Espacios(Tabulador * 3) & "No esta configurado el Tipo de Hora Almuerzo para el Turno " & Str(Nro_Turno)
    End If
    GoTo CierroTodo
End If


StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = " & TH_ExcesoComedor
StrSql = StrSql & " AND turnro = " & Nro_Turno
StrSql = StrSql & " ORDER BY conhornro ASC, turnro ASC"
OpenRecordset StrSql, rs
If Not rs.EOF Then
    THExceso = rs!thnro
    TJusExceso = 2
    
    'Busco el tipo de novedad asociado
    StrSql = "SELECT gtnovnro FROM gti_tiponovedad"
    StrSql = StrSql & " WHERE thnro = " & THExceso
    OpenRecordset StrSql, rs_Tjus
    If rs_Tjus.EOF Then
        If depurar Then
            GeneraTraza Empleado.Ternro, p_fecha, "El tipo de Hora " & THExceso & " no tiene Tipo de Justificacion (Novedad) asociado", Str(Nro_Turno)
            Flog.writeline Espacios(Tabulador * 3) & "El tipo de Hora " & THExceso & " no tiene Tipo de Justificacion (Novedad) asociado. No se genera justificacion por Exceso."
        End If
    Else
        TNovExceso = rs_Tjus!gtnovnro
    End If
Else
    If depurar Then
        GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora de Exceso de Almuerzo para el Turno ", Str(Nro_Turno)
        Flog.writeline Espacios(Tabulador * 3) & "No esta configurado el Tipo de Hora de Exceso de Almuerzo para el Turno " & Str(Nro_Turno) & ". No se genera justificacion por Exceso."
    End If
End If

    
 'Borro las novedades horarias y justificaciones insertadas por esta politica
 StrSql = "SELECT gnovnro FROM gti_novedad "
 StrSql = StrSql & " WHERE (gnovorden = -1 OR gnovorden = -2)"
 StrSql = StrSql & " AND gnovdesde = " & ConvFecha(p_fecha)
 StrSql = StrSql & " AND gnovhasta = " & ConvFecha(p_fecha)
 StrSql = StrSql & " AND gnovotoa = " & Empleado.Ternro
 'FGZ - 19/05/2010 ------------ Control FT -------------
 StrSql = StrSql & " AND (gti_novedad.ft = 0 OR (gti_novedad.ft = -1 AND gti_novedad.ftap = -1))"
 'FGZ - 19/05/2010 ------------ Control FT -------------
 OpenRecordset StrSql, rs
 Do While Not rs.EOF
     StrSql = "DELETE gti_justificacion WHERE juscodext = " & rs!Gnovnro
     'FGZ - 21/01/2009 - LE agregue este control porque sino podria borrar justificaciones que no corresponden
     StrSql = StrSql & " AND jussigla = 'ALM'"
     StrSql = StrSql & " AND ternro = " & Empleado.Ternro
     objConn.Execute StrSql, , adExecuteNoRecords

     rs.MoveNext
 Loop
 StrSql = "DELETE gti_novedad "
 'StrSql = StrSql & " WHERE gnovorden = -2"
 StrSql = StrSql & " WHERE (gnovorden = -1 OR gnovorden = -2)"
 StrSql = StrSql & " AND gnovdesde = " & ConvFecha(p_fecha)
 StrSql = StrSql & " AND gnovhasta = " & ConvFecha(p_fecha)
 StrSql = StrSql & " AND gnovotoa = " & Empleado.Ternro
 objConn.Execute StrSql, , adExecuteNoRecords




    'El rango de almuerzo es dinamico y se calcula como
    ' xx horas luego de la entrada teorica y hasta xx horas antes de la Salida teorica
   
    'VentEnt los usamos como cantidad de hs desde la entrada
    'VentSal lo usamos como cantidad de hs antes de la salida
    'defaults
    If VentEnt = "" Then
        VentEnt = "0200"
    End If
    If VentSal = "" Then
        VentSal = "0100"
    End If
    
    If P_Asignacion Then
        StrSql = "SELECT ttemphdesde1,ttemphhasta1,diaanterior FROM gti_detturtemp WHERE ternro= " & Empleado.Ternro & _
        " AND gttempdesde <= " & ConvFecha(p_fecha) & " AND gttemphasta >= " & ConvFecha(p_fecha)
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            If Not EsNulo(rs!ttemphdesde1) And Not EsNulo(rs!ttemphhasta1) Then
                E1 = rs!ttemphdesde1
                S1 = rs!ttemphhasta1
            Else
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "Parte con hora nula. Se descarta."
                End If
            End If
        End If
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "No hay Parte de Asignacion."
        End If
    End If
    
    
    
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & " Entrada Teorica 1: " & FE1 & " - " & E1
        Flog.writeline Espacios(Tabulador * 3) & " Salida Teorica 1 : " & FS1 & " - " & S1
        Flog.writeline
    End If
    
    'J1Desde = VentEnt
    J1Desde = E1
    FJ1Desde = FE1
    Call objFechasHoras.SumoHoras(FJ1Desde, J1Desde, Format(VentEnt, "0000"), FJ1Desde, J1Desde)
    If Not objFechasHoras.ValidarHora(J1Desde) Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "Hora Invalida " & J1Desde
        End If
        Exit Sub
    End If
    
    
    Call objFechasHoras.SumoHoras(FJ1Desde, J1Desde, Format(HsComedor, "0000"), FJ1Hasta, J1Hasta)
    If Not objFechasHoras.ValidarHora(J1Hasta) Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "Hora Invalida " & J1Hasta
        End If
        Exit Sub
    End If
    
    FJ2Desde = FJ1Hasta
    J2Desde = J1Hasta
    J2Hasta = S1
    FJ2Hasta = FS1
    Call objFechasHoras.RestaXHoras(FJ2Hasta, J2Hasta, VentSal, FJ2Hasta, J2Hasta)
    If Not objFechasHoras.ValidarHora(J2Hasta) Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "Hora Invalida " & J2Hasta
        End If
        Exit Sub
    End If
    'J2Hasta = VentSal
    
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "  Rango dinámico establecido."
        Flog.writeline Espacios(Tabulador * 3) & "      Almuerzo Desde " & J1Desde & " hasta " & J1Hasta
        Flog.writeline Espacios(Tabulador * 3) & "      Exceso Almuerzo Desde " & J2Desde & " hasta " & J2Hasta
    End If
    
    
    'Estos campos no se completan
    'gnovhoradesde,gnovhorahasta


    'Las inserto como de tipo 4 (que no existe) para que se traten en forma distinta a las de
    '   tipo 2 --> Parciales Fijas
    '   tipo 3 --> Parciales Variables

    'Insertar la novedad
    StrSql = "INSERT INTO gti_novedad(gnovdesabr,gnovdesext,gnovotoa,"
    StrSql = StrSql & "gnovdesde, gnovhasta, gnovestado,gtnovnro,gnovdiacompleto,"
    StrSql = StrSql & "gnovtipo,gnovorden,gnovmaxhoras)"
    StrSql = StrSql & " VALUES ("
    StrSql = StrSql & "'Almuerzo'" & ","
    StrSql = StrSql & "'Novedad Automatica por Politica 400'" & ","
    StrSql = StrSql & Empleado.Ternro & ","
    StrSql = StrSql & ConvFecha(p_fecha) & ","
    StrSql = StrSql & ConvFecha(p_fecha) & ","
    StrSql = StrSql & "' '" & ","
    StrSql = StrSql & TNovJust & ","
    StrSql = StrSql & -1 & ","
    StrSql = StrSql & 4 & ","
    StrSql = StrSql & -2 & ","
    StrSql = StrSql & (HsComedor / 60) & ")"
    objConn.Execute StrSql, , adExecuteNoRecords

    Gnovnro = getLastIdentity(objConn, "gti_novedad")
    

    'Inserto la justificacion para el almuerzo
    StrSql = "INSERT INTO gti_justificacion(jussigla,turnro,ternro,tjusnro,"
    StrSql = StrSql & "jusdiacompleto,jusdesde,jushasta,jussistema,juscanths,"
    StrSql = StrSql & "jushoradesde,jushorahasta,juseltipo,juselmaxhoras,juselorden,juscodext)"
    StrSql = StrSql & " VALUES ("
    StrSql = StrSql & "'ALM'" & ","
    StrSql = StrSql & Nro_Turno & ","
    StrSql = StrSql & Empleado.Ternro & ","
    StrSql = StrSql & TJusJust & ","
    StrSql = StrSql & "0," & ConvFecha(FJ1Desde) & "," & ConvFecha(FJ1Hasta) & ",-1,"
    StrSql = StrSql & (HsComedor / 60) & ","
    'StrSql = StrSql & "'" & VentEnt & "'" & ","
    'StrSql = StrSql & "'" & VentSal & "'" & ","
    StrSql = StrSql & "'" & J1Desde & "'" & ","
    StrSql = StrSql & "'" & J1Hasta & "'" & ","
    StrSql = StrSql & "4" & ","
    StrSql = StrSql & (HsComedor / 60) & ","
    StrSql = StrSql & "-2,"
    StrSql = StrSql & Gnovnro & ")"
    objConn.Execute StrSql, , adExecuteNoRecords
    If depurar Then
        Flog.writeline Espacios(Tabulador * 4) & "  ==> Insertó Justificación (Almuerzo)--> Novedad: " & Gnovnro & "- Cantidad: " & HsComedor & " hs."
    End If


    If THExceso <> 0 Then
        'Inserto la justificacion para el exceso del almuerzo
        HSExcesoComedor = 0
        'objFechasHoras.RestaHs Fecha, VentEnt, Fecha, VentSal, Tdias, Thoras, Tmin
        objFechasHoras.RestaHs Fecha, J2Desde, Fecha, J2Hasta, Tdias, Thoras, Tmin
        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
        'HSExcesoComedor = TotHor - (HsComedor / 60)
        HSExcesoComedor = TotHor
        
        'Insertar la novedad
        StrSql = "INSERT INTO gti_novedad(gnovdesabr,gnovdesext,gnovotoa,"
        StrSql = StrSql & "gnovdesde, gnovhasta, gnovestado,gtnovnro,gnovdiacompleto,"
        StrSql = StrSql & "gnovtipo,gnovorden,gnovmaxhoras)"
        StrSql = StrSql & " VALUES ("
        StrSql = StrSql & "'Exceso Almuerzo'" & ","
        StrSql = StrSql & "'Novedad Automatica por Politica 400'" & ","
        StrSql = StrSql & Empleado.Ternro & ","
        StrSql = StrSql & ConvFecha(FJ2Desde) & ","
        StrSql = StrSql & ConvFecha(FJ2Hasta) & ","
        StrSql = StrSql & "' '" & ","
        StrSql = StrSql & TNovExceso & ","
        StrSql = StrSql & -1 & ","
        StrSql = StrSql & 4 & ","
        StrSql = StrSql & -1 & ","
        StrSql = StrSql & HSExcesoComedor & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        Gnovnro = getLastIdentity(objConn, "gti_novedad")
    
        'Inserto la justificacion
        StrSql = "INSERT INTO gti_justificacion(jussigla,turnro,ternro,tjusnro,"
        StrSql = StrSql & "jusdiacompleto,jusdesde,jushasta,jussistema,juscanths,"
        StrSql = StrSql & "jushoradesde,jushorahasta,juseltipo,juselmaxhoras,juselorden,juscodext)"
        StrSql = StrSql & " VALUES ("
        StrSql = StrSql & "'ALM'" & ","
        StrSql = StrSql & Nro_Turno & ","
        StrSql = StrSql & Empleado.Ternro & ","
        StrSql = StrSql & TJusExceso & ","
        'StrSql = StrSql & "0," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",-1,"
        StrSql = StrSql & "0," & ConvFecha(FJ2Desde) & "," & ConvFecha(FJ2Hasta) & ",-1,"
        StrSql = StrSql & HSExcesoComedor & ","
        'FGZ - 24/05/2013 -------------------------------------
        'StrSql = StrSql & "'" & VentEnt & "'" & ","
        'StrSql = StrSql & "'" & VentSal & "'" & ","
        StrSql = StrSql & "'" & J2Desde & "'" & ","
        StrSql = StrSql & "'" & J2Hasta & "'" & ","
        'FGZ - 24/05/2013 -------------------------------------
        StrSql = StrSql & "4" & ","
        StrSql = StrSql & HSExcesoComedor & ","
        StrSql = StrSql & "-1,"
        StrSql = StrSql & Gnovnro & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        If depurar Then
            Flog.writeline Espacios(Tabulador * 4) & "  ==> Insertó Justificación (Exceso de Almuerzo)--> Novedad: " & Gnovnro & "- Cantidad: " & HsComedor & " hs."
        End If
    Else
        'No se generan justificaciones por exceso de almuerzo
    End If
    
    'Genero las horas Justificadas
    Call GenerarJustificacionesAutomaticas(Empleado.Ternro, p_fecha)

CierroTodo:
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
    
    If rs_Tjus.State = adStateOpen Then rs_Tjus.Close
    Set rs_Tjus = Nothing
End Sub

Public Sub Politica400V8(ByVal Fecha As Date, ByVal TH_Justif As Long, ByVal TH_ExcesoComedor As Long, ByVal HsComedor As Integer, ByVal VentEnt As String, ByVal VentSal As String)
' --------------------------------------------------------------
' Descripcion: Política de almuerzo variable. Estandar NUEVA
' Autor: FGZ - 20/08/2008
' --------------------------------------------------------------
Dim THJust As Long
Dim THExceso As Long
Dim TNovJust As Long
Dim TNovExceso As Long
Dim TJusJust As Long
Dim TJusExceso As Long
Dim HSExcesoComedor As Single

Dim J1Desde As String
Dim J1Hasta As String
Dim J2Desde As String
Dim J2Hasta As String
Dim fecres As Date

Dim FJ1Desde As Date
Dim FJ1Hasta As Date
Dim FJ2Desde As Date
Dim FJ2Hasta As Date

Dim Thoras As Integer
Dim Tmin As Integer
Dim Tdias As Integer
Dim TotHor As Single
Dim NroTer As Long
Dim Gnovnro As Long

Dim rs As New ADODB.Recordset
Dim rs_Tjus As New ADODB.Recordset

StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = " & TH_Justif
StrSql = StrSql & " AND turnro = " & Nro_Turno
StrSql = StrSql & " ORDER BY conhornro ASC, turnro ASC"
OpenRecordset StrSql, rs
If Not rs.EOF Then
    THJust = rs!thnro
    TJusJust = 2
    
    'Busco el tipo de novedad asociado
    StrSql = "SELECT gtnovnro FROM gti_tiponovedad"
    StrSql = StrSql & " WHERE thnro = " & THJust
    OpenRecordset StrSql, rs_Tjus
    If rs_Tjus.EOF Then
        If depurar Then
            GeneraTraza Empleado.Ternro, p_fecha, "El tipo de Hora " & THJust & " no tiene Tipo de Justificacion (Novedad) asociado", Str(Nro_Turno)
            Flog.writeline Espacios(Tabulador * 3) & "El tipo de Hora " & THJust & " no tiene Tipo de Justificacion (Novedad) asociado"
        End If
        GoTo CierroTodo
    Else
        TNovJust = rs_Tjus!gtnovnro
    End If
    
Else
    If depurar Then
        GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora Almuerzo para el Turno ", Str(Nro_Turno)
        Flog.writeline Espacios(Tabulador * 3) & "No esta configurado el Tipo de Hora Almuerzo para el Turno " & Str(Nro_Turno)
    End If
    GoTo CierroTodo
End If


StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = " & TH_ExcesoComedor
StrSql = StrSql & " AND turnro = " & Nro_Turno
StrSql = StrSql & " ORDER BY conhornro ASC, turnro ASC"
OpenRecordset StrSql, rs
If Not rs.EOF Then
    THExceso = rs!thnro
    TJusExceso = 2
    
    'Busco el tipo de novedad asociado
    StrSql = "SELECT gtnovnro FROM gti_tiponovedad"
    StrSql = StrSql & " WHERE thnro = " & THExceso
    OpenRecordset StrSql, rs_Tjus
    If rs_Tjus.EOF Then
        If depurar Then
            GeneraTraza Empleado.Ternro, p_fecha, "El tipo de Hora " & THExceso & " no tiene Tipo de Justificacion (Novedad) asociado", Str(Nro_Turno)
            Flog.writeline Espacios(Tabulador * 3) & "El tipo de Hora " & THExceso & " no tiene Tipo de Justificacion (Novedad) asociado. No se genera justificacion por Exceso."
        End If
    Else
        TNovExceso = rs_Tjus!gtnovnro
    End If
Else
    If depurar Then
        GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora de Exceso de Almuerzo para el Turno ", Str(Nro_Turno)
        Flog.writeline Espacios(Tabulador * 3) & "No esta configurado el Tipo de Hora de Exceso de Almuerzo para el Turno " & Str(Nro_Turno) & ". No se genera justificacion por Exceso."
    End If
End If

    
 'Borro las novedades horarias y justificaciones insertadas por esta politica
 StrSql = "SELECT gnovnro FROM gti_novedad "
 StrSql = StrSql & " WHERE (gnovorden = -1 OR gnovorden = -2)"
 StrSql = StrSql & " AND gnovdesde = " & ConvFecha(p_fecha)
 StrSql = StrSql & " AND gnovhasta = " & ConvFecha(p_fecha)
 StrSql = StrSql & " AND gnovotoa = " & Empleado.Ternro
 'FGZ - 19/05/2010 ------------ Control FT -------------
 StrSql = StrSql & " AND (gti_novedad.ft = 0 OR (gti_novedad.ft = -1 AND gti_novedad.ftap = -1))"
 'FGZ - 19/05/2010 ------------ Control FT -------------
 OpenRecordset StrSql, rs
 Do While Not rs.EOF
     StrSql = "DELETE gti_justificacion WHERE juscodext = " & rs!Gnovnro
     'FGZ - 21/01/2009 - LE agregue este control porque sino podria borrar justificaciones que no corresponden
     StrSql = StrSql & " AND jussigla = 'ALM'"
     StrSql = StrSql & " AND ternro = " & Empleado.Ternro
     objConn.Execute StrSql, , adExecuteNoRecords

     rs.MoveNext
 Loop
 StrSql = "DELETE gti_novedad "
 'StrSql = StrSql & " WHERE gnovorden = -2"
 StrSql = StrSql & " WHERE (gnovorden = -1 OR gnovorden = -2)"
 StrSql = StrSql & " AND gnovdesde = " & ConvFecha(p_fecha)
 StrSql = StrSql & " AND gnovhasta = " & ConvFecha(p_fecha)
 StrSql = StrSql & " AND gnovotoa = " & Empleado.Ternro
 objConn.Execute StrSql, , adExecuteNoRecords


'-------------------------------
    'El rango de almuerzo es dinamico y se calcula como
    ' xx horas luego de la entrada teorica y hasta xx horas antes de la Salida teorica
   
    'VentEnt los usamos como cantidad de hs desde la entrada
    'VentSal lo usamos como cantidad de hs antes de la salida
    'defaults
    If VentEnt = "" Then
        VentEnt = "0200"
    End If
    If VentSal = "" Then
        VentSal = "0100"
    End If
    
    If P_Asignacion Then
        StrSql = "SELECT ttemphdesde1,ttemphhasta1,diaanterior FROM gti_detturtemp WHERE ternro= " & Empleado.Ternro & _
        " AND gttempdesde <= " & ConvFecha(p_fecha) & " AND gttemphasta >= " & ConvFecha(p_fecha)
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            If Not EsNulo(rs!ttemphdesde1) And Not EsNulo(rs!ttemphhasta1) Then
                E1 = rs!ttemphdesde1
                S1 = rs!ttemphhasta1
            Else
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "Parte con hora nula. Se descarta."
                End If
            End If
        End If
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "No hay Parte de Asignacion."
        End If
    End If
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & " Entrada Teorica 1: " & FE1 & " - " & E1
        Flog.writeline Espacios(Tabulador * 3) & " Salida Teorica 1 : " & FS1 & " - " & S1
        Flog.writeline
    End If
    
    'J1Desde = VentEnt
    J1Desde = E1
    FJ1Desde = FE1
    Call objFechasHoras.SumoHoras(FJ1Desde, J1Desde, Format(VentEnt, "0000"), FJ1Desde, J1Desde)
    If Not objFechasHoras.ValidarHora(J1Desde) Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "Hora Invalida " & J1Desde
        End If
        Exit Sub
    End If
    
    
    Call objFechasHoras.SumoHoras(FJ1Desde, J1Desde, Format(HsComedor, "0000"), FJ1Hasta, J1Hasta)
    If Not objFechasHoras.ValidarHora(J1Hasta) Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "Hora Invalida " & J1Hasta
        End If
        Exit Sub
    End If
    
    FJ2Desde = FJ1Hasta
    J2Desde = J1Hasta
    J2Hasta = S1
    FJ2Hasta = FS1
    Call objFechasHoras.RestaXHoras(FJ2Hasta, J2Hasta, VentSal, FJ2Hasta, J2Hasta)
    If Not objFechasHoras.ValidarHora(J2Hasta) Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "Hora Invalida " & J2Hasta
        End If
        Exit Sub
    End If
    'J2Hasta = VentSal
    
    VentEnt = J1Desde
    VentSal = J2Hasta
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "  Rango dinámico establecido. Desde " & VentEnt & " hasta " & VentSal
        Flog.writeline Espacios(Tabulador * 3) & "      Almuerzo Desde " & J1Desde & " hasta " & J1Hasta
        Flog.writeline Espacios(Tabulador * 3) & "      Exceso Almuerzo Desde " & J2Desde & " hasta " & J2Hasta
    End If
'-------------------------------

    'Las inserto como de tipo 4 (que no existe) para que se traten en forma distinta a las de
    '   tipo 2 --> Parciales Fijas
    '   tipo 3 --> Parciales Variables

    'Insertar la novedad
    StrSql = "INSERT INTO gti_novedad(gnovdesabr,gnovdesext,gnovotoa,"
    StrSql = StrSql & "gnovdesde, gnovhasta, gnovestado,gtnovnro,gnovdiacompleto,"
    StrSql = StrSql & "gnovtipo,gnovorden,gnovmaxhoras)"
    StrSql = StrSql & " VALUES ("
    StrSql = StrSql & "'Almuerzo'" & ","
    StrSql = StrSql & "'Novedad Automatica por Politica 400'" & ","
    StrSql = StrSql & Empleado.Ternro & ","
    StrSql = StrSql & ConvFecha(p_fecha) & ","
    StrSql = StrSql & ConvFecha(p_fecha) & ","
    StrSql = StrSql & "' '" & ","
    StrSql = StrSql & TNovJust & ","
    StrSql = StrSql & -1 & ","
    StrSql = StrSql & 4 & ","
    StrSql = StrSql & -2 & ","
    StrSql = StrSql & (HsComedor / 60) & ")"
    objConn.Execute StrSql, , adExecuteNoRecords

    Gnovnro = getLastIdentity(objConn, "gti_novedad")

    
    J1Desde = VentEnt
    Call objFechasHoras.SumoHoras(p_fecha, J1Desde, Format(HsComedor, "0000"), fecres, J1Hasta)
    If Not objFechasHoras.ValidarHora(J1Hasta) Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "Hora Invalida " & J1Hasta
        End If
        Exit Sub
    End If
    
    J2Desde = J1Hasta
    J2Hasta = VentSal

    'Inserto la justificacion para el almuerzo
    StrSql = "INSERT INTO gti_justificacion(jussigla,turnro,ternro,tjusnro,"
    StrSql = StrSql & "jusdiacompleto,jusdesde,jushasta,jussistema,juscanths,"
    StrSql = StrSql & "jushoradesde,jushorahasta,juseltipo,juselmaxhoras,juselorden,juscodext)"
    StrSql = StrSql & " VALUES ("
    StrSql = StrSql & "'ALM'" & ","
    StrSql = StrSql & Nro_Turno & ","
    StrSql = StrSql & Empleado.Ternro & ","
    StrSql = StrSql & TJusJust & ","
    StrSql = StrSql & "0," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",-1,"
    StrSql = StrSql & (HsComedor / 60) & ","
    StrSql = StrSql & "'" & VentEnt & "'" & ","
    StrSql = StrSql & "'" & VentSal & "'" & ","
    'StrSql = StrSql & "'" & J1Desde & "'" & ","
    'StrSql = StrSql & "'" & J1Hasta & "'" & ","
    StrSql = StrSql & "4" & ","
    StrSql = StrSql & (HsComedor / 60) & ","
    StrSql = StrSql & "-2,"
    StrSql = StrSql & Gnovnro & ")"
    objConn.Execute StrSql, , adExecuteNoRecords
    If depurar Then
        Flog.writeline Espacios(Tabulador * 4) & "  ==> Insertó Justificación (Almuerzo)--> Novedad: " & Gnovnro & "- Cantidad: " & HsComedor & " hs."
    End If


    If THExceso <> 0 Then
        'Inserto la justificacion para el exceso del almuerzo
        HSExcesoComedor = 0
        'objFechasHoras.RestaHs Fecha, VentEnt, Fecha, VentSal, Tdias, Thoras, Tmin
        'TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
        'HSExcesoComedor = TotHor - (HsComedor / 60)
        
        objFechasHoras.RestaHs Fecha, J2Desde, Fecha, J2Hasta, Tdias, Thoras, Tmin
        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
        HSExcesoComedor = TotHor
        
        'Insertar la novedad
        StrSql = "INSERT INTO gti_novedad(gnovdesabr,gnovdesext,gnovotoa,"
        StrSql = StrSql & "gnovdesde, gnovhasta, gnovestado,gtnovnro,gnovdiacompleto,"
        StrSql = StrSql & "gnovtipo,gnovorden,gnovmaxhoras)"
        StrSql = StrSql & " VALUES ("
        StrSql = StrSql & "'Exceso Almuerzo'" & ","
        StrSql = StrSql & "'Novedad Automatica por Politica 400'" & ","
        StrSql = StrSql & Empleado.Ternro & ","
        'StrSql = StrSql & ConvFecha(p_fecha) & ","
        'StrSql = StrSql & ConvFecha(p_fecha) & ","
        StrSql = StrSql & ConvFecha(FJ2Desde) & ","
        StrSql = StrSql & ConvFecha(FJ2Hasta) & ","
        StrSql = StrSql & "' '" & ","
        StrSql = StrSql & TNovExceso & ","
        StrSql = StrSql & -1 & ","
        StrSql = StrSql & 4 & ","
        StrSql = StrSql & -1 & ","
        StrSql = StrSql & HSExcesoComedor & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        Gnovnro = getLastIdentity(objConn, "gti_novedad")
    
'        'Inserto la justificacion
'        StrSql = "INSERT INTO gti_justificacion(jussigla,turnro,ternro,tjusnro,"
'        StrSql = StrSql & "jusdiacompleto,jusdesde,jushasta,jussistema,juscanths,"
'        StrSql = StrSql & "jushoradesde,jushorahasta,juseltipo,juselmaxhoras,juselorden,juscodext)"
'        StrSql = StrSql & " VALUES ("
'        StrSql = StrSql & "'ALM'" & ","
'        StrSql = StrSql & Nro_Turno & ","
'        StrSql = StrSql & Empleado.Ternro & ","
'        StrSql = StrSql & TJusExceso & ","
'        StrSql = StrSql & "0," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",-1,"
'        StrSql = StrSql & HSExcesoComedor & ","
'        'FGZ - 24/05/2013 -------------------------------------
'        'StrSql = StrSql & "'" & VentEnt & "'" & ","
'        'StrSql = StrSql & "'" & VentSal & "'" & ","
'        StrSql = StrSql & "'" & J2Desde & "'" & ","
'        StrSql = StrSql & "'" & J2Hasta & "'" & ","
'        'FGZ - 24/05/2013 -------------------------------------
'        StrSql = StrSql & "4" & ","
'        StrSql = StrSql & HSExcesoComedor & ","
'        StrSql = StrSql & "-1,"
'        StrSql = StrSql & Gnovnro & ")"
'        objConn.Execute StrSql, , adExecuteNoRecords
        
        'FGZ - 04/02/2015 -------------------------------
        'Buscar la ultima registracion del dia
        If UltimaRegHora < VentSal Then
            J2Hasta = UltimaRegHora
        End If
        'FGZ - 04/02/2015 -------------------------------
        
        StrSql = "INSERT INTO gti_justificacion(jussigla,turnro,ternro,tjusnro,"
        StrSql = StrSql & "jusdiacompleto,jusdesde,jushasta,jussistema,juscanths,"
        StrSql = StrSql & "jushoradesde,jushorahasta,juseltipo,juselmaxhoras,juselorden,juscodext)"
        StrSql = StrSql & " VALUES ("
        StrSql = StrSql & "'ALM'" & ","
        StrSql = StrSql & Nro_Turno & ","
        StrSql = StrSql & Empleado.Ternro & ","
        StrSql = StrSql & TJusExceso & ","
        'StrSql = StrSql & "0," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",-1,"
        StrSql = StrSql & "0," & ConvFecha(FJ2Desde) & "," & ConvFecha(FJ2Hasta) & ",-1,"
        StrSql = StrSql & HSExcesoComedor & ","
        'FGZ - 24/05/2013 -------------------------------------
        'StrSql = StrSql & "'" & VentEnt & "'" & ","
        'StrSql = StrSql & "'" & VentSal & "'" & ","
        StrSql = StrSql & "'" & J2Desde & "'" & ","
        StrSql = StrSql & "'" & J2Hasta & "'" & ","
        'FGZ - 24/05/2013 -------------------------------------
        StrSql = StrSql & "4" & ","
        StrSql = StrSql & HSExcesoComedor & ","
        StrSql = StrSql & "-1,"
        StrSql = StrSql & Gnovnro & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        
        If depurar Then
            Flog.writeline Espacios(Tabulador * 4) & "  ==> Insertó Justificación (Exceso de Almuerzo)--> Novedad: " & Gnovnro & "- Cantidad: " & HsComedor & " hs."
        End If
    Else
        'No se generan justificaciones por exceso de almuerzo
    End If
    
    'Genero las horas Justificadas
    Call GenerarJustificacionesAutomaticas(Empleado.Ternro, p_fecha)

CierroTodo:
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
    
    If rs_Tjus.State = adStateOpen Then rs_Tjus.Close
    Set rs_Tjus = Nothing
End Sub



Public Sub GenerarJustificacionesAutomaticas(ByVal NroTer As Long, ByVal p_fecha As Date)
' ---------------------------------------------------------------------------------------------
' Descripcion: Generacion de justificaciones parciales variables Automaticas
' Autor: FGZ
' Fecha:
' ----------------------------------------------------------------------------------------------
Dim Aux_Tipohora As Long
Dim Aux_Hora As Long
Dim Hora As String
Dim fecres As Date
Dim horres As String
Dim ok As Boolean
Dim VHora  As String
Dim VFecha As Date
Dim VCant  As Single
Dim Sigue As Boolean
Dim Aux_NroJustif As Long

Dim Jus_Hor_Desde As String
Dim Jus_Hor_Hasta As String
Dim Jus_Fec_Desde As Date
Dim Jus_Fec_Hasta As Date
Dim Cant_Int As Double
Dim Cant_HC1 As Double
Dim Cant_HC2 As Double
Dim Caso As String

Dim wf_Hcp As New ADODB.Recordset
Dim wf_Hcp2 As New ADODB.Recordset
Dim Rs_Justif As New ADODB.Recordset
Dim rs As New ADODB.Recordset

Dim TotHorHHMM As String

'Comienzo del codigo
Call CreateTempTable(TTempWFJustif)

StrSql = "SELECT * FROM GTI_JUSTIFICACION WHERE ternro = " & NroTer
StrSql = StrSql & " AND juseltipo = 4 AND jusdesde <= " & ConvFecha(p_fecha)
StrSql = StrSql & " AND jushasta >= " & ConvFecha(p_fecha)
StrSql = StrSql & " ORDER BY juselorden "
OpenRecordset StrSql, Rs_Justif
Do While Not Rs_Justif.EOF
        If depurar Then
            Flog.writeline Espacios(Tabulador * 5) & " Justificacion: NOV Automatica de Almuerzo"
        End If
        
        StrSql = " SELECT gti_tiponovedad.thnro FROM gti_novedad "
        StrSql = StrSql & " INNER JOIN gti_tiponovedad ON gti_tiponovedad.gtnovnro = gti_novedad.gtnovnro "
        StrSql = StrSql & " WHERE gti_novedad.gnovotoa = " & NroTer
        StrSql = StrSql & " AND gti_novedad.gnovnro = " & Rs_Justif!juscodext
        'FGZ - 19/05/2010 ------------ Control FT -------------
        StrSql = StrSql & " AND (gti_novedad.ft = 0 OR (gti_novedad.ft = -1 AND gti_novedad.ftap = -1))"
        'FGZ - 19/05/2010 ------------ Control FT -------------
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 5) & "Hay problemas con la Novedad"
            End If
            GoTo CierroTodo
        Else
            If depurar Then
                Flog.writeline Espacios(Tabulador * 5) & "Tipo de Hora: " & Aux_Tipohora
            End If
            Aux_Tipohora = rs!thnro
        End If

        StrSql = "INSERT INTO " & TTempWFJustif & " (codext,desde,hasta,maxhoras,orden,"
        StrSql = StrSql & " nro,sigla,ternro,tjusnro,horadesde,horahasta,thnro)"
        StrSql = StrSql & " VALUES( "
        StrSql = StrSql & Rs_Justif!juscodext
        StrSql = StrSql & "," & ConvFecha(Rs_Justif!jusdesde)
        StrSql = StrSql & "," & ConvFecha(Rs_Justif!jushasta)
        StrSql = StrSql & "," & Rs_Justif!juselMaxHoras
        StrSql = StrSql & "," & Rs_Justif!juselorden
        StrSql = StrSql & "," & Rs_Justif!jusnro
        StrSql = StrSql & ",'" & Rs_Justif!jussigla & "'"
        StrSql = StrSql & "," & Rs_Justif!Ternro
        StrSql = StrSql & "," & Rs_Justif!tjusnro
        StrSql = StrSql & ",'" & Rs_Justif!jushoradesde & "'"
        StrSql = StrSql & ",'" & Rs_Justif!jushorahasta & "'"
        StrSql = StrSql & "," & Aux_Tipohora
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        If depurar Then
            Flog.writeline Espacios(Tabulador * 5) & "Insertó en WF_Justif "
        End If
    
    Rs_Justif.MoveNext
Loop


'FGZ - 27/05/2013 ----------------------------------------------
'Las Salidas temprano NO se jsutifican con almuerzos variables
'StrSql = "SELECT * FROM gti_horcumplido WHERE ternro = " & NroTer
'StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
'StrSql = StrSql & " AND (normnro IS NOT NULL)"
'StrSql = StrSql & " AND (normnro2 IS NOT NULL)"
'StrSql = StrSql & " AND (jusnro IS NULL)"
'StrSql = StrSql & " AND (jusnro2 IS NULL)"
'StrSql = StrSql & " ORDER BY horhoradesde, horhorahasta, thnro "

StrSql = "SELECT * FROM gti_horcumplido WHERE ternro = " & NroTer
StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
StrSql = StrSql & " AND (normnro <> 6 AND normnro2 <> 6)"
StrSql = StrSql & " AND (jusnro IS NULL)"
StrSql = StrSql & " AND (jusnro2 IS NULL)"
StrSql = StrSql & " ORDER BY horhoradesde, horhorahasta, thnro "

OpenRecordset StrSql, rs
'Sigue = True
'If Not rs.EOF Then
Do While Not rs.EOF
    StrSql = "SELECT * FROM " & TTempWFJustif
    StrSql = StrSql & " ORDER BY orden"
    If Rs_Justif.State = adStateOpen Then Rs_Justif.Close
    OpenRecordset StrSql, Rs_Justif
    
    Sigue = True
    'Miemtras tenga horas para justificar y tenga Justificaciones
    Do While Not Rs_Justif.EOF And Not rs.EOF And Sigue
        If depurar Then
            Flog.writeline Espacios(Tabulador * 5) & "justificacion Tipo de Hora : " & Rs_Justif!thnro
        End If
        
        If Rs_Justif!thnro <> 0 Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 5) & "rs.Horcant: " & rs!horcant & " y rs_justif!maxhoras: " & Rs_Justif!MaxHoras
            End If
            
            'FGZ - 04/12/2014 ------------------------------
            If Not EsNulo(Rs_Justif!MaxHoras) Then
                Total_Hs_Justificadas = Rs_Justif!MaxHoras
            End If
            
            'FGZ - 04/12/2014 ------------------------------
            Cant_Int = 0
            If Not EsNulo(rs!hordesde) And Not EsNulo(rs!horhoradesde) And Not EsNulo(rs!horhasta) And Not EsNulo(rs!horhorahasta) And Not EsNulo(Rs_Justif!Desde) And Not EsNulo(Rs_Justif!HoraDesde) And Not EsNulo(Rs_Justif!Hasta) And Not EsNulo(Rs_Justif!HoraHasta) And Not EsNulo(Rs_Justif!MaxHoras) Then
                'Reviso la cantidad de horas que se intersectan entre la anormalidad del HC y la justificacion
                Call CalcularInterseccionHoras(rs!hordesde, rs!horhoradesde, rs!horhasta, rs!horhorahasta, Rs_Justif!Desde, Rs_Justif!HoraDesde, Rs_Justif!Hasta, Rs_Justif!HoraHasta, Rs_Justif!MaxHoras, Cant_Int, Jus_Fec_Desde, Jus_Hor_Desde, Jus_Fec_Hasta, Jus_Hor_Hasta, Caso, Cant_HC1, Cant_HC2)
            End If
            
            'Call CalcularInterseccionHoras(rs!hordesde, rs!horhoradesde, rs!horhasta, rs!horhorahasta, Rs_Justif!Desde, Rs_Justif!HoraDesde, Rs_Justif!Hasta, Rs_Justif!HoraHasta, Rs_Justif!MaxHoras, Cant_Int, Jus_Fec_Desde, Jus_Hor_Desde, Jus_Fec_Hasta, Jus_Hor_Hasta, Caso, Cant_HC1, Cant_HC2)
            'FGZ - 04/12/2014 ------------------------------
            If Cant_Int < rs!horcant Then
                'Estamos ante alguno de estos 4 casos
                'A)
                '-----D1------H1---------
                '---------D2------H2-----
                    'Debe quedar ---D2-----H1------
                
                'B)
                '-----D1----------H1-----
                '---------D2---H2--------
                    'Debe quedar ---D2-----H2----
                
                'C)
                '--------D1------H1---------
                '-----D2------H2------------
                    'Debe quedar ---D1-----H2------

                'D)
                '--------D1------H1---------
                '-----D2-----------H2-------
                    'Debe quedar ---D1-----H1------
                    
                If Cant_Int <> 0 Then
                    Select Case Caso
                    Case "A":
                        '-----D1------H1---------
                        '---------D2------H2-----
                            'Debe quedar ---D2-----H1------
                        
                        'Debo dejar el registro de HC cambiandole la cantidad de horas y acortando la fecha hasta
                        ' Ademas si la cantidad justificada es menor que Total_Hs_Justificadas debo insertar en el HC el resto
                        
                        StrSql = "SELECT * FROM GTI_HORCUMPLIDO WHERE hornro = " & rs!hornro
                        OpenRecordset StrSql, wf_Hcp
                        If Not wf_Hcp.EOF Then
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 5) & "wf_hcp!horcant= " & wf_Hcp!horcant
                                Flog.writeline Espacios(Tabulador * 5) & "rs_justif!maxhoras= " & Cant_Int
                            End If
                            
                            VCant = CSng("0" & wf_Hcp!horcant) - Cant_Int
                            
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 5) & "wf_hcp!horcant - rs_justif!maxhoras = " & VCant
                            End If
                            
                            'Actualizo el resto
                            If Round(Cant_HC1, Presicion_HC) <> 0 Then
                                TotHorHHMM = CHoras(Cant_HC1, 60)
                            
                                StrSql = "UPDATE gti_horcumplido SET horcant = " & Round(Cant_HC1, Presicion_HC)
                                StrSql = StrSql & ", horas = " & TotHorHHMM
                                StrSql = StrSql & ", horhorahasta = '" & Jus_Hor_Desde & "'"
                                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, adExecuteNoRecords
                            Else
                                StrSql = "DELETE FROM gti_horcumplido WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, , adExecuteNoRecords
                                
                                If depurar Then
                                    Flog.writeline Espacios(Tabulador * 5) & "Borra de gti_horcumplido tipo de hora: " & rs!hornro
                                End If
                            End If
                            
                            'Inserto un registro como el anterior pero por lo que falta
                            If Round(Cant_HC2, Presicion_HC) <> 0 Then
                                TotHorHHMM = CHoras(Cant_HC2, 60)
                            
                                StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                                "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
                                "normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Round(Cant_HC2, Presicion_HC) & "," & _
                                ConvFecha(rs!hordesde) & "," & ConvFecha(rs!horhasta) & "," & "0,-1," & _
                                rs!Ternro & "," & rs!thnro & "," & rs!turnro & "," & rs!empleg & "," & _
                                ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",'" & Jus_Hor_Hasta & "','" & rs!horhorahasta & "'," & rs!normnro & "," & rs!normnro2 & ",' ')"
                                objConn.Execute StrSql, , adExecuteNoRecords
                            End If
                            
                            'Actualizo el rs
                            Flog.writeline Espacios(Tabulador * 5) & "Actualizó gti_horcumplido " & Round(VCant, Presicion_HC)
                            StrSql = "SELECT * FROM gti_horcumplido WHERE ternro = " & NroTer
                            StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
                            StrSql = StrSql & " AND (normnro IS NOT NULL)"
                            StrSql = StrSql & " AND (normnro2 IS NOT NULL)"
                            OpenRecordset StrSql, rs
                            If Not rs.EOF Then
                                rs.MoveFirst
                            End If
                        End If
                        
                        TotHorHHMM = CHoras(Cant_Int, 60)
                        If Rs_Justif!Orden = 1 Then
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                            StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                            StrSql = StrSql & "horfecrep,horfecgen,normnro,normnro2,horestado) VALUES ("
                            StrSql = StrSql & TotHorHHMM
                            StrSql = StrSql & "," & Round(Cant_Int, Presicion_HC)
                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                            StrSql = StrSql & ",'" & Jus_Hor_Desde & "'"
                            StrSql = StrSql & ",'" & Jus_Hor_Hasta & "'"
                            StrSql = StrSql & ",0,-1"
                            StrSql = StrSql & "," & Empleado.Ternro
                            StrSql = StrSql & "," & Rs_Justif!thnro
                            StrSql = StrSql & "," & Empleado.Legajo
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & ",12,12"
                            StrSql = StrSql & ",' '"
                            StrSql = StrSql & ")"
                        Else
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                            StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                            StrSql = StrSql & "horfecrep,horfecgen,horestado) VALUES ("
                            StrSql = StrSql & TotHorHHMM
                            StrSql = StrSql & "," & Round(Cant_Int, Presicion_HC)
                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                            StrSql = StrSql & ",'" & Jus_Hor_Desde & "'"
                            StrSql = StrSql & ",'" & Jus_Hor_Hasta & "'"
                            StrSql = StrSql & ",0,-1"
                            StrSql = StrSql & "," & Empleado.Ternro
                            StrSql = StrSql & "," & Rs_Justif!thnro
                            StrSql = StrSql & "," & Empleado.Legajo
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & ",' '"
                            StrSql = StrSql & ")"
                        End If
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 5) & "SQL " & StrSql
                        End If
                        objConn.Execute StrSql, , adExecuteNoRecords
                        
                        StrSql = "DELETE FROM " & TTempWFJustif & " WHERE nro = " & Rs_Justif!nro
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 5) & "Borra de WF_Justif"
                        End If
                    Case "B":
                        '-----D1----------H1-----
                        '---------D2---H2--------
                            'Debe quedar ---D2-----H2----
                
                        'Debo cortar el registro de HC cambiandole la cantidad de horas y acortando la fecha hasta, es decir, de ese registro hacer 2
                        '   ---[------------]------
                        '   ---[----]--[----]------
                        ' y el intervalo en el medio es lo que se justifica
                        
                        StrSql = "SELECT * FROM GTI_HORCUMPLIDO WHERE hornro = " & rs!hornro
                        OpenRecordset StrSql, wf_Hcp
                        If Not wf_Hcp.EOF Then
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 5) & "wf_hcp!horcant= " & wf_Hcp!horcant
                                Flog.writeline Espacios(Tabulador * 5) & "rs_justif!maxhoras= " & Cant_Int
                            End If
                            
                            'Actualizo el resto
                            If Round(Cant_HC1, Presicion_HC) <> 0 Then
                                TotHorHHMM = CHoras(Cant_HC1, 60)
                                StrSql = "UPDATE gti_horcumplido SET horcant = " & Round(Cant_HC1, Presicion_HC)
                                'StrSql = StrSql & ", horhoradesde = '" & Jus_Hor_Hasta & "'"
                                StrSql = StrSql & ", horas = " & TotHorHHMM
                                StrSql = StrSql & ", horhorahasta = '" & Jus_Hor_Desde & "'"
                                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, adExecuteNoRecords
                            Else
                                StrSql = "DELETE FROM gti_horcumplido WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, , adExecuteNoRecords
                                
                                If depurar Then
                                    Flog.writeline Espacios(Tabulador * 5) & "Borra de gti_horcumplido tipo de hora: " & rs!hornro
                                End If
                            End If
                            
                            'Inserto un registro como el anterior pero por lo que falta
                            If Round(Cant_HC2, Presicion_HC) <> 0 Then
                                TotHorHHMM = CHoras(Cant_HC2, 60)
                            
                                StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                                "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
                                "normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Round(Cant_HC2, Presicion_HC) & "," & _
                                ConvFecha(rs!hordesde) & "," & ConvFecha(rs!horhasta) & "," & "0,-1," & _
                                rs!Ternro & "," & rs!thnro & "," & rs!turnro & "," & rs!empleg & "," & _
                                ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",'" & Jus_Hor_Hasta & "','" & rs!horhorahasta & "'," & rs!normnro & "," & rs!normnro2 & ",' ')"
                                objConn.Execute StrSql, , adExecuteNoRecords
                            End If
                            
                            'Actualizo el rs
                            Flog.writeline Espacios(Tabulador * 5) & "Actualizó gti_horcumplido " & Round(VCant, Presicion_HC)
                            StrSql = "SELECT * FROM gti_horcumplido WHERE ternro = " & NroTer
                            StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
                            StrSql = StrSql & " AND (normnro IS NOT NULL)"
                            StrSql = StrSql & " AND (normnro2 IS NOT NULL)"
                            OpenRecordset StrSql, rs
                            If Not rs.EOF Then
                                rs.MoveFirst
                            End If
                        End If
                        
                        TotHorHHMM = CHoras(Cant_Int, 60)
                        If Rs_Justif!Orden = 1 Then
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                            StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                            StrSql = StrSql & "horfecrep,horfecgen,normnro,normnro2,horestado) VALUES ("
                            StrSql = StrSql & TotHorHHMM
                            StrSql = StrSql & "," & Round(Cant_Int, Presicion_HC)
                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                            StrSql = StrSql & ",'" & Jus_Hor_Desde & "'"
                            StrSql = StrSql & ",'" & Jus_Hor_Hasta & "'"
                            StrSql = StrSql & ",0,-1"
                            StrSql = StrSql & "," & Empleado.Ternro
                            StrSql = StrSql & "," & Rs_Justif!thnro
                            StrSql = StrSql & "," & Empleado.Legajo
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & ",12,12"
                            StrSql = StrSql & ",' '"
                            StrSql = StrSql & ")"
                        Else
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                            StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                            StrSql = StrSql & "horfecrep,horfecgen,horestado) VALUES ("
                            StrSql = StrSql & TotHorHHMM
                            StrSql = StrSql & "," & Round(Cant_Int, Presicion_HC)
                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                            StrSql = StrSql & ",'" & Jus_Hor_Desde & "'"
                            StrSql = StrSql & ",'" & Jus_Hor_Hasta & "'"
                            StrSql = StrSql & ",0,-1"
                            StrSql = StrSql & "," & Empleado.Ternro
                            StrSql = StrSql & "," & Rs_Justif!thnro
                            StrSql = StrSql & "," & Empleado.Legajo
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & ",' '"
                            StrSql = StrSql & ")"
                        End If
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 5) & "SQL " & StrSql
                        End If
                        objConn.Execute StrSql, , adExecuteNoRecords
                        
                        StrSql = "DELETE FROM " & TTempWFJustif & " WHERE nro = " & Rs_Justif!nro
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 5) & "Borra de WF_Justif"
                        End If
                    Case "C":
                        '--------D1------H1---------
                        '-----D2------H2------------
                            'Debe quedar ---D1-----H2------
                        
                        'Debo dejar el registro de HC cambiandole la cantidad de horas y acortando la fecha hasta
                        
                        StrSql = "SELECT * FROM GTI_HORCUMPLIDO WHERE hornro = " & rs!hornro
                        OpenRecordset StrSql, wf_Hcp
                        If Not wf_Hcp.EOF Then
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 5) & "wf_hcp!horcant= " & wf_Hcp!horcant
                                Flog.writeline Espacios(Tabulador * 5) & "rs_justif!maxhoras= " & Cant_Int
                            End If
                            
                            VCant = CSng("0" & wf_Hcp!horcant) - Cant_Int
                            
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 5) & "wf_hcp!horcant - rs_justif!maxhoras = " & VCant
                            End If
                            
                            TotHorHHMM = CHoras(VCant, 60)
                            
                            StrSql = "UPDATE gti_horcumplido SET horcant = " & Round(VCant, Presicion_HC)
                            StrSql = StrSql & ", horas = " & TotHorHHMM
                            StrSql = StrSql & ", horhoradesde = '" & Jus_Hor_Hasta & "'"
                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
                            objConn.Execute StrSql, adExecuteNoRecords
                            
                            'Actualizo el rs
                            Flog.writeline Espacios(Tabulador * 5) & "Actualizó gti_horcumplido " & Round(VCant, Presicion_HC)
                            StrSql = "SELECT * FROM gti_horcumplido WHERE ternro = " & NroTer
                            StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
                            StrSql = StrSql & " AND (normnro IS NOT NULL)"
                            StrSql = StrSql & " AND (normnro2 IS NOT NULL)"
                            OpenRecordset StrSql, rs
                            If Not rs.EOF Then
                                rs.MoveFirst
                            End If
                        End If
                        
                        TotHorHHMM = CHoras(Cant_Int, 60)
                        If Rs_Justif!Orden = 1 Then
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                            StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                            StrSql = StrSql & "horfecrep,horfecgen,normnro,normnro2,horestado) VALUES ("
                            StrSql = StrSql & TotHorHHMM
                            StrSql = StrSql & "," & Round(Cant_Int, Presicion_HC)
                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                            StrSql = StrSql & ",'" & Jus_Hor_Desde & "'"
                            StrSql = StrSql & ",'" & Jus_Hor_Hasta & "'"
                            StrSql = StrSql & ",0,-1"
                            StrSql = StrSql & "," & Empleado.Ternro
                            StrSql = StrSql & "," & Rs_Justif!thnro
                            StrSql = StrSql & "," & Empleado.Legajo
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & ",12,12"
                            StrSql = StrSql & ",' '"
                            StrSql = StrSql & ")"
                        Else
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                            StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                            StrSql = StrSql & "horfecrep,horfecgen,horestado) VALUES ("
                            StrSql = StrSql & TotHorHHMM
                            StrSql = StrSql & "," & Round(Cant_Int, Presicion_HC)
                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                            StrSql = StrSql & ",'" & Jus_Hor_Desde & "'"
                            StrSql = StrSql & ",'" & Jus_Hor_Hasta & "'"
                            StrSql = StrSql & ",0,-1"
                            StrSql = StrSql & "," & Empleado.Ternro
                            StrSql = StrSql & "," & Rs_Justif!thnro
                            StrSql = StrSql & "," & Empleado.Legajo
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & ",' '"
                            StrSql = StrSql & ")"
                        End If
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 5) & "SQL " & StrSql
                        End If
                        objConn.Execute StrSql, , adExecuteNoRecords
                        
                        StrSql = "DELETE FROM " & TTempWFJustif & " WHERE nro = " & Rs_Justif!nro
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 5) & "Borra de WF_Justif"
                        End If
                    Case "D":
                        '--------D1------H1---------
                        '-----D2-----------H2-------
                            'Debe quedar ---D1-----H1------
                        
                        'Debo dejar el registro de HC cambiandole la cantidad de horas y acortando la fecha hasta
                                                
                        StrSql = "SELECT * FROM GTI_HORCUMPLIDO WHERE hornro = " & rs!hornro
                        OpenRecordset StrSql, wf_Hcp
                        If Not wf_Hcp.EOF Then
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 5) & "wf_hcp!horcant= " & wf_Hcp!horcant
                                Flog.writeline Espacios(Tabulador * 5) & "rs_justif!maxhoras= " & Cant_Int
                            End If
                            
                            'Actualizo el resto
                            If Round(Cant_HC1, Presicion_HC) <> 0 Then
                                TotHorHHMM = CHoras(Cant_HC1, 60)
                                
                                StrSql = "UPDATE gti_horcumplido SET horcant = " & Round(Cant_HC1, Presicion_HC)
                                StrSql = StrSql & ", horhoradesde = '" & Jus_Hor_Hasta & "'"
                                StrSql = StrSql & ", horas = " & TotHorHHMM
                                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, adExecuteNoRecords
                            Else
                                StrSql = "DELETE FROM gti_horcumplido WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, , adExecuteNoRecords
                                
                                If depurar Then
                                    Flog.writeline Espacios(Tabulador * 5) & "Borra de gti_horcumplido tipo de hora: " & rs!hornro
                                End If
                            End If
                            
                            'Inserto un registro como el anterior pero por lo que falta
                            If Round(Cant_HC2, Presicion_HC) <> 0 Then
                                TotHorHHMM = CHoras(Cant_HC2, 60)
                            
                                StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                                "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
                                "normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Round(Cant_HC2, Presicion_HC) & "," & _
                                ConvFecha(rs!hordesde) & "," & ConvFecha(rs!horhasta) & "," & "0,-1," & _
                                rs!Ternro & "," & rs!thnro & "," & rs!turnro & "," & rs!empleg & "," & _
                                ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",'" & Jus_Hor_Hasta & "','" & rs!horhorahasta & "'," & rs!normnro & "," & rs!normnro2 & ",' ')"
                                objConn.Execute StrSql, , adExecuteNoRecords
                            End If
                            
                            
                            'Actualizo el rs
                            Flog.writeline Espacios(Tabulador * 5) & "Actualizó gti_horcumplido " & Round(VCant, Presicion_HC)
                            StrSql = "SELECT * FROM gti_horcumplido WHERE ternro = " & NroTer
                            StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
                            StrSql = StrSql & " AND (normnro IS NOT NULL)"
                            StrSql = StrSql & " AND (normnro2 IS NOT NULL)"
                            OpenRecordset StrSql, rs
                            If Not rs.EOF Then
                                rs.MoveFirst
                            End If
                        End If
                        
                        TotHorHHMM = CHoras(Cant_Int, 60)
                        
                        If Rs_Justif!Orden = 1 Then
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                            StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                            StrSql = StrSql & "horfecrep,horfecgen,normnro,normnro2,horestado) VALUES ("
                            StrSql = StrSql & TotHorHHMM
                            StrSql = StrSql & "," & Round(Cant_Int, Presicion_HC)
                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                            StrSql = StrSql & ",'" & Jus_Hor_Desde & "'"
                            StrSql = StrSql & ",'" & Jus_Hor_Hasta & "'"
                            StrSql = StrSql & ",0,-1"
                            StrSql = StrSql & "," & Empleado.Ternro
                            StrSql = StrSql & "," & Rs_Justif!thnro
                            StrSql = StrSql & "," & Empleado.Legajo
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & ",12,12"
                            StrSql = StrSql & ",' '"
                            StrSql = StrSql & ")"
                        Else
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                            StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                            StrSql = StrSql & "horfecrep,horfecgen,horestado) VALUES ("
                            StrSql = StrSql & TotHorHHMM
                            StrSql = StrSql & "," & Round(Cant_Int, Presicion_HC)
                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                            StrSql = StrSql & ",'" & Jus_Hor_Desde & "'"
                            StrSql = StrSql & ",'" & Jus_Hor_Hasta & "'"
                            StrSql = StrSql & ",0,-1"
                            StrSql = StrSql & "," & Empleado.Ternro
                            StrSql = StrSql & "," & Rs_Justif!thnro
                            StrSql = StrSql & "," & Empleado.Legajo
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & ",' '"
                            StrSql = StrSql & ")"
                        End If
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 5) & "SQL " & StrSql
                        End If
                        objConn.Execute StrSql, , adExecuteNoRecords
                        
                        StrSql = "DELETE FROM " & TTempWFJustif & " WHERE nro = " & Rs_Justif!nro
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 5) & "Borra de WF_Justif"
                        End If
                        
                        
                        ''FGZ - 10/05/2013 --------------------------------------------------------------------------------
                        'If Cant_Int < Total_Hs_Justificadas Then
                        '        StrSql = "UPDATE " & TTempWFJustif & " SET maxhoras = " & Total_Hs_Justificadas - Cant_Int
                        '        StrSql = StrSql & " WHERE nro = " & Rs_Justif!nro
                        '        objConn.Execute StrSql, , adExecuteNoRecords
                        '        If depurar Then
                        '            Flog.writeline Espacios(Tabulador * 2) & "Actualizó WF_Justif"
                        '        End If
                        '
                        '        'debo actualizar el WF_Justif -------------
                        '        Aux_NroJustif = Rs_Justif!nro
                        '        StrSql = "SELECT * FROM " & TTempWFJustif
                        '        StrSql = StrSql & " ORDER BY orden"
                        '        OpenRecordset StrSql, Rs_Justif
                        '        If Not Rs_Justif.EOF Then
                        '            'Ciclar hasta encontrar el registro en que estaba
                        '            Do Until Rs_Justif!nro = Aux_NroJustif
                        '                Rs_Justif.MoveNext
                        '            Loop
                        '        End If
                        '        'debo actualizar el WF_Justif -------------
                        'Else
                        '    StrSql = "DELETE FROM " & TTempWFJustif & " WHERE nro = " & Rs_Justif!nro
                        '    objConn.Execute StrSql, , adExecuteNoRecords
                        '    If depurar Then
                        '        Flog.writeline Espacios(Tabulador * 2) & "Borra de WF_Justif"
                        '    End If
                        'End If
                        ''FGZ - 10/05/2013 --------------------------------------------------------------------------------
                    Case Else
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 6) & "No Justifica"
                        End If
                    End Select
                Else
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 6) & "No Justifica."
                    End If
                End If
                'Avanzo el wfJustif porque Eliminé de wf_Justif
                If Not Rs_Justif.EOF Then
                    Rs_Justif.MoveNext
                End If
            Else
                'caso 1: Justificacion Menor que las Horas generadas
                If rs!horcant > Rs_Justif!MaxHoras Then
    
                    StrSql = "SELECT * FROM GTI_HORCUMPLIDO WHERE hornro = " & rs!hornro
                    If wf_Hcp.State = adStateOpen Then wf_Hcp.Close
                    OpenRecordset StrSql, wf_Hcp
                    'wf_Hcp.Open StrSql, objConn
                    If Not wf_Hcp.EOF Then
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 5) & "wf_hcp!horcant= " & wf_Hcp!horcant
                            Flog.writeline Espacios(Tabulador * 5) & "rs_justif!maxhoras= " & Rs_Justif!MaxHoras
                        End If
                        
                        VCant = CSng("0" & wf_Hcp!horcant) - Rs_Justif!MaxHoras
                        
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 5) & "wf_hcp!horcant - rs_justif!maxhoras = " & VCant
                        End If
                        
                        Call Calcula_Hora(VCant, wf_Hcp!hordesde, VHora, VFecha)
                        If Not EsNulo(wf_Hcp!horhorahasta) Then
                            Call objFechasHoras.RestaXHoras(wf_Hcp!horfecrep, wf_Hcp!horhorahasta, VHora, fecres, horres)
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 5) & "ValidarHora(horres): " & horres
                            End If
                            ok = objFechasHoras.ValidarHora(horres)
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 5) & "OK: " & ok
                            End If
                        End If
                        
                        'calculo la hora desde y hasta de la justificacion a insertar
                        Jus_Fec_Hasta = fecres
                        Jus_Hor_Hasta = horres
                        Call objFechasHoras.RestaXHoras(wf_Hcp!horfecrep, Jus_Hor_Hasta, Total_Hs_Justificadas, Jus_Fec_Desde, Jus_Hor_Desde)
                        ok = objFechasHoras.ValidarHora(Jus_Hor_Desde)
                        'calculo la hora desde y hasta de la justificacion a insertar
                        
                        TotHorHHMM = CHoras(VCant, 60)
                        StrSql = "UPDATE gti_horcumplido SET horcant = " & Round(VCant, Presicion_HC)
                        StrSql = StrSql & ", horas = " & TotHorHHMM
                        StrSql = StrSql & ", horhoradesde = '" & horres & "'"
                        StrSql = StrSql & " WHERE hornro = " & rs!hornro
                        objConn.Execute StrSql, adExecuteNoRecords
                        
                        
                        'Actualizo el rs
                        Flog.writeline Espacios(Tabulador * 5) & "Actualizó gti_horcumplido " & Round(VCant, Presicion_HC)
                        StrSql = "SELECT * FROM gti_horcumplido WHERE ternro = " & NroTer
                        StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
                        StrSql = StrSql & " AND (normnro IS NOT NULL)"
                        StrSql = StrSql & " AND (normnro2 IS NOT NULL)"
                        If rs.State = adStateOpen Then rs.Close
                        OpenRecordset StrSql, rs
                        If Not rs.EOF Then
                            rs.MoveFirst
                        End If
                    End If
                    'wf_hcp.UpdateBatch
                    If wf_Hcp.State = adStateOpen Then wf_Hcp.Close
                    
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 5) & "INSERT"
                        End If
                        
                        TotHorHHMM = CHoras(Rs_Justif!MaxHoras, 60)
                        
                        If Trim(Rs_Justif!sigla) = "ALM" Then
                            If Rs_Justif!Orden = 1 Then
                                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                                StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                                StrSql = StrSql & "horfecrep,horfecgen,normnro,normnro2,horestado) VALUES ("
                                StrSql = StrSql & TotHorHHMM
                                StrSql = StrSql & "," & Round(Rs_Justif!MaxHoras, Presicion_HC)
                                StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                                StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                                StrSql = StrSql & ",'" & Jus_Hor_Desde & "'"
                                StrSql = StrSql & ",'" & Jus_Hor_Hasta & "'"
                                StrSql = StrSql & ",0,-1"
                                StrSql = StrSql & "," & Empleado.Ternro
                                StrSql = StrSql & "," & Rs_Justif!thnro
                                StrSql = StrSql & "," & Empleado.Legajo
                                StrSql = StrSql & "," & ConvFecha(p_fecha)
                                StrSql = StrSql & "," & ConvFecha(p_fecha)
                                StrSql = StrSql & ",12,12"
                                StrSql = StrSql & ",' '"
                                StrSql = StrSql & ")"
                            Else
                                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                                StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                                StrSql = StrSql & "horfecrep,horfecgen,horestado) VALUES ("
                                StrSql = StrSql & TotHorHHMM
                                StrSql = StrSql & "," & Round(Rs_Justif!MaxHoras, Presicion_HC)
                                StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                                StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                                StrSql = StrSql & ",'" & Jus_Hor_Desde & "'"
                                StrSql = StrSql & ",'" & Jus_Hor_Hasta & "'"
                                StrSql = StrSql & ",0,-1"
                                StrSql = StrSql & "," & Empleado.Ternro
                                StrSql = StrSql & "," & Rs_Justif!thnro
                                StrSql = StrSql & "," & Empleado.Legajo
                                StrSql = StrSql & "," & ConvFecha(p_fecha)
                                StrSql = StrSql & "," & ConvFecha(p_fecha)
                                StrSql = StrSql & ",' '"
                                StrSql = StrSql & ")"
                            End If
                        Else
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                            StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                            StrSql = StrSql & "horfecrep,horfecgen,horestado) VALUES ("
                            StrSql = StrSql & TotHorHHMM
                            StrSql = StrSql & "," & Round(Rs_Justif!MaxHoras, Presicion_HC)
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & ",'" & Rs_Justif!HoraDesde & "'"
                            StrSql = StrSql & ",'" & Rs_Justif!HoraHasta & "'"
                            StrSql = StrSql & ",0,-1"
                            StrSql = StrSql & "," & Empleado.Ternro
                            StrSql = StrSql & "," & Rs_Justif!thnro
                            StrSql = StrSql & "," & Empleado.Legajo
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & ",' '"
                            StrSql = StrSql & ")"
                        End If
                    
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 5) & "SQL " & StrSql
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 5) & "Ejecutó bien "
                    End If
                    
                    'Grabo y cierro el recordset
                    If wf_Hcp2.State = adStateOpen Then wf_Hcp2.Close
                    
                    StrSql = "DELETE FROM " & TTempWFJustif & " WHERE nro = " & Rs_Justif!nro
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 5) & "Borra de WF_Justif"
                    End If
                    
                    ' Avanzo el wfJustif porque Eliminé de wf_Justif
                    If Not Rs_Justif.EOF Then
                        Rs_Justif.MoveNext
                    End If
                    
                Else 'If rs!horcant > rs_justif!maxhoras Then
                    ' 2_ Justificacion = que las Horas generadas
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 5) & "rs!horcant no es > rs_justif!maxhoras"
                    End If
                    
                    Jus_Fec_Desde = rs!hordesde
                    Jus_Hor_Desde = rs!horhoradesde
                    Jus_Fec_Hasta = rs!horhasta
                    Jus_Hor_Hasta = rs!horhorahasta
                    
                    If rs!horcant = Rs_Justif!MaxHoras Then
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 5) & "rs!horcant = rs_justif!maxhoras"
                        End If
                        StrSql = "SELECT * FROM gti_horcumplido WHERE hornro = " & rs!hornro
                        If wf_Hcp.State = adStateOpen Then wf_Hcp.Close
                        OpenRecordset StrSql, wf_Hcp
                        
                        StrSql = "DELETE FROM gti_horcumplido WHERE hornro = " & rs!hornro
                        objConn.Execute StrSql, , adExecuteNoRecords
                        
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 5) & "Borra de gti_horcumplido tipo de hora: " & rs!hornro
                        End If
                        
                        'FGZ - 24/05/2013 ---------------------------------------------------------------------------------
                        
'                        StrSql = "SELECT * FROM gti_horcumplido "
'                        StrSql = StrSql & " WHERE ternro = " & NroTer
'                        StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
'                        StrSql = StrSql & " AND thnro = " & Rs_Justif!thnro
'                        If wf_Hcp2.State = adStateOpen Then wf_Hcp2.Close
'                        OpenRecordset StrSql, wf_Hcp2
'                        'wf_Hcp2.Open StrSql, objConn
'
'                        ' Si no hay uno que cumpla con las condiciones lo creo
'                        If wf_Hcp2.EOF Then
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 5) & "Inserta "
                            End If
                            
                            TotHorHHMM = CHoras(Rs_Justif!MaxHoras, 60)
                            
                            If Trim(Rs_Justif!sigla) = "ALM" Then
                                If Rs_Justif!Orden = 1 Then
                                    'Exceso de Almuerzo ==> genero anormalidad
                                    StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                                    StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                                    StrSql = StrSql & "horfecrep,horfecgen,normnro,normnro2,horestado) VALUES ("
                                    StrSql = StrSql & TotHorHHMM
                                    StrSql = StrSql & "," & Round(Rs_Justif!MaxHoras, Presicion_HC)
                                    StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                                    StrSql = StrSql & "," & ConvFecha(Jus_Fec_Hasta)
                                    StrSql = StrSql & ",'" & Jus_Hor_Desde & "'"
                                    StrSql = StrSql & ",'" & Jus_Hor_Hasta & "'"
                                    StrSql = StrSql & ",0,-1"
                                    StrSql = StrSql & "," & Empleado.Ternro
                                    StrSql = StrSql & "," & Rs_Justif!thnro
                                    StrSql = StrSql & "," & Empleado.Legajo
                                    StrSql = StrSql & "," & ConvFecha(p_fecha)
                                    StrSql = StrSql & "," & ConvFecha(p_fecha)
                                    StrSql = StrSql & ",12,12"
                                    StrSql = StrSql & ",' '"
                                    StrSql = StrSql & ")"
                                Else
                                    StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                                    StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                                    StrSql = StrSql & "horfecrep,horfecgen,horestado) VALUES ("
                                    StrSql = StrSql & TotHorHHMM
                                    StrSql = StrSql & "," & Round(Rs_Justif!MaxHoras, Presicion_HC)
                                    StrSql = StrSql & "," & ConvFecha(p_fecha)
                                    StrSql = StrSql & "," & ConvFecha(p_fecha)
                                    'FGZ - 24/05/2013 ---------------------------------------------------------------------------------
                                    'StrSql = StrSql & ",'" & Rs_Justif!HoraDesde & "'"
                                    'StrSql = StrSql & ",'" & Rs_Justif!HoraHasta & "'"
                                    StrSql = StrSql & ",'" & Jus_Hor_Desde & "'"
                                    StrSql = StrSql & ",'" & Jus_Hor_Hasta & "'"
                                    'FGZ - 24/05/2013 ---------------------------------------------------------------------------------
                                    StrSql = StrSql & ",0,-1"
                                    StrSql = StrSql & "," & Empleado.Ternro
                                    StrSql = StrSql & "," & Rs_Justif!thnro
                                    StrSql = StrSql & "," & Empleado.Legajo
                                    StrSql = StrSql & "," & ConvFecha(p_fecha)
                                    StrSql = StrSql & "," & ConvFecha(p_fecha)
                                    StrSql = StrSql & ",' '"
                                    StrSql = StrSql & ")"
                                End If
                            Else
                                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                                StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                                StrSql = StrSql & "horfecrep,horfecgen,horestado) VALUES ("
                                StrSql = StrSql & TotHorHHMM
                                StrSql = StrSql & "," & Round(Rs_Justif!MaxHoras, Presicion_HC)
                                StrSql = StrSql & "," & ConvFecha(p_fecha)
                                StrSql = StrSql & "," & ConvFecha(p_fecha)
                                StrSql = StrSql & ",'" & Rs_Justif!HoraDesde & "'"
                                StrSql = StrSql & ",'" & Rs_Justif!HoraHasta & "'"
                                StrSql = StrSql & ",0,-1"
                                StrSql = StrSql & "," & Empleado.Ternro
                                StrSql = StrSql & "," & Rs_Justif!thnro
                                StrSql = StrSql & "," & Empleado.Legajo
                                StrSql = StrSql & "," & ConvFecha(p_fecha)
                                StrSql = StrSql & "," & ConvFecha(p_fecha)
                                StrSql = StrSql & ",' '"
                                StrSql = StrSql & ")"
                            End If
'                        Else
'                            If depurar Then
'                                Flog.writeline Espacios(Tabulador * 2) & "Actualiza"
'                            End If
'
'                            TotHorHHMM = CHoras(CSng("0" & wf_Hcp2!horcant) + Rs_Justif!MaxHoras, 60)
'
'                            StrSql = "UPDATE gti_horcumplido SET horcant = " & Round(CSng("0" & wf_Hcp2!horcant) + Rs_Justif!MaxHoras, Presicion_HC)
'                            StrSql = StrSql & ",horas = " & TotHorHHMM
'                            StrSql = StrSql & ",hordesde = " & ConvFecha(p_fecha)
'                            StrSql = StrSql & ",horhasta = " & ConvFecha(p_fecha)
'                            StrSql = StrSql & ",horhoradesde='" & Rs_Justif!HoraDesde & "'"
'                            StrSql = StrSql & ",horhorahasta='" & Rs_Justif!HoraHasta & "'"
'                            StrSql = StrSql & ",hormanual = 0"
'                            StrSql = StrSql & ",horvalido = -1"
'                            StrSql = StrSql & ",ternro = " & Empleado.Ternro
'                            StrSql = StrSql & ",thnro = " & Rs_Justif!thnro
'                            StrSql = StrSql & ",empleg = " & Empleado.Legajo
'                            StrSql = StrSql & ",horfecrep = " & ConvFecha(p_fecha)
'                            StrSql = StrSql & ",horfecgen = " & ConvFecha(p_fecha)
'                            StrSql = StrSql & ",horestado=' '"
'                            StrSql = StrSql & " WHERE hornro = " & wf_Hcp2!hornro
'                        End If
                        
                        'FGZ - 24/05/2013 ---------------------------------------------------------------------------------
                        
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 5) & "SQL:" & StrSql
                        End If
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 5) & "Ejecuto bien"
                        End If
                        
                        'FGZ - 24/05/2013 ---------------------------------------------------------------------------------
                        'wf_Hcp2.Close
                        If wf_Hcp2.State = adStateOpen Then wf_Hcp2.Close
                        'FGZ - 24/05/2013 ---------------------------------------------------------------------------------
                        
                        StrSql = "DELETE FROM " & TTempWFJustif & " where nro = " & Rs_Justif!nro
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 5) & "Borra de WF_justif"
                        End If
                        
                        'Avanzo el rs porque eliminé el registro de GTI_HORCUMPLIDO
                        If Not rs.EOF Then
                            rs.MoveNext
                        End If
                        
                        ' Avanzo el wfJustif porque Eliminé de wf_Justif
                        If Not Rs_Justif.EOF Then
                            Rs_Justif.MoveNext
                        End If
                    Else ' If rs!horcant = rs_justif!maxhoras Then
                        ' 3_ Justificacion Mayor que las Horas generadas
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 5) & "rs!horcant no es = rs_justif!maxhoras"
                        End If
                        If rs!horcant < Rs_Justif!MaxHoras Then
                                If depurar Then
                                    Flog.writeline Espacios(Tabulador * 5) & "rs!horcant < rs_justif!maxhoras"
                                End If
    '                            ' Si no hay uno que cumpla con las condiciones lo creo
                                    If depurar Then
                                        Flog.writeline Espacios(Tabulador * 5) & "Inserta"
                                    End If
                                    
                                    TotHorHHMM = CHoras(rs!horcant, 60)
                                    
                                    If Trim(Rs_Justif!sigla) = "ALM" Then
                                        If Rs_Justif!Orden = 1 Then
                                            'Exceso de Almuerzo ==> genero anormalidad
                                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                                            StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                                            StrSql = StrSql & "horfecrep,horfecgen,normnro,normnro2,horestado) VALUES ("
                                            StrSql = StrSql & TotHorHHMM
                                            StrSql = StrSql & "," & Round(rs!horcant, Presicion_HC)
                                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Hasta)
                                            StrSql = StrSql & ",'" & Jus_Hor_Desde & "'"
                                            StrSql = StrSql & ",'" & Jus_Hor_Hasta & "'"
                                            StrSql = StrSql & ",0,-1"
                                            StrSql = StrSql & "," & Empleado.Ternro
                                            StrSql = StrSql & "," & Rs_Justif!thnro
                                            StrSql = StrSql & "," & Empleado.Legajo
                                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                                            StrSql = StrSql & ",12,12"
                                            StrSql = StrSql & ",' '"
                                            StrSql = StrSql & ")"
                                        Else
                                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                                            StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                                            StrSql = StrSql & "horfecrep,horfecgen,horestado) VALUES ("
                                            StrSql = StrSql & TotHorHHMM
                                            StrSql = StrSql & "," & Round(rs!horcant, Presicion_HC)
                                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Hasta)
                                            StrSql = StrSql & ",'" & Jus_Hor_Desde & "'"
                                            StrSql = StrSql & ",'" & Jus_Hor_Hasta & "'"
                                            StrSql = StrSql & ",0,-1"
                                            StrSql = StrSql & "," & Empleado.Ternro
                                            StrSql = StrSql & "," & Rs_Justif!thnro
                                            StrSql = StrSql & "," & Empleado.Legajo
                                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                                            StrSql = StrSql & ",' '"
                                            StrSql = StrSql & ")"
                                        End If
                                    Else
                                        StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                                        StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                                        StrSql = StrSql & "horfecrep,horfecgen,horestado) VALUES ("
                                        StrSql = StrSql & TotHorHHMM
                                        StrSql = StrSql & "," & Round(rs!horcant, Presicion_HC)
                                        StrSql = StrSql & "," & ConvFecha(p_fecha)
                                        StrSql = StrSql & "," & ConvFecha(p_fecha)
                                        StrSql = StrSql & ",'" & Rs_Justif!HoraDesde & "'"
                                        StrSql = StrSql & ",'" & Rs_Justif!HoraHasta & "'"
                                        StrSql = StrSql & ",0,-1"
                                        StrSql = StrSql & "," & Empleado.Ternro
                                        StrSql = StrSql & "," & Rs_Justif!thnro
                                        StrSql = StrSql & "," & Empleado.Legajo
                                        StrSql = StrSql & "," & ConvFecha(p_fecha)
                                        StrSql = StrSql & "," & ConvFecha(p_fecha)
                                        StrSql = StrSql & ",' '"
                                        StrSql = StrSql & ")"
                                    End If
                                 'FGZ - 17/08/2006 -------Siempre inserto -----------------------
                                 If depurar Then
                                    Flog.writeline Espacios(Tabulador * 5) & "SQL: " & StrSql
                                 End If
                                objConn.Execute StrSql, , adExecuteNoRecords
                                If depurar Then
                                    Flog.writeline Espacios(Tabulador * 5) & "Ejecutó Bien"
                                End If
                                
                                StrSql = "UPDATE " & TTempWFJustif & " SET maxhoras = " & Rs_Justif!MaxHoras - rs!horcant
                                StrSql = StrSql & " WHERE nro = " & Rs_Justif!nro
                                objConn.Execute StrSql, , adExecuteNoRecords
                                If depurar Then
                                    Flog.writeline Espacios(Tabulador * 5) & "Actualizó WF_Justif"
                                End If
                                
                                'debo actualizar el WF_Justif -------------
                                Aux_NroJustif = Rs_Justif!nro
                                StrSql = "SELECT * FROM " & TTempWFJustif
                                StrSql = StrSql & " ORDER BY orden"
                                OpenRecordset StrSql, Rs_Justif
                                If Not Rs_Justif.EOF Then
                                    'Ciclar hasta encontrar el registro en que estaba
                                    Do Until Rs_Justif!nro = Aux_NroJustif
                                        Rs_Justif.MoveNext
                                    Loop
                                End If
                                'debo actualizar el WF_Justif -------------
                                
                                StrSql = "DELETE FROM gti_horcumplido WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, , adExecuteNoRecords
                                If depurar Then
                                    Flog.writeline Espacios(Tabulador * 5) & "Borro de gti_horcumplido"
                                End If
                                
                                'Avanzo el rs porque eliminé el registro de GTI_HORCUMPLIDO
                                If Not rs.EOF Then
                                    rs.MoveNext
                                End If
                        End If ' If rs!horcant < rs_justif!maxhoras Then
                    End If ' If rs!horcant = rs_justif!maxhoras Then
                End If 'If rs!horcant > rs_justif!maxhoras Then
            End If
        Else 'If rs_justif!thnro <> 0 Then
            Rs_Justif.MoveNext
        End If
    
        ' Si no tengo mas Justificaciones o No tengo mas horas a Justificar ==> NO Continuo
        If rs.EOF Or Rs_Justif.EOF Then
            Sigue = False
        End If
    
    Loop 'wfJustif
    
    If Not rs.EOF Then
        rs.MoveNext
    End If
Loop 'rs (GTI_HORCUMPLIDO)


CierroTodo:
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
    
    If Rs_Justif.State = adStateOpen Then Rs_Justif.Close
    Set Rs_Justif = Nothing
    
    Call BorrarTempTable(TTempWFJustif)
End Sub


Public Sub Politica401(Fecha As Date, NroTer As Long, VentDesde As String, ventFdesde As Date, VentHasta As String, ventFhasta As Date, Nro_Turno As Long, deb As Boolean, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Política de descanso o pausa varible. Custom Monresa
' Autor: FGZ - 24/09/2010
'
' Ademas Monresa tiene 3 particularidades.
'   No se generan en base a anormalidades (ausencias parciales) que se justifican sino que corresponden
'       al analisis de las registraciones de tipo pausa. (Cabe destacar que las mismas no son tenidas
'       en cuenta en el resto del procesamiento dado que utilizan la version de la politica 80 que procesa las puntas).
'   Las pausas o mejor dicho los controles del tiempo de pausa no se hacen en feriados ni dias francos.
'   Los turnos nocturnos (cuya entrada es posterior a las 20 hs) tienen el doble de tiempo de pausa que los turnos diurnos.
'
'   Hay un grupo de empleados (Embotelladores) que tienen un tratamiento distinto al resto
'       SI el turno es diurno tienen 2 pausas obligatorias de 20 minutos pero..
'       SI el turno es nocturno (entrada despues de las 20 hs) tienen 2 pausas obligatorias de 30 minutos.
'
'   Ultima Modificacion:  FGZ - 21/04/2014 - Se agregó la version 3. Control de exceso por par de pausas.
' --------------------------------------------------------------
Dim THExceso As Long
Dim HSExcesoComedor As Single
Dim Thoras As Integer
Dim Tmin As Integer
Dim Tdias As Integer
Dim TotHor As Single
Dim TotHorHHMM As String
Dim DescHoraE As String
Dim DescHoraS As String
Dim DescFechaE As Date
Dim DescFechaS As Date

Dim PausaE As Boolean
Dim PausaS As Boolean
Dim Valida As Boolean

Dim reg As Integer
Dim TotHorPausa As Single
Dim Turno_Nocturno As Boolean

Dim rs As New ADODB.Recordset
Dim rs_reg As New ADODB.Recordset


Dim Opcion As Long
Dim TH_Justif As Long
Dim TH_ExcesoComedor As Long
Dim VentSal As String
Dim VentEnt As String
Dim HsComedor As Integer
Dim HsComedorSimple As Integer
Dim HsComedorDobles As Integer
Dim Cant_Pausas As Integer
Dim ControlAcumulado As Boolean


    Call SetearParametrosPolitica(Detalle, ok)

    Opcion = st_Opcion
    TH_ExcesoComedor = st_TipoHora1
    HsComedorDobles = st_VentEnt
    HsComedorSimple = st_VentSal
    ControlAcumulado = True
        
    Select Case Opcion
        Case 1: 'Turnos normales
            Cant_Pausas = 1
        Case 2: 'Embotelladores
            Cant_Pausas = 2
        Case 3: 'Embotelladores con control individual de pausas
            Cant_Pausas = 2
            ControlAcumulado = False
        Case Else:
    End Select

'-----------------------------------------------------------------------------------
'Busco la cantidad de horas para ese dia en ese turno
StrSql = "SELECT diacanthoras FROM gti_dias "
StrSql = StrSql & " WHERE subturnro = " & Nro_Subturno
StrSql = StrSql & " AND dianro = " & Nro_Dia
StrSql = StrSql & " ORDER BY diaorden"
OpenRecordset StrSql, rs
If Not rs.EOF Then
    Horas_Oblig = rs!diacanthoras
Else
    Horas_Oblig = 8
End If
If Horas_Oblig <= 4 Then
    If depurar Then
        Flog.writeline Espacios(Tabulador * 4) & "La cantidad de HS obligatorias es <= 4. No debe haber Pausas"
    End If
    Cant_Pausas = 0
End If
'-----------------------------------------------------------------------------------

If Dia_Libre Or (UsaFeriadoConControl And esFeriado And Not Feriado_Laborable) Then
    If depurar Then
        Flog.writeline Espacios(Tabulador * 4) & "Dia Franco o Feriado. No Hay control de Pausas"
    End If
Else
    StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = " & TH_ExcesoComedor
    StrSql = StrSql & " AND turnro = " & Nro_Turno
    StrSql = StrSql & " ORDER BY conhornro ASC, turnro ASC"
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        THExceso = rs!thnro
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "No esta configurado el Tipo de Hora de Exceso de Pausa para el Turno " & Str(Nro_Turno) & ". No se genera justificacion por Exceso."
        End If
        Exit Sub
    End If
    
    
    'Reviso si el turno es nocturno
    Turno_Nocturno = False
    StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2"
    StrSql = StrSql & " ORDER BY fecha ASC, hora ASC"
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        StrSql = "SELECT regfecha, reghora,tiporeg FROM gti_registracion WHERE regnro = " & rs!Regnro
        OpenRecordset StrSql, rs_reg
        If Not rs_reg.EOF Then
            'If rs_reg!reghora >= "2000" Then
            If rs_reg!reghora >= "1730" Then
                Turno_Nocturno = True
            End If
        End If
    End If
    
    'FGZ - 21/04/2014 -----------------------------------------------------
    If Not ControlAcumulado Then
        If Turno_Nocturno Then
            'El tiempo de pausa es doble
            HsComedor = HsComedorDobles '* Cant_Pausas
        Else
            'El tiempo de pausa es simple
            HsComedor = HsComedorSimple '* Cant_Pausas
        End If
    Else
        If Turno_Nocturno Then
            'El tiempo de pausa es doble
            HsComedor = HsComedorDobles * Cant_Pausas
        Else
            'El tiempo de pausa es simple
            HsComedor = HsComedorSimple * Cant_Pausas
        End If
    End If
    'FGZ - 21/04/2014 -----------------------------------------------------
    
    
    
    'Evaluo las pausas
    StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 1"
    StrSql = StrSql & " ORDER BY fecha ASC, hora ASC"
    OpenRecordset StrSql, rs
    PausaE = False
    PausaS = False
    reg = 0
    TotHorPausa = 0
    
    Do While Not rs.EOF
            StrSql = "SELECT regfecha, reghora,tiporeg FROM gti_registracion WHERE regnro = " & rs!Regnro
            OpenRecordset StrSql, rs_reg
            If Not rs_reg.EOF Then
                Valida = True
                If rs_reg!regfecha = fecha_desde Then
                    If rs_reg!reghora < hora_desde Then
                        Valida = False
                    End If
                End If
                If rs_reg!regfecha = fecha_hasta And Valida Then
                    If rs_reg!reghora > hora_hasta Then
                        Valida = False
                    End If
                End If
                
                If Valida Then
                    
                    reg = reg + 1
                    If Not EsNulo(rs_reg!tiporeg) Then
                        Select Case rs_reg!tiporeg
                        Case "2", "02":
                            DescHoraE = rs_reg!reghora
                            DescFechaE = rs_reg!regfecha
                            PausaE = True
                        Case "3", "03":
                            DescHoraS = rs_reg!reghora
                            DescFechaS = rs_reg!regfecha
                            PausaS = True
                        End Select
                    Else
                        'se trata de una registracion cargada a mano asi que debe ser el complemento de la otra
                        If PausaE Then
                            'entonces debe ser la entrada manual
                            DescHoraS = rs_reg!reghora
                            DescFechaS = rs_reg!regfecha
                            PausaS = True
                        Else
                            DescHoraE = rs_reg!reghora
                            DescFechaE = rs_reg!regfecha
                            PausaE = True
                        End If
                    End If
                    
                    If (reg Mod 2) = 0 Then
                        'calculo el tiempo entre las registraciones
                        If PausaE And PausaS Then
                            objFechasHoras.RestaHs DescFechaE, DescHoraE, DescFechaS, DescHoraS, Tdias, Thoras, Tmin
                            TotHorPausa = TotHorPausa + (Tdias * 24) + (Thoras + (Tmin / 60))
                            
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 4) & "Tiempo de pausa " & Thoras & " horas y " & Tmin & " minutos"
                                Flog.writeline Espacios(Tabulador * 4) & "Tiempo de pausa acumulado " & TotHorPausa
                            End If
                            
                            'FGZ - 21/04/2014 -------------------------------
                            If Not ControlAcumulado Then
                                'calculo el exceso
                                HSExcesoComedor = 0
                                HSExcesoComedor = TotHorPausa - (HsComedor / 60)
                                If HSExcesoComedor <= 0 Then
                                    If depurar Then
                                        Flog.writeline Espacios(Tabulador * 4) & "Pausa sin exceso"
                                    End If
                                Else
                                    If depurar Then
                                        Flog.writeline Espacios(Tabulador * 4) & "Exceso de Pausa"
                                    End If
                                
                                    TotHor = HSExcesoComedor
                                    TotHorHHMM = CHoras(TotHor, 60)
                                    StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                                    StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                                    StrSql = StrSql & " thnro,turnro,horrealent,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                                    'StrSql = StrSql & TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''"
                                    StrSql = StrSql & TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'" & DescHoraE & "','" & DescHoraS & "'"
                                    StrSql = StrSql & "," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                                    StrSql = StrSql & ValorNulo & "," & Empleado.Ternro & "," & THExceso & "," & Nro_Turno & ","
                                    StrSql = StrSql & "'',''," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                                    objConn.Execute StrSql, , adExecuteNoRecords
                            
                                    If depurar Then
                                        Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & THExceso & "- Cantidad: " & TotHor & " hs."
                                    End If
                                End If
                                TotHorPausa = 0
                            End If
                            'FGZ - 21/04/2014 -------------------------------
                        Else
                            PausaE = False
                            PausaS = False
                        
                            'no puedo calcular las pausas porque la secuencia no es correcta
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 4) & "no puedo calcular las pausas porque la secuencia no es correcta"
                            End If
                        End If
                    Else
                    End If
                End If
            End If
        
        
        rs.MoveNext
    Loop
            
    'FGZ - 21/04/2014 -----------------------------------------------------
    'If Turno_Nocturno Then
    '    'El tiempo de pausa es doble
    '    HsComedor = HsComedorDobles * Cant_Pausas
    'Else
    '    'El tiempo de pausa es simple
    '    HsComedor = HsComedorSimple * Cant_Pausas
    'End If
    
    If ControlAcumulado Then
        'calculo el exceso
        HSExcesoComedor = 0
        HSExcesoComedor = TotHorPausa - (HsComedor / 60)
        If HSExcesoComedor <= 0 Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 4) & "Pausa sin exceso"
            End If
        Else
            If depurar Then
                Flog.writeline Espacios(Tabulador * 4) & "Exceso de Pausa"
            End If
        
            TotHor = HSExcesoComedor
            TotHorHHMM = CHoras(TotHor, 60)
            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
            StrSql = StrSql & " thnro,turnro,horrealent,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
            'StrSql = StrSql & TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''"
            StrSql = StrSql & TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'" & DescHoraE & "','" & DescHoraS & "'"
            StrSql = StrSql & "," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
            StrSql = StrSql & ValorNulo & "," & Empleado.Ternro & "," & THExceso & "," & Nro_Turno & ","
            StrSql = StrSql & "'',''," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
    
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & THExceso & "- Cantidad: " & TotHor & " hs."
            End If
        End If
    End If
    'FGZ - 21/04/2014 -----------------------------------------------------
End If
       

CierroTodo:
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
End Sub



Public Sub Politica400_old(Fecha As Date, NroTer As Long, VentDesde As String, ventFdesde As Date, VentHasta As String, ventFhasta As Date, Nro_Turno As Long, deb As Boolean, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Política de almuerzo variable.
' Lo genera segun las 2 registraciones del medio.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' --------------------------------------------------------------

Dim regnro_ent As Long
Dim regnro_sal As Long
Dim rec As Integer
Dim thora As Integer
Dim Hora1 As String
Dim Hora2 As String
Dim fecha1 As Date
Dim Fecha2 As Date
Dim canthoras As Single
Dim Thoras As Integer
Dim Tmin As Integer
Dim Tdias As Integer
Dim TotHor As Single

Dim rs As New ADODB.Recordset



Hora1 = ""

StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 18" & _
" AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
rs.Open StrSql, objConn
       
If Not rs.EOF Then
    thora = rs!thnro
Else
    'Entrada en la traza
    GeneraTraza Empleado.Ternro, p_fecha, "No esta configurado el Tipo de Hora Almuerzo para el Turno ", Str(Nro_Turno)
            
    '/* Deberia salir de todo el procedimiento */
    GoTo CierroTodo
End If

rs.Close
' Esto supongo que es una busqueda sobre gti_registracion (dentro de una ventana)
' Devuelve el recid en gti_registracion

'  /*** busco la primer registracion de la ventana ***/
'run gtibureg.p(nroter, true, ventfdesde, ventdesde, ventfhasta, venthasta,
'               output recent).
StrSql = "SELECT * FROM gti_registracion WHERE ternro= " & NroTer
StrSql = StrSql & " AND regfecha >= " & ConvFecha(ventFdesde) & " AND regfecha <= " & ConvFecha(ventFhasta)
StrSql = StrSql & " AND reghora >= '" & VentDesde & "' AND reghora <= '" & VentHasta & "'"
StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
' Abro para lectura
rs.Open StrSql, objConn, adOpenKeyset

' Busco el primero en la ventana
rs.MoveFirst
regnro_ent = rs!Regnro

'  /*** busco la ultima registracion de la ventana ***/
'run gtibureg.p(nroter, false, ventfdesde, ventdesde, ventfhasta, venthasta,
'               output recsal).

' Busco el ultimo en la ventana
rs.MoveLast
regnro_sal = rs!Regnro

' Cierro pues ya no lo necesito
rs.Close

If regnro_ent = regnro_sal Then
    '/* una sola registracion en el embudo */
    GoTo CierroTodo
End If

StrSql = "SELECT * FROM gti_registracion WHERE ternro= " & NroTer
StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
rs.Open StrSql, objConn, adOpenKeyset, adLockOptimistic
Do While Not rs.EOF
'    if not available per.gti_registracion or
'       recid(per.gti_registracion) = recsal
'      then leave.
    If (rs.EOF) Or (rs!Regnro = regnro_sal) Then
        Exit Do
    End If
    If Hora1 = "" Then
        Hora1 = rs!reghora
        fecha1 = rs!regfecha
    Else
        Hora2 = rs!reghora
        Fecha2 = rs!regfecha
    End If
    
    rs!regestado = "P"
    rs.Update
    rs.MoveNext
Loop

rs.Close
' RUN gtir2f01.p(fecha1, hora1, fecha2, hora2, output tdias, output thoras, output tmin).

'Call objFechasHoras.RestaEntreHoras(fecha1, hora1, fecha2, hora2, tdias, thoras, tmin)
Call objFechasHoras.RestaHs(fecha1, Hora1, Fecha2, Hora2, Tdias, Thoras, Tmin)
canthoras = Thoras + (Tmin / 60)

'Call ValidarTipoDeHora(thora, nro_turno, tipo_hora)
' Entrada en horario cumplido
StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
"horvalido,ternro,thnro,turnro,empleg,horfecrep,horhoradesde,horhorahasta" & _
") VALUES (" & canthoras & "," & _
ConvFecha(Fecha) & "," & ConvFecha(Fecha) & "," & "0,-1," & _
NroTer & "," & thora & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
ConvFecha(Fecha) & ",'" & Hora1 & "','" & Hora2 & "')"
        
objConn.Execute StrSql, , adExecuteNoRecords
Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & thora & "- Cantidad: " & canthoras & " hs."

CierroTodo:
If rs.State = adStateOpen Then rs.Close
Set rs = Nothing

End Sub


Public Sub Politica460(NroTer As Long, p_fecha As Date, Nro_Grupo As Integer, deb As Boolean, Dias_trabajados As Integer, Dias_laborables As Integer, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Habilita las politicas de francos.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' --------------------------------------------------------------


'Dim Tiene_Turno     As Boolean
'Dim Nro_dia         As Integer
'Dim nro_turno       As Integer
'Dim Nro_subturno    As Integer
'Dim Nro_fpgo        As Integer
'Dim diatipo         As Integer   '/*Indica si es laborable, no laborable o feriado */
'Dim Tiene_Justif    As Boolean
'Dim nro_justif      As Integer
'Dim Justif_turno    As Boolean
'Dim turcomp         As Boolean
'Dim Trabaja         As Boolean
'Dim fecha_desde     As Date
'Dim hora_desde      As String
'Dim fecha_hasta     As Date
'Dim hora_hasta      As String
'Dim fecha_tol       As Date
'Dim hora_tol        As String
'Dim fecha_toldto    As Date
'Dim hora_toldto     As String
'Dim hora_frac       As String
'Dim Orden_dia       As Integer
'Dim no_trabaja_just As Boolean
'Dim nro_jus_ent     As Integer
'Dim nro_jus_sal     As Integer
'Dim Existe_Reg      As Boolean
'Dim Fecha_inicio    As Date '/* fecha de inicio del turno */
'Dim codjus1         As Integer
'Dim codjus2         As Integer
'Dim Dia_libre       As Boolean
'Dim esFeriado       As Boolean
'Dim p_asignacion As Boolean
''DEF STREAM salida.
'Dim descripcion As String
'Dim Fecha As Date
'Dim i As Integer
''Dim recent as recid.
'Dim hab_464 As Boolean
'Dim hab_465 As Boolean
'
'Dim rs As New ADODB.Recordset
'
'
'
'Fecha = DateAdd("d", -1, p_fecha)
''  FIND FIRST per.gti_cabpolitica where (per.gti_cabpolitica.cabpolnivel = 464) and
''                                       (per.gti_cabpolitica.cabpolestado) NO-LOCK NO-ERROR.
''  FIND FIRST per.gti_alcanpolitica of per.gti_cabpolitica
''        WHERE (per.gti_alcanpolitica.alcpolestado) AND
''              ((per.gti_alcanpolitica.alcpolnivel = 3 AND per.gti_alcanpolitica.alcpolorigen = per.empleado.empleg) OR
''               (per.gti_alcanpolitica.alcpolnivel = 2 AND per.gti_alcanpolitica.alcpolorigen = nro-grupo) OR
''               (per.gti_alcanpolitica.alcpolnivel = 1)) USE-INDEX cab-est-nivel NO-LOCK NO-ERROR.
''   If AVAILABLE(per.gti_alcanpolitica) Then
'    hab_464 = True
''  FIND FIRST per.gti_cabpolitica where (per.gti_cabpolitica.cabpolnivel = 465) and
''                                       (per.gti_cabpolitica.cabpolestado) NO-LOCK NO-ERROR.
''  FIND FIRST per.gti_alcanpolitica of per.gti_cabpolitica
''        WHERE (per.gti_alcanpolitica.alcpolestado) AND
''              ((per.gti_alcanpolitica.alcpolnivel = 3 AND per.gti_alcanpolitica.alcpolorigen = per.empleado.empleg) OR
''               (per.gti_alcanpolitica.alcpolnivel = 2 AND per.gti_alcanpolitica.alcpolorigen = nro-grupo) OR
''               (per.gti_alcanpolitica.alcpolnivel = 1)) USE-INDEX cab-est-nivel NO-LOCK NO-ERROR.
''   IF AVAILABLE(per.gti_alcanpolitica)
'    hab_465 = True
'
'If (Not hab_464) And (Not hab_465) Then
'    Exit Sub
'End If
'
'For i = 1 To 7
''   RUN esferiad.p(fecha, nroter, false ,output esferiado)
'
''   RUN bustur00.p(fecha ,nroter, false, OUTPUT tiene-turno,
''                  OUTPUT nro-turno, OUTPUT tiene-justif, OUTPUT nro-justif,
''                  OUTPUT justif-turno, OUTPUT turcomp, OUTPUT nro-grupo,
''                  OUTPUT nro-fpgo, OUTPUT fecha-inicio ,OUTPUT p-asignacion).
'
''   RUN busdia00.p (INPUT  nro-turno,
''                   INPUT  fecha,
''                   INPUT  fecha-inicio,
''                   INPUT  nroter,
''                   INPUT  p-asignacion,
''                   OUTPUT trabaja,
''                   OUTPUT orden-dia,
''                   OUTPUT nro-dia,
''                   OUTPUT nro-subturno,
''                   OUTPUT dia-libre).
'
'    If (Not Dia_libre) And (Not esFeriado) Then
'        Dias_laborables = Dias_laborables + 1
'    End If
'
''   find first gti_turno where gti_turno.turnro = nro-turno no-lock no-error.
'    StrSql = "SELECT * FROM gti_turno WHERE turnro= " & nro_turno
'    rs.Open StrSql, objConn
'
'    'run gti\busreg00.p(true, fecha, empleado.ternro ,output recent)
'
'    If ((recent <> "?") Or ((recent = "?") And (Tiene_Justif) And (Not Dia_libre))) And (Not esFeriado) Then
'        Dias_trabajados = Dias_trabajados + 1
'    End If
'
'    Fecha = DateAdd("d", -1, Fecha)
'
'Next

End Sub




Private Sub Politica402(ByVal p_ternro As Long, ByVal Detalle As Long)
' ------------------------------------------------------------------------------------------------------------------------
' Descripcion: Vales Comedor.
'   Parametros:
'       Opcion      : Version de la politica. Implica la funcionalidad de la misma.
'       st_ListaTH  : Lista de tipos de horas. Seria la lista de los vales a revisar/pagar.
'       st_ListaF1  : Lista. Seria la Lista de tipos de horas para control de minimo.
'   Funcionalidad:
'       La idea de la politica es revisar todos los vales de la lista y validar si corresponde pagarlo o no.
'   Autor: FGZ
'   Fecha: 01/06/2009
'   Ultima modificacion: FGZ - 16/04/2010
'               Se le agregó la opcion de controlar que haya trabajado en rango corrido
' ------------------------------------------------------------------------------------------------------------------------
Dim i  As Integer
Dim j  As Integer
Dim Opcion  As Integer
Dim ListaVales As String
Dim ListaTHMinimo As String
Dim thVale As Long
Dim CantVales As Single

Dim ValidaEntrada As Boolean
Dim HoraEntrada As String
Dim FechaEntrada As Date
Dim fecres As Date
Dim horres As Date

Dim ValidaMinimo As Boolean
Dim CantMinimaHS As String
Dim CantMinimaDec As Single

Dim CantidadMinima As Single
Dim HoraMinima As String

Dim ValidaRangos As Boolean
Dim AuxHDesde As String
Dim AuxHHasta As String
Dim AuxFDesde As Date
Dim AuxFHasta As Date
Dim NocFDesde As Date
Dim NocFHasta As Date
Dim NocHDesde As String
Dim NocHHasta As String
Dim ApFDesde As Date
Dim ApFHasta As Date
Dim ApHDesde As String
Dim ApHHasta As String
Dim TotHor As Single

Dim AnalizoRango As Boolean
Dim EntroenRango As Boolean
Dim Cant_Reg As Integer
Dim Cant_Pares As Integer

Dim EntradaValida As Boolean
Dim MinimoValido As Boolean
Dim RangoValido As Boolean


Dim ValidaRCorrido As Boolean
Dim RCorridoValido As Boolean
Dim AnalizoRCorrido As Boolean
Dim EntroenRCorrido As Boolean

Dim Valido As Boolean




Dim rs As New ADODB.Recordset
Dim rsHC As New ADODB.Recordset
Dim rsReg As New ADODB.Recordset

Dim TotHorHHMM As String

'---------------------------------
    Nivel_Tab_Log = 3
   
    Call SetearParametrosPolitica(Detalle, ok)

    Opcion = st_Opcion  'Version de la politica
    ListaVales = st_ListaTH 'Lista de vales a revisar
    ListaTHMinimo = st_ListaF1 'Lista de tipos de horas para control del minimo
    If depurar Then
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Version: " & Opcion
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Lista de Vales a analizar " & ListaVales
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Lista de Tipos de hora para control de Minimo: " & ListaTHMinimo
    End If
   
    Select Case Opcion
    Case 1: 'Estandar
        CantVales = 1
    Case Else:  'Version inexistente
        If depurar Then
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Version inexistente. " & Opcion
        End If
        CantVales = 1
    End Select
    If depurar Then
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Cantidad a generar por cada vale: " & CantVales
    End If
        
    If depurar Then
        Flog.writeline
    End If
        
    Nivel_Tab_Log = Nivel_Tab_Log + 1
    'Bucar todos los vales de la lisa que esen actvos
    StrSql = " SELECT * FROM gti_vales "
    StrSql = StrSql & " WHERE valeactivo = -1 "
    StrSql = StrSql & " AND valenro IN (" & ListaVales & ")"
    StrSql = StrSql & " ORDER BY valenro"
    OpenRecordset StrSql, rs
    If rs.EOF Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Los vales buscados " & ListaVales & " no estan activos"
        End If
    End If
    
    'Inicializo
    If depurar Then
        Flog.writeline
    End If
    Do While Not rs.EOF
        If depurar Then
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Analizando vale " & rs!valenro
        End If
        Nivel_Tab_Log = Nivel_Tab_Log + 1
        
        'inicializo
        Valido = True
        ValidaEntrada = CBool(rs!valida_ent)
        ValidaMinimo = CBool(rs!valida_min)
        ValidaRangos = CBool(rs!valida_ran)
        ValidaRCorrido = CBool(rs!valida_hcorr)
        
        If depurar Then
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Validaciones activas para el vale "
            Flog.writeline Espacios(Tabulador * (Nivel_Tab_Log + 1)) & "Valida si entró antes de la hora configurada? " & ValidaEntrada
            Flog.writeline Espacios(Tabulador * (Nivel_Tab_Log + 1)) & "Valida que haya cumplido la cantidad minima de hs? " & ValidaMinimo
            Flog.writeline Espacios(Tabulador * (Nivel_Tab_Log + 1)) & "Valida que haya trabajado en los rangos definidos? " & ValidaRangos
            Flog.writeline Espacios(Tabulador * (Nivel_Tab_Log + 1)) & "Valida que haya trabajado de corrido en los rangos definidos? " & ValidaRCorrido
        End If
      
        '---------------------------------------------------------------------------------------------
        'Analizo entrada antes de la hora configurada
        If ValidaEntrada Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Analizo entrada antes de la hora configurada"
            End If
            
            'Calculo la hora de entrada
            If rs!ent_tipo = 0 Then  'Horario Fijo
                If depurar Then
                    Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Hora de entrada Fija " & rs!ent_hora
                End If
            
                HoraEntrada = rs!ent_hora
                FechaEntrada = p_fecha
                If Not objFechasHoras.ValidarHora(HoraEntrada) Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log + 1) & "Hora de entrada Fija Invalida " & HoraEntrada
                    End If
                    Valido = False
                End If
            Else    'Relativo al horario Teorico
                If depurar Then
                    Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Hora de entrada Relativo al horario Teorico. "
                End If
                If CBool(rs!ent_suma) Then  'Suma hs a la entrada teorica
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log + 1) & "Suma " & rs!ent_hora & " horas a la entrada teorica(" & E1 & ") "
                    End If
                    Call objFechasHoras.SumoHoras(FE1, E1, rs!ent_hora, FechaEntrada, HoraEntrada)
                    If Not objFechasHoras.ValidarHora(HoraEntrada) Then
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Hora Invalida " & HoraEntrada
                        End If
                        Valido = False
                    End If
                Else    'resta horas a la entrada teorica
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log + 1) & "Resta " & rs!ent_hora & " horas a la entrada teorica(" & E1 & ") "
                    End If
                
                    Call objFechasHoras.RestaXHoras(FE1, E1, rs!ent_hora, FechaEntrada, HoraEntrada)
                    If Not objFechasHoras.ValidarHora(HoraEntrada) Then
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Hora Invalida " & HoraEntrada
                        End If
                        Valido = False
                    End If
                End If
            End If
            
            'Busco registraciones antes de las
            If Valido Then
                StrSql = "SELECT * FROM " & TTempWFTurno
                StrSql = StrSql & " WHERE par = 1 AND entrada = -1"
                OpenRecordset StrSql, rsReg
                If rsReg.EOF Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "no hay registraciones"
                    End If
                    Valido = False
                Else
                    If objFechasHoras.Mayor_Igual_Hora(FechaEntrada, HoraEntrada, rsReg!Fecha, rsReg!Hora) Then
                        Valido = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Entrada anterior." & rsReg!Fecha & " " & rsReg!Hora & "."
                        End If
                    Else
                        Valido = False
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Entrada posterior " & rsReg!Fecha & " " & rsReg!Hora & ". No se paga el vale."
                        End If
                    End If
                End If
            End If
        End If
        '---------------------------------------------------------------------------------------------
        
        '---------------------------------------------------------------------------------------------
        'Analizo si cumplió con el minimo de horas
        If ValidaMinimo And Valido Then
            HoraMinima = "0000"
            If depurar Then
                Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Analizo si cumplió con el minimo de horas"
            End If
            If CBool(rs!min_dec) Then   'Unidad = valor decimal
                If depurar Then
                    Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Horas Mnimas en valor decimal"
                End If
                CantidadMinima = IIf(Not EsNulo(rs!min_cant), rs!min_cant, 0)
            Else    'Unidad = horas y minutos HHmm
                If depurar Then
                    Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Horas Mnimas en horas y minutos"
                End If
                If Not EsNulo(rs!min_hora) Then
                    HoraMinima = rs!min_hora
                    If Not objFechasHoras.ValidarHora(HoraMinima) Then
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Valor de de Horas Mnimas Invalido " & HoraMinima
                        End If
                        Valido = False
                    End If
                Else
                    CantidadMinima = 0
                    Valido = True
                End If
                If Valido Then
                    objFechasHoras.RestaHs p_fecha, "0000", p_fecha, HoraMinima, Tdias, Thoras, Tmin
                    CantidadMinima = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Cantidad  Minima de horas: " & CantidadMinima
                    End If
                End If
            End If
            
            If Valido Then
                StrSql = " SELECT sum(horcant) cantidad FROM gti_horcumplido "
                StrSql = StrSql & " WHERE ternro = " & p_ternro
                StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
                StrSql = StrSql & " AND normnro is null AND normnro2 is null"
                If Not EsNulo(ListaTHMinimo) Then
                    StrSql = StrSql & " AND thnro IN (" & ListaTHMinimo & ")"
                End If
                OpenRecordset StrSql, rsHC
                If Not rsHC.EOF Then
                    If rsHC!Cantidad < CantidadMinima Then
                        Valido = False
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "no valida el minimo de hs"
                        End If
                    Else
                        Valido = True
                    End If
                Else
                    Valido = False
                End If
            End If
        End If
        '---------------------------------------------------------------------------------------------
   
        '---------------------------------------------------------------------------------------------
        If ValidaRangos And Valido Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Analizo si trabajó en los rangos definidos"
            End If

            'cuento los pares de registraciones
            StrSql = "SELECT COUNT(regnro) as cant FROM " & TTempWFTurno & " WHERE evenro = 2 "
            OpenRecordset StrSql, rsReg
            If Not rsReg.EOF Then If Not IsNull(rsReg!Cant) Then Cant_Reg = rsReg!Cant
            Cant_Pares = Int(Cant_Reg / 2)
            
            EntroenRango = False
            'For i = 1 To 3
            For i = 1 To 6
                If Not EntroenRango Then
                    If Valido Then
                        AnalizoRango = True
                        Select Case i
                        Case 1:
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Analizo rango " & i & " desde: " & rs!r1_ent & " hasta " & rs!r1_sal
                            End If
                            If Not EsNulo(rs!r1_ent) Then
                                NocHDesde = rs!r1_ent
                                NocFDesde = p_fecha
                            Else
                                AnalizoRango = False
                            End If
                            If Not EsNulo(rs!r1_sal) Then
                                NocHHasta = rs!r1_sal
                                If NocHHasta < NocHDesde Then
                                    NocFHasta = p_fecha + 1
                                Else
                                    NocFHasta = p_fecha
                                End If
                            Else
                                AnalizoRango = False
                            End If
                        Case 2:
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Analizo rango " & i & " desde: " & rs!r2_ent & " hasta " & rs!r2_sal
                            End If
                            If Not EsNulo(rs!r2_ent) Then
                                NocHDesde = rs!r2_ent
                                NocFDesde = p_fecha
                            Else
                                AnalizoRango = False
                            End If
                            If Not EsNulo(rs!r2_sal) Then
                                NocHHasta = rs!r2_sal
                                If NocHHasta < NocHDesde Then
                                    NocFHasta = p_fecha + 1
                                Else
                                    NocFHasta = p_fecha
                                End If
                            Else
                                AnalizoRango = False
                            End If
                        Case 3:
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Analizo rango " & i & " desde: " & rs!r3_ent & " hasta " & rs!r3_sal
                            End If
                            If Not EsNulo(rs!r3_ent) Then
                                NocHDesde = rs!r3_ent
                                NocFDesde = p_fecha
                            Else
                                AnalizoRango = False
                            End If
                            If Not EsNulo(rs!r3_sal) Then
                                NocHHasta = rs!r3_sal
                                If NocHHasta < NocHDesde Then
                                    NocFHasta = p_fecha + 1
                                Else
                                    NocFHasta = p_fecha
                                End If
                            Else
                                AnalizoRango = False
                            End If
                        End Select
                
                        If AnalizoRango Then
                            'Analizo

                            For j = 0 To Cant_Pares
                                StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par = " & j
                                OpenRecordset StrSql, rsReg
                                If Not rsReg.EOF Then
                                    'entrada
                                    AuxHDesde = rsReg!Hora
                                    AuxFDesde = rsReg!Fecha
                                    'salida
                                    rsReg.MoveNext
                                    If Not rsReg.EOF Then
                                        AuxHHasta = rsReg!Hora
                                        AuxFHasta = rsReg!Fecha
                                        
                                        'Nocturnas     [---------------]
                                        'Horario          (----------------)
                                        If objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFDesde, AuxHDesde) And objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFHasta, NocHHasta) And objFechasHoras.Menor_Igual_Hora(NocFHasta, NocHHasta, AuxFHasta, AuxHHasta) Then
                                            ApFDesde = AuxFDesde
                                            ApFHasta = NocFHasta
                                            ApHDesde = AuxHDesde
                                            ApHHasta = NocHHasta
                                            objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                                            TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                                            If TotHor <> 0 Then
                                                EntroenRango = True
                                            End If
                                        End If
                            
                                        'Nocturnas       [---------------]
                                        'Horario    (----------------)
                                        If Not EntroenRango Then
                                            If objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFDesde, NocHDesde) And objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFHasta, AuxHHasta) And objFechasHoras.Menor_Igual_Hora(AuxFHasta, AuxHHasta, NocFHasta, NocHHasta) Then
                                                ApFDesde = NocFDesde
                                                ApFHasta = AuxFHasta
                                                ApHDesde = NocHDesde
                                                ApHHasta = AuxHHasta
                                                objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                                                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                                                If TotHor <> 0 Then
                                                    EntroenRango = True
                                                End If
                                            End If
                                        End If
                                        
                                        'Nocturnas      [---------------]
                                        'Horario    (-----------------------)
                                        If Not EntroenRango Then
                                            If objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFDesde, NocHDesde) And objFechasHoras.Menor_Igual_Hora(NocFHasta, NocHHasta, AuxFHasta, AuxHHasta) Then
                                                ApFDesde = NocFDesde
                                                ApFHasta = NocFHasta
                                                ApHDesde = NocHDesde
                                                ApHHasta = NocHHasta
                                                objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                                                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                                                If TotHor <> 0 Then
                                                    EntroenRango = True
                                                End If
                                                
                                            End If
                                        End If
                                        
                                        'Nocturnas  [---------------]
                                        'Horario        (--------)
                                        If Not EntroenRango Then
                                            If objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFDesde, AuxHDesde) And objFechasHoras.Menor_Igual_Hora(AuxFHasta, AuxHHasta, NocFHasta, NocHHasta) Then
                                                ApFDesde = AuxFDesde
                                                ApFHasta = AuxFHasta
                                                ApHDesde = AuxHDesde
                                                ApHHasta = AuxHHasta
                                                objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                                                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                                                If TotHor <> 0 Then
                                                    EntroenRango = True
                                                End If
                                            End If
                                        End If
                                    End If
                                End If
                            Next j
                        End If
                    End If
                Else
                    'ya entró en algun rango. No necesito seguir revisando
                End If
            Next i
        
            Valido = EntroenRango
        End If
        '---------------------------------------------------------------------------------------------
                    
                    
                    
                    
        '---------------------------------------------------------------------------------------------
        If ValidaRCorrido And Valido Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Analizo si trabajó de corrido en los rangos definidos"
            End If

            'cuento los pares de registraciones
            StrSql = "SELECT COUNT(regnro) as cant FROM " & TTempWFTurno & " WHERE evenro = 2 "
            OpenRecordset StrSql, rsReg
            If Not rsReg.EOF Then If Not IsNull(rsReg!Cant) Then Cant_Reg = rsReg!Cant
            Cant_Pares = Int(Cant_Reg / 2)
            
            EntroenRCorrido = True
            'For i = 1 To 3
            For i = 1 To 6
                If EntroenRCorrido Then
                    If Valido Then
                        AnalizoRCorrido = True
                        Select Case i
                        Case 1:
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Analizo rango " & i & " desde: " & rs!hc1_ent & " hasta " & rs!hc1_sal
                            End If
                            If Not EsNulo(rs!hc1_ent) Then
                                NocHDesde = rs!hc1_ent
                                NocFDesde = p_fecha
                            Else
                                AnalizoRCorrido = False
                            End If
                            If Not EsNulo(rs!hc1_sal) Then
                                NocHHasta = rs!hc1_sal
                                If NocHHasta < NocHDesde Then
                                    NocFHasta = p_fecha + 1
                                Else
                                    NocFHasta = p_fecha
                                End If
                            Else
                                AnalizoRCorrido = False
                            End If
                        Case 2:
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Analizo rango " & i & " desde: " & rs!hc2_ent & " hasta " & rs!hc2_sal
                            End If
                            If Not EsNulo(rs!hc2_ent) Then
                                NocHDesde = rs!hc2_ent
                                NocFDesde = p_fecha
                            Else
                                AnalizoRCorrido = False
                            End If
                            If Not EsNulo(rs!hc2_sal) Then
                                NocHHasta = rs!hc2_sal
                                If NocHHasta < NocHDesde Then
                                    NocFHasta = p_fecha + 1
                                Else
                                    NocFHasta = p_fecha
                                End If
                            Else
                                AnalizoRCorrido = False
                            End If
                        Case 3:
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Analizo rango " & i & " desde: " & rs!hc3_ent & " hasta " & rs!hc3_sal
                            End If
                            If Not EsNulo(rs!hc3_ent) Then
                                NocHDesde = rs!hc3_ent
                                NocFDesde = p_fecha
                            Else
                                AnalizoRCorrido = False
                            End If
                            If Not EsNulo(rs!hc3_sal) Then
                                NocHHasta = rs!hc3_sal
                                If NocHHasta < NocHDesde Then
                                    NocFHasta = p_fecha + 1
                                Else
                                    NocFHasta = p_fecha
                                End If
                            Else
                                AnalizoRCorrido = False
                            End If
                        End Select
                
                        If AnalizoRCorrido Then
                            'Analizo
                            EntroenRCorrido = False
                            For j = 0 To Cant_Pares
                                StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par = " & j
                                OpenRecordset StrSql, rsReg
                                If Not rsReg.EOF Then
                                    'entrada
                                    AuxHDesde = rsReg!Hora
                                    AuxFDesde = rsReg!Fecha
                                    'salida
                                    rsReg.MoveNext
                                    If Not rsReg.EOF Then
                                        AuxHHasta = rsReg!Hora
                                        AuxFHasta = rsReg!Fecha
                                        
                                        'Rango          [---------------]
                                        'Horario    (-----------------------)
                                        If Not EntroenRCorrido Then
                                            If objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFDesde, NocHDesde) And objFechasHoras.Menor_Igual_Hora(NocFHasta, NocHHasta, AuxFHasta, AuxHHasta) Then
                                                ApFDesde = NocFDesde
                                                ApFHasta = NocFHasta
                                                ApHDesde = NocHDesde
                                                ApHHasta = NocHHasta
                                                objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                                                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                                                If TotHor <> 0 Then
                                                    EntroenRCorrido = True
                                                End If
                                            End If
                                        End If
                                    End If
                                End If
                            Next j
                        End If
                    End If
                Else
                    'ya entró en algun rango. No necesito seguir revisando
                End If
            Next i
        
            Valido = EntroenRCorrido
        End If
        '---------------------------------------------------------------------------------------------
                    
                    
        'Si valida ==> pago el vale
        If Valido Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Se genera el vale "
            End If
            
            TotHorHHMM = CHoras(CantVales, 60)

            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
            StrSql = StrSql & " thnro,turnro,horrealent,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
            StrSql = StrSql & TotHorHHMM & "," & CantVales & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''"
            StrSql = StrSql & "," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
            StrSql = StrSql & ValorNulo & "," & p_ternro & "," & rs!thnro & "," & Nro_Turno & ","
            StrSql = StrSql & "'',''," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
        Else
            If depurar Then
                Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "NO Se genera el vale"
            End If
        End If
        If depurar Then
            Flog.writeline
        End If
   
        Nivel_Tab_Log = Nivel_Tab_Log - 1
        'Busco el siguiente registro
        rs.MoveNext
    Loop


'Cierro y libero
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
    If rsHC.State = adStateOpen Then rsHC.Close
    Set rsHC = Nothing
    If rsReg.State = adStateOpen Then rsReg.Close
    Set rsReg = Nothing
End Sub


Private Sub Politica430(ByVal p_ternro As Long, ByVal Detalle As Long)
' ------------------------------------------------------------------------------------------------------------------------
' Descripcion: Horas de Descanso.
'   Parametros:
'       Opcion      : Version de la politica. Implica la funcionalidad de la misma.
'       st_ListaTH  : Lista de tipos de horas. Seria la lista de los vales a revisar/pagar.
'       st_ListaF1  : Lista. Seria la Lista de tipos de horas para control de minimo.
'   Funcionalidad:
'       La idea de la politica es generar un tipo de hora por la cantidad de horas que le faltó
'           para la cantidad obligatoria de horas de desacanso.
'           Ej.
'           Hs de descanso 12 hs. Trabajó desde las 10 hasta las 22 y luego volvió a entrar a las 08 del siguiente dia.
'           Como deberia haber descansado por lo menos 12 hs y descansó 10 ==> se generan 2 hs X.
'   Autor: FGZ
'   Fecha: 30/11/2009
'   Ultima modificacion:
' ------------------------------------------------------------------------------------------------------------------------
Dim i  As Integer
Dim j  As Integer
Dim Opcion  As Integer
Dim THaGen As Long
Dim DescansoOblig As String
Dim DescansoReal As Single
Dim CodAnormalidad As Long
Dim R1_Fecha As Date
Dim R1_Hora As String
Dim R2_Fecha As Date
Dim R2_Hora As String

Dim Diferencia As String
Dim TotHor As Single
Dim AuxDescansoOblig As Single



Dim rs As New ADODB.Recordset
Dim TotHorHHMM As String


'---------------------------------
    Nivel_Tab_Log = 3
   
    Call SetearParametrosPolitica(Detalle, ok)

    Opcion = st_Opcion  'Version de la politica
    THaGen = st_TipoHora1   'Tipo de hora a generar
    DescansoOblig = st_TamañoVentana 'cantidad de horas obligatorias
    CodAnormalidad = st_Anormalidad 'Codigo de anormalidad a generar
    If depurar Then
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Version: " & Opcion
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Cantidad de Horas de Descanso obligatorio " & st_TamañoVentana
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Tipo de hora a generar: " & st_TipoHora1
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Codigo de Anormalidad a generar: " & CodAnormalidad
    End If
   
    Select Case Opcion
    Case 1: 'Estandar
        'Calculo la cantidad de horas de descanzo reales
        
            'Busco la salidad del dia anterior (la ultima registracion considerada)
            StrSql = "SELECT regfecha, reghora FROM gti_registracion "
            StrSql = StrSql & " WHERE ternro = " & p_ternro
            StrSql = StrSql & " AND fechagen = " & ConvFecha(fecha_proceso - 1)
            'FGZ - 19/05/2010 ------------ Control FT -------------
            StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
            'FGZ - 19/05/2010 ------------ Control FT -------------
            StrSql = StrSql & " ORDER BY regfecha DESC, reghora DESC"
            OpenRecordset StrSql, rs
            If rs.EOF Then
                If depurar Then
                    Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No se encontró registraciones para el dia anterior. No se puede calcular."
                End If
                Exit Sub
            Else
                'Salida del dia anterior
                R1_Fecha = rs!regfecha
                R1_Hora = rs!reghora
            End If
           
        
            'Busco la entrada del hoy (la primer registracion considereada
            StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2"
            StrSql = StrSql & " ORDER BY par, fecha, hora "
            OpenRecordset StrSql, rs
            If rs.EOF Then
                If depurar Then
                    Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No se encontró registraciones para el dia. No se puede calcular."
                End If
                Exit Sub
            Else
                R2_Hora = rs!Hora
                R2_Fecha = rs!Fecha
            End If
        
        'Si la cantidad de hs de descanso reales son menores que las obligatorias ==>
        '   genero (DescansoOblig - DescansoReal)
        objFechasHoras.RestaHs R1_Fecha, R1_Hora, R2_Fecha, R2_Hora, Tdias, Thoras, Tmin
        DescansoReal = (Tdias * 24) + (Thoras + (Tmin / 60))

        ''levo a decimal la cantidad de horas obligatorias
        objFechasHoras.RestaHs p_fecha, "0000", p_fecha, DescansoOblig, Tdias, Thoras, Tmin
        AuxDescansoOblig = (Tdias * 24) + (Thoras + (Tmin / 60))

        

        'If DescansoReal < DescansoOblig Then
        If DescansoReal < AuxDescansoOblig Then
            'Debgenerar (DescansoOblig - DescansoReal) horas de tipo THaGen
            
            TotHor = AuxDescansoOblig - DescansoReal
            
            TotHorHHMM = CHoras(TotHor, 60)

            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
            StrSql = StrSql & " thnro,turnro,horrealent,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
            StrSql = StrSql & TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''"
            StrSql = StrSql & "," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & CodAnormalidad & ","
            StrSql = StrSql & ValorNulo & "," & p_ternro & "," & THaGen & "," & Nro_Turno & ","
            StrSql = StrSql & "'',''," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
        
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & THaGen & "- Cantidad: " & TotHor & " hs."
            End If
        Else
            If depurar Then
                Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Descanso suficiente."
            End If
        End If


    Case Else:  'Version inexistente
        If depurar Then
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Version inexistente. " & Opcion
        End If
    End Select
  

'Cierro y libero
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
End Sub



Public Sub Politica110v2(p_fecha As Date, nro_tercero As Long, Nro_Turno As Long, deb As Boolean, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripci¢n: Genera Horario Ausente para el empleado que le faltan Reg. Oblig.
'               corresponde a 110auspa
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' --------------------------------------------------------------
Dim rs_Turno As New ADODB.Recordset
Dim rs_Dia As New ADODB.Recordset
Dim rs As New ADODB.Recordset

Dim i As Integer
Dim TotHor As Single
Dim Tdias As Integer
Dim Tmin As Integer
Dim hora_oblig As Integer
Dim Hora_Generada As Integer
Dim fec_ent As Date
Dim hor_ent As String
Dim msgTraza As String
Dim Es_Turno_Libre As Boolean

Dim cod_ent  As Integer

Dim ent_fic  As Boolean

Dim fec_sal  As Date
Dim hor_sal  As String
Dim cod_sal  As Integer

Dim sal_fic  As Boolean

Dim hor_ent_aux  As String
Dim cod_ent_aux  As Integer
Dim fec_ent_aux  As Date

Dim hor_sal_aux  As String
Dim cod_sal_aux  As Integer
Dim fec_sal_aux  As Date
 
Dim Hora_Ausencia As Integer

Dim Cant_emb(15) As Integer
Dim TotHorHHMM As String


'Abro cursor
StrSql = "SELECT * FROM " & TTempWFEmbudo
rs.Open StrSql, objConn

Do While Not rs.EOF
'      IF CAN-FIND(FIRST wf-turno WHERE (((Convfecha(fecha) > Convfecha(rs!fecha_desde)) or
'                                         (Convfecha(fecha) = Convfecha(rs!fecha_desde) and
'                                          hora >= rs!hora_desde)) and
'                                        ((Convfecha(fecha) < Convfecha(rs!fecha_hasta)) or
'                                         (Convfecha(fecha) = Convfecha(rs!fecha_hasta) and
'                                          hora <= rs!hora_hasta))))
'
    StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE" & _
    "(((fecha > " & ConvFecha(rs!fecha_desde) & ") or " & _
    "(fecha = " & ConvFecha(rs!fecha_desde) & " and " & _
    "hora >= '" & rs!hora_desde & "')) and " & _
    "((fecha < " & ConvFecha(rs!fecha_hasta) & ") or " & _
    "(fecha  = " & ConvFecha(rs!fecha_hasta) & " and hora <= '" & rs!hora_hasta & "')))"
    
'    " fecha >= " & ConvFecha(rs!fecha_desde) & _
'    " AND hora >= '" & rs!hora_desde & "' AND fecha <= " & _
'    ConvFecha(rs!fecha_hasta) & " AND hora <= '" & rs!hora_hasta & _
'    "' ORDER BY fecha ASC, hora ASC"
    OpenRecordset StrSql, rs_Turno
    'rs_turno.Open StrSql, objConn
    
    If Not rs_Turno.EOF Then
        Cant_emb(rs!Codigo) = Cant_emb(rs!Codigo) + 1
        rs_Turno.Close
    End If
    rs.MoveNext
Loop
    
'Cierro el wf del embudo
rs.Close

'Abro cursor
StrSql = "SELECT * FROM " & TTempWFDia
rs_Dia.Open StrSql, objConn
rs_Dia.MoveFirst

ent_fic = True
sal_fic = True

Do While Not rs_Dia.EOF
    If rs_Dia!entrada Then
        fec_ent_aux = rs_Dia!Fecha
        hor_ent_aux = rs_Dia!Hora
        cod_ent_aux = rs_Dia!Codigo

        StrSql = "SELECT * FROM " & TTempWFEmbudo & " WHERE codigo = " & rs_Dia!Codigo
        rs.Open StrSql, objConn
    
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE" & _
        "(((fecha > " & ConvFecha(rs!fecha_desde) & ") or " & _
        "(fecha = " & ConvFecha(rs!fecha_desde) & " and " & _
        "hora >= '" & rs!hora_desde & "')) and " & _
        "((fecha < " & ConvFecha(rs!fecha_hasta) & ") or " & _
        "(fecha  = " & ConvFecha(rs!fecha_hasta) & " and hora <= '" & rs!hora_hasta & "')))"

        OpenRecordset StrSql, rs_Turno
    
        If rs_Turno.EOF Then
            ent_fic = False
        End If
        
        rs.Close
        rs_Turno.Close
        
    Else
        fec_sal_aux = rs_Dia!Fecha
        hor_sal_aux = rs_Dia!Hora
        cod_sal_aux = rs_Dia!Codigo
    
        StrSql = "SELECT * FROM " & TTempWFEmbudo & " WHERE codigo = " & rs_Dia!Codigo
        rs.Open StrSql, objConn
    
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE" & _
        "(((fecha > " & ConvFecha(rs!fecha_desde) & ") or " & _
        "(fecha = " & ConvFecha(rs!fecha_desde) & " and " & _
        "hora >= '" & rs!hora_desde & "')) and " & _
        "((fecha < " & ConvFecha(rs!fecha_hasta) & ") or " & _
        "(fecha  = " & ConvFecha(rs!fecha_hasta) & " and hora <= '" & rs!hora_hasta & "')))"
        
        OpenRecordset StrSql, rs_Turno
        
        ' Cierro por innecesario
        rs.Close
        
        If rs_Turno.EOF Then
            sal_fic = False
        End If

        If (ent_fic = False Or sal_fic = False) Then
            fec_ent = fec_ent_aux
            hor_ent = hor_ent_aux
            cod_ent = cod_ent_aux
            fec_sal = fec_sal_aux
            hor_sal = hor_sal_aux
            cod_sal = cod_sal_aux
        End If
    
        If Not ((hor_ent <> "" And hor_sal <> "") And (cod_sal = cod_ent + 1)) Then
            GoTo NextProgress
        End If
    
        'RUN gtir2f01.p(fec-ent, hor-ent, wf-dia.fecha, wf-dia.hora, output tdias, output thoras, output tmin).
        Call objFechasHoras.RestaHs(fec_ent, hor_ent, rs_Dia!Fecha, rs_Dia!Hora, Tdias, Thoras, Tmin)
        TotHor = Thoras + (Tmin / 60)
        If TotHor = 0 Then
            ' Next
            GoTo NextProgress
        End If
        
        'Si no Encuentro una registracion en el embudo de entrada y tampoco encuentro registracion
        'en el embudo de salida, entonces se debe generar Ausencia Parcial.
        
        'Caso contrario, debo generar una Falta de Registracion Obligatoria
        
        If (ent_fic = False And sal_fic = False) Then
            StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 19 " & _
            "AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
            rs.Open StrSql, objConn
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Pol 110v2 - Configurando Hora 19"
            End If
        Else
            StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 10 " & _
            "AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
            rs.Open StrSql, objConn
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Pol 110v2 - Configurando Hora 10"
            End If
        End If
    
        msgTraza = "No esta configurado el Tipo de Hora Falta Registracion para el Turno:"
   
        If Not rs.EOF Then
            Hora_Ausencia = rs!thnro
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Pol 110v2 - Configurando Hora " & Hora_Ausencia
            End If
        Else
            'Entrada en la traza
            If depurar Then
                GeneraTraza Empleado.Ternro, p_fecha, msgTraza, Str(Nro_Turno)
            End If
            GoTo CierroTodo
        End If

        'Call ValidarTipoDeHora(hora_ausencia, nro_turno, tipo_hora)
'       Creo un registro en la tabla de HC
    
        TotHorHHMM = CHoras(TotHor, 60)

        StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
        "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen," & _
        "normnro,normnro2,horhoradesde,horhorahasta,horestado) VALUES (" & TotHorHHMM & "," & Round(TotHor, Presicion_HC) & "," & _
        ConvFecha(fec_ent) & "," & ConvFecha(fec_sal) & "," & "0,-1," & _
        nro_tercero & "," & Hora_Ausencia & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
        ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",3,3,'" & hor_ent & "','" & hor_sal & "',' ')"
        objConn.Execute StrSql, , adExecuteNoRecords
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & Hora_Ausencia & "- Cantidad: " & TotHor & " hs."
        End If
        
        ent_fic = True
        sal_fic = True
        hor_ent = ""
        hor_sal = ""
        
        rs_Turno.Close
        rs.Close
        
    End If
    
NextProgress:
    rs_Dia.MoveNext

Loop
   

'Cierro y libero todos los recordsets
CierroTodo:
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
    If rs_Dia.State = adStateOpen Then rs_Dia.Close
    Set rs_Dia = Nothing
    If rs_Turno.State = adStateOpen Then rs_Turno.Close
    Set rs_Turno = Nothing


End Sub

Public Sub Politica110v4(p_fecha As Date, nro_tercero As Long, Nro_Turno As Long, deb As Boolean, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripci¢n: Genera Horario Ausente para el empleado que le faltan Reg. Oblig.
'                Anormalidad que genera es AP
' Autor: FGZ - 01/12/2006
' Ultima modificacion: FGZ - 09/05/2007 control por registracion de entrada o salida
' Ultima modificacion: FGZ - 31/05/2007
' Ultima modificacion: FGZ - 25/08/2008 estaba generando AP que no existian
' --------------------------------------------------------------
Dim rs_Turno As New ADODB.Recordset
Dim rs_Dia As New ADODB.Recordset
Dim rs As New ADODB.Recordset

Dim i As Integer
Dim TotHor As Single
Dim Tdias As Integer
Dim Tmin As Integer
Dim hora_oblig As Integer
Dim Hora_Generada As Integer
Dim fec_ent As Date
Dim hor_ent As String
Dim msgTraza As String
Dim Es_Turno_Libre As Boolean

Dim cod_ent  As Integer
Dim ent_fic  As Boolean
Dim fec_sal  As Date
Dim hor_sal  As String
Dim cod_sal  As Integer
Dim sal_fic  As Boolean
Dim hor_ent_aux  As String
Dim cod_ent_aux  As Integer
Dim fec_ent_aux  As Date

Dim hor_sal_aux  As String
Dim cod_sal_aux  As Integer
Dim fec_sal_aux  As Date
Dim Hora_Entrada_Aux As String
Dim Fecha_Entrada_Aux  As Date
Dim Par_Entrada_Aux As Long

Dim Hora_Ausencia As Integer
Dim entrada_salida As Integer
Dim TotHorHHMM As String

'Abro cursor
StrSql = "SELECT * FROM " & TTempWFDia
OpenRecordset StrSql, rs_Dia

ent_fic = True
sal_fic = True
Do While Not rs_Dia.EOF
    If rs_Dia!entrada Then
        fec_ent_aux = rs_Dia!Fecha
        hor_ent_aux = rs_Dia!Hora
        cod_ent_aux = rs_Dia!Codigo

        entrada_salida = IIf((rs_Dia!Codigo = 1 Or rs_Dia!Codigo = 2), 1, IIf((rs_Dia!Codigo = 3 Or rs_Dia!Codigo = 4), 2, 3))
        StrSql = "SELECT fecha_entrada fecha_desde,fecha_salida fecha_hasta,hora_entrada hora_desde, hora_salida hora_hasta FROM " & TTempWFDiaLaboral
        StrSql = StrSql & " WHERE entrada_salida = " & entrada_salida
        StrSql = StrSql & " ORDER BY fecha_desde, hora_desde ASC"
        OpenRecordset StrSql, rs
        
        'FGZ - 26/08/2014 ------------
        If rs.EOF Then
            GoTo NextProgress
        End If
        'FGZ - 26/08/2014 ------------
    
'        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE "
'        'FGZ - 09/05/2007 ---- le agregué el control por para que busque E o S
'        StrSql = StrSql & "Entrada = -1 AND "
'        'FGZ - 09/05/2007 ---- le agregué el control por para que busque E o S
'        StrSql = StrSql & "(((fecha > " & ConvFecha(rs!fecha_desde) & ") or "
'        StrSql = StrSql & "(fecha = " & ConvFecha(rs!fecha_desde) & " and "
'        'FGZ - 31/05/2007 ------
'        'StrSql = StrSql & "hora >= '" & rs!hora_desde & "')) and "
'        StrSql = StrSql & "hora <= '" & rs!hora_hasta & "')) and "
'        'FGZ - 31/05/2007 ------
'        StrSql = StrSql & "((fecha < " & ConvFecha(rs!fecha_hasta) & ") or "
'        StrSql = StrSql & "(fecha  = " & ConvFecha(rs!fecha_hasta) & " and hora <= '" & rs!hora_hasta & "')))"
        
        'FGZ 25/08/2008 - reemplacé el query de arriba por este query  -----
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE "
        StrSql = StrSql & " Entrada = -1 AND "
        StrSql = StrSql & "(( fecha = " & ConvFecha(fec_ent_aux) & " and hora <= '" & rs!hora_hasta & "')"
        StrSql = StrSql & " OR ( fecha < " & ConvFecha(rs!fecha_hasta) & "))"
        'FGZ 25/08/2008 - reemplacé el query de arriba por este query  -----
        OpenRecordset StrSql, rs_Turno
        If rs_Turno.EOF Then
            ent_fic = False
            Par_Entrada_Aux = 0
        Else
            Hora_Entrada_Aux = rs_Turno!Hora
            Fecha_Entrada_Aux = rs_Turno!Fecha
            Par_Entrada_Aux = rs_Turno!par
        End If
    Else
        fec_sal_aux = rs_Dia!Fecha
        hor_sal_aux = rs_Dia!Hora
        cod_sal_aux = rs_Dia!Codigo
    
        entrada_salida = IIf((rs_Dia!Codigo = 1 Or rs_Dia!Codigo = 2), 1, IIf((rs_Dia!Codigo = 3 Or rs_Dia!Codigo = 4), 2, 3))
        StrSql = "SELECT fecha_entrada fecha_desde,fecha_salida fecha_hasta,hora_entrada hora_desde, hora_salida hora_hasta FROM " & TTempWFDiaLaboral
        StrSql = StrSql & " WHERE entrada_salida = " & entrada_salida
        StrSql = StrSql & " ORDER BY fecha_desde, hora_desde ASC"
        OpenRecordset StrSql, rs
    
        'FGZ - 26/08/2014 ------------
        If rs.EOF Then
            GoTo NextProgress
        End If
        'FGZ - 26/08/2014 ------------
        
'        'FGZ - 09/05/2007 ---- le agregué el control por para que busque E o S
'        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE"
'        StrSql = StrSql & " entrada = 0 AND "
'        If Par_Entrada_Aux <> 0 Then
'            StrSql = StrSql & " par = " & Par_Entrada_Aux & " AND "
'        End If
'        StrSql = StrSql & "(((fecha > " & ConvFecha(rs!fecha_desde) & ") or "
'        StrSql = StrSql & "(fecha = " & ConvFecha(rs!fecha_desde) & " and "
'        StrSql = StrSql & "hora >= '" & rs!hora_desde & "')) and "
'        StrSql = StrSql & "((fecha < " & ConvFecha(rs!fecha_hasta) & ") or "
'        'FGZ - 31/05/2007 ------
'        'StrSql = StrSql & "(fecha  = " & ConvFecha(rs!fecha_hasta) & " and hora <= '" & rs!hora_hasta & "')))"
'        StrSql = StrSql & "(fecha  = " & ConvFecha(rs!fecha_hasta) & " and hora >= '" & rs!hora_desde & "')))"
'        'FGZ - 31/05/2007 ------
        
        'FGZ 25/08/2008 - reemplacé el query de arriba por este query  -----
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE"
        StrSql = StrSql & " entrada = 0 AND "
        If Par_Entrada_Aux <> 0 Then
            StrSql = StrSql & " par = " & Par_Entrada_Aux & " AND "
        End If
        StrSql = StrSql & "(( fecha = " & ConvFecha(fec_sal_aux) & " and hora >= '" & rs!hora_desde & "')"
        StrSql = StrSql & " OR ( fecha > " & ConvFecha(rs!fecha_desde) & "))"
        'FGZ 25/08/2008 - reemplacé el query de arriba por este query  -----
        OpenRecordset StrSql, rs_Turno
        If rs_Turno.EOF Then
            sal_fic = False
        End If

        'FGZ - 30/11/2006
        If (ent_fic = False And sal_fic = False) Then
            'Verifico que no sea algo del tipo
            '----------[----------]---------------- Horario Teorico
            '-----(--------------------)----------- Registraciones
            'Tengo que buscar en WF_Turno
            'Busco Entrada anterior
            StrSql = "SELECT * FROM " & TTempWFTurno
            StrSql = StrSql & " WHERE fecha <= " & ConvFecha(fec_ent_aux)
            StrSql = StrSql & " AND hora <= '" & hor_ent_aux & "'"
            StrSql = StrSql & " AND entrada = -1"
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                StrSql = "SELECT * FROM " & TTempWFTurno
                StrSql = StrSql & " WHERE fecha >= " & ConvFecha(fec_sal_aux)
                StrSql = StrSql & " AND hora >= '" & hor_sal_aux & "'"
                StrSql = StrSql & " AND entrada = 0"
                StrSql = StrSql & " AND par = " & rs!par
                OpenRecordset StrSql, rs
                If Not rs.EOF Then
                    'No genero AP
                    ent_fic = True
                    sal_fic = True
                End If
            End If
        End If

        If (ent_fic = False Or sal_fic = False) Then
            fec_ent = fec_ent_aux
            hor_ent = hor_ent_aux
            cod_ent = cod_ent_aux
            fec_sal = fec_sal_aux
            hor_sal = hor_sal_aux
            cod_sal = cod_sal_aux
        End If
    
        If Not ((hor_ent <> "" And hor_sal <> "") And (cod_sal = cod_ent + 1)) Then
            GoTo NextProgress
        End If
    
        Call objFechasHoras.RestaHs(fec_ent, hor_ent, rs_Dia!Fecha, rs_Dia!Hora, Tdias, Thoras, Tmin)
        TotHor = Thoras + (Tmin / 60)
        If TotHor = 0 Then
            GoTo NextProgress
        End If
        
        'Si no Encuentro una registracion en el embudo de entrada y tampoco encuentro registracion
        'en el embudo de salida, entonces se debe generar Ausencia Parcial.
        
        StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 19 "
        StrSql = StrSql & " AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
        OpenRecordset StrSql, rs
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Pol 110v4 - Configurando Hora 19"
        End If
        msgTraza = "No esta configurado el Tipo de Hora Falta Registracion para el Turno:"
        If Not rs.EOF Then
            Hora_Ausencia = rs!thnro
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Pol 110v4 - Configurando Hora " & Hora_Ausencia
            End If
        Else
            'Entrada en la traza
            If depurar Then
                GeneraTraza Empleado.Ternro, p_fecha, msgTraza, Str(Nro_Turno)
            End If
            GoTo CierroTodo
        End If

        TotHorHHMM = CHoras(TotHor, 60)
        
        StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
        "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen," & _
        "normnro,normnro2,horhoradesde,horhorahasta,horestado) VALUES (" & TotHorHHMM & "," & Round(TotHor, Presicion_HC) & "," & _
        ConvFecha(fec_ent) & "," & ConvFecha(fec_sal) & "," & "0,-1," & _
        nro_tercero & "," & Hora_Ausencia & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
        ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",7,7,'" & hor_ent & "','" & hor_sal & "',' ')"
        objConn.Execute StrSql, , adExecuteNoRecords
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & Hora_Ausencia & "- Cantidad: " & TotHor & " hs."
        End If
        
        ent_fic = True
        sal_fic = True
        hor_ent = ""
        hor_sal = ""
    End If
    
NextProgress:
    rs_Dia.MoveNext
Loop
   

'Cierro y libero todos los recordsets
CierroTodo:
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
    If rs_Dia.State = adStateOpen Then rs_Dia.Close
    Set rs_Dia = Nothing
    If rs_Turno.State = adStateOpen Then rs_Turno.Close
    Set rs_Turno = Nothing
End Sub

Public Sub Politica110v5(p_fecha As Date, nro_tercero As Long, Nro_Turno As Long, deb As Boolean, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripci¢n: Genera Horario Ausente para el empleado que le faltan Reg. Oblig.
'                Anormalidad que genera es faltan Reg. Oblig.
' Autor: FGZ - 03/04/2007
'Ultima Mod: FGZ - 09/05/2007 control por registracion de entrada o salida
' Ultima modificacion: FGZ - 31/05/2007
' --------------------------------------------------------------
Dim rs_Turno As New ADODB.Recordset
Dim rs_Dia As New ADODB.Recordset
Dim rs As New ADODB.Recordset

Dim i As Integer
Dim TotHor As Single
Dim Tdias As Integer
Dim Tmin As Integer
Dim hora_oblig As Integer
Dim Hora_Generada As Integer
Dim fec_ent As Date
Dim hor_ent As String
Dim msgTraza As String
Dim Es_Turno_Libre As Boolean

Dim cod_ent  As Integer
Dim ent_fic  As Boolean
Dim fec_sal  As Date
Dim hor_sal  As String
Dim cod_sal  As Integer
Dim sal_fic  As Boolean
Dim hor_ent_aux  As String
Dim cod_ent_aux  As Integer
Dim fec_ent_aux  As Date

Dim hor_sal_aux  As String
Dim cod_sal_aux  As Integer
Dim fec_sal_aux  As Date
Dim Hora_Entrada_Aux As String
Dim Fecha_Entrada_Aux  As Date
Dim Par_Entrada_Aux As Long

Dim Hora_Ausencia As Integer
Dim entrada_salida As Integer
Dim TotHorHHMM As String

'Abro cursor
StrSql = "SELECT * FROM " & TTempWFDia
OpenRecordset StrSql, rs_Dia

ent_fic = True
sal_fic = True
Do While Not rs_Dia.EOF
    If rs_Dia!entrada Then
        fec_ent_aux = rs_Dia!Fecha
        hor_ent_aux = rs_Dia!Hora
        cod_ent_aux = rs_Dia!Codigo
        
        entrada_salida = IIf((rs_Dia!Codigo = 1 Or rs_Dia!Codigo = 2), 1, IIf((rs_Dia!Codigo = 3 Or rs_Dia!Codigo = 4), 2, 3))
        StrSql = "SELECT fecha_entrada fecha_desde,fecha_salida fecha_hasta,hora_entrada hora_desde, hora_salida hora_hasta FROM " & TTempWFDiaLaboral
        StrSql = StrSql & " WHERE entrada_salida = " & entrada_salida
        StrSql = StrSql & " ORDER BY fecha_desde, hora_desde ASC"
        OpenRecordset StrSql, rs
    
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE "
        'FGZ - 09/05/2007 ---- le agregué el control por para que busque E o S
        StrSql = StrSql & "Entrada = -1 AND "
        'FGZ - 09/05/2007 ---- le agregué el control por para que busque E o S
        StrSql = StrSql & "(((fecha > " & ConvFecha(rs!fecha_desde) & ") or "
        StrSql = StrSql & "(fecha = " & ConvFecha(rs!fecha_desde) & " and "
        'FGZ - 31/05/2007 ------
        'StrSql = StrSql 7& "hora >= '" & rs!hora_desde & "')) and "
        StrSql = StrSql & "hora <= '" & rs!hora_hasta & "')) and "
        'FGZ - 31/05/2007 ------
        StrSql = StrSql & "((fecha < " & ConvFecha(rs!fecha_hasta) & ") or "
        StrSql = StrSql & "(fecha  = " & ConvFecha(rs!fecha_hasta) & " and hora <= '" & rs!hora_hasta & "')))"
        OpenRecordset StrSql, rs_Turno
        If rs_Turno.EOF Then
            ent_fic = False
            Par_Entrada_Aux = 0
        Else
            Hora_Entrada_Aux = rs_Turno!Hora
            Fecha_Entrada_Aux = rs_Turno!Fecha
            Par_Entrada_Aux = rs_Turno!par
        End If
    Else
        fec_sal_aux = rs_Dia!Fecha
        hor_sal_aux = rs_Dia!Hora
        cod_sal_aux = rs_Dia!Codigo
    
        entrada_salida = IIf((rs_Dia!Codigo = 1 Or rs_Dia!Codigo = 2), 1, IIf((rs_Dia!Codigo = 3 Or rs_Dia!Codigo = 4), 2, 3))
        StrSql = "SELECT fecha_entrada fecha_desde,fecha_salida fecha_hasta,hora_entrada hora_desde, hora_salida hora_hasta FROM " & TTempWFDiaLaboral
        StrSql = StrSql & " WHERE entrada_salida = " & entrada_salida
        StrSql = StrSql & " ORDER BY fecha_desde, hora_desde ASC"
        OpenRecordset StrSql, rs
    
        'FGZ - 09/05/2007 ---- le agregué el control por para que busque E o S
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE"
        StrSql = StrSql & " entrada = 0 AND "
        If Par_Entrada_Aux <> 0 Then
            StrSql = StrSql & " par = " & Par_Entrada_Aux & " AND "
        End If
        StrSql = StrSql & "(((fecha > " & ConvFecha(rs!fecha_desde) & ") or "
        StrSql = StrSql & "(fecha = " & ConvFecha(rs!fecha_desde) & " and "
        StrSql = StrSql & "hora >= '" & rs!hora_desde & "')) and "
        StrSql = StrSql & "((fecha < " & ConvFecha(rs!fecha_hasta) & ") or "
        'FGZ - 31/05/2007 ------
        'StrSql = StrSql & "(fecha  = " & ConvFecha(rs!fecha_hasta) & " and hora <= '" & rs!hora_hasta & "')))"
        StrSql = StrSql & "(fecha  = " & ConvFecha(rs!fecha_hasta) & " and hora >= '" & rs!hora_desde & "')))"
        'FGZ - 31/05/2007 ------
        OpenRecordset StrSql, rs_Turno
        If rs_Turno.EOF Then
            sal_fic = False
        End If

        'FGZ - 30/11/2006
        If (ent_fic = False And sal_fic = False) Then
            'Verifico que no sea algo del tipo
            '----------[----------]---------------- Horario Teorico
            '-----(--------------------)----------- Registraciones
            'Tengo que buscar en WF_Turno
            'Busco Entrada anterior
            StrSql = "SELECT * FROM " & TTempWFTurno
            StrSql = StrSql & " WHERE fecha <= " & ConvFecha(fec_ent_aux)
            StrSql = StrSql & " AND hora <= '" & hor_ent_aux & "'"
            StrSql = StrSql & " AND entrada = -1"
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                StrSql = "SELECT * FROM " & TTempWFTurno
                StrSql = StrSql & " WHERE fecha >= " & ConvFecha(fec_sal_aux)
                StrSql = StrSql & " AND hora >= '" & hor_sal_aux & "'"
                StrSql = StrSql & " AND entrada = 0"
                StrSql = StrSql & " AND par = " & rs!par
                OpenRecordset StrSql, rs
                If Not rs.EOF Then
                    'No genero AP
                    ent_fic = True
                    sal_fic = True
                End If
            End If
        End If

        If (ent_fic = False Or sal_fic = False) Then
            fec_ent = fec_ent_aux
            hor_ent = hor_ent_aux
            cod_ent = cod_ent_aux
            fec_sal = fec_sal_aux
            hor_sal = hor_sal_aux
            cod_sal = cod_sal_aux
        End If
    
        If Not ((hor_ent <> "" And hor_sal <> "") And (cod_sal = cod_ent + 1)) Then
            GoTo NextProgress
        End If
    
        Call objFechasHoras.RestaHs(fec_ent, hor_ent, rs_Dia!Fecha, rs_Dia!Hora, Tdias, Thoras, Tmin)
        TotHor = Thoras + (Tmin / 60)
        If TotHor = 0 Then
            GoTo NextProgress
        End If
        
        'Si no Encuentro una registracion en el embudo de entrada y tampoco encuentro registracion
        'en el embudo de salida, entonces se debe generar Falta Reg. Obligatoria"
        
        StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 10 "
        StrSql = StrSql & " AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
        OpenRecordset StrSql, rs
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Pol 110v5 - Configurando Hora 10"
        End If
        msgTraza = "No esta configurado el Tipo de Hora Falta Registracion para el Turno:"
        If Not rs.EOF Then
            Hora_Ausencia = rs!thnro
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Pol 110v5 - Configurando Hora " & Hora_Ausencia
            End If
        Else
            'Entrada en la traza
            If depurar Then
                GeneraTraza Empleado.Ternro, p_fecha, msgTraza, Str(Nro_Turno)
            End If
            GoTo CierroTodo
        End If

        TotHorHHMM = CHoras(TotHor, 60)
        
        StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
        "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen," & _
        "normnro,normnro2,horhoradesde,horhorahasta,horestado) VALUES (" & TotHorHHMM & "," & Round(TotHor, Presicion_HC) & "," & _
        ConvFecha(fec_ent) & "," & ConvFecha(fec_sal) & "," & "0,-1," & _
        nro_tercero & "," & Hora_Ausencia & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
        ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",3,3,'" & hor_ent & "','" & hor_sal & "',' ')"
        objConn.Execute StrSql, , adExecuteNoRecords
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & Hora_Ausencia & "- Cantidad: " & TotHor & " hs."
        End If
        
        ent_fic = True
        sal_fic = True
        hor_ent = ""
        hor_sal = ""
    End If
    
NextProgress:
    rs_Dia.MoveNext
Loop
   

'Cierro y libero todos los recordsets
CierroTodo:
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
    If rs_Dia.State = adStateOpen Then rs_Dia.Close
    Set rs_Dia = Nothing
    If rs_Turno.State = adStateOpen Then rs_Turno.Close
    Set rs_Turno = Nothing
End Sub


Public Sub Politica110v9(p_fecha As Date, nro_tercero As Long, Nro_Turno As Long, deb As Boolean, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripci¢n: Genera Falta reg Obligatoria con anormalidad.
'               El tipo de hora y la anormalidad que genera dependen del tipo de registracion que falta.
'               Falta Entrada ==> genera 1 tipo de hora y 1 anormalidad asociada.
'               Falta Salida  ==> genera 1 tipo de hora y 1 anormalidad asociada.
'               Falta Entrada y Salida  ==> genera 2 tipo de horas con sus respectivas anormalidades.
' Autor: FGZ - 08/10/2010
' Ultima Mod:
' --------------------------------------------------------------
Dim rs_Turno As New ADODB.Recordset
Dim rs_Dia As New ADODB.Recordset
Dim rs As New ADODB.Recordset

Dim i As Integer
Dim TotHor As Single
Dim Tdias As Integer
Dim Tmin As Integer
Dim hora_oblig As Integer
Dim Hora_Generada As Integer
Dim fec_ent As Date
Dim hor_ent As String
Dim msgTraza As String
Dim Es_Turno_Libre As Boolean

Dim cod_ent  As Integer
Dim ent_fic  As Boolean
Dim fec_sal  As Date
Dim hor_sal  As String
Dim cod_sal  As Integer
Dim sal_fic  As Boolean
Dim hor_ent_aux  As String
Dim cod_ent_aux  As Integer
Dim fec_ent_aux  As Date

Dim hor_sal_aux  As String
Dim cod_sal_aux  As Integer
Dim fec_sal_aux  As Date
Dim Hora_Entrada_Aux As String
Dim Fecha_Entrada_Aux  As Date
Dim Par_Entrada_Aux As Long

Dim Hora_Ausencia As Long
Dim Anormalidad As Long

Dim entrada_salida As Integer
Dim TotHorHHMM As String

'Abro cursor
StrSql = "SELECT * FROM " & TTempWFDia
OpenRecordset StrSql, rs_Dia

ent_fic = True
sal_fic = True
Do While Not rs_Dia.EOF
    If rs_Dia!entrada Then
        fec_ent_aux = rs_Dia!Fecha
        hor_ent_aux = rs_Dia!Hora
        cod_ent_aux = rs_Dia!Codigo
        
        entrada_salida = IIf((rs_Dia!Codigo = 1 Or rs_Dia!Codigo = 2), 1, IIf((rs_Dia!Codigo = 3 Or rs_Dia!Codigo = 4), 2, 3))
        StrSql = "SELECT fecha_entrada fecha_desde,fecha_salida fecha_hasta,hora_entrada hora_desde, hora_salida hora_hasta FROM " & TTempWFDiaLaboral
        StrSql = StrSql & " WHERE entrada_salida = " & entrada_salida
        StrSql = StrSql & " ORDER BY fecha_desde, hora_desde ASC"
        OpenRecordset StrSql, rs
    
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE "
        'FGZ - 09/05/2007 ---- le agregué el control por para que busque E o S
        StrSql = StrSql & "Entrada = -1 AND "
        'FGZ - 09/05/2007 ---- le agregué el control por para que busque E o S
        StrSql = StrSql & "(((fecha > " & ConvFecha(rs!fecha_desde) & ") or "
        StrSql = StrSql & "(fecha = " & ConvFecha(rs!fecha_desde) & " and "
        'FGZ - 31/05/2007 ------
        'StrSql = StrSql 7& "hora >= '" & rs!hora_desde & "')) and "
        StrSql = StrSql & "hora <= '" & rs!hora_hasta & "')) and "
        'FGZ - 31/05/2007 ------
        StrSql = StrSql & "((fecha < " & ConvFecha(rs!fecha_hasta) & ") or "
        StrSql = StrSql & "(fecha  = " & ConvFecha(rs!fecha_hasta) & " and hora <= '" & rs!hora_hasta & "')))"
        OpenRecordset StrSql, rs_Turno
        If rs_Turno.EOF Then
            ent_fic = False
            Par_Entrada_Aux = 0
        Else
            Hora_Entrada_Aux = rs_Turno!Hora
            Fecha_Entrada_Aux = rs_Turno!Fecha
            Par_Entrada_Aux = rs_Turno!par
        End If
    Else
        fec_sal_aux = rs_Dia!Fecha
        hor_sal_aux = rs_Dia!Hora
        cod_sal_aux = rs_Dia!Codigo
    
        entrada_salida = IIf((rs_Dia!Codigo = 1 Or rs_Dia!Codigo = 2), 1, IIf((rs_Dia!Codigo = 3 Or rs_Dia!Codigo = 4), 2, 3))
        StrSql = "SELECT fecha_entrada fecha_desde,fecha_salida fecha_hasta,hora_entrada hora_desde, hora_salida hora_hasta FROM " & TTempWFDiaLaboral
        StrSql = StrSql & " WHERE entrada_salida = " & entrada_salida
        StrSql = StrSql & " ORDER BY fecha_desde, hora_desde ASC"
        OpenRecordset StrSql, rs
    
        'FGZ - 09/05/2007 ---- le agregué el control por para que busque E o S
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE"
        StrSql = StrSql & " entrada = 0 AND "
        If Par_Entrada_Aux <> 0 Then
            StrSql = StrSql & " par = " & Par_Entrada_Aux & " AND "
        End If
        StrSql = StrSql & "(((fecha > " & ConvFecha(rs!fecha_desde) & ") or "
        StrSql = StrSql & "(fecha = " & ConvFecha(rs!fecha_desde) & " and "
        StrSql = StrSql & "hora >= '" & rs!hora_desde & "')) and "
        StrSql = StrSql & "((fecha < " & ConvFecha(rs!fecha_hasta) & ") or "
        'FGZ - 31/05/2007 ------
        'StrSql = StrSql & "(fecha  = " & ConvFecha(rs!fecha_hasta) & " and hora <= '" & rs!hora_hasta & "')))"
        StrSql = StrSql & "(fecha  = " & ConvFecha(rs!fecha_hasta) & " and hora >= '" & rs!hora_desde & "')))"
        'FGZ - 31/05/2007 ------
        OpenRecordset StrSql, rs_Turno
        If rs_Turno.EOF Then
            sal_fic = False
        End If

        'FGZ - 30/11/2006
        If (ent_fic = False And sal_fic = False) Then
            'Verifico que no sea algo del tipo
            '----------[----------]---------------- Horario Teorico
            '-----(--------------------)----------- Registraciones
            'Tengo que buscar en WF_Turno
            'Busco Entrada anterior
            StrSql = "SELECT * FROM " & TTempWFTurno
            StrSql = StrSql & " WHERE fecha <= " & ConvFecha(fec_ent_aux)
            StrSql = StrSql & " AND hora <= '" & hor_ent_aux & "'"
            StrSql = StrSql & " AND entrada = -1"
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                StrSql = "SELECT * FROM " & TTempWFTurno
                StrSql = StrSql & " WHERE fecha >= " & ConvFecha(fec_sal_aux)
                StrSql = StrSql & " AND hora >= '" & hor_sal_aux & "'"
                StrSql = StrSql & " AND entrada = 0"
                StrSql = StrSql & " AND par = " & rs!par
                OpenRecordset StrSql, rs
                If Not rs.EOF Then
                    'No genero AP
                    ent_fic = True
                    sal_fic = True
                End If
            End If
        Else
            If (ent_fic = False) Then
                'Falta la entrada
                fec_ent = fec_ent_aux
                hor_ent = hor_ent_aux
                cod_ent = cod_ent_aux
                fec_sal = fec_sal_aux
                hor_sal = hor_sal_aux
                cod_sal = cod_sal_aux
                
                
                If Not ((hor_ent <> "" And hor_sal <> "") And (cod_sal = cod_ent + 1)) Then
                    GoTo NextProgress
                End If
            
                'Call objFechasHoras.RestaHs(fec_ent, hor_ent, rs_Dia!Fecha, rs_Dia!Hora, Tdias, Thoras, Tmin)
                'TotHor = Thoras + (Tmin / 60)
                'If TotHor = 0 Then
                '    GoTo NextProgress
                'End If
                
                TotHor = 1
                
                'Si no Encuentro una registracion en el embudo de entrada entonces se debe generar Falta Reg. Entrada"
                StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 11"
                StrSql = StrSql & " AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
                OpenRecordset StrSql, rs
                If Not rs.EOF Then
                    Hora_Ausencia = rs!thnro
                    Anormalidad = 1
                Else
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "No está configurando el tipo de Hora 11 - Falta Reg de Entrada"
                    End If
                    Hora_Ausencia = 0
                End If
        
                If TotHor > 0 And Hora_Ausencia <> 0 Then
                    TotHorHHMM = CHoras(TotHor, 60)
                    
                    StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                    "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen," & _
                    "normnro,normnro2,horhoradesde,horhorahasta,horestado) VALUES (" & TotHorHHMM & "," & Round(TotHor, Presicion_HC) & "," & _
                    ConvFecha(fec_ent) & "," & ConvFecha(fec_sal) & "," & "0,-1," & _
                    nro_tercero & "," & Hora_Ausencia & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
                    ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & "," & Anormalidad & "," & Anormalidad & ",'" & hor_ent & "','" & hor_ent & "',' ')"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & Hora_Ausencia & "- Cantidad: " & TotHor & " hs."
                    End If
                End If
            End If
        
            If (sal_fic = False) Then
                'Falta la salida
                fec_ent = fec_ent_aux
                hor_ent = hor_ent_aux
                cod_ent = cod_ent_aux
                fec_sal = fec_sal_aux
                hor_sal = hor_sal_aux
                cod_sal = cod_sal_aux
                
                If Not ((hor_ent <> "" And hor_sal <> "") And (cod_sal = cod_ent + 1)) Then
                    GoTo NextProgress
                End If
            
                'Call objFechasHoras.RestaHs(fec_ent, hor_ent, rs_Dia!Fecha, rs_Dia!Hora, Tdias, Thoras, Tmin)
                'TotHor = Thoras + (Tmin / 60)
                'If TotHor = 0 Then
                '    GoTo NextProgress
                'End If
                
                TotHor = 1
                
                'Si no Encuentro una registracion en el embudo de entrada entonces se debe generar Falta Reg. Entrada"
                StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 12"
                StrSql = StrSql & " AND turnro = " & Nro_Turno & " ORDER BY conhornro ASC, turnro ASC"
                OpenRecordset StrSql, rs
                If Not rs.EOF Then
                    Hora_Ausencia = rs!thnro
                    Anormalidad = 2
                Else
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "No está configurando el tipo de Hora 11 - Falta Reg de Entrada"
                    End If
                    Hora_Ausencia = 0
                End If
        
                If TotHor > 0 And Hora_Ausencia <> 0 Then
                    TotHorHHMM = CHoras(TotHor, 60)
                    
                    StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                    "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen," & _
                    "normnro,normnro2,horhoradesde,horhorahasta,horestado) VALUES (" & TotHorHHMM & "," & Round(TotHor, Presicion_HC) & "," & _
                    ConvFecha(fec_ent) & "," & ConvFecha(fec_sal) & "," & "0,-1," & _
                    nro_tercero & "," & Hora_Ausencia & "," & Nro_Turno & "," & Empleado.Legajo & "," & _
                    ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & "," & Anormalidad & "," & Anormalidad & ",'" & hor_sal & "','" & hor_sal & "',' ')"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & Hora_Ausencia & "- Cantidad: " & TotHor & " hs."
                    End If
                End If
            End If
        
            ent_fic = True
            sal_fic = True
            hor_ent = ""
            hor_sal = ""
        End If
    End If
    
NextProgress:
    rs_Dia.MoveNext
Loop
   

'Cierro y libero todos los recordsets
CierroTodo:
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
    If rs_Dia.State = adStateOpen Then rs_Dia.Close
    Set rs_Dia = Nothing
    If rs_Turno.State = adStateOpen Then rs_Turno.Close
    Set rs_Turno = Nothing
End Sub




'
Public Sub Politica111(NroTer As Long, Nro_Turno As Long, p_fecha As Date, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Control de Secuencia de registraciones.
' Autor: FGZ - 30/07/2010
' Ultima modificacion:
'
' --------------------------------------------------------------
Dim i  As Long
Dim j  As Long

Dim Opcion  As Integer
Dim lista As String
Dim TH(1 To 6) As Long
Dim AN(1 To 6) As String
Dim Tipo

Dim TotHor As Single
Dim TotHorHHMM As String

Dim THaGen As Long
Dim AnaGen As String

Dim Aux As String
Dim Lista_Reg As String
Dim Sigo_Controlando As Boolean
Dim Reg_Falta As String
Dim Balancea As Boolean
Dim Encontro As Boolean

Dim Tipos_Reg(1 To 6) As TTipoReg

Dim rs As New ADODB.Recordset
Dim rs_reg As New ADODB.Recordset


Dim regs
'Dim I As Long
'Dim J As Long
Dim Lista_Sig(0 To 4) As String
Dim Lista_Sig2(0 To 4) As String
Dim Aux_reg As String
Dim Descanso1 As Boolean
Dim Indice As Long
'Dim Reg_Falta As String
Dim Horas_Oblig As Long

    Nivel_Tab_Log = 3
   
    Call SetearParametrosPolitica(Detalle, ok)

    Opcion = st_Opcion  'Version de la politica
    
    'Lista = IIf(Not EsNulo(st_ListaTH), st_ListaTH, "") 'Lista de tipos de registraciones
    TH(1) = IIf(Not EsNulo(st_TipoHora1), st_TipoHora1, 0) 'Tipo de hora a generar
    TH(2) = IIf(Not EsNulo(st_TipoHora2), st_TipoHora2, 0) 'Tipo de hora a generar
    TH(3) = IIf(Not EsNulo(st_TipoHora3), st_TipoHora3, 0) 'Tipo de hora a generar
    TH(4) = IIf(Not EsNulo(st_TipoHora4), st_TipoHora4, 0) 'Tipo de hora a generar
    TH(5) = IIf(Not EsNulo(st_TipoHora5), st_TipoHora5, 0) 'Tipo de hora a generar
    TH(6) = IIf(Not EsNulo(st_TipoHora6), st_TipoHora6, 0) 'Tipo de hora a generar
    
    AN(1) = IIf(Not EsNulo(st_Anormalidad), st_Anormalidad, 0) 'Codigo de anormalidad a generar
    AN(2) = IIf(Not EsNulo(st_Anormalidad2), st_Anormalidad2, 0) 'Codigo de anormalidad a generar
    AN(3) = IIf(Not EsNulo(st_Anormalidad3), st_Anormalidad3, 0) 'Codigo de anormalidad a generar
    AN(4) = IIf(Not EsNulo(st_Anormalidad4), st_Anormalidad4, 0) 'Codigo de anormalidad a generar
    AN(5) = IIf(Not EsNulo(st_Anormalidad5), st_Anormalidad5, 0) 'Codigo de anormalidad a generar
    AN(6) = IIf(Not EsNulo(st_Anormalidad6), st_Anormalidad6, 0) 'Codigo de anormalidad a generar
    Tipo = Split(st_ListaTH, ",")
    
    For i = 0 To UBound(Tipo)
        Tipos_Reg(i + 1).Codigo = Tipo(i)
        Tipos_Reg(i + 1).TH = TH(i + 1)
        Tipos_Reg(i + 1).AN = AN(i + 1)
    Next i
    
    If depurar Then
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Version: " & Opcion
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "  Lista de tipos de registraciones: " & lista
        
        For i = 1 To UBound(Tipo) + 1
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "  Tipo de registracion: " & Tipos_Reg(i).Codigo
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "      Tipo de hora a generar: " & Tipos_Reg(i).TH
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "      Codigo de Anormalidad: " & Tipos_Reg(i).AN
        Next i
    End If
   
If Dia_Libre Or (UsaFeriadoConControl And esFeriado And Not Feriado_Laborable) Then
    If depurar Then
        Flog.writeline Espacios(Tabulador * 4) & "Dia Franco o Feriado. No hay control de Pausas obligatorias."
    End If
    Opcion = 1
End If
     
        
'Busco la cantidad de horas para ese dia en ese turno
StrSql = "SELECT diacanthoras FROM gti_dias "
StrSql = StrSql & " WHERE subturnro = " & Nro_Subturno
StrSql = StrSql & " AND dianro = " & Nro_Dia
StrSql = StrSql & " ORDER BY diaorden"
OpenRecordset StrSql, rs
If Not rs.EOF Then
    Horas_Oblig = rs!diacanthoras
Else
    Horas_Oblig = 8
End If
    
If Horas_Oblig > 4 Then
    Select Case Opcion
    Case 1: 'Monresa ==> Estandar.Descanzo Opcional.1era y ultimaregistraciones obligatorias.
        Sigo_Controlando = True
        'Busco las registraciones
        Call Registraciones_A_Evaluar(Lista_Reg)
        If Not EsNulo(Lista_Reg) Then
            Call Balance_Reg(Opcion, Lista_Reg, i, Reg_Falta, Balancea)
            If Not Balancea Then
                'Determino que anormalidad y tipo de hora genero de acuerdo al tipo de reg faltante
                Encontro = False
                THaGen = Tipos_Reg(i).TH
                AnaGen = Tipos_Reg(i).AN
                
                'Cantidad a agenerar
                TotHor = 1
                
                
                TotHorHHMM = CHoras(TotHor, 60)
        
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                StrSql = StrSql & " thnro,turnro,horrealent,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                StrSql = StrSql & TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''"
                StrSql = StrSql & "," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & AnaGen & ","
                StrSql = StrSql & ValorNulo & "," & Empleado.Ternro & "," & THaGen & "," & Nro_Turno & ","
                StrSql = StrSql & "'',''," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
        
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & THaGen & "- Cantidad: " & TotHor & " hs."
                End If
            End If
        Else
            If depurar Then
                Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "NO se puede controlar secuencia de registraciones."
            End If
        End If
    Case 2: 'Monresa ==> Descanzo Obligatorio.
        Sigo_Controlando = True
        'Busco las registraciones
        Call Registraciones_A_Evaluar(Lista_Reg)
        If Not EsNulo(Lista_Reg) Then
            Call Balance_Reg_Obligatorio(Opcion, Lista_Reg, i, Reg_Falta, Balancea)
            If Not Balancea Then
                'Determino que anormalidad y tipo de hora genero de acuerdo al tipo de reg faltante
                Encontro = False
                THaGen = Tipos_Reg(i).TH
                AnaGen = Tipos_Reg(i).AN
                
                'Cantidad a agenerar
                TotHor = 1
                
                
                TotHorHHMM = CHoras(TotHor, 60)
        
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                StrSql = StrSql & " thnro,turnro,horrealent,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                StrSql = StrSql & TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''"
                StrSql = StrSql & "," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & AnaGen & ","
                StrSql = StrSql & ValorNulo & "," & Empleado.Ternro & "," & THaGen & "," & Nro_Turno & ","
                StrSql = StrSql & "'',''," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
        
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & THaGen & "- Cantidad: " & TotHor & " hs."
                End If
            End If
        Else
            If depurar Then
                Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "NO se puede controlar secuencia de registraciones."
            End If
        End If
    Case 3: 'Monresa ==> 1 Descanzo Obligatorio y 1 Descanzo Opcional.
        Sigo_Controlando = True
        'Busco las registraciones
        Call Registraciones_A_Evaluar(Lista_Reg)
        If Not EsNulo(Lista_Reg) Then
            Call Balance_Reg_1Obligatorioy1Opcional(Opcion, Lista_Reg, i, Reg_Falta, Balancea)
            If Not Balancea Then
                'Determino que anormalidad y tipo de hora genero de acuerdo al tipo de reg faltante
                Encontro = False
                THaGen = Tipos_Reg(i).TH
                AnaGen = Tipos_Reg(i).AN
                
                'Cantidad a agenerar
                TotHor = 1
                
                
                TotHorHHMM = CHoras(TotHor, 60)
        
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                StrSql = StrSql & " thnro,turnro,horrealent,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                StrSql = StrSql & TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''"
                StrSql = StrSql & "," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & AnaGen & ","
                StrSql = StrSql & ValorNulo & "," & Empleado.Ternro & "," & THaGen & "," & Nro_Turno & ","
                StrSql = StrSql & "'',''," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
        
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & THaGen & "- Cantidad: " & TotHor & " hs."
                End If
            End If
        Else
            If depurar Then
                Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "NO se puede controlar secuencia de registraciones."
            End If
        End If
    Case 4: 'Monresa ==> 2 Descansos Obligatorios.
        Sigo_Controlando = True
        'Busco las registraciones
        Call Registraciones_A_Evaluar(Lista_Reg)
        If Not EsNulo(Lista_Reg) Then
            Call Balance_Reg_2Obligatorio(Opcion, Lista_Reg, i, Reg_Falta, Balancea)
            
            If Not Balancea Then
                'Determino que anormalidad y tipo de hora genero de acuerdo al tipo de reg faltante
                Encontro = False
                THaGen = Tipos_Reg(i).TH
                AnaGen = Tipos_Reg(i).AN
    
                'Cantidad a agenerar
                TotHor = 1
    
    
                TotHorHHMM = CHoras(TotHor, 60)
    
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                StrSql = StrSql & " thnro,turnro,horrealent,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                StrSql = StrSql & TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''"
                StrSql = StrSql & "," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & AnaGen & ","
                StrSql = StrSql & ValorNulo & "," & Empleado.Ternro & "," & THaGen & "," & Nro_Turno & ","
                StrSql = StrSql & "'',''," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
    
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & THaGen & "- Cantidad: " & TotHor & " hs."
                End If
            End If
        Else
            If depurar Then
                Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "NO se puede controlar secuencia de registraciones."
            End If
        End If
    Case 5: 'Monresa ==> 2 Descansos Obligatorios.
        Sigo_Controlando = True
        'Busco las registraciones
        Call Registraciones_A_Evaluar(Lista_Reg)
        If Not EsNulo(Lista_Reg) Then
            Lista_Sig(0) = "01,1"
            Lista_Sig(1) = "02,2"
            Lista_Sig(2) = "03,3"
            Lista_Sig(3) = "02,2"
            Lista_Sig(4) = "#"
            
            Lista_Sig2(0) = "01,1"
            Lista_Sig2(1) = "02,2"
            Lista_Sig2(2) = "03,3"
            Lista_Sig2(3) = "04,4"
            Lista_Sig2(4) = "#"
            
            
            regs = Split(Lista_Reg, ",")
            i = 0
            Aux_reg = regs(i)
            
            If Not (Aux_reg = "01" Or Aux_reg = "1") Then
                j = 1
                Indice = 1
                Reg_Falta = "1"
                Balancea = False
            Else
                Balancea = True
            End If
            
            Descanso1 = True
            If Not Aux_reg = "#" Then
                i = 1
                Do While i <= UBound(regs) 'And Balancea
                    
                            
                    'aux_reg es la registracion inicial
                    Select Case Aux_reg
                    Case "1", "01":
                        j = 1
                        Indice = 2
                        Reg_Falta = "2"
                    Case "2", "02":
                        j = 2
                        Reg_Falta = "3"
                        Indice = 3
                    Case "3", "03":
                        j = 3
                        If Descanso1 Then
                            Reg_Falta = "2"
                            Indice = 2
                        Else
                            Reg_Falta = "4"
                            Indice = 4
                        End If
                    Case "4", "04":
                        j = 4
                        Reg_Falta = "1"
                        Indice = 1
                    End Select
                    
                    If Descanso1 Then
                        If InStr(1, Lista_Sig(j), regs(i)) > 0 Then
                            'siguiente
                            Balancea = True
                            If Aux_reg = "03" Or Aux_reg = "3" Then
                                Descanso1 = False
                            End If
                            Aux_reg = regs(i)
                            i = i + 1
                        Else
                            If InStr(1, Lista_Sig(j), "#") > 0 Then
                                'siguiente
                                Balancea = True
                                Aux_reg = regs(i)
                                i = i + 1
                            Else
                                'hay algo mal
                                Balancea = False
                            End If
                        End If
                    Else
                        If InStr(1, Lista_Sig2(j), regs(i)) > 0 Then
                            'siguiente
                            Balancea = True
                            Aux_reg = regs(i)
                            i = i + 1
                        Else
                            If InStr(1, Lista_Sig2(j), "#") > 0 Then
                                'siguiente
                                Balancea = True
                                Aux_reg = regs(i)
                                i = i + 1
                            Else
                                'hay algo mal
                                Balancea = False
                            End If
                        End If
                    End If
                
                    If Not Balancea Then
                        'Determino que anormalidad y tipo de hora genero de acuerdo al tipo de reg faltante
                        Encontro = False
                        THaGen = Tipos_Reg(Indice).TH
                        AnaGen = Tipos_Reg(Indice).AN
                        
                        'Cantidad a agenerar
                        TotHor = 1
                        TotHorHHMM = CHoras(TotHor, 60)
                
                        StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                        StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                        StrSql = StrSql & " thnro,turnro,horrealent,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                        StrSql = StrSql & TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''"
                        StrSql = StrSql & "," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & AnaGen & ","
                        StrSql = StrSql & ValorNulo & "," & Empleado.Ternro & "," & THaGen & "," & Nro_Turno & ","
                        StrSql = StrSql & "'',''," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & THaGen & "- Cantidad: " & TotHor & " hs."
                        End If
                        If Aux_reg = "03" Or Aux_reg = "3" Then
                            Descanso1 = False
                        End If
                        
                        
                        Aux_reg = Reg_Falta 'regs(I)
                        'I = I + 1
                    End If
                Loop
            Else
                Balancea = True
            End If
            
            If Not Balancea Then
                'Reg_Falta = Lista_Sig(J)
                'Indice = J
            Else
                Reg_Falta = ""
                Indice = 0
            End If
            
            
            
            
        Else
            If depurar Then
                Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "NO se puede controlar secuencia de registraciones."
            End If
        End If
    
    Case Else:  'Version inexistente
        If depurar Then
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Version inexistente. " & Opcion
        End If
    End Select
Else
    If depurar Then
        Flog.writeline Espacios(Tabulador * 4) & "La cantidad de HS obligatorias es <= 4. No Hay control de Pausas"
    End If
End If



'Cierro todo y libero
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
End Sub
'
Public Sub Politica80v2(p_ternro As Long, Fecha As Date, fecha_desde As Date, hora_desde As String, fecha_hasta As Date, hora_hasta As String, subn As Integer, ByVal TamañoVentana As String, ByVal Iteraciones As Integer)
' --------------------------------------------------------------
' Descripcion: Registracion a evaluar.
' subn = 5 - esm26  - Proceso las puntas, maximo 26 horas.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
'                      FGZ - 19/05/2004
' --------------------------------------------------------------
Dim rs As New ADODB.Recordset

Dim p_horario As Boolean
Dim salir As Boolean
Dim TEmp As String
Dim Cantidad As Integer

Dim tt_crpnnro As Integer
Dim tt_fechaproc As Date
Dim tt_hornro As Integer
Dim tt_regentsal As String
Dim tt_regestado As String
Dim tt_regfecha As Date
Dim tt_reghora As String
Dim tt_regmanual As Integer
Dim tt_regnro As Long
Dim tt_relnro As Integer
Dim tt_ternro As Integer

Dim Tope As String

Dim fecha_aux As Date
Dim hora_aux  As String
Dim Hora As String
Dim fecres As Date
Dim horres As String
Dim ok As Boolean
Dim rec_ent As Long
Dim rec_sal As Long
Dim Encontro As Boolean
Dim Aux_Entrada As Boolean


salir = False
p_horario = False

' Busco en el Detalle del parte de autorizacion de Horarios
' una entrada para p_ternro

'FIND FIRST gti_regdet where PER.gti_regdet.ternro = p-ternro AND
'                            PER.gti_regdet.gprdfecdesde <= fecha AND
'                            fecha <= PER.gti_regdet.gprdfechasta no-lock no-error.
StrSql = "SELECT * FROM gti_regdet WHERE ternro= " & p_ternro & _
" and gprdfecdesde <= " & ConvFecha(Fecha) & " and gprdfechasta >= " & ConvFecha(Fecha) & _
" ORDER BY ternro ASC, gprdfecdesde ASC, gprdfechasta ASC"
' Abro sin bloqueo
rs.Open StrSql, objConn
If Not rs.EOF Then
    
    ' Registracion - entrada

    StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,entrada,evenro)" & _
    " VALUES(" & p_ternro & "," & ConvFecha(rs!gprdfecdesde) & ",'" & _
    rs!grpdhoradesde & "',-1,2)"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    ' Registracion - salida
    StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,entrada,evenro)" & _
    " VALUES(" & p_ternro & "," & ConvFecha(rs!gprdfechasta) & ",'" & _
    rs!grpdhorahasta & "',0,2)"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    p_horario = True
End If
rs.Close

'  /* Generar el wf con cada registracion dentro de la ventana */


If p_horario Then
    StrSql = "SELECT * FROM gti_registracion " & _
    " WHERE ternro= " & p_ternro & _
    " AND (regestado = 'I')" & _
    " AND ( (regfecha > " & ConvFecha(fecha_desde) & _
    ") OR (regfecha = " & ConvFecha(fecha_desde) & _
    " AND reghora >= '" & hora_desde & "') )" & _
    " AND ( (regfecha < " & ConvFecha(fecha_hasta) & _
    ") OR (regfecha = " & ConvFecha(fecha_hasta) & _
    " AND reghora <= '" & hora_hasta & "') )"
    StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
    OpenRecordset StrSql, rs
    Do While Not rs.EOF
        StrSql = "UPDATE gti_registracion SET regestado = 'L' " & _
        " WHERE regnro = " & rs!Regnro
        objConn.Execute StrSql, , adExecuteNoRecords
        rs.MoveNext
    Loop
    rs.Close
    
Else

    'Proceso las puntas
    StrSql = "SELECT * FROM gti_registracion " & _
    " WHERE ternro= " & p_ternro & _
    " AND ((regestado = 'I') OR (regestado = 'S'))" & _
    " AND ( (regfecha > " & ConvFecha(fecha_desde) & _
    ") OR (regfecha = " & ConvFecha(fecha_desde) & _
    " AND reghora >= '" & hora_desde & "') )" & _
    " AND ( (regfecha < " & ConvFecha(fecha_hasta) & _
    ") OR (regfecha = " & ConvFecha(fecha_hasta) & _
    " AND reghora <= '" & hora_hasta & "') )"
    StrSql = StrSql & " AND regentsal = 'E'"
    StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
    OpenRecordset StrSql, rs
    Cantidad = rs.RecordCount

    ' Si hay un registro disponible
    If Not rs.EOF Then
 
        rec_ent = rs!Regnro
        rs.MoveFirst
    
        'FGZ - 19/05/2004
        Select Case UltimaRegInsertadaWFTurno
            Case "N":   Aux_Entrada = True
                        UltimaRegInsertadaWFTurno = "E"
            Case "E":   Aux_Entrada = False
                        UltimaRegInsertadaWFTurno = "S"
            Case "S":   Aux_Entrada = True
                        UltimaRegInsertadaWFTurno = "E"
        End Select
        ' genero el wf con la Registracion
        StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro)" & _
        " VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'" & _
        rs!reghora & "'," & rs!Regnro & "," & CInt(Aux_Entrada) & ",2)"
        objConn.Execute StrSql, , adExecuteNoRecords
    
    
    
'        'genero el wf con la Registracion
'        StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro)" & _
'        " VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'" & _
'        rs!reghora & "'," & rs!Regnro & ",-1,2)"
'        objConn.Execute StrSql, , adExecuteNoRecords
      
        'FGZ - 08/04/2008 - no estaba marcando la registracion
        StrSql = "UPDATE gti_registracion SET regestado = 'L' " & _
        " WHERE regnro = " & rs!Regnro
        objConn.Execute StrSql, , adExecuteNoRecords
    End If
    
    rs.Close
    
    StrSql = "SELECT * FROM gti_registracion " & _
    " WHERE ternro= " & p_ternro & _
    " AND ((regestado = 'I') OR (regestado = 'S'))" & _
    " AND ( (regfecha > " & ConvFecha(fecha_desde) & _
    ") OR (regfecha = " & ConvFecha(fecha_desde) & _
    " AND reghora >= '" & hora_desde & "') )" & _
    " AND ( (regfecha < " & ConvFecha(fecha_hasta) & _
    ") OR (regfecha = " & ConvFecha(fecha_hasta) & _
    " AND reghora <= '" & hora_hasta & "') )"
    StrSql = StrSql & " AND regentsal = 'S'"
    StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
              
    ' Solo lectura
    OpenRecordset StrSql, rs
    
    If Not rs.EOF Then
    
        rs.MoveLast
    
        ' genero el wf con la Registracion
        If Not IsNull(rs!crpnnro) Then
            tt_crpnnro = rs!crpnnro
        End If
        If Not IsNull(rs!FechaProc) Then
            tt_fechaproc = rs!FechaProc
        End If
        If Not IsNull(rs!hornro) Then
            tt_hornro = rs!hornro
        End If
        tt_regentsal = rs!regentsal
        tt_regestado = rs!regestado
        tt_regfecha = rs!regfecha
        tt_reghora = rs!reghora
        tt_regmanual = rs!regmanual
        tt_regnro = rs!Regnro
        tt_relnro = rs!relnro
        tt_ternro = rs!Ternro
        
        rs.Close
        
        'rec_sal = recid(gti_registracion)
        
        StrSql = "SELECT * FROM gti_registracion " & _
        " WHERE ternro= " & p_ternro & _
        " AND ((regestado = 'I') OR (regestado = 'S'))" & _
        " AND ( (regfecha > " & ConvFecha(tt_regfecha) & _
        ") OR (regfecha = " & ConvFecha(tt_regfecha) & _
        " AND reghora >= '" & tt_reghora & "') )" & _
        " AND ( (regfecha < " & ConvFecha(fecha_hasta) & _
        ") OR (regfecha = " & ConvFecha(fecha_hasta) & _
        " AND reghora <= '" & hora_hasta & "') )"
        StrSql = StrSql & " AND regentsal = 'E'"
        StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
        'FGZ - 19/05/2010 ------------ Control FT -------------
        StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
        'FGZ - 19/05/2010 ------------ Control FT -------------
        StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
    
        ' Solo lectura
        OpenRecordset StrSql, rs
        
        If Not rs.EOF Then
            ' Esto quiere decir que falta encontrar una salida
            ' Tenemos
            ' |------E-------S------E-----|
            
            ' Acá tendria que ir buscandola desde a un incremento X hasta un maximo de 26 Horas
            Encontro = False
            Call BuscarRegistracionSalida(p_ternro, TamañoVentana, Iteraciones, fecha_desde, hora_hasta, fecha_hasta, hora_hasta, True, "2600", Encontro)
        Else
            If Cantidad = 1 Then
                'StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,entrada,evenro)" & _
                '" VALUES(" & tt_ternro & "," & ConvFecha(tt_regfecha) & ",'" & _
                'tt_reghora & "',0,2)"
                
                'FGZ - 30/09/2008 - esto estaba mal
                StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro)" & _
                " VALUES(" & tt_ternro & "," & ConvFecha(tt_regfecha) & ",'" & _
                tt_reghora & "'," & tt_regnro & _
                ",0,2)"
            Else
                'FGZ - 30/09/2008 - esto estaba mal
                'StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro)" & _
                '" VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'" & _
                'rs!reghora & "'," & rs!Regnro & _
                '",0,2)"
                
                StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro)" & _
                " VALUES(" & tt_ternro & "," & ConvFecha(tt_regfecha) & ",'" & _
                tt_reghora & "'," & tt_regnro & _
                ",0,2)"
            End If
            objConn.Execute StrSql, , adExecuteNoRecords
            
            
            'FGZ - 30/09/2008 - esto estaba mal
            'FGZ - 08/04/2008 - no estaba marcando la registracion
            'StrSql = "UPDATE gti_registracion SET regestado = 'L' " & _
            '" WHERE regnro = " & rs!Regnro
            StrSql = "UPDATE gti_registracion SET regestado = 'L' " & _
            " WHERE regnro = " & tt_regnro
            objConn.Execute StrSql, , adExecuteNoRecords
            
        End If
    End If
End If
'        If Not rs.EOF Then
'            Call buscar_max26(P_TerNro, rec_ent, rs!regfecha, rs!reghora, fecha_desde)
'            'return
'            GoTo CierroTodo
'        Else
'
'            If cantidad = 1 Then
'                StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,entrada,evenro)" & _
'                " VALUES(" & tt_ternro & "," & ConvFecha(tt_regfecha) & ",'" & _
'                tt_reghora & "',0,2)"
'
'            Else
'                StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro)" & _
'                " VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'" & _
'                rs!reghora & "'," & rs!Regnro & _
'                ",0,2)"
'
'            End If
'
'            objConn.Execute StrSql, , adExecuteNoRecords
'
'        End If
'    Else
'        Call buscar_max26(P_TerNro, rec_ent, rs!regfecha, rs!reghora, fecha_desde)
'
'    End If
'
'End If

CierroTodo:
If rs.State = adStateOpen Then rs.Close
Set rs = Nothing

End Sub


Private Sub buscar_max26(p_ternro As Long, rec_ent As Long, fecres As Date, horres As String, fecha_desde As Date)
Dim fecha_aux As Date
Dim hora_aux  As String

Dim rs As New ADODB.Recordset


fecha_aux = fecha_hasta
hora_aux = hora_hasta
Dim Hora As String
Dim Tope

           
'          run gtis1h01.p(per.gti_registracion.regfecha, hora, tope,
'                         output fecres, output horres).
'          /*** realiza la suma de 18 hs. ***/
    'Call objFechasHoras.SumoHoras(fecres, horres, "2600")
'          run pasarHr.p(horres, output horres, output ok).

    If Not objFechasHoras.ValidarHora(horres) Then
        Exit Sub
    End If

    fecha_hasta = fecres
    hora_hasta = horres

    StrSql = "SELECT * FROM gti_registracion " & _
    " WHERE ternro= " & p_ternro & _
    " AND ((regestado is null) OR (regestado = 'S'))" & _
    " AND regfecha >= " & ConvFecha(fecha_desde) & " AND regfecha <= " & _
    ConvFecha(fecha_hasta) & " AND regentsal = 'S'"
    StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
              
    ' Solo lectura
    rs.Open StrSql, objConn
    If Not rs.EOF Then
        rs.MoveLast
        If rec_ent = rs!Regnro Then
                StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro)" & _
                " VALUES(" & rs!Ternro & "," & ConvFecha(fecha_hasta) & ",'" & _
                hora_hasta & "'," & rs!Regnro & _
                ",0,2)"
        Else
                StrSql = "INSERT INTO " & TTempWFTurno & " (ternro,fecha,hora,regnro,entrada,evenro)" & _
                " VALUES(" & rs!Ternro & "," & ConvFecha(rs!regfecha) & ",'" & _
                rs!reghora & "'," & rs!Regnro & _
                ",0,2)"
        End If
        objConn.Execute StrSql, , adExecuteNoRecords
    End If

End Sub




Private Sub Politica540(thnro As Integer, Ternro As Long, Fecha As Date, Nro_Turno As Long, ByRef TotHor As Single)
' --------------------------------------------------------------
' Descripcion: Controla la cuenta corriente de horas extras y de acuerdo al limite mensual hace la conversion.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' --------------------------------------------------------------
Dim th50 As Integer
Dim th100 As Integer
Dim objRs As New ADODB.Recordset
Dim objrsCC As New ADODB.Recordset
Dim TotHorHHMM As String

    StrSql = "SELECT gti_config_tur_hora.thnro FROM gti_config_hora " & _
            " INNER JOIN gti_config_tur_hora ON gti_config_hora.conhornro = gti_config_tur_hora.conhornro " & _
            " WHERE gti_config_hora.conhornro = 1 AND gti_config_tur_hora.turnro =" & Nro_Turno
    OpenRecordset StrSql, objRs
    If Not objRs.EOF Then th50 = objRs!thnro
    
    StrSql = "SELECT gti_config_tur_hora.thnro FROM gti_config_hora " & _
            " INNER JOIN gti_config_tur_hora ON gti_config_hora.conhornro = gti_config_tur_hora.conhornro " & _
            " WHERE gti_config_hora.conhornro = 1 AND gti_config_tur_hora.turnro =" & Nro_Turno
    OpenRecordset StrSql, objRs
    If Not objRs.EOF Then th100 = objRs!thnro
    
    If (thnro = th50) Or (thnro = th100) Then

        StrSql = " SELECT  * FROM gti_ctacte_saldo WHERE tipccnro = 1 AND ternro = " & Ternro
        OpenRecordset StrSql, objrsCC
        If Not objrsCC.EOF Then
            StrSql = " SELECT * FROM tiphora WHERE tiphora.thnro = " & thnro
            OpenRecordset StrSql, objRs
            If objrsCC!saldoccvalor = 30 Then
                'Call ValidarTipoDeHora(objRs!thexcmes, nro_turno, tipo_hora)
                TotHorHHMM = CHoras(TotHor, 60)
                
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                         "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                         "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                         TotHorHHMM & "," & TotHor & "," & ConvFecha(Fecha) & ",' '," & ConvFecha(Fecha) & "," & ValorNulo & "," & _
                         ValorNulo & "," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                         ValorNulo & "," & Empleado.Ternro & "," & objRs!thexcmes & "," & Nro_Turno & "," & _
                         ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                         ValorNulo & "," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 4) & "  ==> Insertó: Tipo de Hora: " & objRs!thexcmes & "- Cantidad: " & TotHor & " hs."
                End If
                                
                TotHor = 0
                
            ElseIf objrsCC!saldoccvalor < 30 Then
            
                If (objrsCC!saldoccvalor + TotHor) > 30 Then
                    'Call ValidarTipoDeHora(objRs!thexcmes, nro_turno, tipo_hora)
                    TotHorHHMM = CHoras(objrsCC!saldoccvalor + TotHor - 30, 60)
                    
                    StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                         "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                         "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                         TotHorHHMM & "," & (objrsCC!saldoccvalor + TotHor - 30) & "," & ConvFecha(Fecha) & ",' '," & ConvFecha(Fecha) & "," & ValorNulo & "," & _
                         ValorNulo & "," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                         ValorNulo & "," & Empleado.Ternro & "," & objRs!thexcmes & "," & Nro_Turno & "," & _
                         ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                         ValorNulo & "," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 4) & "  ==> Insertó: Tipo de Hora: " & objRs!thexcmes & "- Cantidad: " & objrsCC!saldoccvalor + TotHor - 30 & " hs."
                    End If
                    TotHor = 30
                End If
            End If
        End If
    End If
    
End Sub





Public Sub Politica2000(NroProceso As Long, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' Descripcion: Exportación de Novedades de Liq.
'                1 - Estandar (a novemp. Pisa si ya existe)
'                2 - a Nexus (ExpoFrut)
'                3 - para Moño Azul
'                4 - Plasnavi
'                5 - RHProX2 (a novemp. suma si ya existe)
' Autor: ?
' Ultima modificacion: FGZ - 13/04/2004
' --------------------------------------------------------------
Dim Opcion  As Integer
Dim Tipo As Long
    
Call SetearParametrosPolitica(Detalle, ok)
If ok Then
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Version Configurable"
    End If
    
    Opcion = st_Opcion
    If IsNull(Opcion) Or Opcion = 0 Then
        Opcion = subn
    End If
    Tipo = IIf(Not EsNulo(st_TipoMotivo), st_TipoMotivo, 0) 'Tipo de motivo
    
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Version       : " & Opcion
        Flog.writeline Espacios(Tabulador * 3) & "Tipo de Motivo: " & Tipo
    End If
Else
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Version NO Configurable"
    End If
    Opcion = subn
End If
    
'Select Case subn
Select Case Opcion
    Case 1:
        Call Politica2000Standar(NroProceso)
    Case 2:
        Call Politica2000Expo(NroProceso)
    Case 3:
        Call Politica2000MAzul(NroProceso)
    Case 4:
        'Call Politica2000Plasnavi(NroProceso)
    Case 5:
         Call Politica2000RhproX2(NroProceso)
    Case 6:
         Call Politica2000ArchivoTXT(NroProceso) 'a pedido de CARGIL
    Case 7:
         Call Politica2000Bejerman(NroProceso) 'a pedido de AkzoNobel
    Case 8:
        Call Politica2000SGS(NroProceso, Detalle) 'EAM (5.08) - Genera el pasaje de novedades con distribución contable
    Case 9:
         Call Politica2000ArchivoTXTV2(NroProceso) 'CAS-22170 - CARGILL - Nueva Exportacion de Novedades GTI
    Case 10:   'Pisa Novedades con control de vigencia
        Call Politica2000StandarR4(NroProceso, Tipo)
    Case 11:
        Call Politica2000ArchivoCTM(NroProceso) 'CTM
End Select
End Sub

Public Sub Politica2000Expo(NroProceso As Long)
' --------------------------------------------------------------
' Descripcion: Exportación de Novedades de Liq.
' Autor: ?
' Ultima modificacion: FGZ - 30/07/2003
' CAT - 10/07/2008 - Nexus paso a Oracle
' --------------------------------------------------------------

Dim FechaDesde As Date
Dim FechaHasta As Date
Dim objConnNexus As New ADODB.Connection
Dim nroLote As Long
Dim rsAD As New ADODB.Recordset
Dim RsAsis As New ADODB.Recordset
Dim objrs_prim As New ADODB.Recordset
Dim objrs_pro As New ADODB.Recordset
Dim objrs_sap As New ADODB.Recordset
Dim strcmdLine As String
Dim FechaTemp As Date
Dim FDesde As Date
Dim FHasta As Date
Dim Cdias As Integer
Dim rs As New ADODB.Recordset
Dim Progreso As Single
Dim CEmpleadosAProc As Integer
Dim IncPorc As Single
Dim Usuario As String
Dim Fecha As String
Dim Hora As String
   
Const ForReading = 1
Dim f, fs
Dim strline As String
Dim pos1 As Integer
Dim pos2 As Integer
Dim Nombre_Arch As String
Dim strconexionExpo As String

    Set fs = CreateObject("Scripting.FileSystemObject")
    Nombre_Arch = App.Path & "\expoliq.ini"
    If fs.FileExists(Nombre_Arch) Then
        ' lo abro para leer la conexion
        Set f = fs.OpenTextFile(Nombre_Arch, ForReading, 0)
    Else
        ' No existe el archivo de acceso
        Flog.writeline "No existe el archivo " & Nombre_Arch & " que contiene el string de conección entre []."
        Exit Sub
    End If
    
   ' seteo del string de conexion
    If Not f.AtEndOfStream Then
        strline = f.ReadLine()
        pos1 = InStr(1, strline, "[") + 1
        pos2 = InStr(1, strline, "]")
        strconexionExpo = Mid(strline, pos1, pos2 - pos1)
    End If
        
    f.Close
    
'    OpenConnection "DSN=Nexushr-RHPro;database=nexushr;uid=nexushr;pwd=marchonico", objConnNexus
    OpenConnection strconexionExpo, objConnNexus
    Flog.writeline strconexionExpo
    MyBeginTrans
    
      'CAT 10/07/2008 Busco el Usuario que crear el proceso para guardarlo en Nexus
    StrSql = "SELECT iduser,bprcfecha, bprchora FROM batch_proceso WHERE bpronro = " & NroProceso
    OpenRecordsetRH StrSql, objrs_sap
    If Not objRs.EOF Then
        Usuario = objrs_sap!IdUser
        Fecha = objrs_sap!bprcfecha
        Hora = objrs_sap!bprchora
    Else
        Usuario = "No Encontrado"
        Fecha = ""
        Hora = ""
    End If
    Flog.writeline "Usuario: " & Usuario
    Flog.writeline "Fecha: " & Fecha
    Flog.writeline "Hora: " & Hora

    
    
    StrSql = " SELECT MIN( gti_Procacum.gpadesde) AS desde," & _
             "        MAX( gti_Procacum.gpahasta) AS hasta" & _
             " FROM   batch_proceso " & _
             " INNER JOIN Batch_Procacum ON Batch_Procacum.bpronro = batch_proceso.bpronro " & _
             " INNER JOIN gti_Procacum   ON Batch_Procacum.gpanro  = gti_Procacum.gpanro " & _
             " WHERE batch_proceso.bpronro = " & NroProceso
    OpenRecordsetRH StrSql, objrs_prim
    
' si està vacio salgo y grabo el estado en el batch_proceso a estado "Sin Datos"
' ---- FGZ 08/04/03
    If objrs_prim.RecordCount = 0 Then
        StrSql = "UPDATE batch_proceso SET bprcestado = 'Sin Datos' WHERE bpronro = " & NroProceso
        objConn.Execute StrSql, , adExecuteNoRecords
        Exit Sub
    End If
' ----
    
    If Not objrs_prim.EOF Then
      FechaDesde = objrs_prim!Desde
      FechaHasta = objrs_prim!Hasta
    End If
' Como se pueden indicar varios procesos de acumulacion en este proceso batch, se recupera
' la menor y mayor de todas las fechas involucradas. O.D.A. 29/07/2003


    StrSql = "INSERT INTO expo_Lotes(gene_cpto,gene_asis,gene_suce,tran_cpto,tran_asis,tran_suce,gene_usua,gene_hora,gene_fech,fec_des,fec_has,nro_leg_desde,nro_leg_hasta,batch_finalizada) VALUES ("
    StrSql = StrSql & "'Si','Si','Si','No','No','No','" & Usuario & "',null," & ConvFecha(Fecha) & "," & ConvFecha(FechaDesde) & "," & ConvFecha(FechaHasta) & ",null,null,null)"
    objConnNexus.Execute StrSql, , adExecuteNoRecords
    
    ' 22/07/03 FGZ
    nroLote = getLastIdentityExpo(objConnNexus, "expo_Lotes")
    
    StrSql = " SELECT gti_Procacum.gpadesde," & _
             "        gti_Procacum.gpahasta," & _
             "        Batch_Procacum.gpanro," & _
             "        batch_proceso.bpronro," & _
             "        batch_proceso.iduser" & _
             " FROM   batch_proceso " & _
             " INNER JOIN Batch_Procacum ON Batch_Procacum.bpronro = batch_proceso.bpronro " & _
             " INNER JOIN gti_Procacum   ON Batch_Procacum.gpanro  = gti_Procacum.gpanro " & _
             " WHERE batch_proceso.bpronro = " & NroProceso
    OpenRecordsetRH StrSql, objrs_pro
' Se vuelve a armar el SELECT original. O.D.A. 29/07/2003


    ' ------------------------------------------------------------------------
    ' FGZ 30/07/2003
    ' el valor de la columna APLIC_ORIG debería ser la estructura actual de tipo 36 (Centro de empaque)
    ' de cualquiera de los empleados incluidos en el proceso de acumulacion
    ' (GTI_ACUNOV con el GPANRO que corresponde) en lugar de tomar el valor de la estructura 36 del usuario
    '
    ' Así estaba:
    
    'StrSql = "SELECT estructura.estrdabr,estructura.estrcodext FROM usupuedever "
    'StrSql = StrSql & " INNER JOIN estructura ON usupuedever.estrnro = estructura.estrnro AND estructura.tenro = 36 "
    'StrSql = StrSql & " WHERE usupuedever.iduser = '" & objrs_pro!IdUser & "'"
    'OpenRecordsetRH StrSql, objRs
    
    ' StrSql = "INSERT INTO expo_Lotes_batch(nro_lote,aplic_orig) VALUES (" & nroLote & ",'" & objRs!estrcodext & "')"
    ' objConnNexus.Execute StrSql, , adExecuteNoRecords
    '
    '
    ' y yo agregué:
    ' FGZ - 04/08/2003
    ' Cambio estruc_actual por His_estructura
    StrSql = " SELECT estructura.estrdabr, estructura.estrcodext FROM gti_acunov " & _
         " INNER JOIN his_estructura ON his_estructura.ternro = gti_acunov.ternro " & _
         " INNER JOIN estructura ON his_estructura.estrnro = estructura.estrnro AND estructura.tenro = 36 " & _
         " WHERE gti_acunov.gpanro = " & objrs_pro!gpanro & " AND his_estructura.htethasta IS NULL "
    OpenRecordsetRH StrSql, objRs
    
  ' FGZ 30/07/2003
  ' -----------------------------------------------------------------
  
    StrSql = "INSERT INTO expo_Lotes_batch(nro_lote,aplic_orig) VALUES (" & nroLote & ",'" & objRs!estrcodext & "')"
    objConnNexus.Execute StrSql, , adExecuteNoRecords
    
' Seteo las variables de progreso
    CEmpleadosAProc = objrs_pro.RecordCount
    IncPorc = (100 / CEmpleadosAProc)
    Progreso = 0

Do While Not objrs_pro.EOF
    FechaDesde = objrs_pro!gpadesde
    FechaHasta = objrs_pro!gpahasta
' Se setean las fechas correspondientes al proceso de acumulacion que se considera en esta
' vuelta del ciclo. O.D.A. 29/07/2003

    StrSql = " SELECT substr(concepto.ConcCod,1,4) conccod,concepto.tconnro,concepto.concnro,empleado.ternro,empleado.empleg,gti_acunov.acnovvalor,gti_acunov.gpanro FROM gti_procacum " & _
             " INNER JOIN gti_acunov ON gti_acunov.gpanro = gti_procacum.gpanro " & _
             " INNER JOIN empleado ON empleado.ternro = gti_acunov.ternro " & _
             " INNER JOIN batch_empleado on batch_empleado.ternro = gti_acunov.ternro " & _
             " AND batch_empleado.bpronro = " & NroProceso & _
             " INNER JOIN Concepto ON Concepto.concnro = gti_acunov.concnro " & _
             " WHERE (gti_acunov.gpanro = " & objrs_pro!gpanro & " )" & _
             " ORDER BY substr(concepto.ConcCod,1,4) "
' Agregué el ordenamiento por concepto, para hacer predecible el orden en que se realizan
' las inserciones o actualizaciones. O.D.A. 07/03/2003
' Se toman solo los primeros 4 caracteres del código de los conceptos, ya que existen
' distintas versiones en RHPro que difieren a partir de la 5ta. posición, y que deben
' pasar como un mismo código al liquidador (Feriado Nacional: 0063 y 0063jh).
' O.D.A. 08/04/2003.
' Faltaba el "[1,4]" en el ORDER BY.

    OpenRecordsetRH StrSql, objRs
    
'Flog.writeline Espacios(Tabulador * 2) & "Inicio :" & objrs_pro!gpanro
    
    Do While Not objRs.EOF
        Select Case objRs!tconnro
        Case 1 'Conceptos

          Select Case objRs!conccod
          Case "0055":  'Credito al 100%
                    
'Verifico la existencia de un crédito
            StrSql = "SELECT * FROM expo_Cpto_externo WHERE nro_lote = " & nroLote & _
                     " AND nro_leg = " & objRs!empleg & _
                     " AND tipo_liq = 'MENS' AND cod_cpto = '0054'"
            OpenRecordsetNexus objConnNexus, StrSql, rs
                    
            If rs.EOF Then   'Si no existe
              StrSql = "INSERT INTO expo_Cpto_externo(nro_Leg,tipo_liq,cod_cpto,fec_concepto,fec_activ,fec_vto,valor_base," & _
                       "cantidad,porcentaje,importe_final,centro_costo,nro_lote,nro_correlativo) VALUES (" & _
                       objRs!empleg & ",'MENS','0054'," & ConvFecha(FechaHasta) & "," & ConvFecha(FechaHasta) & "," & ConvFecha(FechaHasta) & _
                       ",null,0," & objRs!acnovvalor & ",null,null," & nroLote & ",null)"
            Else             'Si ya existe (uno al 50%) actualizo el campo porcentaje
              StrSql = "UPDATE expo_Cpto_externo SET porcentaje = " & objRs!acnovvalor & _
                       "WHERE nro_lote = " & nroLote & _
                       " AND nro_leg = " & objRs!empleg & _
                       " AND tipo_liq = 'MENS' AND cod_cpto = '0054'"
            End If
  
          Case "0054": 'Credito al 50%

'Verifico la existencia de un crédito
            StrSql = "SELECT * FROM expo_Cpto_externo WHERE nro_lote = " & nroLote & _
                     " AND nro_leg = " & objRs!empleg & _
                     " AND tipo_liq = 'MENS' AND cod_cpto = '0054'"
            OpenRecordsetNexus objConnNexus, StrSql, rs
                    
            If rs.EOF Then
              StrSql = "INSERT INTO expo_Cpto_externo(nro_Leg,tipo_liq,cod_cpto,fec_concepto,fec_activ,fec_vto,valor_base," & _
                       "cantidad,porcentaje,importe_final,centro_costo,nro_lote,nro_correlativo) VALUES (" & _
                       objRs!empleg & ",'MENS','" & objRs!conccod & "'," & ConvFecha(FechaHasta) & "," & ConvFecha(FechaHasta) & "," & ConvFecha(FechaHasta) & _
                       ",null," & objRs!acnovvalor & ",0,null,null," & nroLote & ",null)"
            Else
              StrSql = "UPDATE expo_Cpto_externo SET cantidad = cantidad + " & objRs!acnovvalor & _
                       "WHERE nro_lote = " & nroLote & _
                       " AND nro_leg = " & objRs!empleg & _
                       " AND tipo_liq = 'MENS' AND cod_cpto = '0054'"
            End If

          Case Else  'Otros casos que no sean créditos
            StrSql = "SELECT * FROM expo_Cpto_externo WHERE nro_lote = " & nroLote & _
                     " AND nro_leg = " & objRs!empleg & _
                     " AND tipo_liq = 'MENS' AND cod_cpto = '" & objRs!conccod & "'"
            OpenRecordsetNexus objConnNexus, StrSql, rs
            
            If rs.EOF Then
                StrSql = "INSERT INTO expo_Cpto_externo(nro_Leg,tipo_liq,cod_cpto,fec_concepto,fec_activ,fec_vto,valor_base," & _
                         "cantidad,porcentaje,importe_final,centro_costo,nro_lote,nro_correlativo) VALUES (" & _
                         objRs!empleg & ",'MENS','" & objRs!conccod & "'," & ConvFecha(FechaHasta) & "," & ConvFecha(FechaHasta) & "," & ConvFecha(FechaHasta) & _
                         ",null," & objRs!acnovvalor & ",0,null,null," & nroLote & ",null)"
            Else
              StrSql = "UPDATE expo_Cpto_externo SET cantidad = cantidad + " & objRs!acnovvalor & _
                       "WHERE nro_lote = " & nroLote & _
                       " AND nro_leg = " & objRs!empleg & _
                       " AND tipo_liq = 'MENS' AND cod_cpto = '" & objRs!conccod & "'"
            End If
          End Select
                
          objConnNexus.Execute StrSql, , adExecuteNoRecords
          If rs.State = adStateOpen Then rs.Close
' Si el codigo del concepto es el "0055" Creditos al 100% en el RHpro, los debe
' insertar en la columna de porcentaje del concepto de credito al 50% "0054" del NexusHR.
' Caso contrario, escribe normalmente.
            
                
        Case 15 'Asistencias
          StrSql = " SELECT * FROM gti_acumdiario " & _
                   " INNER JOIN gti_cab ON gti_cab.ternro = gti_acumdiario.ternro " & _
                   " INNER JOIN gti_det ON gti_det.cgtinro = gti_cab.cgtinro and gti_det.thnro = gti_acumdiario.thnro " & _
                   " INNER JOIN tiph_con on tiph_con.thnro = gti_det.thnro" & _
                   " WHERE tiph_con.concnro = " & objRs!Concnro & " AND " & _
                   " gti_acumdiario.ternro = " & objRs!Ternro & _
                   " AND gti_cab.gpanro = " & objRs!gpanro & _
                   " AND adFecha >= " & ConvFecha(FechaDesde) & _
                   " AND adfecha <= " & ConvFecha(FechaHasta) & _
                   " ORDER BY adFecha ASC"
          OpenRecordsetRH StrSql, rsAD
                
          Do While Not rsAD.EOF
            StrSql = "SELECT * FROM expo_Asis_externa " & _
                     " WHERE periodo_pago = '" & Format(FechaDesde, "YYYYMM") & "' " & _
                     " AND   nro_leg      = " & objRs!empleg & _
                     " AND   dia_desde    = " & Day(rsAD!adfecha) & _
                     " AND nro_lote = " & nroLote
            OpenRecordsetNexus objConnNexus, StrSql, rs
            
            If rs.EOF Then
              StrSql = "INSERT INTO expo_Asis_externa(" & _
                       " Periodo_pago, nro_leg, dia_desde, dia_hasta, estado, nro_lote, nro_correlativo) " & _
                       " VALUES( " & _
                       "'" & Format(FechaDesde, "YYYYMM") & "'," & _
                       objRs!empleg & "," & _
                       Day(rsAD!adfecha) & "," & _
                       Day(rsAD!adfecha) & ",'" & _
                       objRs!conccod & "'," & _
                       nroLote & ",null)"
              objConnNexus.Execute StrSql, , adExecuteNoRecords
            End If
            
            rsAD.MoveNext
          Loop

        Case 16 'Sucesos
          If objRs!conccod <> "SUSF" Then
            StrSql = " SELECT * FROM gti_acumdiario " & _
                     " INNER JOIN gti_cab ON gti_cab.ternro = gti_acumdiario.ternro " & _
                     " INNER JOIN gti_det ON gti_det.cgtinro = gti_cab.cgtinro and gti_det.thnro = gti_acumdiario.thnro " & _
                     " INNER JOIN tiph_con on tiph_con.thnro = gti_det.thnro" & _
                     " WHERE tiph_con.concnro = " & objRs!Concnro & " AND " & _
                     " gti_acumdiario.ternro = " & objRs!Ternro & _
                     " AND gti_cab.gpanro = " & objRs!gpanro & _
                     " AND adFecha >= " & ConvFecha(FechaDesde) & _
                     " AND adfecha <= " & ConvFecha(FechaHasta) & _
                     " ORDER BY adFecha ASC"
            OpenRecordsetRH StrSql, rsAD
                
            Do While Not rsAD.EOF
              StrSql = "INSERT INTO expo_Suce_externa(Periodo_pago,nro_leg,dia,cod_suceso,cantidad,horario,nro_lote,nro_correlativo) VALUES (" & _
                       "'" & Format(FechaDesde, "YYYYMM") & "'," & objRs!empleg & ",'" & Format(rsAD!adfecha, "DD") & "','" & objRs!conccod & "'," & rsAD!adcanthoras * 60 & ", Null," & nroLote & ", Null)"
              objConnNexus.Execute StrSql, , adExecuteNoRecords
              rsAD.MoveNext
            Loop
          End If
        End Select
        objRs.MoveNext
        Progreso = Progreso + 1
        'Debug.Print Progreso
    Loop
    
    
   ' Actualizar el progreso
   Progreso = Progreso + IncPorc
   StrSql = "UPDATE batch_proceso SET bprcprogreso = " & CInt(Progreso) & " WHERE bpronro = " & NroProceso
   objConnProgreso.Execute StrSql, , adExecuteNoRecords

        
  objrs_pro.MoveNext
Loop
MyCommitTrans
    
'Cierro y libero
If rs.State = adStateOpen Then rs.Close
If rsAD.State = adStateOpen Then rsAD.Close
If RsAsis.State = adStateOpen Then RsAsis.Close
If objrs_prim.State = adStateOpen Then objrs_prim.Close
If objrs_pro.State = adStateOpen Then objrs_pro.Close
If objRs.State = adStateOpen Then objRs.Close

Set rs = Nothing
Set rsAD = Nothing
Set RsAsis = Nothing
Set objrs_prim = Nothing
Set objrs_pro = Nothing
Set objRs = Nothing

Set objConnNexus = Nothing
    
End Sub



Public Sub Politica2000Schneider(NroProceso As Long)
' --------------------------------------------------------------
' Descripcion: Exportación de Novedades de Liq.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' --------------------------------------------------------------

Dim FechaDesde As Date
Dim FechaHasta As Date
Dim objConnNexus As New ADODB.Connection
Dim nroLote As Long
Dim rsAD As New ADODB.Recordset
Dim RsAsis As New ADODB.Recordset
Dim objrs_pro As New ADODB.Recordset
Dim strcmdLine As String
Dim FechaTemp As Date
Dim FDesde As Date
Dim FHasta As Date
Dim Cdias As Integer
Dim rs As New ADODB.Recordset
Dim Progreso As Single
Dim CEmpleadosAProc As Integer
Dim IncPorc As Single

Dim loRs
   
    OpenConnection "DSN=Nexushr-RHPro", objConnNexus
        
    MyBeginTrans
    
    StrSql = " SELECT gpadesde,gpahasta,Batch_Procacum.gpanro,batch_proceso.bpronro,batch_proceso.iduser" & _
             " From batch_proceso " & _
             " INNER JOIN Batch_Procacum ON Batch_Procacum.bpronro = batch_proceso.bpronro " & _
             " INNER JOIN gti_Procacum ON Batch_Procacum.gpanro = gti_Procacum.gpanro " & _
             " Where batch_proceso.bpronro = " & NroProceso
    OpenRecordsetRH StrSql, objrs_pro
    
' si està vacio salgo y grabo el estado en el batch_proceso a estado "Sin Datos"
' ---- FGZ 08/04/03
    If objrs_pro.RecordCount = 0 Then
            
        StrSql = "UPDATE batch_proceso SET bprcestado = 'Sin Datos' WHERE bpronro = " & NroProceso
        objConn.Execute StrSql, , adExecuteNoRecords
    
        Exit Sub
    End If
' ----

    If Not objrs_pro.EOF Then
        FechaDesde = objrs_pro!gpadesde
        FechaHasta = objrs_pro!gpahasta
    End If
    
    
    ' Estaba esto hasta el 20/05/2003
    'StrSql = "INSERT INTO expo_Lotes(gene_cpto,gene_asis,gene_suce,tran_cpto,tran_asis,tran_suce,gene_usua,gene_hora,gene_fech,fec_des,fec_has,nro_leg_desde,nro_leg_hasta,batch_finalizada) VALUES ("
    'StrSql = StrSql & "'Si','Si','Si','No','No','No',null,null,null," & ConvFecha(fechaDesde) & "," & ConvFecha(fechaHasta) & ",null,null,null)"
    'objConnNexus.Execute StrSql, , adExecuteNoRecords
    
    'nroLote = getLastIdentity(objConnNexus, "expo_Lotes")
    ' ------------------
    
    ' FGZ 20/05/2003 ------------------
    ' Puse esto y funciona bien para SQL server 2000
    StrSql = "INSERT INTO expo_Lotes(gene_cpto,gene_asis,gene_suce,tran_cpto,tran_asis,tran_suce,gene_usua,gene_hora,gene_fech,fec_des,fec_has,nro_leg_desde,nro_leg_hasta,batch_finalizada) VALUES ("
    StrSql = StrSql & "'Si','Si','Si','No','No','No',null,null,null," & ConvFecha(FechaDesde) & "," & ConvFecha(FechaHasta) & ",null,null,null)"
    objConnNexus.Execute (StrSql)
    
    StrSql = "SELECT @@IDENTITY AS NewID"
    Set loRs = objConnNexus.Execute(StrSql)
    nroLote = loRs.Fields("NewID").Value
    loRs.Close
    Set loRs = Nothing
    ' -----------------------------------------------------
            
        
    StrSql = "SELECT estructura.estrdabr,estructura.estrcodext FROM usupuedever "
    StrSql = StrSql & " INNER JOIN estructura ON usupuedever.estrnro = estructura.estrnro AND estructura.tenro = 36 "
    StrSql = StrSql & " WHERE usupuedever.iduser = '" & objrs_pro!IdUser & "'"
    OpenRecordsetRH StrSql, objRs
    
    
    StrSql = "INSERT INTO expo_Lotes_batch(nro_lote,aplic_orig) VALUES (" & nroLote & ",'" & objRs!estrcodext & "')"
    objConnNexus.Execute StrSql, , adExecuteNoRecords
    
' Seteo las variables de progreso
CEmpleadosAProc = objrs_pro.RecordCount
IncPorc = (100 / CEmpleadosAProc)
Progreso = 0
    
    
Do While Not objrs_pro.EOF
    
    StrSql = " SELECT concepto.ConcCod[1,4],concepto.tconnro,concepto.concnro,empleado.ternro,empleado.empleg,gti_acunov.acnovvalor,gti_acunov.gpanro FROM gti_procacum " & _
             " INNER JOIN gti_acunov ON gti_acunov.gpanro = gti_procacum.gpanro " & _
             " INNER JOIN empleado ON empleado.ternro = gti_acunov.ternro " & _
             " INNER JOIN batch_empleado on batch_empleado.ternro = gti_acunov.ternro " & _
             " AND batch_empleado.bpronro = " & NroProceso & _
             " INNER JOIN Concepto ON Concepto.concnro = gti_acunov.concnro " & _
             " WHERE (gti_acunov.gpanro = " & objrs_pro!gpanro & " )" & _
             " ORDER BY ConcCod[1,4] "
' Agregué el ordenamiento por concepto, para hacer predecible el orden en que se realizan
' las inserciones o actualizaciones. O.D.A. 07/03/2003
' Se toman solo los primeros 4 caracteres del código de los conceptos, ya que existen
' distintas versiones en RHPro que difieren a partir de la 5ta. posición, y que deben
' pasar como un mismo código al liquidador (Feriado Nacional: 0063 y 0063jh).
' O.D.A. 08/04/2003.
' Faltaba el "[1,4]" en el ORDER BY.

    OpenRecordsetRH StrSql, objRs
    
'Flog.writeline Espacios(Tabulador * 2) & "Inicio :" & objrs_pro!gpanro
    
    Do While Not objRs.EOF
        Select Case objRs!tconnro
        Case 1 'Conceptos

          Select Case objRs!conccod
          Case "0055":  'Credito al 100%
                    
'Verifico la existencia de un crédito
            StrSql = "SELECT * FROM expo_Cpto_externo WHERE nro_lote = " & nroLote & _
                     " AND nro_leg = " & objRs!empleg & _
                     " AND tipo_liq = 'MENS' AND cod_cpto = '0054'"
            OpenRecordset StrSql, rs
                    
            If rs.EOF Then   'Si no existe
              StrSql = "INSERT INTO expo_Cpto_externo(nro_Leg,tipo_liq,cod_cpto,fec_concepto,fec_activ,fec_vto,valor_base," & _
                       "cantidad,porcentaje,importe_final,centro_costo,nro_lote,nro_correlativo) VALUES (" & _
                       objRs!empleg & ",'MENS','0054'," & ConvFecha(FechaHasta) & "," & ConvFecha(FechaHasta) & "," & ConvFecha(FechaHasta) & _
                       ",null,0," & objRs!acnovvalor & ",null,null," & nroLote & ",null)"
            Else             'Si ya existe (uno al 50%) actualizo el campo porcentaje
              StrSql = "UPDATE expo_Cpto_externo SET porcentaje = " & objRs!acnovvalor & _
                       "WHERE nro_lote = " & nroLote & _
                       " AND nro_leg = " & objRs!empleg & _
                       " AND tipo_liq = 'MENS' AND cod_cpto = '0054'"
            End If
  
          Case "0054": 'Credito al 50%

'Verifico la existencia de un crédito
            StrSql = "SELECT * FROM expo_Cpto_externo WHERE nro_lote = " & nroLote & _
                     " AND nro_leg = " & objRs!empleg & _
                     " AND tipo_liq = 'MENS' AND cod_cpto = '0054'"
            OpenRecordset StrSql, rs
                    
            If rs.EOF Then
              StrSql = "INSERT INTO expo_Cpto_externo(nro_Leg,tipo_liq,cod_cpto,fec_concepto,fec_activ,fec_vto,valor_base," & _
                       "cantidad,porcentaje,importe_final,centro_costo,nro_lote,nro_correlativo) VALUES (" & _
                       objRs!empleg & ",'MENS','" & objRs!conccod & "'," & ConvFecha(FechaHasta) & "," & ConvFecha(FechaHasta) & "," & ConvFecha(FechaHasta) & _
                       ",null," & objRs!acnovvalor & ",0,null,null," & nroLote & ",null)"
            Else
              StrSql = "UPDATE expo_Cpto_externo SET cantidad = " & objRs!acnovvalor & _
                       "WHERE nro_lote = " & nroLote & _
                       " AND nro_leg = " & objRs!empleg & _
                       " AND tipo_liq = 'MENS' AND cod_cpto = '0054'"
            End If

          Case Else  'Otros casos que no sean créditos
            StrSql = "SELECT * FROM expo_Cpto_externo WHERE nro_lote = " & nroLote & _
                     " AND nro_leg = " & objRs!empleg & _
                     " AND tipo_liq = 'MENS' AND cod_cpto = '0054'"
            OpenRecordset StrSql, rs
            
            If rs.EOF Then
                StrSql = "INSERT INTO expo_Cpto_externo(nro_Leg,tipo_liq,cod_cpto,fec_concepto,fec_activ,fec_vto,valor_base," & _
                         "cantidad,porcentaje,importe_final,centro_costo,nro_lote,nro_correlativo) VALUES (" & _
                         objRs!empleg & ",'MENS','" & objRs!conccod & "'," & ConvFecha(FechaHasta) & "," & ConvFecha(FechaHasta) & "," & ConvFecha(FechaHasta) & _
                         ",null," & objRs!acnovvalor & ",0,null,null," & nroLote & ",null)"
            Else
              StrSql = "UPDATE expo_Cpto_externo SET cantidad = " & objRs!acnovvalor & _
                       "WHERE nro_lote = " & nroLote & _
                       " AND nro_leg = " & objRs!empleg & _
                       " AND tipo_liq = 'MENS' AND cod_cpto = " & objRs!conccod
            End If
          End Select
                
          objConnNexus.Execute StrSql, , adExecuteNoRecords
          If rs.State = adStateOpen Then rs.Close
' Si el codigo del concepto es el "0055" Creditos al 100% en el RHpro, los debe
' insertar en la columna de porcentaje del concepto de credito al 50% "0054" del NexusHR.
' Caso contrario, escribe normalmente.
            
                
        Case 15 'Asistencias
          StrSql = " SELECT * FROM gti_acumdiario " & _
                   " INNER JOIN gti_cab ON gti_cab.ternro = gti_acumdiario.ternro " & _
                   " INNER JOIN gti_det ON gti_det.cgtinro = gti_cab.cgtinro and gti_det.thnro = gti_acumdiario.thnro " & _
                   " INNER JOIN tiph_con on tiph_con.thnro = gti_det.thnro" & _
                   " WHERE tiph_con.concnro = " & objRs!Concnro & " AND " & _
                   " gti_acumdiario.ternro = " & objRs!Ternro & _
                   " AND gti_cab.gpanro = " & objRs!gpanro & _
                   " AND adFecha >= " & ConvFecha(FechaDesde) & _
                   " AND adfecha <= " & ConvFecha(FechaHasta) & _
                   " ORDER BY adFecha ASC"
          OpenRecordsetRH StrSql, rsAD
                
          Do While Not rsAD.EOF
            StrSql = "INSERT INTO expo_Asis_externa(Periodo_pago,nro_leg,dia_desde,dia_hasta,estado,nro_lote,nro_correlativo) VALUES (" & _
                     "'" & Format(FechaDesde, "YYYYMM") & "'," & objRs!empleg & "," & Day(rsAD!adfecha) & "," & Day(rsAD!adfecha) & ",'" & objRs!conccod & "'," & nroLote & ",null)"
            objConnNexus.Execute StrSql, , adExecuteNoRecords
            rsAD.MoveNext
          Loop

        Case 16 'Sucesos
          If objRs!conccod <> "SUSF" Then
            StrSql = " SELECT * FROM gti_acumdiario " & _
                     " INNER JOIN gti_cab ON gti_cab.ternro = gti_acumdiario.ternro " & _
                     " INNER JOIN gti_det ON gti_det.cgtinro = gti_cab.cgtinro and gti_det.thnro = gti_acumdiario.thnro " & _
                     " INNER JOIN tiph_con on tiph_con.thnro = gti_det.thnro" & _
                     " WHERE tiph_con.concnro = " & objRs!Concnro & " AND " & _
                     " gti_acumdiario.ternro = " & objRs!Ternro & _
                     " AND gti_cab.gpanro = " & objRs!gpanro & _
                     " AND adFecha >= " & ConvFecha(FechaDesde) & _
                     " AND adfecha <= " & ConvFecha(FechaHasta) & _
                     " ORDER BY adFecha ASC"
            OpenRecordsetRH StrSql, rsAD
                
            Do While Not rsAD.EOF
              StrSql = "INSERT INTO expo_Suce_externa(Periodo_pago,nro_leg,dia,cod_suceso,cantidad,horario,nro_lote,nro_correlativo) VALUES (" & _
                       "'" & Format(FechaDesde, "YYYYMM") & "'," & objRs!empleg & ",'" & Format(rsAD!adfecha, "DD") & "','" & objRs!conccod & "'," & rsAD!adcanthoras * 60 & ", Null," & nroLote & ", Null)"
              objConnNexus.Execute StrSql, , adExecuteNoRecords
              rsAD.MoveNext
            Loop
          End If
        End Select
        objRs.MoveNext
        Progreso = Progreso + 1
        'Debug.Print Progreso
    Loop
    
    
      'Actualizo el progreso
    Progreso = Progreso + IncPorc
    StrSql = "UPDATE batch_proceso SET bprcprogreso = " & CInt(Progreso) & " WHERE bpronro = " & NroProceso
    objConn.Execute StrSql, , adExecuteNoRecords
      
  objrs_pro.MoveNext
Loop
    
    
    MyCommitTrans
End Sub


Public Sub Politica2000ArchivoTXT(ByVal NroProceso As Long)
' --------------------------------------------------------------
' Descripcion: Exportación de Novedades de gti a texto.
' Autor: FGZ - 14/10/2008
' Ultima modificacion: Nombre del txt a generar
' --------------------------------------------------------------
'Columna        Tamaño  Descripcion Ejemplo
'Tipo           2       Si el empleado es Mensual va  01 sino 10. Se podria utilizar el codigo externo de la estructura. El tipo de Estructura a utilizar es la 22 - Forma de Liquidacion   10
'Legajo         6       Legajo del Empleado (emplego.empleg), si el legajo tiene menos de 6 digitos completar con 0s a la izquierda 000123
'Desde          6       Fecha desde Formato DDMMYY(sin la barra). Fecha desde el Proceso de Acumulacion seleccionado    250508
'Hasta          6       Fecha Hasta. Formato DDMMYY(sin la barra). Fecha hasta el Proceso de Acumulacion seleccionado   281208
'Concepto       10      Codigo de Concepto (concepto.conccod), si el Codigo de Concepto tiene menos de 10 digitos completar con 0s a la izquierda   0000001100
'ValorEntero    9       Parte entera del valor  de la novedad GTI (OJO NO USAR REDONDEO) si el Codigo de Concepto tiene menos de 9 digitos completar con 0s a la izquierda  000123456
'ValorDecimal   2       Parte decimal del valor  de la novedad GTI. Si la parte decimal tiene menos de 2 digitos completar con 0s a la derecha  55
'Signo          1       + para positivo y - para negrativo  -
'CaracterU      1       Letra U     U
' --------------------------------------------------------------
Dim nroModelo As Long
Dim Directorio As String
Dim Carpeta
Dim Nombre_Arch As String
Dim FS1
Dim ArchExp
Dim separador As String

Dim fecha_desde As Date
Dim fecha_hasta As Date
Dim Numero
Dim Parte_Entera
Dim Parte_Decimal

Dim GLiq As String
Dim Sucursal As String
Dim Existe As Boolean
Dim Copia As Long
Dim Proceso As Long

Dim rs_Modelo As New ADODB.Recordset
Dim rs_Nov As New ADODB.Recordset
Dim rs_Pro As New ADODB.Recordset
Dim rs As New ADODB.Recordset
Dim rs_Est As New ADODB.Recordset

    On Error GoTo ME_Local
    nroModelo = 919
    
    'Directorio de exportacion
    StrSql = "SELECT sis_dirsalidas FROM sistema WHERE sisnro = 1 "
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        Directorio = Trim(rs!sis_dirsalidas)
    End If
     
    StrSql = "SELECT * FROM modelo WHERE modnro = " & nroModelo
    OpenRecordset StrSql, rs_Modelo
    If Not rs_Modelo.EOF Then
        If Not IsNull(rs_Modelo!modarchdefault) Then
            Directorio = Directorio & Trim(rs_Modelo!modarchdefault)
        Else
            Flog.writeline Espacios(Tabulador * 1) & "El modelo no tiene configurada la carpeta desteino. El archivo será generado en el directorio default"
        End If
    Else
        Flog.writeline Espacios(Tabulador * 1) & "No se encontró el modelo " & nroModelo & ". El archivo será generado en el directorio default"
    End If
    Flog.writeline
    '------------------------------------------------------------------------------------------------------------------------
    
    
    'Creo el archivo txt
    StrSql = " SELECT gpadesde,gpahasta,Batch_Procacum.gpanro "
    StrSql = StrSql & " FROM batch_proceso "
    StrSql = StrSql & " INNER JOIN Batch_Procacum ON Batch_Procacum.bpronro = batch_proceso.bpronro "
    StrSql = StrSql & " INNER JOIN gti_Procacum ON Batch_Procacum.gpanro = gti_Procacum.gpanro "
    StrSql = StrSql & " WHERE batch_proceso.bpronro = " & NroProceso
    OpenRecordset StrSql, rs_Pro
    If rs_Pro.EOF Then
        Flog.writeline Espacios(Tabulador * 1) & "No se encontró ningun proceso para exportar"
        Exit Sub
    Else
        Proceso = rs_Pro!gpanro
        fecha_desde = rs_Pro!gpadesde
        fecha_hasta = rs_Pro!gpahasta
    End If
   
    StrSql = " SELECT e1.estrcodext ext1, e2.estrcodext ext2 "
    StrSql = StrSql & " FROM gti_procacum"
    StrSql = StrSql & " INNER JOIN gti_acunov ON gti_acunov.gpanro = gti_procacum.gpanro"
    StrSql = StrSql & " INNER JOIN empleado ON empleado.ternro = gti_acunov.ternro"
    StrSql = StrSql & " LEFT JOIN his_estructura h1 ON empleado.ternro = h1.ternro AND h1.tenro = 32"
    StrSql = StrSql & " LEFT JOIN estructura e1 ON h1.estrnro = e1.estrnro "
    StrSql = StrSql & " LEFT JOIN his_estructura h2 ON empleado.ternro = h2.ternro AND h2.tenro = 1"
    StrSql = StrSql & " LEFT JOIN estructura e2 ON h2.estrnro = e2.estrnro "
    StrSql = StrSql & " WHERE (gti_acunov.gpanro = " & Proceso & ")"
    StrSql = StrSql & " AND (h1.htetdesde <= " & ConvFecha(fecha_hasta) & ") AND "
    StrSql = StrSql & " ((" & ConvFecha(fecha_hasta) & " <= h1.htethasta) or (h1.htethasta is null))"
    StrSql = StrSql & " AND (h2.htetdesde <= " & ConvFecha(fecha_hasta) & ") AND "
    StrSql = StrSql & " ((" & ConvFecha(fecha_hasta) & " <= h2.htethasta) or (h2.htethasta is null))"
    OpenRecordset StrSql, rs
    If rs.EOF Then
        Flog.writeline Espacios(Tabulador * 2) & "No se pudo encontrar planta y/o Grupo de Liquidacion"
        Flog.writeline Espacios(Tabulador * 2) & "No se pudo crear el archivo. Exportación Abortada."
        Exit Sub
    Else
        If Not EsNulo(rs!ext1) Then
            GLiq = rs!ext1
        Else
            Flog.writeline Espacios(Tabulador * 2) & "El codigo externo del Grupo de Liquidacion es Nulo"
            Flog.writeline Espacios(Tabulador * 2) & "No se pudo crear el archivo. Exportación Abortada."
            Exit Sub
        End If
        If Not EsNulo(rs!ext2) Then
            Sucursal = rs!ext2
        Else
            Flog.writeline Espacios(Tabulador * 2) & "El codigo externo de la Sucursal es Nulo"
            Flog.writeline Espacios(Tabulador * 2) & "No se pudo crear el archivo. Exportación Abortada."
            Exit Sub
        End If
    End If
  
    
    Nombre_Arch = Directorio & "\" & Sucursal & "-" & GLiq & ".txt"
    Existe = True
    Copia = 0
    Do While Existe
        If fs.FileExists(Nombre_Arch) Then
            Copia = Copia + 1
            Nombre_Arch = Directorio & "\" & Sucursal & "-" & GLiq & "-" & Copia & ".txt"
        Else
            Existe = False
        End If
    Loop
    Flog.writeline Espacios(Tabulador * 1) & "Se crea el archivo: " & Nombre_Arch
    
    Set fs = CreateObject("Scripting.FileSystemObject")
    On Error Resume Next
    Set ArchExp = fs.CreateTextFile(Nombre_Arch, True)
    If Err.Number <> 0 Then
        Flog.writeline Espacios(Tabulador * 1) & "La carpeta Destino no existe. Se creará."
        
        Err.Number = 0
        Set FS1 = CreateObject("Scripting.FileSystemObject")
        Set Carpeta = FS1.CreateFolder(Directorio)
        Set ArchExp = fs.CreateTextFile(Nombre_Arch, True)
        If Err.Number <> 0 Then
            Flog.writeline Espacios(Tabulador * 1) & "No se pudo crear el archivo"
            Flog.writeline Espacios(Tabulador * 1) & Err.Description
            Exit Sub
        End If
    End If
    
    
    'Exporto los datos
    On Error GoTo ME_Local
    Flog.writeline
        
    StrSql = " SELECT gpadesde,gpahasta,Batch_Procacum.gpanro,batch_proceso.bpronro, gpadesabr "
    StrSql = StrSql & " FROM batch_proceso "
    StrSql = StrSql & " INNER JOIN Batch_Procacum ON Batch_Procacum.bpronro = batch_proceso.bpronro "
    StrSql = StrSql & " INNER JOIN gti_Procacum ON Batch_Procacum.gpanro = gti_Procacum.gpanro "
    StrSql = StrSql & " WHERE batch_proceso.bpronro = " & NroProceso
    OpenRecordset StrSql, rs_Pro
    If rs_Pro.EOF Then
        Flog.writeline Espacios(Tabulador * 1) & "No se encontró ningun proceso para exportar"
    End If
    Do While Not rs_Pro.EOF
   
        'Fechas del proceso
        fecha_desde = rs_Pro!gpadesde
        fecha_hasta = rs_Pro!gpahasta
   
        StrSql = " SELECT concepto.ConcCod,concepto.tconnro,concepto.concnro,empleado.ternro,empleado.empleg,gti_acunov.acnovvalor,gti_acunov.gpanro "
        StrSql = StrSql & " ,gti_acunov.acnovfecaprob, gti_acunov.tpanro,estructura.estrcodext "
        StrSql = StrSql & " FROM gti_procacum"
        StrSql = StrSql & " INNER JOIN gti_acunov ON gti_acunov.gpanro = gti_procacum.gpanro"
        StrSql = StrSql & " INNER JOIN empleado ON empleado.ternro = gti_acunov.ternro"
        StrSql = StrSql & " LEFT JOIN his_estructura ON empleado.ternro = his_estructura.ternro AND his_estructura.tenro = 32"
        StrSql = StrSql & " LEFT JOIN estructura ON his_estructura.estrnro = estructura.estrnro"
        StrSql = StrSql & " INNER JOIN Concepto ON Concepto.concnro = gti_acunov.concnro"
        StrSql = StrSql & " WHERE (gti_acunov.gpanro = " & rs_Pro!gpanro & ")"
        StrSql = StrSql & " AND (his_estructura.htetdesde <= " & ConvFecha(fecha_hasta) & ") AND "
        StrSql = StrSql & " ((" & ConvFecha(fecha_hasta) & " <= his_estructura.htethasta) or (his_estructura.htethasta is null))"
        'StrSql = StrSql & " ORDER BY concepto.conccod"
        'FGZ - 27/10/2008 - Lo quieren ordenado por legajo
        StrSql = StrSql & " ORDER BY empleg, concepto.conccod"
        OpenRecordset StrSql, rs_Nov
        If rs_Nov.EOF Then
            Flog.writeline Espacios(Tabulador * 2) & "No se encontraron novedades para el proceso." & rs_Pro!gpanro
            Flog.writeline Espacios(Tabulador * 2) & "SQL: " & StrSql
        End If
        Do While Not rs_Nov.EOF
            'Tipo           2       Si el empleado es Mensual va  01 sino 10.
            'Esta en el codigo externo de la estructura de tipo 22 - Forma de Liquidacion
            If Not EsNulo(rs_Nov!estrcodext) Then
                'Call ImprimirTexto(rs_Nov!estrcodext, ArchExp, 2, True)
                Select Case rs_Nov!estrcodext
                Case "m", "M":
                    Call ImprimirTexto("01", ArchExp, 2, True)
                Case Else:
                    Call ImprimirTexto("10", ArchExp, 2, True)
                End Select
            Else
                Flog.writeline Espacios(Tabulador * 2) & "Problemas para determinar la estructura de Forma de liquidacion. Se usara Mensual por Default"
                Call ImprimirTexto("01", ArchExp, 2, True)
            End If
            
            'Legajo         6       Legajo del Empleado (emplego.empleg), si el legajo tiene menos de 6 digitos completar con 0s a la izquierda 000123
            Call imprimirTextoConCeros(rs_Nov!empleg, ArchExp, 6, False)
            
            'Desde          6       Fecha desde Formato DDMMYY(sin la barra). Fecha desde el Proceso de Acumulacion seleccionado    250508
            Call ImprimirTexto(Format(fecha_desde, "DDMMYY"), ArchExp, 6, True)
            
            'Hasta          6       Fecha Hasta. Formato DDMMYY(sin la barra). Fecha hasta el Proceso de Acumulacion seleccionado   281208
            Call ImprimirTexto(Format(fecha_hasta, "DDMMYY"), ArchExp, 6, True)
            
            'Concepto       10      Codigo de Concepto (concepto.conccod), si el Codigo de Concepto tiene menos de 10 digitos completar con 0s a la izquierda   0000001100
            Call imprimirTextoConCeros(rs_Nov!conccod, ArchExp, 10, False)
            
            'FGZ - 02/12/2008 - se puso el valor en valor absoluto. El signo va al final
            'Numero = Split(CStr(rs_Nov!acnovvalor), ".")
            Numero = Split(CStr(Abs(rs_Nov!acnovvalor)), ".")
            Parte_Entera = Numero(0)
            If UBound(Numero) > 0 Then
                'Hay parte decimal
                Parte_Decimal = Numero(1)
                If Len(Parte_Decimal) < 2 Then
                    Parte_Decimal = Parte_Decimal & "0"
                End If
            Else
                Parte_Decimal = "00"
            End If
            'ValorEntero    9       Parte entera del valor  de la novedad GTI (OJO NO USAR REDONDEO) si el Codigo de Concepto tiene menos de 9 digitos completar con 0s a la izquierda  000123456
            Call imprimirTextoConCeros(Parte_Entera, ArchExp, 9, False)
            
            'ValorDecimal   2       Parte decimal del valor  de la novedad GTI. Si la parte decimal tiene menos de 2 digitos completar con 0s a la derecha  55
            Call ImprimirTexto(Parte_Decimal, ArchExp, 2, False)
            
            'Signo          1       + para positivo y - para negrativo  -
            If rs_Nov!acnovvalor >= 0 Then
                Call ImprimirTexto("+", ArchExp, 1, False)
            Else
                Call ImprimirTexto("-", ArchExp, 1, False)
            End If
            
            'CaracterU      1       Letra U     U
            Call ImprimirTexto("U", ArchExp, 1, False)
                
            ArchExp.writeline
            
            rs_Nov.MoveNext
        Loop
        ArchExp.Close
        Flog.writeline Espacios(Tabulador * 1) & "Se Terminaron de Procesar los datos"

    rs_Pro.MoveNext
Loop
Exit Sub

ME_Local:
    Flog.writeline " ------------------------------"
    Flog.writeline Err.Description
    Flog.writeline
    Flog.writeline "Ultimo SQL: " & StrSql
    Flog.writeline
End Sub

'
Public Sub Politica2000Bejerman(ByVal NroProceso As Long)
' --------------------------------------------------------------
' Descripcion: Exportación de Novedades de gti a texto.
' Autor: EAM - 07/11/2012
' Ultima modificacion:
' --------------------------------------------------------------
'Columna        Tamaño  Descripcion Ejemplo
'Legajo         6       Legajo del Empleado (emplego.empleg), si el legajo tiene menos de 6 digitos completar con 0s a la izquierda 000123
'Concepto       3       Codigo de Concepto (concepto.conccod)
'ValorEntero    10      Parte entera del valor  de la novedad GTI (OJO NO USAR REDONDEO) si el Codigo de Concepto tiene menos de 9 digitos completar con 0s a la izquierda  000123456
'ValorDecimal   2       Parte decimal del valor  de la novedad GTI. Si la parte decimal tiene menos de 2 digitos completar con 0s a la derecha  55
' --------------------------------------------------------------
Dim nroModelo As Long
Dim Directorio As String
Dim separador As String
Dim separadorDecimal As String

Dim FechaDesde As Date
Dim FechaHasta As Date
Dim Nombre_Arch As String
Dim ArchExp

Dim Numero
Dim Parte_Entera
Dim Parte_Decimal

Dim Proceso As Long

Dim rsAux As New ADODB.Recordset
Dim rs_Pro As New ADODB.Recordset
Dim Texto As String

    On Error GoTo ME_Local
    nroModelo = 919
    
    'Directorio de exportacion
    StrSql = "SELECT sis_dirsalidas FROM sistema WHERE sisnro = 1 "
    OpenRecordset StrSql, rsAux
    If Not rsAux.EOF Then
        Directorio = Trim(rsAux!sis_dirsalidas)
    End If
     
    StrSql = "SELECT modarchdefault,modseparador,modsepdec FROM modelo WHERE modnro = " & nroModelo
    OpenRecordset StrSql, rsAux
    If Not rsAux.EOF Then
        If Not IsNull(rsAux!modarchdefault) Then
            Directorio = Directorio & Trim(rsAux!modarchdefault)
        Else
            Flog.writeline Espacios(Tabulador * 1) & "El modelo no tiene configurada la carpeta destino. El archivo será generado en el directorio default"
        End If
        
        'Seteal el separador
        If Not IsNull(rsAux!modseparador) Then
            separador = rsAux!modseparador
        Else
            separador = ""
            Flog.writeline Espacios(Tabulador * 1) & "El separador no esta configurado, No se utiliza separador."
        End If
        
        'Seteal el separador decimal
        If Not IsNull(rsAux!modsepdec) Then
            separadorDecimal = rsAux!modsepdec
        Else
            separadorDecimal = ","
            Flog.writeline Espacios(Tabulador * 1) & "El separador decimal no esta configurado. Se utiliza por default la coma"
        End If
        
    Else
        Flog.writeline Espacios(Tabulador * 1) & "No se encontró el modelo " & nroModelo & ". El archivo será generado en el directorio default"
    End If
    Flog.writeline
    '------------------------------------------------------------------------------------------------------------------------

    
    'Creo el archivo txt
    StrSql = " SELECT gpadesde,gpahasta,Batch_Procacum.gpanro " & _
            " FROM batch_proceso " & _
            " INNER JOIN Batch_Procacum ON Batch_Procacum.bpronro = batch_proceso.bpronro " & _
            " INNER JOIN gti_Procacum ON Batch_Procacum.gpanro = gti_Procacum.gpanro " & _
            " WHERE batch_proceso.bpronro = " & NroProceso
    OpenRecordset StrSql, rs_Pro
    If rs_Pro.EOF Then
        Flog.writeline Espacios(Tabulador * 1) & "No se encontró ningun proceso para exportar"
        Exit Sub
    Else
        Proceso = rs_Pro!gpanro
        FechaDesde = rs_Pro!gpadesde
        FechaHasta = rs_Pro!gpahasta
    End If
  
    Nombre_Arch = Directorio & "\" & "novedades_gti_" & Year(Date) & Right("00" & Month(Date), 2) & Right("00" & Day(Date), 2) & "_" & Right("00" & Hour(Time), 2) & Right("00" & Minute(Time), 2) & ".txt"
    'Nombre_Arch = Directorio & "\" & "novedades_gti" & Format(FechaDesde, "DD-MM-YYYY") & " al " & Format(FechaHasta, "DD-MM-YYYY") & ".txt"
    
    If fs.FileExists(Nombre_Arch) Then
        Flog.writeline Espacios(Tabulador * 1) & "El archivo de exportación ya se encuentra generado, espere un minuto."
        Exit Sub
    Else
        Flog.writeline Espacios(Tabulador * 1) & "Se crea el archivo: " & Nombre_Arch
        Set fs = CreateObject("Scripting.FileSystemObject")
        Set ArchExp = fs.CreateTextFile(Nombre_Arch, True)
    End If
    
    
    
    'Exporto los datos
    On Error GoTo ME_Local
    Flog.writeline
    
    
    Do While Not rs_Pro.EOF
        
        'Busca las novedades para el proceso
        StrSql = " SELECT concepto.ConcCod,concepto.tconnro,concepto.concnro,empleado.ternro,empleado.empleg,gti_acunov.acnovvalor,gti_acunov.gpanro,gti_acunov.acnovfecaprob FROM gti_procacum " & _
                 " INNER JOIN gti_acunov ON gti_acunov.gpanro = gti_procacum.gpanro " & _
                 " INNER JOIN empleado ON empleado.ternro = gti_acunov.ternro " & _
                 " INNER JOIN batch_empleado ON batch_empleado.ternro = empleado.ternro and batch_empleado.bpronro = " & NroProceso & _
                 " INNER JOIN Concepto ON Concepto.concnro = gti_acunov.concnro " & _
                 " WHERE (gti_acunov.gpanro = " & rs_Pro!gpanro & " )" & _
                 " ORDER BY concepto.conccod "
        OpenRecordset StrSql, rsAux
    
        If rsAux.EOF Then
            Flog.writeline Espacios(Tabulador * 2) & "No se encontraron novedades para el proceso." & rsAux!gpanro
            Flog.writeline Espacios(Tabulador * 2) & "SQL: " & StrSql
        End If
        
        Do While Not rsAux.EOF
                            
            Texto = Right(rsAux!empleg, 6)
            'Legajo (6)- Legajo del Empleado (emplego.empleg), si el legajo tiene menos de 6 digitos completar con 0 a la izquierda EJ:000123
            Call imprimirTextoConCeros(Texto, ArchExp, 6, False)
            
            Call imprimirTextoConCeros(separador, ArchExp, Len(separador), False)
            
            Texto = Right(rsAux!conccod, 3)
            'Concepto (3) - Codigo de Concepto (concepto.conccod).
            Call imprimirTextoConCeros(Texto, ArchExp, 3, False)
            
            Call imprimirTextoConCeros(separador, ArchExp, Len(separador), False)
        
            'Se puso el valor en valor absoluto. El signo va al final
            'Numero = Split(CStr(rs_Nov!acnovvalor), ".")
            Numero = Split(CStr(Abs(rsAux!acnovvalor)), ".")
            Parte_Entera = Numero(0)
            If UBound(Numero) > 0 Then
                'Hay parte decimal
                Parte_Decimal = Numero(1)
                If Len(Parte_Decimal) < 2 Then
                    Parte_Decimal = Parte_Decimal & "0"
                End If
            Else
                Parte_Decimal = "00"
            End If

            Texto = Right(Parte_Entera, 7)
            'ValorEntero    7       Parte entera del valor  de la novedad GTI (OJO NO USAR REDONDEO) si el Codigo de Concepto tiene menos de 9 digitos completar con 0s a la izquierda  000123456
            Call imprimirTextoConCeros(Texto, ArchExp, 7, False)
            Call imprimirTextoConCeros(separadorDecimal, ArchExp, Len(separadorDecimal), False)
            Texto = Right(Parte_Decimal, 2)
            'ValorDecimal   2       Parte decimal del valor  de la novedad GTI. Si la parte decimal tiene menos de 2 digitos completar con 0s a la derecha  55
            Call ImprimirTexto(Texto, ArchExp, 2, False)
            
            
            ArchExp.writeline
            rsAux.MoveNext
        Loop
        ArchExp.Close
        Flog.writeline Espacios(Tabulador * 1) & "Se Terminaron de Procesar los datos"

        rs_Pro.MoveNext
    Loop
Exit Sub

ME_Local:
    Flog.writeline " ------------------------------"
    Flog.writeline Err.Description
    Flog.writeline
    Flog.writeline "Ultimo SQL: " & StrSql
    Flog.writeline
End Sub

Public Sub Politica2000SGS_OLD(ByVal NroProceso As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Exportación de Novedades de Liq a RHProX2 (pisa novedades si ya estaban).
' Autor: EPL
' Ultima modificacion: FGZ - 13/04/2004
'                    : 01/12/2014 - Gonzalez Nicolás - Correcciones en firmas
' --------------------------------------------------------------
Dim FechaDesde As Date
Dim FechaHasta As Date
Dim objrs_pro As New ADODB.Recordset
Dim objRs As New ADODB.Recordset
Dim objCon As New ADODB.Recordset
Dim rsFase As New ADODB.Recordset
Dim rs As New ADODB.Recordset
Dim rsDistNovGTI As New ADODB.Recordset
Dim Gnovnro
Dim inserto As Boolean

Dim Cant_Procesos As Long
Dim Progreso As Single
Dim IncPorc As Single
Dim Actualiza_Por_Proceso As Boolean

'EAM- (v5.01) - Se modifico la funcion para que tenga en cuenta el alcance por estructura y por empleado
Dim Con_Alcance As Boolean
Dim hay_mas As Boolean
Dim j As Integer
Dim finFirmaAuto As Boolean
    
    Call SetearParametrosPolitica(Detalle, ok)
    If st_modeloAsiento = 0 Then
        st_modeloAsiento = 1
        Flog.writeline Espacios(Tabulador * 2) & "No se encuentra configurado el modelo de asiento en la política 2000. Se toma por default el modelos de asiento 1"
    Else
        Flog.writeline Espacios(Tabulador * 2) & "Modelo de asiento Configurado: " & st_modeloAsiento
    End If
    
    'EAM- Levanto los parámetros de la política 2000 q es el modelo de aisento
    StrSql = " SELECT gpadesde,gpahasta,Batch_Procacum.gpanro,batch_proceso.bpronro " & _
             " From batch_proceso " & _
             " INNER JOIN Batch_Procacum ON Batch_Procacum.bpronro = batch_proceso.bpronro " & _
             " INNER JOIN gti_Procacum ON Batch_Procacum.gpanro = gti_Procacum.gpanro " & _
             " Where batch_proceso.bpronro = " & NroProceso
    OpenRecordset StrSql, objrs_pro

    If Not objrs_pro.EOF Then
        FechaDesde = objrs_pro!gpadesde
        FechaHasta = objrs_pro!gpahasta
        
        cystipnro = 5
        
        finFirmaAuto = False
        finFirmaAuto = autofirma(NroProceso, cystipnro)
        
        If FIN_Firma_NovLiq Then
            cysfirusuario = User_Proceso
            cysfirautoriza = User_Proceso
            'si la firma es automatica no hay destino
            If Not finFirmaAuto Then
                cysfirdestino = Firma_User_Destino
            Else
                cysfirdestino = ""
            End If
            cysfirfin = -1
            cysfiryaaut = -1
            cysfirrecha = 0
        Else
            If finFirmaAuto Then
                cysfirusuario = User_Proceso
                cysfirautoriza = User_Proceso
                'si la firma es automatica no hay destino
                cysfirdestino = ""
                cysfirfin = -1
                cysfiryaaut = -1
                cysfirrecha = 0
            
            Else
                cysfirusuario = User_Proceso
                cysfirautoriza = User_Proceso
                cysfirdestino = Firma_User_Destino
                cysfirfin = 0
                cysfiryaaut = 0
                cysfirrecha = 0
            End If
        End If
    End If
    
    'Seteo los valores de progreso
    Cant_Procesos = objrs_pro.RecordCount 'Cantidad de procesos
    If Cant_Procesos = 1 Then
        Actualiza_Por_Proceso = False
    Else
        Actualiza_Por_Proceso = True
    End If
    If Cant_Procesos = 0 Then Cant_Procesos = 1
    
    If Actualiza_Por_Proceso Then
        IncPorc = (95 / Cant_Procesos)
    End If
    Progreso = 0
    
    MyBeginTrans
    
    Do While Not objrs_pro.EOF
        
        'EAM- (5.08) ELimina todas las Distribuciones generadas a partir de novedades de GTI
        StrSql = "DELETE FROM nov_dist WHERE novnro IN (SELECT nenro FROM novemp WHERE gpanro = " & objrs_pro!gpanro & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        'EAM- (5.08) ELimina todas las novedades generadas a partir de novedades de GTI
        StrSql = "DELETE FROM novemp WHERE gpanro = " & objrs_pro!gpanro
        objConn.Execute StrSql, , adExecuteNoRecords
        
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Se han depurado las Novedades de Liquidación generadas a partir de Novedades de GTI."
        End If
        
        StrSql = " SELECT acnovnro,concepto.ConcCod,concepto.tconnro,concepto.concnro,empleado.ternro,empleado.empleg " & _
                ",gti_acunov.acnovvalor,gti_acunov.gpanro,gti_acunov.acnovfecaprob, gti_acunov.tpanro " & _
                " FROM gti_procacum " & _
                " INNER JOIN gti_acunov ON gti_acunov.gpanro = gti_procacum.gpanro " & _
                " INNER JOIN empleado ON empleado.ternro = gti_acunov.ternro " & _
                " INNER JOIN batch_empleado ON batch_empleado.ternro = empleado.ternro AND batch_empleado.bpronro = " & NroProceso & _
                " INNER JOIN Concepto ON Concepto.concnro = gti_acunov.concnro " & _
                " WHERE (gti_acunov.gpanro = " & objrs_pro!gpanro & " ) " & _
                " ORDER BY concepto.conccod "
        OpenRecordset StrSql, objRs
   
        'Redefinicion del incremento del progreso
         If Not Actualiza_Por_Proceso Then
             Cant_Procesos = objRs.RecordCount
             If Cant_Procesos = 0 Then Cant_Procesos = 1
             IncPorc = (95 / Cant_Procesos)
         End If
   
        Do While Not objRs.EOF
            Con_Alcance = False
            hay_mas = True
            Empleado.Ternro = objRs!Ternro
            Call Cargar_PoliticasEstructuras(FechaDesde)
            Call Cargar_PoliticasIndividuales
            
                        
            'Busco alcance individual
            If Arr_PolI(2000).CabPolNivel <> 0 Then
                'Detalle = Arr_PolI(2000).DetPolPrograma
                'Cabecera = Arr_PolI(2000).CabPolNro
                Detalle = Arr_PolI(2000).DetPolNro
            
                Con_Alcance = True
            End If
            'Busco alcance por estructura
            j = 1
            Do While Not Con_Alcance And hay_mas
                If Arr_PolE(2000, j).CabPolNivel <> 0 Then
                    'det = Arr_PolE(2000, j).DetPolPrograma
                    'Cabecera = Arr_PolE(2000, j).CabPolNro
                    Detalle = Arr_PolE(2000, j).DetPolNro
                    Con_Alcance = True
                Else
                    hay_mas = False
                End If
                j = j + 1
            Loop
            Call SetearParametrosPolitica(Detalle, ok)
            
            
            'EAM- Compruebo si la novedad tiene vigencia
            StrSql = " SELECT * FROM novemp WHERE novemp.empleado = " & objRs!Ternro & " AND "
            StrSql = StrSql & " novemp.concnro = " & objRs!Concnro & " AND novemp.tpanro = " & objRs!Tpanro
            OpenRecordset StrSql, objCon
    
                    
            If objCon.EOF Then
                StrSql = " INSERT INTO novemp (concnro,tpanro, empleado, nevalor, nevigencia,nedesde,nehasta,gpanro)" & _
                            " VALUES (" & objRs!Concnro & "," & objRs!Tpanro & "," & objRs!Ternro & "," & objRs!acnovvalor & ",-1," & _
                            ConvFecha(FechaDesde) & "," & ConvFecha(FechaHasta) & "," & objrs_pro!gpanro & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    'EAM- Recupero el id de la novedad
                    Gnovnro = getLastIdentity(objConn, "novemp")

            Else
                If objCon!nevigencia = -1 Then
                    StrSql = " INSERT INTO novemp (concnro,tpanro, empleado, nevalor, nevigencia,nedesde,nehasta,gpanro)" & _
                            " VALUES (" & objRs!Concnro & "," & objRs!Tpanro & "," & objRs!Ternro & "," & objRs!acnovvalor & "," & objCon!nevigencia & "," & _
                            ConvFecha(FechaDesde) & "," & ConvFecha(FechaHasta) & "," & objrs_pro!gpanro & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    'EAM- Recupero el id de la novedad
                    Gnovnro = getLastIdentity(objConn, "novemp")

                Else
                    Gnovnro = objCon!nenro
                    'EAM- Busco la fase del empleado para cerrar la novedad de liquidacion
                    StrSql = "SELECT altfec FROM fases WHERE empleado=" & objRs!Ternro & "order by altfec asc"
                    OpenRecordset StrSql, rsFase
                                    
                    'EAM- Cierro la vigencia de la novedad de liquidación
                    If Not rsFase.EOF Then
                        StrSql = " UPDATE  novemp " & _
                                " SET nevalor = " & objRs!acnovvalor & ",nedesde=" & ConvFecha(rsFase!altfec) & ",nehasta=" & ConvFecha(DateAdd("d", -1, FechaHasta)) & _
                                " WHERE novemp.empleado = " & objRs!Ternro & " AND nenro = " & Gnovnro & _
                                " AND novemp.concnro = " & objRs!Concnro & " AND novemp.tpanro = " & objRs!Tpanro
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 2) & "No se encontro la fecha de la fase del empleado. no se podrá cerrar la vigencia de la novdead."
                        End If
                    End If
                End If
            End If
            
            
            'EAM Busco si la novedad de GTI tiene desglose
            StrSql = "SELECT * FROM gti_acunov_dist WHERE acnovnro= " & objRs!acnovnro
            OpenRecordset StrSql, rsDistNovGTI
            
            If Not rsDistNovGTI.EOF Then
                
                'EAM- Actualizo la novedad para indicar que tiene distribución
                StrSql = " UPDATE  novemp SET nedist= -1 WHERE nenro= " & Gnovnro
                objConn.Execute StrSql, , adExecuteNoRecords
                
                'EAM- Inserto el detalle de la destribución si es que tiene.
                StrSql = "INSERT INTO nov_dist (novnro,auto,tiponov,concnro,tpanro,masinro"
                If Not EsNulo(rsDistNovGTI!tenro1) Then StrSql = StrSql & ",tenro"
                If Not EsNulo(rsDistNovGTI!estrnro1) Then StrSql = StrSql & ",estrnro"
                If Not EsNulo(rsDistNovGTI!tenro2) Then StrSql = StrSql & ",tenro2"
                If Not EsNulo(rsDistNovGTI!estrnro2) Then StrSql = StrSql & ",estrnro2"
                If Not EsNulo(rsDistNovGTI!tenro3) Then StrSql = StrSql & ",tenro3"
                If Not EsNulo(rsDistNovGTI!estrnro3) Then StrSql = StrSql & ",estrnro3"
                'If Not EsNulo(rsDesAD!te4) Then StrSql = StrSql & ",tenro4"
                'If Not EsNulo(rsDesAD!estrnro4) Then StrSql = StrSql & ",estrnro4"
                'If Not EsNulo(rsDesAD!te5) Then StrSql = StrSql & ",te5nro"
                'If Not EsNulo(rsDesAD!estrnro5) Then StrSql = StrSql & ",estrnro5"
                StrSql = StrSql & ")"
                                        
                'EAM- Se agrego una modificacion para que el modelo de asiento lo tome por configuracion de la política
                StrSql = StrSql & " VALUES (" & Gnovnro & ",0,1," & objRs!Concnro & " ," & objRs!Tpanro & "," & st_modeloAsiento
            
                If Not EsNulo(rsDistNovGTI!tenro1) Then StrSql = StrSql & "," & rsDistNovGTI!tenro1
                If Not EsNulo(rsDistNovGTI!estrnro1) Then StrSql = StrSql & "," & rsDistNovGTI!estrnro1
                If Not EsNulo(rsDistNovGTI!tenro2) Then StrSql = StrSql & "," & rsDistNovGTI!tenro2
                If Not EsNulo(rsDistNovGTI!estrnro2) Then StrSql = StrSql & "," & rsDistNovGTI!estrnro2
                If Not EsNulo(rsDistNovGTI!tenro3) Then StrSql = StrSql & "," & rsDistNovGTI!tenro3
                If Not EsNulo(rsDistNovGTI!estrnro3) Then StrSql = StrSql & "," & rsDistNovGTI!estrnro3
                'If Not EsNulo(rsDesAD!te4) Then StrSql = StrSql & "," & rsDesAD!te4
                'If Not EsNulo(rsDesAD!estrnro4) Then StrSql = StrSql & "," & rsDesAD!estrnro4
                'If Not EsNulo(rsDesAD!te5) Then StrSql = StrSql & "," & rsDesAD!te5
                'If Not EsNulo(rsDesAD!estrnro5) Then StrSql = StrSql & "," & rsDesAD!estrnro5
                StrSql = StrSql & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
                 
            finFirmaAuto = checkFirmaAutomatica(objRs!conccod, cystipnro)
            If Firma_NovLiq Then
                If finFirmaAuto Then
                    StrSql = "INSERT INTO cysfirmas ("
                    StrSql = StrSql & "cysfirautoriza,cysfirfecaut,cysfirmhora,cysfirusuario,"
                    StrSql = StrSql & "cysfirdestino,cystipnro,cystipnroft,cysfircodext,cysfirsecuencia,cysfirdes"
                    StrSql = StrSql & ",cysfirfin,cysfiryaaut,cysfirrecha"
                    StrSql = StrSql & ")"
                    StrSql = StrSql & "VALUES("
                    StrSql = StrSql & "'" & cysfirautoriza & "'," & ConvFecha(Date) & ",'" & FormatDateTime(Now(), vbShortTime) & "'"
                    'StrSql = StrSql & ",'" & cysfirusuario & "','" & cysfirdestino & "'," & cystipnro & "," & gnovnro & ",1,'Pasaje de Novedad desde GTI'"
                    StrSql = StrSql & ",'" & cysfirusuario & "',''," & cystipnro & "," & cystipnro & "," & Gnovnro & ",1,'Pasaje de Novedad desde GTI'"
                    StrSql = StrSql & ",-1,-1," & cysfirrecha
                    StrSql = StrSql & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    If FIN_Firma_NovLiq Then
                        StrSql = "INSERT INTO cysfirmas ("
                        StrSql = StrSql & "cysfirautoriza,cysfirfecaut,cysfirmhora,cysfirusuario,"
                        StrSql = StrSql & "cysfirdestino,cystipnro,cystipnroft,cysfircodext,cysfirsecuencia,cysfirdes"
                        StrSql = StrSql & ",cysfirfin,cysfiryaaut,cysfirrecha"
                        StrSql = StrSql & ")"
                        StrSql = StrSql & "VALUES("
                        StrSql = StrSql & "'" & cysfirautoriza & "'," & ConvFecha(Date) & ",'" & FormatDateTime(Now(), vbShortTime) & "'"
                        StrSql = StrSql & ",'" & cysfirusuario & "','" & cysfirdestino & "'," & cystipnro & "," & cystipnro & "," & Gnovnro & ",1,'Pasaje de Novedad desde GTI'"
                        StrSql = StrSql & ",-1,-1," & cysfirrecha
                        StrSql = StrSql & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
'                    Else
'                        'Busco la ultima y actualizo
'                        StrSql = "SELECT cysfirautoriza, cysfirsecuencia, cysfirdestino FROM cysfirmas "
'                        StrSql = StrSql & " WHERE cysfirmas.cystipnro = " & cystipnro & " AND cysfirmas.cysfircodext = '" & gnovnro & "' "
'                        StrSql = StrSql & " ORDER BY cysfirsecuencia DESC"
'                        OpenRecordset StrSql, rs
'                        If Not rs.EOF Then
'                            StrSql = "UPDATE cysfirmas "
'                            StrSql = StrSql & "SET cysfirdestino = '" & cysfirdestino & "'"
'                            StrSql = StrSql & ", cysfirautoriza = '" & cysfirusuario & "'"
'                            StrSql = StrSql & ", cysfirfecaut = " & ConvFecha(Date)
'                            StrSql = StrSql & ", cysfirmhora = '" & FormatDateTime(Now(), vbShortTime) & "'"
'                            StrSql = StrSql & ", cysfirfin = -1,cysfiryaaut = -1, cysfirrecha = 0"
'                            StrSql = StrSql & " where cystipnro = " & cystipnro
'                            StrSql = StrSql & " and cysfircodext = '" & gnovnro & "' "
'                            StrSql = StrSql & " and cysfirsecuencia = " & rs!cysfirsecuencia
'                            objConn.Execute StrSql, , adExecuteNoRecords
'                        Else
'                            StrSql = "INSERT INTO cysfirmas ("
'                            StrSql = StrSql & "cysfirautoriza,cysfirfecaut,cysfirmhora,cysfirusuario,"
'                            StrSql = StrSql & "cysfirdestino,cystipnro,cysfircodext,cysfirsecuencia,cysfirdes"
'                            StrSql = StrSql & ",cysfirfin,cysfiryaaut,cysfirrecha"
'                            StrSql = StrSql & ")"
'                            StrSql = StrSql & "VALUES("
'                            StrSql = StrSql & "'" & cysfirautoriza & "'," & ConvFecha(Date) & ",'" & FormatDateTime(Now(), vbShortTime) & "'"
'                            StrSql = StrSql & ",'" & cysfirusuario & "','" & cysfirdestino & "'," & cystipnro & "," & gnovnro & ",1,'Pasaje de Novedad desde GTI'"
'                            StrSql = StrSql & "," & cysfirfin & "," & cysfiryaaut & "," & cysfirrecha
'                            StrSql = StrSql & ")"
'                            objConn.Execute StrSql, , adExecuteNoRecords
'                        End If
'                    End If
                    Else
                        If Not EsNulo(Firma_User_Destino) Then
                            'If Inserto Then
                                'Inserto firma autorizado pendiente
                            StrSql = "INSERT INTO cysfirmas ("
                            StrSql = StrSql & "cysfirautoriza,cysfirfecaut,cysfirmhora,cysfirusuario,"
                            StrSql = StrSql & "cysfirdestino,cystipnro,cystipnroft,cysfircodext,cysfirsecuencia,cysfirdes"
                            StrSql = StrSql & ",cysfirfin,cysfiryaaut,cysfirrecha"
                            StrSql = StrSql & ")"
                            StrSql = StrSql & "VALUES("
                            StrSql = StrSql & "'" & cysfirautoriza & "'," & ConvFecha(Date) & ",'" & FormatDateTime(Now(), vbShortTime) & "'"
                            StrSql = StrSql & ",'" & cysfirusuario & "','" & cysfirdestino & "'," & cystipnro & "," & cystipnro & "," & Gnovnro & ",1,'Pasaje de Novedad desde GTI'"
                            StrSql = StrSql & "," & cysfirfin & "," & cysfiryaaut & "," & cysfirrecha
                            StrSql = StrSql & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
'                        Else
'                            'Busco la ultima y actualizo
'                            StrSql = "SELECT cysfirautoriza, cysfirsecuencia, cysfirdestino FROM cysfirmas "
'                            StrSql = StrSql & " WHERE cysfirmas.cystipnro = " & cystipnro & " AND cysfirmas.cysfircodext = '" & gnovnro & "' "
'                            StrSql = StrSql & " ORDER BY cysfirsecuencia DESC"
'                            OpenRecordset StrSql, rs
'                            If Not rs.EOF Then
'                                StrSql = "UPDATE cysfirmas "
'                                StrSql = StrSql & "SET cysfirdestino = '" & cysfirdestino & "'"
'                                StrSql = StrSql & ", cysfirautoriza = '" & cysfirusuario & "'"
'                                StrSql = StrSql & ", cysfirfecaut = " & ConvFecha(Date)
'                                StrSql = StrSql & ", cysfirmhora = '" & FormatDateTime(Now(), vbShortTime) & "'"
'                                StrSql = StrSql & ", cysfirfin = 0,cysfiryaaut = 0, cysfirrecha = 0"
'                                StrSql = StrSql & " where cystipnro = " & cystipnro
'                                StrSql = StrSql & " and cysfircodext = '" & gnovnro & "' "
'                                StrSql = StrSql & " and cysfirsecuencia = " & rs!cysfirsecuencia
'                                objConn.Execute StrSql, , adExecuteNoRecords
'                            Else
'                                StrSql = "INSERT INTO cysfirmas ("
'                                StrSql = StrSql & "cysfirautoriza,cysfirfecaut,cysfirmhora,cysfirusuario,"
'                                StrSql = StrSql & "cysfirdestino,cystipnro,cysfircodext,cysfirsecuencia,cysfirdes"
'                                StrSql = StrSql & ",cysfirfin,cysfiryaaut,cysfirrecha"
'                                StrSql = StrSql & ")"
'                                StrSql = StrSql & "VALUES("
'                                StrSql = StrSql & "'" & cysfirautoriza & "'," & ConvFecha(Date) & ",'" & FormatDateTime(Now(), vbShortTime) & "'"
'                                StrSql = StrSql & ",'" & cysfirusuario & "','" & cysfirdestino & "'," & cystipnro & "," & gnovnro & ",1,'Pasaje de Novedad desde GTI'"
'                                StrSql = StrSql & "," & cysfirfin & "," & cysfiryaaut & "," & cysfirrecha
'                                StrSql = StrSql & ")"
'                                objConn.Execute StrSql, , adExecuteNoRecords
'                            End If
'                        End If
                        Else
                            'Error no se puede insertar
                            Flog.writeline Espacios(Tabulador * 2) & "No se puede pasar la novedad, el usuario destino de firma es nulo. "
                        End If
                    End If
                End If
            End If
        
            'Progreso
            If Not Actualiza_Por_Proceso Then
                Progreso = Progreso + IncPorc
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "---> Actualizo progreso del proceso " & Now
                End If
                StrSql = "UPDATE batch_proceso SET bprcprogreso = " & Progreso & " WHERE bpronro = " & NroProceso
                objConnProgreso.Execute StrSql, , adExecuteNoRecords
            End If
        
            objRs.MoveNext
        Loop
    
        If Actualiza_Por_Proceso Then
            Progreso = Progreso + IncPorc
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "---> Actualizo progreso del proceso " & Now
            End If
            StrSql = "UPDATE batch_proceso SET bprcprogreso = " & Progreso & " WHERE bpronro = " & NroProceso
            objConnProgreso.Execute StrSql, , adExecuteNoRecords
        End If
    
        objrs_pro.MoveNext
    Loop

Final:
    MyCommitTrans
    If objrs_pro.State = adStateOpen Then objrs_pro.Close
    If objCon.State = adStateOpen Then objCon.Close
    If objRs.State = adStateOpen Then objRs.Close
    If rs.State = adStateOpen Then rs.Close
        
    Set objrs_pro = Nothing
    Set objRs = Nothing
    Set objCon = Nothing
    Set rs = Nothing
End Sub
Public Sub Politica2000SGS(ByVal NroProceso As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Exportación de Novedades de Liq a RHProX2 (pisa novedades si ya estaban).
' Autor: EPL
' Ultima modificacion: FGZ - 13/04/2004
'                    : 01/12/2014 - Gonzalez Nicolás - Correcciones en firmas
' --------------------------------------------------------------
Dim FechaDesde As Date
Dim FechaHasta As Date
Dim objrs_pro As New ADODB.Recordset
Dim objRs As New ADODB.Recordset
Dim objCon As New ADODB.Recordset
Dim rsFase As New ADODB.Recordset
Dim rs As New ADODB.Recordset
Dim rsDistNovGTI As New ADODB.Recordset
Dim Gnovnro
Dim inserto As Boolean

Dim Cant_Procesos As Long
Dim Progreso As Single
Dim IncPorc As Single
Dim Actualiza_Por_Proceso As Boolean

'EAM- (v5.01) - Se modifico la funcion para que tenga en cuenta el alcance por estructura y por empleado
Dim Con_Alcance As Boolean
Dim hay_mas As Boolean
Dim j As Integer
Dim finFirmaAuto As Boolean
Dim StrSqlFirmas As String
    
    Call SetearParametrosPolitica(Detalle, ok)
    If st_modeloAsiento = 0 Then
        st_modeloAsiento = 1
        Flog.writeline Espacios(Tabulador * 2) & "No se encuentra configurado el modelo de asiento en la política 2000. Se toma por default el modelos de asiento 1"
    Else
        Flog.writeline Espacios(Tabulador * 2) & "Modelo de asiento Configurado: " & st_modeloAsiento
    End If
    
    'EAM- Levanto los parámetros de la política 2000 q es el modelo de aisento
    StrSql = " SELECT gpadesde,gpahasta,Batch_Procacum.gpanro,batch_proceso.bpronro " & _
             " From batch_proceso " & _
             " INNER JOIN Batch_Procacum ON Batch_Procacum.bpronro = batch_proceso.bpronro " & _
             " INNER JOIN gti_Procacum ON Batch_Procacum.gpanro = gti_Procacum.gpanro " & _
             " Where batch_proceso.bpronro = " & NroProceso
    OpenRecordset StrSql, objrs_pro

    If Not objrs_pro.EOF Then
        FechaDesde = objrs_pro!gpadesde
        FechaHasta = objrs_pro!gpahasta
        cystipnro = 5
    End If
        

    'Seteo los valores de progreso
    Cant_Procesos = objrs_pro.RecordCount 'Cantidad de procesos
    If Cant_Procesos = 1 Then
        Actualiza_Por_Proceso = False
    Else
        Actualiza_Por_Proceso = True
    End If
    If Cant_Procesos = 0 Then Cant_Procesos = 1
    
    If Actualiza_Por_Proceso Then
        IncPorc = (95 / Cant_Procesos)
    End If
    Progreso = 0
    
    MyBeginTrans
    
    Do While Not objrs_pro.EOF
        
        'EAM- (5.08) ELimina todas las Distribuciones generadas a partir de novedades de GTI
        StrSql = "DELETE FROM nov_dist WHERE novnro IN (SELECT nenro FROM novemp WHERE gpanro = " & objrs_pro!gpanro & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        'EAM- (5.08) ELimina todas las novedades generadas a partir de novedades de GTI
        StrSql = "DELETE FROM novemp WHERE gpanro = " & objrs_pro!gpanro
        objConn.Execute StrSql, , adExecuteNoRecords
        
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Se han depurado las Novedades de Liquidación generadas a partir de Novedades de GTI."
        End If
        
        StrSql = " SELECT acnovnro,concepto.ConcCod,concepto.tconnro,concepto.concnro,empleado.ternro,empleado.empleg " & _
                ",gti_acunov.acnovvalor,gti_acunov.gpanro,gti_acunov.acnovfecaprob, gti_acunov.tpanro " & _
                " FROM gti_procacum " & _
                " INNER JOIN gti_acunov ON gti_acunov.gpanro = gti_procacum.gpanro " & _
                " INNER JOIN empleado ON empleado.ternro = gti_acunov.ternro " & _
                " INNER JOIN batch_empleado ON batch_empleado.ternro = empleado.ternro AND batch_empleado.bpronro = " & NroProceso & _
                " INNER JOIN Concepto ON Concepto.concnro = gti_acunov.concnro " & _
                " WHERE (gti_acunov.gpanro = " & objrs_pro!gpanro & " ) " & _
                " ORDER BY concepto.conccod "
        OpenRecordset StrSql, objRs
   
        'Redefinicion del incremento del progreso
         If Not Actualiza_Por_Proceso Then
             Cant_Procesos = objRs.RecordCount
             If Cant_Procesos = 0 Then Cant_Procesos = 1
             IncPorc = (95 / Cant_Procesos)
         End If
   
        Do While Not objRs.EOF
            Con_Alcance = False
            hay_mas = True
            Empleado.Ternro = objRs!Ternro
            Call Cargar_PoliticasEstructuras(FechaDesde)
            Call Cargar_PoliticasIndividuales
            
                        
            'Busco alcance individual
            If Arr_PolI(2000).CabPolNivel <> 0 Then
                'Detalle = Arr_PolI(2000).DetPolPrograma
                'Cabecera = Arr_PolI(2000).CabPolNro
                Detalle = Arr_PolI(2000).DetPolNro
            
                Con_Alcance = True
            End If
            'Busco alcance por estructura
            j = 1
            Do While Not Con_Alcance And hay_mas
                If Arr_PolE(2000, j).CabPolNivel <> 0 Then
                    'det = Arr_PolE(2000, j).DetPolPrograma
                    'Cabecera = Arr_PolE(2000, j).CabPolNro
                    Detalle = Arr_PolE(2000, j).DetPolNro
                    Con_Alcance = True
                Else
                    hay_mas = False
                End If
                j = j + 1
            Loop
            Call SetearParametrosPolitica(Detalle, ok)
            
            
            'EAM- Compruebo si la novedad tiene vigencia
            StrSql = " SELECT * FROM novemp WHERE novemp.empleado = " & objRs!Ternro & " AND "
            StrSql = StrSql & " novemp.concnro = " & objRs!Concnro & " AND novemp.tpanro = " & objRs!Tpanro
            OpenRecordset StrSql, objCon
    
                    
            If objCon.EOF Then
                StrSql = " INSERT INTO novemp (concnro,tpanro, empleado, nevalor, nevigencia,nedesde,nehasta,gpanro)" & _
                            " VALUES (" & objRs!Concnro & "," & objRs!Tpanro & "," & objRs!Ternro & "," & objRs!acnovvalor & ",-1," & _
                            ConvFecha(FechaDesde) & "," & ConvFecha(FechaHasta) & "," & objrs_pro!gpanro & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    'EAM- Recupero el id de la novedad
                    Gnovnro = getLastIdentity(objConn, "novemp")

            Else
                If objCon!nevigencia = -1 Then
                    StrSql = " INSERT INTO novemp (concnro,tpanro, empleado, nevalor, nevigencia,nedesde,nehasta,gpanro)" & _
                            " VALUES (" & objRs!Concnro & "," & objRs!Tpanro & "," & objRs!Ternro & "," & objRs!acnovvalor & "," & objCon!nevigencia & "," & _
                            ConvFecha(FechaDesde) & "," & ConvFecha(FechaHasta) & "," & objrs_pro!gpanro & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    'EAM- Recupero el id de la novedad
                    Gnovnro = getLastIdentity(objConn, "novemp")

                Else
                    Gnovnro = objCon!nenro
                    'EAM- Busco la fase del empleado para cerrar la novedad de liquidacion
                    StrSql = "SELECT altfec FROM fases WHERE empleado=" & objRs!Ternro & "order by altfec asc"
                    OpenRecordset StrSql, rsFase
                                    
                    'EAM- Cierro la vigencia de la novedad de liquidación
                    If Not rsFase.EOF Then
                        StrSql = " UPDATE  novemp " & _
                                " SET nevalor = " & objRs!acnovvalor & ",nedesde=" & ConvFecha(rsFase!altfec) & ",nehasta=" & ConvFecha(DateAdd("d", -1, FechaHasta)) & _
                                " WHERE novemp.empleado = " & objRs!Ternro & " AND nenro = " & Gnovnro & _
                                " AND novemp.concnro = " & objRs!Concnro & " AND novemp.tpanro = " & objRs!Tpanro
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 2) & "No se encontro la fecha de la fase del empleado. no se podrá cerrar la vigencia de la novdead."
                        End If
                    End If
                End If
            End If
            
            
            'EAM Busco si la novedad de GTI tiene desglose
            StrSql = "SELECT * FROM gti_acunov_dist WHERE acnovnro= " & objRs!acnovnro
            OpenRecordset StrSql, rsDistNovGTI
            
            If Not rsDistNovGTI.EOF Then
                
                'EAM- Actualizo la novedad para indicar que tiene distribución
                StrSql = " UPDATE  novemp SET nedist= -1 WHERE nenro= " & Gnovnro
                objConn.Execute StrSql, , adExecuteNoRecords
                
                'EAM- Inserto el detalle de la destribución si es que tiene.
                StrSql = "INSERT INTO nov_dist (novnro,auto,tiponov,concnro,tpanro,masinro"
                If Not EsNulo(rsDistNovGTI!tenro1) Then StrSql = StrSql & ",tenro"
                If Not EsNulo(rsDistNovGTI!estrnro1) Then StrSql = StrSql & ",estrnro"
                If Not EsNulo(rsDistNovGTI!tenro2) Then StrSql = StrSql & ",tenro2"
                If Not EsNulo(rsDistNovGTI!estrnro2) Then StrSql = StrSql & ",estrnro2"
                If Not EsNulo(rsDistNovGTI!tenro3) Then StrSql = StrSql & ",tenro3"
                If Not EsNulo(rsDistNovGTI!estrnro3) Then StrSql = StrSql & ",estrnro3"
                'If Not EsNulo(rsDesAD!te4) Then StrSql = StrSql & ",tenro4"
                'If Not EsNulo(rsDesAD!estrnro4) Then StrSql = StrSql & ",estrnro4"
                'If Not EsNulo(rsDesAD!te5) Then StrSql = StrSql & ",te5nro"
                'If Not EsNulo(rsDesAD!estrnro5) Then StrSql = StrSql & ",estrnro5"
                StrSql = StrSql & ")"
                                        
                'EAM- Se agrego una modificacion para que el modelo de asiento lo tome por configuracion de la política
                StrSql = StrSql & " VALUES (" & Gnovnro & ",0,1," & objRs!Concnro & " ," & objRs!Tpanro & "," & st_modeloAsiento
            
                If Not EsNulo(rsDistNovGTI!tenro1) Then StrSql = StrSql & "," & rsDistNovGTI!tenro1
                If Not EsNulo(rsDistNovGTI!estrnro1) Then StrSql = StrSql & "," & rsDistNovGTI!estrnro1
                If Not EsNulo(rsDistNovGTI!tenro2) Then StrSql = StrSql & "," & rsDistNovGTI!tenro2
                If Not EsNulo(rsDistNovGTI!estrnro2) Then StrSql = StrSql & "," & rsDistNovGTI!estrnro2
                If Not EsNulo(rsDistNovGTI!tenro3) Then StrSql = StrSql & "," & rsDistNovGTI!tenro3
                If Not EsNulo(rsDistNovGTI!estrnro3) Then StrSql = StrSql & "," & rsDistNovGTI!estrnro3
                'If Not EsNulo(rsDesAD!te4) Then StrSql = StrSql & "," & rsDesAD!te4
                'If Not EsNulo(rsDesAD!estrnro4) Then StrSql = StrSql & "," & rsDesAD!estrnro4
                'If Not EsNulo(rsDesAD!te5) Then StrSql = StrSql & "," & rsDesAD!te5
                'If Not EsNulo(rsDesAD!estrnro5) Then StrSql = StrSql & "," & rsDesAD!estrnro5
                StrSql = StrSql & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
            End If

            If Firma_NovLiq = True Then 'SI EL CIRCUITO ESTA ACTIVO
                'Controlo si es autofirmante para el CO que se va a insertar
                finFirmaAuto = checkFirmaAutomatica(objRs!conccod, cystipnro)
                
                Flog.writeline Espacios(Tabulador * 2) & "Concepto:" & objRs!conccod & " --> Firma Automática: " & finFirmaAuto
                cysfirusuario = User_Proceso
                cysfirautoriza = User_Proceso
                cysfirdescausa = ""
                If (UCase(User_Proceso) = UCase(Firma_User_Destino)) Or finFirmaAuto = True Then
                    'Si el el ususario destino es = que ejectutó el proceso o es AF para el CONCEPTO a insertar
                    cysfirdestino = ""
                    cysfirfin = -1
                    cysfiryaaut = -1
                    cysfirrecha = 0
                    If finFirmaAuto = True Then
                        cysfirdescausa = "Firma Automatica"
                    End If
                Else
                    cysfirdestino = Firma_User_Destino
                    cysfirfin = 0
                    cysfiryaaut = 0
                    cysfirrecha = 0
                End If
                
            
                StrSql = "INSERT INTO cysfirmas ("
                StrSql = StrSql & "cysfirautoriza,cysfirfecaut,cysfirmhora,cysfirusuario,"
                StrSql = StrSql & "cysfirdestino,cystipnro,cystipnroft,cysfircodext,cysfirsecuencia,cysfirdes"
                StrSql = StrSql & ",cysfirfin,cysfiryaaut,cysfirrecha,cysfirdescausa"
                StrSql = StrSql & ")"
                StrSql = StrSql & " VALUES("
                StrSql = StrSql & "'" & cysfirautoriza & "'," & ConvFecha(Date) & ",'" & FormatDateTime(Now(), vbShortTime) & "'"
                StrSql = StrSql & ",'" & cysfirusuario & "','" & cysfirdestino & "'," & cystipnro & "," & cystipnro & "," & Gnovnro & ",1,'Pasaje de Novedad desde GTI'"
                StrSql = StrSql & "," & cysfirfin & "," & cysfiryaaut & "," & cysfirrecha
                
                If EsNulo(cysfirdescausa) Then
                    StrSql = StrSql & ",null"
                Else
                    StrSql = StrSql & ",'" & cysfirdescausa & "'"
                End If
                
                StrSql = StrSql & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
        
            'Progreso
            If Not Actualiza_Por_Proceso Then
                Progreso = Progreso + IncPorc
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "---> Actualizo progreso del proceso " & Now
                End If
                StrSql = "UPDATE batch_proceso SET bprcprogreso = " & Progreso & " WHERE bpronro = " & NroProceso
                objConnProgreso.Execute StrSql, , adExecuteNoRecords
            End If
        
            objRs.MoveNext
        Loop
    
        If Actualiza_Por_Proceso Then
            Progreso = Progreso + IncPorc
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "---> Actualizo progreso del proceso " & Now
            End If
            StrSql = "UPDATE batch_proceso SET bprcprogreso = " & Progreso & " WHERE bpronro = " & NroProceso
            objConnProgreso.Execute StrSql, , adExecuteNoRecords
        End If
    
        objrs_pro.MoveNext
    Loop

Final:
    MyCommitTrans
    If objrs_pro.State = adStateOpen Then objrs_pro.Close
    If objCon.State = adStateOpen Then objCon.Close
    If objRs.State = adStateOpen Then objRs.Close
    If rs.State = adStateOpen Then rs.Close
        
    Set objrs_pro = Nothing
    Set objRs = Nothing
    Set objCon = Nothing
    Set rs = Nothing
End Sub


Public Sub politica500(ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Habilita la compensacion de AP.
' Autor: FGZ - 31/10/2006
' Ultima modificacion:
'   Margiotta, Emanuel (14825)- Se agrego el parametro de version.
'       Sin Versión o Versión 1 compensa en PRC01(AD) por el turno.
'       Versión 2: Compensa por parte diario de Compensacion de Horas
' --------------------------------------------------------------
         
    Call SetearParametrosPolitica(Detalle, ok)
    usaCompensacionAP = True

End Sub


Public Sub Politica510(p_ternro As Long, Fecha As Date, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Horas de llamada. CUSTOM CARGIL
' Autor: FGZ - 19/05/2008
' Ultima modificacion:
' --------------------------------------------------------------
Dim Opcion As Long
Dim TipoHora As Long
Dim ok As Boolean

    Call SetearParametrosPolitica(Detalle, ok)
    If Not ok Then
        Exit Sub
    End If
    Opcion = st_Opcion
    TipoHora = st_TipoHora1
    Select Case Opcion
    Case 1:
        Call Politica510_APQ(TipoHora)
        Exit Sub
    Case 2:
        Call Politica510_APS(TipoHora)
        Exit Sub
    Case 3:
        Call Politica510_BB(TipoHora)
        Exit Sub
    Case 4:
        Call Politica510_BB2(TipoHora)
        Exit Sub
    Case Else:
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "Version " & Opcion & " inexistente. "
        End If
    End Select

End Sub


Public Sub Politica510_APQ(ByVal TipoHora As Long)
' --------------------------------------------------------------
' Descripcion: Horas de llamada. CUSTOM APQ
' Autor: FGZ - 19/05/2008
' Ultima modificacion:
' --------------------------------------------------------------
Dim Cant_Reg As Integer
Dim Cant_Pares As Integer
Dim i As Integer
Dim j As Integer
Dim TH_Extra As Long
Dim TH_Llamada As Long
Dim Hs_Extras As Single
Dim HS_Dto As Single
Dim TH_Dto As Long
Dim Red_Extra As Integer
Dim Red_Dto As Integer
Dim TipoHoraDto As Long
Dim Hora_a_Red As String

Dim rs As New ADODB.Recordset
Dim rs_TH As New ADODB.Recordset

Dim par1 As String
Dim par2 As String
Dim HDesde As String
Dim HHasta As String
Dim fecpar1 As Date
Dim fecpar2 As Date
Dim anor1 As Integer
Dim anor2 As Integer
Dim Reg_Ent As Long
Dim Reg_Sal As Long
Dim otroDia As Boolean
Dim TotHor As Single
Dim nro_desg As Long

Dim par As Integer
Dim Cambio_dia As Boolean
Dim reg(1 To 100) As TRegistracionesProcesadas
Dim TotHorHHMM As String


    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Version APQ "
    End If
   
    TipoHoraDto = 31
    
    'Cuento la cantidad de registraciones y pares
    Cant_Reg = 0
    Cant_Pares = 0
    StrSql = "SELECT COUNT(regnro) as cant FROM " & TTempWFTurno & " WHERE evenro = 16 "
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        If Not IsNull(rs!Cant) Then
            Cant_Reg = rs!Cant
        End If
    End If
    Cant_Pares = Int(Cant_Reg / 2)
    

    'Si hay una sola registracion ???
    If Cant_Reg = 1 Then
        
        'Exit Sub
    End If
    
    For i = 1 To Cant_Pares
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 16 AND par = " & i
        StrSql = StrSql & " ORDER BY fecha, par, hora"
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            par = rs!par
            par1 = rs!Hora
            fecpar1 = rs!Fecha
            Reg_Ent = rs!Regnro
            reg(i).Reg_Ent = rs!Regnro
            anor1 = 0 & rs!anornro
            
            StrSql = "UPDATE gti_registracion SET regestado = 'H',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs!Regnro
            objConn.Execute StrSql, , adExecuteNoRecords
            
            rs.MoveNext
            If rs.EOF Then
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  Par incompleto. Siguiente Par"
                End If
                GoTo SiguientePar
            End If
            
            par2 = rs!Hora
            fecpar2 = rs!Fecha
            Reg_Sal = rs!Regnro
            reg(i).Reg_Sal = rs!Regnro
            anor2 = "0" & rs!anornro
            
            StrSql = "UPDATE gti_registracion SET regestado = 'H',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs!Regnro
            objConn.Execute StrSql, , adExecuteNoRecords
            
            If fecpar1 = fecpar2 Then
                HDesde = par1
                HHasta = par2
                otroDia = False
            Else
                HDesde = par1
                HHasta = "2400"
                otroDia = True
            End If
            If otroDia Then
                objFechasHoras.RestaHs fecpar1, HDesde, fecpar1, "2400", Tdias, Thoras, Tmin
                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                
                objFechasHoras.RestaHs fecpar2, "0000", fecpar2, par2, Tdias, Thoras, Tmin
                TotHor = TotHor + (Tdias * 24) + (Thoras + (Tmin / 60))
            Else
                objFechasHoras.RestaHs fecpar1, HDesde, fecpar2, HHasta, Tdias, Thoras, Tmin
                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
            End If
                                
                    
            If (TotHor > 0) Then
                Hs_Extras = TotHor
                'busca la cantidad de horas minimas en la configuracion del tipo de hora en el turno
                StrSql = "SELECT * FROM gti_config_tur_hor "
                StrSql = StrSql & " WHERE conhornro = " & TipoHora
                StrSql = StrSql & " AND turnro = " & Nro_Turno
                OpenRecordset StrSql, rs_TH
                If Not rs_TH.EOF Then
                    TH_Extra = rs_TH!thnro
                    Red_Extra = rs_TH!conhredondeo
                Else
                    TH_Extra = 0
                End If
    
                If Hs_Extras > 0 And (TH_Extra <> 0) Then
                    'Redondeo del total de horas
                    TotHorHHMM = CHorasSF(Hs_Extras, 60)
                    Call Redondeo_enHorasMinutos(TotHorHHMM, Red_Extra, 60, TotHorHHMM)
                    TotHorHHMM = "'" & TotHorHHMM & "'"
                    
                    objFechasHoras.Convertir_A_Hora Hs_Extras * 60, Hora_a_Red
                    objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, Red_Extra, Hs_Extras
   
            
'                    StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
'                             "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
'                             "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
'                             Hs_Extras & "," & ConvFecha(fecpar1) & ",' '," & ConvFecha(fecpar1) & ",'" & par1 & "','" & _
'                             par2 & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
'                             ValorNulo & "," & Empleado.Ternro & "," & TH_Extra & "," & Nro_Turno & "," & _
'                             Reg_Ent & ",'" & IIf(J = 1, par1, "0000") & "'," & Reg_Sal & ",'" & _
'                             IIf((J = 2) Or (J = 1 And Not otroDia), par2, "2400") & "'," & Empleado.Legajo & "," & ConvFecha(p_fecha) & ")"
'                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    
                    'Genero la hora
                    'C.A.T. 06/08/08 Se asocia la anormalidad 10 (horas de llamada) a la hora generada
                    
                    
                    StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                             "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                             "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                             TotHorHHMM & "," & Hs_Extras & "," & ConvFecha(fecpar1) & ",' '," & ConvFecha(fecpar1) & ",'" & par1 & "','" & _
                             par2 & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & ",10," & _
                             ValorNulo & "," & Empleado.Ternro & "," & TH_Extra & "," & Nro_Turno & "," & _
                             Reg_Ent & ",'" & IIf(j = 1, par1, "0000") & "'," & Reg_Sal & ",'" & _
                             IIf((j = 2) Or (j = 1 And Not otroDia), par2, "2400") & "'," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TH_Extra & "- Cantidad: " & Hs_Extras & " hs."
                    End If
                    
                    ' Marcar las registraciones involucradas con el Horario generado
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Ent
                    objConn.Execute StrSql, , adExecuteNoRecords
                        
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Sal
                    objConn.Execute StrSql, , adExecuteNoRecords
                End If
                
                
                'Inserto si es necesario las Horas de llamada
                HS_Dto = 4 - Hs_Extras
                
                'busca la cantidad de horas minimas en la configuracion del tipo de hora en el turno
                StrSql = "SELECT * FROM gti_config_tur_hor "
                StrSql = StrSql & " WHERE conhornro = " & TipoHoraDto
                StrSql = StrSql & " AND turnro = " & Nro_Turno
                OpenRecordset StrSql, rs_TH
                If Not rs_TH.EOF Then
                    TH_Dto = rs_TH!thnro
                    Red_Dto = rs_TH!conhredondeo
                Else
                    TH_Dto = 0
                End If
                
                If (HS_Dto > 0) And (TH_Dto <> 0) Then
                    'Redondeo del total de horas
                    TotHorHHMM = CHorasSF(HS_Dto, 60)
                    Call Redondeo_enHorasMinutos(TotHorHHMM, Red_Dto, 60, TotHorHHMM)
                    TotHorHHMM = "'" & TotHorHHMM & "'"
                    
                    objFechasHoras.Convertir_A_Hora HS_Dto * 60, Hora_a_Red
                    objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, Red_Dto, HS_Dto
   
            
                    StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                             "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                             "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                             TotHorHHMM & "," & HS_Dto & "," & ConvFecha(fecpar1) & ",' '," & ConvFecha(fecpar1) & ",'" & par1 & "','" & _
                             par2 & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                             ValorNulo & "," & Empleado.Ternro & "," & TH_Dto & "," & Nro_Turno & "," & _
                             Reg_Ent & ",'" & IIf(j = 1, par1, "0000") & "'," & Reg_Sal & ",'" & _
                             IIf((j = 2) Or (j = 1 And Not otroDia), par2, "2400") & "'," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TH_Dto & "- Cantidad: " & HS_Dto & " hs."
                    End If
                End If
            End If
        End If
SiguientePar:
    Next i
End Sub


Public Sub Politica510_APS(ByVal TipoHora As Long)
' --------------------------------------------------------------
' Descripcion: Horas de llamada. CUSTOM APS
' Autor: FGZ - 19/05/2008
' Ultima modificacion:
' --------------------------------------------------------------
Dim Cant_Reg As Integer
Dim Cant_Pares As Integer
Dim i As Integer
Dim j As Integer
Dim TH_Extra As Long
Dim TH_Llamada As Long
Dim Hs_Extras As Single
Dim HS_Dto As Single
Dim TH_Dto As Long
Dim Red_Extra As Integer
Dim Red_Dto As Integer
Dim TipoHoraDto As Long
Dim Hora_a_Red As String

Dim rs As New ADODB.Recordset
Dim rs_TH As New ADODB.Recordset

Dim par1 As String
Dim par2 As String
Dim HDesde As String
Dim HHasta As String
Dim fecpar1 As Date
Dim fecpar2 As Date
Dim anor1 As Integer
Dim anor2 As Integer
Dim Reg_Ent As Long
Dim Reg_Sal As Long
Dim otroDia As Boolean
Dim TotHor As Single
Dim Hs_Par As Single
Dim nro_desg As Long

Dim par As Integer
Dim Cambio_dia As Boolean
Dim reg(1 To 100) As TRegistracionesProcesadas
Dim TotHorHHMM As String


    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Version APS "
    End If
   
    TipoHoraDto = 31
    
    'Cuento la cantidad de registraciones y pares
    Cant_Reg = 0
    Cant_Pares = 0
    StrSql = "SELECT COUNT(regnro) as cant FROM " & TTempWFTurno & " WHERE evenro = 15 "
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        If Not IsNull(rs!Cant) Then
            Cant_Reg = rs!Cant
        End If
    End If
    Cant_Pares = Int(Cant_Reg / 2)
    

    'Si hay una sola registracion ???
    If Cant_Reg = 1 Then
        'Exit Sub
    End If
    
    For i = 1 To Cant_Pares
        Hs_Par = 0
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 15 AND par = " & i
        StrSql = StrSql & " ORDER BY hora"
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            par = rs!par
            par1 = rs!Hora
            fecpar1 = rs!Fecha
            Reg_Ent = rs!Regnro
            reg(i).Reg_Ent = rs!Regnro
            anor1 = 0 & rs!anornro
            
            StrSql = "UPDATE gti_registracion SET regestado = 'H',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs!Regnro
            objConn.Execute StrSql, , adExecuteNoRecords
            
            rs.MoveNext
            If rs.EOF Then
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  Par incompleto. Siguiente Par"
                End If
                GoTo SiguientePar
            End If
            
            par2 = rs!Hora
            fecpar2 = rs!Fecha
            Reg_Sal = rs!Regnro
            reg(i).Reg_Sal = rs!Regnro
            anor2 = "0" & rs!anornro
            
            StrSql = "UPDATE gti_registracion SET regestado = 'H',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs!Regnro
            objConn.Execute StrSql, , adExecuteNoRecords
            
            If fecpar1 = fecpar2 Then
                HDesde = par1
                HHasta = par2
                otroDia = False
            Else
                HDesde = par1
                HHasta = "2400"
                otroDia = True
            End If
            If otroDia Then
                objFechasHoras.RestaHs fecpar1, HDesde, fecpar1, "2400", Tdias, Thoras, Tmin
                Hs_Par = (Tdias * 24) + (Thoras + (Tmin / 60))
                
                objFechasHoras.RestaHs fecpar2, "0000", fecpar2, par2, Tdias, Thoras, Tmin
                Hs_Par = Hs_Par + (Tdias * 24) + (Thoras + (Tmin / 60))
                
                TotHor = TotHor + Hs_Par
            Else
                objFechasHoras.RestaHs fecpar1, HDesde, fecpar2, HHasta, Tdias, Thoras, Tmin
                Hs_Par = (Tdias * 24) + (Thoras + (Tmin / 60))
                
                TotHor = TotHor + Hs_Par
            End If
        End If
SiguientePar:
    Next i
    
    
    
    If (TotHor > 0) Then
        Hs_Extras = TotHor
        'busca la cantidad de horas minimas en la configuracion del tipo de hora en el turno
        StrSql = "SELECT * FROM gti_config_tur_hor "
        StrSql = StrSql & " WHERE conhornro = " & TipoHora
        StrSql = StrSql & " AND turnro = " & Nro_Turno
        OpenRecordset StrSql, rs_TH
        If Not rs_TH.EOF Then
            TH_Extra = rs_TH!thnro
            Red_Extra = rs_TH!conhredondeo
        Else
            TH_Extra = 0
        End If

        If Hs_Extras > 0 And (TH_Extra <> 0) Then
            'Redondeo del total de horas
            TotHorHHMM = CHorasSF(Hs_Extras, 60)
            Call Redondeo_enHorasMinutos(TotHorHHMM, Red_Extra, 60, TotHorHHMM)
            TotHorHHMM = "'" & TotHorHHMM & "'"
            
            objFechasHoras.Convertir_A_Hora Hs_Extras * 60, Hora_a_Red
            objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, Red_Extra, Hs_Extras

    
'            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
'                     "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
'                     "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
'                     Hs_Extras & "," & ConvFecha(fecpar1) & ",' '," & ConvFecha(fecpar1) & ",'" & par1 & "','" & _
'                     par2 & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
'                     ValorNulo & "," & Empleado.Ternro & "," & TH_Extra & "," & Nro_Turno & "," & _
'                     Reg_Ent & ",'" & IIf(J = 1, par1, "0000") & "'," & Reg_Sal & ",'" & _
'                     IIf((J = 2) Or (J = 1 And Not otroDia), par2, "2400") & "'," & Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
'            objConn.Execute StrSql, , adExecuteNoRecords
            
            
            'Genero la hora
            'C.A.T. 06/08/08 Se asocia la anormalidad 10 (horas de llamada) a la hora generada
            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                     "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                     "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                     TotHorHHMM & "," & Hs_Extras & "," & ConvFecha(fecpar1) & ",' '," & ConvFecha(fecpar1) & ",'" & par1 & "','" & _
                     par2 & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & ",10," & _
                     ValorNulo & "," & Empleado.Ternro & "," & TH_Extra & "," & Nro_Turno & "," & _
                     Reg_Ent & ",'" & IIf(j = 1, par1, "0000") & "'," & Reg_Sal & ",'" & _
                     IIf((j = 2) Or (j = 1 And Not otroDia), par2, "2400") & "'," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TH_Extra & "- Cantidad: " & Hs_Extras & " hs."
            End If
            
            ' Marcar las registraciones involucradas con el Horario generado
            StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Ent
            objConn.Execute StrSql, , adExecuteNoRecords
                
            StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Sal
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
        
        
        'Inserto si es necesario las Horas de llamada
        'ASSIGN hs_llamada = (4 * cant-pares) - hs_extras.
        'HS_Dto = (4 * Cant_Pares) - Hs_Extras
        HS_Dto = (4 * Cant_Pares)
        
        'busca la cantidad de horas minimas en la configuracion del tipo de hora en el turno
        StrSql = "SELECT * FROM gti_config_tur_hor "
        StrSql = StrSql & " WHERE conhornro = " & TipoHoraDto
        StrSql = StrSql & " AND turnro = " & Nro_Turno
        OpenRecordset StrSql, rs_TH
        If Not rs_TH.EOF Then
            TH_Dto = rs_TH!thnro
            Red_Dto = rs_TH!conhredondeo
        Else
            TH_Dto = 0
        End If
        
        If (HS_Dto > 0) And (TH_Dto <> 0) Then
            'Redondeo del total de horas
            TotHorHHMM = CHorasSF(HS_Dto, 60)
            Call Redondeo_enHorasMinutos(TotHorHHMM, Red_Dto, 60, TotHorHHMM)
            TotHorHHMM = "'" & TotHorHHMM & "'"
            
            objFechasHoras.Convertir_A_Hora HS_Dto * 60, Hora_a_Red
            objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, Red_Dto, HS_Dto

    
            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                     "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                     "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                     TotHorHHMM & "," & HS_Dto & "," & ConvFecha(fecpar1) & ",' '," & ConvFecha(fecpar1) & ",'" & par1 & "','" & _
                     par2 & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                     ValorNulo & "," & Empleado.Ternro & "," & TH_Dto & "," & Nro_Turno & "," & _
                     Reg_Ent & ",'" & IIf(j = 1, par1, "0000") & "'," & Reg_Sal & ",'" & _
                     IIf((j = 2) Or (j = 1 And Not otroDia), par2, "2400") & "'," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TH_Dto & "- Cantidad: " & HS_Dto & " hs."
            End If
        End If
    End If
End Sub

Public Sub Politica510_APS2(ByVal TipoHora As Long)
' --------------------------------------------------------------
' Descripcion: Horas de llamada. CUSTOM APS
' Autor: FGZ - 19/05/2008
' Ultima modificacion:
' --------------------------------------------------------------
Dim Cant_Reg As Integer
Dim Cant_Pares As Integer
Dim i As Integer
Dim j As Integer
Dim TH_Extra As Long
Dim TH_Llamada As Long
Dim Hs_Extras As Single
Dim HS_Dto As Single
Dim TH_Dto As Long
Dim Red_Extra As Integer
Dim Red_Dto As Integer
Dim TipoHoraDto As Long
Dim Hora_a_Red As String

Dim rs As New ADODB.Recordset
Dim rs_TH As New ADODB.Recordset

Dim par1 As String
Dim par2 As String
Dim HDesde As String
Dim HHasta As String
Dim fecpar1 As Date
Dim fecpar2 As Date
Dim anor1 As Integer
Dim anor2 As Integer
Dim Reg_Ent As Long
Dim Reg_Sal As Long
Dim otroDia As Boolean
Dim TotHor As Single
Dim Hs_Par As Single
Dim nro_desg As Long

Dim par As Integer
Dim Cambio_dia As Boolean
Dim reg(1 To 100) As TRegistracionesProcesadas
Dim TotHorHHMM As String


    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Version APQ "
    End If
   
    TipoHoraDto = 31
    
    'Cuento la cantidad de registraciones y pares
    Cant_Reg = 0
    Cant_Pares = 0
    StrSql = "SELECT COUNT(regnro) as cant FROM " & TTempWFTurno & " WHERE evenro = 15 "
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        If Not IsNull(rs!Cant) Then
            Cant_Reg = rs!Cant
        End If
    End If
    Cant_Pares = Int(Cant_Reg / 2)
    

    'Si hay una sola registracion ???
    If Cant_Reg = 1 Then
        'Exit Sub
    End If
    
    For i = 1 To Cant_Pares
        Hs_Par = 0
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 15 AND par = " & i
        StrSql = StrSql & " ORDER BY hora"
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            par = rs!par
            par1 = rs!Hora
            fecpar1 = rs!Fecha
            Reg_Ent = rs!Regnro
            reg(i).Reg_Ent = rs!Regnro
            anor1 = 0 & rs!anornro
            
            StrSql = "UPDATE gti_registracion SET regestado = 'H',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs!Regnro
            objConn.Execute StrSql, , adExecuteNoRecords
            
            rs.MoveNext
            If rs.EOF Then
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  Par incompleto. Siguiente Par"
                End If
                GoTo SiguientePar
            End If
            
            par2 = rs!Hora
            fecpar2 = rs!Fecha
            Reg_Sal = rs!Regnro
            reg(i).Reg_Sal = rs!Regnro
            anor2 = "0" & rs!anornro
            
            StrSql = "UPDATE gti_registracion SET regestado = 'H',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs!Regnro
            objConn.Execute StrSql, , adExecuteNoRecords
            
            If fecpar1 = fecpar2 Then
                HDesde = par1
                HHasta = par2
                otroDia = False
            Else
                HDesde = par1
                HHasta = "2400"
                otroDia = True
            End If
            If otroDia Then
                objFechasHoras.RestaHs fecpar1, HDesde, fecpar1, "2400", Tdias, Thoras, Tmin
                Hs_Par = (Tdias * 24) + (Thoras + (Tmin / 60))
                
                objFechasHoras.RestaHs fecpar2, "0000", fecpar2, par2, Tdias, Thoras, Tmin
                Hs_Par = Hs_Par + (Tdias * 24) + (Thoras + (Tmin / 60))
                
                TotHor = TotHor + Hs_Par
            Else
                objFechasHoras.RestaHs fecpar1, HDesde, fecpar2, HHasta, Tdias, Thoras, Tmin
                Hs_Par = (Tdias * 24) + (Thoras + (Tmin / 60))
                
                TotHor = TotHor + Hs_Par
            End If
        End If
SiguientePar:
    Next i
    
    
    If (TotHor > 0) Then
        'Inserto las Horas de llamada
        Select Case Weekday(p_fecha)
        Case 1: 'domingo
            HS_Dto = 5
        Case 2, 3, 4, 5, 6: 'Lunes a Viernes
            HS_Dto = 4
        Case 7: 'sabado
            HS_Dto = 4
        End Select
        
        'busca la cantidad de horas minimas en la configuracion del tipo de hora en el turno
        StrSql = "SELECT * FROM gti_config_tur_hor "
        StrSql = StrSql & " WHERE conhornro = " & TipoHoraDto
        StrSql = StrSql & " AND turnro = " & Nro_Turno
        OpenRecordset StrSql, rs_TH
        If Not rs_TH.EOF Then
            TH_Dto = rs_TH!thnro
            Red_Dto = rs_TH!conhredondeo
        Else
            TH_Dto = 0
        End If
        
        If (HS_Dto > 0) And (TH_Dto <> 0) Then
            'Redondeo del total de horas
            TotHorHHMM = CHorasSF(HS_Dto, 60)
            Call Redondeo_enHorasMinutos(TotHorHHMM, Red_Dto, 60, TotHorHHMM)
            TotHorHHMM = "'" & TotHorHHMM & "'"
            
            objFechasHoras.Convertir_A_Hora HS_Dto * 60, Hora_a_Red
            objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, Red_Dto, HS_Dto

    
            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                     "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                     "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                     TotHorHHMM & "," & HS_Dto & "," & ConvFecha(fecpar1) & ",' '," & ConvFecha(fecpar1) & ",'" & par1 & "','" & _
                     par2 & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                     ValorNulo & "," & Empleado.Ternro & "," & TH_Dto & "," & Nro_Turno & "," & _
                     Reg_Ent & ",'" & IIf(j = 1, par1, "0000") & "'," & Reg_Sal & ",'" & _
                     IIf((j = 2) Or (j = 1 And Not otroDia), par2, "2400") & "'," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TH_Dto & "- Cantidad: " & HS_Dto & " hs."
            End If
        End If
    End If
End Sub

Public Sub Politica510_BB(ByVal TipoHora As Long)
' --------------------------------------------------------------
' Descripcion: Horas de llamada. CUSTOM BB
' Autor: FGZ - 19/05/2008
' Ultima modificacion:
' --------------------------------------------------------------
Dim Cant_Reg As Integer
Dim Cant_Pares As Integer
Dim i As Integer
Dim j As Integer
Dim TH_Extra As Long
Dim TH_Llamada As Long
Dim Hs_Extras As Single
Dim HS_Dto As Single
Dim TH_Dto As Long
Dim Red_Extra As Integer
Dim Red_Dto As Integer
Dim TipoHoraDto As Long
Dim Hora_a_Red As String

Dim rs As New ADODB.Recordset
Dim rs_TH As New ADODB.Recordset

Dim par1 As String
Dim par2 As String
Dim HDesde As String
Dim HHasta As String
Dim fecpar1 As Date
Dim fecpar2 As Date
Dim anor1 As Integer
Dim anor2 As Integer
Dim Reg_Ent As Long
Dim Reg_Sal As Long
Dim otroDia As Boolean
Dim TotHor As Single
Dim Hs_Par As Single
Dim nro_desg As Long

Dim par As Integer
Dim Cambio_dia As Boolean
Dim reg(1 To 100) As TRegistracionesProcesadas
Dim TotHorHHMM As String


    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Version BB "
    End If
   
    TipoHoraDto = 31
    
    'Cuento la cantidad de registraciones y pares
    Cant_Reg = 0
    Cant_Pares = 0
    StrSql = "SELECT COUNT(regnro) as cant FROM " & TTempWFTurno & " WHERE evenro = 15 "
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        If Not IsNull(rs!Cant) Then
            Cant_Reg = rs!Cant
        End If
    End If
    Cant_Pares = Int(Cant_Reg / 2)
    

    'Si hay una sola registracion ???
    If Cant_Reg = 1 Then
        'Exit Sub
    End If
    
    For i = 1 To Cant_Pares
        Hs_Par = 0
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 15 AND par = " & i
        StrSql = StrSql & " ORDER BY hora"
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            par = rs!par
            par1 = rs!Hora
            fecpar1 = rs!Fecha
            Reg_Ent = rs!Regnro
            reg(i).Reg_Ent = rs!Regnro
            anor1 = 0 & rs!anornro
            
            StrSql = "UPDATE gti_registracion SET regestado = 'H',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs!Regnro
            objConn.Execute StrSql, , adExecuteNoRecords
            
            rs.MoveNext
            If rs.EOF Then
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  Par incompleto. Siguiente Par"
                End If
                GoTo SiguientePar
            End If
            
            par2 = rs!Hora
            fecpar2 = rs!Fecha
            Reg_Sal = rs!Regnro
            reg(i).Reg_Sal = rs!Regnro
            anor2 = "0" & rs!anornro
            
            StrSql = "UPDATE gti_registracion SET regestado = 'H',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs!Regnro
            objConn.Execute StrSql, , adExecuteNoRecords
            
            If fecpar1 = fecpar2 Then
                HDesde = par1
                HHasta = par2
                otroDia = False
            Else
                HDesde = par1
                HHasta = "2400"
                otroDia = True
            End If
            If otroDia Then
                objFechasHoras.RestaHs fecpar1, HDesde, fecpar1, "2400", Tdias, Thoras, Tmin
                Hs_Par = (Tdias * 24) + (Thoras + (Tmin / 60))
                
                objFechasHoras.RestaHs fecpar2, "0000", fecpar2, par2, Tdias, Thoras, Tmin
                Hs_Par = Hs_Par + (Tdias * 24) + (Thoras + (Tmin / 60))
                
                TotHor = TotHor + Hs_Par
            Else
                objFechasHoras.RestaHs fecpar1, HDesde, fecpar2, HHasta, Tdias, Thoras, Tmin
                Hs_Par = (Tdias * 24) + (Thoras + (Tmin / 60))
                
                TotHor = TotHor + Hs_Par
            End If
        End If
SiguientePar:
    Next i
    
    
    If (TotHor > 0) Then
        HS_Dto = 4
        
        'busca la cantidad de horas minimas en la configuracion del tipo de hora en el turno
        StrSql = "SELECT * FROM gti_config_tur_hor "
        StrSql = StrSql & " WHERE conhornro = " & TipoHoraDto
        StrSql = StrSql & " AND turnro = " & Nro_Turno
        OpenRecordset StrSql, rs_TH
        If Not rs_TH.EOF Then
            TH_Dto = rs_TH!thnro
            Red_Dto = rs_TH!conhredondeo
        Else
            TH_Dto = 0
        End If
        
        If (HS_Dto > 0) And (TH_Dto <> 0) Then
            'Redondeo del total de horas
            TotHorHHMM = CHorasSF(HS_Dto, 60)
            Call Redondeo_enHorasMinutos(TotHorHHMM, Red_Dto, 60, TotHorHHMM)
            TotHorHHMM = "'" & TotHorHHMM & "'"
            
            objFechasHoras.Convertir_A_Hora HS_Dto * 60, Hora_a_Red
            objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, Red_Dto, HS_Dto

    
'            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
'                     "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
'                     "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
'                     HS_Dto & "," & ConvFecha(fecpar1) & ",' '," & ConvFecha(fecpar1) & ",'" & par1 & "','" & _
'                     par2 & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
'                     ValorNulo & "," & Empleado.Ternro & "," & TH_Dto & "," & Nro_Turno & "," & _
'                     Reg_Ent & ",'" & IIf(J = 1, par1, "0000") & "'," & Reg_Sal & ",'" & _
'                     IIf((J = 2) Or (J = 1 And Not otroDia), par2, "2400") & "'," & Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
'            objConn.Execute StrSql, , adExecuteNoRecords
            
            'Genero la hora
            'C.A.T. 06/08/08 Se asocia la anormalidad 10 (horas de llamada) a la hora generada
            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                     "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                     "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                     TotHorHHMM & "," & HS_Dto & "," & ConvFecha(fecpar1) & ",' '," & ConvFecha(fecpar1) & ",'" & par1 & "','" & _
                     par2 & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & ",10," & _
                     ValorNulo & "," & Empleado.Ternro & "," & TH_Dto & "," & Nro_Turno & "," & _
                     Reg_Ent & ",'" & IIf(j = 1, par1, "0000") & "'," & Reg_Sal & ",'" & _
                     IIf((j = 2) Or (j = 1 And Not otroDia), par2, "2400") & "'," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TH_Dto & "- Cantidad: " & HS_Dto & " hs."
            End If
            
            ' Marcar las registraciones involucradas con el Horario generado
            StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Ent
            objConn.Execute StrSql, , adExecuteNoRecords
                
            StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Sal
            objConn.Execute StrSql, , adExecuteNoRecords
            
        End If
    End If
End Sub

Public Sub Politica510_BB2(ByVal TipoHora As Long)
' --------------------------------------------------------------
' Descripcion: Horas de llamada. CUSTOM BB2
' Autor: FGZ - 19/05/2008
' Ultima modificacion:
' --------------------------------------------------------------
Dim Cant_Reg As Integer
Dim Cant_Pares As Integer
Dim i As Integer
Dim j As Integer
Dim TH_Extra As Long
Dim TH_Llamada As Long
Dim Hs_Extras As Single
Dim HS_Dto As Single
Dim TH_Dto As Long
Dim Red_Extra As Integer
Dim Red_Dto As Integer
Dim TipoHoraDto As Long
Dim Hora_a_Red As String

Dim rs As New ADODB.Recordset
Dim rs_TH As New ADODB.Recordset

Dim par1 As String
Dim par2 As String
Dim HDesde As String
Dim HHasta As String
Dim fecpar1 As Date
Dim fecpar2 As Date
Dim anor1 As Integer
Dim anor2 As Integer
Dim Reg_Ent As Long
Dim Reg_Sal As Long
Dim otroDia As Boolean
Dim TotHor As Single
Dim nro_desg As Long

Dim par As Integer
Dim Cambio_dia As Boolean
Dim reg(1 To 100) As TRegistracionesProcesadas
Dim TotHorHHMM As String


    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Version BB2"
    End If
   
    TipoHoraDto = 31
    
    'Cuento la cantidad de registraciones y pares
    Cant_Reg = 0
    Cant_Pares = 0
    StrSql = "SELECT COUNT(regnro) as cant FROM " & TTempWFTurno & " WHERE evenro = 16 "
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        If Not IsNull(rs!Cant) Then
            Cant_Reg = rs!Cant
        End If
    End If
    Cant_Pares = Int(Cant_Reg / 2)
    

    'Si hay una sola registracion ???
    If Cant_Reg = 1 Then
        'Exit Sub
    End If
    
    For i = 1 To Cant_Pares
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 16 AND par = " & i
        StrSql = StrSql & " ORDER BY hora"
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            par = rs!par
            par1 = rs!Hora
            fecpar1 = rs!Fecha
            Reg_Ent = rs!Regnro
            reg(i).Reg_Ent = rs!Regnro
            anor1 = 0 & rs!anornro
            
            StrSql = "UPDATE gti_registracion SET regestado = 'H',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs!Regnro
            objConn.Execute StrSql, , adExecuteNoRecords
            
            rs.MoveNext
            If rs.EOF Then
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  Par incompleto. Siguiente Par"
                End If
                GoTo SiguientePar
            End If
            
            par2 = rs!Hora
            fecpar2 = rs!Fecha
            Reg_Sal = rs!Regnro
            reg(i).Reg_Sal = rs!Regnro
            anor2 = "0" & rs!anornro
            
            StrSql = "UPDATE gti_registracion SET regestado = 'H',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs!Regnro
            objConn.Execute StrSql, , adExecuteNoRecords
            
            If fecpar1 = fecpar2 Then
                HDesde = par1
                HHasta = par2
                otroDia = False
            Else
                HDesde = par1
                HHasta = "2400"
                otroDia = True
            End If
            If otroDia Then
                objFechasHoras.RestaHs fecpar1, HDesde, fecpar1, "2400", Tdias, Thoras, Tmin
                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                
                objFechasHoras.RestaHs fecpar2, "0000", fecpar2, par2, Tdias, Thoras, Tmin
                TotHor = TotHor + (Tdias * 24) + (Thoras + (Tmin / 60))
            Else
                objFechasHoras.RestaHs fecpar1, HDesde, fecpar2, HHasta, Tdias, Thoras, Tmin
                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
            End If
                                
                    
            If (TotHor > 0) Then
                'Inserto si es necesario las Horas de llamada
                HS_Dto = TotHor
                'Genero un minimo de 4 hs
                If HS_Dto < 4 Then
                    HS_Dto = 4
                End If
                If (Dia_Libre Or esFeriado) Or Weekday(p_fecha) = 1 Or (Weekday(p_fecha) = 7 And HDesde >= "1500") Then    'Feriado, Domingo o Sabado despues de la 15
                    HS_Dto = HS_Dto * 2
                End If
                
                'busca la cantidad de horas minimas en la configuracion del tipo de hora en el turno
                StrSql = "SELECT * FROM gti_config_tur_hor "
                StrSql = StrSql & " WHERE conhornro = " & TipoHoraDto
                StrSql = StrSql & " AND turnro = " & Nro_Turno
                OpenRecordset StrSql, rs_TH
                If Not rs_TH.EOF Then
                    TH_Dto = rs_TH!thnro
                    Red_Dto = rs_TH!conhredondeo
                Else
                    TH_Dto = 0
                End If
                
                If (HS_Dto > 0) And (TH_Dto <> 0) Then
                    'Redondeo del total de horas
                    TotHorHHMM = CHorasSF(HS_Dto, 60)
                    Call Redondeo_enHorasMinutos(TotHorHHMM, Red_Dto, 60, TotHorHHMM)
                    TotHorHHMM = "'" & TotHorHHMM & "'"
                    
                    objFechasHoras.Convertir_A_Hora HS_Dto * 60, Hora_a_Red
                    objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, Red_Dto, HS_Dto
   
            
'                    StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
'                             "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
'                             "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
'                             HS_Dto & "," & ConvFecha(fecpar1) & ",' '," & ConvFecha(fecpar1) & ",'" & par1 & "','" & _
'                             par2 & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
'                             ValorNulo & "," & Empleado.Ternro & "," & TH_Dto & "," & Nro_Turno & "," & _
'                             Reg_Ent & ",'" & IIf(J = 1, par1, "0000") & "'," & Reg_Sal & ",'" & _
'                             IIf((J = 2) Or (J = 1 And Not otroDia), par2, "2400") & "'," & Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
'                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    'Genero la hora
                    'C.A.T. 06/08/08 Se asocia la anormalidad 10 (horas de llamada) a la hora generada
                    StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                             "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                             "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                             TotHorHHMM & "," & HS_Dto & "," & ConvFecha(fecpar1) & ",' '," & ConvFecha(fecpar1) & ",'" & par1 & "','" & _
                             par2 & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & ",10," & _
                             ValorNulo & "," & Empleado.Ternro & "," & TH_Dto & "," & Nro_Turno & "," & _
                             Reg_Ent & ",'" & IIf(j = 1, par1, "0000") & "'," & Reg_Sal & ",'" & _
                             IIf((j = 2) Or (j = 1 And Not otroDia), par2, "2400") & "'," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TH_Dto & "- Cantidad: " & HS_Dto & " hs."
                    End If
                    
                    ' Marcar las registraciones involucradas con el Horario generado
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Ent
                    objConn.Execute StrSql, , adExecuteNoRecords
                        
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Sal
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                End If
            End If
        End If
SiguientePar:
    Next i
End Sub



Public Sub Politica550()
' --------------------------------------------------------------
' Descripcion: Habilita uso de politica para asignar
'              8 horas sabados y domingo sin control de presencia.
' Autor:?
' Ultima modificacion: FGZ - 29/07/2003
' --------------------------------------------------------------

    usaSabadoDomingo = True

End Sub

Public Sub politica560()
' --------------------------------------------------------------
' Descripcion: Habilita el uso de Turnos de Trasnoche.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' --------------------------------------------------------------

    usaTurnoTrasnoche = True

End Sub

Public Sub politica570()
' --------------------------------------------------------------
' Descripcion: Habilita la conversion de Horas.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' --------------------------------------------------------------

    UsaConversionHoras = True

End Sub

Public Sub politica576(ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Extras sin Autorizar.
' Autor: FGZ - 07/05/2009
' Ultima modificacion:
' --------------------------------------------------------------
Dim Version
Dim Lista_Dias

    HayMinimoExtrasSinAutorizar = True
    
    Call SetearParametrosPolitica(Detalle, ok)

    Version = st_Opcion
    MinimoExtrasSinAutorizar = st_Minutos / 60
    
End Sub

Public Sub politica577(ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Horas autorizables que no se autorizan.
' Autor: FGZ - 07/05/2009
' Ultima modificacion:
' --------------------------------------------------------------

    
    Call SetearParametrosPolitica(Detalle, ok)

    ListaNoAutorizable = st_ListaTH
   
End Sub


Public Sub politica571(ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Politica de Conversion que se utiliza en el AD_07 en el procedimiento Completar
'               Usa el Paramatro 17 que en este caso contiene una lista con dias de la semana (numeros)
'                   ej. (2,3,4)....(Lunes,Martes,Mierc)
' Autor: Diego Rosso
' Fecha: 21/11/2007
' --------------------------------------------------------------
Dim Version
Dim Lista_Dias

    Call SetearParametrosPolitica(Detalle, ok)

    Version = st_Opcion
    Lista_Dias = st_ListaTH
End Sub


Public Sub politica575()
' --------------------------------------------------------------
' Descripcion: Autorizaciones.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' --------------------------------------------------------------

    usaHorasExtras = True

End Sub

Public Sub politica580()
' --------------------------------------------------------------
' Descripcion: Habilita el tope de Horas extras.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' --------------------------------------------------------------

    usaTopesHorasExtras = True

End Sub

Public Sub politica585(ByVal Detalle As Long)
' ---------------------------------------------------------------------------------------------
' Descripcion: Topea las primeras X horas extras.
' Autor      : FGZ
' Fecha      : 08/01/2007
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
    
    Call SetearParametrosPolitica(Detalle, ok)
    If Not ok Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "Configuracion incorrecta."
        End If
        usaTopesGralHorasExtras = False
        Exit Sub
    End If
    
    'Parametros de la politica
        'st_ListaTH y st_TamañoVentana
    
    If Not IsNumeric(st_TamañoVentana) Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "Configuracion incorrecta. El tamaño de la ventana debe ser numérico."
        End If
        usaTopesGralHorasExtras = False
        Exit Sub
    End If
    usaTopesGralHorasExtras = True
        
End Sub




Public Sub politica590()
' --------------------------------------------------------------
' Descripcion: Genera Desgloce de Acumulado Parcial.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' --------------------------------------------------------------

    usaDesgloseAP = True

End Sub

Private Sub Politica597(ByVal p_ternro As Long, ByVal Detalle As Long)
' ------------------------------------------------------------------------------------------------------------------------
' Descripcion: Control de hs Nocturnas.
'   Parametros:
'       Opcion      : Version de la politica. Implica la funcionalidad de la misma.
'       st_TipoHora1: Tipo de Hora. Se supone que seria la Nocturna No aprobada. Este tipo de hora debe ser autorizable y ademas
'                     debe tener configurado el tipo de hora que genera cuando se autorice.
'       st_ListaTH  : Lista de tipos de horas. Seria la lista de horas que aprobarian a las Nocturnas
'                     (en principio serian las normales y las horas extras que no sean autorizables).
'   Funcionalidad:
'       La idea de la politica es aprobar las horas nocturnas o cualquier tipo de hora que se configure
'       en el parametro st_TipoHora1 cuando se solapen con alguna hora cuyo tipo esté incluido en la lista st_ListaTH.
'   Autor: FGZ
'   Fecha: 26/05/2009
'   Ultima modificacion:
' ------------------------------------------------------------------------------------------------------------------------
Dim Opcion  As Integer
Dim ListaTH As String
Dim thNocturna As Long
Dim NocAut As Long
Dim NocNoAut As Long

Dim TotHorAP As Single
Dim TotHorR1 As Single
Dim TotHorR2 As Single

Dim NocFDesde As Date
Dim NocFHasta As Date
Dim NocHDesde As String
Dim NocHHasta As String
Dim AuxFDesde As Date
Dim AuxFHasta As Date
Dim AuxHDesde As String
Dim AuxHHasta As String

Dim ApFDesde As Date
Dim ApFHasta As Date
Dim ApHDesde As String
Dim ApHHasta As String

Dim R1FDesde As Date
Dim R1FHasta As Date
Dim R1HDesde As String
Dim R1HHasta As String
Dim R2FDesde As Date
Dim R2FHasta As Date
Dim R2HDesde As String
Dim R2HHasta As String

Dim SeAprobo As Boolean
Dim RecargarNocturnas As Boolean
Dim CantidadRecargas As Integer


Dim rs As New ADODB.Recordset
Dim rsTH As New ADODB.Recordset
Dim rsAP As New ADODB.Recordset
'---------------------------------
Dim TotHorHHMM As String
   
    Call SetearParametrosPolitica(Detalle, ok)

    Opcion = st_Opcion  'Version de la politica
    thNocturna = st_TipoHora1 'Tipo de Hora Nocturna No aprobada
    ListaTH = st_ListaTH 'Lista de horas que aprobarian a las Nocturnas (en principio serian las normales)
    If depurar Then
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Version: " & Opcion
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Hora Nocturna: " & thNocturna
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Lista de Tipos de hora que aprueban: " & ListaTH
    End If
   
    'Busco cual es el tipo de hora para las nocturnas aprobadas
    StrSql = "SELECT thautpor,thdesautpor FROM tiphora WHERE thnro = " & thNocturna
    OpenRecordset StrSql, rsTH
    If Not rsTH.EOF Then
        If Not EsNulo(rsTH!thautpor) Then
            NocAut = rsTH!thautpor
        End If
        If Not EsNulo(rsTH!thdesautpor) Then
            NocNoAut = rsTH!thdesautpor
        End If
        If depurar Then
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Nocturna Autorizada: " & rsTH!thautpor
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Nocturna No Autorizada: " & rsTH!thdesautpor
        End If
        If NocAut = 0 Or NocNoAut = 0 Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No está configurada la autorizacion de la Hora Nocturna."
                Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No se ejecutará la política."
            End If
            Exit Sub
        End If
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No se encontró la configuracion del tipo de hora Nocturna."
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No se ejecutará la política."
        End If
        Exit Sub
    End If
    
   
   
   Select Case Opcion
   Case 1: 'Estandar
        CantidadRecargas = 0
        'Buscar los tipos de hora Nocturnas
        StrSql = " SELECT * FROM gti_horcumplido "
        StrSql = StrSql & " WHERE ternro = " & p_ternro
        StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
        StrSql = StrSql & " AND thnro = " & thNocturna
        StrSql = StrSql & " ORDER BY hordesde, horhoradesde"
        OpenRecordset StrSql, rs
        If rs.EOF Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "No hay hs Nocturnas generadas"
            End If
        End If
        Do While Not rs.EOF
            SeAprobo = False
            RecargarNocturnas = False
            'Por cada hora nocturna encontrada intersectarla con las hs que aprueban
            NocFDesde = rs!hordesde
            NocFHasta = rs!horhasta
            NocHDesde = rs!horhoradesde
            NocHHasta = rs!horhorahasta
       
            'Busco los th que aprueban
            StrSql = " SELECT * FROM gti_horcumplido "
            StrSql = StrSql & " WHERE ternro = " & p_ternro
            StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
            StrSql = StrSql & " AND thnro IN (" & ListaTH & ")"
            StrSql = StrSql & " ORDER BY thnro, hordesde, horhoradesde"
            OpenRecordset StrSql, rsAP
            If rsAP.EOF Then
                'Debo poner todas las horas como no autorizadas
                StrSql = "UPDATE gti_horcumplido SET "
                StrSql = StrSql & " thnro = " & NocNoAut
                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
            Do While Not rsAP.EOF And Not RecargarNocturnas
                AuxFDesde = rsAP!hordesde
                AuxFHasta = rsAP!horhasta
                AuxHDesde = rsAP!horhoradesde
                AuxHHasta = rsAP!horhorahasta
            
                SeAprobo = False
                'Nocturnas     [---------------]
                'Horario          (----------------)
                If objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFDesde, AuxHDesde) And objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFHasta, NocHHasta) And objFechasHoras.Menor_Igual_Hora(NocFHasta, NocHHasta, AuxFHasta, AuxHHasta) Then
                    SeAprobo = True
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas    [---------------]"
                        Flog.writeline Espacios(Tabulador * 3) & " 'Horario          (----------------)"
                    End If
                    'Lo aprobado seria
                    ApFDesde = AuxFDesde
                    ApFHasta = NocFHasta
                    ApHDesde = AuxHDesde
                    ApHHasta = NocHHasta
                    
                    objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                    TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                    
                    'Lo que resta seria
                    R1FDesde = NocFDesde
                    R1HDesde = NocHDesde
                    R1FHasta = AuxFDesde
                    R1HHasta = AuxHDesde
                    objFechasHoras.RestaHs R1FDesde, R1HDesde, R1FHasta, R1HHasta, Tdias, Thoras, Tmin
                    TotHorR1 = (Tdias * 24) + (Thoras + (Tmin / 60))


                    '==> debo modificar el registro actual y insertar uno nuevo con la parte aprobada
                    'Actualizo lo restante
                    If TotHorR1 <> 0 Then
                        TotHorHHMM = CHoras(TotHorR1, 60)
                        'RecargarNocturnas = True
                        StrSql = "UPDATE gti_horcumplido SET "
                        StrSql = StrSql & " horcant = " & TotHorR1
                        StrSql = StrSql & " ,horas = " & TotHorHHMM
                        'StrSql = StrSql & ", hordesde = " & ConvFecha(r1FDesde)
                        StrSql = StrSql & ", horhasta = " & ConvFecha(R1FHasta)
                        'StrSql = StrSql & ", horhoradesde = '" & r1HDesde & "'"
                        StrSql = StrSql & ", horhorahasta = '" & R1HHasta & "'"
                        StrSql = StrSql & " WHERE hornro = " & rs!hornro
                    Else
                        StrSql = "DELETE gti_horcumplido "
                        StrSql = StrSql & " WHERE hornro = " & rs!hornro
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    'Creo la nueva
                    If TotHorAP <> 0 Then
                        RecargarNocturnas = True
                        TotHorHHMM = CHoras(TotHorAP, 60)
                        StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                        StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                        StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                        StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                        StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                        StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                        StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                        StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                    End If
                End If
    
                'Nocturnas       [---------------]
                'Horario    (----------------)
                If Not SeAprobo Then
                    If objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFDesde, NocHDesde) And objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFHasta, AuxHHasta) And objFechasHoras.Menor_Igual_Hora(AuxFHasta, AuxHHasta, NocFHasta, NocHHasta) Then
                        SeAprobo = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas      [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario    (----------------)"
                        End If
                        'Lo aprobado seria
                        ApFDesde = NocFDesde
                        ApFHasta = AuxFHasta
                        ApHDesde = NocHDesde
                        ApHHasta = AuxHHasta
                    
                        objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                        TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        'Lo que resta seria
                        R1FDesde = AuxFHasta
                        R1HDesde = AuxHHasta
                        R1FHasta = NocFHasta
                        R1HHasta = NocHHasta
                        objFechasHoras.RestaHs R1FDesde, R1HDesde, R1FHasta, R1HHasta, Tdias, Thoras, Tmin
                        TotHorR1 = (Tdias * 24) + (Thoras + (Tmin / 60))
    
                        'Lo que resta seria
                        TotHorR2 = 0
                    
                        '==> debo modificar el registro actual y insertar uno nuevo con la parte aprobada
                        'Actualizo lo restante
                        If TotHorR1 <> 0 Then
                            'RecargarNocturnas = True
                            TotHorHHMM = CHoras(TotHorR1, 60)
                            
                            StrSql = "UPDATE gti_horcumplido SET "
                            StrSql = StrSql & " horcant = " & TotHorR1
                            StrSql = StrSql & " ,horas = " & TotHorHHMM
                            StrSql = StrSql & ", hordesde = " & ConvFecha(R1FDesde)
                            'StrSql = StrSql & ", horhasta = " & ConvFecha(R1FHasta)
                            StrSql = StrSql & ", horhoradesde = '" & R1HDesde & "'"
                            'StrSql = StrSql & ", horhorahasta = '" & R1HHasta & "'"
                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
                        Else
                            StrSql = "DELETE gti_horcumplido "
                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
                        End If
                        objConn.Execute StrSql, , adExecuteNoRecords
                        
                        If TotHorAP <> 0 Then
                            'Creo la nueva autorizada
                            RecargarNocturnas = True
                            TotHorHHMM = CHoras(TotHorAP, 60)
                            
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                            StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                            StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                            StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                End If
                
                'Nocturnas      [---------------]
                'Horario    (-----------------------)
                If Not SeAprobo Then
                    If objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFDesde, NocHDesde) And objFechasHoras.Menor_Igual_Hora(NocFHasta, NocHHasta, AuxFHasta, AuxHHasta) Then
                        SeAprobo = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas      [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario    (-----------------------)"
                        End If
                        'Lo aprobado seria
                        ApFDesde = NocFDesde
                        ApFHasta = NocFHasta
                        ApHDesde = NocHDesde
                        ApHHasta = NocHHasta
                    
                        objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                        TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        'Lo que resta seria
                        TotHorR1 = 0
    
                        'Lo que resta seria
                        TotHorR2 = 0
                        
                        '==> debo modificar el registro actual (cambiarle el tipo de hora a aprobado)
                        'Actualizo
                        
                        'RecargarNocturnas = True
                        StrSql = "UPDATE gti_horcumplido SET "
                        StrSql = StrSql & " thnro = " & NocAut
                        StrSql = StrSql & " WHERE hornro = " & rs!hornro
                        objConn.Execute StrSql, , adExecuteNoRecords
                    End If
                End If
                
                'Nocturnas  [---------------]
                'Horario        (--------)
                If Not SeAprobo Then
                    If objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFDesde, AuxHDesde) And objFechasHoras.Menor_Igual_Hora(AuxFHasta, AuxHHasta, NocFHasta, NocHHasta) Then
                        SeAprobo = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas  [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario        (--------)"
                        End If
                        'Lo aprobado seria
                        ApFDesde = AuxFDesde
                        ApFHasta = AuxFHasta
                        ApHDesde = AuxHDesde
                        ApHHasta = AuxHHasta
                    
                        objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                        TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        'Lo que resta seria
                        R1FDesde = NocFDesde
                        R1HDesde = NocHDesde
                        R1FHasta = AuxFDesde
                        R1HHasta = AuxHDesde
                        objFechasHoras.RestaHs R1FDesde, R1HDesde, R1FHasta, R1HHasta, Tdias, Thoras, Tmin
                        TotHorR1 = (Tdias * 24) + (Thoras + (Tmin / 60))
    
    
                        'Lo que resta seria
                        R2FDesde = AuxFHasta
                        R2HDesde = AuxHHasta
                        R2FHasta = NocFHasta
                        R2HHasta = NocHHasta
                        objFechasHoras.RestaHs R2FDesde, R2HDesde, R2FHasta, R2HHasta, Tdias, Thoras, Tmin
                        TotHorR2 = (Tdias * 24) + (Thoras + (Tmin / 60))
                    
                    
                        '==> debo modificar el registro actual a aprobado e insertar los 2 registros sobrantes como no aprobada
                        'Actualizo
                        If TotHorAP <> 0 Then
                            RecargarNocturnas = True
                            
                            TotHorHHMM = CHoras(TotHorAP, 60)
                            
                            StrSql = "UPDATE gti_horcumplido SET "
                            StrSql = StrSql & " horcant = " & TotHorAP
                            StrSql = StrSql & ", horas = " & TotHorHHMM
                            StrSql = StrSql & ", thnro = " & NocAut
                            StrSql = StrSql & ", hordesde = " & ConvFecha(ApFDesde)
                            StrSql = StrSql & ", horhasta = " & ConvFecha(ApFHasta)
                            StrSql = StrSql & ", horhoradesde = '" & ApHDesde & "'"
                            StrSql = StrSql & ", horhorahasta = '" & ApHHasta & "'"
                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                        
                        'Creo la 1er restante no autorizada
                        If TotHorR1 <> 0 Then
                            RecargarNocturnas = True
                            
                            TotHorHHMM = CHoras(TotHorR1, 60)
                            
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHorR1 & "," & ConvFecha(R1FDesde) & ",' '," & ConvFecha(R1FHasta) & ",'" & R1HDesde & "','"
                            StrSql = StrSql & R1HHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocNoAut & "," & rs!turnro & ","
                            StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                            StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    
                        'Creo la 2da restante no autorizada
                        If TotHorR2 <> 0 Then
                            RecargarNocturnas = True
                            
                            TotHorHHMM = CHoras(TotHorR2, 60)
                            
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHorR2 & "," & ConvFecha(R2FDesde) & ",' '," & ConvFecha(R2FHasta) & ",'" & R2HDesde & "','"
                            StrSql = StrSql & R2HHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocNoAut & "," & rs!turnro & ","
                            StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                            StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                End If
           
                rsAP.MoveNext
            Loop
       
            If RecargarNocturnas = True And CantidadRecargas < 10 Then
                CantidadRecargas = CantidadRecargas + 1
                'Recargo el rs
                StrSql = " SELECT * FROM gti_horcumplido "
                StrSql = StrSql & " WHERE ternro = " & p_ternro
                StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
                StrSql = StrSql & " AND thnro = " & thNocturna
                StrSql = StrSql & " ORDER BY hordesde, horhoradesde"
                OpenRecordset StrSql, rs
            Else
                'Busco el siguiente registro
                rs.MoveNext
            End If
        Loop
   Case 2: 'Custom MOnresa - No parte las horas, es decir, solo genera nuevas horas cuando se solapan
        CantidadRecargas = 0
        'Buscar los tipos de hora Nocturnas
        StrSql = " SELECT * FROM gti_horcumplido "
        StrSql = StrSql & " WHERE ternro = " & p_ternro
        StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
        StrSql = StrSql & " AND thnro = " & thNocturna
        StrSql = StrSql & " ORDER BY hordesde, horhoradesde"
        OpenRecordset StrSql, rs
        If rs.EOF Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "No hay hs Nocturnas generadas"
            End If
        End If
        Do While Not rs.EOF
            SeAprobo = False
            RecargarNocturnas = False
            'Por cada hora nocturna encontrada intersectarla con las hs que aprueban
            NocFDesde = rs!hordesde
            NocFHasta = rs!horhasta
            NocHDesde = rs!horhoradesde
            NocHHasta = rs!horhorahasta
       
            'Busco los th que aprueban
            StrSql = " SELECT * FROM gti_horcumplido "
            StrSql = StrSql & " WHERE ternro = " & p_ternro
            StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
            StrSql = StrSql & " AND thnro IN (" & ListaTH & ")"
            StrSql = StrSql & " ORDER BY thnro, hordesde, horhoradesde"
            OpenRecordset StrSql, rsAP
            Do While Not rsAP.EOF And Not RecargarNocturnas
                AuxFDesde = rsAP!hordesde
                AuxFHasta = rsAP!horhasta
                AuxHDesde = rsAP!horhoradesde
                AuxHHasta = rsAP!horhorahasta
            
                SeAprobo = False
                'Nocturnas     [---------------]
                'Horario          (----------------)
                If objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFDesde, AuxHDesde) And objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFHasta, NocHHasta) And objFechasHoras.Menor_Igual_Hora(NocFHasta, NocHHasta, AuxFHasta, AuxHHasta) Then
                    SeAprobo = True
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas    [---------------]"
                        Flog.writeline Espacios(Tabulador * 3) & " 'Horario          (----------------)"
                    End If
                    'Lo aprobado seria
                    ApFDesde = AuxFDesde
                    ApFHasta = NocFHasta
                    ApHDesde = AuxHDesde
                    ApHHasta = NocHHasta
                    
                    objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                    TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                    
                    'Creo la nueva
                    If TotHorAP <> 0 Then
                        RecargarNocturnas = False
                        TotHorHHMM = CHoras(TotHorAP, 60)
                        StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                        StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                        StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                        StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                        StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                        StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                        StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                        StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                    End If
                End If
    
                'Nocturnas       [---------------]
                'Horario    (----------------)
                If Not SeAprobo Then
                    If objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFDesde, NocHDesde) And objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFHasta, AuxHHasta) And objFechasHoras.Menor_Igual_Hora(AuxFHasta, AuxHHasta, NocFHasta, NocHHasta) Then
                        SeAprobo = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas      [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario    (----------------)"
                        End If
                        'Lo aprobado seria
                        ApFDesde = NocFDesde
                        ApFHasta = AuxFHasta
                        ApHDesde = NocHDesde
                        ApHHasta = AuxHHasta
                    
                        objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                        TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        If TotHorAP <> 0 Then
                            'Creo la nueva autorizada
                            RecargarNocturnas = False
                            TotHorHHMM = CHoras(TotHorAP, 60)
                            
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                            StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                            StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                            StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                End If
                
                'Nocturnas      [---------------]
                'Horario    (-----------------------)
                If Not SeAprobo Then
                    If objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFDesde, NocHDesde) And objFechasHoras.Menor_Igual_Hora(NocFHasta, NocHHasta, AuxFHasta, AuxHHasta) Then
                        SeAprobo = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas      [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario    (-----------------------)"
                        End If
                        'Lo aprobado seria
                        ApFDesde = NocFDesde
                        ApFHasta = NocFHasta
                        ApHDesde = NocHDesde
                        ApHHasta = NocHHasta
                    
                        objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                        TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        If TotHorAP <> 0 Then
                            'Creo la nueva autorizada
                            RecargarNocturnas = False
                            TotHorHHMM = CHoras(TotHorAP, 60)
                            
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                            StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                            StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                            StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                End If
                
                'Nocturnas  [---------------]
                'Horario        (--------)
                If Not SeAprobo Then
                    If objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFDesde, AuxHDesde) And objFechasHoras.Menor_Igual_Hora(AuxFHasta, AuxHHasta, NocFHasta, NocHHasta) Then
                        SeAprobo = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas  [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario        (--------)"
                        End If
                        'Lo aprobado seria
                        ApFDesde = AuxFDesde
                        ApFHasta = AuxFHasta
                        ApHDesde = AuxHDesde
                        ApHHasta = AuxHHasta
                    
                        objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                        TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        If TotHorAP <> 0 Then
                            'Creo la nueva autorizada
                            RecargarNocturnas = False
                            TotHorHHMM = CHoras(TotHorAP, 60)
                            
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                            StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                            StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                            StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                End If
           
                rsAP.MoveNext
            Loop
       
            If RecargarNocturnas = True And CantidadRecargas < 10 Then
                CantidadRecargas = CantidadRecargas + 1
                'Recargo el rs
                StrSql = " SELECT * FROM gti_horcumplido "
                StrSql = StrSql & " WHERE ternro = " & p_ternro
                StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
                StrSql = StrSql & " AND thnro = " & thNocturna
                StrSql = StrSql & " ORDER BY hordesde, horhoradesde"
                OpenRecordset StrSql, rs
            Else
                'Busco el siguiente registro
                rs.MoveNext
            End If
        Loop
   Case 3: 'genera 1 tipo de hora para las que solapan y otro para las que no solapan por la cantidad de hora originales(la v1 deja el tipo de hora original)
        CantidadRecargas = 0
        'Buscar los tipos de hora Nocturnas
        StrSql = " SELECT * FROM gti_horcumplido "
        StrSql = StrSql & " WHERE ternro = " & p_ternro
        StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
        StrSql = StrSql & " AND thnro = " & thNocturna
        StrSql = StrSql & " ORDER BY hordesde, horhoradesde"
        OpenRecordset StrSql, rs
        If rs.EOF Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "No hay hs Nocturnas generadas"
            End If
        End If
        Do While Not rs.EOF
            SeAprobo = False
            RecargarNocturnas = False
            'Por cada hora nocturna encontrada intersectarla con las hs que aprueban
            NocFDesde = rs!hordesde
            NocFHasta = rs!horhasta
            NocHDesde = rs!horhoradesde
            NocHHasta = rs!horhorahasta
       
            'Busco los th que aprueban
            StrSql = " SELECT * FROM gti_horcumplido "
            StrSql = StrSql & " WHERE ternro = " & p_ternro
            StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
            StrSql = StrSql & " AND thnro IN (" & ListaTH & ")"
            StrSql = StrSql & " ORDER BY thnro, hordesde, horhoradesde"
            OpenRecordset StrSql, rsAP
            
'            If rsAp.EOF Then
'                'Debo poner todas las horas como no autorizadas
'                StrSql = "UPDATE gti_horcumplido SET "
'                StrSql = StrSql & " thnro = " & NocNoAut
'                StrSql = StrSql & " WHERE hornro = " & rs!hornro
'                objConn.Execute StrSql, , adExecuteNoRecords
'            End If
            
            Do While Not rsAP.EOF And Not RecargarNocturnas
                AuxFDesde = rsAP!hordesde
                AuxFHasta = rsAP!horhasta
                AuxHDesde = rsAP!horhoradesde
                AuxHHasta = rsAP!horhorahasta
            
                SeAprobo = False
                'Nocturnas     [---------------]
                'Horario          (----------------)
                If objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFDesde, AuxHDesde) And objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFHasta, NocHHasta) And objFechasHoras.Menor_Igual_Hora(NocFHasta, NocHHasta, AuxFHasta, AuxHHasta) Then
                    SeAprobo = True
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas    [---------------]"
                        Flog.writeline Espacios(Tabulador * 3) & " 'Horario          (----------------)"
                    End If
                    'Lo aprobado seria
                    ApFDesde = AuxFDesde
                    ApFHasta = NocFHasta
                    ApHDesde = AuxHDesde
                    ApHHasta = NocHHasta
                    
                    objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                    TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                    
                    'Creo la nueva
                    If TotHorAP <> 0 Then
                        RecargarNocturnas = False
                        TotHorHHMM = CHoras(TotHorAP, 60)
                        StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                        StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                        StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                        StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                        StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                        StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                        StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                        StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
'                    Else
'                        '==> debo modificar el registro actual (cambiarle el tipo de hora a aprobado)
'                        'Actualizo
'
'                        'RecargarNocturnas = True
'                        StrSql = "UPDATE gti_horcumplido SET "
'                        StrSql = StrSql & " thnro = " & NocNoAut
'                        StrSql = StrSql & " WHERE hornro = " & rs!hornro
'                        objConn.Execute StrSql, , adExecuteNoRecords
                    End If
                End If
    
                'Nocturnas       [---------------]
                'Horario    (----------------)
                If Not SeAprobo Then
                    If objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFDesde, NocHDesde) And objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFHasta, AuxHHasta) And objFechasHoras.Menor_Igual_Hora(AuxFHasta, AuxHHasta, NocFHasta, NocHHasta) Then
                        SeAprobo = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas      [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario    (----------------)"
                        End If
                        'Lo aprobado seria
                        ApFDesde = NocFDesde
                        ApFHasta = AuxFHasta
                        ApHDesde = NocHDesde
                        ApHHasta = AuxHHasta
                    
                        objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                        TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        If TotHorAP <> 0 Then
                            'Creo la nueva autorizada
                            RecargarNocturnas = False
                            TotHorHHMM = CHoras(TotHorAP, 60)
                            
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                            StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                            StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                            StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
'                        Else
'                            '==> debo modificar el registro actual (cambiarle el tipo de hora a aprobado)
'                            'Actualizo
'
'                            'RecargarNocturnas = True
'                            StrSql = "UPDATE gti_horcumplido SET "
'                            StrSql = StrSql & " thnro = " & NocNoAut
'                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
'                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                End If
                
                'Nocturnas      [---------------]
                'Horario    (-----------------------)
                If Not SeAprobo Then
                    If objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFDesde, NocHDesde) And objFechasHoras.Menor_Igual_Hora(NocFHasta, NocHHasta, AuxFHasta, AuxHHasta) Then
                        SeAprobo = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas      [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario    (-----------------------)"
                        End If
                        'Lo aprobado seria
                        ApFDesde = NocFDesde
                        ApFHasta = NocFHasta
                        ApHDesde = NocHDesde
                        ApHHasta = NocHHasta
                    
                        objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                        TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        If TotHorAP <> 0 Then
                            'Creo la nueva autorizada
                            RecargarNocturnas = False
                            TotHorHHMM = CHoras(TotHorAP, 60)
                            
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                            StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                            StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                            StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
'                        Else
'                            '==> debo modificar el registro actual (cambiarle el tipo de hora a aprobado)
'                            'Actualizo
'
'                            'RecargarNocturnas = True
'                            StrSql = "UPDATE gti_horcumplido SET "
'                            StrSql = StrSql & " thnro = " & NocNoAut
'                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
'                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                End If
                
                'Nocturnas  [---------------]
                'Horario        (--------)
                If Not SeAprobo Then
                    If objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFDesde, AuxHDesde) And objFechasHoras.Menor_Igual_Hora(AuxFHasta, AuxHHasta, NocFHasta, NocHHasta) Then
                        SeAprobo = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas  [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario        (--------)"
                        End If
                        'Lo aprobado seria
                        ApFDesde = AuxFDesde
                        ApFHasta = AuxFHasta
                        ApHDesde = AuxHDesde
                        ApHHasta = AuxHHasta
                    
                        objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                        TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        If TotHorAP <> 0 Then
                            'Creo la nueva autorizada
                            RecargarNocturnas = False
                            TotHorHHMM = CHoras(TotHorAP, 60)
                            
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                            StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                            StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                            StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
'                        Else
'                            '==> debo modificar el registro actual (cambiarle el tipo de hora a aprobado)
'                            'Actualizo
'
'                            'RecargarNocturnas = True
'                            StrSql = "UPDATE gti_horcumplido SET "
'                            StrSql = StrSql & " thnro = " & NocNoAut
'                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
'                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                End If
                
'                If Not SeAprobo Then
'                        '==> debo modificar el registro actual (cambiarle el tipo de hora a aprobado)
'                        'Actualizo
'
'                        'RecargarNocturnas = True
'                        StrSql = "UPDATE gti_horcumplido SET "
'                        StrSql = StrSql & " thnro = " & NocNoAut
'                        StrSql = StrSql & " WHERE hornro = " & rs!hornro
'                        objConn.Execute StrSql, , adExecuteNoRecords
'                End If
           
           
                rsAP.MoveNext
            Loop
       
            If RecargarNocturnas = True And CantidadRecargas < 10 Then
                CantidadRecargas = CantidadRecargas + 1
                'Recargo el rs
                StrSql = " SELECT * FROM gti_horcumplido "
                StrSql = StrSql & " WHERE ternro = " & p_ternro
                StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
                StrSql = StrSql & " AND thnro = " & thNocturna
                StrSql = StrSql & " ORDER BY hordesde, horhoradesde"
                OpenRecordset StrSql, rs
            Else
                'Busco el siguiente registro
                rs.MoveNext
            End If
        Loop
        
        
        'Ahora todos los tipos de horas originales deben pasar a ser NA
        StrSql = "UPDATE gti_horcumplido SET "
        StrSql = StrSql & " thnro = " & NocNoAut
        StrSql = StrSql & " WHERE ternro = " & p_ternro
        StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
        StrSql = StrSql & " AND thnro = " & thNocturna
        objConn.Execute StrSql, , adExecuteNoRecords
    
    Case Else:  'Version inexistente
        If depurar Then
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Version inexistente. " & Opcion
        End If
    End Select

'Cierro y libero
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
    If rsAP.State = adStateOpen Then rsAP.Close
    Set rsAP = Nothing
    If rsTH.State = adStateOpen Then rsTH.Close
    Set rsTH = Nothing
End Sub



Private Sub Politica598(ByVal p_ternro As Long, ByVal Detalle As Long)
' ------------------------------------------------------------------------------------------------------------------------
' Descripcion: Control de hs Nocturnas.
'   Parametros:
'       Opcion      : Version de la politica. Implica la funcionalidad de la misma.
'       st_TipoHora1: Tipo de Hora. Se supone que seria la Nocturna No aprobada. Este tipo de hora debe ser autorizable y ademas
'                     debe tener configurado el tipo de hora que genera cuando se autorice.
'       st_ListaTH  : Lista de tipos de horas. Seria la lista de horas que aprobarian a las Nocturnas
'                     (en principio serian las normales y las horas extras que no sean autorizables).
'   Funcionalidad:
'       La idea de la politica es aprobar las horas nocturnas o cualquier tipo de hora que se configure
'       en el parametro st_TipoHora1 cuando se solapen con alguna hora cuyo tipo esté incluido en la lista st_ListaTH.
'   Autor: FGZ
'   Fecha: 26/05/2009
'   Ultima modificacion:
' ------------------------------------------------------------------------------------------------------------------------
Dim Opcion  As Integer
Dim ListaTH As String
Dim thNocturna As Long
Dim NocAut As Long
Dim NocNoAut As Long

Dim TotHorAP As Single
Dim TotHorR1 As Single
Dim TotHorR2 As Single

Dim NocFDesde As Date
Dim NocFHasta As Date
Dim NocHDesde As String
Dim NocHHasta As String
Dim AuxFDesde As Date
Dim AuxFHasta As Date
Dim AuxHDesde As String
Dim AuxHHasta As String

Dim ApFDesde As Date
Dim ApFHasta As Date
Dim ApHDesde As String
Dim ApHHasta As String

Dim R1FDesde As Date
Dim R1FHasta As Date
Dim R1HDesde As String
Dim R1HHasta As String
Dim R2FDesde As Date
Dim R2FHasta As Date
Dim R2HDesde As String
Dim R2HHasta As String

Dim SeAprobo As Boolean
Dim RecargarNocturnas As Boolean
Dim CantidadRecargas As Integer


Dim rs As New ADODB.Recordset
Dim rsTH As New ADODB.Recordset
Dim rsAP As New ADODB.Recordset
'---------------------------------
Dim TotHorHHMM As String
   
    Call SetearParametrosPolitica(Detalle, ok)

    Opcion = st_Opcion  'Version de la politica
    thNocturna = st_TipoHora1 'Tipo de Hora Nocturna No aprobada
    ListaTH = st_ListaTH 'Lista de horas que aprobarian a las Nocturnas (en principio serian las normales)
    If depurar Then
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Version: " & Opcion
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Hora Nocturna: " & thNocturna
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Lista de Tipos de hora que aprueban: " & ListaTH
    End If
   
    'Busco cual es el tipo de hora para las nocturnas aprobadas    StrSql = "SELECT thautpor,thdesautpor FROM tiphora WHERE thnro = " & thNocturna
    OpenRecordset StrSql, rsTH
    If Not rsTH.EOF Then
        If Not EsNulo(rsTH!thautpor) Then
            NocAut = rsTH!thautpor
        End If
        If Not EsNulo(rsTH!thdesautpor) Then
            NocNoAut = rsTH!thdesautpor
        End If
        If depurar Then
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Nocturna Autorizada: " & rsTH!thautpor
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Nocturna No Autorizada: " & rsTH!thdesautpor
        End If
        If NocAut = 0 Or NocNoAut = 0 Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No está configurada la autorizacion de la Hora Nocturna."
                Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No se ejecutará la política."
            End If
            Exit Sub
        End If
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No se encontró la configuracion del tipo de hora Nocturna."
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No se ejecutará la política."
        End If
        Exit Sub
    End If
    
   
   
   Select Case Opcion
   Case 1: 'Estandar
        CantidadRecargas = 0
        'Buscar los tipos de hora Nocturnas
        StrSql = " SELECT * FROM gti_horcumplido "
        StrSql = StrSql & " WHERE ternro = " & p_ternro
        StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
        StrSql = StrSql & " AND thnro = " & thNocturna
        StrSql = StrSql & " ORDER BY hordesde, horhoradesde"
        OpenRecordset StrSql, rs
        If rs.EOF Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "No hay hs Nocturnas generadas"
            End If
        End If
        Do While Not rs.EOF
            SeAprobo = False
            RecargarNocturnas = False
            'Por cada hora nocturna encontrada intersectarla con las hs que aprueban
            NocFDesde = rs!hordesde
            NocFHasta = rs!horhasta
            NocHDesde = rs!horhoradesde
            NocHHasta = rs!horhorahasta
       
            'Busco los th que aprueban
            StrSql = " SELECT * FROM gti_horcumplido "
            StrSql = StrSql & " WHERE ternro = " & p_ternro
            StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
            StrSql = StrSql & " AND thnro IN (" & ListaTH & ")"
            StrSql = StrSql & " ORDER BY thnro, hordesde, horhoradesde"
            OpenRecordset StrSql, rsAP
            If rsAP.EOF Then
                'Debo poner todas las horas como no autorizadas
                StrSql = "UPDATE gti_horcumplido SET "
                StrSql = StrSql & " thnro = " & NocNoAut
                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
            Do While Not rsAP.EOF And Not RecargarNocturnas
                AuxFDesde = rsAP!hordesde
                AuxFHasta = rsAP!horhasta
                AuxHDesde = rsAP!horhoradesde
                AuxHHasta = rsAP!horhorahasta
            
                SeAprobo = False
                'Nocturnas     [---------------]
                'Horario          (----------------)
                If objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFDesde, AuxHDesde) And objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFHasta, NocHHasta) And objFechasHoras.Menor_Igual_Hora(NocFHasta, NocHHasta, AuxFHasta, AuxHHasta) Then
                    SeAprobo = True
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas    [---------------]"
                        Flog.writeline Espacios(Tabulador * 3) & " 'Horario          (----------------)"
                    End If
                    'Lo aprobado seria
                    ApFDesde = AuxFDesde
                    ApFHasta = NocFHasta
                    ApHDesde = AuxHDesde
                    ApHHasta = NocHHasta
                    
                    objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                    TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                    
                    'Lo que resta seria
                    R1FDesde = NocFDesde
                    R1HDesde = NocHDesde
                    R1FHasta = AuxFDesde
                    R1HHasta = AuxHDesde
                    objFechasHoras.RestaHs R1FDesde, R1HDesde, R1FHasta, R1HHasta, Tdias, Thoras, Tmin
                    TotHorR1 = (Tdias * 24) + (Thoras + (Tmin / 60))


                    '==> debo modificar el registro actual y insertar uno nuevo con la parte aprobada
                    'Actualizo lo restante
                    If TotHorR1 <> 0 Then
                        TotHorHHMM = CHoras(TotHorR1, 60)
                        'RecargarNocturnas = True
                        StrSql = "UPDATE gti_horcumplido SET "
                        StrSql = StrSql & " horcant = " & TotHorR1
                        StrSql = StrSql & " ,horas = " & TotHorHHMM
                        'StrSql = StrSql & ", hordesde = " & ConvFecha(r1FDesde)
                        StrSql = StrSql & ", horhasta = " & ConvFecha(R1FHasta)
                        'StrSql = StrSql & ", horhoradesde = '" & r1HDesde & "'"
                        StrSql = StrSql & ", horhorahasta = '" & R1HHasta & "'"
                        StrSql = StrSql & " WHERE hornro = " & rs!hornro
                    Else
                        StrSql = "DELETE gti_horcumplido "
                        StrSql = StrSql & " WHERE hornro = " & rs!hornro
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    'Creo la nueva
                    If TotHorAP <> 0 Then
                        RecargarNocturnas = True
                        TotHorHHMM = CHoras(TotHorAP, 60)
                        StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                        StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                        StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                        StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                        StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                        StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                        StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                        StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                    End If
                End If
    
                'Nocturnas       [---------------]
                'Horario    (----------------)
                If Not SeAprobo Then
                    If objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFDesde, NocHDesde) And objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFHasta, AuxHHasta) And objFechasHoras.Menor_Igual_Hora(AuxFHasta, AuxHHasta, NocFHasta, NocHHasta) Then
                        SeAprobo = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas      [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario    (----------------)"
                        End If
                        'Lo aprobado seria
                        ApFDesde = NocFDesde
                        ApFHasta = AuxFHasta
                        ApHDesde = NocHDesde
                        ApHHasta = AuxHHasta
                    
                        objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                        TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        'Lo que resta seria
                        R1FDesde = AuxFHasta
                        R1HDesde = AuxHHasta
                        R1FHasta = NocFHasta
                        R1HHasta = NocHHasta
                        objFechasHoras.RestaHs R1FDesde, R1HDesde, R1FHasta, R1HHasta, Tdias, Thoras, Tmin
                        TotHorR1 = (Tdias * 24) + (Thoras + (Tmin / 60))
    
                        'Lo que resta seria
                        TotHorR2 = 0
                    
                        '==> debo modificar el registro actual y insertar uno nuevo con la parte aprobada
                        'Actualizo lo restante
                        If TotHorR1 <> 0 Then
                            'RecargarNocturnas = True
                            TotHorHHMM = CHoras(TotHorR1, 60)
                            
                            StrSql = "UPDATE gti_horcumplido SET "
                            StrSql = StrSql & " horcant = " & TotHorR1
                            StrSql = StrSql & " ,horas = " & TotHorHHMM
                            StrSql = StrSql & ", hordesde = " & ConvFecha(R1FDesde)
                            'StrSql = StrSql & ", horhasta = " & ConvFecha(R1FHasta)
                            StrSql = StrSql & ", horhoradesde = '" & R1HDesde & "'"
                            'StrSql = StrSql & ", horhorahasta = '" & R1HHasta & "'"
                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
                        Else
                            StrSql = "DELETE gti_horcumplido "
                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
                        End If
                        objConn.Execute StrSql, , adExecuteNoRecords
                        
                        If TotHorAP <> 0 Then
                            'Creo la nueva autorizada
                            RecargarNocturnas = True
                            TotHorHHMM = CHoras(TotHorAP, 60)
                            
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                            StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                            StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                            StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                End If
                
                'Nocturnas      [---------------]
                'Horario    (-----------------------)
                If Not SeAprobo Then
                    If objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFDesde, NocHDesde) And objFechasHoras.Menor_Igual_Hora(NocFHasta, NocHHasta, AuxFHasta, AuxHHasta) Then
                        SeAprobo = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas      [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario    (-----------------------)"
                        End If
                        'Lo aprobado seria
                        ApFDesde = NocFDesde
                        ApFHasta = NocFHasta
                        ApHDesde = NocHDesde
                        ApHHasta = NocHHasta
                    
                        objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                        TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        'Lo que resta seria
                        TotHorR1 = 0
    
                        'Lo que resta seria
                        TotHorR2 = 0
                        
                        '==> debo modificar el registro actual (cambiarle el tipo de hora a aprobado)
                        'Actualizo
                        
                        'RecargarNocturnas = True
                        StrSql = "UPDATE gti_horcumplido SET "
                        StrSql = StrSql & " thnro = " & NocAut
                        StrSql = StrSql & " WHERE hornro = " & rs!hornro
                        objConn.Execute StrSql, , adExecuteNoRecords
                    End If
                End If
                
                'Nocturnas  [---------------]
                'Horario        (--------)
                If Not SeAprobo Then
                    If objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFDesde, AuxHDesde) And objFechasHoras.Menor_Igual_Hora(AuxFHasta, AuxHHasta, NocFHasta, NocHHasta) Then
                        SeAprobo = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas  [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario        (--------)"
                        End If
                        'Lo aprobado seria
                        ApFDesde = AuxFDesde
                        ApFHasta = AuxFHasta
                        ApHDesde = AuxHDesde
                        ApHHasta = AuxHHasta
                    
                        objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                        TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        'Lo que resta seria
                        R1FDesde = NocFDesde
                        R1HDesde = NocHDesde
                        R1FHasta = AuxFDesde
                        R1HHasta = AuxHDesde
                        objFechasHoras.RestaHs R1FDesde, R1HDesde, R1FHasta, R1HHasta, Tdias, Thoras, Tmin
                        TotHorR1 = (Tdias * 24) + (Thoras + (Tmin / 60))
    
    
                        'Lo que resta seria
                        R2FDesde = AuxFHasta
                        R2HDesde = AuxHHasta
                        R2FHasta = NocFHasta
                        R2HHasta = NocHHasta
                        objFechasHoras.RestaHs R2FDesde, R2HDesde, R2FHasta, R2HHasta, Tdias, Thoras, Tmin
                        TotHorR2 = (Tdias * 24) + (Thoras + (Tmin / 60))
                    
                    
                        '==> debo modificar el registro actual a aprobado e insertar los 2 registros sobrantes como no aprobada
                        'Actualizo
                        If TotHorAP <> 0 Then
                            RecargarNocturnas = True
                            
                            TotHorHHMM = CHoras(TotHorAP, 60)
                            
                            StrSql = "UPDATE gti_horcumplido SET "
                            StrSql = StrSql & " horcant = " & TotHorAP
                            StrSql = StrSql & ", horas = " & TotHorHHMM
                            StrSql = StrSql & ", thnro = " & NocAut
                            StrSql = StrSql & ", hordesde = " & ConvFecha(ApFDesde)
                            StrSql = StrSql & ", horhasta = " & ConvFecha(ApFHasta)
                            StrSql = StrSql & ", horhoradesde = '" & ApHDesde & "'"
                            StrSql = StrSql & ", horhorahasta = '" & ApHHasta & "'"
                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                        
                        'Creo la 1er restante no autorizada
                        If TotHorR1 <> 0 Then
                            RecargarNocturnas = True
                            
                            TotHorHHMM = CHoras(TotHorR1, 60)
                            
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHorR1 & "," & ConvFecha(R1FDesde) & ",' '," & ConvFecha(R1FHasta) & ",'" & R1HDesde & "','"
                            StrSql = StrSql & R1HHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocNoAut & "," & rs!turnro & ","
                            StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                            StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    
                        'Creo la 2da restante no autorizada
                        If TotHorR2 <> 0 Then
                            RecargarNocturnas = True
                            
                            TotHorHHMM = CHoras(TotHorR2, 60)
                            
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHorR2 & "," & ConvFecha(R2FDesde) & ",' '," & ConvFecha(R2FHasta) & ",'" & R2HDesde & "','"
                            StrSql = StrSql & R2HHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocNoAut & "," & rs!turnro & ","
                            StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                            StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                End If
           
                rsAP.MoveNext
            Loop
       
            If RecargarNocturnas = True And CantidadRecargas < 10 Then
                CantidadRecargas = CantidadRecargas + 1
                'Recargo el rs
                StrSql = " SELECT * FROM gti_horcumplido "
                StrSql = StrSql & " WHERE ternro = " & p_ternro
                StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
                StrSql = StrSql & " AND thnro = " & thNocturna
                StrSql = StrSql & " ORDER BY hordesde, horhoradesde"
                OpenRecordset StrSql, rs
            Else
                'Busco el siguiente registro
                rs.MoveNext
            End If
        Loop
   Case 2: 'Custom MOnresa - No parte las horas, es decir, solo genera nuevas horas cuando se solapan
        CantidadRecargas = 0
        'Buscar los tipos de hora Nocturnas
        StrSql = " SELECT * FROM gti_horcumplido "
        StrSql = StrSql & " WHERE ternro = " & p_ternro
        StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
        StrSql = StrSql & " AND thnro = " & thNocturna
        StrSql = StrSql & " ORDER BY hordesde, horhoradesde"
        OpenRecordset StrSql, rs
        If rs.EOF Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "No hay hs Nocturnas generadas"
            End If
        End If
        Do While Not rs.EOF
            SeAprobo = False
            RecargarNocturnas = False
            'Por cada hora nocturna encontrada intersectarla con las hs que aprueban
            NocFDesde = rs!hordesde
            NocFHasta = rs!horhasta
            NocHDesde = rs!horhoradesde
            NocHHasta = rs!horhorahasta
       
            'Busco los th que aprueban
            StrSql = " SELECT * FROM gti_horcumplido "
            StrSql = StrSql & " WHERE ternro = " & p_ternro
            StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
            StrSql = StrSql & " AND thnro IN (" & ListaTH & ")"
            StrSql = StrSql & " ORDER BY thnro, hordesde, horhoradesde"
            OpenRecordset StrSql, rsAP
            Do While Not rsAP.EOF And Not RecargarNocturnas
                AuxFDesde = rsAP!hordesde
                AuxFHasta = rsAP!horhasta
                AuxHDesde = rsAP!horhoradesde
                AuxHHasta = rsAP!horhorahasta
            
                SeAprobo = False
                'Nocturnas     [---------------]
                'Horario          (----------------)
                If objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFDesde, AuxHDesde) And objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFHasta, NocHHasta) And objFechasHoras.Menor_Igual_Hora(NocFHasta, NocHHasta, AuxFHasta, AuxHHasta) Then
                    SeAprobo = True
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas    [---------------]"
                        Flog.writeline Espacios(Tabulador * 3) & " 'Horario          (----------------)"
                    End If
                    'Lo aprobado seria
                    ApFDesde = AuxFDesde
                    ApFHasta = NocFHasta
                    ApHDesde = AuxHDesde
                    ApHHasta = NocHHasta
                    
                    objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                    TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                    
                    'Creo la nueva
                    If TotHorAP <> 0 Then
                        RecargarNocturnas = False
                        TotHorHHMM = CHoras(TotHorAP, 60)
                        StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                        StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                        StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                        StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                        StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                        StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                        StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                        StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                    End If
                End If
    
                'Nocturnas       [---------------]
                'Horario    (----------------)
                If Not SeAprobo Then
                    If objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFDesde, NocHDesde) And objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFHasta, AuxHHasta) And objFechasHoras.Menor_Igual_Hora(AuxFHasta, AuxHHasta, NocFHasta, NocHHasta) Then
                        SeAprobo = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas      [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario    (----------------)"
                        End If
                        'Lo aprobado seria
                        ApFDesde = NocFDesde
                        ApFHasta = AuxFHasta
                        ApHDesde = NocHDesde
                        ApHHasta = AuxHHasta
                    
                        objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                        TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        If TotHorAP <> 0 Then
                            'Creo la nueva autorizada
                            RecargarNocturnas = False
                            TotHorHHMM = CHoras(TotHorAP, 60)
                            
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                            StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                            StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                            StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                End If
                
                'Nocturnas      [---------------]
                'Horario    (-----------------------)
                If Not SeAprobo Then
                    If objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFDesde, NocHDesde) And objFechasHoras.Menor_Igual_Hora(NocFHasta, NocHHasta, AuxFHasta, AuxHHasta) Then
                        SeAprobo = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas      [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario    (-----------------------)"
                        End If
                        'Lo aprobado seria
                        ApFDesde = NocFDesde
                        ApFHasta = NocFHasta
                        ApHDesde = NocHDesde
                        ApHHasta = NocHHasta
                    
                        objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                        TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        If TotHorAP <> 0 Then
                            'Creo la nueva autorizada
                            RecargarNocturnas = False
                            TotHorHHMM = CHoras(TotHorAP, 60)
                            
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                            StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                            StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                            StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                End If
                
                'Nocturnas  [---------------]
                'Horario        (--------)
                If Not SeAprobo Then
                    If objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFDesde, AuxHDesde) And objFechasHoras.Menor_Igual_Hora(AuxFHasta, AuxHHasta, NocFHasta, NocHHasta) Then
                        SeAprobo = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas  [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario        (--------)"
                        End If
                        'Lo aprobado seria
                        ApFDesde = AuxFDesde
                        ApFHasta = AuxFHasta
                        ApHDesde = AuxHDesde
                        ApHHasta = AuxHHasta
                    
                        objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                        TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        If TotHorAP <> 0 Then
                            'Creo la nueva autorizada
                            RecargarNocturnas = False
                            TotHorHHMM = CHoras(TotHorAP, 60)
                            
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                            StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                            StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                            StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                End If
           
                rsAP.MoveNext
            Loop
       
            If RecargarNocturnas = True And CantidadRecargas < 10 Then
                CantidadRecargas = CantidadRecargas + 1
                'Recargo el rs
                StrSql = " SELECT * FROM gti_horcumplido "
                StrSql = StrSql & " WHERE ternro = " & p_ternro
                StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
                StrSql = StrSql & " AND thnro = " & thNocturna
                StrSql = StrSql & " ORDER BY hordesde, horhoradesde"
                OpenRecordset StrSql, rs
            Else
                'Busco el siguiente registro
                rs.MoveNext
            End If
        Loop
   Case 3: 'genera 1 tipo de hora para las que solapan y otro para las que no solapan por la cantidad de hora originales(la v1 deja el tipo de hora original)
        CantidadRecargas = 0
        'Buscar los tipos de hora Nocturnas
        StrSql = " SELECT * FROM gti_horcumplido "
        StrSql = StrSql & " WHERE ternro = " & p_ternro
        StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
        StrSql = StrSql & " AND thnro = " & thNocturna
        StrSql = StrSql & " ORDER BY hordesde, horhoradesde"
        OpenRecordset StrSql, rs
        If rs.EOF Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "No hay hs Nocturnas generadas"
            End If
        End If
        Do While Not rs.EOF
            SeAprobo = False
            RecargarNocturnas = False
            'Por cada hora nocturna encontrada intersectarla con las hs que aprueban
            NocFDesde = rs!hordesde
            NocFHasta = rs!horhasta
            NocHDesde = rs!horhoradesde
            NocHHasta = rs!horhorahasta
       
            'Busco los th que aprueban
            StrSql = " SELECT * FROM gti_horcumplido "
            StrSql = StrSql & " WHERE ternro = " & p_ternro
            StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
            StrSql = StrSql & " AND thnro IN (" & ListaTH & ")"
            StrSql = StrSql & " ORDER BY thnro, hordesde, horhoradesde"
            OpenRecordset StrSql, rsAP
            
'            If rsAp.EOF Then
'                'Debo poner todas las horas como no autorizadas
'                StrSql = "UPDATE gti_horcumplido SET "
'                StrSql = StrSql & " thnro = " & NocNoAut
'                StrSql = StrSql & " WHERE hornro = " & rs!hornro
'                objConn.Execute StrSql, , adExecuteNoRecords
'            End If
            
            Do While Not rsAP.EOF And Not RecargarNocturnas
                AuxFDesde = rsAP!hordesde
                AuxFHasta = rsAP!horhasta
                AuxHDesde = rsAP!horhoradesde
                AuxHHasta = rsAP!horhorahasta
            
                SeAprobo = False
                'Nocturnas     [---------------]
                'Horario          (----------------)
                If objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFDesde, AuxHDesde) And objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFHasta, NocHHasta) And objFechasHoras.Menor_Igual_Hora(NocFHasta, NocHHasta, AuxFHasta, AuxHHasta) Then
                    SeAprobo = True
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas    [---------------]"
                        Flog.writeline Espacios(Tabulador * 3) & " 'Horario          (----------------)"
                    End If
                    'Lo aprobado seria
                    ApFDesde = AuxFDesde
                    ApFHasta = NocFHasta
                    ApHDesde = AuxHDesde
                    ApHHasta = NocHHasta
                    
                    objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                    TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                    
                    'Creo la nueva
                    If TotHorAP <> 0 Then
                        RecargarNocturnas = False
                        TotHorHHMM = CHoras(TotHorAP, 60)
                        StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                        StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                        StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                        StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                        StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                        StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                        StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                        StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
'                    Else
'                        '==> debo modificar el registro actual (cambiarle el tipo de hora a aprobado)
'                        'Actualizo
'
'                        'RecargarNocturnas = True
'                        StrSql = "UPDATE gti_horcumplido SET "
'                        StrSql = StrSql & " thnro = " & NocNoAut
'                        StrSql = StrSql & " WHERE hornro = " & rs!hornro
'                        objConn.Execute StrSql, , adExecuteNoRecords
                    End If
                End If
    
                'Nocturnas       [---------------]
                'Horario    (----------------)
                If Not SeAprobo Then
                    If objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFDesde, NocHDesde) And objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFHasta, AuxHHasta) And objFechasHoras.Menor_Igual_Hora(AuxFHasta, AuxHHasta, NocFHasta, NocHHasta) Then
                        SeAprobo = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas      [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario    (----------------)"
                        End If
                        'Lo aprobado seria
                        ApFDesde = NocFDesde
                        ApFHasta = AuxFHasta
                        ApHDesde = NocHDesde
                        ApHHasta = AuxHHasta
                    
                        objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                        TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        If TotHorAP <> 0 Then
                            'Creo la nueva autorizada
                            RecargarNocturnas = False
                            TotHorHHMM = CHoras(TotHorAP, 60)
                            
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                            StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                            StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                            StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
'                        Else
'                            '==> debo modificar el registro actual (cambiarle el tipo de hora a aprobado)
'                            'Actualizo
'
'                            'RecargarNocturnas = True
'                            StrSql = "UPDATE gti_horcumplido SET "
'                            StrSql = StrSql & " thnro = " & NocNoAut
'                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
'                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                End If
                
                'Nocturnas      [---------------]
                'Horario    (-----------------------)
                If Not SeAprobo Then
                    If objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFDesde, NocHDesde) And objFechasHoras.Menor_Igual_Hora(NocFHasta, NocHHasta, AuxFHasta, AuxHHasta) Then
                        SeAprobo = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas      [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario    (-----------------------)"
                        End If
                        'Lo aprobado seria
                        ApFDesde = NocFDesde
                        ApFHasta = NocFHasta
                        ApHDesde = NocHDesde
                        ApHHasta = NocHHasta
                    
                        objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                        TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        If TotHorAP <> 0 Then
                            'Creo la nueva autorizada
                            RecargarNocturnas = False
                            TotHorHHMM = CHoras(TotHorAP, 60)
                            
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                            StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                            StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                            StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
'                        Else
'                            '==> debo modificar el registro actual (cambiarle el tipo de hora a aprobado)
'                            'Actualizo
'
'                            'RecargarNocturnas = True
'                            StrSql = "UPDATE gti_horcumplido SET "
'                            StrSql = StrSql & " thnro = " & NocNoAut
'                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
'                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                End If
                
                'Nocturnas  [---------------]
                'Horario        (--------)
                If Not SeAprobo Then
                    If objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFDesde, AuxHDesde) And objFechasHoras.Menor_Igual_Hora(AuxFHasta, AuxHHasta, NocFHasta, NocHHasta) Then
                        SeAprobo = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas  [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario        (--------)"
                        End If
                        'Lo aprobado seria
                        ApFDesde = AuxFDesde
                        ApFHasta = AuxFHasta
                        ApHDesde = AuxHDesde
                        ApHHasta = AuxHHasta
                    
                        objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                        TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        If TotHorAP <> 0 Then
                            'Creo la nueva autorizada
                            RecargarNocturnas = False
                            TotHorHHMM = CHoras(TotHorAP, 60)
                            
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                            StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                            StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                            StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
'                        Else
'                            '==> debo modificar el registro actual (cambiarle el tipo de hora a aprobado)
'                            'Actualizo
'
'                            'RecargarNocturnas = True
'                            StrSql = "UPDATE gti_horcumplido SET "
'                            StrSql = StrSql & " thnro = " & NocNoAut
'                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
'                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                End If
                
'                If Not SeAprobo Then
'                        '==> debo modificar el registro actual (cambiarle el tipo de hora a aprobado)
'                        'Actualizo
'
'                        'RecargarNocturnas = True
'                        StrSql = "UPDATE gti_horcumplido SET "
'                        StrSql = StrSql & " thnro = " & NocNoAut
'                        StrSql = StrSql & " WHERE hornro = " & rs!hornro
'                        objConn.Execute StrSql, , adExecuteNoRecords
'                End If
           
           
                rsAP.MoveNext
            Loop
       
            If RecargarNocturnas = True And CantidadRecargas < 10 Then
                CantidadRecargas = CantidadRecargas + 1
                'Recargo el rs
                StrSql = " SELECT * FROM gti_horcumplido "
                StrSql = StrSql & " WHERE ternro = " & p_ternro
                StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
                StrSql = StrSql & " AND thnro = " & thNocturna
                StrSql = StrSql & " ORDER BY hordesde, horhoradesde"
                OpenRecordset StrSql, rs
            Else
                'Busco el siguiente registro
                rs.MoveNext
            End If
        Loop
        
        
        'Ahora todos los tipos de horas originales deben pasar a ser NA
        StrSql = "UPDATE gti_horcumplido SET "
        StrSql = StrSql & " thnro = " & NocNoAut
        StrSql = StrSql & " WHERE ternro = " & p_ternro
        StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
        StrSql = StrSql & " AND thnro = " & thNocturna
        objConn.Execute StrSql, , adExecuteNoRecords
    
    Case Else:  'Version inexistente
        If depurar Then
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Version inexistente. " & Opcion
        End If
    End Select

'Cierro y libero
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
    If rsAP.State = adStateOpen Then rsAP.Close
    Set rsAP = Nothing
    If rsTH.State = adStateOpen Then rsTH.Close
    Set rsTH = Nothing
End Sub





Private Sub Politica599(ByVal p_ternro As Long, ByVal Detalle As Long)
' ------------------------------------------------------------------------------------------------------------------------
' Descripcion: Control de hs Nocturnas 2.
'   Parametros:
'       Opcion      : Version de la politica. Implica la funcionalidad de la misma.
'       st_TipoHora1: Tipo de Hora. Se supone que seria la Nocturna No aprobada. Este tipo de hora debe ser autorizable y ademas
'                     debe tener configurado el tipo de hora que genera cuando se autorice.
'       st_ListaTH  : Lista de tipos de horas. Seria la lista de horas que aprobarian a las Nocturnas
'                     (en principio serian las normales y las horas extras que no sean autorizables).
'   Funcionalidad:
'       La idea de la politica es aprobar las horas nocturnas o cualquier tipo de hora que se configure
'       en el parametro st_TipoHora1 cuando se solapen con alguna hora cuyo tipo esté incluido en la lista st_ListaTH.
'   Autor: FGZ
'   Fecha: 26/05/2009
'   Ultima modificacion:
' ------------------------------------------------------------------------------------------------------------------------
Dim Opcion  As Integer
Dim ListaTH As String
Dim thNocturna As Long
Dim NocAut As Long
Dim NocNoAut As Long

Dim TotHorAP As Single
Dim TotHorR1 As Single
Dim TotHorR2 As Single

Dim NocFDesde As Date
Dim NocFHasta As Date
Dim NocHDesde As String
Dim NocHHasta As String
Dim AuxFDesde As Date
Dim AuxFHasta As Date
Dim AuxHDesde As String
Dim AuxHHasta As String

Dim ApFDesde As Date
Dim ApFHasta As Date
Dim ApHDesde As String
Dim ApHHasta As String

Dim R1FDesde As Date
Dim R1FHasta As Date
Dim R1HDesde As String
Dim R1HHasta As String
Dim R2FDesde As Date
Dim R2FHasta As Date
Dim R2HDesde As String
Dim R2HHasta As String

Dim SeAprobo As Boolean
Dim RecargarNocturnas As Boolean
Dim CantidadRecargas As Integer


Dim rs As New ADODB.Recordset
Dim rsTH As New ADODB.Recordset
Dim rsAP As New ADODB.Recordset
'---------------------------------
Dim TotHorHHMM As String
   
    Call SetearParametrosPolitica(Detalle, ok)

    Opcion = st_Opcion  'Version de la politica
    thNocturna = st_TipoHora1 'Tipo de Hora Nocturna No aprobada
    ListaTH = st_ListaTH 'Lista de horas que aprobarian a las Nocturnas (en principio serian las normales)
    If depurar Then
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Version: " & Opcion
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Hora Nocturna: " & thNocturna
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Lista de Tipos de hora que aprueban: " & ListaTH
    End If
   
    'Busco cual es el tipo de hora para las nocturnas aprobadas
    StrSql = "SELECT thautpor,thdesautpor FROM tiphora WHERE thnro = " & thNocturna
    OpenRecordset StrSql, rsTH
    If Not rsTH.EOF Then
        If Not EsNulo(rsTH!thautpor) Then
            NocAut = rsTH!thautpor
        End If
        If Not EsNulo(rsTH!thdesautpor) Then
            NocNoAut = rsTH!thdesautpor
        End If
        If depurar Then
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Nocturna Autorizada: " & rsTH!thautpor
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Nocturna No Autorizada: " & rsTH!thdesautpor
        End If
        If NocAut = 0 Or NocNoAut = 0 Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No está configurada la autorizacion de la Hora Nocturna."
                Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No se ejecutará la política."
            End If
            Exit Sub
        End If
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No se encontró la configuracion del tipo de hora Nocturna."
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No se ejecutará la política."
        End If
        Exit Sub
    End If
    
   
   
   Select Case Opcion
   Case 1: 'Estandar
        CantidadRecargas = 0
        'Buscar los tipos de hora Nocturnas
        StrSql = " SELECT * FROM gti_horcumplido "
        StrSql = StrSql & " WHERE ternro = " & p_ternro
        StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
        StrSql = StrSql & " AND thnro = " & thNocturna
        StrSql = StrSql & " ORDER BY hordesde, horhoradesde"
        OpenRecordset StrSql, rs
        If rs.EOF Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "No hay hs Nocturnas generadas"
            End If
        End If
        Do While Not rs.EOF
            SeAprobo = False
            RecargarNocturnas = False
            'Por cada hora nocturna encontrada intersectarla con las hs que aprueban
            NocFDesde = rs!hordesde
            NocFHasta = rs!horhasta
            NocHDesde = rs!horhoradesde
            NocHHasta = rs!horhorahasta
       
            'Busco los th que aprueban
            StrSql = " SELECT * FROM gti_horcumplido "
            StrSql = StrSql & " WHERE ternro = " & p_ternro
            StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
            StrSql = StrSql & " AND thnro IN (" & ListaTH & ")"
            StrSql = StrSql & " ORDER BY thnro, hordesde, horhoradesde"
            OpenRecordset StrSql, rsAP
            If rsAP.EOF Then
                'Debo poner todas las horas como no autorizadas
                StrSql = "UPDATE gti_horcumplido SET "
                StrSql = StrSql & " thnro = " & NocNoAut
                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
            Do While Not rsAP.EOF And Not RecargarNocturnas
                AuxFDesde = rsAP!hordesde
                AuxFHasta = rsAP!horhasta
                AuxHDesde = rsAP!horhoradesde
                AuxHHasta = rsAP!horhorahasta
            
                SeAprobo = False
                'Nocturnas     [---------------]
                'Horario          (----------------)
                If objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFDesde, AuxHDesde) And objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFHasta, NocHHasta) And objFechasHoras.Menor_Igual_Hora(NocFHasta, NocHHasta, AuxFHasta, AuxHHasta) Then
                    SeAprobo = True
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas    [---------------]"
                        Flog.writeline Espacios(Tabulador * 3) & " 'Horario          (----------------)"
                    End If
                    'Lo aprobado seria
                    ApFDesde = AuxFDesde
                    ApFHasta = NocFHasta
                    ApHDesde = AuxHDesde
                    ApHHasta = NocHHasta
                    
                    objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                    TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                    
                    'Lo que resta seria
                    R1FDesde = NocFDesde
                    R1HDesde = NocHDesde
                    R1FHasta = AuxFDesde
                    R1HHasta = AuxHDesde
                    objFechasHoras.RestaHs R1FDesde, R1HDesde, R1FHasta, R1HHasta, Tdias, Thoras, Tmin
                    TotHorR1 = (Tdias * 24) + (Thoras + (Tmin / 60))


                    '==> debo modificar el registro actual y insertar uno nuevo con la parte aprobada
                    'Actualizo lo restante
                    If TotHorR1 <> 0 Then
                        TotHorHHMM = CHoras(TotHorR1, 60)
                        'RecargarNocturnas = True
                        StrSql = "UPDATE gti_horcumplido SET "
                        StrSql = StrSql & " horcant = " & TotHorR1
                        StrSql = StrSql & " ,thnro = " & NocNoAut
                        StrSql = StrSql & " ,horas = " & TotHorHHMM
                        'StrSql = StrSql & ", hordesde = " & ConvFecha(r1FDesde)
                        StrSql = StrSql & ", horhasta = " & ConvFecha(R1FHasta)
                        'StrSql = StrSql & ", horhoradesde = '" & r1HDesde & "'"
                        StrSql = StrSql & ", horhorahasta = '" & R1HHasta & "'"
                        StrSql = StrSql & " WHERE hornro = " & rs!hornro
                    Else
                        StrSql = "DELETE gti_horcumplido "
                        StrSql = StrSql & " WHERE hornro = " & rs!hornro
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    'Creo la nueva
                    If TotHorAP <> 0 Then
                        RecargarNocturnas = True
                        TotHorHHMM = CHoras(TotHorAP, 60)
                        StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                        StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                        StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                        StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                        StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                        StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                        StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                        StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                    End If
                End If
    
                'Nocturnas       [---------------]
                'Horario    (----------------)
                If Not SeAprobo Then
                    If objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFDesde, NocHDesde) And objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFHasta, AuxHHasta) And objFechasHoras.Menor_Igual_Hora(AuxFHasta, AuxHHasta, NocFHasta, NocHHasta) Then
                        SeAprobo = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas      [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario    (----------------)"
                        End If
                        'Lo aprobado seria
                        ApFDesde = NocFDesde
                        ApFHasta = AuxFHasta
                        ApHDesde = NocHDesde
                        ApHHasta = AuxHHasta
                    
                        objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                        TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        'Lo que resta seria
                        R1FDesde = AuxFHasta
                        R1HDesde = AuxHHasta
                        R1FHasta = NocFHasta
                        R1HHasta = NocHHasta
                        objFechasHoras.RestaHs R1FDesde, R1HDesde, R1FHasta, R1HHasta, Tdias, Thoras, Tmin
                        TotHorR1 = (Tdias * 24) + (Thoras + (Tmin / 60))
    
                        'Lo que resta seria
                        TotHorR2 = 0
                    
                        '==> debo modificar el registro actual y insertar uno nuevo con la parte aprobada
                        'Actualizo lo restante
                        If TotHorR1 <> 0 Then
                            'RecargarNocturnas = True
                            TotHorHHMM = CHoras(TotHorR1, 60)
                            
                            StrSql = "UPDATE gti_horcumplido SET "
                            StrSql = StrSql & " horcant = " & TotHorR1
                            StrSql = StrSql & " ,thnro = " & NocNoAut
                            StrSql = StrSql & " ,horas = " & TotHorHHMM
                            StrSql = StrSql & ", hordesde = " & ConvFecha(R1FDesde)
                            'StrSql = StrSql & ", horhasta = " & ConvFecha(R1FHasta)
                            StrSql = StrSql & ", horhoradesde = '" & R1HDesde & "'"
                            'StrSql = StrSql & ", horhorahasta = '" & R1HHasta & "'"
                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
                        Else
                            StrSql = "DELETE gti_horcumplido "
                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
                        End If
                        objConn.Execute StrSql, , adExecuteNoRecords
                        
                        If TotHorAP <> 0 Then
                            'Creo la nueva autorizada
                            RecargarNocturnas = True
                            TotHorHHMM = CHoras(TotHorAP, 60)
                            
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                            StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                            StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                            StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                End If
                
                'Nocturnas      [---------------]
                'Horario    (-----------------------)
                If Not SeAprobo Then
                    If objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFDesde, NocHDesde) And objFechasHoras.Menor_Igual_Hora(NocFHasta, NocHHasta, AuxFHasta, AuxHHasta) Then
                        SeAprobo = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas      [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario    (-----------------------)"
                        End If
                        'Lo aprobado seria
                        ApFDesde = NocFDesde
                        ApFHasta = NocFHasta
                        ApHDesde = NocHDesde
                        ApHHasta = NocHHasta
                    
                        objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                        TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        'Lo que resta seria
                        TotHorR1 = 0
    
                        'Lo que resta seria
                        TotHorR2 = 0
                        
                        '==> debo modificar el registro actual (cambiarle el tipo de hora a aprobado)
                        'Actualizo
                        
                        'RecargarNocturnas = True
                        StrSql = "UPDATE gti_horcumplido SET "
                        StrSql = StrSql & " thnro = " & NocAut
                        StrSql = StrSql & " WHERE hornro = " & rs!hornro
                        objConn.Execute StrSql, , adExecuteNoRecords
                    End If
                End If
                
                'Nocturnas  [---------------]
                'Horario        (--------)
                If Not SeAprobo Then
                    If objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFDesde, AuxHDesde) And objFechasHoras.Menor_Igual_Hora(AuxFHasta, AuxHHasta, NocFHasta, NocHHasta) Then
                        SeAprobo = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas  [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario        (--------)"
                        End If
                        'Lo aprobado seria
                        ApFDesde = AuxFDesde
                        ApFHasta = AuxFHasta
                        ApHDesde = AuxHDesde
                        ApHHasta = AuxHHasta
                    
                        objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                        TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        'Lo que resta seria
                        R1FDesde = NocFDesde
                        R1HDesde = NocHDesde
                        R1FHasta = AuxFDesde
                        R1HHasta = AuxHDesde
                        objFechasHoras.RestaHs R1FDesde, R1HDesde, R1FHasta, R1HHasta, Tdias, Thoras, Tmin
                        TotHorR1 = (Tdias * 24) + (Thoras + (Tmin / 60))
    
    
                        'Lo que resta seria
                        R2FDesde = AuxFHasta
                        R2HDesde = AuxHHasta
                        R2FHasta = NocFHasta
                        R2HHasta = NocHHasta
                        objFechasHoras.RestaHs R2FDesde, R2HDesde, R2FHasta, R2HHasta, Tdias, Thoras, Tmin
                        TotHorR2 = (Tdias * 24) + (Thoras + (Tmin / 60))
                    
                    
                        '==> debo modificar el registro actual a aprobado e insertar los 2 registros sobrantes como no aprobada
                        'Actualizo
                        If TotHorAP <> 0 Then
                            RecargarNocturnas = True
                            
                            TotHorHHMM = CHoras(TotHorAP, 60)
                            
                            StrSql = "UPDATE gti_horcumplido SET "
                            StrSql = StrSql & " horcant = " & TotHorAP
                            StrSql = StrSql & ", horas = " & TotHorHHMM
                            StrSql = StrSql & ", thnro = " & NocAut
                            StrSql = StrSql & ", hordesde = " & ConvFecha(ApFDesde)
                            StrSql = StrSql & ", horhasta = " & ConvFecha(ApFHasta)
                            StrSql = StrSql & ", horhoradesde = '" & ApHDesde & "'"
                            StrSql = StrSql & ", horhorahasta = '" & ApHHasta & "'"
                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                        
                        'Creo la 1er restante no autorizada
                        If TotHorR1 <> 0 Then
                            RecargarNocturnas = True
                            
                            TotHorHHMM = CHoras(TotHorR1, 60)
                            
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHorR1 & "," & ConvFecha(R1FDesde) & ",' '," & ConvFecha(R1FHasta) & ",'" & R1HDesde & "','"
                            StrSql = StrSql & R1HHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocNoAut & "," & rs!turnro & ","
                            StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                            StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    
                        'Creo la 2da restante no autorizada
                        If TotHorR2 <> 0 Then
                            RecargarNocturnas = True
                            
                            TotHorHHMM = CHoras(TotHorR2, 60)
                            
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHorR2 & "," & ConvFecha(R2FDesde) & ",' '," & ConvFecha(R2FHasta) & ",'" & R2HDesde & "','"
                            StrSql = StrSql & R2HHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocNoAut & "," & rs!turnro & ","
                            StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                            StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                End If
           
                If Not SeAprobo Then
                    StrSql = "UPDATE gti_horcumplido SET "
                    StrSql = StrSql & " thnro = " & NocNoAut
                    StrSql = StrSql & " WHERE hornro = " & rs!hornro
                    objConn.Execute StrSql, , adExecuteNoRecords
                End If
           
                rsAP.MoveNext
            Loop
       
            If RecargarNocturnas = True And CantidadRecargas < 10 Then
                CantidadRecargas = CantidadRecargas + 1
                'Recargo el rs
                StrSql = " SELECT * FROM gti_horcumplido "
                StrSql = StrSql & " WHERE ternro = " & p_ternro
                StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
                StrSql = StrSql & " AND thnro = " & thNocturna
                StrSql = StrSql & " ORDER BY hordesde, horhoradesde"
                OpenRecordset StrSql, rs
            Else
                'Busco el siguiente registro
                rs.MoveNext
            End If
        Loop
   Case 2: 'Custom MOnresa - No parte las horas, es decir, solo genera nuevas horas cuando se solapan
        CantidadRecargas = 0
        'Buscar los tipos de hora Nocturnas
        StrSql = " SELECT * FROM gti_horcumplido "
        StrSql = StrSql & " WHERE ternro = " & p_ternro
        StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
        StrSql = StrSql & " AND thnro = " & thNocturna
        StrSql = StrSql & " ORDER BY hordesde, horhoradesde"
        OpenRecordset StrSql, rs
        If rs.EOF Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "No hay hs Nocturnas generadas"
            End If
        End If
        Do While Not rs.EOF
            SeAprobo = False
            RecargarNocturnas = False
            'Por cada hora nocturna encontrada intersectarla con las hs que aprueban
            NocFDesde = rs!hordesde
            NocFHasta = rs!horhasta
            NocHDesde = rs!horhoradesde
            NocHHasta = rs!horhorahasta
       
            'Busco los th que aprueban
            StrSql = " SELECT * FROM gti_horcumplido "
            StrSql = StrSql & " WHERE ternro = " & p_ternro
            StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
            StrSql = StrSql & " AND thnro IN (" & ListaTH & ")"
            StrSql = StrSql & " ORDER BY thnro, hordesde, horhoradesde"
            OpenRecordset StrSql, rsAP
            Do While Not rsAP.EOF And Not RecargarNocturnas
                AuxFDesde = rsAP!hordesde
                AuxFHasta = rsAP!horhasta
                AuxHDesde = rsAP!horhoradesde
                AuxHHasta = rsAP!horhorahasta
            
                SeAprobo = False
                'Nocturnas     [---------------]
                'Horario          (----------------)
                If objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFDesde, AuxHDesde) And objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFHasta, NocHHasta) And objFechasHoras.Menor_Igual_Hora(NocFHasta, NocHHasta, AuxFHasta, AuxHHasta) Then
                    SeAprobo = True
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas    [---------------]"
                        Flog.writeline Espacios(Tabulador * 3) & " 'Horario          (----------------)"
                    End If
                    'Lo aprobado seria
                    ApFDesde = AuxFDesde
                    ApFHasta = NocFHasta
                    ApHDesde = AuxHDesde
                    ApHHasta = NocHHasta
                    
                    objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                    TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                    
                    'Creo la nueva
                    If TotHorAP <> 0 Then
                        RecargarNocturnas = False
                        TotHorHHMM = CHoras(TotHorAP, 60)
                        StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                        StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                        StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                        StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                        StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                        StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                        StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                        StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                    End If
                End If
    
                'Nocturnas       [---------------]
                'Horario    (----------------)
                If Not SeAprobo Then
                    If objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFDesde, NocHDesde) And objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFHasta, AuxHHasta) And objFechasHoras.Menor_Igual_Hora(AuxFHasta, AuxHHasta, NocFHasta, NocHHasta) Then
                        SeAprobo = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas      [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario    (----------------)"
                        End If
                        'Lo aprobado seria
                        ApFDesde = NocFDesde
                        ApFHasta = AuxFHasta
                        ApHDesde = NocHDesde
                        ApHHasta = AuxHHasta
                    
                        objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                        TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        If TotHorAP <> 0 Then
                            'Creo la nueva autorizada
                            RecargarNocturnas = False
                            TotHorHHMM = CHoras(TotHorAP, 60)
                            
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                            StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                            StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                            StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                End If
                
                'Nocturnas      [---------------]
                'Horario    (-----------------------)
                If Not SeAprobo Then
                    If objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFDesde, NocHDesde) And objFechasHoras.Menor_Igual_Hora(NocFHasta, NocHHasta, AuxFHasta, AuxHHasta) Then
                        SeAprobo = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas      [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario    (-----------------------)"
                        End If
                        'Lo aprobado seria
                        ApFDesde = NocFDesde
                        ApFHasta = NocFHasta
                        ApHDesde = NocHDesde
                        ApHHasta = NocHHasta
                    
                        objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                        TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        If TotHorAP <> 0 Then
                            'Creo la nueva autorizada
                            RecargarNocturnas = False
                            TotHorHHMM = CHoras(TotHorAP, 60)
                            
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                            StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                            StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                            StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                End If
                
                'Nocturnas  [---------------]
                'Horario        (--------)
                If Not SeAprobo Then
                    If objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFDesde, AuxHDesde) And objFechasHoras.Menor_Igual_Hora(AuxFHasta, AuxHHasta, NocFHasta, NocHHasta) Then
                        SeAprobo = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas  [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario        (--------)"
                        End If
                        'Lo aprobado seria
                        ApFDesde = AuxFDesde
                        ApFHasta = AuxFHasta
                        ApHDesde = AuxHDesde
                        ApHHasta = AuxHHasta
                    
                        objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                        TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        If TotHorAP <> 0 Then
                            'Creo la nueva autorizada
                            RecargarNocturnas = False
                            TotHorHHMM = CHoras(TotHorAP, 60)
                            
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                            StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                            StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                            StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                End If
           
                rsAP.MoveNext
            Loop
       
            If RecargarNocturnas = True And CantidadRecargas < 10 Then
                CantidadRecargas = CantidadRecargas + 1
                'Recargo el rs
                StrSql = " SELECT * FROM gti_horcumplido "
                StrSql = StrSql & " WHERE ternro = " & p_ternro
                StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
                StrSql = StrSql & " AND thnro = " & thNocturna
                StrSql = StrSql & " ORDER BY hordesde, horhoradesde"
                OpenRecordset StrSql, rs
            Else
                'Busco el siguiente registro
                rs.MoveNext
            End If
        Loop
   Case 3: 'genera 1 tipo de hora para las que solapan y otro para las que no solapan por la cantidad de hora originales(la v1 deja el tipo de hora original)
        CantidadRecargas = 0
        'Buscar los tipos de hora Nocturnas
        StrSql = " SELECT * FROM gti_horcumplido "
        StrSql = StrSql & " WHERE ternro = " & p_ternro
        StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
        StrSql = StrSql & " AND thnro = " & thNocturna
        StrSql = StrSql & " ORDER BY hordesde, horhoradesde"
        OpenRecordset StrSql, rs
        If rs.EOF Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "No hay hs Nocturnas generadas"
            End If
        End If
        Do While Not rs.EOF
            SeAprobo = False
            RecargarNocturnas = False
            'Por cada hora nocturna encontrada intersectarla con las hs que aprueban
            NocFDesde = rs!hordesde
            NocFHasta = rs!horhasta
            NocHDesde = rs!horhoradesde
            NocHHasta = rs!horhorahasta
       
            'Busco los th que aprueban
            StrSql = " SELECT * FROM gti_horcumplido "
            StrSql = StrSql & " WHERE ternro = " & p_ternro
            StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
            StrSql = StrSql & " AND thnro IN (" & ListaTH & ")"
            StrSql = StrSql & " ORDER BY thnro, hordesde, horhoradesde"
            OpenRecordset StrSql, rsAP
            Do While Not rsAP.EOF And Not RecargarNocturnas
                AuxFDesde = rsAP!hordesde
                AuxFHasta = rsAP!horhasta
                AuxHDesde = rsAP!horhoradesde
                AuxHHasta = rsAP!horhorahasta
            
                SeAprobo = False
                'Nocturnas     [---------------]
                'Horario          (----------------)
                If objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFDesde, AuxHDesde) And objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFHasta, NocHHasta) And objFechasHoras.Menor_Igual_Hora(NocFHasta, NocHHasta, AuxFHasta, AuxHHasta) Then
                    SeAprobo = True
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas    [---------------]"
                        Flog.writeline Espacios(Tabulador * 3) & " 'Horario          (----------------)"
                    End If
                    'Lo aprobado seria
                    ApFDesde = AuxFDesde
                    ApFHasta = NocFHasta
                    ApHDesde = AuxHDesde
                    ApHHasta = NocHHasta
                    
                    objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                    TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                    
                    'Creo la nueva
                    If TotHorAP <> 0 Then
                        RecargarNocturnas = False
                        TotHorHHMM = CHoras(TotHorAP, 60)
                        StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                        StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                        StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                        StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                        StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                        StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                        StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                        StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        '==> debo modificar el registro actual (cambiarle el tipo de hora a aprobado)
                        'Actualizo
                        
                        'RecargarNocturnas = True
                        StrSql = "UPDATE gti_horcumplido SET "
                        StrSql = StrSql & " thnro = " & NocNoAut
                        StrSql = StrSql & " WHERE hornro = " & rs!hornro
                        objConn.Execute StrSql, , adExecuteNoRecords
                    End If
                End If
    
                'Nocturnas       [---------------]
                'Horario    (----------------)
                If Not SeAprobo Then
                    If objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFDesde, NocHDesde) And objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFHasta, AuxHHasta) And objFechasHoras.Menor_Igual_Hora(AuxFHasta, AuxHHasta, NocFHasta, NocHHasta) Then
                        SeAprobo = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas      [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario    (----------------)"
                        End If
                        'Lo aprobado seria
                        ApFDesde = NocFDesde
                        ApFHasta = AuxFHasta
                        ApHDesde = NocHDesde
                        ApHHasta = AuxHHasta
                    
                        objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                        TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        If TotHorAP <> 0 Then
                            'Creo la nueva autorizada
                            RecargarNocturnas = False
                            TotHorHHMM = CHoras(TotHorAP, 60)
                            
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                            StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                            StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                            StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        Else
                            '==> debo modificar el registro actual (cambiarle el tipo de hora a aprobado)
                            'Actualizo
                            
                            'RecargarNocturnas = True
                            StrSql = "UPDATE gti_horcumplido SET "
                            StrSql = StrSql & " thnro = " & NocNoAut
                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                End If
                
                'Nocturnas      [---------------]
                'Horario    (-----------------------)
                If Not SeAprobo Then
                    If objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFDesde, NocHDesde) And objFechasHoras.Menor_Igual_Hora(NocFHasta, NocHHasta, AuxFHasta, AuxHHasta) Then
                        SeAprobo = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas      [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario    (-----------------------)"
                        End If
                        'Lo aprobado seria
                        ApFDesde = NocFDesde
                        ApFHasta = NocFHasta
                        ApHDesde = NocHDesde
                        ApHHasta = NocHHasta
                    
                        objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                        TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        If TotHorAP <> 0 Then
                            'Creo la nueva autorizada
                            RecargarNocturnas = False
                            TotHorHHMM = CHoras(TotHorAP, 60)
                            
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                            StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                            StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                            StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        Else
                            '==> debo modificar el registro actual (cambiarle el tipo de hora a aprobado)
                            'Actualizo
                            
                            'RecargarNocturnas = True
                            StrSql = "UPDATE gti_horcumplido SET "
                            StrSql = StrSql & " thnro = " & NocNoAut
                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                End If
                
                'Nocturnas  [---------------]
                'Horario        (--------)
                If Not SeAprobo Then
                    If objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFDesde, AuxHDesde) And objFechasHoras.Menor_Igual_Hora(AuxFHasta, AuxHHasta, NocFHasta, NocHHasta) Then
                        SeAprobo = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas  [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario        (--------)"
                        End If
                        'Lo aprobado seria
                        ApFDesde = AuxFDesde
                        ApFHasta = AuxFHasta
                        ApHDesde = AuxHDesde
                        ApHHasta = AuxHHasta
                    
                        objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                        TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        If TotHorAP <> 0 Then
                            'Creo la nueva autorizada
                            RecargarNocturnas = False
                            TotHorHHMM = CHoras(TotHorAP, 60)
                            
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                            StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                            StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                            StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        Else
                            '==> debo modificar el registro actual (cambiarle el tipo de hora a aprobado)
                            'Actualizo
                            
                            'RecargarNocturnas = True
                            StrSql = "UPDATE gti_horcumplido SET "
                            StrSql = StrSql & " thnro = " & NocNoAut
                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                End If
                
                If Not SeAprobo Then
                        '==> debo modificar el registro actual (cambiarle el tipo de hora a aprobado)
                        'Actualizo
                        
                        'RecargarNocturnas = True
                        StrSql = "UPDATE gti_horcumplido SET "
                        StrSql = StrSql & " thnro = " & NocNoAut
                        StrSql = StrSql & " WHERE hornro = " & rs!hornro
                        objConn.Execute StrSql, , adExecuteNoRecords
                End If
           
           
                rsAP.MoveNext
            Loop
       
            If RecargarNocturnas = True And CantidadRecargas < 10 Then
                CantidadRecargas = CantidadRecargas + 1
                'Recargo el rs
                StrSql = " SELECT * FROM gti_horcumplido "
                StrSql = StrSql & " WHERE ternro = " & p_ternro
                StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
                StrSql = StrSql & " AND thnro = " & thNocturna
                StrSql = StrSql & " ORDER BY hordesde, horhoradesde"
                OpenRecordset StrSql, rs
            Else
                'Busco el siguiente registro
                rs.MoveNext
            End If
        Loop
    
    Case Else:  'Version inexistente
        If depurar Then
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Version inexistente. " & Opcion
        End If
    End Select

'Cierro y libero
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
    If rsAP.State = adStateOpen Then rsAP.Close
    Set rsAP = Nothing
    If rsTH.State = adStateOpen Then rsTH.Close
    Set rsTH = Nothing
End Sub



Private Sub Politica600(ByVal p_ternro As Long, ByVal Detalle As Long)
' ------------------------------------------------------------------------------------------------------------------------
' Descripcion: Control de hs Nocturnas.
'   Parametros:
'       Opcion      : Version de la politica. Implica la funcionalidad de la misma.
'       st_TipoHora1: Tipo de Hora. Se supone que seria la Nocturna No aprobada. Este tipo de hora debe ser autorizable y ademas
'                     debe tener configurado el tipo de hora que genera cuando se autorice.
'       st_ListaTH  : Lista de tipos de horas. Seria la lista de horas que aprobarian a las Nocturnas
'                     (en principio serian las normales y las horas extras que no sean autorizables).
'   Funcionalidad:
'       La idea de la politica es aprobar las horas nocturnas o cualquier tipo de hora que se configure
'       en el parametro st_TipoHora1 cuando se solapen con alguna hora cuyo tipo esté incluido en la lista st_ListaTH.
'   Autor: FGZ
'   Fecha: 26/05/2009
'   Ultima modificacion:
' ------------------------------------------------------------------------------------------------------------------------
Dim Opcion  As Integer
Dim ListaTH As String
Dim thNocturna As Long
Dim NocAut As Long
Dim NocNoAut As Long

Dim TotHorAP As Single
Dim TotHorR1 As Single
Dim TotHorR2 As Single

Dim NocFDesde As Date
Dim NocFHasta As Date
Dim NocHDesde As String
Dim NocHHasta As String
Dim AuxFDesde As Date
Dim AuxFHasta As Date
Dim AuxHDesde As String
Dim AuxHHasta As String

Dim ApFDesde As Date
Dim ApFHasta As Date
Dim ApHDesde As String
Dim ApHHasta As String

Dim R1FDesde As Date
Dim R1FHasta As Date
Dim R1HDesde As String
Dim R1HHasta As String
Dim R2FDesde As Date
Dim R2FHasta As Date
Dim R2HDesde As String
Dim R2HHasta As String

Dim SeAprobo As Boolean
Dim RecargarNocturnas As Boolean
Dim CantidadRecargas As Integer


Dim rs As New ADODB.Recordset
Dim rsTH As New ADODB.Recordset
Dim rsAP As New ADODB.Recordset
'---------------------------------
Dim TotHorHHMM As String
   
    Call SetearParametrosPolitica(Detalle, ok)

    Opcion = st_Opcion  'Version de la politica
    thNocturna = st_TipoHora1 'Tipo de Hora Nocturna No aprobada
    ListaTH = st_ListaTH 'Lista de horas que aprobarian a las Nocturnas (en principio serian las normales)
    If depurar Then
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Version: " & Opcion
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Hora Nocturna: " & thNocturna
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Lista de Tipos de hora que aprueban: " & ListaTH
    End If
   
    'Busco cual es el tipo de hora para las nocturnas aprobadas
    StrSql = "SELECT thautpor,thdesautpor FROM tiphora WHERE thnro = " & thNocturna
    OpenRecordset StrSql, rsTH
    If Not rsTH.EOF Then
        If Not EsNulo(rsTH!thautpor) Then
            NocAut = rsTH!thautpor
        End If
        If Not EsNulo(rsTH!thdesautpor) Then
            NocNoAut = rsTH!thdesautpor
        End If
        If depurar Then
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Nocturna Autorizada: " & rsTH!thautpor
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Nocturna No Autorizada: " & rsTH!thdesautpor
        End If
        If NocAut = 0 Or NocNoAut = 0 Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No está configurada la autorizacion de la Hora Nocturna."
                Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No se ejecutará la política."
            End If
            Exit Sub
        End If
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No se encontró la configuracion del tipo de hora Nocturna."
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No se ejecutará la política."
        End If
        Exit Sub
    End If
    
   
   
   Select Case Opcion
   Case 1: 'Estandar
        CantidadRecargas = 0
        'Buscar los tipos de hora Nocturnas
        StrSql = " SELECT * FROM gti_horcumplido "
        StrSql = StrSql & " WHERE ternro = " & p_ternro
        StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
        StrSql = StrSql & " AND thnro = " & thNocturna
        StrSql = StrSql & " ORDER BY hordesde, horhoradesde"
        OpenRecordset StrSql, rs
        If rs.EOF Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "No hay hs Nocturnas generadas"
            End If
        End If
        Do While Not rs.EOF
            SeAprobo = False
            RecargarNocturnas = False
            'Por cada hora nocturna encontrada intersectarla con las hs que aprueban
            NocFDesde = rs!hordesde
            NocFHasta = rs!horhasta
            NocHDesde = rs!horhoradesde
            NocHHasta = rs!horhorahasta
       
            'Busco los th que aprueban
            StrSql = " SELECT * FROM gti_horcumplido "
            StrSql = StrSql & " WHERE ternro = " & p_ternro
            StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
            StrSql = StrSql & " AND thnro IN (" & ListaTH & ")"
            StrSql = StrSql & " ORDER BY thnro, hordesde, horhoradesde"
            OpenRecordset StrSql, rsAP
            If rsAP.EOF Then
                'Debo poner todas las horas como no autorizadas
                StrSql = "UPDATE gti_horcumplido SET "
                StrSql = StrSql & " thnro = " & NocNoAut
                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
            Do While Not rsAP.EOF And Not RecargarNocturnas
                AuxFDesde = rsAP!hordesde
                AuxFHasta = rsAP!horhasta
                AuxHDesde = rsAP!horhoradesde
                AuxHHasta = rsAP!horhorahasta
            
                SeAprobo = False
                'Nocturnas     [---------------]
                'Horario          (----------------)
                If objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFDesde, AuxHDesde) And objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFHasta, NocHHasta) And objFechasHoras.Menor_Igual_Hora(NocFHasta, NocHHasta, AuxFHasta, AuxHHasta) Then
                    SeAprobo = True
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas    [---------------]"
                        Flog.writeline Espacios(Tabulador * 3) & " 'Horario          (----------------)"
                    End If
                    'Lo aprobado seria
                    ApFDesde = AuxFDesde
                    ApFHasta = NocFHasta
                    ApHDesde = AuxHDesde
                    ApHHasta = NocHHasta
                    
                    objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                    TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                    
                    'Lo que resta seria
                    R1FDesde = NocFDesde
                    R1HDesde = NocHDesde
                    R1FHasta = AuxFDesde
                    R1HHasta = AuxHDesde
                    objFechasHoras.RestaHs R1FDesde, R1HDesde, R1FHasta, R1HHasta, Tdias, Thoras, Tmin
                    TotHorR1 = (Tdias * 24) + (Thoras + (Tmin / 60))


                    '==> debo modificar el registro actual y insertar uno nuevo con la parte aprobada
                    'Actualizo lo restante
                    If TotHorR1 <> 0 Then
                        TotHorHHMM = CHoras(TotHorR1, 60)
                        'RecargarNocturnas = True
                        StrSql = "UPDATE gti_horcumplido SET "
                        StrSql = StrSql & " horcant = " & TotHorR1
                        StrSql = StrSql & " ,horas = " & TotHorHHMM
                        'StrSql = StrSql & ", hordesde = " & ConvFecha(r1FDesde)
                        StrSql = StrSql & ", horhasta = " & ConvFecha(R1FHasta)
                        'StrSql = StrSql & ", horhoradesde = '" & r1HDesde & "'"
                        StrSql = StrSql & ", horhorahasta = '" & R1HHasta & "'"
                        StrSql = StrSql & " WHERE hornro = " & rs!hornro
                    Else
                        StrSql = "DELETE gti_horcumplido "
                        StrSql = StrSql & " WHERE hornro = " & rs!hornro
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    'Creo la nueva
                    If TotHorAP <> 0 Then
                        RecargarNocturnas = True
                        TotHorHHMM = CHoras(TotHorAP, 60)
                        StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                        StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                        StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                        StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                        StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                        StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                        StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                        StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                    End If
                End If
    
                'Nocturnas       [---------------]
                'Horario    (----------------)
                If Not SeAprobo Then
                    If objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFDesde, NocHDesde) And objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFHasta, AuxHHasta) And objFechasHoras.Menor_Igual_Hora(AuxFHasta, AuxHHasta, NocFHasta, NocHHasta) Then
                        SeAprobo = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas      [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario    (----------------)"
                        End If
                        'Lo aprobado seria
                        ApFDesde = NocFDesde
                        ApFHasta = AuxFHasta
                        ApHDesde = NocHDesde
                        ApHHasta = AuxHHasta
                    
                        objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                        TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        'Lo que resta seria
                        R1FDesde = AuxFHasta
                        R1HDesde = AuxHHasta
                        R1FHasta = NocFHasta
                        R1HHasta = NocHHasta
                        objFechasHoras.RestaHs R1FDesde, R1HDesde, R1FHasta, R1HHasta, Tdias, Thoras, Tmin
                        TotHorR1 = (Tdias * 24) + (Thoras + (Tmin / 60))
    
                        'Lo que resta seria
                        TotHorR2 = 0
                    
                        '==> debo modificar el registro actual y insertar uno nuevo con la parte aprobada
                        'Actualizo lo restante
                        If TotHorR1 <> 0 Then
                            'RecargarNocturnas = True
                            TotHorHHMM = CHoras(TotHorR1, 60)
                            
                            StrSql = "UPDATE gti_horcumplido SET "
                            StrSql = StrSql & " horcant = " & TotHorR1
                            StrSql = StrSql & " ,horas = " & TotHorHHMM
                            StrSql = StrSql & ", hordesde = " & ConvFecha(R1FDesde)
                            'StrSql = StrSql & ", horhasta = " & ConvFecha(R1FHasta)
                            StrSql = StrSql & ", horhoradesde = '" & R1HDesde & "'"
                            'StrSql = StrSql & ", horhorahasta = '" & R1HHasta & "'"
                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
                        Else
                            StrSql = "DELETE gti_horcumplido "
                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
                        End If
                        objConn.Execute StrSql, , adExecuteNoRecords
                        
                        If TotHorAP <> 0 Then
                            'Creo la nueva autorizada
                            RecargarNocturnas = True
                            TotHorHHMM = CHoras(TotHorAP, 60)
                            
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                            StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                            StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                            StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                End If
                
                'Nocturnas      [---------------]
                'Horario    (-----------------------)
                If Not SeAprobo Then
                    If objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFDesde, NocHDesde) And objFechasHoras.Menor_Igual_Hora(NocFHasta, NocHHasta, AuxFHasta, AuxHHasta) Then
                        SeAprobo = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas      [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario    (-----------------------)"
                        End If
                        'Lo aprobado seria
                        ApFDesde = NocFDesde
                        ApFHasta = NocFHasta
                        ApHDesde = NocHDesde
                        ApHHasta = NocHHasta
                    
                        objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                        TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        'Lo que resta seria
                        TotHorR1 = 0
    
                        'Lo que resta seria
                        TotHorR2 = 0
                        
                        '==> debo modificar el registro actual (cambiarle el tipo de hora a aprobado)
                        'Actualizo
                        
                        'RecargarNocturnas = True
                        StrSql = "UPDATE gti_horcumplido SET "
                        StrSql = StrSql & " thnro = " & NocAut
                        StrSql = StrSql & " WHERE hornro = " & rs!hornro
                        objConn.Execute StrSql, , adExecuteNoRecords
                    End If
                End If
                
                'Nocturnas  [---------------]
                'Horario        (--------)
                If Not SeAprobo Then
                    If objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFDesde, AuxHDesde) And objFechasHoras.Menor_Igual_Hora(AuxFHasta, AuxHHasta, NocFHasta, NocHHasta) Then
                        SeAprobo = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas  [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario        (--------)"
                        End If
                        'Lo aprobado seria
                        ApFDesde = AuxFDesde
                        ApFHasta = AuxFHasta
                        ApHDesde = AuxHDesde
                        ApHHasta = AuxHHasta
                    
                        objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                        TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        'Lo que resta seria
                        R1FDesde = NocFDesde
                        R1HDesde = NocHDesde
                        R1FHasta = AuxFDesde
                        R1HHasta = AuxHDesde
                        objFechasHoras.RestaHs R1FDesde, R1HDesde, R1FHasta, R1HHasta, Tdias, Thoras, Tmin
                        TotHorR1 = (Tdias * 24) + (Thoras + (Tmin / 60))
    
    
                        'Lo que resta seria
                        R2FDesde = AuxFHasta
                        R2HDesde = AuxHHasta
                        R2FHasta = NocFHasta
                        R2HHasta = NocHHasta
                        objFechasHoras.RestaHs R2FDesde, R2HDesde, R2FHasta, R2HHasta, Tdias, Thoras, Tmin
                        TotHorR2 = (Tdias * 24) + (Thoras + (Tmin / 60))
                    
                    
                        '==> debo modificar el registro actual a aprobado e insertar los 2 registros sobrantes como no aprobada
                        'Actualizo
                        If TotHorAP <> 0 Then
                            RecargarNocturnas = True
                            
                            TotHorHHMM = CHoras(TotHorAP, 60)
                            
                            StrSql = "UPDATE gti_horcumplido SET "
                            StrSql = StrSql & " horcant = " & TotHorAP
                            StrSql = StrSql & ", horas = " & TotHorHHMM
                            StrSql = StrSql & ", thnro = " & NocAut
                            StrSql = StrSql & ", hordesde = " & ConvFecha(ApFDesde)
                            StrSql = StrSql & ", horhasta = " & ConvFecha(ApFHasta)
                            StrSql = StrSql & ", horhoradesde = '" & ApHDesde & "'"
                            StrSql = StrSql & ", horhorahasta = '" & ApHHasta & "'"
                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                        
                        'Creo la 1er restante no autorizada
                        If TotHorR1 <> 0 Then
                            RecargarNocturnas = True
                            
                            TotHorHHMM = CHoras(TotHorR1, 60)
                            
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHorR1 & "," & ConvFecha(R1FDesde) & ",' '," & ConvFecha(R1FHasta) & ",'" & R1HDesde & "','"
                            StrSql = StrSql & R1HHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocNoAut & "," & rs!turnro & ","
                            StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                            StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    
                        'Creo la 2da restante no autorizada
                        If TotHorR2 <> 0 Then
                            RecargarNocturnas = True
                            
                            TotHorHHMM = CHoras(TotHorR2, 60)
                            
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHorR2 & "," & ConvFecha(R2FDesde) & ",' '," & ConvFecha(R2FHasta) & ",'" & R2HDesde & "','"
                            StrSql = StrSql & R2HHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocNoAut & "," & rs!turnro & ","
                            StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                            StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                End If
           
                rsAP.MoveNext
            Loop
       
            If RecargarNocturnas = True And CantidadRecargas < 10 Then
                CantidadRecargas = CantidadRecargas + 1
                'Recargo el rs
                StrSql = " SELECT * FROM gti_horcumplido "
                StrSql = StrSql & " WHERE ternro = " & p_ternro
                StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
                StrSql = StrSql & " AND thnro = " & thNocturna
                StrSql = StrSql & " ORDER BY hordesde, horhoradesde"
                OpenRecordset StrSql, rs
            Else
                'Busco el siguiente registro
                rs.MoveNext
            End If
        Loop
   Case 2: 'Custom MOnresa - No parte las horas, es decir, solo genera nuevas horas cuando se solapan
        CantidadRecargas = 0
        'Buscar los tipos de hora Nocturnas
        StrSql = " SELECT * FROM gti_horcumplido "
        StrSql = StrSql & " WHERE ternro = " & p_ternro
        StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
        StrSql = StrSql & " AND thnro = " & thNocturna
        StrSql = StrSql & " ORDER BY hordesde, horhoradesde"
        OpenRecordset StrSql, rs
        If rs.EOF Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "No hay hs Nocturnas generadas"
            End If
        End If
        Do While Not rs.EOF
            SeAprobo = False
            RecargarNocturnas = False
            'Por cada hora nocturna encontrada intersectarla con las hs que aprueban
            NocFDesde = rs!hordesde
            NocFHasta = rs!horhasta
            NocHDesde = rs!horhoradesde
            NocHHasta = rs!horhorahasta
       
            'Busco los th que aprueban
            StrSql = " SELECT * FROM gti_horcumplido "
            StrSql = StrSql & " WHERE ternro = " & p_ternro
            StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
            StrSql = StrSql & " AND thnro IN (" & ListaTH & ")"
            StrSql = StrSql & " ORDER BY thnro, hordesde, horhoradesde"
            OpenRecordset StrSql, rsAP
            Do While Not rsAP.EOF And Not RecargarNocturnas
                AuxFDesde = rsAP!hordesde
                AuxFHasta = rsAP!horhasta
                AuxHDesde = rsAP!horhoradesde
                AuxHHasta = rsAP!horhorahasta
            
                SeAprobo = False
                'Nocturnas     [---------------]
                'Horario          (----------------)
                If objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFDesde, AuxHDesde) And objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFHasta, NocHHasta) And objFechasHoras.Menor_Igual_Hora(NocFHasta, NocHHasta, AuxFHasta, AuxHHasta) Then
                    SeAprobo = True
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas    [---------------]"
                        Flog.writeline Espacios(Tabulador * 3) & " 'Horario          (----------------)"
                    End If
                    'Lo aprobado seria
                    ApFDesde = AuxFDesde
                    ApFHasta = NocFHasta
                    ApHDesde = AuxHDesde
                    ApHHasta = NocHHasta
                    
                    objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                    TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                    
                    'Creo la nueva
                    If TotHorAP <> 0 Then
                        RecargarNocturnas = False
                        TotHorHHMM = CHoras(TotHorAP, 60)
                        StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                        StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                        StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                        StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                        StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                        StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                        StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                        StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                    End If
                End If
    
                'Nocturnas       [---------------]
                'Horario    (----------------)
                If Not SeAprobo Then
                    If objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFDesde, NocHDesde) And objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFHasta, AuxHHasta) And objFechasHoras.Menor_Igual_Hora(AuxFHasta, AuxHHasta, NocFHasta, NocHHasta) Then
                        SeAprobo = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas      [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario    (----------------)"
                        End If
                        'Lo aprobado seria
                        ApFDesde = NocFDesde
                        ApFHasta = AuxFHasta
                        ApHDesde = NocHDesde
                        ApHHasta = AuxHHasta
                    
                        objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                        TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        If TotHorAP <> 0 Then
                            'Creo la nueva autorizada
                            RecargarNocturnas = False
                            TotHorHHMM = CHoras(TotHorAP, 60)
                            
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                            StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                            StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                            StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                End If
                
                'Nocturnas      [---------------]
                'Horario    (-----------------------)
                If Not SeAprobo Then
                    If objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFDesde, NocHDesde) And objFechasHoras.Menor_Igual_Hora(NocFHasta, NocHHasta, AuxFHasta, AuxHHasta) Then
                        SeAprobo = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas      [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario    (-----------------------)"
                        End If
                        'Lo aprobado seria
                        ApFDesde = NocFDesde
                        ApFHasta = NocFHasta
                        ApHDesde = NocHDesde
                        ApHHasta = NocHHasta
                    
                        objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                        TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        If TotHorAP <> 0 Then
                            'Creo la nueva autorizada
                            RecargarNocturnas = False
                            TotHorHHMM = CHoras(TotHorAP, 60)
                            
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                            StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                            StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                            StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                End If
                
                'Nocturnas  [---------------]
                'Horario        (--------)
                If Not SeAprobo Then
                    If objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFDesde, AuxHDesde) And objFechasHoras.Menor_Igual_Hora(AuxFHasta, AuxHHasta, NocFHasta, NocHHasta) Then
                        SeAprobo = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas  [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario        (--------)"
                        End If
                        'Lo aprobado seria
                        ApFDesde = AuxFDesde
                        ApFHasta = AuxFHasta
                        ApHDesde = AuxHDesde
                        ApHHasta = AuxHHasta
                    
                        objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                        TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        If TotHorAP <> 0 Then
                            'Creo la nueva autorizada
                            RecargarNocturnas = False
                            TotHorHHMM = CHoras(TotHorAP, 60)
                            
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                            StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                            StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                            StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                End If
           
                rsAP.MoveNext
            Loop
       
            If RecargarNocturnas = True And CantidadRecargas < 10 Then
                CantidadRecargas = CantidadRecargas + 1
                'Recargo el rs
                StrSql = " SELECT * FROM gti_horcumplido "
                StrSql = StrSql & " WHERE ternro = " & p_ternro
                StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
                StrSql = StrSql & " AND thnro = " & thNocturna
                StrSql = StrSql & " ORDER BY hordesde, horhoradesde"
                OpenRecordset StrSql, rs
            Else
                'Busco el siguiente registro
                rs.MoveNext
            End If
        Loop
   Case 3: 'genera 1 tipo de hora para las que solapan y otro para las que no solapan por la cantidad de hora originales(la v1 deja el tipo de hora original)
        CantidadRecargas = 0
        'Buscar los tipos de hora Nocturnas
        StrSql = " SELECT * FROM gti_horcumplido "
        StrSql = StrSql & " WHERE ternro = " & p_ternro
        StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
        StrSql = StrSql & " AND thnro = " & thNocturna
        StrSql = StrSql & " ORDER BY hordesde, horhoradesde"
        OpenRecordset StrSql, rs
        If rs.EOF Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "No hay hs Nocturnas generadas"
            End If
        End If
        Do While Not rs.EOF
            SeAprobo = False
            RecargarNocturnas = False
            'Por cada hora nocturna encontrada intersectarla con las hs que aprueban
            NocFDesde = rs!hordesde
            NocFHasta = rs!horhasta
            NocHDesde = rs!horhoradesde
            NocHHasta = rs!horhorahasta
       
            'Busco los th que aprueban
            StrSql = " SELECT * FROM gti_horcumplido "
            StrSql = StrSql & " WHERE ternro = " & p_ternro
            StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
            StrSql = StrSql & " AND thnro IN (" & ListaTH & ")"
            StrSql = StrSql & " ORDER BY thnro, hordesde, horhoradesde"
            OpenRecordset StrSql, rsAP
            
'            If rsAp.EOF Then
'                'Debo poner todas las horas como no autorizadas
'                StrSql = "UPDATE gti_horcumplido SET "
'                StrSql = StrSql & " thnro = " & NocNoAut
'                StrSql = StrSql & " WHERE hornro = " & rs!hornro
'                objConn.Execute StrSql, , adExecuteNoRecords
'            End If
            
            Do While Not rsAP.EOF And Not RecargarNocturnas
                AuxFDesde = rsAP!hordesde
                AuxFHasta = rsAP!horhasta
                AuxHDesde = rsAP!horhoradesde
                AuxHHasta = rsAP!horhorahasta
            
                SeAprobo = False
                'Nocturnas     [---------------]
                'Horario          (----------------)
                If objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFDesde, AuxHDesde) And objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFHasta, NocHHasta) And objFechasHoras.Menor_Igual_Hora(NocFHasta, NocHHasta, AuxFHasta, AuxHHasta) Then
                    SeAprobo = True
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas    [---------------]"
                        Flog.writeline Espacios(Tabulador * 3) & " 'Horario          (----------------)"
                    End If
                    'Lo aprobado seria
                    ApFDesde = AuxFDesde
                    ApFHasta = NocFHasta
                    ApHDesde = AuxHDesde
                    ApHHasta = NocHHasta
                    
                    objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                    TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                    
                    'Creo la nueva
                    If TotHorAP <> 0 Then
                        RecargarNocturnas = False
                        TotHorHHMM = CHoras(TotHorAP, 60)
                        StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                        StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                        StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                        StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                        StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                        StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                        StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                        StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
'                    Else
'                        '==> debo modificar el registro actual (cambiarle el tipo de hora a aprobado)
'                        'Actualizo
'
'                        'RecargarNocturnas = True
'                        StrSql = "UPDATE gti_horcumplido SET "
'                        StrSql = StrSql & " thnro = " & NocNoAut
'                        StrSql = StrSql & " WHERE hornro = " & rs!hornro
'                        objConn.Execute StrSql, , adExecuteNoRecords
                    End If
                End If
    
                'Nocturnas       [---------------]
                'Horario    (----------------)
                If Not SeAprobo Then
                    If objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFDesde, NocHDesde) And objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFHasta, AuxHHasta) And objFechasHoras.Menor_Igual_Hora(AuxFHasta, AuxHHasta, NocFHasta, NocHHasta) Then
                        SeAprobo = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas      [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario    (----------------)"
                        End If
                        'Lo aprobado seria
                        ApFDesde = NocFDesde
                        ApFHasta = AuxFHasta
                        ApHDesde = NocHDesde
                        ApHHasta = AuxHHasta
                    
                        objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                        TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        If TotHorAP <> 0 Then
                            'Creo la nueva autorizada
                            RecargarNocturnas = False
                            TotHorHHMM = CHoras(TotHorAP, 60)
                            
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                            StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                            StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                            StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
'                        Else
'                            '==> debo modificar el registro actual (cambiarle el tipo de hora a aprobado)
'                            'Actualizo
'
'                            'RecargarNocturnas = True
'                            StrSql = "UPDATE gti_horcumplido SET "
'                            StrSql = StrSql & " thnro = " & NocNoAut
'                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
'                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                End If
                
                'Nocturnas      [---------------]
                'Horario    (-----------------------)
                If Not SeAprobo Then
                    If objFechasHoras.Menor_Igual_Hora(AuxFDesde, AuxHDesde, NocFDesde, NocHDesde) And objFechasHoras.Menor_Igual_Hora(NocFHasta, NocHHasta, AuxFHasta, AuxHHasta) Then
                        SeAprobo = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas      [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario    (-----------------------)"
                        End If
                        'Lo aprobado seria
                        ApFDesde = NocFDesde
                        ApFHasta = NocFHasta
                        ApHDesde = NocHDesde
                        ApHHasta = NocHHasta
                    
                        objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                        TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        If TotHorAP <> 0 Then
                            'Creo la nueva autorizada
                            RecargarNocturnas = False
                            TotHorHHMM = CHoras(TotHorAP, 60)
                            
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                            StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                            StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                            StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
'                        Else
'                            '==> debo modificar el registro actual (cambiarle el tipo de hora a aprobado)
'                            'Actualizo
'
'                            'RecargarNocturnas = True
'                            StrSql = "UPDATE gti_horcumplido SET "
'                            StrSql = StrSql & " thnro = " & NocNoAut
'                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
'                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                End If
                
                'Nocturnas  [---------------]
                'Horario        (--------)
                If Not SeAprobo Then
                    If objFechasHoras.Menor_Igual_Hora(NocFDesde, NocHDesde, AuxFDesde, AuxHDesde) And objFechasHoras.Menor_Igual_Hora(AuxFHasta, AuxHHasta, NocFHasta, NocHHasta) Then
                        SeAprobo = True
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & " 'Nocturnas  [---------------]"
                            Flog.writeline Espacios(Tabulador * 3) & " 'Horario        (--------)"
                        End If
                        'Lo aprobado seria
                        ApFDesde = AuxFDesde
                        ApFHasta = AuxFHasta
                        ApHDesde = AuxHDesde
                        ApHHasta = AuxHHasta
                    
                        objFechasHoras.RestaHs ApFDesde, ApHDesde, ApFHasta, ApHHasta, Tdias, Thoras, Tmin
                        TotHorAP = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        If TotHorAP <> 0 Then
                            'Creo la nueva autorizada
                            RecargarNocturnas = False
                            TotHorHHMM = CHoras(TotHorAP, 60)
                            
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHorAP & "," & ConvFecha(ApFDesde) & ",' '," & ConvFecha(ApFHasta) & ",'" & ApHDesde & "','"
                            StrSql = StrSql & ApHHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & rs!Ternro & "," & NocAut & "," & rs!turnro & ","
                            StrSql = StrSql & rs!regent & ",'" & rs!horrealent & "'," & rs!regsal & ",'"
                            StrSql = StrSql & rs!horrealsal & "'," & rs!empleg & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
'                        Else
'                            '==> debo modificar el registro actual (cambiarle el tipo de hora a aprobado)
'                            'Actualizo
'
'                            'RecargarNocturnas = True
'                            StrSql = "UPDATE gti_horcumplido SET "
'                            StrSql = StrSql & " thnro = " & NocNoAut
'                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
'                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                End If
                
'                If Not SeAprobo Then
'                        '==> debo modificar el registro actual (cambiarle el tipo de hora a aprobado)
'                        'Actualizo
'
'                        'RecargarNocturnas = True
'                        StrSql = "UPDATE gti_horcumplido SET "
'                        StrSql = StrSql & " thnro = " & NocNoAut
'                        StrSql = StrSql & " WHERE hornro = " & rs!hornro
'                        objConn.Execute StrSql, , adExecuteNoRecords
'                End If
           
           
                rsAP.MoveNext
            Loop
       
            If RecargarNocturnas = True And CantidadRecargas < 10 Then
                CantidadRecargas = CantidadRecargas + 1
                'Recargo el rs
                StrSql = " SELECT * FROM gti_horcumplido "
                StrSql = StrSql & " WHERE ternro = " & p_ternro
                StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
                StrSql = StrSql & " AND thnro = " & thNocturna
                StrSql = StrSql & " ORDER BY hordesde, horhoradesde"
                OpenRecordset StrSql, rs
            Else
                'Busco el siguiente registro
                rs.MoveNext
            End If
        Loop
        
        
        'Ahora todos los tipos de horas originales deben pasar a ser NA
        StrSql = "UPDATE gti_horcumplido SET "
        StrSql = StrSql & " thnro = " & NocNoAut
        StrSql = StrSql & " WHERE ternro = " & p_ternro
        StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
        StrSql = StrSql & " AND thnro = " & thNocturna
        objConn.Execute StrSql, , adExecuteNoRecords
    
    Case Else:  'Version inexistente
        If depurar Then
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Version inexistente. " & Opcion
        End If
    End Select

'Cierro y libero
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
    If rsAP.State = adStateOpen Then rsAP.Close
    Set rsAP = Nothing
    If rsTH.State = adStateOpen Then rsTH.Close
    Set rsTH = Nothing
End Sub


Private Sub Politica601(ByVal p_ternro As Long, ByVal Detalle As Long)
' ------------------------------------------------------------------------------------------------------------------------
' Descripcion: Control de hs Nocturnas.
'   Parametros:
'       Opcion      : Version de la politica. Implica la funcionalidad de la misma.
'       st_TipoHora1: Lista de Tipos de Hora. Se supone que seria la Nocturna No aprobada pero se puede poner cualquier tipo de hora autorizable.
'           Este tipo de hora debe ser autorizable y ademas
'                     debe tener configurado el tipo de hora que genera cuando se autorice.

'       st_ListaTH  : Lista de tipos de horas. Seria la lista de horas que aprobarian a las Nocturnas
'                     (en principio serian las normales y las horas extras que no sean autorizables).
'   Funcionalidad:
'       Permite aprobar las horas nocturnas no autorizadas que se generaron por Hs extras no autorizadas.
'       Lo que hace es revisar si las extras fueron aprobadas y en consecuencia aprueba las Nocturnas también.
'   Autor: FGZ
'   Fecha: 29/05/2009
'   Ultima modificacion: 03/12/2009 - FGZ - Se le agregó la posibilidad de configurar mas de un tipo de hora nocturna
'
' ------------------------------------------------------------------------------------------------------------------------
Dim Opcion  As Integer
Dim ListaTH As String
Dim ListathNA As String
Dim thNocturna As Long
Dim NocAut As Long
Dim NocNoAut As Long

Dim Cant_AP As Single
Dim Cant_Resto As Single
Dim Cant_Extra As Single
Dim Cant_Noc As Single

Dim RecargarNocturnas As Boolean

Dim rs As New ADODB.Recordset
Dim rsAD As New ADODB.Recordset
Dim rsTH As New ADODB.Recordset
Dim rsAP As New ADODB.Recordset

Dim lista
Dim i As Long
'---------------------------------
Dim TotHorHHMM As String

   
    Call SetearParametrosPolitica(Detalle, ok)

    Opcion = st_Opcion  'Version de la politica
    'thNocturna = st_TipoHora1 'Tipo de Hora Nocturna No aprobada
    ListathNA = st_ListaF1 'Lista de tipos de horas NO aprobadas
    ListaTH = st_ListaTH 'Lista de horas que aprobarian a las Nocturnas (en principio serian las normales)
    If depurar Then
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Version: " & Opcion
        'Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Hora Nocturna: " & thNocturna
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Horas NO Aprobadas(Nocturnas, vales, etc): " & ListathNA
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Lista de Tipos de hora que aprueban: " & ListaTH
    End If
   
   
   lista = Split(ListathNA, ",", -1)
   
   
   For i = 0 To UBound(lista)
     thNocturna = lista(i)
    
     'Busco cual es el tipo de hora para las nocturnas aprobadas
     StrSql = "SELECT thautpor,thdesautpor FROM tiphora WHERE thnro = " & thNocturna
     OpenRecordset StrSql, rsTH
     If Not rsTH.EOF Then
         If Not EsNulo(rsTH!thautpor) Then
             NocAut = rsTH!thautpor
         End If
         If Not EsNulo(rsTH!thdesautpor) Then
             NocNoAut = rsTH!thdesautpor
         End If
         If depurar Then
             Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Nocturna Autorizada: " & rsTH!thautpor
             Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Nocturna No Autorizada: " & rsTH!thdesautpor
         End If
         If NocAut = 0 Or NocNoAut = 0 Then
             If depurar Then
                 Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No está configurada la autorizacion de la Hora Nocturna."
                 Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No se ejecutará la política."
             End If
             'Exit Sub
             GoTo SiguienteTH
         End If
     Else
         If depurar Then
             Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No se encontró la configuracion del tipo de hora Nocturna."
             Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No se ejecutará la política."
         End If
         'Exit Sub
         GoTo SiguienteTH
     End If
     
     
     
     'Busco los th que aprueban
     StrSql = " SELECT * FROM gti_acumdiario "
     StrSql = StrSql & " WHERE ternro = " & p_ternro
     StrSql = StrSql & " AND adfecha = " & ConvFecha(p_fecha)
     StrSql = StrSql & " AND thnro IN (" & ListaTH & ")"
     StrSql = StrSql & " ORDER BY thnro"
     OpenRecordset StrSql, rsAP
     Do While Not rsAP.EOF
         Cant_Extra = rsAP!adcanthoras
             
         'Buscar los tipos de hora Nocturnas
         StrSql = " SELECT * FROM gti_acumdiario "
         StrSql = StrSql & " WHERE ternro = " & p_ternro
         StrSql = StrSql & " AND adfecha = " & ConvFecha(p_fecha)
         StrSql = StrSql & " AND thnro = " & thNocturna
         OpenRecordset StrSql, rs
         If rs.EOF Then
             If depurar Then
                 Flog.writeline Espacios(Tabulador * 3) & "No hay hs Nocturnas no autorizadas generadas"
             End If
         End If
         RecargarNocturnas = False
         Do While Not rs.EOF And Not RecargarNocturnas
             'Por cada hora nocturna encontrada buscar si hay extras autorizadas
             Cant_Noc = rs!adcanthoras
             
             If Cant_Extra >= Cant_Noc Then
                 'Se aprobó la totalidad de las nocturnas, cambio el tipo de hora
                 
                 'Busco si existe el tip de hora autorizada
                 StrSql = "SELECT * FROM gti_acumdiario"
                 StrSql = StrSql & " WHERE ternro = " & rs!Ternro
                 StrSql = StrSql & " and thnro = " & NocAut
                 StrSql = StrSql & " and adfecha = " & ConvFecha(p_fecha)
                 OpenRecordset StrSql, rsAD
                 If rsAD.EOF Then
                     'RecargarNocturnas = True
                     StrSql = "UPDATE gti_acumdiario SET thnro = " & NocAut
                     StrSql = StrSql & " WHERE ternro = " & rs!Ternro
                     StrSql = StrSql & " AND adfecha = " & ConvFecha(rs!adfecha)
                     StrSql = StrSql & " AND thnro = " & rs!thnro
                     objConn.Execute StrSql, , adExecuteNoRecords
                 Else
                     'Borro las no aprobadas y actualizo las aprobadas
                     StrSql = "DELETE gti_acumdiario "
                     StrSql = StrSql & " WHERE ternro = " & rs!Ternro
                     StrSql = StrSql & " AND adfecha = " & ConvFecha(p_fecha)
                     StrSql = StrSql & " AND thnro = " & NocNoAut
                     objConn.Execute StrSql, , adExecuteNoRecords
                 
                     TotHorHHMM = CHoras(rsAD!adcanthoras + Cant_Noc, 60)
                     
                     StrSql = "UPDATE gti_acumdiario SET adcanthoras = adcanthoras + " & Cant_Noc
                     StrSql = StrSql & " , horas = " & TotHorHHMM
                     StrSql = StrSql & " WHERE ternro = " & rsAD!Ternro
                     StrSql = StrSql & " AND adfecha = " & ConvFecha(rsAD!adfecha)
                     StrSql = StrSql & " AND thnro = " & rsAD!thnro
                     objConn.Execute StrSql, , adExecuteNoRecords
                 
                 End If
             Else
                 'Se aprobó parcialmente las nocturnas, actualizo la cantidad restante
                 '   e inserto la cantidad aprobada
                 Cant_Resto = Cant_Noc - Cant_Extra
                 Cant_AP = Cant_Extra
                 
                 'Actualizo lo que queda sin autorizar
                 RecargarNocturnas = True
                 TotHorHHMM = CHoras(Cant_Resto, 60)
                 
                 StrSql = "UPDATE gti_acumdiario SET adcanthoras = " & Cant_Resto
                 StrSql = StrSql & " , horas = " & TotHorHHMM
                 StrSql = StrSql & " WHERE ternro = " & rs!Ternro
                 StrSql = StrSql & " AND adfecha = " & ConvFecha(rs!adfecha)
                 StrSql = StrSql & " AND thnro = " & rs!thnro
                 objConn.Execute StrSql, , adExecuteNoRecords
             
             
                 'Inserto las autorizadas
                 'Busco si existe el tip de hora autorizada
                 StrSql = "SELECT * FROM gti_acumdiario"
                 StrSql = StrSql & " WHERE ternro = " & rs!Ternro
                 StrSql = StrSql & " and thnro = " & NocAut
                 StrSql = StrSql & " and adfecha = " & ConvFecha(p_fecha)
                 OpenRecordset StrSql, rsAD
                 If rsAD.EOF Then
                     TotHorHHMM = CHoras(Cant_AP, 60)
                     StrSql = "INSERT INTO gti_acumdiario (ternro,thnro,adfecha,horas,adcanthoras)"
                     StrSql = StrSql & " VALUES ("
                     StrSql = StrSql & p_ternro
                     StrSql = StrSql & "," & NocAut
                     StrSql = StrSql & "," & ConvFecha(p_fecha)
                     StrSql = StrSql & "," & TotHorHHMM
                     StrSql = StrSql & "," & Cant_AP
                     StrSql = StrSql & ")"
                     objConn.Execute StrSql, , adExecuteNoRecords
                 Else
                     TotHorHHMM = CHoras(rsAD!adcanthoras + Cant_AP, 60)
                     
                     StrSql = "UPDATE gti_acumdiario SET adcanthoras = adcanthoras + " & Cant_AP
                     StrSql = StrSql & " , horas = " & TotHorHHMM
                     StrSql = StrSql & " WHERE ternro = " & rsAD!Ternro
                     StrSql = StrSql & " AND adfecha = " & ConvFecha(rsAD!adfecha)
                     StrSql = StrSql & " AND thnro = " & rsAD!thnro
                     objConn.Execute StrSql, , adExecuteNoRecords
                 End If
             End If
             
             If RecargarNocturnas Then
                 'Recargo el rs
                 StrSql = " SELECT * FROM gti_acumdiario "
                 StrSql = StrSql & " WHERE ternro = " & p_ternro
                 StrSql = StrSql & " AND adfecha = " & ConvFecha(p_fecha)
                 StrSql = StrSql & " AND thnro = " & thNocturna
                 OpenRecordset StrSql, rs
             Else
                 'Busco el siguiente registro
                 rs.MoveNext
             End If
         Loop
     
         rsAP.MoveNext
     Loop
     
    
     Select Case Opcion
     Case 1: 'No borra las Nocturnas no autorizadas (Estandar)
         
     Case 2: 'borra las Nocturnas no autorizadas
         StrSql = "DELETE gti_acumdiario "
         StrSql = StrSql & " WHERE ternro = " & p_ternro
         StrSql = StrSql & " AND adfecha = " & ConvFecha(p_fecha)
         StrSql = StrSql & " AND thnro = " & NocNoAut
         objConn.Execute StrSql, , adExecuteNoRecords
         
     Case Else:  'Version inexistente
         If depurar Then
             Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Version inexistente. " & Opcion
         End If
     End Select

SiguienteTH:
Next i


'Cierro y libero
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
    If rsAP.State = adStateOpen Then rsAP.Close
    Set rsAP = Nothing
    If rsTH.State = adStateOpen Then rsTH.Close
    Set rsTH = Nothing
    If rsAD.State = adStateOpen Then rsAD.Close
    Set rsAD = Nothing
    
End Sub



Private Sub Politica601_old(ByVal p_ternro As Long, ByVal Detalle As Long)
' ------------------------------------------------------------------------------------------------------------------------
' Descripcion: Control de hs Nocturnas.
'   Parametros:
'       Opcion      : Version de la politica. Implica la funcionalidad de la misma.
'       st_TipoHora1: Tipo de Hora. Se supone que seria la Nocturna No aprobada. Este tipo de hora debe ser autorizable y ademas
'                     debe tener configurado el tipo de hora que genera cuando se autorice.
'       st_ListaTH  : Lista de tipos de horas. Seria la lista de horas que aprobarian a las Nocturnas
'                     (en principio serian las normales y las horas extras que no sean autorizables).
'   Funcionalidad:
'       Permite aprobar las horas nocturnas no autorizadas que se generaron por Hs extras no autorizadas.
'       Lo que hace es revisar si las extras fueron aprobadas y en consecuencia aprueba las Nocturnas también.
'   Autor: FGZ
'   Fecha: 29/05/2009
'   Ultima modificacion:
' ------------------------------------------------------------------------------------------------------------------------
Dim Opcion  As Integer
Dim ListaTH As String
Dim thNocturna As Long
Dim NocAut As Long
Dim NocNoAut As Long

Dim Cant_AP As Single
Dim Cant_Resto As Single
Dim Cant_Extra As Single
Dim Cant_Noc As Single

Dim RecargarNocturnas As Boolean

Dim rs As New ADODB.Recordset
Dim rsAD As New ADODB.Recordset
Dim rsTH As New ADODB.Recordset
Dim rsAP As New ADODB.Recordset
'---------------------------------
Dim TotHorHHMM As String

   
    Call SetearParametrosPolitica(Detalle, ok)

    Opcion = st_Opcion  'Version de la politica
    thNocturna = st_TipoHora1 'Tipo de Hora Nocturna No aprobada
    ListaTH = st_ListaTH 'Lista de horas que aprobarian a las Nocturnas (en principio serian las normales)
    If depurar Then
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Version: " & Opcion
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Hora Nocturna: " & thNocturna
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Lista de Tipos de hora que aprueban: " & ListaTH
    End If
   
    'Busco cual es el tipo de hora para las nocturnas aprobadas
    StrSql = "SELECT thautpor,thdesautpor FROM tiphora WHERE thnro = " & thNocturna
    OpenRecordset StrSql, rsTH
    If Not rsTH.EOF Then
        If Not EsNulo(rsTH!thautpor) Then
            NocAut = rsTH!thautpor
        End If
        If Not EsNulo(rsTH!thdesautpor) Then
            NocNoAut = rsTH!thdesautpor
        End If
        If depurar Then
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Nocturna Autorizada: " & rsTH!thautpor
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Nocturna No Autorizada: " & rsTH!thdesautpor
        End If
        If NocAut = 0 Or NocNoAut = 0 Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No está configurada la autorizacion de la Hora Nocturna."
                Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No se ejecutará la política."
            End If
            Exit Sub
        End If
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No se encontró la configuracion del tipo de hora Nocturna."
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No se ejecutará la política."
        End If
        Exit Sub
    End If
    
    
    
    'Busco los th que aprueban
    StrSql = " SELECT * FROM gti_acumdiario "
    StrSql = StrSql & " WHERE ternro = " & p_ternro
    StrSql = StrSql & " AND adfecha = " & ConvFecha(p_fecha)
    StrSql = StrSql & " AND thnro IN (" & ListaTH & ")"
    StrSql = StrSql & " ORDER BY thnro"
    OpenRecordset StrSql, rsAP
    Do While Not rsAP.EOF
        Cant_Extra = rsAP!adcanthoras
            
        'Buscar los tipos de hora Nocturnas
        StrSql = " SELECT * FROM gti_acumdiario "
        StrSql = StrSql & " WHERE ternro = " & p_ternro
        StrSql = StrSql & " AND adfecha = " & ConvFecha(p_fecha)
        StrSql = StrSql & " AND thnro = " & thNocturna
        OpenRecordset StrSql, rs
        If rs.EOF Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "No hay hs Nocturnas no autorizadas generadas"
            End If
        End If
        RecargarNocturnas = False
        Do While Not rs.EOF And Not RecargarNocturnas
            'Por cada hora nocturna encontrada buscar si hay extras autorizadas
            Cant_Noc = rs!adcanthoras
            
            If Cant_Extra >= Cant_Noc Then
                'Se aprobó la totalidad de las nocturnas, cambio el tipo de hora
                
                'Busco si existe el tip de hora autorizada
                StrSql = "SELECT * FROM gti_acumdiario"
                StrSql = StrSql & " WHERE ternro = " & rs!Ternro
                StrSql = StrSql & " and thnro = " & NocAut
                StrSql = StrSql & " and adfecha = " & ConvFecha(p_fecha)
                OpenRecordset StrSql, rsAD
                If rsAD.EOF Then
                    'RecargarNocturnas = True
                    StrSql = "UPDATE gti_acumdiario SET thnro = " & NocAut
                    StrSql = StrSql & " WHERE ternro = " & rs!Ternro
                    StrSql = StrSql & " AND adfecha = " & ConvFecha(rs!adfecha)
                    StrSql = StrSql & " AND thnro = " & rs!thnro
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    'Borro las no aprobadas y actualizo las aprobadas
                    StrSql = "DELETE gti_acumdiario "
                    StrSql = StrSql & " WHERE ternro = " & rs!Ternro
                    StrSql = StrSql & " AND adfecha = " & ConvFecha(p_fecha)
                    StrSql = StrSql & " AND thnro = " & NocNoAut
                    objConn.Execute StrSql, , adExecuteNoRecords
                
                    TotHorHHMM = CHoras(rsAD!adcanthoras + Cant_Noc, 60)
                    
                    StrSql = "UPDATE gti_acumdiario SET adcanthoras = adcanthoras + " & Cant_Noc
                    StrSql = StrSql & " , horas = " & TotHorHHMM
                    StrSql = StrSql & " WHERE ternro = " & rsAD!Ternro
                    StrSql = StrSql & " AND adfecha = " & ConvFecha(rsAD!adfecha)
                    StrSql = StrSql & " AND thnro = " & rsAD!thnro
                    objConn.Execute StrSql, , adExecuteNoRecords
                
                End If
            Else
                'Se aprobó parcialmente las nocturnas, actualizo la cantidad restante
                '   e inserto la cantidad aprobada
                Cant_Resto = Cant_Noc - Cant_Extra
                Cant_AP = Cant_Extra
                
                'Actualizo lo que queda sin autorizar
                RecargarNocturnas = True
                TotHorHHMM = CHoras(Cant_Resto, 60)
                
                StrSql = "UPDATE gti_acumdiario SET adcanthoras = " & Cant_Resto
                StrSql = StrSql & " , horas = " & TotHorHHMM
                StrSql = StrSql & " WHERE ternro = " & rs!Ternro
                StrSql = StrSql & " AND adfecha = " & ConvFecha(rs!adfecha)
                StrSql = StrSql & " AND thnro = " & rs!thnro
                objConn.Execute StrSql, , adExecuteNoRecords
            
            
                'Inserto las autorizadas
                'Busco si existe el tip de hora autorizada
                StrSql = "SELECT * FROM gti_acumdiario"
                StrSql = StrSql & " WHERE ternro = " & rs!Ternro
                StrSql = StrSql & " and thnro = " & NocAut
                StrSql = StrSql & " and adfecha = " & ConvFecha(p_fecha)
                OpenRecordset StrSql, rsAD
                If rsAD.EOF Then
                    TotHorHHMM = CHoras(Cant_AP, 60)
                    StrSql = "INSERT INTO gti_acumdiario (ternro,thnro,adfecha,horas,adcanthoras)"
                    StrSql = StrSql & " VALUES ("
                    StrSql = StrSql & p_ternro
                    StrSql = StrSql & "," & NocAut
                    StrSql = StrSql & "," & ConvFecha(p_fecha)
                    StrSql = StrSql & "," & TotHorHHMM
                    StrSql = StrSql & "," & Cant_AP
                    StrSql = StrSql & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    TotHorHHMM = CHoras(rsAD!adcanthoras + Cant_AP, 60)
                    
                    StrSql = "UPDATE gti_acumdiario SET adcanthoras = adcanthoras + " & Cant_AP
                    StrSql = StrSql & " , horas = " & TotHorHHMM
                    StrSql = StrSql & " WHERE ternro = " & rsAD!Ternro
                    StrSql = StrSql & " AND adfecha = " & ConvFecha(rsAD!adfecha)
                    StrSql = StrSql & " AND thnro = " & rsAD!thnro
                    objConn.Execute StrSql, , adExecuteNoRecords
                End If
            End If
            
            If RecargarNocturnas Then
                'Recargo el rs
                StrSql = " SELECT * FROM gti_acumdiario "
                StrSql = StrSql & " WHERE ternro = " & p_ternro
                StrSql = StrSql & " AND adfecha = " & ConvFecha(p_fecha)
                StrSql = StrSql & " AND thnro = " & thNocturna
                OpenRecordset StrSql, rs
            Else
                'Busco el siguiente registro
                rs.MoveNext
            End If
        Loop
    
        rsAP.MoveNext
    Loop
    
   
    Select Case Opcion
    Case 1: 'No borra las Nocturnas no autorizadas (Estandar)
        
    Case 2: 'borra las Nocturnas no autorizadas
        StrSql = "DELETE gti_acumdiario "
        StrSql = StrSql & " WHERE ternro = " & p_ternro
        StrSql = StrSql & " AND adfecha = " & ConvFecha(p_fecha)
        StrSql = StrSql & " AND thnro = " & NocNoAut
        objConn.Execute StrSql, , adExecuteNoRecords
        
    Case Else:  'Version inexistente
        If depurar Then
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Version inexistente. " & Opcion
        End If
    End Select

'Cierro y libero
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
    If rsAP.State = adStateOpen Then rsAP.Close
    Set rsAP = Nothing
    If rsTH.State = adStateOpen Then rsTH.Close
    Set rsTH = Nothing
    If rsAD.State = adStateOpen Then rsAD.Close
    Set rsAD = Nothing
End Sub



Public Sub Politica2000MAzul(NroProceso As Long)
' --------------------------------------------------------------
' Descripcion: Exportación de Novedades de Liq.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' --------------------------------------------------------------

Dim FechaDesde As Date
Dim FechaHasta As Date
Dim nroLote As Long
Dim rsAD As New ADODB.Recordset
Dim RsAsis As New ADODB.Recordset
Dim objrs_pro As New ADODB.Recordset
Dim objrs_estr As New ADODB.Recordset
Dim strcmdLine As String
Dim FechaTemp As Date
Dim FDesde As Date
Dim FHasta As Date
Dim Cdias As Integer

Dim Cantidad As Integer
Dim Cod_emp As Long

Dim Archivo As String
Dim pos As Integer
Dim freg

Dim pos1 As Integer
Dim pos2 As Integer

Dim Int_Valor As Integer
Dim Dec_Valor As String

    StrSql = " SELECT gpadesde,gpahasta,Batch_Procacum.gpanro,batch_proceso.bpronro " & _
             " From batch_proceso " & _
             " INNER JOIN Batch_Procacum ON Batch_Procacum.bpronro = batch_proceso.bpronro " & _
             " INNER JOIN gti_Procacum ON Batch_Procacum.gpanro = gti_Procacum.gpanro " & _
             " Where batch_proceso.bpronro = " & NroProceso
    
    OpenRecordset StrSql, objrs_pro
    

    If Not objrs_pro.EOF Then
        FechaDesde = objrs_pro!gpadesde
        FechaHasta = objrs_pro!gpahasta
    End If
    
    Archivo = "c:\rhprox2\algoliq\" & NroProceso & " - Exportacion NOV a LIQ " & Format(FechaDesde, "DD-MM-YYYY") & " al " & Format(FechaHasta, "DD-MM-YYYY") & ".txt"

    Set fs = CreateObject("Scripting.FileSystemObject")
    Set freg = fs.CreateTextFile(Archivo, True)
    
    MyBeginTrans
   
Cod_emp = 0
Cantidad = 4

Do While Not objrs_pro.EOF
   
    StrSql = " SELECT concepto.ConcCod,concepto.tconnro,concepto.concnro,empleado.ternro,empleado.empleg,gti_acunov.acnovvalor,gti_acunov.gpanro,gti_acunov.acnovfecaprob FROM gti_procacum " & _
             " INNER JOIN gti_acunov ON gti_acunov.gpanro = gti_procacum.gpanro " & _
             " INNER JOIN empleado ON empleado.ternro = gti_acunov.ternro " & _
             " INNER JOIN Concepto ON Concepto.concnro = gti_acunov.concnro " & _
             " WHERE (gti_acunov.gpanro = " & objrs_pro!gpanro & " )" & _
             " ORDER BY concepto.conccod "
    OpenRecordset StrSql, objRs
   
    Do While Not objRs.EOF
    
        If objRs!empleg <> Cod_emp Then
         Cantidad = 5
         Cod_emp = objRs!empleg
        Else
         Cantidad = Cantidad + 1
        End If
        
        StrSql = " SELECT estrcodext FROM estruc_actual "
        StrSql = StrSql & " INNER JOIN estructura ON estructura.estrnro = estruc_actual.estrnro WHERE estruc_actual.tenro = 2 and estruc_actual.ternro = " & objRs!Ternro
        OpenRecordset StrSql, objrs_estr
    
        Int_Valor = Int(objRs!acnovvalor)
        Dec_Valor = (objRs!acnovvalor - Int(objRs!acnovvalor)) * 100
        
        freg.writeline Chr(34) & _
                       Format(objRs!empleg, "00000") & _
                       Format(objRs!conccod, "000") & _
                       Format(Int_Valor, "0000000") & _
                       Format(Dec_Valor, "00") & _
                       "000000000" & _
                       Format(Cantidad, "0") & _
                       Format(objRs!acnovfecaprob, "yyyymmdd") & _
                       Chr(34)
        
        objRs.MoveNext
        
    Loop
    
  objrs_pro.MoveNext
Loop
    MyCommitTrans
End Sub


Public Sub Politica850()
' --------------------------------------------------------------
' Descripcion: Habilita el uso de Excedente de horas normales.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' --------------------------------------------------------------

    usaExcedentesHorasNormales = True

End Sub


Public Sub Politica891(Fecha As Date, NroTer As Long, HDesde As String, FDesde As Date, HHasta As String, FHasta As Date, Nro_Turno As Long, Nro_Dia As Integer, P_Asignacion As Boolean, esFeriado As Boolean, ByVal subn As Long, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Ajustes de AD.
' Autor: FGZ - 08/01/2007
' Ultima modificacion:
' --------------------------------------------------------------
Dim rs As New ADODB.Recordset
Dim StrSql_Ex As String

Dim Opcion As String
Dim Lista_Q As String

    Call SetearParametrosPolitica(Detalle, ok)

    Opcion = st_Opcion
    Lista_Q = st_ListaTH

    On Error GoTo ME_Pol891
    
    Select Case Opcion
    Case 1:
        StrSql = "SELECT qessql FROM qry_ext_sql"
        StrSql = StrSql & " WHERE qesnro IN (" & Lista_Q & ")"
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "Querys......"
            End If
        Else
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "No hay Querys para ejecutar"
            End If
        End If
        Do While Not rs.EOF
            If depurar Then
                Flog.writeline
                Flog.writeline Espacios(Tabulador * 3) & "  Query a ejecutar: " & rs!qessql
            End If
            
            'Reemplazo los parametros
            StrSql_Ex = ReemplazarCampos(rs!qessql)
            
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  Query .........: " & StrSql_Ex
            End If
            objConn.Execute StrSql_Ex, Reg_Afected, adExecuteNoRecords
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  registros afectados: " & Reg_Afected
            End If
        
            rs.MoveNext
        Loop
    Case Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  Version Inexistente " & Opcion
        End If
    End Select
    
Final:
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
Exit Sub

ME_Pol891:
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 0) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 0) & "Error en Politica 891. "
    Flog.writeline Espacios(Tabulador * 0) & Err.Description
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 0) & "SQL Ejecutado: " & StrSql
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 0) & "**********************************************************"
    Flog.writeline
    GoTo Final
End Sub



Public Sub Politica892(Fecha As Date, NroTer As Long, HDesde As String, FDesde As Date, HHasta As String, FHasta As Date, Nro_Turno As Long, Nro_Dia As Integer, P_Asignacion As Boolean, esFeriado As Boolean, ByVal subn As Long, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Ajustes de AP.
' Autor: FGZ - 08/01/2007
' Ultima modificacion:
' --------------------------------------------------------------
Dim rs As New ADODB.Recordset
Dim StrSql_Ex As String

Dim Opcion As String
Dim Lista_Q As String

    Call SetearParametrosPolitica(Detalle, ok)

    Opcion = st_Opcion
    Lista_Q = st_ListaTH

    On Error GoTo ME_Pol892
    
    Select Case Opcion
    Case 1:
        StrSql = "SELECT qessql FROM qry_ext_sql"
        StrSql = StrSql & " WHERE qesnro IN (" & Lista_Q & ")"
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "Querys......"
            End If
        Else
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "No hay Querys para ejecutar"
            End If
        End If
        Do While Not rs.EOF
            If depurar Then
                Flog.writeline
                Flog.writeline Espacios(Tabulador * 3) & "  Query a ejecutar: " & rs!qessql
            End If
            
            'Reemplazo los parametros
            StrSql_Ex = ReemplazarCampos(rs!qessql)
            
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  Query .........: " & StrSql_Ex
            End If
            objConn.Execute StrSql_Ex, Reg_Afected, adExecuteNoRecords
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  registros afectados: " & Reg_Afected
            End If
        
            rs.MoveNext
        Loop
    Case Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  Version Inexistente " & Opcion
        End If
    End Select

    
Final:
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
Exit Sub

ME_Pol892:
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 0) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 0) & "Error en Politica 892. "
    Flog.writeline Espacios(Tabulador * 0) & Err.Description
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 0) & "SQL Ejecutado: " & StrSql
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 0) & "**********************************************************"
    Flog.writeline
    GoTo Final
End Sub

Public Sub Politica893(Fecha As Date, NroTer As Long, HDesde As String, FDesde As Date, HHasta As String, FHasta As Date, Nro_Turno As Long, Nro_Dia As Integer, P_Asignacion As Boolean, esFeriado As Boolean, ByVal subn As Long, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Ajustes de Horas Domingo en AP (CUSTOM SMT).
' Autor: FGZ - 18/01/2007
' Ultima modificacion:
' --------------------------------------------------------------
Dim rs As New ADODB.Recordset
Dim rs_V As New ADODB.Recordset

Dim Opcion As String
Dim Lista_TH As String
Dim Lista_F1 As String
Dim Lista_F2 As String
Dim Lista_F3 As String
Dim Escala As String
Dim TipoHora As Long
Dim Reg_Afected
Dim Nro_Cab As Long
Dim Nro_Pro As Long

Dim HsAcumuladas As Double
Dim HsaValidar As Double
Dim HsaDescontar As Double



    Call SetearParametrosPolitica(Detalle, ok)

    Opcion = st_Opcion
    TipoHora = st_TipoHora1
    Lista_TH = st_ListaTH
    Lista_F1 = st_ListaF1
    Lista_F2 = st_ListaF2
    Lista_F3 = st_ListaF3
    Escala = st_Escala
    Nro_Cab = CabeceraAP
    Nro_Pro = ProcesoAP


    Select Case Opcion
    Case 1:
        'SELECT e1.empleg Legajo, MAX(e1.terape + ', ' + e1.ternom) APyN, MAX(e1.ternro) Tercero,
        '    MAX(ap.gpanro) Proceso, MAX(ap.gpadesabr) Descripción,
        '    MAX(ap.gpadesde) FDesde, MAX(ap.gpahasta) FHasta, SUM(d.dgticant) Horas
        'From gti_procacum ap (nolock) INNER JOIN gti_cab c (nolock)
        '        ON ap.gpanro = c.gpanro INNER JOIN gti_det d (nolock)
        '        ON c.cgtinro = d.cgtinro and c.gpanro = @Proceso INNER JOIN tiphora b
        '        ON d.thnro = b.thnro INNER JOIN
        '
        '    (SELECT e.empleg, e.ternro, e .ternom, e .terape FROM  his_estructura hs(nolock) INNER JOIN estructura es(nolock)
        '            ON  hs.tenro = 32 and hs.estrnro = es.estrnro AND
        '            (hs.htethasta IS NULL) and es.estrnro = 825 INNER JOIN
        '                empleado e (nolock) ON hs.ternro = e .ternro) e1
        '    ON c.ternro = e1.ternro INNER JOIN
        '        (SELECT e .empleg, e.ternro, e .ternom, e .terape FROM  his_estructura hs(nolock) INNER JOIN estructura es(nolock)
        '            ON  hs.tenro = 8 and hs.estrnro = es.estrnro AND
        '            (hs.htethasta IS NULL) and
        '            es.estrnro in (593, 594, 595, 597, 598, 599, 600, 601, 602, 609, 650, 655, 656) INNER JOIN
        '                empleado e (nolock) ON hs.ternro = e .ternro) e2
        '    ON e1.empleg = e2.empleg
        'where ap.gpanro = @Proceso and d.thnro in (3, 78, 285, 286, 291)
        'group by e1.empleg

        StrSql = "SELECT SUM(d.dgticant) Horas "
        StrSql = StrSql & " FROM gti_procacum ap "
        StrSql = StrSql & " INNER JOIN gti_cab c ON ap.gpanro = c.gpanro "
        StrSql = StrSql & " INNER JOIN gti_det d ON c.cgtinro = d.cgtinro AND c.gpanro = " & Nro_Pro & " AND c.cgtinro = " & Nro_Cab
        StrSql = StrSql & " INNER JOIN tiphora b ON d.thnro = b.thnro "
        If Not EsNulo(Lista_F1) Then
            StrSql = StrSql & " INNER JOIN his_estructura he1 ON c.ternro = he1.ternro AND (he1.htethasta IS NULL) AND he1.estrnro IN (" & Lista_F1 & ")"
        End If
        If Not EsNulo(Lista_F2) Then
            StrSql = StrSql & " INNER JOIN his_estructura he2 ON c.ternro = he2.ternro AND (he2.htethasta IS NULL) AND he2.estrnro IN (" & Lista_F2 & ")"
        End If
        If Not EsNulo(Lista_F3) Then
            StrSql = StrSql & " INNER JOIN his_estructura he3 ON c.ternro = he3.ternro AND (he3.htethasta IS NULL) AND he3.estrnro IN (" & Lista_F3 & ")"
        End If
        StrSql = StrSql & " WHERE ap.gpanro = " & Nro_Pro & " AND c.cgtinro = " & Nro_Cab
        StrSql = StrSql & " AND d.thnro IN (" & Lista_TH & ")" 'originalmente (3, 78, 285, 286, 291)
        OpenRecordset StrSql, rs
        If rs.EOF Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "No hay AP..."
            End If
        End If
        Do While Not rs.EOF
            If rs!Horas > 120 Then
                HsAcumuladas = rs!Horas
                HsaValidar = 0
                HsaDescontar = 0
                Call bus_EscalaAjuste(Escala, CLng(HsAcumuladas), HsaValidar, HsaDescontar)

                If HsaValidar <> 0 Then
                    'select ap.gpanro, ap.gpadesabr, ap.gpadesde, ap.gpahasta,
                    'c.cgtinro, @Legajo Legajo, c.ternro, @Horas Horas, d.thnro, d.dgticant
                    'from gti_procacum ap (nolock) INNER JOIN gti_cab c (nolock)
                    'ON ap.gpanro = c.gpanro and c.ternro = @Tercero INNER JOIN gti_det d (nolock)
                    'ON c.cgtinro = d.cgtinro and c.gpanro = @Proceso and thnro = 285 and d.dgticant >= 8

                    StrSql = "SELECT ap.gpanro, ap.gpadesabr, ap.gpadesde, ap.gpahasta,"
                    StrSql = StrSql & " c.cgtinro, c.ternro, d.thnro, d.dgticant "
                    StrSql = StrSql & " FROM gti_procacum ap "
                    StrSql = StrSql & " INNER JOIN gti_cab c ON ap.gpanro = c.gpanro AND c.cgtinro = " & Nro_Cab
                    StrSql = StrSql & " INNER JOIN gti_det d ON c.cgtinro = d.cgtinro AND c.gpanro = " & Nro_Pro
                    StrSql = StrSql & " WHERE thnro = " & TipoHora
                    StrSql = StrSql & " AND d.dgticant >= " & HsaValidar
                    OpenRecordset StrSql, rs_V
                    If rs_V.EOF Then
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & "No tiene mas de " & HsaValidar & " de tipo " & TipoHora & ". No se actualizará."
                        End If
                        HsaDescontar = 0
                    End If
                End If
                If HsaDescontar <> 0 Then
                    'Update gti_det
                    'Set dgticant = dgticant - 8
                    'from (select d.cgtinro Numero from gti_procacum ap (nolock) INNER JOIN gti_cab c (nolock)
                    '    ON ap.gpanro = c.gpanro and c.ternro = @Tercero INNER JOIN gti_det d (nolock)
                    '    ON c.cgtinro = d.cgtinro and c.gpanro = @Proceso and thnro = 285 and d.dgticant >= 8) X
                    'Where cgtinro = X.Numero And thnro = 285
                    StrSql = "UPDATE gti_det SET dgticant = dgticant - " & HsaDescontar
                    StrSql = StrSql & " WHERE cgtinro =" & Nro_Cab
                    StrSql = StrSql & " AND thnro = " & TipoHora
                    objConn.Execute StrSql, Reg_Afected, adExecuteNoRecords
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & "  Query .........: " & StrSql
                    End If
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & "  registros afectados: " & Reg_Afected
                    End If
                End If
            Else
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "No supera la cantidad de Horas tope(120)"
                End If
            End If
            rs.MoveNext
        Loop

    Case Else:
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "Version inexistente " & Opcion
        End If
    End Select


    'cierro y libero
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
    If rs_V.State = adStateOpen Then rs_V.Close
    Set rs_V = Nothing
End Sub




Public Sub Politica900(NroProceso As Long, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Politica que genera las novedades de gti.
' Autor: ?
' Ultima modificacion: FGZ - 17/05/2007 - Hago la depuracion de los procesos masivamente en lugar de hacerlo por legajo
' --------------------------------------------------------------
Dim objRs As New ADODB.Recordset
Dim rs_Procesos As New ADODB.Recordset
Dim Progreso As Single
Dim CEmpleadosAProc As Integer
Dim IncPorc As Single
Dim Lista_Procesos As String

    
    StrSql = " SELECT bprcfecdesde,bprcfechasta,gti_cab.gpanro,gti_cab.cgtinro,batch_proceso.bpronro,gti_procacum.gtprocnro,gti_cab.ternro FROM batch_proceso "
    StrSql = StrSql & " INNER JOIN batch_procacum ON batch_procacum.bpronro = batch_proceso.bpronro "
    StrSql = StrSql & " INNER JOIN gti_cab ON  gti_cab.gpanro = batch_procacum.gpanro "
    StrSql = StrSql & " INNER JOIN gti_procacum ON batch_procacum.gpanro = gti_procacum.gpanro "
    StrSql = StrSql & " WHERE batch_proceso.bpronro = " & NroProceso
    OpenRecordset StrSql, objRs
    
    'Seteo el incremento de progreso
    If objRs.EOF Then
        CEmpleadosAProc = 1
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "No hay nada para procesar. SQL: " & StrSql
        End If
    Else
        If objRs.RecordCount = 0 Then
            CEmpleadosAProc = 1
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "No hay nada para procesar."
            End If
        Else
            CEmpleadosAProc = objRs.RecordCount
        End If
    End If
    
    'FGZ - 17/05/2007 -----------------  Hago la depuracion de los procesos masivamente en lugar de hacerlo por legajo
    StrSql = " SELECT distinct gti_procacum.gpanro FROM batch_proceso " & _
            " INNER JOIN batch_procacum ON batch_procacum.bpronro = batch_proceso.bpronro " & _
            " INNER JOIN gti_cab ON  gti_cab.gpanro = batch_procacum.gpanro " & _
            " INNER JOIN gti_procacum ON batch_procacum.gpanro = gti_procacum.gpanro " & _
            " WHERE batch_proceso.bpronro = " & NroProceso
    OpenRecordset StrSql, rs_Procesos
    
    Lista_Procesos = "0"
    Do While Not rs_Procesos.EOF
        Lista_Procesos = Lista_Procesos & "," & rs_Procesos!gpanro
        rs_Procesos.MoveNext
    Loop
    
    'EAM- (5.06) Se elimina el detalle del desgloce de las novedades
    StrSql = "DELETE FROM gti_acunov_dist WHERE acnovnro IN (SELECT acnovnro FROM gti_acunov WHERE gpanro IN ( " & Lista_Procesos & "))"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    StrSql = "DELETE FROM gti_acunov WHERE gpanro IN ( " & Lista_Procesos & ")"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Se han depurado las Novedades de GTI."
    End If
    
    
    'FGZ - 17/05/2007 ----------------- Hago la depuracion de los procesos masivamente en lugar de hacerlo por legajo -----
    
    IncPorc = (100 / CEmpleadosAProc)
    Progreso = 0
    Do While Not objRs.EOF
        
        Select Case subn
        Case 1: 'Estandar
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Version Estandar"
            End If
            Call Novedades_GTI_Standar(objRs!Ternro, objRs!gpanro)
        Case 2: 'Expofrut
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Version Expofrut"
            End If
            Call Novedades_GTI_Expo(objRs!Ternro, objRs!gpanro)
        Case 3: 'Moño Azul
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Version Moño Azul"
            End If
            Call Novedades_GTI_MAZUL(objRs!Ternro, objRs!gpanro)
        Case 4: 'plansnavi
            Flog.writeline Espacios(Tabulador * 2) & "Version Plasnavi. No implementada."
            'Call Novedades_GTI_MAZUL(objRs!Ternro, objRs!gpanro)
        Case 5: 'SGS - CAS-22808 - SGS - Distribución Contable
            Flog.writeline Espacios(Tabulador * 2) & "Version SGS. Genera una novedad por cada desgloce del Acumulado Diarios (AD)."
            Call Novedades_GTI_Desglose(objRs!Ternro, objRs!gpanro)
        End Select
        
        ' Actualizo el progreso
        Progreso = Progreso + IncPorc
        StrSql = "UPDATE batch_proceso SET bprcprogreso = " & CLng(Progreso) & " WHERE bpronro = " & NroProceso
        'objConn.Execute StrSql, , adExecuteNoRecords
        objConnProgreso.Execute StrSql, , adExecuteNoRecords
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Progreso actualizado. "
        End If
        
        objRs.MoveNext
    Loop

If objRs.State = adStateOpen Then objRs.Close
Set objRs = Nothing
End Sub

Private Sub Novedades_GTI_Expo(NroTer As Long, nroproc As Long)
' --------------------------------------------------------------
' Descripcion: Genera las novedades de gti, CUSTOM para EXPOFRUT.
' Autor: ?
' Ultima modificacion: FGZ - 17/05/2007 - pasé la depuración un nivel mas arriba
' Ultima modificacion: FGZ - 30/03/2010 - ahora se divide por la cantidad de hs obligatoria del subturno
' --------------------------------------------------------------
Dim Desde As Date
Dim Hasta As Date
Dim Horas As Single
Dim HorasDiv As Single
Dim FechaHasta As Date
Dim nrocab As Long

Dim rs_Dia As New ADODB.Recordset
Dim objRs As New ADODB.Recordset
Dim objrsemp As New ADODB.Recordset
Dim objrsanov As New ADODB.Recordset

    StrSql = " SELECT * FROM gti_procacum WHERE gpanro = " & nroproc
    OpenRecordset StrSql, objRs
    
    If objRs.EOF Then
        Exit Sub
    Else
        FechaHasta = objRs!gpahasta
        
        StrSql = " SELECT * FROM gti_cab WHERE ternro = " & NroTer & " and gpanro = " & nroproc
        OpenRecordset StrSql, objRs
        
        nrocab = objRs!cgtinro
        
        StrSql = " SELECT * FROM empleado WHERE ternro = " & NroTer
        OpenRecordset StrSql, objrsemp
        
        
' Hay que filtrar por la estructura del empleado, ya que la relacion entre
' los tipos de horas y los conceptos, puede ser por estructura

'AIB - 26/3/2003
'La relación no necesariamente es por estructura

'        StrSql = " SELECT gti_det.dgticant,tiph_con.thsuma,tiph_con.concnro,tiph_con.tpanro " & _
                 " FROM gti_det " & _
                 " INNER JOIN tiph_con ON tiph_con.thnro = gti_det.thnro " & _
                 " INNER JOIN estruc_actual ON estruc_actual.ternro = " & nroter & _
                 " AND estruc_actual.tenro = tiph_con.tenro AND estruc_actual.estrnro = tiph_con.estrnro " & _
                 " WHERE cgtinro = " & nrocab & _
                 " ORDER BY tiph_con.concnro "
        ' FGZ 04/08/2003
        ' cambio estruc_actual por his_estructura
        StrSql = " SELECT gti_det.dgticant,tiph_con.thsuma,tiph_con.concnro,tiph_con.tpanro " & _
            " FROM gti_det " & _
            " INNER JOIN tiph_con ON tiph_con.thnro = gti_det.thnro " & _
            " INNER JOIN his_estructura ON his_estructura.ternro = " & NroTer & _
            " AND his_estructura.tenro = tiph_con.tenro AND his_estructura.estrnro = tiph_con.estrnro " & _
            " WHERE cgtinro = " & nrocab & " AND his_estructura.htethasta IS NULL " & _
            " UNION " & _
            " SELECT gti_det.dgticant,tiph_con.thsuma,tiph_con.concnro,tiph_con.tpanro " & _
            " FROM gti_det " & _
            " INNER JOIN tiph_con ON tiph_con.thnro = gti_det.thnro " & _
            " WHERE cgtinro = " & nrocab & _
            " AND tiph_con.tenro is null "
' Hay que filtrar por la estructura del empleado, ya que la relacion entre
' los tipos de horas y los conceptos, puede ser por estructura
        
        OpenRecordset StrSql, objRs
        
        Do While Not objRs.EOF
        
            If objRs!thsuma Then
                Horas = Horas + objRs!dgticant
            Else
                Horas = Horas + (-objRs!dgticant)
            End If
            
            'Informacion en Cantidad de Días
            'FGZ - 30/03/2010 --------------------------------------------------------------------------
            'Ahora la idea es dividir por la cantidad de horas del primer dia del subturno del empleado
           
           
           'Buscar el turno
           'Buscar el subturno
           'buscar el dia de orden 1 para el subturno
           
            Call BuscarHoras_1erDiaST(NroTer, FechaHasta, HorasDiv)
            
            'If objRs!tpanro = 161 Then Horas = Round(Horas / 8, 2)
            If objRs!Tpanro = 161 Then Horas = Round(Horas / HorasDiv, 2)
            
            'FGZ - 30/03/2010 --------------------------------------------------------------------------
            
            StrSql = "SELECT * FROM gti_acunov WHERE gti_acunov.ternro = " & NroTer & _
                     "AND gti_acunov.concnro = " & objRs!Concnro & _
                     "AND gti_acunov.tpanro = " & objRs!Tpanro & _
                     "AND gti_acunov.gpanro = " & nroproc
            OpenRecordset StrSql, objrsanov, adLockOptimistic
            
            If objrsanov.EOF Then
                StrSql = " INSERT INTO  gti_acunov " & _
                         " (ternro,concnro,tpanro,gpanro,acnovvalor) VALUES " & _
                         " ( " & NroTer & "," & objRs!Concnro & "," & objRs!Tpanro & "," & nroproc & "," & Horas & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
            Else
               objrsanov.Update "acnovvalor", Round(objrsanov!acnovvalor + Horas, 2)
            End If
        
            objRs.MoveNext
            Horas = 0
        Loop
    End If
End Sub

Private Sub Novedades_GTI_Expo_old(NroTer As Long, nroproc As Long)
' --------------------------------------------------------------
' Descripcion: Genera las novedades de gti, CUSTOM para EXPOFRUT.
' Autor: ?
' Ultima modificacion: FGZ - 17/05/2007 - pasé la depuración un nivel mas arriba
' --------------------------------------------------------------
Dim Desde As Date
Dim Hasta As Date
Dim Horas As Single
Dim HorasDiv As Single

Dim nrocab As Long

Dim rs_Dia As New ADODB.Recordset
Dim objRs As New ADODB.Recordset
Dim objrsemp As New ADODB.Recordset
Dim objrsanov As New ADODB.Recordset

    StrSql = " SELECT * FROM gti_procacum WHERE gpanro = " & nroproc
    OpenRecordset StrSql, objRs
    
    If objRs.EOF Then
        Exit Sub
    Else
    
        StrSql = " SELECT * FROM gti_cab WHERE ternro = " & NroTer & " and gpanro = " & nroproc
        OpenRecordset StrSql, objRs
        
        nrocab = objRs!cgtinro
        
'        'FGZ - 17/05/2007 - pasé la depuración un nivel mas arriba
'        StrSql = " DELETE FROM gti_acunov WHERE ternro = " & NroTer & " and gpanro = " & nroproc
'        objConn.Execute StrSql, , adExecuteNoRecords
'        'FGZ - 17/05/2007 - pasé la depuración un nivel mas arriba

        StrSql = " SELECT * FROM empleado WHERE ternro = " & NroTer
        OpenRecordset StrSql, objrsemp
        
        
' Hay que filtrar por la estructura del empleado, ya que la relacion entre
' los tipos de horas y los conceptos, puede ser por estructura

'AIB - 26/3/2003
'La relación no necesariamente es por estructura

'        StrSql = " SELECT gti_det.dgticant,tiph_con.thsuma,tiph_con.concnro,tiph_con.tpanro " & _
                 " FROM gti_det " & _
                 " INNER JOIN tiph_con ON tiph_con.thnro = gti_det.thnro " & _
                 " INNER JOIN estruc_actual ON estruc_actual.ternro = " & nroter & _
                 " AND estruc_actual.tenro = tiph_con.tenro AND estruc_actual.estrnro = tiph_con.estrnro " & _
                 " WHERE cgtinro = " & nrocab & _
                 " ORDER BY tiph_con.concnro "
        ' FGZ 04/08/2003
        ' cambio estruc_actual por his_estructura
        StrSql = " SELECT gti_det.dgticant,tiph_con.thsuma,tiph_con.concnro,tiph_con.tpanro " & _
            " FROM gti_det " & _
            " INNER JOIN tiph_con ON tiph_con.thnro = gti_det.thnro " & _
            " INNER JOIN his_estructura ON his_estructura.ternro = " & NroTer & _
            " AND his_estructura.tenro = tiph_con.tenro AND his_estructura.estrnro = tiph_con.estrnro " & _
            " WHERE cgtinro = " & nrocab & " AND his_estructura.htethasta IS NULL " & _
            " UNION " & _
            " SELECT gti_det.dgticant,tiph_con.thsuma,tiph_con.concnro,tiph_con.tpanro " & _
            " FROM gti_det " & _
            " INNER JOIN tiph_con ON tiph_con.thnro = gti_det.thnro " & _
            " WHERE cgtinro = " & nrocab & _
            " AND tiph_con.tenro is null "
' Hay que filtrar por la estructura del empleado, ya que la relacion entre
' los tipos de horas y los conceptos, puede ser por estructura
        
        OpenRecordset StrSql, objRs
        
        Do While Not objRs.EOF
        
            If objRs!thsuma Then
        
                Horas = Horas + objRs!dgticant
            
            Else
                
                Horas = Horas + (-objRs!dgticant)
            
            End If
            
            'Informacion en Cantidad de Días
            
            If objRs!Tpanro = 161 Then Horas = Round(Horas / 8, 2)
            
            
            ' 30 Días Trabajados como Máximo
            
            
            'Premio Reduccion al Ausentismo
            
            'If (objRs!conccod = "911") And (objRs!dgticant < 5) Then
                
            '    horas = objRs!dgticant * 20
                
            'Else
            
            '    horas = 100
                
            'End If
            
            StrSql = "SELECT * FROM gti_acunov WHERE gti_acunov.ternro = " & NroTer & _
                     "AND gti_acunov.concnro = " & objRs!Concnro & _
                     "AND gti_acunov.tpanro = " & objRs!Tpanro & _
                     "AND gti_acunov.gpanro = " & nroproc
            
            OpenRecordset StrSql, objrsanov, adLockOptimistic
            
            If objrsanov.EOF Then
            
                StrSql = " INSERT INTO  gti_acunov " & _
                         " (ternro,concnro,tpanro,gpanro,acnovvalor) VALUES " & _
                         " ( " & NroTer & "," & objRs!Concnro & "," & objRs!Tpanro & "," & nroproc & "," & Horas & ")"
            
                objConn.Execute StrSql, , adExecuteNoRecords
            
            Else
            
               objrsanov.Update "acnovvalor", objrsanov!acnovvalor + Horas
                        
            End If
        
            objRs.MoveNext
            
            Horas = 0
            
        Loop
        
    
    End If
    
    
End Sub


Public Sub Politica2000RhproX2(ByVal NroProceso As Long)
' --------------------------------------------------------------
' Descripcion: Exportación de Novedades de Liq (si la novedad ya esta suma el valor que tiene + el gti_acunov).
' Autor: ' EPL
' Ultima modificacion: FGZ - 13/04/2004
' --------------------------------------------------------------
Dim FechaDesde As Date
Dim FechaHasta As Date
Dim objrs_pro As New ADODB.Recordset
Dim objRs As New ADODB.Recordset
Dim objCon As New ADODB.Recordset
Dim rs As New ADODB.Recordset
Dim Gnovnro
Dim inserto As Boolean

Dim Cant_Procesos As Long
Dim Progreso As Single
Dim IncPorc As Single
Dim Actualiza_Por_Proceso As Boolean

    StrSql = " SELECT gpadesde,gpahasta,Batch_Procacum.gpanro,batch_proceso.bpronro " & _
             " From batch_proceso " & _
             " INNER JOIN Batch_Procacum ON Batch_Procacum.bpronro = batch_proceso.bpronro " & _
             " INNER JOIN gti_Procacum ON Batch_Procacum.gpanro = gti_Procacum.gpanro " & _
             " Where batch_proceso.bpronro = " & NroProceso
    OpenRecordset StrSql, objrs_pro
    

    If Not objrs_pro.EOF Then
        FechaDesde = objrs_pro!gpadesde
        FechaHasta = objrs_pro!gpahasta
        
        cystipnro = 5
        If FIN_Firma_NovLiq Then
            cysfirusuario = User_Proceso
            cysfirautoriza = User_Proceso
            cysfirdestino = Firma_User_Destino
            cysfirfin = -1
            cysfiryaaut = -1
            cysfirrecha = 0
        Else
            cysfirusuario = User_Proceso
            cysfirautoriza = User_Proceso
            cysfirdestino = Firma_User_Destino
            cysfirfin = 0
            cysfiryaaut = 0
            cysfirrecha = 0
        End If
    End If
    
    'Seteo los valores de progreso
    Cant_Procesos = objrs_pro.RecordCount 'Cantidad de procesos
    If Cant_Procesos = 1 Then
        Actualiza_Por_Proceso = False
    Else
        Actualiza_Por_Proceso = True
    End If
    If Cant_Procesos = 0 Then Cant_Procesos = 1
    
    If Actualiza_Por_Proceso Then
        IncPorc = (95 / Cant_Procesos)
    End If
    Progreso = 0
    
    MyBeginTrans
    Do While Not objrs_pro.EOF
   
    StrSql = " SELECT concepto.ConcCod,concepto.tconnro,concepto.concnro,empleado.ternro,empleado.empleg,gti_acunov.acnovvalor,gti_acunov.gpanro,gti_acunov.acnovfecaprob, gti_acunov.tpanro " & _
         " FROM gti_procacum " & _
             " INNER JOIN gti_acunov ON gti_acunov.gpanro = gti_procacum.gpanro " & _
             " INNER JOIN empleado ON empleado.ternro = gti_acunov.ternro " & _
             " INNER JOIN Concepto ON Concepto.concnro = gti_acunov.concnro " & _
             " WHERE (gti_acunov.gpanro = " & objrs_pro!gpanro & " )" & _
             " ORDER BY concepto.conccod "
    OpenRecordset StrSql, objRs
   
   'Redefinicion del incremento del progreso
    If Not Actualiza_Por_Proceso Then
        Cant_Procesos = objRs.RecordCount
        If Cant_Procesos = 0 Then Cant_Procesos = 1
        IncPorc = (95 / Cant_Procesos)
    End If
    
    Do While Not objRs.EOF
        StrSql = " SELECT * FROM novemp WHERE novemp.empleado = " & objRs!Ternro & " AND "
        StrSql = StrSql & " novemp.concnro = " & objRs!Concnro & " AND novemp.tpanro = " & objRs!Tpanro
        OpenRecordset StrSql, objCon
    
        If objCon.EOF Then
            StrSql = " INSERT INTO novemp (concnro,tpanro, empleado, nevalor, nevigencia)"
            StrSql = StrSql & " VALUES (" & objRs!Concnro & "," & objRs!Tpanro & "," & objRs!Ternro & ","
            StrSql = StrSql & objRs!acnovvalor & ",0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            inserto = True
            Gnovnro = getLastIdentity(objConn, "novemp")
        Else
            StrSql = " UPDATE  novemp "
            StrSql = StrSql & " SET nevalor = nevalor + " & objRs!acnovvalor
            StrSql = StrSql & " WHERE novemp.empleado = " & objRs!Ternro & " AND "
            StrSql = StrSql & " novemp.concnro = " & objRs!Concnro & " AND novemp.tpanro = " & objRs!Tpanro
            objConn.Execute StrSql, , adExecuteNoRecords
            inserto = False
            Gnovnro = objCon!nenro
        End If
        
        If Firma_NovLiq Then
            If FIN_Firma_NovLiq Then
                If inserto Then
                    'Inserto firma autorizado final
                    StrSql = "INSERT INTO cysfirmas ("
                    StrSql = StrSql & "cysfirautoriza,cysfirfecaut,cysfirmhora,cysfirusuario,"
                    StrSql = StrSql & "cysfirdestino,cystipnro,cysfircodext,cysfirsecuencia,cysfirdes"
                    StrSql = StrSql & ",cysfirfin,cysfiryaaut,cysfirrecha"
                    StrSql = StrSql & ")"
                    StrSql = StrSql & "VALUES("
                    StrSql = StrSql & "'" & cysfirautoriza & "'," & ConvFecha(Date) & ",'" & FormatDateTime(Now(), vbShortTime) & "'"
                    StrSql = StrSql & ",'" & cysfirusuario & "','" & cysfirdestino & "'," & cystipnro & "," & Gnovnro & ",1,'Pasaje de Novedad desde GTI'"
                    StrSql = StrSql & "," & cysfirfin & "," & cysfiryaaut & "," & cysfirrecha
                    StrSql = StrSql & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    'Busco la ultima y actualizo
                    StrSql = "SELECT cysfirautoriza, cysfirsecuencia, cysfirdestino FROM cysfirmas "
                    StrSql = StrSql & " WHERE cysfirmas.cystipnro = " & cystipnro & " AND cysfirmas.cysfircodext = '" & Gnovnro & "' "
                    StrSql = StrSql & " ORDER BY cysfirsecuencia DESC"
                    OpenRecordset StrSql, rs
                    If Not rs.EOF Then
                        StrSql = "UPDATE cysfirmas "
                        StrSql = StrSql & "SET cysfirdestino = '" & cysfirdestino & "'"
                        StrSql = StrSql & ", cysfirautoriza = '" & cysfirusuario & "'"
                        StrSql = StrSql & ", cysfirfecaut = " & ConvFecha(Date)
                        StrSql = StrSql & ", cysfirmhora = '" & FormatDateTime(Now(), vbShortTime) & "'"
                        StrSql = StrSql & ", cysfirfin = -1,cysfiryaaut = -1, cysfirrecha = 0"
                        StrSql = StrSql & " where cystipnro = " & cystipnro
                        StrSql = StrSql & " and cysfircodext = '" & Gnovnro & "' "
                        StrSql = StrSql & " and cysfirsecuencia = " & rs!cysfirsecuencia
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        StrSql = "INSERT INTO cysfirmas ("
                        StrSql = StrSql & "cysfirautoriza,cysfirfecaut,cysfirmhora,cysfirusuario,"
                        StrSql = StrSql & "cysfirdestino,cystipnro,cysfircodext,cysfirsecuencia,cysfirdes"
                        StrSql = StrSql & ",cysfirfin,cysfiryaaut,cysfirrecha"
                        StrSql = StrSql & ")"
                        StrSql = StrSql & "VALUES("
                        StrSql = StrSql & "'" & cysfirautoriza & "'," & ConvFecha(Date) & ",'" & FormatDateTime(Now(), vbShortTime) & "'"
                        StrSql = StrSql & ",'" & cysfirusuario & "','" & cysfirdestino & "'," & cystipnro & "," & Gnovnro & ",1,'Pasaje de Novedad desde GTI'"
                        StrSql = StrSql & "," & cysfirfin & "," & cysfiryaaut & "," & cysfirrecha
                        StrSql = StrSql & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                    End If
                End If
            Else
                If Not EsNulo(Firma_User_Destino) Then
                    If inserto Then
                        'Inserto firma autorizado pendiente
                        StrSql = "INSERT INTO cysfirmas ("
                        StrSql = StrSql & "cysfirautoriza,cysfirfecaut,cysfirmhora,cysfirusuario,"
                        StrSql = StrSql & "cysfirdestino,cystipnro,cysfircodext,cysfirsecuencia,cysfirdes"
                        StrSql = StrSql & ",cysfirfin,cysfiryaaut,cysfirrecha"
                        StrSql = StrSql & ")"
                        StrSql = StrSql & "VALUES("
                        StrSql = StrSql & "'" & cysfirautoriza & "'," & ConvFecha(Date) & ",'" & FormatDateTime(Now(), vbShortTime) & "'"
                        StrSql = StrSql & ",'" & cysfirusuario & "','" & cysfirdestino & "'," & cystipnro & "," & Gnovnro & ",1,'Pasaje de Novedad desde GTI'"
                        StrSql = StrSql & "," & cysfirfin & "," & cysfiryaaut & "," & cysfirrecha
                        StrSql = StrSql & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        'Busco la ultima y actualizo
                        StrSql = "SELECT cysfirautoriza, cysfirsecuencia, cysfirdestino FROM cysfirmas "
                        StrSql = StrSql & " WHERE cysfirmas.cystipnro = " & cystipnro & " AND cysfirmas.cysfircodext = '" & Gnovnro & "' "
                        StrSql = StrSql & " ORDER BY cysfirsecuencia DESC"
                        OpenRecordset StrSql, rs
                        If Not rs.EOF Then
                            StrSql = "UPDATE cysfirmas "
                            StrSql = StrSql & "SET cysfirdestino = '" & cysfirdestino & "'"
                            StrSql = StrSql & ", cysfirautoriza = '" & cysfirusuario & "'"
                            StrSql = StrSql & ", cysfirfecaut = " & ConvFecha(Date)
                            StrSql = StrSql & ", cysfirmhora = '" & FormatDateTime(Now(), vbShortTime) & "'"
                            StrSql = StrSql & ", cysfirfin = 0,cysfiryaaut = 0, cysfirrecha = 0"
                            StrSql = StrSql & " where cystipnro = " & cystipnro
                            StrSql = StrSql & " and cysfircodext = '" & Gnovnro & "' "
                            StrSql = StrSql & " and cysfirsecuencia = " & rs!cysfirsecuencia
                            objConn.Execute StrSql, , adExecuteNoRecords
                        Else
                            StrSql = "INSERT INTO cysfirmas ("
                            StrSql = StrSql & "cysfirautoriza,cysfirfecaut,cysfirmhora,cysfirusuario,"
                            StrSql = StrSql & "cysfirdestino,cystipnro,cysfircodext,cysfirsecuencia,cysfirdes"
                            StrSql = StrSql & ",cysfirfin,cysfiryaaut,cysfirrecha"
                            StrSql = StrSql & ")"
                            StrSql = StrSql & "VALUES("
                            StrSql = StrSql & "'" & cysfirautoriza & "'," & ConvFecha(Date) & ",'" & FormatDateTime(Now(), vbShortTime) & "'"
                            StrSql = StrSql & ",'" & cysfirusuario & "','" & cysfirdestino & "'," & cystipnro & "," & Gnovnro & ",1,'Pasaje de Novedad desde GTI'"
                            StrSql = StrSql & "," & cysfirfin & "," & cysfiryaaut & "," & cysfirrecha
                            StrSql = StrSql & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                Else
                    'Error no se puede insertar
                    Flog.writeline Espacios(Tabulador * 2) & "No se puede pasar la novedad, el usuario destino de firma es nulo. "
                End If
            End If
        End If
        'Progreso
        If Not Actualiza_Por_Proceso Then
            Progreso = Progreso + IncPorc
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "---> Actualizo progreso del proceso " & Now
            End If
            StrSql = "UPDATE batch_proceso SET bprcprogreso = " & Progreso & " WHERE bpronro = " & NroProceso
            objConnProgreso.Execute StrSql, , adExecuteNoRecords
        End If
        
        objRs.MoveNext
    Loop
    
    If Actualiza_Por_Proceso Then
        Progreso = Progreso + IncPorc
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "---> Actualizo progreso del proceso " & Now
        End If
        StrSql = "UPDATE batch_proceso SET bprcprogreso = " & Progreso & " WHERE bpronro = " & NroProceso
        objConnProgreso.Execute StrSql, , adExecuteNoRecords
    End If
    
    objrs_pro.MoveNext
Loop

Final:
    MyCommitTrans
    
If objrs_pro.State = adStateOpen Then objrs_pro.Close
If objCon.State = adStateOpen Then objCon.Close
If objRs.State = adStateOpen Then objRs.Close
If rs.State = adStateOpen Then rs.Close
    
Set objrs_pro = Nothing
Set objRs = Nothing
Set objCon = Nothing
Set rs = Nothing
End Sub

Public Sub Politica2000Standar(ByVal NroProceso As Long)
' --------------------------------------------------------------
' Descripcion: Exportación de Novedades de Liq a RHProX2 (pisa novedades si ya estaban).
' Autor: EPL
' Ultima modificacion: FGZ - 13/04/2004
' --------------------------------------------------------------
Dim FechaDesde As Date
Dim FechaHasta As Date
Dim objrs_pro As New ADODB.Recordset
Dim objRs As New ADODB.Recordset
Dim objCon As New ADODB.Recordset
Dim rs As New ADODB.Recordset
Dim Gnovnro
Dim inserto As Boolean

Dim Cant_Procesos As Long
Dim Progreso As Single
Dim IncPorc As Single
Dim Actualiza_Por_Proceso As Boolean

    StrSql = " SELECT gpadesde,gpahasta,Batch_Procacum.gpanro,batch_proceso.bpronro " & _
             " From batch_proceso " & _
             " INNER JOIN Batch_Procacum ON Batch_Procacum.bpronro = batch_proceso.bpronro " & _
             " INNER JOIN gti_Procacum ON Batch_Procacum.gpanro = gti_Procacum.gpanro " & _
             " Where batch_proceso.bpronro = " & NroProceso
    OpenRecordset StrSql, objrs_pro

    If Not objrs_pro.EOF Then
        FechaDesde = objrs_pro!gpadesde
        FechaHasta = objrs_pro!gpahasta
        
        cystipnro = 5
        If FIN_Firma_NovLiq Then
            cysfirusuario = User_Proceso
            cysfirautoriza = User_Proceso
            cysfirdestino = Firma_User_Destino
            cysfirfin = -1
            cysfiryaaut = -1
            cysfirrecha = 0
        Else
            cysfirusuario = User_Proceso
            cysfirautoriza = User_Proceso
            cysfirdestino = Firma_User_Destino
            cysfirfin = 0
            cysfiryaaut = 0
            cysfirrecha = 0
        End If
    End If
    
    'Seteo los valores de progreso
    Cant_Procesos = objrs_pro.RecordCount 'Cantidad de procesos
    If Cant_Procesos = 1 Then
        Actualiza_Por_Proceso = False
    Else
        Actualiza_Por_Proceso = True
    End If
    If Cant_Procesos = 0 Then Cant_Procesos = 1
    
    If Actualiza_Por_Proceso Then
        IncPorc = (95 / Cant_Procesos)
    End If
    Progreso = 0
    
    MyBeginTrans
    Do While Not objrs_pro.EOF
   
    StrSql = " SELECT concepto.ConcCod,concepto.tconnro,concepto.concnro,empleado.ternro,empleado.empleg,gti_acunov.acnovvalor,gti_acunov.gpanro,gti_acunov.acnovfecaprob, gti_acunov.tpanro " & _
         " FROM gti_procacum " & _
             " INNER JOIN gti_acunov ON gti_acunov.gpanro = gti_procacum.gpanro " & _
             " INNER JOIN empleado ON empleado.ternro = gti_acunov.ternro " & _
             " INNER JOIN Concepto ON Concepto.concnro = gti_acunov.concnro " & _
             " WHERE (gti_acunov.gpanro = " & objrs_pro!gpanro & " )" & _
             " ORDER BY concepto.conccod "
    OpenRecordset StrSql, objRs
   
   'Redefinicion del incremento del progreso
    If Not Actualiza_Por_Proceso Then
        Cant_Procesos = objRs.RecordCount
        If Cant_Procesos = 0 Then Cant_Procesos = 1
        IncPorc = (95 / Cant_Procesos)
    End If
   
    Do While Not objRs.EOF
        StrSql = " SELECT * FROM novemp WHERE novemp.empleado = " & objRs!Ternro & " AND "
        StrSql = StrSql & " novemp.concnro = " & objRs!Concnro & " AND novemp.tpanro = " & objRs!Tpanro
        OpenRecordset StrSql, objCon
    
        If objCon.EOF Then
            StrSql = " INSERT INTO novemp (concnro,tpanro, empleado, nevalor, nevigencia)"
            StrSql = StrSql & " VALUES (" & objRs!Concnro & "," & objRs!Tpanro & "," & objRs!Ternro & ","
            StrSql = StrSql & objRs!acnovvalor & ",0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            inserto = True
            Gnovnro = getLastIdentity(objConn, "novemp")
        Else
            StrSql = " UPDATE  novemp "
            StrSql = StrSql & " SET nevalor = " & objRs!acnovvalor
            StrSql = StrSql & " WHERE novemp.empleado = " & objRs!Ternro & " AND "
            StrSql = StrSql & " novemp.concnro = " & objRs!Concnro & " AND novemp.tpanro = " & objRs!Tpanro
            objConn.Execute StrSql, , adExecuteNoRecords
            inserto = False
            Gnovnro = objCon!nenro
        End If
        
        If Firma_NovLiq Then
            If FIN_Firma_NovLiq Then
                If inserto Then
                    'Inserto firma autorizado final
                    StrSql = "INSERT INTO cysfirmas ("
                    StrSql = StrSql & "cysfirautoriza,cysfirfecaut,cysfirmhora,cysfirusuario,"
                    StrSql = StrSql & "cysfirdestino,cystipnro,cysfircodext,cysfirsecuencia,cysfirdes"
                    StrSql = StrSql & ",cysfirfin,cysfiryaaut,cysfirrecha"
                    StrSql = StrSql & ")"
                    StrSql = StrSql & "VALUES("
                    StrSql = StrSql & "'" & cysfirautoriza & "'," & ConvFecha(Date) & ",'" & FormatDateTime(Now(), vbShortTime) & "'"
                    StrSql = StrSql & ",'" & cysfirusuario & "','" & cysfirdestino & "'," & cystipnro & "," & Gnovnro & ",1,'Pasaje de Novedad desde GTI'"
                    StrSql = StrSql & "," & cysfirfin & "," & cysfiryaaut & "," & cysfirrecha
                    StrSql = StrSql & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    'Busco la ultima y actualizo
                    StrSql = "SELECT cysfirautoriza, cysfirsecuencia, cysfirdestino FROM cysfirmas "
                    StrSql = StrSql & " WHERE cysfirmas.cystipnro = " & cystipnro & " AND cysfirmas.cysfircodext = '" & Gnovnro & "' "
                    StrSql = StrSql & " ORDER BY cysfirsecuencia DESC"
                    OpenRecordset StrSql, rs
                    If Not rs.EOF Then
                        StrSql = "UPDATE cysfirmas "
                        StrSql = StrSql & "SET cysfirdestino = '" & cysfirdestino & "'"
                        StrSql = StrSql & ", cysfirautoriza = '" & cysfirusuario & "'"
                        StrSql = StrSql & ", cysfirfecaut = " & ConvFecha(Date)
                        StrSql = StrSql & ", cysfirmhora = '" & FormatDateTime(Now(), vbShortTime) & "'"
                        StrSql = StrSql & ", cysfirfin = -1,cysfiryaaut = -1, cysfirrecha = 0"
                        StrSql = StrSql & " where cystipnro = " & cystipnro
                        StrSql = StrSql & " and cysfircodext = '" & Gnovnro & "' "
                        StrSql = StrSql & " and cysfirsecuencia = " & rs!cysfirsecuencia
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        StrSql = "INSERT INTO cysfirmas ("
                        StrSql = StrSql & "cysfirautoriza,cysfirfecaut,cysfirmhora,cysfirusuario,"
                        StrSql = StrSql & "cysfirdestino,cystipnro,cysfircodext,cysfirsecuencia,cysfirdes"
                        StrSql = StrSql & ",cysfirfin,cysfiryaaut,cysfirrecha"
                        StrSql = StrSql & ")"
                        StrSql = StrSql & "VALUES("
                        StrSql = StrSql & "'" & cysfirautoriza & "'," & ConvFecha(Date) & ",'" & FormatDateTime(Now(), vbShortTime) & "'"
                        StrSql = StrSql & ",'" & cysfirusuario & "','" & cysfirdestino & "'," & cystipnro & "," & Gnovnro & ",1,'Pasaje de Novedad desde GTI'"
                        StrSql = StrSql & "," & cysfirfin & "," & cysfiryaaut & "," & cysfirrecha
                        StrSql = StrSql & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                    End If
                End If
            Else
                If Not EsNulo(Firma_User_Destino) Then
                    If inserto Then
                        'Inserto firma autorizado pendiente
                        StrSql = "INSERT INTO cysfirmas ("
                        StrSql = StrSql & "cysfirautoriza,cysfirfecaut,cysfirmhora,cysfirusuario,"
                        StrSql = StrSql & "cysfirdestino,cystipnro,cysfircodext,cysfirsecuencia,cysfirdes"
                        StrSql = StrSql & ",cysfirfin,cysfiryaaut,cysfirrecha"
                        StrSql = StrSql & ")"
                        StrSql = StrSql & "VALUES("
                        StrSql = StrSql & "'" & cysfirautoriza & "'," & ConvFecha(Date) & ",'" & FormatDateTime(Now(), vbShortTime) & "'"
                        StrSql = StrSql & ",'" & cysfirusuario & "','" & cysfirdestino & "'," & cystipnro & "," & Gnovnro & ",1,'Pasaje de Novedad desde GTI'"
                        StrSql = StrSql & "," & cysfirfin & "," & cysfiryaaut & "," & cysfirrecha
                        StrSql = StrSql & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        'Busco la ultima y actualizo
                        StrSql = "SELECT cysfirautoriza, cysfirsecuencia, cysfirdestino FROM cysfirmas "
                        StrSql = StrSql & " WHERE cysfirmas.cystipnro = " & cystipnro & " AND cysfirmas.cysfircodext = '" & Gnovnro & "' "
                        StrSql = StrSql & " ORDER BY cysfirsecuencia DESC"
                        OpenRecordset StrSql, rs
                        If Not rs.EOF Then
                            StrSql = "UPDATE cysfirmas "
                            StrSql = StrSql & "SET cysfirdestino = '" & cysfirdestino & "'"
                            StrSql = StrSql & ", cysfirautoriza = '" & cysfirusuario & "'"
                            StrSql = StrSql & ", cysfirfecaut = " & ConvFecha(Date)
                            StrSql = StrSql & ", cysfirmhora = '" & FormatDateTime(Now(), vbShortTime) & "'"
                            StrSql = StrSql & ", cysfirfin = 0,cysfiryaaut = 0, cysfirrecha = 0"
                            StrSql = StrSql & " where cystipnro = " & cystipnro
                            StrSql = StrSql & " and cysfircodext = '" & Gnovnro & "' "
                            StrSql = StrSql & " and cysfirsecuencia = " & rs!cysfirsecuencia
                            objConn.Execute StrSql, , adExecuteNoRecords
                        Else
                            StrSql = "INSERT INTO cysfirmas ("
                            StrSql = StrSql & "cysfirautoriza,cysfirfecaut,cysfirmhora,cysfirusuario,"
                            StrSql = StrSql & "cysfirdestino,cystipnro,cysfircodext,cysfirsecuencia,cysfirdes"
                            StrSql = StrSql & ",cysfirfin,cysfiryaaut,cysfirrecha"
                            StrSql = StrSql & ")"
                            StrSql = StrSql & "VALUES("
                            StrSql = StrSql & "'" & cysfirautoriza & "'," & ConvFecha(Date) & ",'" & FormatDateTime(Now(), vbShortTime) & "'"
                            StrSql = StrSql & ",'" & cysfirusuario & "','" & cysfirdestino & "'," & cystipnro & "," & Gnovnro & ",1,'Pasaje de Novedad desde GTI'"
                            StrSql = StrSql & "," & cysfirfin & "," & cysfiryaaut & "," & cysfirrecha
                            StrSql = StrSql & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                Else
                    'Error no se puede insertar
                    Flog.writeline Espacios(Tabulador * 2) & "No se puede pasar la novedad, el usuario destino de firma es nulo. "
                End If
            End If
        End If
        
        'Progreso
        If Not Actualiza_Por_Proceso Then
            Progreso = Progreso + IncPorc
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "---> Actualizo progreso del proceso " & Now
            End If
            StrSql = "UPDATE batch_proceso SET bprcprogreso = " & Progreso & " WHERE bpronro = " & NroProceso
            objConnProgreso.Execute StrSql, , adExecuteNoRecords
        End If
        
        objRs.MoveNext
    Loop
    
    If Actualiza_Por_Proceso Then
        Progreso = Progreso + IncPorc
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "---> Actualizo progreso del proceso " & Now
        End If
        StrSql = "UPDATE batch_proceso SET bprcprogreso = " & Progreso & " WHERE bpronro = " & NroProceso
        objConnProgreso.Execute StrSql, , adExecuteNoRecords
    End If
    
    objrs_pro.MoveNext
Loop

Final:
    MyCommitTrans
    If objrs_pro.State = adStateOpen Then objrs_pro.Close
    If objCon.State = adStateOpen Then objCon.Close
    If objRs.State = adStateOpen Then objRs.Close
    If rs.State = adStateOpen Then rs.Close
        
    Set objrs_pro = Nothing
    Set objRs = Nothing
    Set objCon = Nothing
    Set rs = Nothing
End Sub



Private Sub Novedades_GTI_Standar(NroTer As Long, nroproc As Long)
' --------------------------------------------------------------
' Descripcion: Genera las novedades de gti.
' Autor: ?
' Ultima modificacion: FGZ - 17/05/2007 - pasé la depuración un nivel mas arriba
' --------------------------------------------------------------
Dim Desde As Date
Dim Hasta As Date
Dim Horas As Single
Dim nrocab As Long
Dim objRs As New ADODB.Recordset
Dim objrsemp As New ADODB.Recordset
Dim objrsanov As New ADODB.Recordset

    StrSql = " SELECT gpanro FROM gti_procacum WHERE gpanro = " & nroproc
    OpenRecordset StrSql, objRs
    
    If objRs.EOF Then
        Exit Sub
    Else
        StrSql = " SELECT cgtinro FROM gti_cab WHERE ternro = " & NroTer & " and gpanro = " & nroproc
        OpenRecordset StrSql, objRs
        
        nrocab = objRs!cgtinro
        
'        'FGZ - 17/05/2007 - pasé la depuración un nivel mas arriba
'        StrSql = " DELETE FROM gti_acunov WHERE ternro = " & NroTer & " and gpanro = " & nroproc
'        objConn.Execute StrSql, , adExecuteNoRecords
'        'FGZ - 17/05/2007 - pasé la depuración un nivel mas arriba
        
'FGZ - 04/06/2007 - Mejoras -----
'        StrSql = " SELECT * FROM empleado WHERE ternro = " & NroTer
'        OpenRecordset StrSql, objrsemp
'FGZ - 04/06/2007 - Mejoras -----
        
' Hay que filtrar por la estructura del empleado, ya que la relacion entre
' los tipos de horas y los conceptos, puede ser por estructura

'AIB - 26/3/2003
'La relación no necesariamente es por estructura

        ' FGZ 04/08/2003
        ' cambio estruc_actual por his_estructura
        StrSql = " SELECT gti_det.dgticant,tiph_con.thsuma,tiph_con.concnro,tiph_con.tpanro, tiph_con.thnro " & _
            " FROM gti_det " & _
            " INNER JOIN tiph_con ON tiph_con.thnro = gti_det.thnro " & _
            " INNER JOIN his_estructura ON his_estructura.ternro = " & NroTer & _
            " AND his_estructura.tenro = tiph_con.tenro AND his_estructura.estrnro = tiph_con.estrnro " & _
            " WHERE cgtinro = " & nrocab & " AND his_estructura.htethasta IS NULL " & _
            " UNION " & _
            " SELECT gti_det.dgticant,tiph_con.thsuma,tiph_con.concnro,tiph_con.tpanro,tiph_con.thnro " & _
            " FROM gti_det " & _
            " INNER JOIN tiph_con ON tiph_con.thnro = gti_det.thnro " & _
            " WHERE cgtinro = " & nrocab & _
            " AND tiph_con.tenro is null "
' Hay que filtrar por la estructura del empleado, ya que la relacion entre
' los tipos de horas y los conceptos, puede ser por estructura
        OpenRecordset StrSql, objRs
        Do While Not objRs.EOF
            If objRs!thsuma Then
                Horas = Horas + objRs!dgticant
            Else
                Horas = Horas + (-objRs!dgticant)
            End If
            
            'Informacion en Cantidad de Días
            If objRs!Tpanro = 161 Then Horas = Round(Horas / 8, 2)
            
            StrSql = "SELECT * FROM gti_acunov WHERE gti_acunov.ternro = " & NroTer
            StrSql = StrSql & "AND gti_acunov.concnro = " & objRs!Concnro
            StrSql = StrSql & "AND gti_acunov.tpanro = " & objRs!Tpanro
            StrSql = StrSql & "AND gti_acunov.gpanro = " & nroproc
            'FGZ - 04/06/2007 - esta mezclando los metodos .....
            'OpenRecordset StrSql, objrsanov, adLockOptimistic
            'FGZ - 04/06/2007 - esta mezclando los metodos .....
            OpenRecordset StrSql, objrsanov
            If objrsanov.EOF Then
                StrSql = " INSERT INTO  gti_acunov "
                StrSql = StrSql & " (ternro,concnro,tpanro,gpanro,acnovvalor"
                If Aprobadas Then
                    StrSql = StrSql & ",acnovfecaprob"
                End If
                StrSql = StrSql & " ) VALUES "
                StrSql = StrSql & " ( " & NroTer & "," & objRs!Concnro & "," & objRs!Tpanro & "," & nroproc & "," & Horas
                If Aprobadas Then
                    StrSql = StrSql & "," & ConvFecha(Date)
                End If
                StrSql = StrSql & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
            Else
               'objrsanov.Update "acnovvalor", objrsanov!acnovvalor + horas
               'FGZ - 04/06/2007 - esta mezclando los metodos .....
                StrSql = " UPDATE gti_acunov SET "
                StrSql = StrSql & " acnovvalor = acnovvalor + " & Horas
                If Aprobadas Then
                    StrSql = StrSql & ",acnovfecaprob = " & ConvFecha(Date)
                Else
                    StrSql = StrSql & ",acnovfecaprob = NULL "
                End If
                StrSql = StrSql & " WHERE ternro =" & NroTer
                StrSql = StrSql & " AND gti_acunov.concnro = " & objRs!Concnro
                StrSql = StrSql & " AND gti_acunov.tpanro = " & objRs!Tpanro
                StrSql = StrSql & " AND gti_acunov.gpanro = " & nroproc
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
        
            objRs.MoveNext
            Horas = 0
        Loop
    End If
End Sub


Private Sub Novedades_GTI_MAZUL(NroTer As Long, nroproc As Long)
' --------------------------------------------------------------
' Descripcion: Genera las novedades de gti, CUSTOM para MOÑO AZUL.
' Autor: ?
' Ultima modificacion: FGZ - 17/05/2007 - pasé la depuración un nivel mas arriba
' --------------------------------------------------------------
Dim Desde As Date
Dim Hasta As Date
Dim Horas As Single
Dim nrocab As Long
Dim objRs As New ADODB.Recordset
Dim objrsemp As New ADODB.Recordset
Dim objrsanov As New ADODB.Recordset

    StrSql = " SELECT * FROM gti_procacum WHERE gpanro = " & nroproc
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "SQL :" & StrSql
    End If
    OpenRecordset StrSql, objRs
    
    
    If objRs.EOF Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "EOF en gti_procacum :" & Now
        End If
        Exit Sub
    Else
    
        StrSql = " SELECT * FROM gti_cab WHERE ternro = " & NroTer & " and gpanro = " & nroproc
        OpenRecordset StrSql, objRs
        
        nrocab = objRs!cgtinro
        
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "cabecera :" & objRs!cgtinro
        End If
        
'        'FGZ - 17/05/2007 - pasé la depuración un nivel mas arriba
'        StrSql = " DELETE FROM gti_acunov WHERE ternro = " & NroTer & " and gpanro = " & nroproc
'        objConn.Execute StrSql, , adExecuteNoRecords
'        'FGZ - 17/05/2007 - pasé la depuración un nivel mas arriba

        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Borró gti_acunov :" & StrSql
        End If
        
        StrSql = " SELECT * FROM empleado WHERE ternro = " & NroTer
        OpenRecordset StrSql, objrsemp
        
        
' Hay que filtrar por la estructura del empleado, ya que la relacion entre
' los tipos de horas y los conceptos, puede ser por estructura

'AIB - 26/3/2003
'La relación no necesariamente es por estructura
        StrSql = " SELECT gti_det.dgticant,tiph_con.thsuma,tiph_con.concnro,tiph_con.tpanro,concepto.conccod, tiph_con.thnro" & _
        " FROM gti_det " & _
        " INNER JOIN tiph_con ON tiph_con.thnro = gti_det.thnro " & _
        " INNER JOIN his_estructura ON his_estructura.ternro = " & NroTer & _
        " AND his_estructura.tenro = tiph_con.tenro AND his_estructura.estrnro = tiph_con.estrnro " & _
        " INNER JOIN concepto ON tiph_con.concnro = concepto.concnro" & _
        " WHERE cgtinro = " & nrocab & " AND his_estructura.htethasta IS NULL " & _
        " UNION" & _
        " (SELECT gti_det.dgticant,tiph_con.thsuma,tiph_con.concnro,tiph_con.tpanro,concepto.conccod, tiph_con.thnro " & _
        " FROM gti_det " & _
        " INNER JOIN tiph_con ON tiph_con.thnro = gti_det.thnro " & _
        " INNER JOIN concepto ON tiph_con.concnro = concepto.concnro" & _
        " WHERE cgtinro = " & nrocab & " AND tiph_con.tenro IS NULL)"

        ' cambio estruc_actual por his_estructura
'        StrSql = " SELECT gti_det.dgticant,tiph_con.thsuma,tiph_con.concnro,tiph_con.tpanro " & _
'            " FROM gti_det " & _
'            " INNER JOIN tiph_con ON tiph_con.thnro = gti_det.thnro " & _
'            " INNER JOIN his_estructura ON his_estructura.ternro = " & nroter & _
'            " AND his_estructura.tenro = tiph_con.tenro AND his_estructura.estrnro = tiph_con.estrnro " & _
'            " WHERE cgtinro = " & nrocab & " AND his_estructura.htethasta IS NULL " & _
'            " UNION " & _
'            " SELECT gti_det.dgticant,tiph_con.thsuma,tiph_con.concnro,tiph_con.tpanro " & _
'            " FROM gti_det " & _
'            " INNER JOIN tiph_con ON tiph_con.thnro = gti_det.thnro " & _
'            " WHERE cgtinro = " & nrocab & _
'            " AND tiph_con.tenro is null "
' Hay que filtrar por la estructura del empleado, ya que la relacion entre
' los tipos de horas y los conceptos, puede ser por estructura
        
        OpenRecordset StrSql, objRs
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "SQL :" & StrSql
        End If
        
        If objRs.EOF Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "EOF :" & StrSql
            End If
        End If
        
        Do While Not objRs.EOF
            
            Horas = 0
            
            If objRs!thsuma Then
        
                Horas = Horas + objRs!dgticant
            
            Else
                
                Horas = Horas + (-objRs!dgticant)
            
            End If
            
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Por cada ternro ==> Concepto :" & objRs!conccod
                Flog.writeline Espacios(Tabulador * 2) & "Por cada ternro ==> Thnro :" & objRs!thnro
                Flog.writeline Espacios(Tabulador * 2) & "Por cada ternro ==> dgticant: " & objRs!dgticant
            End If
            
            If (objRs!conccod = "911") Then
             
                If (objRs!thnro = 14) Then
                    
                    If (objRs!dgticant < 5) Then
                    
                        Horas = objRs!dgticant * 20
                    
                    Else
                
                        Horas = 100
                    
                    End If
                
                Else
                    
                    If (objRs!dgticant < 1) Then
                        
                        Horas = 50
                    
                    Else
                        
                        Horas = 100
                    
                    End If
                    
                End If
            
            End If
            
            
            If (objRs!conccod = "910") Then
             
                If (objRs!thnro = 54) Then
                
                    
                    If (objRs!dgticant <= 10) Then
                    
                        Horas = Round(objRs!dgticant, 1) * 10
                    
                    Else
                
                        Horas = 100
                    
                    End If
                    
                End If
            
            End If
            
            If Horas = 0 Then GoTo Continuar
            
            StrSql = "SELECT * FROM gti_acunov WHERE gti_acunov.ternro = " & NroTer & _
                     " AND gti_acunov.concnro = " & objRs!Concnro & _
                     " AND gti_acunov.tpanro = " & objRs!Tpanro & _
                     " AND gti_acunov.gpanro = " & nroproc
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "SQL ==> :" & StrSql
            End If
            OpenRecordset StrSql, objrsanov, adLockOptimistic
            
            If objrsanov.EOF Then
                
                StrSql = " INSERT INTO  gti_acunov " & _
                         " (ternro,concnro,tpanro,gpanro,acnovvalor) VALUES " & _
                         " ( " & NroTer & "," & objRs!Concnro & "," & objRs!Tpanro & "," & nroproc & "," & Horas & ")"
            
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "inserto en GTI_Acunov ==> :" & StrSql
                End If
                
                objConn.Execute StrSql, , adExecuteNoRecords
            
            Else
                
                If (objRs!conccod = 910 Or objRs!conccod = 911) And (objrsanov!acnovvalor + Horas >= 100) Then
                    StrSql = " UPDATE gti_acunov " & _
                        " SET acnovvalor = " & 100 & _
                        " WHERE gti_acunov.ternro = " & NroTer & _
                        " AND gti_acunov.concnro = " & objRs!Concnro & _
                        " AND gti_acunov.tpanro = " & objRs!Tpanro & _
                        " AND gti_acunov.gpanro = " & nroproc
                Else
                    StrSql = " UPDATE gti_acunov " & _
                        " SET acnovvalor = " & objrsanov!acnovvalor + Horas & _
                        " WHERE gti_acunov.ternro = " & NroTer & _
                        " AND gti_acunov.concnro = " & objRs!Concnro & _
                        " AND gti_acunov.tpanro = " & objRs!Tpanro & _
                        " AND gti_acunov.gpanro = " & nroproc
                End If
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "Actualizo GTI_Acunov ==> :" & StrSql
                End If
                objConn.Execute StrSql, , adExecuteNoRecords
            
            End If
Continuar:
            objRs.MoveNext
            
            Horas = 0
            
        Loop
        
    
    End If
    
    
End Sub


Private Sub Novedades_GTI_Desglose(NroTer As Long, nroproc As Long)
' --------------------------------------------------------------
' Descripcion: Genera las novedades de gti a partir del desgloce.
' Autor: Margiotta, Emanuel (v5.06) - CAS-22808 - SGS - Distribución Contable
' Ultima modificacion:
' --------------------------------------------------------------
Dim Desde As Date
Dim Hasta As Date
Dim Horas As Single
Dim nrocab As Long
Dim gpanro As Long
Dim acnovnro As Long
Dim totalHsDis As Single
Dim objRs As New ADODB.Recordset
Dim rsAP As New ADODB.Recordset
Dim rsDesAD As New ADODB.Recordset

Dim objrsemp As New ADODB.Recordset
Dim objrsanov As New ADODB.Recordset

    totalHsDis = 0
    StrSql = " SELECT gpanro FROM gti_procacum WHERE gpanro = " & nroproc
    OpenRecordset StrSql, objRs
    
    If objRs.EOF Then
        Exit Sub
    Else
        'EAM- Obtiene la cabecera de gti y el codigo del proceso
        StrSql = "SELECT gti_cab.cgtinro,gti_cab.gpanro,gpadesde,gpahasta FROM gti_cab " & _
                " INNER JOIN gti_procacum ON gti_procacum.gpanro = gti_cab.gpanro " & _
                " Where Ternro = " & NroTer & " And gti_cab.gpanro = " & nroproc
        OpenRecordset StrSql, objRs
        nrocab = objRs!cgtinro
        gpanro = objRs!gpanro
                
        StrSql = " SELECT gti_det.dgticant,tiph_con.thsuma,tiph_con.concnro,tiph_con.tpanro, tiph_con.thnro " & _
            " FROM gti_det " & _
            " INNER JOIN tiph_con ON tiph_con.thnro = gti_det.thnro " & _
            " INNER JOIN his_estructura ON his_estructura.ternro = " & NroTer & _
            " AND his_estructura.tenro = tiph_con.tenro AND his_estructura.estrnro = tiph_con.estrnro " & _
            " WHERE cgtinro = " & nrocab & " AND his_estructura.htethasta IS NULL " & _
            " UNION " & _
            " SELECT gti_det.dgticant,tiph_con.thsuma,tiph_con.concnro,tiph_con.tpanro,tiph_con.thnro " & _
            " FROM gti_det " & _
            " INNER JOIN tiph_con ON tiph_con.thnro = gti_det.thnro " & _
            " WHERE cgtinro = " & nrocab & _
            " AND tiph_con.tenro is null "
        ' Hay que filtrar por la estructura del empleado, ya que la relacion entre
        ' los tipos de horas y los conceptos, puede ser por estructura
        OpenRecordset StrSql, rsAP
        
        Do While Not rsAP.EOF
                    
            'EAM- Busco todos los desgloces dentro del rango de fecha del proceso de gti
            StrSql = "SELECT thnro,te1,estrnro1,te2,estrnro2,te3,estrnro3,te4,estrnro4,te5,estrnro5, SUM(canthoras) canthoras FROM gti_desgldiario " & _
                    " WHERE fecha >= " & ConvFecha(objRs!gpadesde) & " AND fecha <= " & ConvFecha(objRs!gpahasta) & " AND ternro= " & NroTer & _
                    " AND thnro= " & rsAP!thnro & _
                    " GROUP BY thnro,te1,estrnro1,te2,estrnro2,te3,estrnro3,te4,estrnro4,te5,estrnro5"
            OpenRecordset StrSql, rsDesAD
                            
            Do While Not rsDesAD.EOF
                'EAM- Inserto la novedad con la distribucion
                StrSql = " INSERT INTO gti_acunov (ternro,concnro,tpanro,gpanro,acnovvalor"
                If Aprobadas Then
                    StrSql = StrSql & ",acnovfecaprob"
                End If
                StrSql = StrSql & " ) VALUES ( " & NroTer & "," & rsAP!Concnro & "," & rsAP!Tpanro & "," & nroproc & "," & rsDesAD!canthoras
                If Aprobadas Then
                    StrSql = StrSql & "," & ConvFecha(Date)
                End If
                StrSql = StrSql & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "Se genera la novedad de GTI"
                End If
                
                acnovnro = getLastIdentity(objConn, "gti_acunov")
                
                StrSql = "INSERT INTO gti_acunov_dist (acnovnro,auto,tiponov,concnro,tpanro,masinro"
                If Not EsNulo(rsDesAD!te1) Then StrSql = StrSql & ",tenro1"
                If Not EsNulo(rsDesAD!estrnro1) Then StrSql = StrSql & ",estrnro1"
                If Not EsNulo(rsDesAD!te2) Then StrSql = StrSql & ",tenro2"
                If Not EsNulo(rsDesAD!estrnro2) Then StrSql = StrSql & ",estrnro2"
                If Not EsNulo(rsDesAD!te3) Then StrSql = StrSql & ",tenro3"
                If Not EsNulo(rsDesAD!estrnro3) Then StrSql = StrSql & ",estrnro3"
                'If Not EsNulo(rsDesAD!te4) Then StrSql = StrSql & ",tenro4"
                'If Not EsNulo(rsDesAD!estrnro4) Then StrSql = StrSql & ",estrnro4"
                'If Not EsNulo(rsDesAD!te5) Then StrSql = StrSql & ",te5nro"
                'If Not EsNulo(rsDesAD!estrnro5) Then StrSql = StrSql & ",estrnro5"
                StrSql = StrSql & ")"
                                        
                'EAM- OJO el modelo de asiento esta puesto fijo 1
                StrSql = StrSql & " VALUES (" & acnovnro & ",0,1," & rsAP!Concnro & " ," & rsAP!Tpanro & ",1"
            
                If Not EsNulo(rsDesAD!te1) Then StrSql = StrSql & "," & rsDesAD!te1
                If Not EsNulo(rsDesAD!estrnro1) Then StrSql = StrSql & "," & rsDesAD!estrnro1
                If Not EsNulo(rsDesAD!te2) Then StrSql = StrSql & "," & rsDesAD!te2
                If Not EsNulo(rsDesAD!estrnro2) Then StrSql = StrSql & "," & rsDesAD!estrnro2
                If Not EsNulo(rsDesAD!te3) Then StrSql = StrSql & "," & rsDesAD!te3
                If Not EsNulo(rsDesAD!estrnro3) Then StrSql = StrSql & "," & rsDesAD!estrnro3
                'If Not EsNulo(rsDesAD!te4) Then StrSql = StrSql & "," & rsDesAD!te4
                'If Not EsNulo(rsDesAD!estrnro4) Then StrSql = StrSql & "," & rsDesAD!estrnro4
                'If Not EsNulo(rsDesAD!te5) Then StrSql = StrSql & "," & rsDesAD!te5
                'If Not EsNulo(rsDesAD!estrnro5) Then StrSql = StrSql & "," & rsDesAD!estrnro5
                StrSql = StrSql & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "Se genera el desglose de la novedad"
                End If
                
                'EAM- Acumulo el total de horas desglosadas para luego restarlo al total del AP
                totalHsDis = totalHsDis + rsDesAD!canthoras
                rsDesAD.MoveNext
    
            Loop
                    
            'EAM- Si el saldo es mayor a 0 debo insertar la novedad sin distribución
            If ((rsAP!dgticant - totalHsDis) > 0) Then
            
                Horas = rsAP!dgticant - totalHsDis
                StrSql = " INSERT INTO gti_acunov (ternro,concnro,tpanro,gpanro,acnovvalor"
                If Aprobadas Then
                    StrSql = StrSql & ",acnovfecaprob"
                End If
                StrSql = StrSql & " ) VALUES ( " & NroTer & "," & rsAP!Concnro & "," & rsAP!Tpanro & "," & nroproc & "," & Horas
                If Aprobadas Then
                    StrSql = StrSql & "," & ConvFecha(Date)
                End If
                StrSql = StrSql & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "Se genera la novedad de GTI"
                End If
                                
            End If
            
            totalHsDis = 0
            rsAP.MoveNext
            
        Loop
    End If
End Sub

Public Sub politica890(Fecha As Date, NroTer As Long, HDesde As String, FDesde As Date, HHasta As String, FHasta As Date, Nro_Turno As Long, Nro_Dia As Integer, P_Asignacion As Boolean, esFeriado As Boolean, ByVal subn As Long, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Politica de Redondeo General del AD
' Autor: FGZ
' Fecha: 23/02/2004
' --------------------------------------------------------------
Dim TipoRedondeo As Integer
Dim ListaTH As String

Dim rs_Redondeo As New ADODB.Recordset
Dim rs_Gti_Acumdiario As New ADODB.Recordset

Dim Hora_a_Red As String
Dim TotHor As Single
Dim TotHorHHMM As String


    Call SetearParametrosPolitica(Detalle, ok)

    TipoRedondeo = st_TipoRedondeo
    ListaTH = st_ListaTH


    StrSql = "SELECT * FROM tipredondeo WHERE trdnro =" & TipoRedondeo
    OpenRecordset StrSql, rs_Redondeo
    
    If rs_Redondeo.EOF Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "No se encontró el Redondeo"
        End If
        Exit Sub
    Else
        If rs_Redondeo!trdtipo <> 1 Then
            If depurar Then
                Flog.writeln "No es Redondeo (Fraccionamiento)"
            End If
            Exit Sub
        End If
    End If

    StrSql = "SELECT * FROM gti_acumdiario " & _
             " WHERE (ternro = " & NroTer & ") AND " & _
             " adfecha = " & ConvFecha(p_fecha) & " AND " & _
             " thnro IN (" & ListaTH & ")"
    OpenRecordset StrSql, rs_Gti_Acumdiario
    If Not rs_Gti_Acumdiario.EOF Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & " Redondeo..."
        End If
    End If
    Do While Not rs_Gti_Acumdiario.EOF
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & " Tipo de Hora ---> " & rs_Gti_Acumdiario!thnro & " cantidad: " & rs_Gti_Acumdiario!adcanthoras
        End If
        'Redondeo del total de horas
        objFechasHoras.Convertir_A_Hora rs_Gti_Acumdiario!adcanthoras * 60, Hora_a_Red
        
        Call Redondeo_enHorasMinutos(rs_Gti_Acumdiario!Horas, rs_Redondeo!trdnro, 60, TotHorHHMM)
        TotHorHHMM = "'" & TotHorHHMM & "'"
        
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & " en horas y minutos (HHMM) " & Hora_a_Red
        End If
        objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, rs_Redondeo!trdnro, TotHor
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & " --- Tipo de redondeo " & rs_Redondeo!trdnro
            Flog.writeline Espacios(Tabulador * 3) & " --- luego del redondeo " & TotHor
        End If
        If TotHor = 0 Then
            StrSql = "DELETE FROM gti_acumdiario " & _
                 " WHERE (ternro = " & NroTer & ") AND " & _
                 " adfecha = " & ConvFecha(p_fecha) & " AND " & _
                 " thnro = " & rs_Gti_Acumdiario!thnro
        Else
            StrSql = "UPDATE gti_acumdiario SET adcanthoras =" & TotHor & _
                 " , horas = " & TotHorHHMM & _
                 " WHERE (ternro = " & NroTer & ") AND " & _
                 " adfecha = " & ConvFecha(p_fecha) & " AND " & _
                 " thnro = " & rs_Gti_Acumdiario!thnro
        End If
        objConn.Execute StrSql, , adExecuteNoRecords
        
        rs_Gti_Acumdiario.MoveNext
    Loop
End Sub


Public Sub politica894(Fecha As Date, NroTer As Long, HDesde As String, FDesde As Date, HHasta As String, FHasta As Date, Nro_Turno As Long, Nro_Dia As Integer, P_Asignacion As Boolean, esFeriado As Boolean, ByVal subn As Long, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Politica de Redondeo General del AP
' Autor: FGZ
' Fecha: 02/10/2010
' --------------------------------------------------------------
    Call SetearParametrosPolitica(Detalle, ok)

    TipoRedondeo = st_TipoRedondeo
    ListaTHAP = st_ListaTH
    UsaRedondeoHoras = True
    
End Sub

'--------------------------------------------------------------------------------
'Politicas 820
Private Sub Politica820(Fecha As Date, Ternro As Long, Nro_Turno As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Cuenta corriente de horas.
' Autor: ?
' Ultima modificacion: FGZ - 12/10/2004
'   Nueva Version estandar
' --------------------------------------------------------------
Dim Opcion As Integer
Dim ok As Boolean

    Call SetearParametrosPolitica(Detalle, ok)
    If Not ok Then
        Exit Sub
    End If
    Opcion = st_Opcion

    Select Case Opcion
    Case 1: 'Version de Estandar
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Version Estandar Nueva"
        End If
        Call Politica820_Estandar(Fecha, Ternro, Nro_Turno)
        Exit Sub
    Case 2: 'Version No Estandar
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Version No Estandar. No Actualiza el saldo"
        End If
        Call Politica820_NoEstandar(Fecha, Ternro, Nro_Turno)
    Case Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Default. Version Estandar Nueva"
        End If
        Call Politica820_Estandar(Fecha, Ternro, Nro_Turno)
        Exit Sub
    End Select
End Sub


Private Sub Politica820_Estandar(Fecha As Date, Ternro As Long, Nro_Turno As Long)
' --------------------------------------------------------------
' Descripcion: Cuenta corriente de horas.
' Autor: EPL (progress)
' Traduccion: FGZ
' Ultima modificacion: FGZ - 13/02/2004
' Ultima modificacion: FGZ - 12/10/2005
' --------------------------------------------------------------
Dim saldo_actual As Single
Dim Monto As Single
Dim objrsCC As New ADODB.Recordset

    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Dejo solo los detalles que no han sido eliminados"
    End If
    'Dejo solo los detalles que no han sido eliminados
    Call Politica820_Actualiza_Detalles_Estandar(Ternro, Fecha)

    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Genero los nuevos valores e ingreso nuevos detalles"
    End If
    'Genero los nuevos valores e ingreso nuevos detalles
    StrSql = "SELECT * FROM gti_tipo_ctacte "
    StrSql = StrSql & " INNER JOIN gti_config_ctacte ON gti_config_ctacte.tipccnro = gti_tipo_ctacte.tipccnro "
    StrSql = StrSql & " WHERE (gti_tipo_ctacte.tipccdesde <= " & ConvFecha(Fecha) & " OR gti_tipo_ctacte.tipccdesde is null) "
    StrSql = StrSql & " AND (gti_tipo_ctacte.tipcchasta >= " & ConvFecha(Fecha) & " OR gti_tipo_ctacte.tipcchasta is null) "
    StrSql = StrSql & " AND (gti_config_ctacte.turnro = " & Nro_Turno & ")"
    OpenRecordset StrSql, objrsCC
    Do While Not objrsCC.EOF
        StrSql = "SELECT * FROM gti_acumdiario WHERE (adfecha = " & ConvFecha(Fecha) & ") AND (ternro = " & Ternro & ") AND (thnro = " & objrsCC!thnro & ")"
        OpenRecordset StrSql, objRs
        If Not objRs.EOF Then
            'Como encuentro un registro en el AD, lo convierto segun en la forma en que juega
            'y luego actualizo el detalle
            If depurar Then
                Flog.writeline Espacios(Tabulador * 4) & "Convierto segun forma en que juega"
            End If
            If CBool(objrsCC!ccsigno) Then
                Monto = objRs!adcanthoras * objrsCC!ccpje / 100
            Else
                Monto = ((objRs!adcanthoras * objrsCC!ccpje / 100) * (-1))
            End If

            If depurar Then
                Flog.writeline Espacios(Tabulador * 4) & "Actualizo detalle calculado"
            End If
            Call Politica820_Actualiza_Det_Estandar(Ternro, objrsCC!tipccnro, Monto, Fecha, objrsCC!thnro, objrsCC!tipccvenc, objrsCC!tipccvigencia)
        Else
            'Si no está el AD, puede que haya sido borrado, entonces se busca el
            'detalle para ese acum. diario y si está se borra y se actualiza el saldo
            If depurar Then
                Flog.writeline Espacios(Tabulador * 4) & "Busco el detalle para ese AD y si está se borra y se actualiza el saldo"
            End If
            Call Politica820_Borra_Det_Estandar(Ternro, objrsCC!tipccnro, Fecha, objrsCC!thnro)

            GoTo Continuar
        End If

        'Actualizo el estado de los detalles
        If depurar Then
            Flog.writeline Espacios(Tabulador * 4) & "Actualizo el estado de los detalles"
        End If
        Call Politica820_Actualiza_Estado_Detalles_Estandar(Ternro, Fecha, objrsCC!tipccvenc, objrsCC!tipccvigencia)


Continuar:
        objrsCC.MoveNext
    Loop
    
' La idea es que se actualice el saldo por empleado solo una vez.
' Cuando se termine la generacion de las operaciones sobre los detalles
' (altas / borrados / modificaciones)
If depurar Then
    Flog.writeline Espacios(Tabulador * 3) & "Actualiza el saldo"
End If
Call Politica820_Actualiza_Saldo_Estandar(Ternro, Fecha)

End Sub

Private Sub Politica820_NoEstandar(Fecha As Date, Ternro As Long, Nro_Turno As Long)
' --------------------------------------------------------------
' Descripcion: Cuenta corriente de horas.
' Autor: ?
' Ultima modificacion: FGZ - 12/03/2004
' --------------------------------------------------------------
Dim saldo_actual As Single
Dim Monto As Single
Dim objrsCC As New ADODB.Recordset
Dim Opcion As Integer
Dim ok As Boolean


    Monto = 0
    
    StrSql = "SELECT * FROM gti_tipo_ctacte "
    StrSql = StrSql & " INNER JOIN gti_config_ctacte ON gti_config_ctacte.tipccnro = gti_tipo_ctacte.tipccnro "
    StrSql = StrSql & " WHERE (gti_tipo_ctacte.tipccdesde <= " & ConvFecha(Fecha) & " OR gti_tipo_ctacte.tipccdesde is null) AND "
    StrSql = StrSql & " (gti_tipo_ctacte.tipcchasta >= " & ConvFecha(Fecha) & " OR gti_tipo_ctacte.tipcchasta is null) AND (gti_config_ctacte.turnro = " & Nro_Turno & ")"
    OpenRecordset StrSql, objrsCC
    
    If objrsCC.EOF Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "No hay datos. SQL --> " & StrSql
        End If
    End If
    Do While Not objrsCC.EOF
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "tipo de hora " & objrsCC!thnro
        End If
        StrSql = "SELECT * FROM gti_acumdiario WHERE (adfecha = " & ConvFecha(Fecha) & ") AND (ternro = " & Ternro & ") AND (thnro = " & objrsCC!thnro & ")"
        OpenRecordset StrSql, objRs
        If Not objRs.EOF Then
             If objrsCC!ccsigno Then
                Monto = objRs!adcanthoras * objrsCC!ccpje / 100
             Else
                Monto = ((objRs!adcanthoras * objrsCC!ccpje / 100) * (-1))
             End If
             Flog.writeline Espacios(Tabulador * 2) & "Monto " & Monto
        Else
            'Si no está el AD, puede que haya sido borrado, entonces se busca el
            'detalle para ese acum. diario y si está se borra y se actualiza el saldo
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "No está el AD, puede que se haya borrado, ==> se busca el detalle para ese AD y si está se borra y se actualiza el saldo"
            End If
            Call Politica820BorraDet(Ternro, objrsCC!tipccnro, Fecha, objrsCC!thnro)
            
            GoTo Continuar
        End If
        
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Genero el Saldo (gti_ctacte_saldo)"
        End If
        StrSql = "SELECT * FROM gti_ctacte_saldo WHERE (ternro =" & Ternro & ") AND (tipccnro = " & objrsCC!tipccnro & ")"
        OpenRecordset StrSql, objRs
        If objRs.EOF Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "insertando saldo. " & StrSql
            End If
            StrSql = "INSERT INTO gti_ctacte_saldo(ternro,tipccnro,saldoccvalor) VALUES ("
            'StrSql = StrSql & Ternro & "," & objrsCC!tipccnro & "," & ValorNulo & ")"
            StrSql = StrSql & Ternro & "," & objrsCC!tipccnro & ",0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "saldo insertado."
            End If
        End If
        saldo_actual = IIf(IsNull(objRs!saldoccvalor), 0, objRs!saldoccvalor)
        If (saldo_actual + Monto) < 0 Then
            If objrsCC!tipccneg Then
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "Actualizo saldo"
                End If
                Call Politica820ActualizaDet(Ternro, objrsCC!tipccnro, Monto, Fecha, objrsCC!thnro)
            Else
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "El Saldo del Cta. es < 0 y no se permiten saldos (-)"
                End If
              ' El Saldo del Cta. es < 0 y no se permiten saldos (-) */
              'message "Saldo (-) No Permitido, Cta. Cte. : " + string(per.gti_tipo_ctacte.tipccnro, ">>>>9").
            End If
        Else
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Actualizo saldo neg"
            End If
            Call Politica820ActualizaDet(Ternro, objrsCC!tipccnro, Monto, Fecha, objrsCC!thnro)
        End If
        
Continuar:
        objrsCC.MoveNext
    Loop
   
End Sub


Private Sub Politica820_Actualiza_Det_Estandar(ByVal Ternro As Long, ByVal nrocc As Long, ByVal Monto As Single, ByVal Fecha As Date, ByVal thnro As Integer, ByVal cvigen As Boolean, ByVal vigen As Integer)
' --------------------------------------------------------------
' Descripcion: Actualiza gti_ctacte_det.
' Autor: ?
' Ultima modificacion: FGZ - 13/02/2004
' --------------------------------------------------------------
Dim rs As New ADODB.Recordset

    StrSql = "SELECT * FROM gti_ctacte_det " & _
             " WHERE (ternro = " & Ternro & ") AND (tipccnro = " & nrocc & ") AND " & _
             "(detccfecha = " & ConvFecha(Fecha) & ") AND (thnro = " & thnro & ")"
    OpenRecordset StrSql, rs, adLockOptimistic

    If rs.EOF Then
        If cvigen Then
            StrSql = "INSERT INTO gti_ctacte_det(ternro,tipccnro,detccfecha,thnro,detccestado,detccfvenc,detccvalor) VALUES (" & _
                     Ternro & "," & nrocc & "," & ConvFecha(Fecha) & "," & thnro & ",-1," & ConvFecha(DateAdd("m", vigen, Fecha)) & ",0)"
        Else
            StrSql = "INSERT INTO gti_ctacte_det(ternro,tipccnro,detccfecha,thnro,detccestado,detccvalor) VALUES (" & _
                     Ternro & "," & nrocc & "," & ConvFecha(Fecha) & "," & thnro & ",-1,0)"
        End If
        objConn.Execute StrSql, , adExecuteNoRecords
    End If


    StrSql = "SELECT * FROM gti_ctacte_det " & _
             " WHERE (ternro = " & Ternro & ") AND (tipccnro = " & nrocc & ") AND " & _
             "(detccfecha = " & ConvFecha(Fecha) & ") AND (thnro = " & thnro & ")"
    OpenRecordset StrSql, rs, adLockOptimistic

    StrSql = "UPDATE gti_ctacte_det SET detccvalor = " & Monto & " WHERE (ternro = " & Ternro & ") AND (tipccnro = " & nrocc & ") AND " & _
             "(detccfecha = " & ConvFecha(Fecha) & ") AND (thnro = " & thnro & ")"
    objConn.Execute StrSql, , adExecuteNoRecords


If rs.State = adStateOpen Then rs.Close
Set rs = Nothing
End Sub

Private Sub Politica820_Actualiza_Detalles_Estandar(ByVal Ternro As Long, ByVal Fecha As Date)
' --------------------------------------------------------------
' Descripcion: Actualiza gti_ctacte_det.
' Autor: FGZ
' Ultima modificacion: 19/01/2005
' --------------------------------------------------------------
Dim rs_gti_ctacte_det As New ADODB.Recordset
Dim objrsCC As New ADODB.Recordset

    StrSql = "SELECT * FROM gti_ctacte_det "
    StrSql = StrSql & " WHERE ternro = " & Ternro
    StrSql = StrSql & " AND detccfecha = " & ConvFecha(Fecha)
    If rs_gti_ctacte_det.State = adStateOpen Then rs_gti_ctacte_det.Close
    OpenRecordset StrSql, rs_gti_ctacte_det
    Do While Not rs_gti_ctacte_det.EOF
        StrSql = "SELECT * FROM gti_config_ctacte "
        StrSql = StrSql & " INNER JOIN gti_tipo_ctacte ON gti_config_ctacte.tipccnro = gti_tipo_ctacte.tipccnro "
        StrSql = StrSql & " WHERE thnro = " & rs_gti_ctacte_det!thnro
        StrSql = StrSql & " AND gti_config_ctacte.turnro = " & Nro_Turno
        StrSql = StrSql & " AND (gti_tipo_ctacte.tipccdesde <= " & ConvFecha(Fecha) & " OR gti_tipo_ctacte.tipccdesde is null) "
        StrSql = StrSql & " AND (gti_tipo_ctacte.tipcchasta >= " & ConvFecha(Fecha) & " OR gti_tipo_ctacte.tipcchasta is null) "
        If objrsCC.State = adStateOpen Then objrsCC.Close
        OpenRecordset StrSql, objrsCC
        If objrsCC.EOF Then
            'el tipo de hora ya no esta configurado para el turno en ese tipo de cta cte
            '==>
            'borro el detalle y
            StrSql = "DELETE FROM  gti_ctacte_det WHERE detccnro = " & rs_gti_ctacte_det!detccnro
            objConn.Execute StrSql, , adExecuteNoRecords
            
'            'actualizo el saldo
'            StrSql = "SELECT * FROM gti_ctacte_saldo WHERE (ternro = " & Ternro & ") AND (tipccnro = " & rs_CC!tipccnro & ")"
'            OpenRecordset StrSql, rs
'            If rs.EOF Then
'                StrSql = "INSERT INTO gti_ctacte_saldo(ternro,tipccnro,saldoccvalor) VALUES ("
'                StrSql = StrSql & Ternro & "," & rs_CC!tipccnro & "," & rs_CC!monto & ")"
'            Else
'                StrSql = "UPDATE gti_ctacte_saldo SET saldoccvalor = " & rs_CC!monto & _
'                         " WHERE (ternro =" & Ternro & ") AND (tipccnro = " & rs_CC!tipccnro & ")"
'            End If
'            objConn.Execute StrSql, , adExecuteNoRecords
        End If
        
        rs_gti_ctacte_det.MoveNext
    Loop
    

    'Cierro y Libero
    If rs_gti_ctacte_det.State = adStateOpen Then rs_gti_ctacte_det.Close
    If objrsCC.State = adStateOpen Then objrsCC.Close
    
    Set rs_gti_ctacte_det = Nothing
    Set objrsCC = Nothing
End Sub

Private Sub Politica820_Actualiza_Detalles_Estandar_OLD(ByVal Ternro As Long, ByVal Fecha As Date)
' --------------------------------------------------------------
' Descripcion: Actualiza gti_ctacte_det.
' Autor: EPL
' Ultima modificacion: FGZ - 13/02/2004
' --------------------------------------------------------------
Dim rs_gti_ctacte_det As New ADODB.Recordset
Dim rs_Gti_Acumdiario As New ADODB.Recordset

    StrSql = "SELECT * FROM gti_ctacte_det WHERE (ternro = " & Ternro & ") " & _
             " AND (detccfvenc <= " & ConvFecha(Fecha) & ")"
    OpenRecordset StrSql, rs_gti_ctacte_det, adLockOptimistic
    'OpenRecordset StrSql, rs_gti_ctacte_det
    
    Do While Not rs_gti_ctacte_det.EOF
        StrSql = "SELECT * FROM gti_acumdiario WHERE ternro = " & Ternro & _
                 " AND adfecha = " & ConvFecha(Fecha) & _
                 " AND thnro = " & rs_gti_ctacte_det!thnro
        OpenRecordset StrSql, rs_Gti_Acumdiario, adLockOptimistic

        If rs_Gti_Acumdiario.EOF Then
            StrSql = "DELETE FROM  gti_ctacte_det WHERE detccnro = " & rs_gti_ctacte_det!detccnro
            objConn.Execute StrSql, , adExecuteNoRecords
        End If

        rs_gti_ctacte_det.MoveNext
    Loop

' Cierro y Libero
If rs_gti_ctacte_det.State = adStateOpen Then rs_gti_ctacte_det.Close
If rs_Gti_Acumdiario.State = adStateOpen Then rs_Gti_Acumdiario.Close
Set rs_Gti_Acumdiario = Nothing
Set rs_gti_ctacte_det = Nothing
End Sub


Private Sub Politica820_Actualiza_Estado_Detalles_Estandar(ByVal Ternro As Long, ByVal Fecha As Date, ByVal tipccvenc As Date, ByVal tipccvigencia As Boolean)
' --------------------------------------------------------------
' Descripcion: Actualiza gti_ctacte_det siempre y cuando utilice givencia.
' Autor: EPL
' Ultima modificacion: FGZ - 13/02/2004
' --------------------------------------------------------------
Dim rs_gti_tipo_ctacte As New ADODB.Recordset

    StrSql = "SELECT * FROM gti_tipo_ctacte WHERE (tipccdesde <= " & ConvFecha(Fecha) & " OR tipccdesde is null)" & _
             " AND (tipcchasta >= " & ConvFecha(Fecha) & " OR tipcchasta is null)" & _
             " AND tipccvenc = -1"
    OpenRecordset StrSql, rs_gti_tipo_ctacte, adLockOptimistic

    Do While Not rs_gti_tipo_ctacte.EOF
        StrSql = "UPDATE gti_ctacte_det SET detccestado = 0 WHERE ternro = " & Ternro & _
                 " AND tipccnro =" & rs_gti_tipo_ctacte!tipccnro & _
                 " AND detccfvenc <= " & ConvFecha(Fecha)
        objConn.Execute StrSql, , adExecuteNoRecords

        rs_gti_tipo_ctacte.MoveNext
    Loop

' Cierro y Libero
If rs_gti_tipo_ctacte.State = adStateOpen Then rs_gti_tipo_ctacte.Close
Set rs_gti_tipo_ctacte = Nothing
End Sub

Private Sub Politica820_Actualiza_Saldo_Estandar(ByVal Ternro As Long, ByVal Fecha As Date)
' --------------------------------------------------------------
' Descripcion: Actualiza Saldo.
' Autor: EPL
' Ultima modificacion: FGZ - 13/02/2004
' --------------------------------------------------------------
Dim rs_CC As New ADODB.Recordset
Dim rs As New ADODB.Recordset
Dim Monto As Double

    StrSql = "SELECT sum(gti_ctacte_det.detccvalor) AS Monto, gti_tipo_ctacte.tipccnro FROM gti_tipo_ctacte "
    StrSql = StrSql & " INNER JOIN gti_ctacte_det ON gti_tipo_ctacte.tipccnro = gti_ctacte_det.tipccnro "
    StrSql = StrSql & " WHERE (tipccdesde <= " & ConvFecha(Fecha) & " OR tipccdesde is null) "
    StrSql = StrSql & " AND (tipcchasta >= " & ConvFecha(Fecha) & " OR tipcchasta is null) "
    StrSql = StrSql & " AND ternro = " & Ternro & " AND detccestado = -1 "
    StrSql = StrSql & " GROUP BY gti_tipo_ctacte.tipccnro"
    OpenRecordset StrSql, rs_CC

    If Not rs_CC.EOF Then
        StrSql = "SELECT * FROM gti_ctacte_saldo WHERE (ternro = " & Ternro & ") AND (tipccnro = " & rs_CC!tipccnro & ")"
        OpenRecordset StrSql, rs
        If rs.EOF Then
            StrSql = "INSERT INTO gti_ctacte_saldo(ternro,tipccnro,saldoccvalor) VALUES ("
            StrSql = StrSql & Ternro & "," & rs_CC!tipccnro & "," & rs_CC!Monto & ")"
        Else
            StrSql = "UPDATE gti_ctacte_saldo SET saldoccvalor = " & rs_CC!Monto & _
                     " WHERE (ternro =" & Ternro & ") AND (tipccnro = " & rs_CC!tipccnro & ")"
        End If
        objConn.Execute StrSql, , adExecuteNoRecords
    End If

    ' Cierro y Libero
    If rs_CC.State = adStateOpen Then rs_CC.Close
    If rs.State = adStateOpen Then rs.Close
    Set rs_CC = Nothing
    Set rs = Nothing
End Sub

Private Sub Politica820_Borra_Det_Estandar(Ternro As Long, nrocc As Long, Fecha As Date, thnro As Integer)
' --------------------------------------------------------------
' Descripcion: Actualiza y borra de gti_ctacte_det.
' Autor: EPL
' Ultima modificacion: FGZ - 13/02/2004
' --------------------------------------------------------------
Dim Monto As Single
Dim objRs As New ADODB.Recordset
Dim objrsBuf As New ADODB.Recordset

    StrSql = "SELECT * FROM gti_ctacte_det WHERE (ternro = " & Ternro & ") AND " & _
             "(tipccnro = " & nrocc & ") AND (detccfecha = " & ConvFecha(Fecha) & ") AND " & _
             "(thnro =" & thnro & ")"
    OpenRecordset StrSql, objRs
    If objRs.EOF Then Exit Sub

    ' Borra el Detalle
    StrSql = "DELETE FROM gti_ctacte_det WHERE (ternro = " & Ternro & ") AND " & _
             "(tipccnro = " & nrocc & ") AND (detccfecha = " & ConvFecha(Fecha) & ") AND " & _
             "(thnro =" & thnro & ")"
    objConn.Execute StrSql, , adExecuteNoRecords

    ' Cierro y Libero
    If objrsBuf.State = adStateOpen Then objrsBuf.Close
    If objRs.State = adStateOpen Then objRs.Close
    Set objrsBuf = Nothing
    Set objRs = Nothing
End Sub

Private Sub Politica820ActualizaDet(Ternro As Long, nrocc As Long, Monto As Single, Fecha As Date, thnro As Integer)
' --------------------------------------------------------------
' Descripcion: Actualiza gti_ctacte_det.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' --------------------------------------------------------------

Dim objRs As New ADODB.Recordset
Dim objrsBuf As New ADODB.Recordset

    StrSql = "SELECT * FROM gti_ctacte_det "
    StrSql = StrSql & " WHERE (ternro = " & Ternro & ") AND "
    StrSql = StrSql & " (tipccnro = " & nrocc & ") AND "
    StrSql = StrSql & " (detccfecha = " & ConvFecha(Fecha) & ") AND"
    StrSql = StrSql & " (thnro = " & thnro & ")"
    OpenRecordset StrSql, objRs
    If objRs.EOF Then
        StrSql = "INSERT INTO gti_ctacte_det(ternro,tipccnro,detccfecha,thnro,detcccomp,detccvalor) "
        StrSql = StrSql & " VALUES ("
        StrSql = StrSql & Ternro & ","
        StrSql = StrSql & nrocc & ","
        StrSql = StrSql & ConvFecha(Fecha) & ","
        StrSql = StrSql & thnro & ",0" & ","
        StrSql = StrSql & Monto
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
    End If
        
    StrSql = "UPDATE gti_ctacte_det SET "
    StrSql = StrSql & " detccvalor = " & Monto
    StrSql = StrSql & " WHERE (ternro = " & Ternro & ") AND "
    StrSql = StrSql & " (tipccnro = " & nrocc & ") AND "
    StrSql = StrSql & " (detccfecha = " & ConvFecha(Fecha) & ") AND "
    StrSql = StrSql & " (thnro = " & thnro & ")"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    'Busca si estaba compensado con alguno
    If objRs!detcccomp Then
        StrSql = "SELECT * FROM gti_ctacte_det WHERE detccidcomp = " & objRs!detccnro
        OpenRecordset StrSql, objrsBuf
        If Not objrsBuf.EOF Then
            'objrsBuf!detccidcomp = 0
            'objRs!detcccomp = CInt(False)
            StrSql = "UPDATE gti_ctacte_det SET "
            StrSql = StrSql & " detccidcomp = 0"
            StrSql = StrSql & " ,detcccomp = 0"
            StrSql = StrSql & " WHERE detccidcomp = " & objRs!detccnro
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
    End If
    
    If Not EsNulo(objRs!detccidcomp) Then
        StrSql = "SELECT * FROM gti_ctacte_det WHERE detccnro= " & objRs!detccidcomp
        OpenRecordset StrSql, objrsBuf
        If Not objrsBuf.EOF Then
            'objrsBuf!detcccomp = CInt(False)
            'objRs!detccidcomp = 0
            
            StrSql = "UPDATE gti_ctacte_det SET "
            StrSql = StrSql & " detccidcomp = 0"
            StrSql = StrSql & " ,detcccomp = 0"
            StrSql = StrSql & " WHERE detccnro= " & objRs!detccidcomp
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
        
        StrSql = "SELECT * FROM gti_ctacte_det "
        StrSql = StrSql & " WHERE (detcccomp = 0) AND "
        StrSql = StrSql & " (detccvalor = (" & objRs!detccvalor * -1 & ")) AND "
        StrSql = StrSql & " (detccfecha  <= " & ConvFecha(objRs!detccfecha) & " )"
        OpenRecordset StrSql, objrsBuf
        If Not objrsBuf.EOF Then
            'objRs!detccidcomp = objrsBuf!detccnro
            'objrsBuf!detcccomp = CInt(True)
            
            StrSql = "UPDATE gti_ctacte_det SET "
            StrSql = StrSql & " detccidcomp = " & objrsBuf!detccnro
            StrSql = StrSql & " ,detcccomp = -1"
            StrSql = StrSql & " WHERE (detcccomp = 0) AND "
            StrSql = StrSql & " (detccvalor = (" & objRs!detccvalor * -1 & ")) AND "
            StrSql = StrSql & " (detccfecha  <= " & ConvFecha(objRs!detccfecha) & " )"
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
    End If
    
End Sub

Private Sub Politica820BorraDet(Ternro As Long, nrocc As Long, Fecha As Date, thnro As Integer)
' --------------------------------------------------------------
' Descripcion: Actualiza y borra de gti_ctacte_det.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' --------------------------------------------------------------

Dim Monto As Single
Dim objRs As New ADODB.Recordset
Dim objrsBuf As New ADODB.Recordset
  
  
    StrSql = "SELECT * FROM gti_ctacte_det WHERE (ternro = " & Ternro & ") AND " & _
             "(tipccnro = " & nrocc & ") AND (detccfecha = " & ConvFecha(Fecha) & ") AND " & _
             "(thnro =" & thnro & ")"
    OpenRecordset StrSql, objRs
    If objRs.EOF Then Exit Sub
    Monto = IIf(IsNull(objRs!detccvalor), 0, objRs!detccvalor)
    
    ' Busca si estaba compensado con alguno
    StrSql = "UPDATE gti_ctacte_det SET detccidcomp = 0 WHERE detccidcomp = " & objRs!detccnro
    objConn.Execute StrSql, , adExecuteNoRecords
    
    ' Busca si compensaba a alguien
    StrSql = "UPDATE gti_ctacte_det SET detcccomp = " & CInt(False) & " WHERE detccnro = " & objRs!detccidcomp
    objConn.Execute StrSql, , adExecuteNoRecords
    
    ' Actualiza el Saldo
    StrSql = "UPDATE gti_ctacte_saldo SET saldoccvalor = " & objRs!saldoccvalor - Monto & " WHERE (ternro =" & Ternro & ") AND (tipccnro = " & nrocc & ")"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    ' Borra el Detalle
    StrSql = "DELETE FROM gti_ctacte_det WHERE (ternro = " & Ternro & ") AND " & _
             "(tipccnro = " & nrocc & ") AND (detccfecha = " & ConvFecha(Fecha) & ") AND " & _
             "(thnro =" & thnro & ")"
    objConn.Execute StrSql, , adExecuteNoRecords
      
End Sub
'politicas 820
'--------------------------------------------------------------------------------

Public Sub Politica4(subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' Descripcion: Notificaciones Horarias a partes diarios de asignacion horaria.
' Autor: Margiotta, Emanuel
' Ultima modificacion:
' --------------------------------------------------------------
    
    Select Case subn
        Case 1:
            Call Politica4V1
        Case 2:
            Call Politica4V2
        Case Else:
            Flog.writeline Espacios(Tabulador * 2) & "Versión de la Polica no configurada. Se toma por default la versión 1"
            Call Politica4V1
    End Select
    
End Sub


Public Sub Politica4V1()
' --------------------------------------------------------------
' Descripcion: Notificaciones Horarias a partes diarios de asignacion horaria.
'              Custom para Sykes.
' Autor: FGZ - 07/04/2011
' Ultima modificacion:
' --------------------------------------------------------------
Dim rs_Notif As New ADODB.Recordset
'Dim rs_Det As New ADODB.Recordset
Dim rs_Parte As New ADODB.Recordset

'Dim rs_Tar As New ADODB.Recordset

Dim Descripcion As String
Dim DescripcionExt As String
Dim Tipo As Long
Dim GCPNRO As Long
'Dim Dias As Long
'Dim Resto As Long
'Dim Orden As Long

Dim TotHor As Single
Dim TotHorHHMM As String

Dim HDesde1 As String
Dim HHasta1 As String
Dim Pausa As Long
Dim Observacion As String
Dim canthoras As Double
Dim canthorasnoc As Double
Dim MinHoras As Double
Dim MaxHoras As Double

Dim Sem_FD As Date
Dim Sem_FH As Date

    'Las notificaciones estan en la tabla WC_MOV_HORARIOS

    'CREATE TABLE [dbo].[WC_MOV_HORARIOS](
    '      [bpronro] [int] NOT NULL CONSTRAINT [DF_WC_MOV_HORARIOS_bpronro]  DEFAULT ((0)),
    '      [idtarjeta] [varchar](30) NOT NULL,
    '      [tiptarnro] [int] NOT NULL,
    '      [ternro] [int] NULL,
    '      [fechor] [datetime] NOT NULL,
    '      [fecinidia] [datetime] NOT NULL,
    '      [fecfindia] [datetime] NOT NULL,
    '      [horini] [varchar](4)  NOT NULL,
    '      [horfin] [varchar](4)  NOT NULL,
    '      [desmin] [int] NOT NULL CONSTRAINT [DF_WC_MOV_HORARIOS_desmin]  DEFAULT ((0)),
    '      [legautor] [int] NOT NULL,
    '      [manual] [smallint] NOT NULL CONSTRAINT [DF_Table_1_legmanual]  DEFAULT ((0)),
    '      [fecdesde] [datetime] NOT NULL,
    '      [Fechasta] Not [DateTime]
    ') ON [PRIMARY]
    'GO
   
    
    'Busco el ultimo movimiento en vigencia
    StrSql = "SELECT * FROM WC_MOV_HORARIOS " ' WHERE fechor = " & ConvFecha(p_fecha)
    StrSql = StrSql & " WHERE ternro = " & Empleado.Ternro
    StrSql = StrSql & " AND fecdesde <= " & ConvFecha(p_fecha) & " AND fechasta >= " & ConvFecha(p_fecha)
    StrSql = StrSql & " ORDER BY fecdesde desc, fechasta desc"
    OpenRecordset StrSql, rs_Notif
    If Not rs_Notif.EOF Then
    
        'si existe ==> busco el dia en esa vigencia
        StrSql = "SELECT * FROM WC_MOV_HORARIOS WHERE fechor = " & ConvFecha(p_fecha)
        StrSql = StrSql & " AND ternro = " & Empleado.Ternro
        StrSql = StrSql & " AND fecdesde = " & ConvFecha(rs_Notif!fecdesde) & " AND fechasta = " & ConvFecha(rs_Notif!fechasta)
        StrSql = StrSql & " ORDER BY fecdesde desc, fechasta desc"
        OpenRecordset StrSql, rs_Notif
        If Not rs_Notif.EOF Then
            
            'datos del parte
            Observacion = "Parte automatico por notificaciones."
            Trabaja = True
            If Trabaja Then
                HDesde1 = rs_Notif!horini
                HHasta1 = rs_Notif!horfin
                
                Pausa = rs_Notif!desmin
                
                canthoras = objFechasHoras.HorasInterseccion(rs_Notif!fecinidia, HDesde1, rs_Notif!fecfindia, HHasta1, rs_Notif!fecinidia, HDesde1, rs_Notif!fecfindia, HHasta1)
                MinHoras = 0
                MaxHoras = 0


                ' HJI - 01/02/2012: Voy a intentar determinar si es un turno nocturno
                canthorasnoc = 0
                If depurar Then
                     Flog.writeline Espacios(Tabulador * 3) & "  ==> Fecha Inicio Dia: " & rs_Notif!fecinidia
                     Flog.writeline Espacios(Tabulador * 3) & "  ==> Fecha Fin    Dia: " & rs_Notif!fecfindia
                     Flog.writeline Espacios(Tabulador * 3) & "  ==> Hora Desde: " & HDesde1
                     Flog.writeline Espacios(Tabulador * 3) & "  ==> Hora Hasta: " & HHasta1
                End If
                If (rs_Notif!fecinidia = rs_Notif!fecfindia) Then ' El horario se desarrolla en el mismo dia
                       'Aca viene lo raro y creo que el problema se arrastra de otro lado, aunque es mismo dia debo ver si la hora desde es mayor a la hasta,
                       'si es asi es nocturno (deberia venir con diferentes dias pero pasa cuando el tipo no marca)
                       If (HDesde1 > HHasta1) Then
                          canthorasnoc = objFechasHoras.HorasInterseccion(rs_Notif!fecinidia, "0000", rs_Notif!fecinidia, "0500", rs_Notif!fecinidia, "0000", rs_Notif!fecinidia, HHasta1)
                          Flog.writeline Espacios(Tabulador * 3) & "  ==> Total Parcial por opcion 1a: " & canthorasnoc
                          canthorasnoc = canthorasnoc + objFechasHoras.HorasInterseccion(rs_Notif!fecinidia, "1900", rs_Notif!fecinidia, "2400", rs_Notif!fecinidia, HDesde1, rs_Notif!fecinidia, "2400")
                       Else
                          canthorasnoc = objFechasHoras.HorasInterseccion(rs_Notif!fecinidia, "0000", rs_Notif!fecfindia, "0500", rs_Notif!fecinidia, HDesde1, rs_Notif!fecfindia, HHasta1)
                          Flog.writeline Espacios(Tabulador * 3) & "  ==> Total Parcial por opcion 1b: " & canthorasnoc
                          canthorasnoc = canthorasnoc + objFechasHoras.HorasInterseccion(rs_Notif!fecinidia, "1900", rs_Notif!fecfindia, "2400", rs_Notif!fecinidia, HDesde1, rs_Notif!fecfindia, HHasta1)
                       End If
                Else
                       canthorasnoc = objFechasHoras.HorasInterseccion(rs_Notif!fecinidia, "1900", rs_Notif!fecinidia, "2400", rs_Notif!fecinidia, HDesde1, rs_Notif!fecinidia, "2400")
                       Flog.writeline Espacios(Tabulador * 3) & "  ==> Total Parcial por opcion 2: " & canthorasnoc
                       canthorasnoc = canthorasnoc + objFechasHoras.HorasInterseccion(rs_Notif!fecfindia, "0000", rs_Notif!fecfindia, "0500", rs_Notif!fecfindia, "0000", rs_Notif!fecfindia, HHasta1)
                End If
                

                If (canthorasnoc >= 3.5) Then
                         TotHor = canthorasnoc
                         TotHorHHMM = CHoras(TotHor, 60)
                         Tipo_Hora = 8

                         StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                         StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                         StrSql = StrSql & " thnro,turnro,horrealent,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                         StrSql = StrSql & TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''"
                         StrSql = StrSql & "," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                         StrSql = StrSql & ValorNulo & "," & Empleado.Ternro & "," & Tipo_Hora & "," & Nro_Turno & ","
                         StrSql = StrSql & "'',''," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                         objConn.Execute StrSql, , adExecuteNoRecords
                         If depurar Then
                             Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & Tipo_Hora & "- Cantidad: " & canthorasnoc & " hs."
                         End If
                Else
                         If depurar Then
                             Flog.writeline Espacios(Tabulador * 3) & "  ==> No llega a Jornada Nocturna: " & Tipo_Hora & "- Cantidad: " & canthorasnoc & " hs."
                         End If
                End If
            Else
                'Dia libre
                HDesde1 = ""
                HHasta1 = ""
                Pausa = 0
                canthoras = 0
                MinHoras = 0
                MaxHoras = 0
            End If
        
        
            'gti_cabparte
            StrSql = "SELECT * FROM gti_detturtemp "
            StrSql = StrSql & " INNER JOIN gti_cabparte ON gti_cabparte.gcpnro = gti_detturtemp.gcpnro "
            StrSql = StrSql & " WHERE (ternro = " & Empleado.Ternro & ")"
            StrSql = StrSql & " AND (gttempdesde <= " & ConvFecha(p_fecha) & ") "
            StrSql = StrSql & " AND (" & ConvFecha(p_fecha) & " <= gttemphasta)"
            OpenRecordset StrSql, rs_Parte
            If Not rs_Parte.EOF Then
                'Si existe ==> lo actualizo
    
                StrSql = "UPDATE gti_detturtemp SET "
                StrSql = StrSql & " ttemphdesde1 =" & "'" & HDesde1 & "'"
                StrSql = StrSql & ", ttemphhasta1 =" & "'" & HHasta1 & "'"
                StrSql = StrSql & ", ttempobs =" & "'" & Observacion & "'"
                StrSql = StrSql & ", ttemplibre =" & CInt(Not Trabaja)
                StrSql = StrSql & ", diacanthoras =" & canthoras
                StrSql = StrSql & ", diaminhoras =" & MinHoras
                StrSql = StrSql & ", diamaxhoras =" & MaxHoras
                StrSql = StrSql & " WHERE ternro = " & Empleado.Ternro
                StrSql = StrSql & " AND gttempdesde = " & ConvFecha(rs_Parte!gttempdesde)
                StrSql = StrSql & " AND gttemphasta = " & ConvFecha(rs_Parte!gttemphasta)
                objConn.Execute StrSql, , adExecuteNoRecords
            
            Else
                'Creo un parte nuevo
                If (rs_Notif!fecdesde + 6) >= (rs_Notif!fechor + 6) Then
                    'semana 1
                    Sem_FD = rs_Notif!fecdesde
                    Sem_FH = rs_Notif!fecdesde + 6
                Else
                    'semana 2
                    Sem_FD = rs_Notif!fecdesde + 7
                    Sem_FH = rs_Notif!fechasta
                End If
                
                Sem_FD = p_fecha
                Sem_FH = p_fecha
                Descripcion = "Notif Auto leg " & Empleado.Legajo & " " & Format(Sem_FD, "dd/mm/yyyy")
                Descripcion = Descripcion & " " & IIf(Not IsNull(Sem_FH), Format(Sem_FH, "dd/mm/yyyy"), " #")
                DescripcionExt = Descripcion
                Descripcion = Left(Descripcion, 30)
                Observacion = "Parte automatico por notificaciones."
                Tipo = 1    'Parte de Asignacion Horaria
                
                'Inserto cabecera
                StrSql = "INSERT INTO gti_cabparte ( "
                StrSql = StrSql & "gcpdesabr , gcpdesext, gcpdesde, gcphasta "
                StrSql = StrSql & ", Empnro, gtpnro, gcpcerrado, gcpfeccierre, gcpusrcierre, ft, ftap "
                StrSql = StrSql & ")"
                StrSql = StrSql & "VALUES( "
                StrSql = StrSql & "'" & Descripcion & "','" & DescripcionExt & "'," & ConvFecha(Sem_FD) & "," & ConvFecha(Sem_FH) & ",0"
                StrSql = StrSql & "," & Tipo & ",0,NULL,NULL,0,0"
                StrSql = StrSql & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
            
                GCPNRO = getLastIdentity(objConn, "gti_cabparte")
            
                'Inserto el detalle
                StrSql = "INSERT INTO gti_detturtemp (ternro,gcpnro,gttempdesde,gttemphasta"
                StrSql = StrSql & ",ttemphdesde1,ttemphhasta1"
                StrSql = StrSql & ",ttempobs,ttemplibre,diacanthoras,diaminhoras,diamaxhoras) "
                StrSql = StrSql & " VALUES ("
                StrSql = StrSql & Empleado.Ternro
                StrSql = StrSql & "," & GCPNRO
                StrSql = StrSql & "," & ConvFecha(p_fecha)
                StrSql = StrSql & "," & ConvFecha(p_fecha)
                StrSql = StrSql & ",'" & HDesde1 & "', '" & HHasta1 & "'"
                StrSql = StrSql & ",'" & Observacion & "'"
                StrSql = StrSql & "," & CInt(Not Trabaja)
                StrSql = StrSql & "," & canthoras
                StrSql = StrSql & "," & MinHoras
                StrSql = StrSql & "," & MaxHoras
                StrSql = StrSql & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                
            End If
        Else
            
            'Si existe un registro que tenga incluida la fecha entonces el dia es franco
            '   sino es que no se ha informado por lo que se deberia dejar la definicion del turno (es decir, borrar parte automatico de existir)
            'Si no existe notificacion ==> se supone dia franco por lo cual cargo un parte de dia franco o borro el parte si existise
            
            'Existe una notificacion que incluya la fecha pero no tenga el dia
            StrSql = "SELECT * FROM WC_MOV_HORARIOS "
            StrSql = StrSql & " WHERE ternro = " & Empleado.Ternro
            StrSql = StrSql & " AND fecdesde <= " & ConvFecha(p_fecha) & " AND fechasta >= " & ConvFecha(p_fecha)
            OpenRecordset StrSql, rs_Notif
            If Not rs_Notif.EOF Then
                'Quiere decir que el dia es franco (o al menos no laborable)
                StrSql = "SELECT * FROM gti_detturtemp "
                StrSql = StrSql & " INNER JOIN gti_cabparte ON gti_cabparte.gcpnro = gti_detturtemp.gcpnro "
                StrSql = StrSql & " WHERE (ternro = " & Empleado.Ternro & ")"
                StrSql = StrSql & " AND ttempobs =" & "'" & Observacion & "'"
                StrSql = StrSql & " AND (gttempdesde <= " & ConvFecha(p_fecha) & ") "
                StrSql = StrSql & " AND (" & ConvFecha(p_fecha) & " <= gttemphasta)"
                OpenRecordset StrSql, rs_Parte
                If rs_Parte.EOF Then
                    'Inserto parte de dia franco? no porque por definicion todos los dias son francos
                Else
                    'borro el parte dado que por definicion todos los dias son francos
                    StrSql = "DELETE gti_detturtemp "
                    StrSql = StrSql & " WHERE (ternro = " & Empleado.Ternro & ")"
                    StrSql = StrSql & " AND ttempobs =" & "'" & Observacion & "'"
                    StrSql = StrSql & " AND (gttempdesde <= " & ConvFecha(p_fecha) & ") "
                    StrSql = StrSql & " AND (" & ConvFecha(p_fecha) & " <= gttemphasta)"
                    objConn.Execute StrSql, , adExecuteNoRecords
                End If
            Else
                'No se informó ==> dejo todo como esta
            End If
        End If
    Else
        'No se informó ==> dejo todo como esta
    End If


'Cierro y libero
If rs_Notif.State = adStateOpen Then rs_Notif.Close
If rs_Parte.State = adStateOpen Then rs_Parte.Close
Set rs_Notif = Nothing
Set rs_Parte = Nothing

End Sub



Public Sub Politica4V2()
' --------------------------------------------------------------
' Descripcion: Notificaciones Horarias a partes diarios de asignacion horaria.
' Autor: Margiotta, Emanuel - 28/12/2012
' Ultima modificacion:
' --------------------------------------------------------------
Dim rs_Notif As New ADODB.Recordset
Dim rs_Parte As New ADODB.Recordset

Dim Descripcion As String
Dim DescripcionExt As String
Dim Tipo As Long
Dim GCPNRO As Long

Dim HDesde1 As String
Dim HHasta1 As String
Dim Pausa As Long
Dim Observacion As String
Dim canthoras As Double
Dim MinHoras As Double
Dim MaxHoras As Double

    
On Error GoTo ce
    'Las notificaciones estan en la tabla WC_MOV_HORARIOS
    
    'Busco el ultimo movimiento con vigencia
    StrSql = "SELECT fecdesde,fechasta FROM WC_MOV_HORARIOS  WHERE ternro = " & Empleado.Ternro & _
            " AND fecdesde <= " & ConvFecha(p_fecha) & " AND fechasta >= " & ConvFecha(p_fecha) & _
            " ORDER BY fecdesde desc, fechasta DESC"
    OpenRecordset StrSql, rs_Notif
    
    
    If Not rs_Notif.EOF Then
        'Si existen movimientos, busco si hay uno para la fecha que se está procesando
        StrSql = "SELECT * FROM WC_MOV_HORARIOS WHERE fechor = " & ConvFecha(p_fecha) & " AND ternro = " & Empleado.Ternro & _
                " AND fecdesde = " & ConvFecha(rs_Notif!fecdesde) & " AND fechasta = " & ConvFecha(rs_Notif!fechasta) & _
                " ORDER BY fecdesde desc, fechasta desc"
        OpenRecordset StrSql, rs_Notif
        
        
        If Not rs_Notif.EOF Then
            
            'datos del parte
            Trabaja = True
            If Trabaja Then
                'FGZ - 17/06/2014 -----------------------
                'HDesde1 = rs_Notif!horini
                'HHasta1 = rs_Notif!horfin
                HDesde1 = Format(rs_Notif!horini, "0000")
                HHasta1 = Format(rs_Notif!horfin, "0000")
                Pausa = rs_Notif!desmin
                
                canthoras = objFechasHoras.HorasInterseccion(rs_Notif!fecinidia, HDesde1, rs_Notif!fecfindia, HHasta1, rs_Notif!fecinidia, HDesde1, rs_Notif!fecfindia, HHasta1)
                MinHoras = 0
                MaxHoras = 0
                
                If depurar Then
                     Flog.writeline Espacios(Tabulador * 3) & "  ==> Fecha Inicio Dia: " & rs_Notif!fecinidia
                     Flog.writeline Espacios(Tabulador * 3) & "  ==> Fecha Fin    Dia: " & rs_Notif!fecfindia
                     Flog.writeline Espacios(Tabulador * 3) & "  ==> Hora Desde: " & HDesde1
                     Flog.writeline Espacios(Tabulador * 3) & "  ==> Hora Hasta: " & HHasta1
                End If
                
                If (rs_Notif!fecinidia = rs_Notif!fecfindia) Then ' El horario se desarrolla en el mismo dia
                       
                       'Si la fecha de inicio es igual a la fecha de fin y la hora desde es mayo, el movimiento esta mal cargado
                    If (HDesde1 > HHasta1) Then
                        Flog.writeline Espacios(Tabulador * 3) & "Error al cargar los movimiento horario. La fecha desde es mayor a la fecha hasta"
                        GoTo ce
                    End If
                Else
                    Flog.writeline Espacios(Tabulador * 3) & "Turno Nocturno."
                End If
                
            Else
                'Dia libre
                HDesde1 = ""
                HHasta1 = ""
                Pausa = 0
                canthoras = 0
                MinHoras = 0
                MaxHoras = 0
            End If
        
        
            'Busca si existe la cabecera del Parte gti_cabparte
            StrSql = "SELECT * FROM gti_detturtemp " & _
                    " INNER JOIN gti_cabparte ON gti_cabparte.gcpnro = gti_detturtemp.gcpnro " & _
                    " WHERE (ternro = " & Empleado.Ternro & ") AND (gttempdesde <= " & ConvFecha(p_fecha) & ") " & _
                    " AND (" & ConvFecha(p_fecha) & " <= gttemphasta)"
            OpenRecordset StrSql, rs_Parte
            
            If Not rs_Parte.EOF Then
                'Si existe ==> lo actualizo
                StrSql = "UPDATE gti_detturtemp SET ttemphdesde1 =" & "'" & HDesde1 & "', ttemphhasta1 =" & "'" & HHasta1 & _
                        "', ttempobs =" & "'" & Observacion & "', ttemplibre =" & CInt(Not Trabaja) & ", diacanthoras = " & canthoras & _
                        ", diaminhoras =" & MinHoras & ", diamaxhoras =" & MaxHoras & _
                        " WHERE ternro = " & Empleado.Ternro & " AND gttempdesde = " & ConvFecha(rs_Parte!gttempdesde) & _
                        " AND gttemphasta = " & ConvFecha(rs_Parte!gttemphasta)
                objConn.Execute StrSql, , adExecuteNoRecords
            Else
                
             
                Descripcion = "Notif Auto leg " & Empleado.Legajo & " " & Format(p_fecha, "dd/mm/yyyy")
                Descripcion = Descripcion & " " & IIf(Not IsNull(p_fecha), Format(p_fecha, "dd/mm/yyyy"), " #")
                DescripcionExt = Descripcion
                Descripcion = Left(Descripcion, 30)
                Observacion = "Parte automatico por notificaciones."
                Tipo = 1    'Parte de Asignacion Horaria
                
                'Inserto cabecera
                StrSql = "INSERT INTO gti_cabparte (gcpdesabr , gcpdesext, gcpdesde, gcphasta " & _
                        ", Empnro, gtpnro, gcpcerrado, gcpfeccierre, gcpusrcierre, ft, ftap) " & _
                        " VALUES('" & Descripcion & "','" & DescripcionExt & "'," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",0" & _
                        "," & Tipo & ",0,NULL,NULL,0,0)"
                objConn.Execute StrSql, , adExecuteNoRecords
            
                GCPNRO = getLastIdentity(objConn, "gti_cabparte")
            
                'Inserto el detalle
                StrSql = "INSERT INTO gti_detturtemp (ternro,gcpnro,gttempdesde,gttemphasta,ttemphdesde1,ttemphhasta1" & _
                        ",ttempobs,ttemplibre,diacanthoras,diaminhoras,diamaxhoras) " & _
                        " VALUES (" & Empleado.Ternro & "," & GCPNRO & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & _
                        ",'" & HDesde1 & "', '" & HHasta1 & "'" & ",'" & Observacion & "'" & "," & CInt(Not Trabaja) & "," & canthoras & _
                        "," & MinHoras & "," & MaxHoras & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
        Else
            
            'Si existe un registro que tenga incluida el rango de fecha entonces el dia es franco y hay que dejar la definición del turno
            ' (es decir, borrar parte automatico de existir)
            
            'Existe una notificacion que incluya la fecha pero no tenga el dia
            StrSql = "SELECT * FROM WC_MOV_HORARIOS WHERE ternro = " & Empleado.Ternro & " AND fecdesde <= " & ConvFecha(p_fecha) & " AND fechasta >= " & ConvFecha(p_fecha)
            OpenRecordset StrSql, rs_Notif
            If Not rs_Notif.EOF Then
                'Quiere decir que el dia es franco (o al menos no laborable)
                StrSql = "SELECT * FROM gti_detturtemp " & _
                        " INNER JOIN gti_cabparte ON gti_cabparte.gcpnro = gti_detturtemp.gcpnro " & _
                        " WHERE (ternro = " & Empleado.Ternro & ") AND ttempobs =" & "'" & Observacion & _
                        "' AND (gttempdesde <= " & ConvFecha(p_fecha) & ") AND (" & ConvFecha(p_fecha) & " <= gttemphasta)"
                OpenRecordset StrSql, rs_Parte
                If rs_Parte.EOF Then
                    'Inserto parte de dia franco? no porque por definicion todos los dias son francos
                Else
                    'borro el parte dado que por definicion todos los dias son francos
                    StrSql = "DELETE gti_detturtemp " & _
                            " WHERE (ternro = " & Empleado.Ternro & ") AND ttempobs =" & "'" & Observacion & "'" & _
                            " AND (gttempdesde <= " & ConvFecha(p_fecha) & ") AND (" & ConvFecha(p_fecha) & " <= gttemphasta)"
                    objConn.Execute StrSql, , adExecuteNoRecords
                End If
            Else
                'No se informó ==> dejo todo como esta
            End If
        End If
    Else
        'No se informó ==> dejo todo como esta
    End If
    
    GoTo datosOK
    
ce:
    'Cierro y libero
    If rs_Notif.State = adStateOpen Then rs_Notif.Close
    If rs_Parte.State = adStateOpen Then rs_Parte.Close
    Set rs_Notif = Nothing
    Set rs_Parte = Nothing
    Exit Sub
datosOK:
    'Cierro y libero
    If rs_Notif.State = adStateOpen Then rs_Notif.Close
    If rs_Parte.State = adStateOpen Then rs_Parte.Close
    Set rs_Notif = Nothing
    Set rs_Parte = Nothing
End Sub




Public Sub Politica5()
' --------------------------------------------------------------
' Descripcion: Los Relojes Marcan las Registraciones de Entrada/Salida.
'              Customizacion para Jugos SA.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' --------------------------------------------------------------

    usaRelojEntradaSalida = True

End Sub

Public Sub politica25(ByVal subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Habilita el control de feriados.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' Ultima modificacion: FGZ - 22/01/2015 - Se transformó en Configurable
' --------------------------------------------------------------
Dim ok As Boolean
Dim Opcion As Long

'FGZ - 22/01/2015 ----------------------------------
'   UsaFeriadoConControl = True
Call SetearParametrosPolitica(Detalle, ok)
If ok Then
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Version Configurable"
    End If
    
    Opcion = st_Opcion
    If IsNull(Opcion) Or Opcion = 0 Then
        Opcion = 1
    End If
    Select Case Opcion
    Case 1: 'Sse controlan anormalidades
        FeriadoConControldeAnormalidades = True
    Case 2: 'No se controlan anormalidades
        FeriadoConControldeAnormalidades = False
    Case Else: 'Por dafult se controlan anormalidades
        FeriadoConControldeAnormalidades = True
    End Select
    UsaFeriadoConControl = True
Else
    'No está configurado como configurable. Versiones anteriores quer se mantiene por compatibilidad
    UsaFeriadoConControl = True
    FeriadoConControldeAnormalidades = True
End If
'FGZ - 22/01/2015 ----------------------------------


End Sub

Public Sub politica95()
' --------------------------------------------------------------
' Descripcion: Habilita la ventana de Embudos.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' --------------------------------------------------------------

    Forma_embudo = True
End Sub


Public Sub politica205(ByVal subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Habilita la conversion de Horas.
' Autor: ?
' Ultima modificacion: FGZ - 29/07/2003
' Ultima modificacion: FGZ - 22/01/2015 - Se transformó en Configurable
' --------------------------------------------------------------
Dim ok As Boolean
Dim Opcion As Long

    'GeneraLaborable_y_Feriado = True
    
'FGZ - 20/01/2015 ----------------------------------
Call SetearParametrosPolitica(Detalle, ok)
If ok Then
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Version Configurable"
    End If
    
    Opcion = st_Opcion
    If IsNull(Opcion) Or Opcion = 0 Then
        Opcion = 1
    End If
    FP_Feriado = Opcion
    Select Case Opcion
    Case 1: 'Solo paga la FP de tipo Feriado
        FP_Feriado = 1
    Case 2: 'Solo paga la FP de tipo Laborable
        FP_Feriado = 2
    Case 3: 'paga la FP de tipo Laborable y la de tipo feriado
        FP_Feriado = 3
    Case Else: 'Por dafult Solo paga la FP de tipo Feriado
        FP_Feriado = 1
    End Select
Else
    'No está configurado como configurable. Versiones anteriores quer se mantiene por compatibilidad
    GeneraLaborable_y_Feriado = True
    FP_Feriado = 3
End If
'FGZ - 20/01/2015 ----------------------------------

End Sub



Public Function EsDiaLibre(ByVal Fecha As Date, ByVal Fecha_Inicio As Date, ByVal Turno As Long) As Boolean
'-----------------------------------------------------------------------------------
' Autor         : FGZ
' Fecha         : 09/06/2006
' Descripcion   : procedimiento que busca si un dia es libre o no.
'-----------------------------------------------------------------------------------
Dim num_dia As Integer
Dim dif_dias As Integer
Dim rs_Turno As New ADODB.Recordset
Dim rs As New ADODB.Recordset
Dim libre As Boolean
Dim tiene_turno As Boolean

    StrSql = "SELECT turtamanio FROM gti_turno WHERE turnro = " & Turno
    OpenRecordset StrSql, rs_Turno
    If rs_Turno.EOF Then
        tiene_turno = False
    Else
        tiene_turno = True
    End If
    
    If tiene_turno Then
        dif_dias = DateDiff("d", Fecha_Inicio, Fecha) + 1
        num_dia = dif_dias Mod rs_Turno!turtamanio
        If (num_dia = 0) Then num_dia = rs_Turno!turtamanio  'es el primer dia del turno
        
        'Buscar el dia Correspondiente
        StrSql = "SELECT gti_dias.Dialibre,gti_subturno.subturdesabr FROM gti_subturno INNER JOIN gti_dias ON (gti_subturno.subturnro = gti_dias.subturnro) WHERE "
        StrSql = StrSql & " (turnro = " & Turno & ") AND (gti_dias.diaorden <= " & num_dia & ") ORDER BY diaorden DESC "
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            libre = rs!Dialibre
        End If
    End If
    EsDiaLibre = libre

'cierro y libero
If rs.State = adStateOpen Then rs.Close
If rs_Turno.State = adStateOpen Then rs_Turno.Close

Set rs = Nothing
Set rs_Turno = Nothing
End Function

Public Function Buscar_Dia_W(ByVal Fecha As Date, ByVal Fecha_Inicio As Date, ByVal Nro_Turno As Long, ByVal Ternro As Long) As Long
'-----------------------------------------------------------------------------------
' Autor         : FGZ
' Fecha         : 02/08/2005
' Descripcion   : Redefinicion del procedimiento buscar dia.
'-----------------------------------------------------------------------------------
Dim num_dia As Integer
Dim dif_dias As Integer
Dim rs_Turno As New ADODB.Recordset
Dim rs As New ADODB.Recordset
Dim NroDia As Long

    StrSql = "SELECT turtamanio FROM gti_turno WHERE turnro = " & Nro_Turno
    OpenRecordset StrSql, rs_Turno
    If rs_Turno.EOF Then
        Buscar_Dia_W = 0
        Exit Function
    End If
    
    dif_dias = DateDiff("d", Fecha_Inicio, Fecha) + 1
    num_dia = dif_dias Mod rs_Turno!turtamanio
    If (num_dia = 0) Then num_dia = rs_Turno!turtamanio  'es el primer dia del turno
    
   
    'Buscar el dia Correspondiente
    StrSql = "SELECT gti_dias.dianro,gti_subturno.subturdesabr FROM gti_subturno INNER JOIN gti_dias ON (gti_subturno.subturnro = gti_dias.subturnro) WHERE "
    StrSql = StrSql & " (turnro = " & Nro_Turno & ") AND (gti_dias.diaorden <= " & num_dia & ") ORDER BY diaorden DESC "
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        NroDia = rs!diaNro
    End If
    Buscar_Dia_W = NroDia
End Function


Public Sub Politica1000(Fecha As Date, NroTer As Long, HDesde As String, FDesde As Date, HHasta As String, FHasta As Date, Nro_Turno As Long, Nro_Dia As Integer, P_Asignacion As Boolean, esFeriado As Boolean, ByVal subn As Long, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Generacion de Horario Normal.
' Autor: ?
' Ultima modificacion: FGZ - 30/08/2005
' --------------------------------------------------------------
Dim Opcion As Integer

Call SetearParametrosPolitica(Detalle, ok)
Opcion = st_Opcion

hor_normal_amr = False

Select Case Opcion
Case 1: 'Modelo estandar
    Call Generar_Horario_Normal '
Case 2: 'Customizacion para Halliburton
    Call Generar_Horario_Normal_C1
Case 3: 'Modelo estandar para Nocturnos
        'en teoria reemplaza a la version 1 pero esta en testeo
    Call Generar_Horario_Normal_C3
Case 4: 'Modelo integrado ---- en testeo
    Call Generar_Horario_Normal_C4
Case 5: 'Modelo para pagar todo segun FP dia de origen de registraciones
    Call Generar_Horario_Normal_C5
Case 6: 'Modelo integrado ---- en testeo --- Paga según FP dia registracion, genera horas dia anterior
    Call Generar_Horario_Normal_C6
Case 7: 'Modelo estandar para Nocturnos para Cargil
    Call Generar_Horario_Normal_C7
Case 8: 'Modelo estandar para Nocturnos para Cargil
    Call Generar_Horario_Normal_C8
Case 9: 'Modelo para Sykes
    Call Generar_Horario_Normal_Sykes
Case 10: 'AMR
      Flog.writeline Espacios(Tabulador * 3) & "Version 10 - AMR"
      hor_normal_amr = True
      Call Generar_Horario_Normal
Case Else:  'modelo estandar
    Call Generar_Horario_Normal
End Select
End Sub


Public Sub Politica1001(Fecha As Date, NroTer As Long, HDesde As String, FDesde As Date, HHasta As String, FHasta As Date, Nro_Turno As Long, Nro_Dia As Integer, P_Asignacion As Boolean, esFeriado As Boolean, ByVal subn As Long, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Generacion de Horario Libre.
' Autor: ?
' Ultima modificacion: FGZ - 30/08/2005
' --------------------------------------------------------------
Dim Opcion As Integer

Call SetearParametrosPolitica(Detalle, ok)
Opcion = st_Opcion

Select Case Opcion
Case 1: 'Modelo estandar
    'soluciona problemas en turnos nocturnos
    Call Generar_Horario_Libre_STD
    Exit Sub
Case 2: 'Customizacion para Halliburton
    Call Generar_Horario_Libre_C1   '
    Exit Sub
Case 3: 'Modelo estandar nuevo
    Call Generar_Horario_Libre_3    '
    Exit Sub
Case 4:     'Modelo Detallado - Desgloce por cada par de registraciones
    'Especial para FP por cantidad de horas y/o Cantidad y Franja (AMBAS)

    'Antes esta version era del Modelo estandar - soluciona problemas en FG por cantidad de hs y franja, es decir, AMBAS
    'Call Generar_Horario_Libre_W
    
    'Pero se reemplazó por el detallado
    Call Generar_Horario_Libre_Detallado
    Exit Sub
Case 5: 'Modelo estandar Viejo, con problemas en turnos nocturnos y en FP por cantidad de hs y franja, es decir, AMBAS
    'Anda mal especialmente en AMBAS
    Call Generar_Horario_Libre
    Exit Sub
Case 6: 'Modelo basado en estandar (1) especial para nocturnos flexibles (Politica 14)
    Call Generar_Horario_Libre_NocFlex
    Exit Sub
Case 7: 'Modelo basado en estandar (1) especial para nocturnos flexibles (Politica 14) con la variante que toma el tipo de dia cuando cambia el dia
    Call Generar_Horario_Libre_NocFlex_TipDia
    Exit Sub
Case 8: 'Modelo basado en estandar (1) especial para nocturnos con la variante que toma el tipo de dia cuando cambia el dia pero no el dia(si es feriado)
    Call Generar_Horario_Libre_Noc_CambiaTipDia
    Exit Sub
    
Case Else:  'Modelo estandar Viejo, con problemas en turnos nocturnos y en FP por cantidad de hs y franja, es decir, AMBAS
    'Anda mal especialmente en AMBAS
    Call Generar_Horario_Libre      '
    Exit Sub
End Select
End Sub




'----------------------------------------------------------------------------------------------
'-------------------------------------Procedimientos internos----------------------------------
'----------------------------------------------------------------------------------------------

Private Sub Generar_Horario_Normal()
' ---------------------------------------------------------------------------------------------
' Descripcion: Procedimiento que genera el Horario normal del dia.
' Autor      :
' Fecha      :
' Ultima Mod.: 06/12/2005
' Descripcion: modifiqué la llamada a
' Call Cambiar_Horas_Desde(nro_desg, hora_desde_desg, fecha_desde_desg, False)
'      se le agrego el ultimo parametro
' ---------------------------------------------------------------------------------------------
Dim Cant_Reg As Integer
Dim Cant_Pares As Integer
Dim i As Integer
Dim par1 As String
Dim par2 As String
Dim HDesde As String
Dim HHasta As String
Dim fecpar1 As Date
Dim fecpar2 As Date
Dim anor1 As Integer
Dim anor2 As Integer
Dim Reg_Ent As Long
Dim Reg_Sal As Long
Dim otroDia As Boolean
Dim j As Integer
Dim Weekdia As Byte
Dim objrsDesgl As New ADODB.Recordset
Dim TotHor As Single
Dim TotHorHHMM As String

'FGZ - 30/08/2006
'Dim nro_desg As Integer
Dim nro_desg As Long

Dim hora_desde_desg As String
Dim hora_hasta_desg As String
Dim fecha_desde_desg As Date
Dim fecha_hasta_desg As Date
Dim Hora_a_Red As String
Dim HCDesde As String
Dim HCHasta As String
Dim cant_aux As Single
Dim CantH_Acum As Single
Dim cant_parcial As Single
Dim par As Integer
Dim rs As New ADODB.Recordset
Dim Cambio_dia As Boolean
    
'FGZ - 12/04/2006 - Arreglo de registraciones leidas y a marcar como procesadas
Dim reg(1 To 100) As TRegistracionesProcesadas
Dim NoHayMas As Boolean
    
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Version Estandar"
    End If
    
    
    diatipo = 0 'Dia laborable
    
    StrSql = "SELECT COUNT(regnro) as cant FROM " & TTempWFTurno & " WHERE evenro = 2 "
    OpenRecordset StrSql, objRs
    If Not objRs.EOF Then If Not IsNull(objRs!Cant) Then Cant_Reg = objRs!Cant
    Cant_Pares = Int(Cant_Reg / 2)
    
    'FGZ - 04/04/2007
    'generacion de horario normal aun si tiene una sola registracion
    If Cant_Reg = 1 Then
        ' Se crea un reg. de wf-dia para usar en la política - Con turnos libres wf-dia está vacía */
        'InsertarWFDia Nro_Dia, "", p_fecha
        Call Politica(40)
        StrSql = "DELETE FROM " & TTempWFDiaLaboral
        objConn.Execute StrSql, , adExecuteNoRecords
        Exit Sub
    End If
    
    For i = 0 To Cant_Pares
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par = " & i
        If rs.State = adStateOpen Then rs.Close
        rs.Open StrSql, objConn
        If rs.EOF Then GoTo continuarFor
        par = rs!par
        par1 = rs!Hora
        fecpar1 = rs!Fecha
        Reg_Ent = rs!Regnro
        
        'FGZ - 12/04/2006 - ojo !!! - si el desgloce es por cantidad de horas hay que guardar los pares anteriores porque acumula antes de guardar
        ' y se pisan los nro de las registraciones a marcar como procesadas
        reg(i).Reg_Ent = rs!Regnro
        
        anor1 = 0 & rs!anornro
        
        StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs!Regnro & " AND regestado <> 'P'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        rs.MoveNext
        If rs.EOF Then Exit Sub
        
        par2 = rs!Hora
        fecpar2 = rs!Fecha
        Reg_Sal = rs!Regnro
        'FGZ - 12/04/2006 - ojo !!! - si el desgloce es por cantidad de horas hay que guardar los pares anteriores porque acumula antes de guardar
        ' y se pisan los nro de las registraciones a marcar como procesadas
        reg(i).Reg_Sal = rs!Regnro
        
        anor2 = "0" & rs!anornro
        
        StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs!Regnro & " AND regestado <> 'P'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        If fecpar1 = fecpar2 Then
            HDesde = par1
            HHasta = par2
            otroDia = False
        Else
            HDesde = par1       'Como las fechas son distintas el desgloce es distinto por cada día
            HHasta = "2400"     'Genero dos HC uno de par1 hasta 24:00 y el otro de 00:00 a par2
            otroDia = True
        End If
        
        Cambio_dia = False
        For j = 1 To 2 'En el peor de los casos lo hara 2 veces, una por cada día
            
            'FGZ - 10/01/2006
            'le tube que agregar esta condicion porque
            'cuando se trataba de un turno nocturno en dia viernes tal que el sabado no trabaja
            'hacia macanas
            If Not Cambio_dia Then
                Weekdia = Weekday(fecpar1)
            End If
            
            'FGZ  - 07/10/2014 ------------------
            If (fecpar1 = fecpar2) And fecpar1 <> p_fecha Then
                Cambio_dia = True
            End If
            'FGZ  - 07/10/2014 ------------------
            
            StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
                     "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
            OpenRecordset StrSql, objrsDesgl
            If objrsDesgl.EOF Then
                If depurar Then GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
                Exit Sub
            End If
            
            StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 2 "
            'FGZ - 29/10/2013 -------------------------
            StrSql = StrSql & " AND desghplus = 1 "
            'FGZ - 29/10/2013 -------------------------
            StrSql = StrSql & " ORDER BY desghorfijo,desghoradesde"
            'StrSql = StrSql & " ORDER BY desgdnro,desghoradesde"
            OpenRecordset StrSql, objrsDesgl
            Do While Not objrsDesgl.EOF
            
                '1 Horario Fijo
                '2 Horario Variable
                '3 Horario Fijo/Variable
                Tipo_de_Desgloce = objrsDesgl!desghorfijo
                
                'If Tipo_de_Desgloce = 1 And Cambio_Dia Then
                '    GoTo continuar
                'End If
                
                'si cambio de dia ==> no debria generar horarios absolutos
                TotHor = 0
                hora_desde = HDesde
                hora_hasta = HHasta
                nro_desg = objrsDesgl!desghnro
    
    '            ***** Cambio segun lo definido en el desglose de horas ******
    
'                Cambiar_Horas nro_desg, hora_desde_desg, hora_hasta_desg, fecha_desde_desg, fecha_hasta_desg
                
                Call Cambiar_Horas_Desde(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_dia)
                
                Call Cambiar_Horas_hasta(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_dia)
                
                'FGZ - 10/01/2006
                'OJO !! cuando la FP es relativa y va de posterior a la salida y anterior a la entrada
                ' tiene problemas con los turnos nocturnos ya que la salida pasa de dia ==>
                'hay que hacer el control desde afuera y pasar de dia al calculo de la fecha hasta
                If objFechasHoras.Menor_Hora(fecha_hasta_desg, hora_hasta_desg, fecha_desde_desg, hora_desde_desg) Then
                    fecha_hasta_desg = DateAdd("d", 1, fecha_hasta_desg)
                End If
                
                Call fraccionar_horas(fecpar1, hora_desde, hora_hasta, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, hora_desde, hora_hasta)
    
                'Desgloce   [---------------]
                'Horario          (----------------)
                If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                    objFechasHoras.RestaHs fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                    HCDesde = hora_desde
                    HCHasta = hora_hasta_desg
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
                'Desgloce       [---------------]
                'Horario    (----------------)
                If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                    objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                    HCDesde = hora_desde_desg
                    HCHasta = hora_hasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
                
                'Desgloce       [---------------]
                'Horario    (-----------------------)
                If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_desde) Then
                    objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                    HCDesde = hora_desde_desg
                    HCHasta = hora_hasta_desg
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
                'Desgloce   [---------------]
                'Horario        (--------)
                If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                'If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                    HCDesde = hora_desde
                    HCHasta = hora_hasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
                
                If (TotHor = 0) Then GoTo Continuar
                 
                If (objrsDesgl!desghplus = 1) Then
                    'Hora Plus
                    TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
                    If (objrsDesgl!desghminplus <> 0) Or (objrsDesgl!desghmaxplus <> 0) Then
                        If (TotHor < objrsDesgl!desghminplus) Then TotHor = objrsDesgl!desghminplus
                        If (objrsDesgl!desghmaxplus < TotHor) Then TotHor = objrsDesgl!desghmaxplus
                    End If
                End If
                
                
                'Redondeo del total de horas
                'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
                'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
                'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor
                TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
                Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
                TotHorHHMM = "'" & TotHorHHMM & "'"
                
                Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
                Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
                                
                Tipo_Hora = objrsDesgl!thnro
                Total_horas = TotHor
                
                Call Politica(540)
                
                TotHor = Total_horas
                
                If TotHor = 0 Then GoTo Continuar
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                '   Se agregó la llamada a esta funcion que retorna la fecha de generacion de las horas de acuerdo a la conf del ST
                Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                
                 
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                         "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                         "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                         TotHorHHMM & "," & TotHor & "," & ConvFecha(fecpar1) & ",' '," & ConvFecha(fecpar1) & ",'" & HCDesde & "','" & _
                         HCHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                         ValorNulo & "," & Empleado.Ternro & "," & Tipo_Hora & "," & Nro_Turno & "," & _
                         Reg_Ent & ",'" & IIf(j = 1, par1, "0000") & "'," & Reg_Sal & ",'" & _
                         IIf((j = 2) Or (j = 1 And Not otroDia), par2, "2400") & "'," & Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & Tipo_Hora & "- Cantidad: " & TotHor & " hs."
                End If
                
                ' Marcar las registraciones involucradas con el Horario generado
                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Ent
                objConn.Execute StrSql, , adExecuteNoRecords
                    
                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Sal
                objConn.Execute StrSql, , adExecuteNoRecords
                
Continuar:
                objrsDesgl.MoveNext
            Loop
            
            If fecpar1 = fecpar2 Then
                Exit For
            Else
                hora_desde = "0000"
                HDesde = hora_desde
                hora_hasta = par2
                HHasta = hora_hasta
                fecpar1 = fecpar2
                Cambio_dia = True
            End If
            
        Next j
continuarFor:
    Next i
    
    
    ' Genero los registros del HC, cuando se trata de desglose como cantidad de horas
    Weekdia = Weekday(p_fecha)
    StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
             "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
    OpenRecordset StrSql, objrsDesgl
    If objrsDesgl.EOF Then
        If depurar Then GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
        Exit Sub
    End If
    StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 1 " & _
                     " ORDER BY desgdnro,desghoradesde"
    OpenRecordset StrSql, objrsDesgl
    
    Do While Not objrsDesgl.EOF
'        cant_aux = sumarizar_horas(Cant_Pares, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta)
'        If ((cant_aux > 0) And (cant_aux < objrsDesgl!desghoffset)) Then TotHor = 0
'        If (cant_aux < objrsDesgl!desgcantmin) Then TotHor = 0
'        If ((cant_aux >= objrsDesgl!desgcantmin) And (cant_aux < objrsDesgl!desgcantmax)) Then
'            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
'               TotHor = cant_aux - objrsDesgl!desgcantmin
'            Else
'               TotHor = 0
'            End If
'        End If
'        If (cant_aux >= objrsDesgl!desgcantmax) Then
'            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
'               TotHor = objrsDesgl!desgcantmax - objrsDesgl!desgcantmin
'            Else
'               TotHor = 0
'            End If
'        End If
        
        'FGZ - 29/07/2008 ----
        cant_aux = sumarizar_horas(Cant_Pares, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta)
        If (cant_aux < objrsDesgl!desgcantmin) Then TotHor = 0
        If ((cant_aux >= objrsDesgl!desgcantmin) And (cant_aux < objrsDesgl!desgcantmax)) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = cant_aux - objrsDesgl!desgcantmin
            Else
               TotHor = 0
            End If
        End If
        If (cant_aux >= objrsDesgl!desgcantmax) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = objrsDesgl!desgcantmax - objrsDesgl!desgcantmin
            Else
               TotHor = 0
            End If
        End If
        If ((TotHor > 0) And (TotHor < objrsDesgl!desghoffset)) Then TotHor = 0
        'FGZ - 29/07/2008 ----
        
        
        ' Chequea si las horas trabajadas estan entre en maximo plus y minimo plus o
        ' si el maximo y minimo son 0, paga el total de horas
        If (objrsDesgl!desghplus = 1) And (objrsDesgl!desghmaxplus = 0 And objrsDesgl!desghminplus = 0) Then
           If (TotHor < objrsDesgl!desghminplus) Then
                 GoTo ContinuarCant
              Else
                 If (TotHor > objrsDesgl!desghmaxplus) Then TotHor = TotHor - objrsDesgl!desghmaxplus
            End If
        End If
        If TotHor > 0 Then
            ' Si es plus, se calcula la duración de la hora */
            If (objrsDesgl!desghplus = 1) Then
                TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
            End If
            
            'Redondeo del total de horas
            'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
            'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
            'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
            TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
            Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
            TotHorHHMM = "'" & TotHorHHMM & "'"
            
            Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
            Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
            If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
            
            'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
            
            'FGZ - 22/03/2011
            If TotHor = 0 Then GoTo ContinuarCant
            
            'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
            Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
            'Fecha_Generacion = p_fecha
            'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
            
            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                      "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                      "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                      TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
                      CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                      ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                      ValorNulo & ",''," & ValorNulo & ",''," & _
                      Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
            End If
        
            'FGZ - 12/04/2006 No estaba esto
            'Marcar las registraciones involucradas con el Horario generado
            i = 1
            NoHayMas = False
            Do While i <= UBound(reg) And Not NoHayMas
                If reg(i).Reg_Ent <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(Fecha_Generacion) & " WHERE regnro = " & reg(i).Reg_Ent
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                
                If reg(i).Reg_Sal <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(Fecha_Generacion) & " WHERE regnro = " & reg(i).Reg_Sal
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                        
                i = i + 1
            Loop
        End If
ContinuarCant:
        objrsDesgl.MoveNext
    Loop
    
    ' ==================================================================================================
    ' Genero los registros del HC, cuando se trata de desglose como Cantidad de Horas y Franja Horaria
    Weekdia = Weekday(p_fecha)
    StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
             "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
    OpenRecordset StrSql, objrsDesgl
    'FGZ - 31/10/2006
    'Esta alrevez el if
    'If Not objrsDesgl.EOF And depurar Then
    If objrsDesgl.EOF And depurar Then
        GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
        Exit Sub
    End If
    StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 3 " & _
                     " ORDER BY desghoradesde,desghplus"
    OpenRecordset StrSql, objrsDesgl
    Do While Not objrsDesgl.EOF
        cant_parcial = 0
        For i = 0 To Cant_Pares
            StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par =" & i
            OpenRecordset StrSql, objRs
            If objRs.EOF Then GoTo Saltear
            hora_desde = objRs!Hora
            fecpar1 = objRs!Fecha
            objRs.MoveNext
            If objRs.EOF Then GoTo Saltear
            hora_hasta = objRs!Hora
            fecpar2 = objRs!Fecha

            hora_desde_desg = objrsDesgl!desghoradesde
            hora_hasta_desg = objrsDesgl!desghorahasta


            'FGZ - 31/10/2006
            Tipo_de_Desgloce = objrsDesgl!desghorfijo
            'si cambio de dia ==> no debria generar horarios absolutos
            TotHor = 0
            'hora_desde = hDesde
            'hora_hasta = hHasta
            nro_desg = objrsDesgl!desghnro
            
            Call Cambiar_Horas_Desde(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_dia)
            Call Cambiar_Horas_hasta(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_dia)
                
            'OJO !! cuando la FP es relativa y va de posterior a la salida y anterior a la entrada
            ' tiene problemas con los turnos nocturnos ya que la salida pasa de dia ==>
            'hay que hacer el control desde afuera y pasar de dia al calculo de la fecha hasta
            If objFechasHoras.Menor_Hora(fecha_hasta_desg, hora_hasta_desg, fecha_desde_desg, hora_desde_desg) Then
                fecha_hasta_desg = DateAdd("d", 1, fecha_hasta_desg)
            End If

            fraccionar_horas fecpar1, hora_desde, hora_hasta, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, hora_desde, hora_hasta
                        
'            If (hora_desde_desg > hora_hasta) Or ((hora_hasta_desg < hora_desde) And (fecha_hasta_desg <= fecpar1)) Then GoTo Saltear
'            If (hora_desde_desg < hora_desde) And (hora_desde < hora_hasta_desg And hora_hasta_desg <= hora_hasta) Then
'                'Genero HC de hora-desde a desghorahasta */
'                objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta_desg, tdias, thoras, tmin
'                hcdesde = hora_desde
'                hchasta = hora_hasta_desg
'                TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Saltear
'            End If
'            If (hora_desde_desg >= hora_desde And hora_desde_desg < hora_hasta) And (hora_hasta_desg <= hora_hasta And ((hora_hasta_desg > hora_desde) And (fecha_hasta_desg <= fecpar1))) Then
''            /* Genero HC de desghoradesde a desghorahasta */
'                objFechasHoras.RestaHs fecpar1, hora_desde_desg, fecpar1, hora_hasta_desg, tdias, thoras, tmin
'                hcdesde = hora_desde_desg
'                hchasta = hora_hasta_desg
'                TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Saltear
'            End If
'            If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
'            ' Genero HC de hora_desde a hora_hasta */
'                 objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, tdias, thoras, tmin
'                 hcdesde = hora_desde
'                 hchasta = hora_hasta
'                 TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                 If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Saltear
'            End If

            'FGZ - 31/10/2006 ----------------------------------------------------------------------------
            'Desgloce   [---------------]
            'Horario          (----------------)
            If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                objFechasHoras.RestaHs fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                HCDesde = hora_desde
                HCHasta = hora_hasta_desg
                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo ContinuarAmbas
            End If

            'Desgloce       [---------------]
            'Horario    (----------------)
            If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                HCDesde = hora_desde_desg
                HCHasta = hora_hasta
                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo ContinuarAmbas
            End If
            
            'Desgloce       [---------------]
            'Horario    (-----------------------)
            If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_desde) Then
                objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                HCDesde = hora_desde_desg
                HCHasta = hora_hasta_desg
                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo ContinuarAmbas
            End If

            'Desgloce   [---------------]
            'Horario        (--------)
            If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
            'If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
                objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                HCDesde = hora_desde
                HCHasta = hora_hasta
                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo ContinuarAmbas
            End If
            'FGZ - 31/10/2006 ----------------------------------------------------------------------------

            cant_parcial = cant_parcial + TotHor
Saltear:
        Next
        
'        If ((cant_parcial > 0) And (cant_parcial < objrsDesgl!desghoffset)) Then TotHor = 0
'        If (cant_parcial < objrsDesgl!desgcantmin) Then TotHor = 0
'        If ((cant_parcial >= objrsDesgl!desgcantmin) And (cant_parcial < objrsDesgl!desgcantmax)) Then
'            If (cant_parcial > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
'                'FGZ - 31/10/2006 - le cambié esa asignacion
'                'TotHor = cant_parcial - objrsDesgl!desgcantmin
'                TotHor = cant_parcial
'             Else
'                TotHor = 0
'            End If
'        End If
'        If (cant_parcial >= objrsDesgl!desgcantmax) Then
'            If (cant_parcial > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
'               TotHor = objrsDesgl!desgcantmax - objrsDesgl!desgcantmin
'             Else
'               TotHor = 0
'            End If
'        End If
        
        'FGZ  29/07/2008 ------
        If (cant_parcial < objrsDesgl!desgcantmin) Then TotHor = 0
        If ((cant_parcial >= objrsDesgl!desgcantmin) And (cant_parcial < objrsDesgl!desgcantmax)) Then
            If (cant_parcial > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
                'FGZ - 31/10/2006 - le cambié esa asignacion
                'TotHor = cant_parcial - objrsDesgl!desgcantmin
                TotHor = cant_parcial
             Else
                TotHor = 0
            End If
        End If
        If (cant_parcial >= objrsDesgl!desgcantmax) Then
            If (cant_parcial > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = objrsDesgl!desgcantmax - objrsDesgl!desgcantmin
             Else
               TotHor = 0
            End If
        End If
        If ((TotHor > 0) And (TotHor < objrsDesgl!desghoffset)) Then TotHor = 0
        'FGZ  29/07/2008 ------
        
        
        
'        Chequea si las horas trabajadas estan entre en maximo plus y minimo plus o
'   si el maximo y minimo son 0, paga el total de horas */
      If TotHor > 0 Then
          If (objrsDesgl!desghplus = 1) Then
              TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
              
              If (objrsDesgl!desghminplus <> 0) Or (objrsDesgl!desghmaxplus <> 0) Then
                  If (TotHor < objrsDesgl!desghminplus) Then TotHor = objrsDesgl!desghminplus
                  If (objrsDesgl!desghmaxplus < TotHor) Then TotHor = objrsDesgl!desghmaxplus
              End If
          End If
        
          'Redondeo del total de horas
          'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
          'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
          'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
          TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
          Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
          TotHorHHMM = "'" & TotHorHHMM & "'"
          
          Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
          Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
          If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
        
          'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
          
          
           'FGZ - 22/03/2011
           If TotHor = 0 Then GoTo ContinuarAmbas
          
          'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
          '   Se agregó la llamada a esta funcion que retorna la fecha de generacion de las horas de acuerdo a la conf del ST
          Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
          'Fecha_Generacion = p_fecha
          'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
          
          StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                   "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                   "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                   TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
                   CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                   ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                   ValorNulo & ",''," & ValorNulo & ",''," & _
                   Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
            End If
            
            'FGZ - 12/04/2006 No estaba esto
            'Marcar las registraciones involucradas con el Horario generado
            i = 1
            NoHayMas = False
            Do While i <= UBound(reg) And Not NoHayMas
                If reg(i).Reg_Ent <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                
                If reg(i).Reg_Sal <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                        
                i = i + 1
            Loop
          
          
       End If
ContinuarAmbas:
       objrsDesgl.MoveNext
    Loop
    
    'Flog.writeline Espacios(Tabulador * 3) & "-------------------------------------"
End Sub

Private Sub Generar_Horario_Normal_Sykes()
' ---------------------------------------------------------------------------------------------
' Descripcion: Procedimiento que genera el Horario normal del dia.
' Autor      : FGZ
' Fecha      : 25/07/2011
' Ultima Mod.:
' Descripcion:
'
' ---------------------------------------------------------------------------------------------
Dim Cant_Reg As Integer
Dim Cant_Pares As Integer
Dim i As Integer
Dim par1 As String
Dim par2 As String
Dim HDesde As String
Dim HHasta As String
Dim fecpar1 As Date
Dim fecpar2 As Date
Dim anor1 As Integer
Dim anor2 As Integer
Dim Reg_Ent As Long
Dim Reg_Sal As Long
Dim otroDia As Boolean
Dim j As Integer
Dim Weekdia As Byte
Dim objrsDesgl As New ADODB.Recordset
Dim TotHor As Single
Dim TotHorHHMM As String

'FGZ - 30/08/2006
'Dim nro_desg As Integer
Dim nro_desg As Long

Dim hora_desde_desg As String
Dim hora_hasta_desg As String
Dim fecha_desde_desg As Date
Dim fecha_hasta_desg As Date
Dim Hora_a_Red As String
Dim HCDesde As String
Dim HCHasta As String
Dim cant_aux As Single
Dim CantH_Acum As Single
Dim cant_parcial As Single
Dim par As Integer
Dim rs As New ADODB.Recordset
Dim Cambio_dia As Boolean
    
'FGZ - 12/04/2006 - Arreglo de registraciones leidas y a marcar como procesadas
Dim reg(1 To 100) As TRegistracionesProcesadas
Dim NoHayMas As Boolean
    
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Version Sykes"
    End If
    
    
    diatipo = 0 'Dia laborable
    
    StrSql = "SELECT COUNT(regnro) as cant FROM " & TTempWFTurno & " WHERE evenro = 2 "
    OpenRecordset StrSql, objRs
    If Not objRs.EOF Then If Not IsNull(objRs!Cant) Then Cant_Reg = objRs!Cant
    Cant_Pares = Int(Cant_Reg / 2)
    
    'FGZ - 04/04/2007
    'generacion de horario normal aun si tiene una sola registracion
    If Cant_Reg = 1 Then
        ' Se crea un reg. de wf-dia para usar en la política - Con turnos libres wf-dia está vacía */
        'InsertarWFDia Nro_Dia, "", p_fecha
        Call Politica(40)
        StrSql = "DELETE FROM " & TTempWFDiaLaboral
        objConn.Execute StrSql, , adExecuteNoRecords
        Exit Sub
    End If
    
    For i = 0 To Cant_Pares
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par = " & i
        If rs.State = adStateOpen Then rs.Close
        rs.Open StrSql, objConn
        If rs.EOF Then GoTo continuarFor
        par = rs!par
        par1 = rs!Hora
        fecpar1 = rs!Fecha
        Reg_Ent = rs!Regnro
        
        'FGZ - 12/04/2006 - ojo !!! - si el desgloce es por cantidad de horas hay que guardar los pares anteriores porque acumula antes de guardar
        ' y se pisan los nro de las registraciones a marcar como procesadas
        reg(i).Reg_Ent = rs!Regnro
        
        anor1 = 0 & rs!anornro
        
        StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs!Regnro & " AND regestado <> 'P'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        rs.MoveNext
        If rs.EOF Then Exit Sub
        
        par2 = rs!Hora
        fecpar2 = rs!Fecha
        Reg_Sal = rs!Regnro
        'FGZ - 12/04/2006 - ojo !!! - si el desgloce es por cantidad de horas hay que guardar los pares anteriores porque acumula antes de guardar
        ' y se pisan los nro de las registraciones a marcar como procesadas
        reg(i).Reg_Sal = rs!Regnro
        
        anor2 = "0" & rs!anornro
        
        StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs!Regnro & " AND regestado <> 'P'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        If fecpar1 = fecpar2 Then
            HDesde = par1
            HHasta = par2
            otroDia = False
        Else
            HDesde = par1       'Como las fechas son distintas el desgloce es distinto por cada día
            HHasta = "2400"     'Genero dos HC uno de par1 hasta 24:00 y el otro de 00:00 a par2
            otroDia = True
        End If
        
        Cambio_dia = False
        For j = 1 To 2 'En el peor de los casos lo hara 2 veces, una por cada día
            
            'FGZ - 10/01/2006
            'le tube que agregar esta condicion porque
            'cuando se trataba de un turno nocturno en dia viernes tal que el sabado no trabaja
            'hacia macanas
            If Not Cambio_dia Then
                Weekdia = Weekday(fecpar1)
            End If
            
            'FGZ  - 07/10/2014 ------------------
            If (fecpar1 = fecpar2) And fecpar1 <> p_fecha Then
                Cambio_dia = True
            End If
            'FGZ  - 07/10/2014 ------------------
            
            
            StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
                     "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
            OpenRecordset StrSql, objrsDesgl
            If objrsDesgl.EOF Then
                If depurar Then GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
                Exit Sub
            End If
            
            StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 2 "
            'FGZ - 29/10/2013 -------------------------
            StrSql = StrSql & " AND desghplus = 1 "
            'FGZ - 29/10/2013 -------------------------
            StrSql = StrSql & " ORDER BY desghorfijo,desghoradesde"
            'StrSql = StrSql & " ORDER BY desgdnro,desghoradesde"
            OpenRecordset StrSql, objrsDesgl
            Do While Not objrsDesgl.EOF
            
                '1 Horario Fijo
                '2 Horario Variable
                '3 Horario Fijo/Variable
                Tipo_de_Desgloce = objrsDesgl!desghorfijo
                
                'If Tipo_de_Desgloce = 1 And Cambio_Dia Then
                '    GoTo continuar
                'End If
                
                'si cambio de dia ==> no debria generar horarios absolutos
                TotHor = 0
                hora_desde = HDesde
                hora_hasta = HHasta
                nro_desg = objrsDesgl!desghnro
    
    '            ***** Cambio segun lo definido en el desglose de horas ******
    
'                Cambiar_Horas nro_desg, hora_desde_desg, hora_hasta_desg, fecha_desde_desg, fecha_hasta_desg
                
                Call Cambiar_Horas_Desde_Sykes(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_dia)
                
                Call Cambiar_Horas_hasta_Sykes(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_dia)
                
                'FGZ - 10/01/2006
                'OJO !! cuando la FP es relativa y va de posterior a la salida y anterior a la entrada
                ' tiene problemas con los turnos nocturnos ya que la salida pasa de dia ==>
                'hay que hacer el control desde afuera y pasar de dia al calculo de la fecha hasta
                If objFechasHoras.Menor_Hora(fecha_hasta_desg, hora_hasta_desg, fecha_desde_desg, hora_desde_desg) Then
                    fecha_hasta_desg = DateAdd("d", 1, fecha_hasta_desg)
                End If
                
                Call fraccionar_horas(fecpar1, hora_desde, hora_hasta, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, hora_desde, hora_hasta)
    
                'Desgloce   [---------------]
                'Horario          (----------------)
                If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                    objFechasHoras.RestaHs fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                    HCDesde = hora_desde
                    HCHasta = hora_hasta_desg
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
                'Desgloce       [---------------]
                'Horario    (----------------)
                If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                    objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                    HCDesde = hora_desde_desg
                    HCHasta = hora_hasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
                
                'Desgloce       [---------------]
                'Horario    (-----------------------)
                If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_desde) Then
                    objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                    HCDesde = hora_desde_desg
                    HCHasta = hora_hasta_desg
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
                'Desgloce   [---------------]
                'Horario        (--------)
                If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                'If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                    HCDesde = hora_desde
                    HCHasta = hora_hasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
                
                If (TotHor = 0) Then GoTo Continuar
                 
                If (objrsDesgl!desghplus = 1) Then
                    'Hora Plus
                    TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
                    If (objrsDesgl!desghminplus <> 0) Or (objrsDesgl!desghmaxplus <> 0) Then
                        If (TotHor < objrsDesgl!desghminplus) Then TotHor = objrsDesgl!desghminplus
                        If (objrsDesgl!desghmaxplus < TotHor) Then TotHor = objrsDesgl!desghmaxplus
                    End If
                End If
                
                
                'Redondeo del total de horas
                'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
                'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
                'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor
                TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
                Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
                TotHorHHMM = "'" & TotHorHHMM & "'"
                
                Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
                Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
                                
                Tipo_Hora = objrsDesgl!thnro
                Total_horas = TotHor
                
                Call Politica(540)
                
                TotHor = Total_horas
                
                If TotHor = 0 Then GoTo Continuar
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                '   Se agregó la llamada a esta funcion que retorna la fecha de generacion de las horas de acuerdo a la conf del ST
                Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                
                 
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                         "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                         "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                         TotHorHHMM & "," & TotHor & "," & ConvFecha(fecpar1) & ",' '," & ConvFecha(fecpar1) & ",'" & HCDesde & "','" & _
                         HCHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                         ValorNulo & "," & Empleado.Ternro & "," & Tipo_Hora & "," & Nro_Turno & "," & _
                         Reg_Ent & ",'" & IIf(j = 1, par1, "0000") & "'," & Reg_Sal & ",'" & _
                         IIf((j = 2) Or (j = 1 And Not otroDia), par2, "2400") & "'," & Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & Tipo_Hora & "- Cantidad: " & TotHor & " hs."
                End If
                
                ' Marcar las registraciones involucradas con el Horario generado
                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Ent
                objConn.Execute StrSql, , adExecuteNoRecords
                    
                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Sal
                objConn.Execute StrSql, , adExecuteNoRecords
                
Continuar:
                objrsDesgl.MoveNext
            Loop
            
            If fecpar1 = fecpar2 Then
                Exit For
            Else
                hora_desde = "0000"
                HDesde = hora_desde
                hora_hasta = par2
                HHasta = hora_hasta
                fecpar1 = fecpar2
                Cambio_dia = True
            End If
            
        Next j
continuarFor:
    Next i
    
    
    ' Genero los registros del HC, cuando se trata de desglose como cantidad de horas
    Weekdia = Weekday(p_fecha)
    StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
             "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
    OpenRecordset StrSql, objrsDesgl
    If objrsDesgl.EOF Then
        If depurar Then GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
        Exit Sub
    End If
    StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 1 " & _
                     " ORDER BY desgdnro,desghoradesde"
    OpenRecordset StrSql, objrsDesgl
    
    Do While Not objrsDesgl.EOF
'        cant_aux = sumarizar_horas(Cant_Pares, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta)
'        If ((cant_aux > 0) And (cant_aux < objrsDesgl!desghoffset)) Then TotHor = 0
'        If (cant_aux < objrsDesgl!desgcantmin) Then TotHor = 0
'        If ((cant_aux >= objrsDesgl!desgcantmin) And (cant_aux < objrsDesgl!desgcantmax)) Then
'            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
'               TotHor = cant_aux - objrsDesgl!desgcantmin
'            Else
'               TotHor = 0
'            End If
'        End If
'        If (cant_aux >= objrsDesgl!desgcantmax) Then
'            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
'               TotHor = objrsDesgl!desgcantmax - objrsDesgl!desgcantmin
'            Else
'               TotHor = 0
'            End If
'        End If
        
        'FGZ - 29/07/2008 ----
        cant_aux = sumarizar_horas(Cant_Pares, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta)
        If (cant_aux < objrsDesgl!desgcantmin) Then TotHor = 0
        If ((cant_aux >= objrsDesgl!desgcantmin) And (cant_aux < objrsDesgl!desgcantmax)) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = cant_aux - objrsDesgl!desgcantmin
            Else
               TotHor = 0
            End If
        End If
        If (cant_aux >= objrsDesgl!desgcantmax) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = objrsDesgl!desgcantmax - objrsDesgl!desgcantmin
            Else
               TotHor = 0
            End If
        End If
        If ((TotHor > 0) And (TotHor < objrsDesgl!desghoffset)) Then TotHor = 0
        'FGZ - 29/07/2008 ----
        
        
        ' Chequea si las horas trabajadas estan entre en maximo plus y minimo plus o
        ' si el maximo y minimo son 0, paga el total de horas
        If (objrsDesgl!desghplus = 1) And (objrsDesgl!desghmaxplus = 0 And objrsDesgl!desghminplus = 0) Then
           If (TotHor < objrsDesgl!desghminplus) Then
                 GoTo ContinuarCant
              Else
                 If (TotHor > objrsDesgl!desghmaxplus) Then TotHor = TotHor - objrsDesgl!desghmaxplus
            End If
        End If
        If TotHor > 0 Then
            ' Si es plus, se calcula la duración de la hora */
            If (objrsDesgl!desghplus = 1) Then
                TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
            End If
            
            'Redondeo del total de horas
            'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
            'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
            'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
            TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
            Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
            TotHorHHMM = "'" & TotHorHHMM & "'"
            
            Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
            Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
            If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
            
            'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
            
            'FGZ - 22/03/2011
            If TotHor = 0 Then GoTo ContinuarCant
            
            'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
            Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
            'Fecha_Generacion = p_fecha
            'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
            
            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                      "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                      "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                      TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
                      CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                      ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                      ValorNulo & ",''," & ValorNulo & ",''," & _
                      Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
            End If
        
            'FGZ - 12/04/2006 No estaba esto
            'Marcar las registraciones involucradas con el Horario generado
            i = 1
            NoHayMas = False
            Do While i <= UBound(reg) And Not NoHayMas
                If reg(i).Reg_Ent <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(Fecha_Generacion) & " WHERE regnro = " & reg(i).Reg_Ent
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                
                If reg(i).Reg_Sal <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(Fecha_Generacion) & " WHERE regnro = " & reg(i).Reg_Sal
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                        
                i = i + 1
            Loop
        End If
ContinuarCant:
        objrsDesgl.MoveNext
    Loop
    
    ' ==================================================================================================
    ' Genero los registros del HC, cuando se trata de desglose como Cantidad de Horas y Franja Horaria
    Weekdia = Weekday(p_fecha)
    StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
             "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
    OpenRecordset StrSql, objrsDesgl
    'FGZ - 31/10/2006
    'Esta alrevez el if
    'If Not objrsDesgl.EOF And depurar Then
    If objrsDesgl.EOF And depurar Then
        GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
        Exit Sub
    End If
    StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 3 " & _
                     " ORDER BY desghoradesde,desghplus"
    OpenRecordset StrSql, objrsDesgl
    Do While Not objrsDesgl.EOF
        cant_parcial = 0
        For i = 0 To Cant_Pares
            StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par =" & i
            OpenRecordset StrSql, objRs
            If objRs.EOF Then GoTo Saltear
            hora_desde = objRs!Hora
            fecpar1 = objRs!Fecha
            objRs.MoveNext
            If objRs.EOF Then GoTo Saltear
            hora_hasta = objRs!Hora
            fecpar2 = objRs!Fecha

            hora_desde_desg = objrsDesgl!desghoradesde
            hora_hasta_desg = objrsDesgl!desghorahasta


            'FGZ - 31/10/2006
            Tipo_de_Desgloce = objrsDesgl!desghorfijo
            'si cambio de dia ==> no debria generar horarios absolutos
            TotHor = 0
            'hora_desde = hDesde
            'hora_hasta = hHasta
            nro_desg = objrsDesgl!desghnro
            
            Call Cambiar_Horas_Desde(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_dia)
            Call Cambiar_Horas_hasta(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_dia)
                
            'OJO !! cuando la FP es relativa y va de posterior a la salida y anterior a la entrada
            ' tiene problemas con los turnos nocturnos ya que la salida pasa de dia ==>
            'hay que hacer el control desde afuera y pasar de dia al calculo de la fecha hasta
            If objFechasHoras.Menor_Hora(fecha_hasta_desg, hora_hasta_desg, fecha_desde_desg, hora_desde_desg) Then
                fecha_hasta_desg = DateAdd("d", 1, fecha_hasta_desg)
            End If

            fraccionar_horas fecpar1, hora_desde, hora_hasta, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, hora_desde, hora_hasta
                        
'            If (hora_desde_desg > hora_hasta) Or ((hora_hasta_desg < hora_desde) And (fecha_hasta_desg <= fecpar1)) Then GoTo Saltear
'            If (hora_desde_desg < hora_desde) And (hora_desde < hora_hasta_desg And hora_hasta_desg <= hora_hasta) Then
'                'Genero HC de hora-desde a desghorahasta */
'                objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta_desg, tdias, thoras, tmin
'                hcdesde = hora_desde
'                hchasta = hora_hasta_desg
'                TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Saltear
'            End If
'            If (hora_desde_desg >= hora_desde And hora_desde_desg < hora_hasta) And (hora_hasta_desg <= hora_hasta And ((hora_hasta_desg > hora_desde) And (fecha_hasta_desg <= fecpar1))) Then
''            /* Genero HC de desghoradesde a desghorahasta */
'                objFechasHoras.RestaHs fecpar1, hora_desde_desg, fecpar1, hora_hasta_desg, tdias, thoras, tmin
'                hcdesde = hora_desde_desg
'                hchasta = hora_hasta_desg
'                TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Saltear
'            End If
'            If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
'            ' Genero HC de hora_desde a hora_hasta */
'                 objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, tdias, thoras, tmin
'                 hcdesde = hora_desde
'                 hchasta = hora_hasta
'                 TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                 If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Saltear
'            End If

            'FGZ - 31/10/2006 ----------------------------------------------------------------------------
            'Desgloce   [---------------]
            'Horario          (----------------)
            If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                objFechasHoras.RestaHs fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                HCDesde = hora_desde
                HCHasta = hora_hasta_desg
                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo ContinuarAmbas
            End If

            'Desgloce       [---------------]
            'Horario    (----------------)
            If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                HCDesde = hora_desde_desg
                HCHasta = hora_hasta
                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo ContinuarAmbas
            End If
            
            'Desgloce       [---------------]
            'Horario    (-----------------------)
            If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_desde) Then
                objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                HCDesde = hora_desde_desg
                HCHasta = hora_hasta_desg
                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo ContinuarAmbas
            End If

            'Desgloce   [---------------]
            'Horario        (--------)
            If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
            'If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
                objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                HCDesde = hora_desde
                HCHasta = hora_hasta
                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo ContinuarAmbas
            End If
            'FGZ - 31/10/2006 ----------------------------------------------------------------------------

            cant_parcial = cant_parcial + TotHor
Saltear:
        Next
        
'        If ((cant_parcial > 0) And (cant_parcial < objrsDesgl!desghoffset)) Then TotHor = 0
'        If (cant_parcial < objrsDesgl!desgcantmin) Then TotHor = 0
'        If ((cant_parcial >= objrsDesgl!desgcantmin) And (cant_parcial < objrsDesgl!desgcantmax)) Then
'            If (cant_parcial > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
'                'FGZ - 31/10/2006 - le cambié esa asignacion
'                'TotHor = cant_parcial - objrsDesgl!desgcantmin
'                TotHor = cant_parcial
'             Else
'                TotHor = 0
'            End If
'        End If
'        If (cant_parcial >= objrsDesgl!desgcantmax) Then
'            If (cant_parcial > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
'               TotHor = objrsDesgl!desgcantmax - objrsDesgl!desgcantmin
'             Else
'               TotHor = 0
'            End If
'        End If
        
        'FGZ  29/07/2008 ------
        If (cant_parcial < objrsDesgl!desgcantmin) Then TotHor = 0
        If ((cant_parcial >= objrsDesgl!desgcantmin) And (cant_parcial < objrsDesgl!desgcantmax)) Then
            If (cant_parcial > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
                'FGZ - 31/10/2006 - le cambié esa asignacion
                'TotHor = cant_parcial - objrsDesgl!desgcantmin
                TotHor = cant_parcial
             Else
                TotHor = 0
            End If
        End If
        If (cant_parcial >= objrsDesgl!desgcantmax) Then
            If (cant_parcial > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = objrsDesgl!desgcantmax - objrsDesgl!desgcantmin
             Else
               TotHor = 0
            End If
        End If
        If ((TotHor > 0) And (TotHor < objrsDesgl!desghoffset)) Then TotHor = 0
        'FGZ  29/07/2008 ------
        
        
        
'        Chequea si las horas trabajadas estan entre en maximo plus y minimo plus o
'   si el maximo y minimo son 0, paga el total de horas */
      If TotHor > 0 Then
          If (objrsDesgl!desghplus = 1) Then
              TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
              
              If (objrsDesgl!desghminplus <> 0) Or (objrsDesgl!desghmaxplus <> 0) Then
                  If (TotHor < objrsDesgl!desghminplus) Then TotHor = objrsDesgl!desghminplus
                  If (objrsDesgl!desghmaxplus < TotHor) Then TotHor = objrsDesgl!desghmaxplus
              End If
          End If
        
          'Redondeo del total de horas
          'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
          'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
          'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
          TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
          Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
          TotHorHHMM = "'" & TotHorHHMM & "'"
          
          Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
          Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
          If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
        
          'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
          
          
           'FGZ - 22/03/2011
           If TotHor = 0 Then GoTo ContinuarAmbas
          
          'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
          '   Se agregó la llamada a esta funcion que retorna la fecha de generacion de las horas de acuerdo a la conf del ST
          Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
          'Fecha_Generacion = p_fecha
          'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
          
          StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                   "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                   "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                   TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
                   CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                   ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                   ValorNulo & ",''," & ValorNulo & ",''," & _
                   Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
            End If
            
            'FGZ - 12/04/2006 No estaba esto
            'Marcar las registraciones involucradas con el Horario generado
            i = 1
            NoHayMas = False
            Do While i <= UBound(reg) And Not NoHayMas
                If reg(i).Reg_Ent <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                
                If reg(i).Reg_Sal <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                        
                i = i + 1
            Loop
          
          
       End If
ContinuarAmbas:
       objrsDesgl.MoveNext
    Loop
    
    'Flog.writeline Espacios(Tabulador * 3) & "-------------------------------------"
End Sub


Private Sub Generar_Horario_Normal_old()
' ---------------------------------------------------------------------------------------------
' Descripcion: Procedimiento que genera el Horario normal del dia.
' Autor      :
' Fecha      :
' Ultima Mod.: 06/12/2005
' Descripcion: modifiqué la llamada a
' Call Cambiar_Horas_Desde(nro_desg, hora_desde_desg, fecha_desde_desg, False)
'      se le agrego el ultimo parametro
' ---------------------------------------------------------------------------------------------
Dim Cant_Reg As Integer
Dim Cant_Pares As Integer
Dim i As Integer
Dim par1 As String
Dim par2 As String
Dim HDesde As String
Dim HHasta As String
Dim fecpar1 As Date
Dim fecpar2 As Date
Dim anor1 As Integer
Dim anor2 As Integer
Dim Reg_Ent As Long
Dim Reg_Sal As Long
Dim otroDia As Boolean
Dim j As Integer
Dim Weekdia As Byte
Dim objrsDesgl As New ADODB.Recordset
Dim TotHor As Single

'FGZ - 30/08/2006
'Dim nro_desg As Integer
Dim nro_desg As Long

Dim hora_desde_desg As String
Dim hora_hasta_desg As String
Dim fecha_desde_desg As Date
Dim fecha_hasta_desg As Date
Dim Hora_a_Red As String
Dim HCDesde As String
Dim HCHasta As String
Dim cant_aux As Single
Dim CantH_Acum As Single
Dim cant_parcial As Single
Dim par As Integer
Dim rs As New ADODB.Recordset
Dim Cambio_dia As Boolean
    
'FGZ - 12/04/2006 - Arreglo de registraciones leidas y a marcar como procesadas
Dim reg(1 To 100) As TRegistracionesProcesadas
Dim NoHayMas As Boolean
    
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Version Estandar"
    End If
    
    diatipo = 0 'Dia laborable
    
    StrSql = "SELECT COUNT(regnro) as cant FROM " & TTempWFTurno & " WHERE evenro = 2 "
    OpenRecordset StrSql, objRs
    If Not objRs.EOF Then If Not IsNull(objRs!Cant) Then Cant_Reg = objRs!Cant
    Cant_Pares = Int(Cant_Reg / 2)
    
    'FGZ - 04/04/2007
    'generacion de horario normal aun si tiene una sola registracion
    If Cant_Reg = 1 Then
        ' Se crea un reg. de wf-dia para usar en la política - Con turnos libres wf-dia está vacía */
        'InsertarWFDia Nro_Dia, "", p_fecha
        Call Politica(40)
        StrSql = "DELETE FROM " & TTempWFDiaLaboral
        objConn.Execute StrSql, , adExecuteNoRecords
        Exit Sub
    End If
    
    For i = 0 To Cant_Pares
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par = " & i
        If rs.State = adStateOpen Then rs.Close
        rs.Open StrSql, objConn
        If rs.EOF Then GoTo continuarFor
        par = rs!par
        par1 = rs!Hora
        fecpar1 = rs!Fecha
        Reg_Ent = rs!Regnro
        
        'FGZ - 12/04/2006 - ojo !!! - si el desgloce es por cantidad de horas hay que guardar los pares anteriores porque acumula antes de guardar
        ' y se pisan los nro de las registraciones a marcar como procesadas
        reg(i).Reg_Ent = rs!Regnro
        
        anor1 = 0 & rs!anornro
        
        StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs!Regnro & " AND regestado <> 'P'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        rs.MoveNext
        If rs.EOF Then Exit Sub
        
        par2 = rs!Hora
        fecpar2 = rs!Fecha
        Reg_Sal = rs!Regnro
        'FGZ - 12/04/2006 - ojo !!! - si el desgloce es por cantidad de horas hay que guardar los pares anteriores porque acumula antes de guardar
        ' y se pisan los nro de las registraciones a marcar como procesadas
        reg(i).Reg_Sal = rs!Regnro
        
        anor2 = "0" & rs!anornro
        
        StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs!Regnro & " AND regestado <> 'P'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        If fecpar1 = fecpar2 Then
            HDesde = par1
            HHasta = par2
            otroDia = False
        Else
            HDesde = par1       'Como las fechas son distintas el desgloce es distinto por cada día
            HHasta = "2400"     'Genero dos HC uno de par1 hasta 24:00 y el otro de 00:00 a par2
            otroDia = True
        End If
        
        Cambio_dia = False
        For j = 1 To 2 'En el peor de los casos lo hara 2 veces, una por cada día
            
            'FGZ - 10/01/2006
            'le tube que agregar esta condicion porque
            'cuando se trataba de un turno nocturno en dia viernes tal que el sabado no trabaja
            'hacia macanas
            If Not Cambio_dia Then
                Weekdia = Weekday(fecpar1)
            End If
            
            StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
                     "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
            OpenRecordset StrSql, objrsDesgl
            If objrsDesgl.EOF Then
                If depurar Then GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
                Exit Sub
            End If
            
            StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 2 "
            StrSql = StrSql & " ORDER BY desghorfijo,desghoradesde"
            'StrSql = StrSql & " ORDER BY desgdnro,desghoradesde"
            OpenRecordset StrSql, objrsDesgl
            Do While Not objrsDesgl.EOF
            
                '1 Horario Fijo
                '2 Horario Variable
                '3 Horario Fijo/Variable
                Tipo_de_Desgloce = objrsDesgl!desghorfijo
                
                'If Tipo_de_Desgloce = 1 And Cambio_Dia Then
                '    GoTo continuar
                'End If
                
                'si cambio de dia ==> no debria generar horarios absolutos
                TotHor = 0
                hora_desde = HDesde
                hora_hasta = HHasta
                nro_desg = objrsDesgl!desghnro
    
    '            ***** Cambio segun lo definido en el desglose de horas ******
    
'                Cambiar_Horas nro_desg, hora_desde_desg, hora_hasta_desg, fecha_desde_desg, fecha_hasta_desg
                
                Call Cambiar_Horas_Desde(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_dia)
                
                Call Cambiar_Horas_hasta(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_dia)
                
                'FGZ - 10/01/2006
                'OJO !! cuando la FP es relativa y va de posterior a la salida y anterior a la entrada
                ' tiene problemas con los turnos nocturnos ya que la salida pasa de dia ==>
                'hay que hacer el control desde afuera y pasar de dia al calculo de la fecha hasta
                If objFechasHoras.Menor_Hora(fecha_hasta_desg, hora_hasta_desg, fecha_desde_desg, hora_desde_desg) Then
                    fecha_hasta_desg = DateAdd("d", 1, fecha_hasta_desg)
                End If
                
                Call fraccionar_horas(fecpar1, hora_desde, hora_hasta, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, hora_desde, hora_hasta)
    
                'Desgloce   [---------------]
                'Horario          (----------------)
                If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                    objFechasHoras.RestaHs fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                    HCDesde = hora_desde
                    HCHasta = hora_hasta_desg
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
                'Desgloce       [---------------]
                'Horario    (----------------)
                If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                    objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                    HCDesde = hora_desde_desg
                    HCHasta = hora_hasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
                
                'Desgloce       [---------------]
                'Horario    (-----------------------)
                If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_desde) Then
                    objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                    HCDesde = hora_desde_desg
                    HCHasta = hora_hasta_desg
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
                'Desgloce   [---------------]
                'Horario        (--------)
                If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                'If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                    HCDesde = hora_desde
                    HCHasta = hora_hasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
    
                '--------------------------------------------------------------------------
                '--------------------------------------------------------------------------
                'Viejos
'                If (hora_desde_desg < hora_desde) And (hora_desde < hora_hasta_desg And hora_hasta_desg <= hora_hasta) Then
'                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta_desg, tdias, thoras, tmin
'                    hcdesde = hora_desde
'                    hchasta = hora_hasta_desg
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                End If
'                If (hora_desde_desg >= hora_desde And hora_desde_desg < hora_hasta) And (hora_hasta_desg > hora_hasta) Then
'                    objFechasHoras.RestaHs fecpar1, hora_desde_desg, fecpar1, hora_hasta, tdias, thoras, tmin
'                    hcdesde = hora_desde_desg
'                    hchasta = hora_hasta
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                End If
'                If (hora_desde_desg >= hora_desde And hora_desde_desg < hora_hasta) And (hora_hasta_desg <= hora_hasta And hora_hasta_desg > hora_desde) Then
'                    objFechasHoras.RestaHs fecpar1, hora_desde_desg, fecpar1, hora_hasta_desg, tdias, thoras, tmin
'                    hcdesde = hora_desde_desg
'                    hchasta = hora_hasta_desg
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                End If
'                If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
'                     '/* Genero HC de hora-desde a hora-hasta */
'                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, tdias, thoras, tmin
'                    hcdesde = hora_desde
'                    hchasta = hora_hasta
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                End If
                
                
                
'                'FGZ - nueva 25/10/2005
'                If (hora_desde_desg <= hora_desde) And ((hora_hasta_desg > hora_hasta) Or (hora_hasta_desg = "0000" And hora_hasta = "2400")) Then
'                     '/* Genero HC de hora-desde a hora-hasta */
'                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, tdias, thoras, tmin
'                    hcdesde = hora_desde
'                    hchasta = hora_hasta
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                End If
'                'FGZ - nueva 26/10/2005
'                If (hora_desde_desg >= hora_desde) And ((hora_hasta_desg > hora_hasta) Or (hora_hasta_desg < hora_hasta And fecha_desde_desg < fecha_hasta_desg)) Then
'                     '/* Genero HC de hora-desde a hora-hasta */
'                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, tdias, thoras, tmin
'                    hcdesde = hora_desde
'                    hchasta = hora_hasta
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                End If
                'Viejos
                '--------------------------------------------------------------------------
                '--------------------------------------------------------------------------
                
                
                If (TotHor = 0) Then GoTo Continuar
                 
                If (objrsDesgl!desghplus = 1) Then
                    'Hora Plus
                    TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
                    If (objrsDesgl!desghminplus <> 0) Or (objrsDesgl!desghmaxplus <> 0) Then
                        If (TotHor < objrsDesgl!desghminplus) Then TotHor = objrsDesgl!desghminplus
                        If (objrsDesgl!desghmaxplus < TotHor) Then TotHor = objrsDesgl!desghmaxplus
                    End If
                End If
                
                'Redondeo del total de horas
                objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
                objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
                                
                Tipo_Hora = objrsDesgl!thnro
                Total_horas = TotHor
                
                Call Politica(540)
                
                TotHor = Total_horas
                
                If TotHor = 0 Then GoTo Continuar
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                         "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                         "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep) VALUES (" & _
                         TotHor & "," & ConvFecha(fecpar1) & ",' '," & ConvFecha(fecpar1) & ",'" & HCDesde & "','" & _
                         HCHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                         ValorNulo & "," & Empleado.Ternro & "," & Tipo_Hora & "," & Nro_Turno & "," & _
                         Reg_Ent & ",'" & IIf(j = 1, par1, "0000") & "'," & Reg_Sal & ",'" & _
                         IIf((j = 2) Or (j = 1 And Not otroDia), par2, "2400") & "'," & Empleado.Legajo & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & Tipo_Hora & "- Cantidad: " & TotHor & " hs."
                End If
                
                ' Marcar las registraciones involucradas con el Horario generado
                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Ent
                objConn.Execute StrSql, , adExecuteNoRecords
                    
                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Sal
                objConn.Execute StrSql, , adExecuteNoRecords
                
Continuar:
                objrsDesgl.MoveNext
            Loop
            
            If fecpar1 = fecpar2 Then
                Exit For
            Else
                hora_desde = "0000"
                HDesde = hora_desde
                hora_hasta = par2
                HHasta = hora_hasta
                fecpar1 = fecpar2
                Cambio_dia = True
            End If
            
        Next j
continuarFor:
    Next i
    
    
    ' Genero los registros del HC, cuando se trata de desglose como cantidad de horas
    Weekdia = Weekday(p_fecha)
    StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
             "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
    OpenRecordset StrSql, objrsDesgl
    If objrsDesgl.EOF Then
        If depurar Then GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
        Exit Sub
    End If
    StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 1 " & _
                     " ORDER BY desgdnro,desghoradesde"
    OpenRecordset StrSql, objrsDesgl
    
    Do While Not objrsDesgl.EOF
        cant_aux = sumarizar_horas(Cant_Pares, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta)
        If ((cant_aux > 0) And (cant_aux < objrsDesgl!desghoffset)) Then TotHor = 0
        If (cant_aux < objrsDesgl!desgcantmin) Then TotHor = 0
        If ((cant_aux >= objrsDesgl!desgcantmin) And (cant_aux < objrsDesgl!desgcantmax)) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = cant_aux - objrsDesgl!desgcantmin
            Else
               TotHor = 0
            End If
        End If
        If (cant_aux >= objrsDesgl!desgcantmax) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = objrsDesgl!desgcantmax - objrsDesgl!desgcantmin
            Else
               TotHor = 0
            End If
        End If
        ' Chequea si las horas trabajadas estan entre en maximo plus y minimo plus o
        ' si el maximo y minimo son 0, paga el total de horas
        
        If (objrsDesgl!desghplus = 1) And (objrsDesgl!desghmaxplus = 0 And objrsDesgl!desghminplus = 0) Then
           If (TotHor < objrsDesgl!desghminplus) Then
                 GoTo Continuar
              Else
                 If (TotHor > objrsDesgl!desghmaxplus) Then TotHor = TotHor - objrsDesgl!desghmaxplus
            End If
        End If
        If TotHor > 0 Then
            ' Si es plus, se calcula la duración de la hora */
            If (objrsDesgl!desghplus = 1) Then
                TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
            End If
            ' Redondeo del total de horas
            objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
            objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
            If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
            
            'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
            
            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                      "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                      "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep) VALUES (" & _
                      TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
                      CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                      ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                      ValorNulo & ",''," & ValorNulo & ",''," & _
                      Empleado.Legajo & "," & ConvFecha(p_fecha) & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
            End If
        
            'FGZ - 12/04/2006 No estaba esto
            'Marcar las registraciones involucradas con el Horario generado
            i = 1
            NoHayMas = False
            Do While i <= UBound(reg) And Not NoHayMas
                If reg(i).Reg_Ent <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                
                If reg(i).Reg_Sal <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                        
                i = i + 1
            Loop
        End If
        objrsDesgl.MoveNext
    Loop
    
    ' Genero los registros del HC, cuando se trata de desglose como Cantidad de Horas y Franja Horaria
    
    Weekdia = Weekday(p_fecha)
    StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
             "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
    OpenRecordset StrSql, objrsDesgl
    'FGZ - 31/10/2006
    'Esta alrevez el if
    'If Not objrsDesgl.EOF And depurar Then
    If objrsDesgl.EOF And depurar Then
        GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
        Exit Sub
    End If
    StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 3 " & _
                     " ORDER BY desghoradesde,desghplus"
    OpenRecordset StrSql, objrsDesgl
    Do While Not objrsDesgl.EOF
        cant_parcial = 0
        For i = 0 To Cant_Pares
            StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par =" & i
            OpenRecordset StrSql, objRs
            If objRs.EOF Then GoTo Saltear
            hora_desde = objRs!Hora
            fecpar1 = objRs!Fecha
            objRs.MoveNext
            If objRs.EOF Then GoTo Saltear
            hora_hasta = objRs!Hora
            fecpar2 = objRs!Fecha

            hora_desde_desg = objrsDesgl!desghoradesde
            hora_hasta_desg = objrsDesgl!desghorahasta


            'FGZ - 31/10/2006
            Tipo_de_Desgloce = objrsDesgl!desghorfijo
            'si cambio de dia ==> no debria generar horarios absolutos
            TotHor = 0
            'hora_desde = hDesde
            'hora_hasta = hHasta
            nro_desg = objrsDesgl!desghnro
            
            Call Cambiar_Horas_Desde(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_dia)
            Call Cambiar_Horas_hasta(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_dia)
                
            'OJO !! cuando la FP es relativa y va de posterior a la salida y anterior a la entrada
            ' tiene problemas con los turnos nocturnos ya que la salida pasa de dia ==>
            'hay que hacer el control desde afuera y pasar de dia al calculo de la fecha hasta
            If objFechasHoras.Menor_Hora(fecha_hasta_desg, hora_hasta_desg, fecha_desde_desg, hora_desde_desg) Then
                fecha_hasta_desg = DateAdd("d", 1, fecha_hasta_desg)
            End If

            fraccionar_horas fecpar1, hora_desde, hora_hasta, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, hora_desde, hora_hasta
                        
'            If (hora_desde_desg > hora_hasta) Or ((hora_hasta_desg < hora_desde) And (fecha_hasta_desg <= fecpar1)) Then GoTo Saltear
'            If (hora_desde_desg < hora_desde) And (hora_desde < hora_hasta_desg And hora_hasta_desg <= hora_hasta) Then
'                'Genero HC de hora-desde a desghorahasta */
'                objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta_desg, tdias, thoras, tmin
'                hcdesde = hora_desde
'                hchasta = hora_hasta_desg
'                TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Saltear
'            End If
'            If (hora_desde_desg >= hora_desde And hora_desde_desg < hora_hasta) And (hora_hasta_desg <= hora_hasta And ((hora_hasta_desg > hora_desde) And (fecha_hasta_desg <= fecpar1))) Then
''            /* Genero HC de desghoradesde a desghorahasta */
'                objFechasHoras.RestaHs fecpar1, hora_desde_desg, fecpar1, hora_hasta_desg, tdias, thoras, tmin
'                hcdesde = hora_desde_desg
'                hchasta = hora_hasta_desg
'                TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Saltear
'            End If
'            If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
'            ' Genero HC de hora_desde a hora_hasta */
'                 objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, tdias, thoras, tmin
'                 hcdesde = hora_desde
'                 hchasta = hora_hasta
'                 TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                 If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Saltear
'            End If

            'FGZ - 31/10/2006 ----------------------------------------------------------------------------
            'Desgloce   [---------------]
            'Horario          (----------------)
            If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                objFechasHoras.RestaHs fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                HCDesde = hora_desde
                HCHasta = hora_hasta_desg
                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
            End If

            'Desgloce       [---------------]
            'Horario    (----------------)
            If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                HCDesde = hora_desde_desg
                HCHasta = hora_hasta
                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
            End If
            
            'Desgloce       [---------------]
            'Horario    (-----------------------)
            If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_desde) Then
                objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                HCDesde = hora_desde_desg
                HCHasta = hora_hasta_desg
                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
            End If

            'Desgloce   [---------------]
            'Horario        (--------)
            If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
            'If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
                objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                HCDesde = hora_desde
                HCHasta = hora_hasta
                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
            End If
            'FGZ - 31/10/2006 ----------------------------------------------------------------------------

            cant_parcial = cant_parcial + TotHor
Saltear:
        Next
        
        If ((cant_parcial > 0) And (cant_parcial < objrsDesgl!desghoffset)) Then TotHor = 0
        If (cant_parcial < objrsDesgl!desgcantmin) Then TotHor = 0
        If ((cant_parcial >= objrsDesgl!desgcantmin) And (cant_parcial < objrsDesgl!desgcantmax)) Then
            If (cant_parcial > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
                'FGZ - 31/10/2006 - le cambié esa asignacion
                'TotHor = cant_parcial - objrsDesgl!desgcantmin
                TotHor = cant_parcial
             Else
                TotHor = 0
            End If
        End If
        If (cant_parcial >= objrsDesgl!desgcantmax) Then
            If (cant_parcial > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = objrsDesgl!desgcantmax - objrsDesgl!desgcantmin
             Else
               TotHor = 0
            End If
        End If
'        Chequea si las horas trabajadas estan entre en maximo plus y minimo plus o
'   si el maximo y minimo son 0, paga el total de horas */
      If TotHor > 0 Then
          If (objrsDesgl!desghplus = 1) Then
              TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
              
              If (objrsDesgl!desghminplus <> 0) Or (objrsDesgl!desghmaxplus <> 0) Then
                  If (TotHor < objrsDesgl!desghminplus) Then TotHor = objrsDesgl!desghminplus
                  If (objrsDesgl!desghmaxplus < TotHor) Then TotHor = objrsDesgl!desghmaxplus
              End If
          End If
        ' Redondeo del total de horas */
          objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
          objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
        
          If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
        
          'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
          
          StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                   "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                   "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep) VALUES (" & _
                   TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
                   CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                   ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                   ValorNulo & ",''," & ValorNulo & ",''," & _
                   Empleado.Legajo & "," & ConvFecha(p_fecha) & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
            End If
            
            'FGZ - 12/04/2006 No estaba esto
            'Marcar las registraciones involucradas con el Horario generado
            i = 1
            NoHayMas = False
            Do While i <= UBound(reg) And Not NoHayMas
                If reg(i).Reg_Ent <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                
                If reg(i).Reg_Sal <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                        
                i = i + 1
            Loop
          
          
       End If
         
       objrsDesgl.MoveNext
    Loop
    
    'Flog.writeline Espacios(Tabulador * 3) & "-------------------------------------"
End Sub

Private Sub Generar_Horario_Normal_C3()
' ---------------------------------------------------------------------------------------------
' Descripcion: Procedimiento que genera el Horario normal del dia.
' Autor      :
' Fecha      :
' Ultima Mod.: 09/06/2005
' Descripcion:
'
' ---------------------------------------------------------------------------------------------
Dim Cant_Reg As Integer
Dim Cant_Pares As Integer
Dim i As Integer
Dim par1 As String
Dim par2 As String
Dim HDesde As String
Dim HHasta As String
Dim fecpar1 As Date
Dim fecpar2 As Date
Dim anor1 As Integer
Dim anor2 As Integer
Dim Reg_Ent As Long
Dim Reg_Sal As Long
Dim otroDia As Boolean
Dim j As Integer
Dim Weekdia As Byte
Dim objrsDesgl As New ADODB.Recordset
Dim TotHor As Single
Dim TotHorHHMM As String

'FGZ - 30/08/2006
'Dim nro_desg As integer
Dim nro_desg As Long

Dim hora_desde_desg As String
Dim hora_hasta_desg As String
Dim fecha_desde_desg As Date
Dim fecha_hasta_desg As Date
Dim Hora_a_Red As String
Dim HCDesde As String
Dim HCHasta As String
Dim cant_aux As Single
Dim CantH_Acum As Single
Dim cant_parcial As Single
Dim par As Integer
Dim rs As New ADODB.Recordset
Dim Cambio_dia As Boolean
Dim EsFeriado2 As Boolean
Dim objFeriado2 As New Feriado
    
'FGZ - 12/04/2006 - Arreglo de registraciones leidas y a marcar como procesadas
Dim reg(1 To 100) As TRegistracionesProcesadas
Dim NoHayMas As Boolean
    
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Version para Turnos Nocturnos"
    End If
    diatipo = 0 'Dia laborable
    
    StrSql = "SELECT COUNT(regnro) as cant FROM " & TTempWFTurno & " WHERE evenro = 2 "
    OpenRecordset StrSql, objRs
    If Not objRs.EOF Then If Not IsNull(objRs!Cant) Then Cant_Reg = objRs!Cant
    Cant_Pares = Int(Cant_Reg / 2)
    
    'FGZ - 09/06/2006
    'generacion de horario normal aun si tiene una sola registracion
    If Cant_Reg = 1 Then
        ' Se crea un reg. de wf-dia para usar en la política - Con turnos libres wf-dia está vacía */
        'InsertarWFDia Nro_Dia, "", p_fecha
        Call Politica(40)
        StrSql = "DELETE FROM " & TTempWFDiaLaboral
        objConn.Execute StrSql, , adExecuteNoRecords
        Exit Sub
    End If
    
    For i = 0 To Cant_Pares
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par = " & i
        If rs.State = adStateOpen Then rs.Close
        rs.Open StrSql, objConn
        If rs.EOF Then GoTo continuarFor
        par = rs!par
        par1 = rs!Hora
        fecpar1 = rs!Fecha
        Reg_Ent = rs!Regnro
        
        'FGZ - 12/04/2006 - ojo !!! - si el desgloce es por cantidad de horas hay que guardar los pares anteriores porque acumula antes de guardar
        ' y se pisan los nro de las registraciones a marcar como procesadas
        reg(i).Reg_Ent = rs!Regnro
        
        anor1 = 0 & rs!anornro
        
        StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs!Regnro & " AND regestado <> 'P'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        rs.MoveNext
        If rs.EOF Then Exit Sub
        
        par2 = rs!Hora
        fecpar2 = rs!Fecha
        Reg_Sal = rs!Regnro
        'FGZ - 12/04/2006 - ojo !!! - si el desgloce es por cantidad de horas hay que guardar los pares anteriores porque acumula antes de guardar
        ' y se pisan los nro de las registraciones a marcar como procesadas
        reg(i).Reg_Sal = rs!Regnro
        
        anor2 = "0" & rs!anornro
        
        StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs!Regnro & " AND regestado <> 'P'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        If fecpar1 = fecpar2 Then
            HDesde = par1
            HHasta = par2
            otroDia = False
        Else
            HDesde = par1       'Como las fechas son distintas el desgloce es distinto por cada día
            HHasta = "2400"     'Genero dos HC uno de par1 hasta 24:00 y el otro de 00:00 a par2
            otroDia = True
        End If
        
        Cambio_dia = False
        Weekdia = Weekday(p_fecha)
        For j = 1 To 2 'En el peor de los casos lo hara 2 veces, una por cada día
            'FGZ - 09/06/2006
            'le tube que agregar esta condicion porque cuando se trataba de un turno nocturno hacia macanas
            If Cambio_dia Then
                EsFeriado2 = objFeriado2.Feriado(fecpar1, Empleado.Ternro, depurar)
                If EsFeriado2 Then
                    Weekdia = Weekday(fecpar1)
                    diatipo = 2
                End If
            End If
            
'            'FGZ - 10/01/2006
'            'le tube que agregar esta condicion porque
'            'cuando se trataba de un turno nocturno en dia viernes tal que el sabado no trabaja
'            'hacia macanas
'            If Not Cambio_Dia Then
'                Weekdia = Weekday(fecpar1)
'            End If
            
            StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
                     "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
            OpenRecordset StrSql, objrsDesgl
            If objrsDesgl.EOF Then
                If depurar Then GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
                Exit Sub
            End If
            
            StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 2 "
            StrSql = StrSql & " ORDER BY desghorfijo,desghoradesde"
            'StrSql = StrSql & " ORDER BY desgdnro,desghoradesde"
            OpenRecordset StrSql, objrsDesgl
            Do While Not objrsDesgl.EOF
            
                '1 Horario Fijo
                '2 Horario Variable
                '3 Horario Fijo/Variable
                Tipo_de_Desgloce = objrsDesgl!desghorfijo
                
                'If Tipo_de_Desgloce = 1 And Cambio_Dia Then
                '    GoTo continuar
                'End If
                
                'si cambio de dia ==> no debria generar horarios absolutos
                TotHor = 0
                hora_desde = HDesde
                hora_hasta = HHasta
                nro_desg = objrsDesgl!desghnro
    
    '            ***** Cambio segun lo definido en el desglose de horas ******
    
'                Cambiar_Horas nro_desg, hora_desde_desg, hora_hasta_desg, fecha_desde_desg, fecha_hasta_desg
                
                
                'FGZ - 12/06/2006
                '-------------------------------------------------------------------------------
'                Call Cambiar_Horas_Desde(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_Dia)
'                Call Cambiar_Horas_hasta(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_Dia)
                
                'FGZ - 12/06/2006
                If diatipo = 0 Then
                    Call Cambiar_Horas_Desde(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_dia)
                    Call Cambiar_Horas_hasta(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_dia)
                Else
                    Call Cambiar_Horas_Desde2(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_dia, fecpar1)
                    Call Cambiar_Horas_hasta2(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_dia, fecpar1)
                End If
                
                
                'FGZ - 10/01/2006
                'OJO !! cuando la FP es relativa y va de posterior a la salida y anterior a la entrada
                ' tiene problemas con los turnos nocturnos ya que la salida pasa de dia ==>
                'hay que hacer el control desde afuera y pasar de dia al calculo de la fecha hasta
                If objFechasHoras.Menor_Hora(fecha_hasta_desg, hora_hasta_desg, fecha_desde_desg, hora_desde_desg) Then
                    fecha_hasta_desg = DateAdd("d", 1, fecha_hasta_desg)
                End If
                
                Call fraccionar_horas(fecpar1, hora_desde, hora_hasta, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, hora_desde, hora_hasta)
    
                'Desgloce   [---------------]
                'Horario          (----------------)
                If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                    objFechasHoras.RestaHs fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                    HCDesde = hora_desde
                    HCHasta = hora_hasta_desg
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
                'Desgloce       [---------------]
                'Horario    (----------------)
                If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                    objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                    HCDesde = hora_desde_desg
                    HCHasta = hora_hasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
                
                'Desgloce       [---------------]
                'Horario    (-----------------------)
                If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_desde) Then
                    objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                    HCDesde = hora_desde_desg
                    HCHasta = hora_hasta_desg
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
                'Desgloce   [---------------]
                'Horario        (--------)
                If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                'If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                    HCDesde = hora_desde
                    HCHasta = hora_hasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
    
                '--------------------------------------------------------------------------
                '--------------------------------------------------------------------------
                'Viejos
'                If (hora_desde_desg < hora_desde) And (hora_desde < hora_hasta_desg And hora_hasta_desg <= hora_hasta) Then
'                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta_desg, tdias, thoras, tmin
'                    hcdesde = hora_desde
'                    hchasta = hora_hasta_desg
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                End If
'                If (hora_desde_desg >= hora_desde And hora_desde_desg < hora_hasta) And (hora_hasta_desg > hora_hasta) Then
'                    objFechasHoras.RestaHs fecpar1, hora_desde_desg, fecpar1, hora_hasta, tdias, thoras, tmin
'                    hcdesde = hora_desde_desg
'                    hchasta = hora_hasta
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                End If
'                If (hora_desde_desg >= hora_desde And hora_desde_desg < hora_hasta) And (hora_hasta_desg <= hora_hasta And hora_hasta_desg > hora_desde) Then
'                    objFechasHoras.RestaHs fecpar1, hora_desde_desg, fecpar1, hora_hasta_desg, tdias, thoras, tmin
'                    hcdesde = hora_desde_desg
'                    hchasta = hora_hasta_desg
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                End If
'                If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
'                     '/* Genero HC de hora-desde a hora-hasta */
'                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, tdias, thoras, tmin
'                    hcdesde = hora_desde
'                    hchasta = hora_hasta
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                End If
                
                
                
'                'FGZ - nueva 25/10/2005
'                If (hora_desde_desg <= hora_desde) And ((hora_hasta_desg > hora_hasta) Or (hora_hasta_desg = "0000" And hora_hasta = "2400")) Then
'                     '/* Genero HC de hora-desde a hora-hasta */
'                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, tdias, thoras, tmin
'                    hcdesde = hora_desde
'                    hchasta = hora_hasta
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                End If
'                'FGZ - nueva 26/10/2005
'                If (hora_desde_desg >= hora_desde) And ((hora_hasta_desg > hora_hasta) Or (hora_hasta_desg < hora_hasta And fecha_desde_desg < fecha_hasta_desg)) Then
'                     '/* Genero HC de hora-desde a hora-hasta */
'                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, tdias, thoras, tmin
'                    hcdesde = hora_desde
'                    hchasta = hora_hasta
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                End If
                'Viejos
                '--------------------------------------------------------------------------
                '--------------------------------------------------------------------------
                
                
                If (TotHor = 0) Then GoTo Continuar
                 
                If (objrsDesgl!desghplus = 1) Then
                    'Hora Plus
                    TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
                    If (objrsDesgl!desghminplus <> 0) Or (objrsDesgl!desghmaxplus <> 0) Then
                        If (TotHor < objrsDesgl!desghminplus) Then TotHor = objrsDesgl!desghminplus
                        If (objrsDesgl!desghmaxplus < TotHor) Then TotHor = objrsDesgl!desghmaxplus
                    End If
                End If
                
                'Redondeo del total de horas
'                objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
'                objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
                'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
                TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
                Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
                TotHorHHMM = "'" & TotHorHHMM & "'"
                
                Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
                Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
                                
                                
                Tipo_Hora = objrsDesgl!thnro
                Total_horas = TotHor
                
                Call Politica(540)
                
                TotHor = Total_horas
                
                If TotHor = 0 Then GoTo Continuar
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                
                
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                         "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                         "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                         TotHorHHMM & "," & TotHor & "," & ConvFecha(fecpar1) & ",' '," & ConvFecha(fecpar1) & ",'" & HCDesde & "','" & _
                         HCHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                         ValorNulo & "," & Empleado.Ternro & "," & Tipo_Hora & "," & Nro_Turno & "," & _
                         Reg_Ent & ",'" & IIf(j = 1, par1, "0000") & "'," & Reg_Sal & ",'" & _
                         IIf((j = 2) Or (j = 1 And Not otroDia), par2, "2400") & "'," & Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & Tipo_Hora & "- Cantidad: " & TotHor & " hs."
                End If
                
                ' Marcar las registraciones involucradas con el Horario generado
                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Ent
                objConn.Execute StrSql, , adExecuteNoRecords
                    
                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Sal
                objConn.Execute StrSql, , adExecuteNoRecords
                
Continuar:
                objrsDesgl.MoveNext
            Loop
            
            If fecpar1 = fecpar2 Then
                Exit For
            Else
                hora_desde = "0000"
                HDesde = hora_desde
                hora_hasta = par2
                HHasta = hora_hasta
                fecpar1 = fecpar2
                Cambio_dia = True
            End If
            
        Next j
continuarFor:
    Next i
    
    
    ' Genero los registros del HC, cuando se trata de desglose como cantidad de horas
    'FGZ - 19/12/2008 - Faltaba poner esta variable en laborable otra vez
    diatipo = 0 'Dia laborable
    
    Weekdia = Weekday(p_fecha)
    StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
             "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
    OpenRecordset StrSql, objrsDesgl
    If objrsDesgl.EOF Then
        If depurar Then GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
        Exit Sub
    End If
    StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 1 " & _
                     " ORDER BY desgdnro,desghoradesde"
    OpenRecordset StrSql, objrsDesgl
    
    Do While Not objrsDesgl.EOF
        cant_aux = sumarizar_horas(Cant_Pares, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta)
        'If ((cant_aux > 0) And (cant_aux < objrsDesgl!desghoffset)) Then TotHor = 0
        If (cant_aux < objrsDesgl!desgcantmin) Then TotHor = 0
        If ((cant_aux >= objrsDesgl!desgcantmin) And (cant_aux < objrsDesgl!desgcantmax)) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = cant_aux - objrsDesgl!desgcantmin
            Else
               TotHor = 0
            End If
        End If
        If (cant_aux >= objrsDesgl!desgcantmax) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = objrsDesgl!desgcantmax - objrsDesgl!desgcantmin
            Else
               TotHor = 0
            End If
        End If
        'FGZ - 29/07/2008 ----
        If ((TotHor > 0) And (TotHor < objrsDesgl!desghoffset)) Then TotHor = 0
        'FGZ - 29/07/2008 ----
        
        
        ' Chequea si las horas trabajadas estan entre en maximo plus y minimo plus o
        ' si el maximo y minimo son 0, paga el total de horas
        If (objrsDesgl!desghplus = 1) And (objrsDesgl!desghmaxplus = 0 And objrsDesgl!desghminplus = 0) Then
           If (TotHor < objrsDesgl!desghminplus) Then
                 GoTo ContinuarCant
              Else
                 If (TotHor > objrsDesgl!desghmaxplus) Then TotHor = TotHor - objrsDesgl!desghmaxplus
            End If
        End If
        If TotHor > 0 Then
            ' Si es plus, se calcula la duración de la hora */
            If (objrsDesgl!desghplus = 1) Then
                TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
            End If
            ' Redondeo del total de horas
            'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
            'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
            'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
            TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
            Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
            TotHorHHMM = "'" & TotHorHHMM & "'"
            
            Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
            Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
            
            
            If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
            
            'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
            
            'FGZ - 22/03/2011
            If TotHor = 0 Then GoTo ContinuarCant
            
            'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
            'Fecha_Generacion = p_fecha
            Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
            'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
            
            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                      "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                      "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                      TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
                      CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                      ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                      ValorNulo & ",''," & ValorNulo & ",''," & _
                      Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
            End If
        
            'FGZ - 12/04/2006 No estaba esto
            'Marcar las registraciones involucradas con el Horario generado
            i = 1
            NoHayMas = False
            Do While i <= UBound(reg) And Not NoHayMas
                If reg(i).Reg_Ent <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                
                If reg(i).Reg_Sal <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                        
                i = i + 1
            Loop
        End If

ContinuarCant:
        objrsDesgl.MoveNext
    Loop
    
    
    ' ===============================================================================================
    ' Genero los registros del HC, cuando se trata de desglose como Cantidad de Horas y Franja Horaria
    'FGZ - 19/12/2008 - Faltaba poner esta variable en laborable otra vez
    diatipo = 0 'Dia laborable
    Weekdia = Weekday(p_fecha)
    StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
             "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
    OpenRecordset StrSql, objrsDesgl
    'FGZ - 31/10/2006
    'Esta alrevez el if
    'If Not objrsDesgl.EOF And depurar Then
    If objrsDesgl.EOF And depurar Then
        GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
        Exit Sub
    End If
    StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 3 " & _
                     " ORDER BY desghoradesde,desghplus"
    OpenRecordset StrSql, objrsDesgl
    Do While Not objrsDesgl.EOF
        cant_parcial = 0
        For i = 0 To Cant_Pares
            StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par =" & i
            OpenRecordset StrSql, objRs
            If objRs.EOF Then GoTo Saltear
            hora_desde = objRs!Hora
            fecpar1 = objRs!Fecha
            objRs.MoveNext
            If objRs.EOF Then GoTo Saltear
            hora_hasta = objRs!Hora
            fecpar2 = objRs!Fecha

            hora_desde_desg = objrsDesgl!desghoradesde
            hora_hasta_desg = objrsDesgl!desghorahasta

            fraccionar_horas fecpar1, hora_desde, hora_hasta, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, hora_desde, hora_hasta
                        
            If (objrsDesgl!desghoradesde > hora_hasta) Or (objrsDesgl!desghorahasta < hora_desde) Then GoTo Saltear
            If (hora_desde_desg < hora_desde) And (hora_desde < hora_hasta_desg And hora_hasta_desg <= hora_hasta) Then
                'Genero HC de hora-desde a desghorahasta */
                objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta_desg, Tdias, Thoras, Tmin
                HCDesde = hora_desde
                HCHasta = hora_hasta_desg
                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Saltear
            End If
            If (hora_desde_desg >= hora_desde And hora_desde_desg < hora_hasta) And (hora_hasta_desg <= hora_hasta And hora_hasta_desg > hora_desde) Then
'            /* Genero HC de desghoradesde a desghorahasta */
                objFechasHoras.RestaHs fecpar1, hora_desde_desg, fecpar1, hora_hasta_desg, Tdias, Thoras, Tmin
                HCDesde = hora_desde_desg
                HCHasta = hora_hasta_desg
                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Saltear
            End If
            If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
            ' Genero HC de hora_desde a hora_hasta */
                 objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                 HCDesde = hora_desde
                 HCHasta = hora_hasta
                 TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                 If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Saltear
            End If
            cant_parcial = cant_parcial + TotHor
Saltear:
        Next
        
        'If ((cant_parcial > 0) And (cant_parcial < objrsDesgl!desghoffset)) Then TotHor = 0
        If (cant_parcial < objrsDesgl!desgcantmin) Then TotHor = 0
        If ((cant_parcial >= objrsDesgl!desgcantmin) And (cant_parcial < objrsDesgl!desgcantmax)) Then
            If (cant_parcial > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
                TotHor = cant_parcial - objrsDesgl!desgcantmin
             Else
                TotHor = 0
            End If
        End If
        If (cant_parcial >= objrsDesgl!desgcantmax) Then
            If (cant_parcial > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = objrsDesgl!desgcantmax - objrsDesgl!desgcantmin
             Else
               TotHor = 0
            End If
        End If
        'FGZ - 29/07/2008 ----
        If ((TotHor > 0) And (TotHor < objrsDesgl!desghoffset)) Then TotHor = 0
        'FGZ - 29/07/2008 ----
        
    'Chequea si las horas trabajadas estan entre en maximo plus y minimo plus o
    'si el maximo y minimo son 0, paga el total de horas */
      If TotHor > 0 Then
          If (objrsDesgl!desghplus = 1) Then
              TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
              
              If (objrsDesgl!desghminplus <> 0) Or (objrsDesgl!desghmaxplus <> 0) Then
                  If (TotHor < objrsDesgl!desghminplus) Then TotHor = objrsDesgl!desghminplus
                  If (objrsDesgl!desghmaxplus < TotHor) Then TotHor = objrsDesgl!desghmaxplus
              End If
          End If
          'Redondeo del total de horas
          'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
          'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
        'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
        TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
        Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
        TotHorHHMM = "'" & TotHorHHMM & "'"
        
        Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
        Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
          
        
          If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
        
          'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
          
         'FGZ - 22/03/2011
         If TotHor = 0 Then GoTo ContinuarAmbas
          
        'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
        'Fecha_Generacion = p_fecha
        Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
        'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
          
          StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                   "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                   "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                   TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
                   CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                   ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                   ValorNulo & ",''," & ValorNulo & ",''," & _
                   Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
            End If
            
            'FGZ - 12/04/2006 No estaba esto
            'Marcar las registraciones involucradas con el Horario generado
            i = 1
            NoHayMas = False
            Do While i <= UBound(reg) And Not NoHayMas
                If reg(i).Reg_Ent <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                
                If reg(i).Reg_Sal <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                        
                i = i + 1
            Loop
       End If
         
ContinuarAmbas:
       objrsDesgl.MoveNext
    Loop
    
    'Flog.writeline Espacios(Tabulador * 3) & "-------------------------------------"
End Sub


Private Sub Generar_Horario_Normal_C4()
' ---------------------------------------------------------------------------------------------
' Descripcion: Procedimiento que genera el Horario normal del dia.
' Autor      : FGZ
' Fecha      : 04/04/2007
' Ultima Mod.:
' Descripcion:
'
' ---------------------------------------------------------------------------------------------
Dim Cant_Reg As Integer
Dim Cant_Pares As Integer
Dim i As Integer
Dim par1 As String
Dim par2 As String
Dim HDesde As String
Dim HHasta As String
Dim fecpar1 As Date
Dim fecpar2 As Date
Dim anor1 As Integer
Dim anor2 As Integer
Dim Reg_Ent As Long
Dim Reg_Sal As Long
Dim otroDia As Boolean
Dim j As Integer
Dim Weekdia As Byte
Dim objrsDesgl As New ADODB.Recordset
Dim TotHor As Single
Dim TotHorHHMM As String

'FGZ - 30/08/2006
'Dim nro_desg As integer
Dim nro_desg As Long

Dim hora_desde_desg As String
Dim hora_hasta_desg As String
Dim fecha_desde_desg As Date
Dim fecha_hasta_desg As Date
Dim Hora_a_Red As String
Dim HCDesde As String
Dim HCHasta As String
Dim cant_aux As Single
Dim CantH_Acum As Single
Dim cant_parcial As Single
Dim par As Integer
Dim rs As New ADODB.Recordset
Dim Cambio_dia As Boolean
Dim EsFeriado2 As Boolean
Dim objFeriado2 As New Feriado
    
'FGZ - 12/04/2006 - Arreglo de registraciones leidas y a marcar como procesadas
Dim reg(1 To 100) As TRegistracionesProcesadas
Dim NoHayMas As Boolean
    
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Version Integrada Estandar + Nocturnos"
    End If
    diatipo = 0 'Dia laborable
    
    StrSql = "SELECT COUNT(regnro) as cant FROM " & TTempWFTurno & " WHERE evenro = 2 "
    OpenRecordset StrSql, objRs
    If Not objRs.EOF Then If Not IsNull(objRs!Cant) Then Cant_Reg = objRs!Cant
    Cant_Pares = Int(Cant_Reg / 2)
    
    'FGZ - 09/06/2006
    'generacion de horario normal aun si tiene una sola registracion
    If Cant_Reg = 1 Then
        ' Se crea un reg. de wf-dia para usar en la política - Con turnos libres wf-dia está vacía */
        'InsertarWFDia Nro_Dia, "", p_fecha
        Call Politica(40)
        StrSql = "DELETE FROM " & TTempWFDiaLaboral
        objConn.Execute StrSql, , adExecuteNoRecords
        Exit Sub
    End If
    
    For i = 0 To Cant_Pares
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par = " & i
        If rs.State = adStateOpen Then rs.Close
        rs.Open StrSql, objConn
        If rs.EOF Then GoTo continuarFor
        par = rs!par
        par1 = rs!Hora
        fecpar1 = rs!Fecha
        Reg_Ent = rs!Regnro
        
        'FGZ - 12/04/2006 - ojo !!! - si el desgloce es por cantidad de horas hay que guardar los pares anteriores porque acumula antes de guardar
        ' y se pisan los nro de las registraciones a marcar como procesadas
        reg(i).Reg_Ent = rs!Regnro
        
        anor1 = 0 & rs!anornro
        
        StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs!Regnro & " AND regestado <> 'P'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        rs.MoveNext
        If rs.EOF Then Exit Sub
        
        par2 = rs!Hora
        fecpar2 = rs!Fecha
        Reg_Sal = rs!Regnro
        'FGZ - 12/04/2006 - ojo !!! - si el desgloce es por cantidad de horas hay que guardar los pares anteriores porque acumula antes de guardar
        ' y se pisan los nro de las registraciones a marcar como procesadas
        reg(i).Reg_Sal = rs!Regnro
        
        anor2 = "0" & rs!anornro
        
        StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs!Regnro & " AND regestado <> 'P'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        If fecpar1 = fecpar2 Then
            HDesde = par1
            HHasta = par2
            otroDia = False
        Else
            HDesde = par1       'Como las fechas son distintas el desgloce es distinto por cada día
            HHasta = "2400"     'Genero dos HC uno de par1 hasta 24:00 y el otro de 00:00 a par2
            otroDia = True
        End If
        
        Cambio_dia = False
        Weekdia = Weekday(p_fecha)
        For j = 1 To 2 'En el peor de los casos lo hara 2 veces, una por cada día
            'FGZ - 09/06/2006
            'le tube que agregar esta condicion porque cuando se trataba de un turno nocturno hacia macanas
            If Cambio_dia Then
                EsFeriado2 = objFeriado2.Feriado(fecpar1, Empleado.Ternro, depurar)
                If EsFeriado2 Then
                    Weekdia = Weekday(fecpar1)
                    diatipo = 2
                End If
            End If
            
'            'FGZ - 10/01/2006
'            'le tube que agregar esta condicion porque
'            'cuando se trataba de un turno nocturno en dia viernes tal que el sabado no trabaja
'            'hacia macanas
'            If Not Cambio_Dia Then
'                Weekdia = Weekday(fecpar1)
'            End If
            
            StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
                     "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
            OpenRecordset StrSql, objrsDesgl
            If objrsDesgl.EOF Then
                If depurar Then GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
                Exit Sub
            End If
            
            StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 2 "
            StrSql = StrSql & " ORDER BY desghorfijo,desghoradesde"
            'StrSql = StrSql & " ORDER BY desgdnro,desghoradesde"
            OpenRecordset StrSql, objrsDesgl
            Do While Not objrsDesgl.EOF
            
                '1 Horario Fijo
                '2 Horario Variable
                '3 Horario Fijo/Variable
                Tipo_de_Desgloce = objrsDesgl!desghorfijo
                
                'If Tipo_de_Desgloce = 1 And Cambio_Dia Then
                '    GoTo continuar
                'End If
                
                'si cambio de dia ==> no debria generar horarios absolutos
                TotHor = 0
                hora_desde = HDesde
                hora_hasta = HHasta
                nro_desg = objrsDesgl!desghnro
    
    '            ***** Cambio segun lo definido en el desglose de horas ******
    
'                Cambiar_Horas nro_desg, hora_desde_desg, hora_hasta_desg, fecha_desde_desg, fecha_hasta_desg
                
                
                'FGZ - 12/06/2006
                '-------------------------------------------------------------------------------
'                Call Cambiar_Horas_Desde(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_Dia)
'                Call Cambiar_Horas_hasta(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_Dia)
                
                'FGZ - 12/06/2006
                If diatipo = 0 Then
                    Call Cambiar_Horas_Desde(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_dia)
                    Call Cambiar_Horas_hasta(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_dia)
                Else
                    Call Cambiar_Horas_Desde2(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_dia, fecpar1)
                    Call Cambiar_Horas_hasta2(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_dia, fecpar1)
                End If
                
                
                'FGZ - 10/01/2006
                'OJO !! cuando la FP es relativa y va de posterior a la salida y anterior a la entrada
                ' tiene problemas con los turnos nocturnos ya que la salida pasa de dia ==>
                'hay que hacer el control desde afuera y pasar de dia al calculo de la fecha hasta
                If objFechasHoras.Menor_Hora(fecha_hasta_desg, hora_hasta_desg, fecha_desde_desg, hora_desde_desg) Then
                    fecha_hasta_desg = DateAdd("d", 1, fecha_hasta_desg)
                End If
                
                Call fraccionar_horas(fecpar1, hora_desde, hora_hasta, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, hora_desde, hora_hasta)
    
                'Desgloce   [---------------]
                'Horario          (----------------)
                If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                    objFechasHoras.RestaHs fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                    HCDesde = hora_desde
                    HCHasta = hora_hasta_desg
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
                'Desgloce       [---------------]
                'Horario    (----------------)
                If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                    objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                    HCDesde = hora_desde_desg
                    HCHasta = hora_hasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
                
                'Desgloce       [---------------]
                'Horario    (-----------------------)
                If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_desde) Then
                    objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                    HCDesde = hora_desde_desg
                    HCHasta = hora_hasta_desg
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
                'Desgloce   [---------------]
                'Horario        (--------)
                If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                'If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                    HCDesde = hora_desde
                    HCHasta = hora_hasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
    
                '--------------------------------------------------------------------------
                '--------------------------------------------------------------------------
                'Viejos
'                If (hora_desde_desg < hora_desde) And (hora_desde < hora_hasta_desg And hora_hasta_desg <= hora_hasta) Then
'                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta_desg, tdias, thoras, tmin
'                    hcdesde = hora_desde
'                    hchasta = hora_hasta_desg
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                End If
'                If (hora_desde_desg >= hora_desde And hora_desde_desg < hora_hasta) And (hora_hasta_desg > hora_hasta) Then
'                    objFechasHoras.RestaHs fecpar1, hora_desde_desg, fecpar1, hora_hasta, tdias, thoras, tmin
'                    hcdesde = hora_desde_desg
'                    hchasta = hora_hasta
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                End If
'                If (hora_desde_desg >= hora_desde And hora_desde_desg < hora_hasta) And (hora_hasta_desg <= hora_hasta And hora_hasta_desg > hora_desde) Then
'                    objFechasHoras.RestaHs fecpar1, hora_desde_desg, fecpar1, hora_hasta_desg, tdias, thoras, tmin
'                    hcdesde = hora_desde_desg
'                    hchasta = hora_hasta_desg
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                End If
'                If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
'                     '/* Genero HC de hora-desde a hora-hasta */
'                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, tdias, thoras, tmin
'                    hcdesde = hora_desde
'                    hchasta = hora_hasta
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                End If
                
                
                
'                'FGZ - nueva 25/10/2005
'                If (hora_desde_desg <= hora_desde) And ((hora_hasta_desg > hora_hasta) Or (hora_hasta_desg = "0000" And hora_hasta = "2400")) Then
'                     '/* Genero HC de hora-desde a hora-hasta */
'                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, tdias, thoras, tmin
'                    hcdesde = hora_desde
'                    hchasta = hora_hasta
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                End If
'                'FGZ - nueva 26/10/2005
'                If (hora_desde_desg >= hora_desde) And ((hora_hasta_desg > hora_hasta) Or (hora_hasta_desg < hora_hasta And fecha_desde_desg < fecha_hasta_desg)) Then
'                     '/* Genero HC de hora-desde a hora-hasta */
'                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, tdias, thoras, tmin
'                    hcdesde = hora_desde
'                    hchasta = hora_hasta
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                End If
                'Viejos
                '--------------------------------------------------------------------------
                '--------------------------------------------------------------------------
                
                
                If (TotHor = 0) Then GoTo Continuar
                 
                If (objrsDesgl!desghplus = 1) Then
                    'Hora Plus
                    TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
                    If (objrsDesgl!desghminplus <> 0) Or (objrsDesgl!desghmaxplus <> 0) Then
                        If (TotHor < objrsDesgl!desghminplus) Then TotHor = objrsDesgl!desghminplus
                        If (objrsDesgl!desghmaxplus < TotHor) Then TotHor = objrsDesgl!desghmaxplus
                    End If
                End If
                
                'Redondeo del total de horas
                'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
                'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
                'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
                TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
                Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
                TotHorHHMM = "'" & TotHorHHMM & "'"
                
                Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
                Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
                                
                Tipo_Hora = objrsDesgl!thnro
                Total_horas = TotHor
                
                Call Politica(540)
                
                TotHor = Total_horas
                
                If TotHor = 0 Then GoTo Continuar
                
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                         "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                         "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                         TotHorHHMM & "," & TotHor & "," & ConvFecha(fecpar1) & ",' '," & ConvFecha(fecpar1) & ",'" & HCDesde & "','" & _
                         HCHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                         ValorNulo & "," & Empleado.Ternro & "," & Tipo_Hora & "," & Nro_Turno & "," & _
                         Reg_Ent & ",'" & IIf(j = 1, par1, "0000") & "'," & Reg_Sal & ",'" & _
                         IIf((j = 2) Or (j = 1 And Not otroDia), par2, "2400") & "'," & Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & Tipo_Hora & "- Cantidad: " & TotHor & " hs."
                End If
                
                ' Marcar las registraciones involucradas con el Horario generado
                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Ent
                objConn.Execute StrSql, , adExecuteNoRecords
                    
                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Sal
                objConn.Execute StrSql, , adExecuteNoRecords
                
Continuar:
                objrsDesgl.MoveNext
            Loop
            
            If fecpar1 = fecpar2 Then
                Exit For
            Else
                hora_desde = "0000"
                HDesde = hora_desde
                hora_hasta = par2
                HHasta = hora_hasta
                fecpar1 = fecpar2
                Cambio_dia = True
            End If
            
        Next j
continuarFor:
    Next i
    
    
    ' Genero los registros del HC, cuando se trata de desglose como cantidad de horas
    Weekdia = Weekday(p_fecha)
    StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
             "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
    OpenRecordset StrSql, objrsDesgl
    If objrsDesgl.EOF Then
        If depurar Then GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
        Exit Sub
    End If
    StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 1 " & _
                     " ORDER BY desgdnro,desghoradesde"
    OpenRecordset StrSql, objrsDesgl
    
    Do While Not objrsDesgl.EOF
'        cant_aux = sumarizar_horas(Cant_Pares, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta)
'        If ((cant_aux > 0) And (cant_aux < objrsDesgl!desghoffset)) Then TotHor = 0
'        If (cant_aux < objrsDesgl!desgcantmin) Then TotHor = 0
'        If ((cant_aux >= objrsDesgl!desgcantmin) And (cant_aux < objrsDesgl!desgcantmax)) Then
'            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
'               TotHor = cant_aux - objrsDesgl!desgcantmin
'            Else
'               TotHor = 0
'            End If
'        End If
'        If (cant_aux >= objrsDesgl!desgcantmax) Then
'            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
'               TotHor = objrsDesgl!desgcantmax - objrsDesgl!desgcantmin
'            Else
'               TotHor = 0
'            End If
'        End If
        
        'FGZ - 29/07/2008 ----
        cant_aux = sumarizar_horas(Cant_Pares, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta)
        If (cant_aux < objrsDesgl!desgcantmin) Then TotHor = 0
        If ((cant_aux >= objrsDesgl!desgcantmin) And (cant_aux < objrsDesgl!desgcantmax)) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = cant_aux - objrsDesgl!desgcantmin
            Else
               TotHor = 0
            End If
        End If
        If (cant_aux >= objrsDesgl!desgcantmax) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = objrsDesgl!desgcantmax - objrsDesgl!desgcantmin
            Else
               TotHor = 0
            End If
        End If
        If ((TotHor > 0) And (TotHor < objrsDesgl!desghoffset)) Then TotHor = 0
        'FGZ - 29/07/2008 ----
        
        
        ' Chequea si las horas trabajadas estan entre en maximo plus y minimo plus o
        ' si el maximo y minimo son 0, paga el total de horas
        If (objrsDesgl!desghplus = 1) And (objrsDesgl!desghmaxplus = 0 And objrsDesgl!desghminplus = 0) Then
           If (TotHor < objrsDesgl!desghminplus) Then
                 GoTo ContinuarCant
              Else
                 If (TotHor > objrsDesgl!desghmaxplus) Then TotHor = TotHor - objrsDesgl!desghmaxplus
            End If
        End If
        If TotHor > 0 Then
            ' Si es plus, se calcula la duración de la hora */
            If (objrsDesgl!desghplus = 1) Then
                TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
            End If
            
            'Redondeo del total de horas
            'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
            'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
            'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
            TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
            Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
            TotHorHHMM = "'" & TotHorHHMM & "'"
            
            Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
            Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
            If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
            
            'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
            
            'FGZ - 22/03/2011
            If TotHor = 0 Then GoTo ContinuarCant
            
            'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
            'Fecha_Generacion = p_fecha
            Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
            'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
            
            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                      "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                      "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                      TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
                      CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                      ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                      ValorNulo & ",''," & ValorNulo & ",''," & _
                      Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
            End If
        
            'FGZ - 12/04/2006 No estaba esto
            'Marcar las registraciones involucradas con el Horario generado
            i = 1
            NoHayMas = False
            Do While i <= UBound(reg) And Not NoHayMas
                If reg(i).Reg_Ent <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                
                If reg(i).Reg_Sal <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                        
                i = i + 1
            Loop
        End If
ContinuarCant:
        objrsDesgl.MoveNext
    Loop
    
    
    ' ================================================================================================
    ' Genero los registros del HC, cuando se trata de desglose como Cantidad de Horas y Franja Horaria
    ' ================================================================================================
    Weekdia = Weekday(p_fecha)
    StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
             "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
    OpenRecordset StrSql, objrsDesgl
    'FGZ - 31/10/2006
    'Esta alrevez el if
    'If Not objrsDesgl.EOF And depurar Then
    If objrsDesgl.EOF And depurar Then
        GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
        Exit Sub
    End If
    StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 3 " & _
                     " ORDER BY desghoradesde,desghplus"
    OpenRecordset StrSql, objrsDesgl
    Do While Not objrsDesgl.EOF
        cant_parcial = 0
        For i = 0 To Cant_Pares
            StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par =" & i
            OpenRecordset StrSql, objRs
            If objRs.EOF Then GoTo Saltear
            hora_desde = objRs!Hora
            par1 = objRs!Hora
            fecpar1 = objRs!Fecha
            objRs.MoveNext
            If objRs.EOF Then GoTo Saltear
            hora_hasta = objRs!Hora
            par2 = objRs!Hora
            fecpar2 = objRs!Fecha


            'FGZ - 06/05/2010 ------------------------------------
            If fecpar1 = fecpar2 Then
                HDesde = par1
                HHasta = par2
                otroDia = False
            Else
                HDesde = par1       'Como las fechas son distintas el desgloce es distinto por cada día
                HHasta = "2400"     'Genero dos HC uno de par1 hasta 24:00 y el otro de 00:00 a par2
                otroDia = True
            End If
            
            Cambio_dia = False
            For j = 1 To 2 'En el peor de los casos lo hara 2 veces, una por cada día
        
                hora_desde_desg = objrsDesgl!desghoradesde
                hora_hasta_desg = objrsDesgl!desghorahasta
    
                'FGZ - 31/10/2006
                Tipo_de_Desgloce = objrsDesgl!desghorfijo
                'si cambio de dia ==> no debria generar horarios absolutos
                TotHor = 0
                
                'FGZ - 06/05/2010 - le active estas asignaciones -----
                hora_desde = HDesde
                hora_hasta = HHasta
                'FGZ - 06/05/2010 - le active estas asignaciones -----
                
                nro_desg = objrsDesgl!desghnro
                
                Call Cambiar_Horas_Desde(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_dia)
                Call Cambiar_Horas_hasta(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_dia)
                    
                'OJO !! cuando la FP es relativa y va de posterior a la salida y anterior a la entrada
                ' tiene problemas con los turnos nocturnos ya que la salida pasa de dia ==>
                'hay que hacer el control desde afuera y pasar de dia al calculo de la fecha hasta
                If objFechasHoras.Menor_Hora(fecha_hasta_desg, hora_hasta_desg, fecha_desde_desg, hora_desde_desg) Then
                    fecha_hasta_desg = DateAdd("d", 1, fecha_hasta_desg)
                End If
    
                fraccionar_horas fecpar1, hora_desde, hora_hasta, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, hora_desde, hora_hasta
                            
                            
                            
    '            If (hora_desde_desg > hora_hasta) Or ((hora_hasta_desg < hora_desde) And (fecha_hasta_desg <= fecpar1)) Then GoTo Saltear
    '            If (hora_desde_desg < hora_desde) And (hora_desde < hora_hasta_desg And hora_hasta_desg <= hora_hasta) Then
    '                'Genero HC de hora-desde a desghorahasta */
    '                objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta_desg, tdias, thoras, tmin
    '                hcdesde = hora_desde
    '                hchasta = hora_hasta_desg
    '                TotHor = (tdias * 24) + (thoras + (tmin / 60))
    '                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Saltear
    '            End If
    '            If (hora_desde_desg >= hora_desde And hora_desde_desg < hora_hasta) And (hora_hasta_desg <= hora_hasta And ((hora_hasta_desg > hora_desde) And (fecha_hasta_desg <= fecpar1))) Then
    ''            /* Genero HC de desghoradesde a desghorahasta */
    '                objFechasHoras.RestaHs fecpar1, hora_desde_desg, fecpar1, hora_hasta_desg, tdias, thoras, tmin
    '                hcdesde = hora_desde_desg
    '                hchasta = hora_hasta_desg
    '                TotHor = (tdias * 24) + (thoras + (tmin / 60))
    '                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Saltear
    '            End If
    '            If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
    '            ' Genero HC de hora_desde a hora_hasta */
    '                 objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, tdias, thoras, tmin
    '                 hcdesde = hora_desde
    '                 hchasta = hora_hasta
    '                 TotHor = (tdias * 24) + (thoras + (tmin / 60))
    '                 If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Saltear
    '            End If
    
                'FGZ - 31/10/2006 ----------------------------------------------------------------------------
                'Desgloce   [---------------]
                'Horario          (----------------)
                If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                    objFechasHoras.RestaHs fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                    HCDesde = hora_desde
                    HCHasta = hora_hasta_desg
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo ContinuarAmbas
                End If
    
                'Desgloce       [---------------]
                'Horario    (----------------)
                If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                    objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                    HCDesde = hora_desde_desg
                    HCHasta = hora_hasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo ContinuarAmbas
                End If
                
                'Desgloce       [---------------]
                'Horario    (-----------------------)
                If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_desde) Then
                    objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                    HCDesde = hora_desde_desg
                    HCHasta = hora_hasta_desg
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo ContinuarAmbas
                End If
    
                'Desgloce   [---------------]
                'Horario        (--------)
                If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                'If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                    HCDesde = hora_desde
                    HCHasta = hora_hasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo ContinuarAmbas
                End If
                'FGZ - 31/10/2006 ----------------------------------------------------------------------------
    
                cant_parcial = cant_parcial + TotHor
                
                If fecpar1 = fecpar2 Then
                    Exit For
                Else
                    hora_desde = "0000"
                    HDesde = hora_desde
                    hora_hasta = par2
                    HHasta = hora_hasta
                    fecpar1 = fecpar2
                    Cambio_dia = True
                End If
            Next j
               
                
Saltear:
        Next
        
        'If ((cant_parcial > 0) And (cant_parcial < objrsDesgl!desghoffset)) Then TotHor = 0
        If (cant_parcial < objrsDesgl!desgcantmin) Then TotHor = 0
        If ((cant_parcial >= objrsDesgl!desgcantmin) And (cant_parcial < objrsDesgl!desgcantmax)) Then
            If (cant_parcial > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
                'FGZ - 31/10/2006 - le cambié esa asignacion
                'TotHor = cant_parcial - objrsDesgl!desgcantmin
                TotHor = cant_parcial
             Else
                TotHor = 0
            End If
        End If
        If (cant_parcial >= objrsDesgl!desgcantmax) Then
            If (cant_parcial > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = objrsDesgl!desgcantmax - objrsDesgl!desgcantmin
             Else
               TotHor = 0
            End If
        End If
        'FGZ - 29/07/2008 ----
        If ((TotHor > 0) And (TotHor < objrsDesgl!desghoffset)) Then TotHor = 0
        'FGZ - 29/07/2008 ----
        
    'Chequea si las horas trabajadas estan entre en maximo plus y minimo plus o
    'si el maximo y minimo son 0, paga el total de horas */
      If TotHor > 0 Then
          If (objrsDesgl!desghplus = 1) Then
              TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
              
              If (objrsDesgl!desghminplus <> 0) Or (objrsDesgl!desghmaxplus <> 0) Then
                  If (TotHor < objrsDesgl!desghminplus) Then TotHor = objrsDesgl!desghminplus
                  If (objrsDesgl!desghmaxplus < TotHor) Then TotHor = objrsDesgl!desghmaxplus
              End If
          End If
         'Redondeo del total de horas
         'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
         'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
         'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
         TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
         Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
         TotHorHHMM = "'" & TotHorHHMM & "'"
         
         Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
         Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
        
        
          If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
        
          'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
          
        'FGZ - 22/03/2011
        If TotHor = 0 Then GoTo ContinuarAmbas
          
        'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
        'Fecha_Generacion = p_fecha
        Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
        'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
          
          StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                   "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                   "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                   TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
                   CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                   ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                   ValorNulo & ",''," & ValorNulo & ",''," & _
                   Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
            End If
            
            'FGZ - 12/04/2006 No estaba esto
            'Marcar las registraciones involucradas con el Horario generado
            i = 1
            NoHayMas = False
            Do While i <= UBound(reg) And Not NoHayMas
                If reg(i).Reg_Ent <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                
                If reg(i).Reg_Sal <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                        
                i = i + 1
            Loop
          
          
       End If
ContinuarAmbas:
       objrsDesgl.MoveNext
    Loop
    
    'Flog.writeline Espacios(Tabulador * 3) & "-------------------------------------"
End Sub

Private Sub Generar_Horario_Normal_C5()
' ---------------------------------------------------------------------------------------------
' Descripcion: Procedimiento que genera el Horario normal del dia.
' Autor      : FGZ
' Fecha      : 04/04/2007
' Ultima Mod.:
' Descripcion:
'
' ---------------------------------------------------------------------------------------------
Dim Cant_Reg As Integer
Dim Cant_Pares As Integer
Dim i As Integer
Dim par1 As String
Dim par2 As String
Dim HDesde As String
Dim HHasta As String
Dim fecpar1 As Date
Dim fecpar2 As Date
Dim anor1 As Integer
Dim anor2 As Integer
Dim Reg_Ent As Long
Dim Reg_Sal As Long
Dim otroDia As Boolean
Dim j As Integer
Dim Weekdia As Byte
Dim objrsDesgl As New ADODB.Recordset
Dim TotHor As Single
Dim TotHorHHMM As String

'FGZ - 30/08/2006
'Dim nro_desg As integer
Dim nro_desg As Long

Dim hora_desde_desg As String
Dim hora_hasta_desg As String
Dim fecha_desde_desg As Date
Dim fecha_hasta_desg As Date
Dim Hora_a_Red As String
Dim HCDesde As String
Dim HCHasta As String
Dim cant_aux As Single
Dim CantH_Acum As Single
Dim cant_parcial As Single
Dim par As Integer
Dim rs As New ADODB.Recordset
Dim Cambio_dia As Boolean
Dim EsFeriado2 As Boolean
Dim objFeriado2 As New Feriado
Dim DiaTipoSeteado As Boolean
    
'FGZ - 12/04/2006 - Arreglo de registraciones leidas y a marcar como procesadas
Dim reg(1 To 100) As TRegistracionesProcesadas
Dim NoHayMas As Boolean
    
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Version para Turnos Nocturnos"
    End If
    diatipo = 0 'Dia laborable
    
    StrSql = "SELECT COUNT(regnro) as cant FROM " & TTempWFTurno & " WHERE evenro = 2 "
    OpenRecordset StrSql, objRs
    If Not objRs.EOF Then If Not IsNull(objRs!Cant) Then Cant_Reg = objRs!Cant
    Cant_Pares = Int(Cant_Reg / 2)
    
    'FGZ - 09/06/2006
    'generacion de horario normal aun si tiene una sola registracion
    If Cant_Reg = 1 Then
        ' Se crea un reg. de wf-dia para usar en la política - Con turnos libres wf-dia está vacía */
        'InsertarWFDia Nro_Dia, "", p_fecha
        Call Politica(40)
        StrSql = "DELETE FROM " & TTempWFDiaLaboral
        objConn.Execute StrSql, , adExecuteNoRecords
        Exit Sub
    End If
    
    DiaTipoSeteado = False
    For i = 0 To Cant_Pares
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par = " & i
        If rs.State = adStateOpen Then rs.Close
        rs.Open StrSql, objConn
        If rs.EOF Then GoTo continuarFor
        par = rs!par
        par1 = rs!Hora
        fecpar1 = rs!Fecha
        Reg_Ent = rs!Regnro
        
        'FGZ - 04/04/2007 - Se setea el tipo de dia y el dia de la semana con la fecha desde del primer par
        If Not DiaTipoSeteado Then
            EsFeriado2 = objFeriado2.Feriado(fecpar1, Empleado.Ternro, depurar)
            If EsFeriado2 Then
                Weekdia = Weekday(fecpar1)
                diatipo = 2
            End If
            DiaTipoSeteado = True
        End If
        
        'FGZ - 12/04/2006 - ojo !!! - si el desgloce es por cantidad de horas hay que guardar los pares anteriores porque acumula antes de guardar
        ' y se pisan los nro de las registraciones a marcar como procesadas
        reg(i).Reg_Ent = rs!Regnro
        
        anor1 = 0 & rs!anornro
        
        StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs!Regnro & " AND regestado <> 'P'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        rs.MoveNext
        If rs.EOF Then Exit Sub
        
        par2 = rs!Hora
        fecpar2 = rs!Fecha
        Reg_Sal = rs!Regnro
        'FGZ - 12/04/2006 - ojo !!! - si el desgloce es por cantidad de horas hay que guardar los pares anteriores porque acumula antes de guardar
        ' y se pisan los nro de las registraciones a marcar como procesadas
        reg(i).Reg_Sal = rs!Regnro
        
        anor2 = "0" & rs!anornro
        
        StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs!Regnro & " AND regestado <> 'P'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        If fecpar1 = fecpar2 Then
            HDesde = par1
            HHasta = par2
            otroDia = False
        Else
            HDesde = par1       'Como las fechas son distintas el desgloce es distinto por cada día
            HHasta = "2400"     'Genero dos HC uno de par1 hasta 24:00 y el otro de 00:00 a par2
            otroDia = True
        End If
        
        Cambio_dia = False
        Weekdia = Weekday(p_fecha)
        For j = 1 To 2 'En el peor de los casos lo hara 2 veces, una por cada día
            
'''            'FGZ - 09/06/2006
'''            'le tube que agregar esta condicion porque cuando se trataba de un turno nocturno hacia macanas
'''            If Cambio_Dia Then
'''                EsFeriado2 = objFeriado2.Feriado(fecpar1, Empleado.Ternro, depurar)
'''                If EsFeriado2 Then
'''                    Weekdia = Weekday(fecpar1)
'''                    diatipo = 2
'''                End If
'''            End If
'''
''''            'FGZ - 10/01/2006
''''            'le tube que agregar esta condicion porque
''''            'cuando se trataba de un turno nocturno en dia viernes tal que el sabado no trabaja
''''            'hacia macanas
''''            If Not Cambio_Dia Then
''''                Weekdia = Weekday(fecpar1)
''''            End If
            
            StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
                     "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
            OpenRecordset StrSql, objrsDesgl
            If objrsDesgl.EOF Then
                If depurar Then GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
                Exit Sub
            End If
            
            StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 2 "
            StrSql = StrSql & " ORDER BY desghorfijo,desghoradesde"
            OpenRecordset StrSql, objrsDesgl
            Do While Not objrsDesgl.EOF
            
                '1 Horario Fijo
                '2 Horario Variable
                '3 Horario Fijo/Variable
                Tipo_de_Desgloce = objrsDesgl!desghorfijo
                
                'si cambio de dia ==> no debria generar horarios absolutos
                TotHor = 0
                hora_desde = HDesde
                hora_hasta = HHasta
                nro_desg = objrsDesgl!desghnro
    
    '            ***** Cambio segun lo definido en el desglose de horas ******
    
'                Cambiar_Horas nro_desg, hora_desde_desg, hora_hasta_desg, fecha_desde_desg, fecha_hasta_desg
                
                
                'FGZ - 12/06/2006
                '-------------------------------------------------------------------------------
'                Call Cambiar_Horas_Desde(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_Dia)
'                Call Cambiar_Horas_hasta(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_Dia)
                
                'FGZ - 12/06/2006
                If diatipo = 0 Then
                    Call Cambiar_Horas_Desde(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_dia)
                    Call Cambiar_Horas_hasta(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_dia)
                Else
                    Call Cambiar_Horas_Desde2(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_dia, fecpar1)
                    Call Cambiar_Horas_hasta2(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_dia, fecpar1)
                End If
                
                
                'FGZ - 10/01/2006
                'OJO !! cuando la FP es relativa y va de posterior a la salida y anterior a la entrada
                ' tiene problemas con los turnos nocturnos ya que la salida pasa de dia ==>
                'hay que hacer el control desde afuera y pasar de dia al calculo de la fecha hasta
                If objFechasHoras.Menor_Hora(fecha_hasta_desg, hora_hasta_desg, fecha_desde_desg, hora_desde_desg) Then
                    fecha_hasta_desg = DateAdd("d", 1, fecha_hasta_desg)
                End If
                
                Call fraccionar_horas(fecpar1, hora_desde, hora_hasta, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, hora_desde, hora_hasta)
    
                'Desgloce   [---------------]
                'Horario          (----------------)
                If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                    objFechasHoras.RestaHs fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                    HCDesde = hora_desde
                    HCHasta = hora_hasta_desg
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
                'Desgloce       [---------------]
                'Horario    (----------------)
                If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                    objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                    HCDesde = hora_desde_desg
                    HCHasta = hora_hasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
                
                'Desgloce       [---------------]
                'Horario    (-----------------------)
                If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_desde) Then
                    objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                    HCDesde = hora_desde_desg
                    HCHasta = hora_hasta_desg
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
                'Desgloce   [---------------]
                'Horario        (--------)
                If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                'If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                    HCDesde = hora_desde
                    HCHasta = hora_hasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
    
                '--------------------------------------------------------------------------
                '--------------------------------------------------------------------------
                'Viejos
'                If (hora_desde_desg < hora_desde) And (hora_desde < hora_hasta_desg And hora_hasta_desg <= hora_hasta) Then
'                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta_desg, tdias, thoras, tmin
'                    hcdesde = hora_desde
'                    hchasta = hora_hasta_desg
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                End If
'                If (hora_desde_desg >= hora_desde And hora_desde_desg < hora_hasta) And (hora_hasta_desg > hora_hasta) Then
'                    objFechasHoras.RestaHs fecpar1, hora_desde_desg, fecpar1, hora_hasta, tdias, thoras, tmin
'                    hcdesde = hora_desde_desg
'                    hchasta = hora_hasta
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                End If
'                If (hora_desde_desg >= hora_desde And hora_desde_desg < hora_hasta) And (hora_hasta_desg <= hora_hasta And hora_hasta_desg > hora_desde) Then
'                    objFechasHoras.RestaHs fecpar1, hora_desde_desg, fecpar1, hora_hasta_desg, tdias, thoras, tmin
'                    hcdesde = hora_desde_desg
'                    hchasta = hora_hasta_desg
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                End If
'                If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
'                     '/* Genero HC de hora-desde a hora-hasta */
'                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, tdias, thoras, tmin
'                    hcdesde = hora_desde
'                    hchasta = hora_hasta
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                End If
                
                
                
'                'FGZ - nueva 25/10/2005
'                If (hora_desde_desg <= hora_desde) And ((hora_hasta_desg > hora_hasta) Or (hora_hasta_desg = "0000" And hora_hasta = "2400")) Then
'                     '/* Genero HC de hora-desde a hora-hasta */
'                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, tdias, thoras, tmin
'                    hcdesde = hora_desde
'                    hchasta = hora_hasta
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                End If
'                'FGZ - nueva 26/10/2005
'                If (hora_desde_desg >= hora_desde) And ((hora_hasta_desg > hora_hasta) Or (hora_hasta_desg < hora_hasta And fecha_desde_desg < fecha_hasta_desg)) Then
'                     '/* Genero HC de hora-desde a hora-hasta */
'                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, tdias, thoras, tmin
'                    hcdesde = hora_desde
'                    hchasta = hora_hasta
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                End If
                'Viejos
                '--------------------------------------------------------------------------
                '--------------------------------------------------------------------------
                
                
                If (TotHor = 0) Then GoTo Continuar
                 
                If (objrsDesgl!desghplus = 1) Then
                    'Hora Plus
                    TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
                    If (objrsDesgl!desghminplus <> 0) Or (objrsDesgl!desghmaxplus <> 0) Then
                        If (TotHor < objrsDesgl!desghminplus) Then TotHor = objrsDesgl!desghminplus
                        If (objrsDesgl!desghmaxplus < TotHor) Then TotHor = objrsDesgl!desghmaxplus
                    End If
                End If
                
                'Redondeo del total de horas
                'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
                'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
                'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
                TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
                Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
                TotHorHHMM = "'" & TotHorHHMM & "'"
                
                Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
                Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
                                
                                
                                
                Tipo_Hora = objrsDesgl!thnro
                Total_horas = TotHor
                
                Call Politica(540)
                
                TotHor = Total_horas
                
                If TotHor = 0 Then GoTo Continuar
                
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                         "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                         "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                         TotHorHHMM & "," & TotHor & "," & ConvFecha(fecpar1) & ",' '," & ConvFecha(fecpar1) & ",'" & HCDesde & "','" & _
                         HCHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                         ValorNulo & "," & Empleado.Ternro & "," & Tipo_Hora & "," & Nro_Turno & "," & _
                         Reg_Ent & ",'" & IIf(j = 1, par1, "0000") & "'," & Reg_Sal & ",'" & _
                         IIf((j = 2) Or (j = 1 And Not otroDia), par2, "2400") & "'," & Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & Tipo_Hora & "- Cantidad: " & TotHor & " hs."
                End If
                
                ' Marcar las registraciones involucradas con el Horario generado
                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Ent
                objConn.Execute StrSql, , adExecuteNoRecords
                    
                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Sal
                objConn.Execute StrSql, , adExecuteNoRecords
                
Continuar:
                objrsDesgl.MoveNext
            Loop
            
            If fecpar1 = fecpar2 Then
                Exit For
            Else
                hora_desde = "0000"
                HDesde = hora_desde
                hora_hasta = par2
                HHasta = hora_hasta
                fecpar1 = fecpar2
                Cambio_dia = True
            End If
            
        Next j
continuarFor:
    Next i
    
    
    ' Genero los registros del HC, cuando se trata de desglose como cantidad de horas
    Weekdia = Weekday(p_fecha)
    StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
             "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
    OpenRecordset StrSql, objrsDesgl
    If objrsDesgl.EOF Then
        If depurar Then GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
        Exit Sub
    End If
    StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 1 " & _
                     " ORDER BY desgdnro,desghoradesde"
    OpenRecordset StrSql, objrsDesgl
    
    Do While Not objrsDesgl.EOF
        cant_aux = sumarizar_horas(Cant_Pares, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta)
        'If ((cant_aux > 0) And (cant_aux < objrsDesgl!desghoffset)) Then TotHor = 0
        If (cant_aux < objrsDesgl!desgcantmin) Then TotHor = 0
        If ((cant_aux >= objrsDesgl!desgcantmin) And (cant_aux < objrsDesgl!desgcantmax)) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = cant_aux - objrsDesgl!desgcantmin
            Else
               TotHor = 0
            End If
        End If
        If (cant_aux >= objrsDesgl!desgcantmax) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = objrsDesgl!desgcantmax - objrsDesgl!desgcantmin
            Else
               TotHor = 0
            End If
        End If
        'FGZ - 29/07/2008 ----
        If ((cant_aux > 0) And (cant_aux < objrsDesgl!desghoffset)) Then TotHor = 0
        'FGZ - 29/07/2008 ----
        
        ' Chequea si las horas trabajadas estan entre en maximo plus y minimo plus o
        ' si el maximo y minimo son 0, paga el total de horas
        If (objrsDesgl!desghplus = 1) And (objrsDesgl!desghmaxplus = 0 And objrsDesgl!desghminplus = 0) Then
           If (TotHor < objrsDesgl!desghminplus) Then
                 GoTo ContinuarCant
              Else
                 If (TotHor > objrsDesgl!desghmaxplus) Then TotHor = TotHor - objrsDesgl!desghmaxplus
            End If
        End If
        If TotHor > 0 Then
            ' Si es plus, se calcula la duración de la hora */
            If (objrsDesgl!desghplus = 1) Then
                TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
            End If
            ' Redondeo del total de horas
            'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
            'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
            'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
            TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
            Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
            TotHorHHMM = "'" & TotHorHHMM & "'"
            
            Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
            Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
            If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
            
            'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
            
            
            'FGZ - 22/03/2011
            If TotHor = 0 Then GoTo ContinuarCant
            
            'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
            'Fecha_Generacion = p_fecha
            Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
            'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
            
            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                      "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                      "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                      TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
                      CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                      ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                      ValorNulo & ",''," & ValorNulo & ",''," & _
                      Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
            End If
        
            'FGZ - 12/04/2006 No estaba esto
            'Marcar las registraciones involucradas con el Horario generado
            i = 1
            NoHayMas = False
            Do While i <= UBound(reg) And Not NoHayMas
                If reg(i).Reg_Ent <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                
                If reg(i).Reg_Sal <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                        
                i = i + 1
            Loop
        End If
ContinuarCant:
        objrsDesgl.MoveNext
    Loop
    
    
    ' ==================================================================================================
    ' Genero los registros del HC, cuando se trata de desglose como Cantidad de Horas y Franja Horaria
    Weekdia = Weekday(p_fecha)
    StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
             "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
    OpenRecordset StrSql, objrsDesgl
    'FGZ - 31/10/2006
    'Esta alrevez el if
    'If Not objrsDesgl.EOF And depurar Then
    If objrsDesgl.EOF And depurar Then
        GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
        Exit Sub
    End If
    StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 3 " & _
                     " ORDER BY desghoradesde,desghplus"
    OpenRecordset StrSql, objrsDesgl
    Do While Not objrsDesgl.EOF
        cant_parcial = 0
        For i = 0 To Cant_Pares
            StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par =" & i
            OpenRecordset StrSql, objRs
            If objRs.EOF Then GoTo Saltear
            hora_desde = objRs!Hora
            fecpar1 = objRs!Fecha
            objRs.MoveNext
            If objRs.EOF Then GoTo Saltear
            hora_hasta = objRs!Hora
            fecpar2 = objRs!Fecha

            hora_desde_desg = objrsDesgl!desghoradesde
            hora_hasta_desg = objrsDesgl!desghorahasta


            'FGZ - 31/10/2006
            Tipo_de_Desgloce = objrsDesgl!desghorfijo
            'si cambio de dia ==> no debria generar horarios absolutos
            TotHor = 0
            'hora_desde = hDesde
            'hora_hasta = hHasta
            nro_desg = objrsDesgl!desghnro
            
            Call Cambiar_Horas_Desde(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_dia)
            Call Cambiar_Horas_hasta(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_dia)
                
            'OJO !! cuando la FP es relativa y va de posterior a la salida y anterior a la entrada
            ' tiene problemas con los turnos nocturnos ya que la salida pasa de dia ==>
            'hay que hacer el control desde afuera y pasar de dia al calculo de la fecha hasta
            If objFechasHoras.Menor_Hora(fecha_hasta_desg, hora_hasta_desg, fecha_desde_desg, hora_desde_desg) Then
                fecha_hasta_desg = DateAdd("d", 1, fecha_hasta_desg)
            End If

            fraccionar_horas fecpar1, hora_desde, hora_hasta, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, hora_desde, hora_hasta
                        
'            If (hora_desde_desg > hora_hasta) Or ((hora_hasta_desg < hora_desde) And (fecha_hasta_desg <= fecpar1)) Then GoTo Saltear
'            If (hora_desde_desg < hora_desde) And (hora_desde < hora_hasta_desg And hora_hasta_desg <= hora_hasta) Then
'                'Genero HC de hora-desde a desghorahasta */
'                objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta_desg, tdias, thoras, tmin
'                hcdesde = hora_desde
'                hchasta = hora_hasta_desg
'                TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Saltear
'            End If
'            If (hora_desde_desg >= hora_desde And hora_desde_desg < hora_hasta) And (hora_hasta_desg <= hora_hasta And ((hora_hasta_desg > hora_desde) And (fecha_hasta_desg <= fecpar1))) Then
''            /* Genero HC de desghoradesde a desghorahasta */
'                objFechasHoras.RestaHs fecpar1, hora_desde_desg, fecpar1, hora_hasta_desg, tdias, thoras, tmin
'                hcdesde = hora_desde_desg
'                hchasta = hora_hasta_desg
'                TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Saltear
'            End If
'            If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
'            ' Genero HC de hora_desde a hora_hasta */
'                 objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, tdias, thoras, tmin
'                 hcdesde = hora_desde
'                 hchasta = hora_hasta
'                 TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                 If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Saltear
'            End If

            'FGZ - 31/10/2006 ----------------------------------------------------------------------------
            'Desgloce   [---------------]
            'Horario          (----------------)
            If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                objFechasHoras.RestaHs fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                HCDesde = hora_desde
                HCHasta = hora_hasta_desg
                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo ContinuarAmbas
            End If

            'Desgloce       [---------------]
            'Horario    (----------------)
            If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                HCDesde = hora_desde_desg
                HCHasta = hora_hasta
                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo ContinuarAmbas
            End If
            
            'Desgloce       [---------------]
            'Horario    (-----------------------)
            If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_desde) Then
                objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                HCDesde = hora_desde_desg
                HCHasta = hora_hasta_desg
                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo ContinuarAmbas
            End If

            'Desgloce   [---------------]
            'Horario        (--------)
            If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
            'If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
                objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                HCDesde = hora_desde
                HCHasta = hora_hasta
                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo ContinuarAmbas
            End If
            'FGZ - 31/10/2006 ----------------------------------------------------------------------------

            cant_parcial = cant_parcial + TotHor
Saltear:
        Next
        
        'If ((cant_parcial > 0) And (cant_parcial < objrsDesgl!desghoffset)) Then TotHor = 0
        If (cant_parcial < objrsDesgl!desgcantmin) Then TotHor = 0
        If ((cant_parcial >= objrsDesgl!desgcantmin) And (cant_parcial < objrsDesgl!desgcantmax)) Then
            If (cant_parcial > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
                'FGZ - 31/10/2006 - le cambié esa asignacion
                'TotHor = cant_parcial - objrsDesgl!desgcantmin
                TotHor = cant_parcial
             Else
                TotHor = 0
            End If
        End If
        If (cant_parcial >= objrsDesgl!desgcantmax) Then
            If (cant_parcial > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = objrsDesgl!desgcantmax - objrsDesgl!desgcantmin
             Else
               TotHor = 0
            End If
        End If
        'FGZ - 29/07/2008 ----
        If ((TotHor > 0) And (TotHor < objrsDesgl!desghoffset)) Then TotHor = 0
        'FGZ - 29/07/2008 ----
        
    'Chequea si las horas trabajadas estan entre en maximo plus y minimo plus o
    'si el maximo y minimo son 0, paga el total de horas */
      If TotHor > 0 Then
          If (objrsDesgl!desghplus = 1) Then
              TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
              
              If (objrsDesgl!desghminplus <> 0) Or (objrsDesgl!desghmaxplus <> 0) Then
                  If (TotHor < objrsDesgl!desghminplus) Then TotHor = objrsDesgl!desghminplus
                  If (objrsDesgl!desghmaxplus < TotHor) Then TotHor = objrsDesgl!desghmaxplus
              End If
          End If
          
        'Redondeo del total de horas
        'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
        'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
        'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
        TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
        Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
        TotHorHHMM = "'" & TotHorHHMM & "'"
        
        Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
        Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
        
          If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
        
          'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
          
          
        'FGZ - 22/03/2011
        If TotHor = 0 Then GoTo ContinuarAmbas
          
        'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
        'Fecha_Generacion = p_fecha
        Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
        'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
          
          StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                   "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                   "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                   TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
                   CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                   ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                   ValorNulo & ",''," & ValorNulo & ",''," & _
                   Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
            End If
            
            'FGZ - 12/04/2006 No estaba esto
            'Marcar las registraciones involucradas con el Horario generado
            i = 1
            NoHayMas = False
            Do While i <= UBound(reg) And Not NoHayMas
                If reg(i).Reg_Ent <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                
                If reg(i).Reg_Sal <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                        
                i = i + 1
            Loop
       End If
       
ContinuarAmbas:
       objrsDesgl.MoveNext
    Loop
    
    'Flog.writeline Espacios(Tabulador * 3) & "-------------------------------------"
End Sub

Private Sub Generar_Horario_Normal_C6()
' ---------------------------------------------------------------------------------------------
' Descripcion: Procedimiento que genera el Horario normal del dia.
' Autor      : FGZ
' Fecha      : 04/04/2007
' Ultima Mod.:
' Descripcion:
'
' ---------------------------------------------------------------------------------------------
Dim Cant_Reg As Integer
Dim Cant_Pares As Integer
Dim i As Integer
Dim par1 As String
Dim par2 As String
Dim HDesde As String
Dim HHasta As String
Dim fecpar1 As Date
Dim fecpar2 As Date
Dim anor1 As Integer
Dim anor2 As Integer
Dim Reg_Ent As Long
Dim Reg_Sal As Long
Dim otroDia As Boolean
Dim j As Integer
Dim Weekdia As Byte
Dim objrsDesgl As New ADODB.Recordset
Dim TotHor As Single
Dim TotHorHHMM As String

'FGZ - 30/08/2006
'Dim nro_desg As integer
Dim nro_desg As Long

Dim hora_desde_desg As String
Dim hora_hasta_desg As String
Dim fecha_desde_desg As Date
Dim fecha_hasta_desg As Date
Dim Hora_a_Red As String
Dim HCDesde As String
Dim HCHasta As String
Dim cant_aux As Single
Dim CantH_Acum As Single
Dim cant_parcial As Single
Dim par As Integer
Dim rs As New ADODB.Recordset
Dim Cambio_dia As Boolean
Dim EsFeriado2 As Boolean
Dim objFeriado2 As New Feriado
Dim p_fecha_aux As Date
    

Dim Cambie_p_fecha As Boolean
Dim p_fecha_Original As Date

'FGZ - 12/04/2006 - Arreglo de registraciones leidas y a marcar como procesadas
Dim reg(1 To 100) As TRegistracionesProcesadas
Dim NoHayMas As Boolean
    
    
    p_fecha_Original = p_fecha
    
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Version para Turnos Nocturnos version 6"
    End If
    diatipo = 0 'Dia laborable
    'FGZ - 22/09/2010
    Cambie_p_fecha = False
    
    StrSql = "SELECT COUNT(regnro) as cant FROM " & TTempWFTurno & " WHERE evenro = 2 "
    OpenRecordset StrSql, objRs
    If Not objRs.EOF Then If Not IsNull(objRs!Cant) Then Cant_Reg = objRs!Cant
    Cant_Pares = Int(Cant_Reg / 2)
    
    'FGZ - 09/06/2006
    'generacion de horario normal aun si tiene una sola registracion
    If Cant_Reg = 1 Then
        ' Se crea un reg. de wf-dia para usar en la política - Con turnos libres wf-dia está vacía */
        'InsertarWFDia Nro_Dia, "", p_fecha
        Call Politica(40)
        StrSql = "DELETE FROM " & TTempWFDiaLaboral
        objConn.Execute StrSql, , adExecuteNoRecords
        Exit Sub
    End If
    
    p_fecha_aux = p_fecha
    
    For i = 0 To Cant_Pares
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par = " & i
        If rs.State = adStateOpen Then rs.Close
        rs.Open StrSql, objConn
        If rs.EOF Then GoTo continuarFor
        par = rs!par
        par1 = rs!Hora
        fecpar1 = rs!Fecha
        Reg_Ent = rs!Regnro
        
        'FGZ - 12/04/2006 - ojo !!! - si el desgloce es por cantidad de horas hay que guardar los pares anteriores porque acumula antes de guardar
        ' y se pisan los nro de las registraciones a marcar como procesadas
        reg(i).Reg_Ent = rs!Regnro
        
        anor1 = 0 & rs!anornro
        
        StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs!Regnro & " AND regestado <> 'P'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        rs.MoveNext
        If rs.EOF Then Exit Sub
        
        par2 = rs!Hora
        fecpar2 = rs!Fecha
        Reg_Sal = rs!Regnro
        'FGZ - 12/04/2006 - ojo !!! - si el desgloce es por cantidad de horas hay que guardar los pares anteriores porque acumula antes de guardar
        ' y se pisan los nro de las registraciones a marcar como procesadas
        reg(i).Reg_Sal = rs!Regnro
        
        anor2 = "0" & rs!anornro
        
        StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs!Regnro & " AND regestado <> 'P'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        If fecpar1 = fecpar2 Then
            HDesde = par1
            HHasta = par2
            otroDia = False
        Else
            HDesde = par1        'Como las fechas son distintas el desgloce es distinto por cada día
            HHasta = "2400"      'Genero dos HC uno de par1 hasta 24:00 y el otro de 00:00 a par2
            otroDia = True
        End If
        
        Cambio_dia = False
        Cambie_p_fecha = False
        Weekdia = Weekday(fecpar1)
        For j = 1 To 2 'En el peor de los casos lo hara 2 veces, una por cada día
            'FGZ - 09/06/2006
            'le tube que agregar esta condicion porque cuando se trataba de un turno nocturno hacia macanas
            If Cambio_dia Then
                Weekdia = Weekday(fecpar1)
                p_fecha = fecpar1
                'FGZ - 22/09/2010 - seteo variable creada
                Cambie_p_fecha = True
                EsFeriado2 = objFeriado2.Feriado(fecpar1, Empleado.Ternro, depurar)
                If EsFeriado2 Then
                    diatipo = 2
                End If
            End If
            
'            'FGZ - 10/01/2006
'            'le tube que agregar esta condicion porque
'            'cuando se trataba de un turno nocturno en dia viernes tal que el sabado no trabaja
'            'hacia macanas
'            If Not Cambio_Dia Then
'                Weekdia = Weekday(fecpar1)
'            End If
            
            StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
                     "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
            OpenRecordset StrSql, objrsDesgl
            If objrsDesgl.EOF Then
                If depurar Then GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
                Exit Sub
            End If
            
            StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 2 "
            'FGZ - 29/10/2013 -------------------------
            StrSql = StrSql & " AND desghplus = 1 "
            'FGZ - 29/10/2013 -------------------------
            StrSql = StrSql & " ORDER BY desghorfijo,desghoradesde"
            'StrSql = StrSql & " ORDER BY desgdnro,desghoradesde"
            OpenRecordset StrSql, objrsDesgl
            Do While Not objrsDesgl.EOF
            
                p_fecha = fecpar1
                '1 Horario Fijo
                '2 Horario Variable
                '3 Horario Fijo/Variable
                Tipo_de_Desgloce = objrsDesgl!desghorfijo
                
                'If Tipo_de_Desgloce = 1 And Cambio_Dia Then
                '    GoTo continuar
                'End If
                
                'si cambio de dia ==> no debria generar horarios absolutos
                TotHor = 0
                hora_desde = HDesde
                hora_hasta = HHasta
                nro_desg = objrsDesgl!desghnro
    
    '            ***** Cambio segun lo definido en el desglose de horas ******
    
'                Cambiar_Horas nro_desg, hora_desde_desg, hora_hasta_desg, fecha_desde_desg, fecha_hasta_desg
                
                
                'FGZ - 12/06/2006
                '-------------------------------------------------------------------------------
'                Call Cambiar_Horas_Desde(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_Dia)
'                Call Cambiar_Horas_hasta(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_Dia)
                
                'FGZ - 22/09/0210 -------------------------------
                ''FGZ - 12/06/2006
                'If Cambio_dia And Tipo_de_Desgloce = 1 Then
                '    p_fecha = DateAdd("d", -1, p_fecha)
                'End If
                If Cambie_p_fecha Then
                    p_fecha = DateAdd("d", -1, p_fecha)
                End If
                'FGZ - 22/09/0210 -------------------------------
                
                
                If diatipo = 0 Then
                    Call Cambiar_Horas_Desde(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_dia)
                    Call Cambiar_Horas_hasta(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_dia)
                Else
                    Call Cambiar_Horas_Desde2(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_dia, fecpar1)
                    Call Cambiar_Horas_hasta2(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_dia, fecpar1)
                End If
                
                'FGZ - 22/09/0210 -------------------------------
                'If Cambio_dia And Tipo_de_Desgloce = 1 Then
                '    p_fecha = DateAdd("d", 1, p_fecha)
                'End If
                If Cambie_p_fecha Then
                    p_fecha = DateAdd("d", 1, p_fecha)
                End If
                'FGZ - 22/09/0210 -------------------------------
                
                
                'FGZ - 10/01/2006
                'OJO !! cuando la FP es relativa y va de posterior a la salida y anterior a la entrada
                ' tiene problemas con los turnos nocturnos ya que la salida pasa de dia ==>
                'hay que hacer el control desde afuera y pasar de dia al calculo de la fecha hasta
                If objFechasHoras.Menor_Hora(fecha_hasta_desg, hora_hasta_desg, fecha_desde_desg, hora_desde_desg) Then
                    fecha_hasta_desg = DateAdd("d", 1, fecha_hasta_desg)
                End If
                
                Call fraccionar_horas(fecpar1, hora_desde, hora_hasta, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, hora_desde, hora_hasta)
    
                'Desgloce   [---------------]
                'Horario          (----------------)
                If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                    objFechasHoras.RestaHs fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                    HCDesde = hora_desde
                    HCHasta = hora_hasta_desg
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
                'Desgloce       [---------------]
                'Horario    (----------------)
                If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                    objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                    HCDesde = hora_desde_desg
                    HCHasta = hora_hasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
                
                'Desgloce       [---------------]
                'Horario    (-----------------------)
                If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_desde) Then
                    objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                    HCDesde = hora_desde_desg
                    HCHasta = hora_hasta_desg
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
                'Desgloce   [---------------]
                'Horario        (--------)
                If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                'If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                    HCDesde = hora_desde
                    HCHasta = hora_hasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
                
                If (TotHor = 0) Then GoTo Continuar
                 
                If (objrsDesgl!desghplus = 1) Then
                    'Hora Plus
                    TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
                    If (objrsDesgl!desghminplus <> 0) Or (objrsDesgl!desghmaxplus <> 0) Then
                        If (TotHor < objrsDesgl!desghminplus) Then TotHor = objrsDesgl!desghminplus
                        If (objrsDesgl!desghmaxplus < TotHor) Then TotHor = objrsDesgl!desghmaxplus
                    End If
                End If
                
                'Redondeo del total de horas
                'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
                'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
                'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
                TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
                Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
                TotHorHHMM = "'" & TotHorHHMM & "'"
                
                Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
                Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
                                
                Tipo_Hora = objrsDesgl!thnro
                Total_horas = TotHor
                                
                p_fecha = p_fecha_aux
                
                Call Politica(540)
                
                TotHor = Total_horas
                
                If TotHor = 0 Then GoTo Continuar
                
                
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                         "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                         "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                         TotHorHHMM & "," & TotHor & "," & ConvFecha(fecpar1) & ",' '," & ConvFecha(fecpar1) & ",'" & HCDesde & "','" & _
                         HCHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                         ValorNulo & "," & Empleado.Ternro & "," & Tipo_Hora & "," & Nro_Turno & "," & _
                         Reg_Ent & ",'" & IIf(j = 1, par1, "0000") & "'," & Reg_Sal & ",'" & _
                         IIf((j = 2) Or (j = 1 And Not otroDia), par2, "2400") & "'," & Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & Tipo_Hora & "- Cantidad: " & TotHor & " hs."
                End If
                
                
                ' Marcar las registraciones involucradas con el Horario generado
                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Ent
                objConn.Execute StrSql, , adExecuteNoRecords
                    
                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Sal
                objConn.Execute StrSql, , adExecuteNoRecords
                
Continuar:
                objrsDesgl.MoveNext
            Loop
            
            If fecpar1 = fecpar2 Then
                Exit For
            Else
                hora_desde = "0000"
                HDesde = hora_desde
                hora_hasta = par2
                HHasta = hora_hasta
                fecpar1 = fecpar2
                Cambio_dia = True
            End If
            
        Next j
continuarFor:
    Next i
    
    
    ' =================================================================================================
    ' Genero los registros del HC, cuando se trata de desglose como cantidad de horas
    Weekdia = Weekday(p_fecha)
    StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
             "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
    OpenRecordset StrSql, objrsDesgl
    If objrsDesgl.EOF Then
        If depurar Then GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
        Exit Sub
    End If
    StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 1 " & _
                     " ORDER BY desgdnro,desghoradesde"
    OpenRecordset StrSql, objrsDesgl
    
    Do While Not objrsDesgl.EOF
        cant_aux = sumarizar_horas(Cant_Pares, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta)
        'If ((cant_aux > 0) And (cant_aux < objrsDesgl!desghoffset)) Then TotHor = 0
        If (cant_aux < objrsDesgl!desgcantmin) Then TotHor = 0
        If ((cant_aux >= objrsDesgl!desgcantmin) And (cant_aux < objrsDesgl!desgcantmax)) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = cant_aux - objrsDesgl!desgcantmin
            Else
               TotHor = 0
            End If
        End If
        If (cant_aux >= objrsDesgl!desgcantmax) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = objrsDesgl!desgcantmax - objrsDesgl!desgcantmin
            Else
               TotHor = 0
            End If
        End If
        'FGZ - 29/07/2008 ----
        If ((TotHor > 0) And (TotHor < objrsDesgl!desghoffset)) Then TotHor = 0
        'FGZ - 29/07/2008 ----
        
        
        ' Chequea si las horas trabajadas estan entre en maximo plus y minimo plus o
        ' si el maximo y minimo son 0, paga el total de horas
        If (objrsDesgl!desghplus = 1) And (objrsDesgl!desghmaxplus = 0 And objrsDesgl!desghminplus = 0) Then
           If (TotHor < objrsDesgl!desghminplus) Then
                 GoTo ContinuarCant
              Else
                 If (TotHor > objrsDesgl!desghmaxplus) Then TotHor = TotHor - objrsDesgl!desghmaxplus
            End If
        End If
        If TotHor > 0 Then
            ' Si es plus, se calcula la duración de la hora */
            If (objrsDesgl!desghplus = 1) Then
                TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
            End If
            ' Redondeo del total de horas
            'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
            'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
            'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
            TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
            Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
            TotHorHHMM = "'" & TotHorHHMM & "'"
            
            Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
            Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
            
            If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
            
            'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
            
            'FGZ - 22/03/2011
            If TotHor = 0 Then GoTo ContinuarCant
            
            'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
            'Fecha_Generacion = p_fecha
            Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
            'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
            
            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                      "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                      "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                      TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
                      CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                      ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                      ValorNulo & ",''," & ValorNulo & ",''," & _
                      Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
            End If
        
            'FGZ - 12/04/2006 No estaba esto
            'Marcar las registraciones involucradas con el Horario generado
            i = 1
            NoHayMas = False
            Do While i <= UBound(reg) And Not NoHayMas
                If reg(i).Reg_Ent <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                
                If reg(i).Reg_Sal <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                        
                i = i + 1
            Loop
        End If

ContinuarCant:
        objrsDesgl.MoveNext
    Loop
    
    
    ' ===================================================================================================
    ' Genero los registros del HC, cuando se trata de desglose como Cantidad de Horas y Franja Horaria
    Weekdia = Weekday(p_fecha)
    StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
             "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
    OpenRecordset StrSql, objrsDesgl
    'FGZ - 31/10/2006
    'Esta alrevez el if
    'If Not objrsDesgl.EOF And depurar Then
    If objrsDesgl.EOF And depurar Then
        GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
        Exit Sub
    End If
    StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 3 " & _
                     " ORDER BY desghoradesde,desghplus"
    OpenRecordset StrSql, objrsDesgl
    Do While Not objrsDesgl.EOF
        cant_parcial = 0
        For i = 0 To Cant_Pares
            StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par =" & i
            OpenRecordset StrSql, objRs
            If objRs.EOF Then GoTo Saltear
            hora_desde = objRs!Hora
            fecpar1 = objRs!Fecha
            objRs.MoveNext
            If objRs.EOF Then GoTo Saltear
            hora_hasta = objRs!Hora
            fecpar2 = objRs!Fecha

            hora_desde_desg = objrsDesgl!desghoradesde
            hora_hasta_desg = objrsDesgl!desghorahasta


            'FGZ - 31/10/2006
            Tipo_de_Desgloce = objrsDesgl!desghorfijo
            'si cambio de dia ==> no debria generar horarios absolutos
            TotHor = 0
            'hora_desde = hDesde
            'hora_hasta = hHasta
            nro_desg = objrsDesgl!desghnro
            
            Call Cambiar_Horas_Desde(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_dia)
            Call Cambiar_Horas_hasta(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_dia)
                
            'OJO !! cuando la FP es relativa y va de posterior a la salida y anterior a la entrada
            ' tiene problemas con los turnos nocturnos ya que la salida pasa de dia ==>
            'hay que hacer el control desde afuera y pasar de dia al calculo de la fecha hasta
            If objFechasHoras.Menor_Hora(fecha_hasta_desg, hora_hasta_desg, fecha_desde_desg, hora_desde_desg) Then
                fecha_hasta_desg = DateAdd("d", 1, fecha_hasta_desg)
            End If

            fraccionar_horas fecpar1, hora_desde, hora_hasta, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, hora_desde, hora_hasta
                        
'            If (hora_desde_desg > hora_hasta) Or ((hora_hasta_desg < hora_desde) And (fecha_hasta_desg <= fecpar1)) Then GoTo Saltear
'            If (hora_desde_desg < hora_desde) And (hora_desde < hora_hasta_desg And hora_hasta_desg <= hora_hasta) Then
'                'Genero HC de hora-desde a desghorahasta */
'                objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta_desg, tdias, thoras, tmin
'                hcdesde = hora_desde
'                hchasta = hora_hasta_desg
'                TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Saltear
'            End If
'            If (hora_desde_desg >= hora_desde And hora_desde_desg < hora_hasta) And (hora_hasta_desg <= hora_hasta And ((hora_hasta_desg > hora_desde) And (fecha_hasta_desg <= fecpar1))) Then
''            /* Genero HC de desghoradesde a desghorahasta */
'                objFechasHoras.RestaHs fecpar1, hora_desde_desg, fecpar1, hora_hasta_desg, tdias, thoras, tmin
'                hcdesde = hora_desde_desg
'                hchasta = hora_hasta_desg
'                TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Saltear
'            End If
'            If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
'            ' Genero HC de hora_desde a hora_hasta */
'                 objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, tdias, thoras, tmin
'                 hcdesde = hora_desde
'                 hchasta = hora_hasta
'                 TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                 If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Saltear
'            End If

            'FGZ - 31/10/2006 ----------------------------------------------------------------------------
            'Desgloce   [---------------]
            'Horario          (----------------)
            If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                objFechasHoras.RestaHs fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                HCDesde = hora_desde
                HCHasta = hora_hasta_desg
                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo ContinuarAmbas
            End If

            'Desgloce       [---------------]
            'Horario    (----------------)
            If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                HCDesde = hora_desde_desg
                HCHasta = hora_hasta
                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo ContinuarAmbas
            End If
            
            'Desgloce       [---------------]
            'Horario    (-----------------------)
            If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_desde) Then
                objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                HCDesde = hora_desde_desg
                HCHasta = hora_hasta_desg
                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo ContinuarAmbas
            End If

            'Desgloce   [---------------]
            'Horario        (--------)
            If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
            'If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
                objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                HCDesde = hora_desde
                HCHasta = hora_hasta
                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo ContinuarAmbas
            End If
            'FGZ - 31/10/2006 ----------------------------------------------------------------------------

            cant_parcial = cant_parcial + TotHor
Saltear:
        Next
        
        'If ((cant_parcial > 0) And (cant_parcial < objrsDesgl!desghoffset)) Then TotHor = 0
        If (cant_parcial < objrsDesgl!desgcantmin) Then TotHor = 0
        If ((cant_parcial >= objrsDesgl!desgcantmin) And (cant_parcial < objrsDesgl!desgcantmax)) Then
            If (cant_parcial > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
                'FGZ - 31/10/2006 - le cambié esa asignacion
                'TotHor = cant_parcial - objrsDesgl!desgcantmin
                TotHor = cant_parcial
             Else
                TotHor = 0
            End If
        End If
        If (cant_parcial >= objrsDesgl!desgcantmax) Then
            If (cant_parcial > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = objrsDesgl!desgcantmax - objrsDesgl!desgcantmin
             Else
               TotHor = 0
            End If
        End If
        'FGZ - 29/07/2008 ----
        If ((TotHor > 0) And (TotHor < objrsDesgl!desghoffset)) Then TotHor = 0
        'FGZ - 29/07/2008 ----
        
    'Chequea si las horas trabajadas estan entre en maximo plus y minimo plus o
    'si el maximo y minimo son 0, paga el total de horas */
      If TotHor > 0 Then
          If (objrsDesgl!desghplus = 1) Then
              TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
              
              If (objrsDesgl!desghminplus <> 0) Or (objrsDesgl!desghmaxplus <> 0) Then
                  If (TotHor < objrsDesgl!desghminplus) Then TotHor = objrsDesgl!desghminplus
                  If (objrsDesgl!desghmaxplus < TotHor) Then TotHor = objrsDesgl!desghmaxplus
              End If
          End If
        ' Redondeo del total de horas */
        'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
        'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
        'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
        TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
        Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
        TotHorHHMM = "'" & TotHorHHMM & "'"
        
        Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
        Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
        
        
          If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
        
          'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
          
         'FGZ - 22/03/2011
         If TotHor = 0 Then GoTo ContinuarAmbas
          
        'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
        'Fecha_Generacion = p_fecha
        Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
        'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
          
          
          StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                   "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                   "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                   TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
                   CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                   ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                   ValorNulo & ",''," & ValorNulo & ",''," & _
                   Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
            End If
            
            'FGZ - 12/04/2006 No estaba esto
            'Marcar las registraciones involucradas con el Horario generado
            i = 1
            NoHayMas = False
            Do While i <= UBound(reg) And Not NoHayMas
                If reg(i).Reg_Ent <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                
                If reg(i).Reg_Sal <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                        
                i = i + 1
            Loop
          
          
       End If
ContinuarAmbas:
       objrsDesgl.MoveNext
    Loop
    
    'Flog.writeline Espacios(Tabulador * 3) & "-------------------------------------"
    
    'FGZ - 04/01/2011
    p_fecha = p_fecha_Original
End Sub


Private Sub Generar_Horario_Normal_C7()
' ---------------------------------------------------------------------------------------------
' Descripcion: Procedimiento que genera el Horario normal del dia de CARGIL.
' Autor      : FGZ
' Fecha      : 26/06/2008
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Cant_Reg As Integer
Dim Cant_Pares As Integer
Dim i As Integer
Dim par1 As String
Dim par2 As String
Dim HDesde As String
Dim HHasta As String
Dim fecpar1 As Date
Dim fecpar2 As Date
Dim anor1 As Integer
Dim anor2 As Integer
Dim Reg_Ent As Long
Dim Reg_Sal As Long
Dim otroDia As Boolean
Dim j As Integer
Dim Weekdia As Byte
Dim objrsDesgl As New ADODB.Recordset
Dim TotHor As Single
Dim TotHorHHMM As String

'FGZ - 30/08/2006
'Dim nro_desg As integer
Dim nro_desg As Long

Dim hora_desde_desg As String
Dim hora_hasta_desg As String
Dim fecha_desde_desg As Date
Dim fecha_hasta_desg As Date
Dim Hora_a_Red As String
Dim HCDesde As String
Dim HCHasta As String
Dim cant_aux As Single
Dim CantH_Acum As Single
Dim cant_parcial As Single
Dim par As Integer
Dim rs As New ADODB.Recordset
Dim Cambio_dia As Boolean
Dim EsFeriado2 As Boolean
Dim objFeriado2 As New Feriado
    
'FGZ - 12/04/2006 - Arreglo de registraciones leidas y a marcar como procesadas
Dim reg(1 To 100) As TRegistracionesProcesadas
Dim NoHayMas As Boolean
    
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Version para Turnos Nocturnos"
    End If
    diatipo = 0 'Dia laborable
    
    StrSql = "SELECT COUNT(regnro) as cant FROM " & TTempWFTurno & " WHERE evenro = 2 "
    OpenRecordset StrSql, objRs
    If Not objRs.EOF Then If Not IsNull(objRs!Cant) Then Cant_Reg = objRs!Cant
    Cant_Pares = Int(Cant_Reg / 2)
    
    'FGZ - 09/06/2006
    'generacion de horario normal aun si tiene una sola registracion
    If Cant_Reg = 1 Then
        ' Se crea un reg. de wf-dia para usar en la política - Con turnos libres wf-dia está vacía */
        'InsertarWFDia Nro_Dia, "", p_fecha
        Call Politica(40)
        StrSql = "DELETE FROM " & TTempWFDiaLaboral
        objConn.Execute StrSql, , adExecuteNoRecords
        Exit Sub
    End If
    
    For i = 0 To Cant_Pares
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par = " & i
        If rs.State = adStateOpen Then rs.Close
        rs.Open StrSql, objConn
        If rs.EOF Then GoTo continuarFor
        par = rs!par
        par1 = rs!Hora
        fecpar1 = rs!Fecha
        Reg_Ent = rs!Regnro
        
        'FGZ - 12/04/2006 - ojo !!! - si el desgloce es por cantidad de horas hay que guardar los pares anteriores porque acumula antes de guardar
        ' y se pisan los nro de las registraciones a marcar como procesadas
        reg(i).Reg_Ent = rs!Regnro
        
        anor1 = 0 & rs!anornro
        
        StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs!Regnro & " AND regestado <> 'P'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        rs.MoveNext
        If rs.EOF Then Exit Sub
        
        par2 = rs!Hora
        fecpar2 = rs!Fecha
        Reg_Sal = rs!Regnro
        'FGZ - 12/04/2006 - ojo !!! - si el desgloce es por cantidad de horas hay que guardar los pares anteriores porque acumula antes de guardar
        ' y se pisan los nro de las registraciones a marcar como procesadas
        reg(i).Reg_Sal = rs!Regnro
        
        anor2 = "0" & rs!anornro
        
        StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs!Regnro & " AND regestado <> 'P'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        If fecpar1 = fecpar2 Then
            HDesde = par1
            HHasta = par2
            otroDia = False
        Else
            HDesde = par1       'Como las fechas son distintas el desgloce es distinto por cada día
            HHasta = "2400"     'Genero dos HC uno de par1 hasta 24:00 y el otro de 00:00 a par2
            otroDia = True
        End If
        
        Cambio_dia = False
        Weekdia = Weekday(p_fecha)
        For j = 1 To 2 'En el peor de los casos lo hara 2 veces, una por cada día
            'FGZ - 09/06/2006
            'le tube que agregar esta condicion porque cuando se trataba de un turno nocturno hacia macanas
            'If Cambio_Dia Then
            '    EsFeriado2 = objFeriado2.Feriado(fecpar1, Empleado.Ternro, depurar)
            '    If EsFeriado2 Then
            '        Weekdia = Weekday(fecpar1)
            '        diatipo = 2
            '    End If
            'End If
            
'            'FGZ - 10/01/2006
'            'le tube que agregar esta condicion porque
'            'cuando se trataba de un turno nocturno en dia viernes tal que el sabado no trabaja
'            'hacia macanas
'            If Not Cambio_Dia Then
'                Weekdia = Weekday(fecpar1)
'            End If
            
            StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
                     "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
            OpenRecordset StrSql, objrsDesgl
            If objrsDesgl.EOF Then
                If depurar Then GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
                Exit Sub
            End If
            
            StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 2 "
            StrSql = StrSql & " ORDER BY desghorfijo,desghoradesde"
            'StrSql = StrSql & " ORDER BY desgdnro,desghoradesde"
            OpenRecordset StrSql, objrsDesgl
            Do While Not objrsDesgl.EOF
            
                '1 Horario Fijo
                '2 Horario Variable
                '3 Horario Fijo/Variable
                Tipo_de_Desgloce = objrsDesgl!desghorfijo
                
                'If Tipo_de_Desgloce = 1 And Cambio_Dia Then
                '    GoTo continuar
                'End If
                
                'si cambio de dia ==> no debria generar horarios absolutos
                TotHor = 0
                hora_desde = HDesde
                hora_hasta = HHasta
                nro_desg = objrsDesgl!desghnro
    
                 Call Cambiar_Horas_Desde3(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_dia, fecpar1)
                 Call Cambiar_Horas_hasta3(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_dia, fecpar1)
                
                'OJO !! cuando la FP es relativa y va de posterior a la salida y anterior a la entrada
                ' tiene problemas con los turnos nocturnos ya que la salida pasa de dia ==>
                'hay que hacer el control desde afuera y pasar de dia al calculo de la fecha hasta
                If objFechasHoras.Menor_Hora(fecha_hasta_desg, hora_hasta_desg, fecha_desde_desg, hora_desde_desg) Then
                    fecha_hasta_desg = DateAdd("d", 1, fecha_hasta_desg)
                End If
                
                Call fraccionar_horas(fecpar1, hora_desde, hora_hasta, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, hora_desde, hora_hasta)
    
                'Desgloce   [---------------]
                'Horario          (----------------)
                If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                    objFechasHoras.RestaHs fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                    HCDesde = hora_desde
                    HCHasta = hora_hasta_desg
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
                'Desgloce       [---------------]
                'Horario    (----------------)
                If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                    objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                    HCDesde = hora_desde_desg
                    HCHasta = hora_hasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
                
                'Desgloce       [---------------]
                'Horario    (-----------------------)
                If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_desde) Then
                    objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                    HCDesde = hora_desde_desg
                    HCHasta = hora_hasta_desg
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
                'Desgloce   [---------------]
                'Horario        (--------)
                If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                'If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                    HCDesde = hora_desde
                    HCHasta = hora_hasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
    
                '--------------------------------------------------------------------------
                '--------------------------------------------------------------------------
                'Viejos
'                If (hora_desde_desg < hora_desde) And (hora_desde < hora_hasta_desg And hora_hasta_desg <= hora_hasta) Then
'                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta_desg, tdias, thoras, tmin
'                    hcdesde = hora_desde
'                    hchasta = hora_hasta_desg
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                End If
'                If (hora_desde_desg >= hora_desde And hora_desde_desg < hora_hasta) And (hora_hasta_desg > hora_hasta) Then
'                    objFechasHoras.RestaHs fecpar1, hora_desde_desg, fecpar1, hora_hasta, tdias, thoras, tmin
'                    hcdesde = hora_desde_desg
'                    hchasta = hora_hasta
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                End If
'                If (hora_desde_desg >= hora_desde And hora_desde_desg < hora_hasta) And (hora_hasta_desg <= hora_hasta And hora_hasta_desg > hora_desde) Then
'                    objFechasHoras.RestaHs fecpar1, hora_desde_desg, fecpar1, hora_hasta_desg, tdias, thoras, tmin
'                    hcdesde = hora_desde_desg
'                    hchasta = hora_hasta_desg
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                End If
'                If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
'                     '/* Genero HC de hora-desde a hora-hasta */
'                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, tdias, thoras, tmin
'                    hcdesde = hora_desde
'                    hchasta = hora_hasta
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                End If
                
                
                
'                'FGZ - nueva 25/10/2005
'                If (hora_desde_desg <= hora_desde) And ((hora_hasta_desg > hora_hasta) Or (hora_hasta_desg = "0000" And hora_hasta = "2400")) Then
'                     '/* Genero HC de hora-desde a hora-hasta */
'                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, tdias, thoras, tmin
'                    hcdesde = hora_desde
'                    hchasta = hora_hasta
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                End If
'                'FGZ - nueva 26/10/2005
'                If (hora_desde_desg >= hora_desde) And ((hora_hasta_desg > hora_hasta) Or (hora_hasta_desg < hora_hasta And fecha_desde_desg < fecha_hasta_desg)) Then
'                     '/* Genero HC de hora-desde a hora-hasta */
'                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, tdias, thoras, tmin
'                    hcdesde = hora_desde
'                    hchasta = hora_hasta
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                End If
                'Viejos
                '--------------------------------------------------------------------------
                '--------------------------------------------------------------------------
                
                
                If (TotHor = 0) Then GoTo Continuar
                 
                If (objrsDesgl!desghplus = 1) Then
                    'Hora Plus
                    TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
                    If (objrsDesgl!desghminplus <> 0) Or (objrsDesgl!desghmaxplus <> 0) Then
                        If (TotHor < objrsDesgl!desghminplus) Then TotHor = objrsDesgl!desghminplus
                        If (objrsDesgl!desghmaxplus < TotHor) Then TotHor = objrsDesgl!desghmaxplus
                    End If
                End If
                
                'Redondeo del total de horas
'                objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
'                objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
                'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
                TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
                Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
                TotHorHHMM = "'" & TotHorHHMM & "'"
                
                Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
                Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
                                
                                
                Tipo_Hora = objrsDesgl!thnro
                Total_horas = TotHor
                
                Call Politica(540)
                
                TotHor = Total_horas
                
                If TotHor = 0 Then GoTo Continuar
                
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                         "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                         "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                         TotHorHHMM & "," & TotHor & "," & ConvFecha(fecpar1) & ",' '," & ConvFecha(fecpar1) & ",'" & HCDesde & "','" & _
                         HCHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                         ValorNulo & "," & Empleado.Ternro & "," & Tipo_Hora & "," & Nro_Turno & "," & _
                         Reg_Ent & ",'" & IIf(j = 1, par1, "0000") & "'," & Reg_Sal & ",'" & _
                         IIf((j = 2) Or (j = 1 And Not otroDia), par2, "2400") & "'," & Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & Tipo_Hora & "- Cantidad: " & TotHor & " hs."
                End If
                
                ' Marcar las registraciones involucradas con el Horario generado
                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Ent
                objConn.Execute StrSql, , adExecuteNoRecords
                    
                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Sal
                objConn.Execute StrSql, , adExecuteNoRecords
                
Continuar:
                objrsDesgl.MoveNext
            Loop
            
            If fecpar1 = fecpar2 Then
                Exit For
            Else
                hora_desde = "0000"
                HDesde = hora_desde
                hora_hasta = par2
                HHasta = hora_hasta
                fecpar1 = fecpar2
                Cambio_dia = True
            End If
            
        Next j
continuarFor:
    Next i
    
    
    ' =========================================================================================
    ' Genero los registros del HC, cuando se trata de desglose como cantidad de horas
    Weekdia = Weekday(p_fecha)
    StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
             "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
    OpenRecordset StrSql, objrsDesgl
    If objrsDesgl.EOF Then
        If depurar Then GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
        Exit Sub
    End If
    StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 1 " & _
                     " ORDER BY desgdnro,desghoradesde"
    OpenRecordset StrSql, objrsDesgl
    
    Do While Not objrsDesgl.EOF
        cant_aux = sumarizar_horas(Cant_Pares, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta)
        'If ((cant_aux > 0) And (cant_aux < objrsDesgl!desghoffset)) Then TotHor = 0
        If (cant_aux < objrsDesgl!desgcantmin) Then TotHor = 0
        If ((cant_aux >= objrsDesgl!desgcantmin) And (cant_aux < objrsDesgl!desgcantmax)) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = cant_aux - objrsDesgl!desgcantmin
            Else
               TotHor = 0
            End If
        End If
        If (cant_aux >= objrsDesgl!desgcantmax) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = objrsDesgl!desgcantmax - objrsDesgl!desgcantmin
            Else
               TotHor = 0
            End If
        End If
        'FGZ - 29/07/2008 ----
        If ((TotHor > 0) And (TotHor < objrsDesgl!desghoffset)) Then TotHor = 0
        'FGZ - 29/07/2008 ----
        
        ' Chequea si las horas trabajadas estan entre en maximo plus y minimo plus o
        ' si el maximo y minimo son 0, paga el total de horas
        If (objrsDesgl!desghplus = 1) And (objrsDesgl!desghmaxplus = 0 And objrsDesgl!desghminplus = 0) Then
           If (TotHor < objrsDesgl!desghminplus) Then
                 GoTo ContinuarCant
              Else
                 If (TotHor > objrsDesgl!desghmaxplus) Then TotHor = TotHor - objrsDesgl!desghmaxplus
            End If
        End If
        If TotHor > 0 Then
            ' Si es plus, se calcula la duración de la hora */
            If (objrsDesgl!desghplus = 1) Then
                TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
            End If
            ' Redondeo del total de horas
            'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
            'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
            'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
            TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
            Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
            TotHorHHMM = "'" & TotHorHHMM & "'"
            
            Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
            Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
            
            
            If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
            
            'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
            
            'FGZ - 22/03/2011
            If TotHor = 0 Then GoTo ContinuarCant
            
            'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
            'Fecha_Generacion = p_fecha
            Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
            'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
            
            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                      "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                      "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                      TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
                      CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                      ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                      ValorNulo & ",''," & ValorNulo & ",''," & _
                      Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
            End If
        
            'FGZ - 12/04/2006 No estaba esto
            'Marcar las registraciones involucradas con el Horario generado
            i = 1
            NoHayMas = False
            Do While i <= UBound(reg) And Not NoHayMas
                If reg(i).Reg_Ent <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                
                If reg(i).Reg_Sal <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                        
                i = i + 1
            Loop
        End If
ContinuarCant:
        objrsDesgl.MoveNext
    Loop
    
    
    ' ================================================================================================
    'Genero los registros del HC, cuando se trata de desglose como Cantidad de Horas y Franja Horaria
    Weekdia = Weekday(p_fecha)
    StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
             "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
    OpenRecordset StrSql, objrsDesgl
    'FGZ - 31/10/2006
    'Esta alrevez el if
    'If Not objrsDesgl.EOF And depurar Then
    If objrsDesgl.EOF And depurar Then
        GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
        Exit Sub
    End If
    StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 3 " & _
                     " ORDER BY desghoradesde,desghplus"
    OpenRecordset StrSql, objrsDesgl
    Do While Not objrsDesgl.EOF
        cant_parcial = 0
        For i = 0 To Cant_Pares
            StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par =" & i
            OpenRecordset StrSql, objRs
            If objRs.EOF Then GoTo Saltear
            hora_desde = objRs!Hora
            fecpar1 = objRs!Fecha
            objRs.MoveNext
            If objRs.EOF Then GoTo Saltear
            hora_hasta = objRs!Hora
            fecpar2 = objRs!Fecha

            hora_desde_desg = objrsDesgl!desghoradesde
            hora_hasta_desg = objrsDesgl!desghorahasta


            'FGZ - 31/10/2006
            Tipo_de_Desgloce = objrsDesgl!desghorfijo
            'si cambio de dia ==> no debria generar horarios absolutos
            TotHor = 0
            'hora_desde = hDesde
            'hora_hasta = hHasta
            nro_desg = objrsDesgl!desghnro
            
            Call Cambiar_Horas_Desde(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_dia)
            Call Cambiar_Horas_hasta(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_dia)
                
            'OJO !! cuando la FP es relativa y va de posterior a la salida y anterior a la entrada
            ' tiene problemas con los turnos nocturnos ya que la salida pasa de dia ==>
            'hay que hacer el control desde afuera y pasar de dia al calculo de la fecha hasta
            If objFechasHoras.Menor_Hora(fecha_hasta_desg, hora_hasta_desg, fecha_desde_desg, hora_desde_desg) Then
                fecha_hasta_desg = DateAdd("d", 1, fecha_hasta_desg)
            End If

            fraccionar_horas fecpar1, hora_desde, hora_hasta, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, hora_desde, hora_hasta
                        
'            If (hora_desde_desg > hora_hasta) Or ((hora_hasta_desg < hora_desde) And (fecha_hasta_desg <= fecpar1)) Then GoTo Saltear
'            If (hora_desde_desg < hora_desde) And (hora_desde < hora_hasta_desg And hora_hasta_desg <= hora_hasta) Then
'                'Genero HC de hora-desde a desghorahasta */
'                objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta_desg, tdias, thoras, tmin
'                hcdesde = hora_desde
'                hchasta = hora_hasta_desg
'                TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Saltear
'            End If
'            If (hora_desde_desg >= hora_desde And hora_desde_desg < hora_hasta) And (hora_hasta_desg <= hora_hasta And ((hora_hasta_desg > hora_desde) And (fecha_hasta_desg <= fecpar1))) Then
''            /* Genero HC de desghoradesde a desghorahasta */
'                objFechasHoras.RestaHs fecpar1, hora_desde_desg, fecpar1, hora_hasta_desg, tdias, thoras, tmin
'                hcdesde = hora_desde_desg
'                hchasta = hora_hasta_desg
'                TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Saltear
'            End If
'            If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
'            ' Genero HC de hora_desde a hora_hasta */
'                 objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, tdias, thoras, tmin
'                 hcdesde = hora_desde
'                 hchasta = hora_hasta
'                 TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                 If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Saltear
'            End If

            'FGZ - 31/10/2006 ----------------------------------------------------------------------------
            'Desgloce   [---------------]
            'Horario          (----------------)
            If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                objFechasHoras.RestaHs fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                HCDesde = hora_desde
                HCHasta = hora_hasta_desg
                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo ContinuarAmbas
            End If

            'Desgloce       [---------------]
            'Horario    (----------------)
            If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                HCDesde = hora_desde_desg
                HCHasta = hora_hasta
                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo ContinuarAmbas
            End If
            
            'Desgloce       [---------------]
            'Horario    (-----------------------)
            If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_desde) Then
                objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                HCDesde = hora_desde_desg
                HCHasta = hora_hasta_desg
                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo ContinuarAmbas
            End If

            'Desgloce   [---------------]
            'Horario        (--------)
            If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
            'If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
                objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                HCDesde = hora_desde
                HCHasta = hora_hasta
                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo ContinuarAmbas
            End If
            'FGZ - 31/10/2006 ----------------------------------------------------------------------------

            cant_parcial = cant_parcial + TotHor
Saltear:
        Next
        
        'If ((cant_parcial > 0) And (cant_parcial < objrsDesgl!desghoffset)) Then TotHor = 0
        If (cant_parcial < objrsDesgl!desgcantmin) Then TotHor = 0
        If ((cant_parcial >= objrsDesgl!desgcantmin) And (cant_parcial < objrsDesgl!desgcantmax)) Then
            If (cant_parcial > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
                'FGZ - 31/10/2006 - le cambié esa asignacion
                'TotHor = cant_parcial - objrsDesgl!desgcantmin
                TotHor = cant_parcial
             Else
                TotHor = 0
            End If
        End If
        If (cant_parcial >= objrsDesgl!desgcantmax) Then
            If (cant_parcial > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = objrsDesgl!desgcantmax - objrsDesgl!desgcantmin
             Else
               TotHor = 0
            End If
        End If
        'FGZ - 29/07/2008 ----
        If ((TotHor > 0) And (TotHor < objrsDesgl!desghoffset)) Then TotHor = 0
        'FGZ - 29/07/2008 ----
        
    'Chequea si las horas trabajadas estan entre en maximo plus y minimo plus o
    'si el maximo y minimo son 0, paga el total de horas */
      If TotHor > 0 Then
          If (objrsDesgl!desghplus = 1) Then
              TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
              
              If (objrsDesgl!desghminplus <> 0) Or (objrsDesgl!desghmaxplus <> 0) Then
                  If (TotHor < objrsDesgl!desghminplus) Then TotHor = objrsDesgl!desghminplus
                  If (objrsDesgl!desghmaxplus < TotHor) Then TotHor = objrsDesgl!desghmaxplus
              End If
          End If
        ' Redondeo del total de horas */
        'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
        'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
        'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
        TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
        Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
        TotHorHHMM = "'" & TotHorHHMM & "'"
        
        Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
        Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
        
          If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
        
          'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
          
          
         'FGZ - 22/03/2011
         If TotHor = 0 Then GoTo ContinuarAmbas
          
        'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
        'Fecha_Generacion = p_fecha
        Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
        'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
          
          StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                   "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                   "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                   TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
                   CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                   ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                   ValorNulo & ",''," & ValorNulo & ",''," & _
                   Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
            End If
            
            'FGZ - 12/04/2006 No estaba esto
            'Marcar las registraciones involucradas con el Horario generado
            i = 1
            NoHayMas = False
            Do While i <= UBound(reg) And Not NoHayMas
                If reg(i).Reg_Ent <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                
                If reg(i).Reg_Sal <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                        
                i = i + 1
            Loop
       End If
       
ContinuarAmbas:
        objrsDesgl.MoveNext
    Loop
    'Flog.writeline Espacios(Tabulador * 3) & "-------------------------------------"
End Sub


Private Sub Generar_Horario_Normal_C8()
' ---------------------------------------------------------------------------------------------
' Descripcion: Procedimiento que genera el Horario normal del dia de CARGIL.
' En el caso de feriado en nocturnos para la parte feriado de acuerdo al dia
' No como la version 7 que paga todo segun la entrada
' Autor      : FGZ
' Fecha      : 26/06/2008
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Cant_Reg As Integer
Dim Cant_Pares As Integer
Dim i As Integer
Dim par1 As String
Dim par2 As String
Dim HDesde As String
Dim HHasta As String
Dim fecpar1 As Date
Dim fecpar2 As Date
Dim anor1 As Integer
Dim anor2 As Integer
Dim Reg_Ent As Long
Dim Reg_Sal As Long
Dim otroDia As Boolean
Dim j As Integer
Dim Weekdia As Byte
Dim objrsDesgl As New ADODB.Recordset
Dim TotHor As Single
Dim TotHorHHMM As String

'FGZ - 30/08/2006
'Dim nro_desg As integer
Dim nro_desg As Long

Dim hora_desde_desg As String
Dim hora_hasta_desg As String
Dim fecha_desde_desg As Date
Dim fecha_hasta_desg As Date
Dim Hora_a_Red As String
Dim HCDesde As String
Dim HCHasta As String
Dim cant_aux As Single
Dim CantH_Acum As Single
Dim cant_parcial As Single
Dim par As Integer
Dim rs As New ADODB.Recordset
Dim Cambio_dia As Boolean
Dim EsFeriado2 As Boolean
Dim objFeriado2 As New Feriado
    
'FGZ - 12/04/2006 - Arreglo de registraciones leidas y a marcar como procesadas
Dim reg(1 To 100) As TRegistracionesProcesadas
Dim NoHayMas As Boolean
    
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Version para Turnos Nocturnos"
    End If
    diatipo = 0 'Dia laborable
    
    StrSql = "SELECT COUNT(regnro) as cant FROM " & TTempWFTurno & " WHERE evenro = 2 "
    OpenRecordset StrSql, objRs
    If Not objRs.EOF Then If Not IsNull(objRs!Cant) Then Cant_Reg = objRs!Cant
    Cant_Pares = Int(Cant_Reg / 2)
    
    'FGZ - 09/06/2006
    'generacion de horario normal aun si tiene una sola registracion
    If Cant_Reg = 1 Then
        ' Se crea un reg. de wf-dia para usar en la política - Con turnos libres wf-dia está vacía */
        'InsertarWFDia Nro_Dia, "", p_fecha
        Call Politica(40)
        StrSql = "DELETE FROM " & TTempWFDiaLaboral
        objConn.Execute StrSql, , adExecuteNoRecords
        Exit Sub
    End If
    
    For i = 0 To Cant_Pares
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par = " & i
        If rs.State = adStateOpen Then rs.Close
        rs.Open StrSql, objConn
        If rs.EOF Then GoTo continuarFor
        par = rs!par
        par1 = rs!Hora
        fecpar1 = rs!Fecha
        Reg_Ent = rs!Regnro
        
        'FGZ - 12/04/2006 - ojo !!! - si el desgloce es por cantidad de horas hay que guardar los pares anteriores porque acumula antes de guardar
        ' y se pisan los nro de las registraciones a marcar como procesadas
        reg(i).Reg_Ent = rs!Regnro
        
        anor1 = 0 & rs!anornro
        
        StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs!Regnro & " AND regestado <> 'P'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        rs.MoveNext
        If rs.EOF Then Exit Sub
        
        par2 = rs!Hora
        fecpar2 = rs!Fecha
        Reg_Sal = rs!Regnro
        'FGZ - 12/04/2006 - ojo !!! - si el desgloce es por cantidad de horas hay que guardar los pares anteriores porque acumula antes de guardar
        ' y se pisan los nro de las registraciones a marcar como procesadas
        reg(i).Reg_Sal = rs!Regnro
        
        anor2 = "0" & rs!anornro
        
        StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs!Regnro & " AND regestado <> 'P'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        If fecpar1 = fecpar2 Then
            HDesde = par1
            HHasta = par2
            otroDia = False
        Else
            HDesde = par1       'Como las fechas son distintas el desgloce es distinto por cada día
            HHasta = "2400"     'Genero dos HC uno de par1 hasta 24:00 y el otro de 00:00 a par2
            otroDia = True
        End If
        
        Cambio_dia = False
        Weekdia = Weekday(p_fecha)
        For j = 1 To 2 'En el peor de los casos lo hara 2 veces, una por cada día
            'FGZ - 09/06/2006
            'le tube que agregar esta condicion porque cuando se trataba de un turno nocturno hacia macanas
            If Cambio_dia Then
                EsFeriado2 = objFeriado2.Feriado(fecpar1, Empleado.Ternro, depurar)
                If EsFeriado2 Then
                    Weekdia = Weekday(fecpar1)
                    diatipo = 2
                Else
                    If Subturno_Genera <> 1 Then
                        Weekdia = Weekday(fecpar1)
                    End If
                End If
                
                
            End If
            
'            'FGZ - 10/01/2006
'            'le tube que agregar esta condicion porque
'            'cuando se trataba de un turno nocturno en dia viernes tal que el sabado no trabaja
'            'hacia macanas
'            If Not Cambio_Dia Then
'                Weekdia = Weekday(fecpar1)
'            End If
            
            StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
                     "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
            OpenRecordset StrSql, objrsDesgl
            If objrsDesgl.EOF Then
                If depurar Then GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
                Exit Sub
            End If
            
            StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 2 "
            StrSql = StrSql & " ORDER BY desghorfijo,desghoradesde"
            'StrSql = StrSql & " ORDER BY desgdnro,desghoradesde"
            OpenRecordset StrSql, objrsDesgl
            Do While Not objrsDesgl.EOF
            
                '1 Horario Fijo
                '2 Horario Variable
                '3 Horario Fijo/Variable
                Tipo_de_Desgloce = objrsDesgl!desghorfijo
                
                'If Tipo_de_Desgloce = 1 And Cambio_Dia Then
                '    GoTo continuar
                'End If
                
                'si cambio de dia ==> no debria generar horarios absolutos
                TotHor = 0
                hora_desde = HDesde
                hora_hasta = HHasta
                nro_desg = objrsDesgl!desghnro
    
                'esto lo hizo Cristian -----
                 Call Cambiar_Horas_Desde3(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_dia, fecpar1)
                 Call Cambiar_Horas_hasta3(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_dia, fecpar1)
                'esto lo hizo Cristian -----
                
                'esto lo hizo winsy -----
                'Call Cambiar_Horas_Desde(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_dia)
                'Call Cambiar_Horas_hasta(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_dia)
                'esto lo hizo winsy -----
                
                
                
                
                'OJO !! cuando la FP es relativa y va de posterior a la salida y anterior a la entrada
                ' tiene problemas con los turnos nocturnos ya que la salida pasa de dia ==>
                'hay que hacer el control desde afuera y pasar de dia al calculo de la fecha hasta
                If objFechasHoras.Menor_Hora(fecha_hasta_desg, hora_hasta_desg, fecha_desde_desg, hora_desde_desg) Then
                    fecha_hasta_desg = DateAdd("d", 1, fecha_hasta_desg)
                End If
                
                Call fraccionar_horas(fecpar1, hora_desde, hora_hasta, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, hora_desde, hora_hasta)
    
                'Desgloce   [---------------]
                'Horario          (----------------)
                If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                    objFechasHoras.RestaHs fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                    HCDesde = hora_desde
                    HCHasta = hora_hasta_desg
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
                'Desgloce       [---------------]
                'Horario    (----------------)
                If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                    objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                    HCDesde = hora_desde_desg
                    HCHasta = hora_hasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
                
                'Desgloce       [---------------]
                'Horario    (-----------------------)
                If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_desde) Then
                    objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                    HCDesde = hora_desde_desg
                    HCHasta = hora_hasta_desg
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
                'Desgloce   [---------------]
                'Horario        (--------)
                If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                'If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                    HCDesde = hora_desde
                    HCHasta = hora_hasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
    
                '--------------------------------------------------------------------------
                '--------------------------------------------------------------------------
                'Viejos
'                If (hora_desde_desg < hora_desde) And (hora_desde < hora_hasta_desg And hora_hasta_desg <= hora_hasta) Then
'                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta_desg, tdias, thoras, tmin
'                    hcdesde = hora_desde
'                    hchasta = hora_hasta_desg
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                End If
'                If (hora_desde_desg >= hora_desde And hora_desde_desg < hora_hasta) And (hora_hasta_desg > hora_hasta) Then
'                    objFechasHoras.RestaHs fecpar1, hora_desde_desg, fecpar1, hora_hasta, tdias, thoras, tmin
'                    hcdesde = hora_desde_desg
'                    hchasta = hora_hasta
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                End If
'                If (hora_desde_desg >= hora_desde And hora_desde_desg < hora_hasta) And (hora_hasta_desg <= hora_hasta And hora_hasta_desg > hora_desde) Then
'                    objFechasHoras.RestaHs fecpar1, hora_desde_desg, fecpar1, hora_hasta_desg, tdias, thoras, tmin
'                    hcdesde = hora_desde_desg
'                    hchasta = hora_hasta_desg
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                End If
'                If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
'                     '/* Genero HC de hora-desde a hora-hasta */
'                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, tdias, thoras, tmin
'                    hcdesde = hora_desde
'                    hchasta = hora_hasta
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                End If
                
                
                
'                'FGZ - nueva 25/10/2005
'                If (hora_desde_desg <= hora_desde) And ((hora_hasta_desg > hora_hasta) Or (hora_hasta_desg = "0000" And hora_hasta = "2400")) Then
'                     '/* Genero HC de hora-desde a hora-hasta */
'                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, tdias, thoras, tmin
'                    hcdesde = hora_desde
'                    hchasta = hora_hasta
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                End If
'                'FGZ - nueva 26/10/2005
'                If (hora_desde_desg >= hora_desde) And ((hora_hasta_desg > hora_hasta) Or (hora_hasta_desg < hora_hasta And fecha_desde_desg < fecha_hasta_desg)) Then
'                     '/* Genero HC de hora-desde a hora-hasta */
'                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, tdias, thoras, tmin
'                    hcdesde = hora_desde
'                    hchasta = hora_hasta
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                End If
                'Viejos
                '--------------------------------------------------------------------------
                '--------------------------------------------------------------------------
                
                
                If (TotHor = 0) Then GoTo Continuar
                 
                If (objrsDesgl!desghplus = 1) Then
                    'Hora Plus
                    TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
                    If (objrsDesgl!desghminplus <> 0) Or (objrsDesgl!desghmaxplus <> 0) Then
                        If (TotHor < objrsDesgl!desghminplus) Then TotHor = objrsDesgl!desghminplus
                        If (objrsDesgl!desghmaxplus < TotHor) Then TotHor = objrsDesgl!desghmaxplus
                    End If
                End If
                
                'Redondeo del total de horas
'                objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
'                objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
                'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
                TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
                Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
                TotHorHHMM = "'" & TotHorHHMM & "'"
                
                Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
                Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
                                
                                
                Tipo_Hora = objrsDesgl!thnro
                Total_horas = TotHor
                
                Call Politica(540)
                
                TotHor = Total_horas
                
                If TotHor = 0 Then GoTo Continuar
                
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                
                
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                         "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                         "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                         TotHorHHMM & "," & TotHor & "," & ConvFecha(fecpar1) & ",' '," & ConvFecha(fecpar1) & ",'" & HCDesde & "','" & _
                         HCHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                         ValorNulo & "," & Empleado.Ternro & "," & Tipo_Hora & "," & Nro_Turno & "," & _
                         Reg_Ent & ",'" & IIf(j = 1, par1, "0000") & "'," & Reg_Sal & ",'" & _
                         IIf((j = 2) Or (j = 1 And Not otroDia), par2, "2400") & "'," & Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & Tipo_Hora & "- Cantidad: " & TotHor & " hs."
                End If
                
                ' Marcar las registraciones involucradas con el Horario generado
                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Ent
                objConn.Execute StrSql, , adExecuteNoRecords
                    
                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Sal
                objConn.Execute StrSql, , adExecuteNoRecords
                
Continuar:
                objrsDesgl.MoveNext
            Loop
            
            If fecpar1 = fecpar2 Then
                Exit For
            Else
                hora_desde = "0000"
                HDesde = hora_desde
                hora_hasta = par2
                HHasta = hora_hasta
                fecpar1 = fecpar2
                Cambio_dia = True
            End If
            
        Next j
continuarFor:
    Next i
    
    
    ' ==========================================================================================
    'Genero los registros del HC, cuando se trata de desglose como cantidad de horas
    Weekdia = Weekday(p_fecha)
    StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
             "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
    OpenRecordset StrSql, objrsDesgl
    If objrsDesgl.EOF Then
        If depurar Then GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
        Exit Sub
    End If
    StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 1 " & _
                     " ORDER BY desgdnro,desghoradesde"
    OpenRecordset StrSql, objrsDesgl
    
    Do While Not objrsDesgl.EOF
        cant_aux = sumarizar_horas(Cant_Pares, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta)
        'If ((cant_aux > 0) And (cant_aux < objrsDesgl!desghoffset)) Then TotHor = 0
        If (cant_aux < objrsDesgl!desgcantmin) Then TotHor = 0
        If ((cant_aux >= objrsDesgl!desgcantmin) And (cant_aux < objrsDesgl!desgcantmax)) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = cant_aux - objrsDesgl!desgcantmin
            Else
               TotHor = 0
            End If
        End If
        If (cant_aux >= objrsDesgl!desgcantmax) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = objrsDesgl!desgcantmax - objrsDesgl!desgcantmin
            Else
               TotHor = 0
            End If
        End If
        'FGZ - 29/07/2008 ----
        If ((TotHor > 0) And (TotHor < objrsDesgl!desghoffset)) Then TotHor = 0
        'FGZ - 29/07/2008 ----
        
        ' Chequea si las horas trabajadas estan entre en maximo plus y minimo plus o
        ' si el maximo y minimo son 0, paga el total de horas
        If (objrsDesgl!desghplus = 1) And (objrsDesgl!desghmaxplus = 0 And objrsDesgl!desghminplus = 0) Then
           If (TotHor < objrsDesgl!desghminplus) Then
                 GoTo ContinuarCant
              Else
                 If (TotHor > objrsDesgl!desghmaxplus) Then TotHor = TotHor - objrsDesgl!desghmaxplus
            End If
        End If
        If TotHor > 0 Then
            ' Si es plus, se calcula la duración de la hora */
            If (objrsDesgl!desghplus = 1) Then
                TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
            End If
            ' Redondeo del total de horas
            'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
            'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
            'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
            TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
            Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
            TotHorHHMM = "'" & TotHorHHMM & "'"
            
            Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
            Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
            
            
            If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
            
            'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
            
            
            'FGZ - 22/03/2011
            If TotHor = 0 Then GoTo ContinuarCant
            
            'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
            'Fecha_Generacion = p_fecha
            Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
            'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
            
            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                      "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                      "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                      TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
                      CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                      ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                      ValorNulo & ",''," & ValorNulo & ",''," & _
                      Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
            End If
        
            'FGZ - 12/04/2006 No estaba esto
            'Marcar las registraciones involucradas con el Horario generado
            i = 1
            NoHayMas = False
            Do While i <= UBound(reg) And Not NoHayMas
                If reg(i).Reg_Ent <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                
                If reg(i).Reg_Sal <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                        
                i = i + 1
            Loop
        End If

ContinuarCant:
        objrsDesgl.MoveNext
    Loop
    
    
    ' ===================================================================================================
    ' Genero los registros del HC, cuando se trata de desglose como Cantidad de Horas y Franja Horaria
    Weekdia = Weekday(p_fecha)
    StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
             "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
    OpenRecordset StrSql, objrsDesgl
    'FGZ - 31/10/2006
    'Esta alrevez el if
    'If Not objrsDesgl.EOF And depurar Then
    If objrsDesgl.EOF And depurar Then
        GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
        Exit Sub
    End If
    StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 3 " & _
                     " ORDER BY desghoradesde,desghplus"
    OpenRecordset StrSql, objrsDesgl
    Do While Not objrsDesgl.EOF
        cant_parcial = 0
        For i = 0 To Cant_Pares
            StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par =" & i
            OpenRecordset StrSql, objRs
            If objRs.EOF Then GoTo Saltear
            hora_desde = objRs!Hora
            fecpar1 = objRs!Fecha
            objRs.MoveNext
            If objRs.EOF Then GoTo Saltear
            hora_hasta = objRs!Hora
            fecpar2 = objRs!Fecha

            hora_desde_desg = objrsDesgl!desghoradesde
            hora_hasta_desg = objrsDesgl!desghorahasta


            'FGZ - 31/10/2006
            Tipo_de_Desgloce = objrsDesgl!desghorfijo
            'si cambio de dia ==> no debria generar horarios absolutos
            TotHor = 0
            'hora_desde = hDesde
            'hora_hasta = hHasta
            nro_desg = objrsDesgl!desghnro
            
            Call Cambiar_Horas_Desde(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_dia)
            Call Cambiar_Horas_hasta(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_dia)
                
            'OJO !! cuando la FP es relativa y va de posterior a la salida y anterior a la entrada
            ' tiene problemas con los turnos nocturnos ya que la salida pasa de dia ==>
            'hay que hacer el control desde afuera y pasar de dia al calculo de la fecha hasta
            If objFechasHoras.Menor_Hora(fecha_hasta_desg, hora_hasta_desg, fecha_desde_desg, hora_desde_desg) Then
                fecha_hasta_desg = DateAdd("d", 1, fecha_hasta_desg)
            End If

            fraccionar_horas fecpar1, hora_desde, hora_hasta, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, hora_desde, hora_hasta
                        
'            If (hora_desde_desg > hora_hasta) Or ((hora_hasta_desg < hora_desde) And (fecha_hasta_desg <= fecpar1)) Then GoTo Saltear
'            If (hora_desde_desg < hora_desde) And (hora_desde < hora_hasta_desg And hora_hasta_desg <= hora_hasta) Then
'                'Genero HC de hora-desde a desghorahasta */
'                objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta_desg, tdias, thoras, tmin
'                hcdesde = hora_desde
'                hchasta = hora_hasta_desg
'                TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Saltear
'            End If
'            If (hora_desde_desg >= hora_desde And hora_desde_desg < hora_hasta) And (hora_hasta_desg <= hora_hasta And ((hora_hasta_desg > hora_desde) And (fecha_hasta_desg <= fecpar1))) Then
''            /* Genero HC de desghoradesde a desghorahasta */
'                objFechasHoras.RestaHs fecpar1, hora_desde_desg, fecpar1, hora_hasta_desg, tdias, thoras, tmin
'                hcdesde = hora_desde_desg
'                hchasta = hora_hasta_desg
'                TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Saltear
'            End If
'            If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
'            ' Genero HC de hora_desde a hora_hasta */
'                 objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, tdias, thoras, tmin
'                 hcdesde = hora_desde
'                 hchasta = hora_hasta
'                 TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                 If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Saltear
'            End If

            'FGZ - 31/10/2006 ----------------------------------------------------------------------------
            'Desgloce   [---------------]
            'Horario          (----------------)
            If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                objFechasHoras.RestaHs fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                HCDesde = hora_desde
                HCHasta = hora_hasta_desg
                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo ContinuarAmbas
            End If

            'Desgloce       [---------------]
            'Horario    (----------------)
            If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                HCDesde = hora_desde_desg
                HCHasta = hora_hasta
                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo ContinuarAmbas
            End If
            
            'Desgloce       [---------------]
            'Horario    (-----------------------)
            If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_desde) Then
                objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                HCDesde = hora_desde_desg
                HCHasta = hora_hasta_desg
                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo ContinuarAmbas
            End If

            'Desgloce   [---------------]
            'Horario        (--------)
            If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
            'If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
                objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                HCDesde = hora_desde
                HCHasta = hora_hasta
                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo ContinuarAmbas
            End If
            'FGZ - 31/10/2006 ----------------------------------------------------------------------------

            cant_parcial = cant_parcial + TotHor
Saltear:
        Next
        
        'If ((cant_parcial > 0) And (cant_parcial < objrsDesgl!desghoffset)) Then TotHor = 0
        If (cant_parcial < objrsDesgl!desgcantmin) Then TotHor = 0
        If ((cant_parcial >= objrsDesgl!desgcantmin) And (cant_parcial < objrsDesgl!desgcantmax)) Then
            If (cant_parcial > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
                'FGZ - 31/10/2006 - le cambié esa asignacion
                'TotHor = cant_parcial - objrsDesgl!desgcantmin
                TotHor = cant_parcial
             Else
                TotHor = 0
            End If
        End If
        If (cant_parcial >= objrsDesgl!desgcantmax) Then
            If (cant_parcial > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = objrsDesgl!desgcantmax - objrsDesgl!desgcantmin
             Else
               TotHor = 0
            End If
        End If
        'FGZ - 29/07/2008 ----
        If ((TotHor > 0) And (TotHor < objrsDesgl!desghoffset)) Then TotHor = 0
        'FGZ - 29/07/2008 ----
        
    'Chequea si las horas trabajadas estan entre en maximo plus y minimo plus o
    'si el maximo y minimo son 0, paga el total de horas */
      If TotHor > 0 Then
          If (objrsDesgl!desghplus = 1) Then
              TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
              
              If (objrsDesgl!desghminplus <> 0) Or (objrsDesgl!desghmaxplus <> 0) Then
                  If (TotHor < objrsDesgl!desghminplus) Then TotHor = objrsDesgl!desghminplus
                  If (objrsDesgl!desghmaxplus < TotHor) Then TotHor = objrsDesgl!desghmaxplus
              End If
          End If
        ' Redondeo del total de horas */
        'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
        'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
        'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
        TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
        Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
        TotHorHHMM = "'" & TotHorHHMM & "'"
        
        Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
        Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
        
          If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
        
          'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
            
          'FGZ - 22/03/2011
          If TotHor = 0 Then GoTo ContinuarAmbas
          
            'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
            'Fecha_Generacion = p_fecha
            Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
            'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
          
          StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                   "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                   "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                   TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
                   CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                   ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                   ValorNulo & ",''," & ValorNulo & ",''," & _
                   Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
            End If
            
            'FGZ - 12/04/2006 No estaba esto
            'Marcar las registraciones involucradas con el Horario generado
            i = 1
            NoHayMas = False
            Do While i <= UBound(reg) And Not NoHayMas
                If reg(i).Reg_Ent <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                
                If reg(i).Reg_Sal <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                        
                i = i + 1
            Loop
       End If
       
ContinuarAmbas:
        objrsDesgl.MoveNext
    Loop
    'Flog.writeline Espacios(Tabulador * 3) & "-------------------------------------"
End Sub


Private Sub Generar_Horario_Normal_C1()
' ---------------------------------------------------------------------------------------------
' Descripcion: Procedimiento que genera el Horario normal del dia.
' Autor      :
' Fecha      :
' Ultima Mod.: FGZ - 06/12/2006 - se sacó la politica 220
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Cant_Reg As Integer
Dim Cant_Pares As Integer
Dim i As Integer
Dim par1 As String
Dim par2 As String
Dim HDesde As String
Dim HHasta As String
Dim fecpar1 As Date
Dim fecpar2 As Date
Dim anor1 As Integer
Dim anor2 As Integer
Dim Reg_Ent As Long
Dim Reg_Sal As Long
Dim otroDia As Boolean
Dim j As Integer
Dim Weekdia As Byte
Dim objrsDesgl As New ADODB.Recordset
Dim TotHor As Single
Dim TotHorHHMM As String

'FGZ - 30/08/2006
'Dim nro_desg As integer
Dim nro_desg As Long
Dim hora_desde_desg As String
Dim hora_hasta_desg As String
Dim fecha_desde_desg As Date
Dim fecha_hasta_desg As Date
Dim Hora_a_Red As String
Dim HCDesde As String
Dim HCHasta As String
Dim cant_aux As Single
Dim CantH_Acum As Single
Dim cant_parcial As Single
Dim par As Integer
Dim rs As New ADODB.Recordset
Dim Cambio_dia As Boolean
    
Dim cantdias As Integer
Dim Corte As Integer
Dim Hdesde_nlb As String
Dim Hhasta_nlb As String
    
'FGZ - 12/04/2006 - Arreglo de registraciones leidas y a marcar como procesadas
Dim reg(1 To 100) As TRegistracionesProcesadas
Dim NoHayMas As Boolean
    
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Version para Halliburton"
    End If
    
    diatipo = 0 'Dia laborable
    
    StrSql = "SELECT COUNT(regnro) as cant FROM " & TTempWFTurno & " WHERE evenro = 2 "
    OpenRecordset StrSql, objRs
    If Not objRs.EOF Then If Not IsNull(objRs!Cant) Then Cant_Reg = objRs!Cant
    Cant_Pares = Int(Cant_Reg / 2)
    Corte = 1
    For i = 0 To Cant_Pares
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par = " & i
        If rs.State = adStateOpen Then rs.Close
        rs.Open StrSql, objConn
        If rs.EOF Then GoTo continuarFor
        par = rs!par
        par1 = rs!Hora
        fecpar1 = rs!Fecha
        Reg_Ent = rs!Regnro
        
        'FGZ - 12/04/2006 - ojo !!! - si el desgloce es por cantidad de horas hay que guardar los pares anteriores porque acumula antes de guardar
        ' y se pisan los nro de las registraciones a marcar como procesadas
        reg(i).Reg_Ent = rs!Regnro
        
        anor1 = 0 & rs!anornro
        
        StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs!Regnro & " AND regestado <> 'P'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        rs.MoveNext
        If rs.EOF Then Exit Sub
        
        par2 = rs!Hora
        fecpar2 = rs!Fecha
        Reg_Sal = rs!Regnro
        'FGZ - 12/04/2006 - ojo !!! - si el desgloce es por cantidad de horas hay que guardar los pares anteriores porque acumula antes de guardar
        ' y se pisan los nro de las registraciones a marcar como procesadas
        reg(i).Reg_Sal = rs!Regnro
        
        anor2 = "0" & rs!anornro
        
        StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & rs!Regnro & " AND regestado <> 'P'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        'halliburton
        cantdias = DateDiff("d", fecpar1, fecpar2) + 1
        
        If fecpar1 = fecpar2 Then
            HDesde = par1
            HHasta = par2
            otroDia = False
        Else
            HDesde = par1       'Como las fechas son distintas el desgloce es distinto por cada día
            HHasta = "2400"     'Genero dos HC uno de par1 hasta 24:00 y el otro de 00:00 a par2
            otroDia = True
        End If
        
        Cambio_dia = False
        If depurar Then
            Flog.writeline
            Flog.writeline Espacios(Tabulador * 3) & "Cantidad de dias " & cantdias
            Flog.writeline
        End If
        
        For j = 1 To cantdias 'En el peor de los casos lo hará dos veces uno por cada dia
        
            Call Actualizar_Dia_Tipo(fecpar1 + 1, fecpar1, HDesde, HHasta, Corte, Hdesde_nlb, Hhasta_nlb, otroDia)
        
            If depurar Then
                Flog.writeline
                Flog.writeline Espacios(Tabulador * 3) & "Corte " & Corte
                Flog.writeline
            End If
            If Corte = 1 Or Corte = 2 Then
            
                'FGZ - 10/01/2006
                'le tube que agregar esta condicion porque
                'cuando se trataba de un turno nocturno en dia viernes tal que el sabado no trabaja
                'hacia macanas
                If Not Cambio_dia Then
                    Weekdia = Weekday(fecpar1)
                End If
                
                StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
                         "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
                OpenRecordset StrSql, objrsDesgl
                If objrsDesgl.EOF Then
                    If depurar Then GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
                    Exit Sub
                End If
                
                StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 2 "
                StrSql = StrSql & " ORDER BY desghorfijo,desghoradesde"
                'StrSql = StrSql & " ORDER BY desgdnro,desghoradesde"
                OpenRecordset StrSql, objrsDesgl
                
                If depurar Then
                    Flog.writeline
                    Flog.writeline Espacios(Tabulador * 3) & "Cantidad de desgloces para el dia " & objrsDesgl.RecordCount
                    Flog.writeline
                End If
                Do While Not objrsDesgl.EOF
                
                    '1 Horario Fijo
                    '2 Horario Variable
                    '3 Horario Fijo/Variable
                    Tipo_de_Desgloce = objrsDesgl!desghorfijo
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & "Tipo de Desgloce " & Tipo_de_Desgloce
                    End If
                    'If Tipo_de_Desgloce = 1 And Cambio_Dia Then
                    '    GoTo continuar
                    'End If
                    
                    'si cambio de dia ==> no debria generar horarios absolutos
                    TotHor = 0
                    hora_desde = HDesde
                    hora_hasta = HHasta
                    nro_desg = objrsDesgl!desghnro
        
        '            ***** Cambio segun lo definido en el desglose de horas ******
        
    '                Cambiar_Horas nro_desg, hora_desde_desg, hora_hasta_desg, fecha_desde_desg, fecha_hasta_desg
                    
                    Call Cambiar_Horas_Desde(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_dia)
                    
                    Call Cambiar_Horas_hasta(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_dia)
                    
                    'FGZ - 10/01/2006
                    'OJO !! cuando la FP es relativa y va de posterior a la salida y anterior a la entrada
                    ' tiene problemas con los turnos nocturnos ya que la salida pasa de dia ==>
                    'hay que hacer el control desde afuera y pasar de dia al calculo de la fecha hasta
                    If objFechasHoras.Menor_Hora(fecha_hasta_desg, hora_hasta_desg, fecha_desde_desg, hora_desde_desg) Then
                        fecha_hasta_desg = DateAdd("d", 1, fecha_hasta_desg)
                    End If
                    
                    If Not EsNulo(hora_desde) And Not EsNulo(hora_hasta) Then
                        Call fraccionar_horas(fecpar1, hora_desde, hora_hasta, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, hora_desde, hora_hasta)
                    End If
                    
                    'FGZ - 22/09/2006 - si vienen nulo salta por error
                    If Not EsNulo(hora_desde) And Not EsNulo(hora_hasta) Then
                        'Desgloce   [---------------]
                        'Horario          (----------------)
                        If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                            objFechasHoras.RestaHs fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                            HCDesde = hora_desde
                            HCHasta = hora_hasta_desg
                            TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                            If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                        End If
            
                        'Desgloce       [---------------]
                        'Horario    (----------------)
                        If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                            objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                            HCDesde = hora_desde_desg
                            HCHasta = hora_hasta
                            TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                            If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                        End If
                        
                        'Desgloce       [---------------]
                        'Horario    (-----------------------)
                        If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_desde) Then
                            objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                            HCDesde = hora_desde_desg
                            HCHasta = hora_hasta_desg
                            TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                            If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                        End If
            
                        'Desgloce   [---------------]
                        'Horario        (--------)
                        If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                        'If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
                            objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                            HCDesde = hora_desde
                            HCHasta = hora_hasta
                            TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                            If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                        End If
                    End If
                    If (TotHor = 0) Then GoTo Continuar
                     
                    If (objrsDesgl!desghplus = 1) Then
                        'Hora Plus
                        TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
                        If (objrsDesgl!desghminplus <> 0) Or (objrsDesgl!desghmaxplus <> 0) Then
                            If (TotHor < objrsDesgl!desghminplus) Then TotHor = objrsDesgl!desghminplus
                            If (objrsDesgl!desghmaxplus < TotHor) Then TotHor = objrsDesgl!desghmaxplus
                        End If
                    End If
                    
                    'Redondeo del total de horas
                    'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
                    'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
                    'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
                    TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
                    Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
                    TotHorHHMM = "'" & TotHorHHMM & "'"
                    
                    Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
                    Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
                                    
                    Tipo_Hora = objrsDesgl!thnro
                    Total_horas = TotHor
                    
                    Call Politica(540)
                    
                    TotHor = Total_horas
                    
                    'FGZ - 06/12/2006 - Nueva version de la politica 220
                    '   se sacó esto y se puso la llamada al final del procesamiento del dia
                    '   Justo antes de la llamada a la politica (700)
                    '-------------------------------------------------------------
                    ''esto es lo nuevo de halliburton
                    'hab_pol220 = False
                    'Call Politica(220)
                    'If hab_pol220 Then
                    '    Call ConvertirHorasNormales2(p_fecha, Tipo_Hora, TotHor, fecpar1, hcdesde, hchasta, Reg_Ent, Reg_Sal, J, par1, par2, otroDia, Tipo_Hora)
                    'End If
                    'esto es lo nuevo de halliburton
                    '-------------------------------------------------------------
                    
                    If TotHor = 0 Then GoTo Continuar
                    
                    'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                    Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
                    'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                    
                    
                    StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                             "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                             "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                             TotHorHHMM & "," & TotHor & "," & ConvFecha(fecpar1) & ",' '," & ConvFecha(fecpar1) & ",'" & HCDesde & "','" & _
                             HCHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                             ValorNulo & "," & Empleado.Ternro & "," & Tipo_Hora & "," & Nro_Turno & "," & _
                             Reg_Ent & ",'" & IIf(j = 1, par1, "0000") & "'," & Reg_Sal & ",'" & _
                             IIf((j = 2) Or (j = 1 And Not otroDia), par2, "2400") & "'," & Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & Tipo_Hora & "- Cantidad: " & TotHor & " hs."
                    End If
                    
                    ' Marcar las registraciones involucradas con el Horario generado
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Ent
                    objConn.Execute StrSql, , adExecuteNoRecords
                        
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Sal
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
Continuar:
                    objrsDesgl.MoveNext
                Loop
            End If 'if corte = 1 or corte = 2
            
            '---------------------------------------------------
            ' 3 - Cambio realizado para Halliburton
            '---------------------------------------------------
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "Corte = 2 o Corte = 3 "
            End If
            If Corte = 2 Or Corte = 3 Then
                
                Weekdia = Weekday(fecpar1)
                diatipo = 1
                HDesde = Hdesde_nlb
                HHasta = Hhasta_nlb
                
                StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
                         "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
                OpenRecordset StrSql, objrsDesgl
                If objrsDesgl.EOF Then
                    If depurar Then GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
                    Exit Sub
                End If
                
                StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 2 " & _
                         " ORDER BY desgdnro,desghoradesde"
                OpenRecordset StrSql, objrsDesgl
                
                If depurar Then
                    Flog.writeline
                    Flog.writeline Espacios(Tabulador * 3) & "Cantidad de desgloces para el dia " & objrsDesgl.RecordCount
                    Flog.writeline
                End If
                Do While Not objrsDesgl.EOF
                
                    '1 Horario Fijo
                    '2 Horario Variable
                    '3 Horario Fijo/Variable
                    Tipo_de_Desgloce = objrsDesgl!desghorfijo
                
                    TotHor = 0
                    hora_desde = HDesde
                    hora_hasta = HHasta
                    nro_desg = objrsDesgl!desghnro
        
                    Call Cambiar_Horas_Desde(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_dia)
                    
                    Call Cambiar_Horas_hasta(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_dia)
                    
                    'FGZ - 10/01/2006
                    'OJO !! cuando la FP es relativa y va de posterior a la salida y anterior a la entrada
                    ' tiene problemas con los turnos nocturnos ya que la salida pasa de dia ==>
                    'hay que hacer el control desde afuera y pasar de dia al calculo de la fecha hasta
                    If objFechasHoras.Menor_Hora(fecha_hasta_desg, hora_hasta_desg, fecha_desde_desg, hora_desde_desg) Then
                        fecha_hasta_desg = DateAdd("d", 1, fecha_hasta_desg)
                    End If
                    
                    Call fraccionar_horas(fecpar1, hora_desde, hora_hasta, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, hora_desde, hora_hasta)
        
                    'Desgloce   [---------------]
                    'Horario          (----------------)
                    If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                        objFechasHoras.RestaHs fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                        HCDesde = hora_desde
                        HCHasta = hora_hasta_desg
                        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                        If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                    End If
        
                    'Desgloce       [---------------]
                    'Horario    (----------------)
                    If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                        objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                        HCDesde = hora_desde_desg
                        HCHasta = hora_hasta
                        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                        If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                    End If
                    
                    'Desgloce       [---------------]
                    'Horario    (-----------------------)
                    If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_desde) Then
                        objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                        HCDesde = hora_desde_desg
                        HCHasta = hora_hasta_desg
                        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                        If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                    End If
        
                    'Desgloce   [---------------]
                    'Horario        (--------)
                    If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                    'If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
                        objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                        HCDesde = hora_desde
                        HCHasta = hora_hasta
                        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                        If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                    End If
                     
                     If (TotHor = 0) Then GoTo continuar1
                     
                     If (objrsDesgl!desghplus = 1) Then
                        '/* Hora Plus */
                        TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
                        If (objrsDesgl!desghminplus <> 0) Or (objrsDesgl!desghmaxplus <> 0) Then
                            If (TotHor < objrsDesgl!desghminplus) Then TotHor = objrsDesgl!desghminplus
                            If (objrsDesgl!desghmaxplus < TotHor) Then TotHor = objrsDesgl!desghmaxplus
                        End If
                     End If
'                    '/* Redondeo del total de horas */
'                    objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
'                    objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
                    'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
                    TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
                    Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
                    TotHorHHMM = "'" & TotHorHHMM & "'"
                    
                    Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
                    Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
                                    
                    Tipo_Hora = objrsDesgl!thnro
                    Total_horas = TotHor
                    Call Politica(540)
                    
                    '---------------------------------------------------
                    ' 4 - Cambio realizado para Halliburton
                    '---------------------------------------------------
                    TotHor = Total_horas
                    
                    'FGZ - 06/12/2006 - Nueva version de la politica 220
                    '   se sacó esto y se puso la llamada al final del procesamiento del dia
                    '   Justo antes de la llamada a la politica (700)
                    '-------------------------------------------------------------
                    'hab_pol220 = False
                    'Call Politica(220)
                    'If hab_pol220 Then
                    '    Call ConvertirHorasNormales(p_fecha, Tipo_Hora, TotHor, fecpar1, hcdesde, hchasta, Reg_Ent, Reg_Sal, J, par1, par2, otroDia, Tipo_Hora)
                    'End If
                    '-------------------------------------------------------------
                    
                    If TotHor = 0 Then GoTo continuar1
                    'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                    'Fecha_Generacion = p_fecha
                    Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
                    'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                    
                    
                    StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                             "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                             "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                             TotHorHHMM & "," & TotHor & "," & ConvFecha(fecpar1) & ",' '," & ConvFecha(fecpar1) & ",'" & HCDesde & "','" & _
                             HCHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                             ValorNulo & "," & Empleado.Ternro & "," & Tipo_Hora & "," & Nro_Turno & "," & _
                             Reg_Ent & ",'" & IIf(j = 1, par1, "0000") & "'," & Reg_Sal & ",'" & _
                             IIf((j = 2) Or (j = 1 And Not otroDia), par2, "2400") & "'," & Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & Tipo_Hora & "- Cantidad: " & TotHor & " hs."
                    End If
                    
                    ' Marcar las registraciones involucradas con el Horario generado
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Ent
                    objConn.Execute StrSql, , adExecuteNoRecords
                        
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Sal
                    objConn.Execute StrSql, , adExecuteNoRecords
                
continuar1:
                    objrsDesgl.MoveNext
                Loop
            End If 'if corte = 2 or corte = 3
            
            
            '---------------------------------------------------
            ' 5 - Cambio realizado para Halliburton
            '---------------------------------------------------
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "Ultimo paso 5. "
            End If
            If fecpar1 = fecpar2 Then
                Exit For
            Else
                If fecpar1 + 1 = fecpar2 Then
                    hora_desde = "0000"
                    HDesde = hora_desde
                    hora_hasta = par2
                    HHasta = hora_hasta
                    fecpar1 = fecpar2
                    otroDia = False
                Else
                    hora_desde = "0000"
                    HDesde = hora_desde
                    hora_hasta = "2400"
                    HHasta = hora_hasta
                    fecpar1 = fecpar1 + 1
                    Cambio_dia = True
                End If
            End If
            
        Next j
continuarFor:
    Next i
    
    If depurar Then
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 3) & "  Genero los registros del HC, cuando se trata de desglose como cantidad de horas"
    End If
    ' Genero los registros del HC, cuando se trata de desglose como cantidad de horas
    Weekdia = Weekday(p_fecha)
    StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
             "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
    OpenRecordset StrSql, objrsDesgl
    If objrsDesgl.EOF Then
        If depurar Then GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
        Exit Sub
    End If
    StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 1 " & _
                     " ORDER BY desgdnro,desghoradesde"
    OpenRecordset StrSql, objrsDesgl
    
    Do While Not objrsDesgl.EOF
        cant_aux = sumarizar_horas(Cant_Pares, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta)
        'If ((cant_aux > 0) And (cant_aux < objrsDesgl!desghoffset)) Then TotHor = 0
        If (cant_aux < objrsDesgl!desgcantmin) Then TotHor = 0
        If ((cant_aux >= objrsDesgl!desgcantmin) And (cant_aux < objrsDesgl!desgcantmax)) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = cant_aux - objrsDesgl!desgcantmin
            Else
               TotHor = 0
            End If
        End If
        If (cant_aux >= objrsDesgl!desgcantmax) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = objrsDesgl!desgcantmax - objrsDesgl!desgcantmin
            Else
               TotHor = 0
            End If
        End If
        'FGZ - 29/07/2008 ----
        If ((TotHor > 0) And (TotHor < objrsDesgl!desghoffset)) Then TotHor = 0
        'FGZ - 29/07/2008 ----
        
        ' Chequea si las horas trabajadas estan entre en maximo plus y minimo plus o
        ' si el maximo y minimo son 0, paga el total de horas
        If (objrsDesgl!desghplus = 1) And (objrsDesgl!desghmaxplus = 0 And objrsDesgl!desghminplus = 0) Then
           If (TotHor < objrsDesgl!desghminplus) Then
                 GoTo ContinuarCant
              Else
                 If (TotHor > objrsDesgl!desghmaxplus) Then TotHor = TotHor - objrsDesgl!desghmaxplus
            End If
        End If
        If TotHor > 0 Then
            ' Si es plus, se calcula la duración de la hora */
            If (objrsDesgl!desghplus = 1) Then
                TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
            End If
'            ' Redondeo del total de horas
'            objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
'            objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
            'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
            TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
            Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
            TotHorHHMM = "'" & TotHorHHMM & "'"
            
            Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
            Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
            
            If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
            
            'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
            
            'FGZ - 22/03/2011
            If TotHor = 0 Then GoTo ContinuarCant
            
            'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
            'Fecha_Generacion = p_fecha
            Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
            'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
            
            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                      "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                      "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                      TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
                      CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                      ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                      ValorNulo & ",''," & ValorNulo & ",''," & _
                      Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
            End If
        
            'FGZ - 12/04/2006 No estaba esto
            'Marcar las registraciones involucradas con el Horario generado
            i = 1
            NoHayMas = False
            Do While i <= UBound(reg) And Not NoHayMas
                If reg(i).Reg_Ent <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                
                If reg(i).Reg_Sal <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                        
                i = i + 1
            Loop
        
        End If
ContinuarCant:
        objrsDesgl.MoveNext
    Loop
    
    
    If depurar Then
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 3) & "  Genero los registros del HC, cuando se trata de desglose como cantidad de horas y franja horaria"
    End If
    
    
    'Genero los registros del HC, cuando se trata de desglose como Cantidad de Horas y Franja Horaria
    Weekdia = Weekday(p_fecha)
    StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
             "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
    OpenRecordset StrSql, objrsDesgl
    'If Not objrsDesgl.EOF And depurar Then
    'FGZ - 29/08/2006
    If Not objrsDesgl.EOF Then
        If depurar Then
            GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
        End If
        Exit Sub
    End If
    StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 3 " & _
                     " ORDER BY desghoradesde,desghplus"
    OpenRecordset StrSql, objrsDesgl
    Do While Not objrsDesgl.EOF
        cant_parcial = 0
        For i = 0 To Cant_Pares
            StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par =" & i
            OpenRecordset StrSql, objRs
            If objRs.EOF Then GoTo Saltear
            hora_desde = objRs!Hora
            fecpar1 = objRs!Fecha
            objRs.MoveNext
            If objRs.EOF Then GoTo Saltear
            hora_hasta = objRs!Hora
            fecpar2 = objRs!Fecha

            hora_desde_desg = objrsDesgl!desghoradesde
            hora_hasta_desg = objrsDesgl!desghorahasta

            fraccionar_horas fecpar1, hora_desde, hora_hasta, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, hora_desde, hora_hasta
                        
            If (objrsDesgl!desghoradesde > hora_hasta) Or (objrsDesgl!desghorahasta < hora_desde) Then GoTo Saltear
            If (hora_desde_desg < hora_desde) And (hora_desde < hora_hasta_desg And hora_hasta_desg <= hora_hasta) Then
                'Genero HC de hora-desde a desghorahasta */
                objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta_desg, Tdias, Thoras, Tmin
                HCDesde = hora_desde
                HCHasta = hora_hasta_desg
                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Saltear
            End If
            If (hora_desde_desg >= hora_desde And hora_desde_desg < hora_hasta) And (hora_hasta_desg <= hora_hasta And hora_hasta_desg > hora_desde) Then
'            /* Genero HC de desghoradesde a desghorahasta */
                objFechasHoras.RestaHs fecpar1, hora_desde_desg, fecpar1, hora_hasta_desg, Tdias, Thoras, Tmin
                HCDesde = hora_desde_desg
                HCHasta = hora_hasta_desg
                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Saltear
            End If
            If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
            ' Genero HC de hora_desde a hora_hasta */
                 objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                 HCDesde = hora_desde
                 HCHasta = hora_hasta
                 TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                 If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Saltear
            End If
            cant_parcial = cant_parcial + TotHor
Saltear:
        Next
        
        'If ((cant_parcial > 0) And (cant_parcial < objrsDesgl!desghoffset)) Then TotHor = 0
        If (cant_parcial < objrsDesgl!desgcantmin) Then TotHor = 0
        If ((cant_parcial >= objrsDesgl!desgcantmin) And (cant_parcial < objrsDesgl!desgcantmax)) Then
            If (cant_parcial > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
                TotHor = cant_parcial - objrsDesgl!desgcantmin
             Else
                TotHor = 0
            End If
        End If
        If (cant_parcial >= objrsDesgl!desgcantmax) Then
            If (cant_parcial > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = objrsDesgl!desgcantmax - objrsDesgl!desgcantmin
             Else
               TotHor = 0
            End If
        End If
        'FGZ - 29/07/2008 ----
        If ((TotHor > 0) And (TotHor < objrsDesgl!desghoffset)) Then TotHor = 0
        'FGZ - 29/07/2008 ----

        
    'Chequea si las horas trabajadas estan entre en maximo plus y minimo plus o
    'si el maximo y minimo son 0, paga el total de horas */
      If TotHor > 0 Then
          If (objrsDesgl!desghplus = 1) Then
              TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
              
              If (objrsDesgl!desghminplus <> 0) Or (objrsDesgl!desghmaxplus <> 0) Then
                  If (TotHor < objrsDesgl!desghminplus) Then TotHor = objrsDesgl!desghminplus
                  If (objrsDesgl!desghmaxplus < TotHor) Then TotHor = objrsDesgl!desghmaxplus
              End If
          End If
        ' Redondeo del total de horas */
          'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
          'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
          'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
          TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
          Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
          TotHorHHMM = "'" & TotHorHHMM & "'"
          
          Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
          Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
        
          If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
        
          'FGZ - 22/03/2011
          If TotHor = 0 Then GoTo ContinuarAmbas
        
          'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
          Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
          
          StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                   "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                   "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                   TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
                   CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                   ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                   ValorNulo & ",''," & ValorNulo & ",''," & _
                   Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
            End If
            
            'FGZ - 12/04/2006 No estaba esto
            'Marcar las registraciones involucradas con el Horario generado
            i = 1
            NoHayMas = False
            Do While i <= UBound(reg) And Not NoHayMas
                If reg(i).Reg_Ent <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                
                If reg(i).Reg_Sal <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                        
                i = i + 1
            Loop
       End If
       
ContinuarAmbas:
       objrsDesgl.MoveNext
    Loop
    
    'Flog.writeline Espacios(Tabulador * 3) & "-------------------------------------"
End Sub

Private Sub Generar_Horario_Libre()
Dim redondeo As Integer
Dim TipoHora As Integer
Dim Cant_Reg As Integer
Dim CantR As Integer
Dim Cant_Pares As Integer
Dim i As Integer
Dim R As Integer
Dim par1 As String
Dim par2 As String
Dim HDesde As String
Dim HHasta As String
Dim fecpar1 As Date
Dim fecha_hc_desde As Date
Dim fecha_hc_hasta As Date
Dim fecpar2 As Date
Dim anor1 As Integer
Dim anor2 As Integer
Dim Reg_Ent As Long
Dim Reg_Sal As Long
Dim otroDia As Boolean
Dim j As Integer
Dim Weekdia As Byte
Dim objrsDesgl As New ADODB.Recordset
Dim TotHor As Single
Dim TotHor2 As Single
Dim TotHorHHMM As String

'FGZ - 30/08/2006
'Dim nro_desg As Integer
Dim nro_desg As Long

Dim hora_desde_desg As String
Dim hora_hasta_desg As String
Dim Hora_a_Red As String
Dim fecha_desde_desg As Date
Dim fecha_hasta_desg As Date
Dim HCDesde As String
Dim HCHasta As String
Dim cant_aux As Single
Dim CantH_Acum As Single
Dim cant_parcial As Single
Dim horas_max As Single
Dim horas_min As Single
Dim Registro As Long
Dim rs As New ADODB.Recordset
Dim tipofracc As Integer
Dim segunda As Boolean
Dim CubrioElMinimo As Boolean
Dim CantidadDeHorasACubrir As Single
Dim RestoDeHorasCubiertas As Single
Dim SefuedeRango As Boolean
Dim Recalcular As Boolean

'FGZ - 12/04/2006 - Arreglo de registraciones leidas y a marcar como procesadas
Dim reg(1 To 100) As TRegistracionesProcesadas
Dim NoHayMas As Boolean

diatipo = 0 'Dia laborable
Cant_Reg = 0
CantR = 1
    
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Version Estandar"
    End If
    
    If esFeriado And Dia_Libre Then
      Call Politica(380)
      ElseIf Dia_Libre Then diatipo = 1
      ElseIf esFeriado Then diatipo = 2
    End If
    ' Marco los pares
    StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 ORDER BY Fecha,hora"
    
    'OpenRecordset StrSql, objrs
    rs.Open StrSql, objConn
    i = 1
    Do While Not rs.EOF
'        objrs.Update objrs.Fields("par"), i
'        objrs.UpdateBatch
        
        Registro = rs!Regnro
        StrSql = "update " & TTempWFTurno & " set par = " & i & " where regnro = " & Registro
        objConn.Execute StrSql, , adExecuteNoRecords
        If CantR Mod 2 = 0 Then i = i + 1
        CantR = CantR + 1
        Cant_Reg = Cant_Reg + 1
        rs.MoveNext
    
    Loop
    'cantr = rs.RecordCount
        
    Cant_Pares = Int(Cant_Reg / 2)
    If Cant_Reg = 1 Then
        ' Se crea un reg. de wf-dia para usar en la política - Con turnos libres wf-dia está vacía */
        'FGZ - 20/04/2007 - saqué esta linea
        'InsertarWFDia Nro_Dia, "", p_fecha
        'FGZ - 20/04/2007 - saqué esta linea
        Call Politica(40)
        objConn.Execute "DELETE FROM " & TTempWFDiaLaboral, , adExecuteNoRecords
        Exit Sub
    End If
    'If cantr Mod 2 <> 0 Then Call Politica(70)
    
    Call buscar_horas_turno(Horas_Oblig, horas_max, horas_min)
    
    'Cambiado
    For i = 1 To Cant_Pares
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par =" & i
        OpenRecordset StrSql, objRs
        If objRs.EOF Then GoTo ProximoPar
        par1 = objRs!Hora
        fecpar1 = objRs!Fecha
        fecha_hc_desde = fecpar1
        Reg_Ent = objRs!Regnro
        
        'FGZ - 12/04/2006 - ojo !!! - si el desgloce es por cantidad de horas hay que guardar los pares anteriores porque acumula antes de guardar
        ' y se pisan los nro de las registraciones a marcar como procesadas
        reg(i).Reg_Ent = objRs!Regnro
        
        'Cambiado
        anor1 = 0 & objRs!anornro
        
        StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & objRs!Regnro & " AND regestado <> 'P'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        objRs.MoveNext
        If objRs.EOF Then GoTo ProximoPar
        
        par2 = objRs!Hora
        fecpar2 = objRs!Fecha
        fecha_hc_hasta = fecpar2
        Reg_Sal = objRs!Regnro
        
        'FGZ - 12/04/2006 - ojo !!! - si el desgloce es por cantidad de horas hay que guardar los pares anteriores porque acumula antes de guardar
        ' y se pisan los nro de las registraciones a marcar como procesadas
        reg(i).Reg_Sal = objRs!Regnro
        
        anor2 = 0 & objRs!anornro
        
        StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & objRs!Regnro & " AND regestado <> 'P'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        If fecpar1 = fecpar2 Then
            HDesde = par1
            HHasta = par2
            otroDia = False
        Else
            HDesde = par1    ' Como las fechas son distintas el desgloce es distinto por cada día */
            HHasta = "2400" ' Genero dos HC uno de par1 hasta 24:00 y el otro de 00:00 a par2 */
            otroDia = True
        End If
        
        For j = 1 To 2 'En el peor de los casos lo hara 2 veces, una por cada día
            'weekdia = Weekday(fecpar1)
            'FGZ - 11/01/2006
            Weekdia = Weekday(p_fecha)
            
            StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
                     "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
            OpenRecordset StrSql, objrsDesgl
            If objrsDesgl.EOF Then
                If depurar Then
                    GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
                End If
                Exit Sub
            End If
            
            StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 2 " & _
                     " ORDER BY desgdnro,desghoradesde"
            OpenRecordset StrSql, objrsDesgl
            Do While Not objrsDesgl.EOF
            
                TotHor = 0
                hora_desde = HDesde
                hora_hasta = HHasta
                nro_desg = objrsDesgl!desghnro
    
    '            ***** Cambio segun lo definido en el desglose de horas ******
    
                 Cambiar_Horas nro_desg, hora_desde_desg, hora_hasta_desg, fecha_desde_desg, fecha_hasta_desg
                 fraccionar_horas fecpar1, hora_desde, hora_hasta, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, hora_desde, hora_hasta
    
                 If (hora_desde_desg < hora_desde) And (hora_desde < hora_hasta_desg And hora_hasta_desg <= hora_hasta) Then
                    '/* Genero HC de hora-desde a desghorahasta */
                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta_desg, Tdias, Thoras, Tmin
                    HCDesde = hora_desde
                    HCHasta = hora_hasta_desg
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                 End If
                 
                 If (hora_desde_desg >= hora_desde And hora_desde_desg < hora_hasta) And (hora_hasta_desg > hora_hasta) Then
                    
                    '/* Genero HC de desghoradesde a hora-hasta */
                    
                    objFechasHoras.RestaHs fecpar1, hora_desde_desg, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                    HCDesde = hora_desde_desg
                    HCHasta = hora_hasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                 End If
                 
                 If (hora_desde_desg >= hora_desde And hora_desde_desg < hora_hasta) And _
                 (hora_hasta_desg <= hora_hasta And hora_hasta_desg > hora_desde) Then
                 
                '/* Genero HC de desghoradesde a desghorahasta */

                    objFechasHoras.RestaHs fecpar1, hora_desde_desg, fecpar1, hora_hasta_desg, Tdias, Thoras, Tmin
                    HCDesde = hora_desde_desg
                    HCHasta = hora_hasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                 
                 End If
                 
                If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
                     
                     '/* Genero HC de hora-desde a hora-hasta */
                    
                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                    HCDesde = hora_desde
                    HCHasta = hora_hasta

                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                 End If
                 
                 If (TotHor = 0) Then GoTo Continuar
                 
                 
'   Si la hora del desglose es no-plus, y la cantidad de horas, sumadas a la cantidad
'   de horas acumuladas, es mayor que la cantidad de horas obligatorias, debe separar
'   la cantidad de horas, en dos registros, uno para la cantidad obligatorias y otra
'   para las horas plus, que no se suman a las horas obligatorias

'   Canth-acum : Indica la cantidad de horas acumuladas, hasta el momento.
                 
                 '/* Si es plus, se calcula la duraci¢n de la hora */
                 If (objrsDesgl!desghplus = 1) Then
                    '/* Hora Plus */
                    TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
                    If (objrsDesgl!desghminplus <> 0) Or (objrsDesgl!desghmaxplus <> 0) Then
                        If (TotHor < objrsDesgl!desghminplus) Then TotHor = objrsDesgl!desghminplus
                        If (objrsDesgl!desghmaxplus < TotHor) Then TotHor = objrsDesgl!desghmaxplus
                    End If
                 End If
                 
                '/* Redondeo del total de horas */
                'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
                'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
                'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
                TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
                Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
                TotHorHHMM = "'" & TotHorHHMM & "'"
                
                Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
                Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
                
                
                If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
                
                Call Politica(540)
                
                If TotHor = 0 Then GoTo Continuar
                'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
                
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                'Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
                Fecha_Generacion = p_fecha
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                
                
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                         "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                         "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                         TotHorHHMM & "," & TotHor & "," & ConvFecha(fecpar1) & ",' '," & ConvFecha(fecpar1) & ",'" & HCDesde & "','" & _
                         HCHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                         ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                         Reg_Ent & ",'" & IIf(j = 1, par1, "0000") & "'," & Reg_Sal & ",'" & _
                         IIf((j = 2) Or (j = 1 And Not otroDia), par2, "2400") & "'," & Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
                End If
                    
                    
                ' Marcar las registraciones involucradas con el Horario generado
                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Ent
                objConn.Execute StrSql, , adExecuteNoRecords
                    
                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Sal
                objConn.Execute StrSql, , adExecuteNoRecords

Continuar:
                objrsDesgl.MoveNext
            Loop    '/* FOR EACH per.gti_desghora */
            
            
            If fecpar1 = fecpar2 Then
                Exit For
            Else
                hora_desde = "0000"
                HDesde = hora_desde
                hora_hasta = par2
                HHasta = hora_hasta
                fecpar1 = fecpar2
            End If
            
        Next j

ProximoPar:
    
    Next i
    
    
    '===================================================================================================================
    'Genero los registros del HC, cuando se trata de desglose como cantidad de horas
    If depurar Then
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 3) & "  Genero los registros del HC, cuando se trata de desglose como cantidad de horas"
    End If
    Weekdia = Weekday(p_fecha)
    StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
             "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
    OpenRecordset StrSql, objrsDesgl
    If objrsDesgl.EOF Then
        If depurar Then
            GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
        End If
        Exit Sub
    End If
    ' Cambiada
    StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 1 " & _
                     " ORDER BY desgdnro,desghoradesde"
    OpenRecordset StrSql, objrsDesgl
    
    Do While Not objrsDesgl.EOF
        cant_aux = sumarizar_horas(Cant_Pares, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta)
        'If ((cant_aux > 0) And (cant_aux < objrsDesgl!desghoffset)) Then TotHor = 0
        If (cant_aux < objrsDesgl!desgcantmin) Then TotHor = 0
        If ((cant_aux >= objrsDesgl!desgcantmin) And (cant_aux < objrsDesgl!desgcantmax)) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = cant_aux - objrsDesgl!desgcantmin
            Else
               TotHor = 0
            End If
        End If
        If (cant_aux >= objrsDesgl!desgcantmax) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = objrsDesgl!desgcantmax - objrsDesgl!desgcantmin
            Else
               TotHor = 0
            End If
        End If
        'FGZ - 29/07/2008 ----
        If ((TotHor > 0) And (TotHor < objrsDesgl!desghoffset)) Then TotHor = 0
        'FGZ - 29/07/2008 ----
        
        ' Chequea si las horas trabajadas estan entre en maximo plus y minimo plus o
        ' si el maximo y minimo son 0, paga el total de horas
        If (objrsDesgl!desghplus = 1) And (objrsDesgl!desghmaxplus = 0 And objrsDesgl!desghminplus = 0) Then
           If (TotHor < objrsDesgl!desghminplus) Then
                 GoTo Continuar
              Else
                 If (TotHor > objrsDesgl!desghmaxplus) Then TotHor = TotHor - objrsDesgl!desghmaxplus
            End If
        End If
        
        If TotHor > 0 Then
            ' Si es plus, se calcula la duración de la hora */
            If (objrsDesgl!desghplus = 1) Then
                TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
            End If
            ' Redondeo del total de horas
            'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
            'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
            'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
            TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
            Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
            TotHorHHMM = "'" & TotHorHHMM & "'"
            
            Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
            Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
            
            If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
            
            'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
            
            'FGZ - 22/03/2011--
            If TotHor > 0 Then
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                Fecha_Generacion = p_fecha
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                          "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                          "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                          TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
                          CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                          ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                          Reg_Ent & ",''," & Reg_Sal & ",''," & _
                          Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
                End If
                
                'FGZ - 12/04/2006 No estaba esto
                'Marcar las registraciones involucradas con el Horario generado
                i = 1
                NoHayMas = False
                Do While i <= UBound(reg) And Not NoHayMas
                    If reg(i).Reg_Ent <> 0 Then
                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        NoHayMas = True
                    End If
                    
                    If reg(i).Reg_Sal <> 0 Then
                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        NoHayMas = True
                    End If
                            
                    i = i + 1
                Loop
            End If
        End If
        
        objrsDesgl.MoveNext
    Loop
    '===================================================================================================================
    
    
    '===================================================================================================================
    'Genero los registros del HC, cuando se trata de desglose como Cantidad de Horas y Franja Horaria
    If depurar Then
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 3) & "  Genero los registros del HC, cuando se trata de desglose como Cantidad de Horas y Franja Horaria"
    End If
    Weekdia = Weekday(p_fecha)
    StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
             "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
    OpenRecordset StrSql, objrsDesgl
    If objrsDesgl.EOF Then
        If depurar Then
            GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
        End If
        Exit Sub
    End If
    StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 3 " & _
                     " ORDER BY desghoradesde,desghplus"
    OpenRecordset StrSql, objrsDesgl
    Do While Not objrsDesgl.EOF ' do 1
        cant_parcial = 0
        
' AIB - 3/1/2003. A partir de acá cambio
' Dejo todo como el fuente de Progress

' ----------------------------------------------------
' FGZ - 12/3/2003. A partir de acá modificó Winsy
        cant_parcial = sumarizar_horas(Cant_Pares, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta)
        If cant_parcial >= objrsDesgl!desghoffset Then
            If (cant_parcial >= objrsDesgl!desgcantmin And cant_parcial <= objrsDesgl!desgcantmax) Then
                
                ' saltar las registraciones hasta cubrir el minimo
                StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2"
                OpenRecordset StrSql, objRs
                
                CubrioElMinimo = False
                CantidadDeHorasACubrir = objrsDesgl!desgcantmin
                SefuedeRango = False
                
                Do While Not objRs.EOF And Not CubrioElMinimo And Not SefuedeRango
                
                    If (objRs!Hora >= objrsDesgl!desghoradesde And objRs!Fecha = p_fecha) And _
                    (objRs!Hora <= objrsDesgl!desghorahasta) Then
                        hora_desde_desg = objRs!Hora
                        fecha_desde_desg = objRs!Fecha
                    End If
                
                    If (objRs!Hora < objrsDesgl!desghoradesde) Or _
                     (objRs!Hora > objrsDesgl!desghoradesde And objRs!Fecha < p_fecha) Then
                        hora_desde_desg = objRs!Hora
                        fecha_desde_desg = objRs!Fecha
                    End If
                
                    ' Me muevo al proximo par
                    'FGZ - 20/10/2008 - le agregué este control
                    If Not objRs.EOF Then
                        objRs.MoveNext
                    Else
                        Exit Do
                    End If
                    'If objRs.EOF Then Exit Do
                    
                    If objRs!Hora <= objrsDesgl!desghorahasta And objRs!Fecha = p_fecha Then
                        hora_hasta_desg = objRs!Hora
                        fecha_hasta_desg = objRs!Fecha
                    End If
                    
                    If (objRs!Hora >= objrsDesgl!desghorahasta And objRs!Fecha = p_fecha) Then
                        hora_hasta_desg = objrsDesgl!desghorahasta
                        fecha_hasta_desg = objRs!Fecha
                        SefuedeRango = True
                    End If
                    
                    If (objRs!Hora < objrsDesgl!desghorahasta And p_fecha < objRs!Fecha) Then
                        If (objrsDesgl!desgcantmax > 24 And objrsDesgl!desghorahasta = "2400") Then
                            hora_hasta_desg = objRs!Hora
                            fecha_hasta_desg = objRs!Fecha
                        Else
                            hora_hasta_desg = objrsDesgl!desghorahasta
                            fecha_hasta_desg = p_fecha
                            SefuedeRango = True
                        End If
                    End If
                    
                    
                    If hora_desde_desg <> "" And hora_hasta_desg <> "" Then
                        'FGZ - 31/10/2006
                        'Faltaba el fraccionamiento
                        fraccionar_horas fecpar1, hora_desde_desg, hora_hasta_desg, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, hora_desde_desg, hora_hasta_desg
                        
                        objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        If TotHor > CantidadDeHorasACubrir Then
                            RestoDeHorasCubiertas = TotHor - CantidadDeHorasACubrir
                            CantidadDeHorasACubrir = 0
                        Else
                            CantidadDeHorasACubrir = CantidadDeHorasACubrir - TotHor
                            RestoDeHorasCubiertas = 0
                        End If
                        
                        ' reviso si las horas restantes me sirven, es decir estan en el rango
                        '  en el que se pagan o hay que recalcularlas
                        
                        If CantidadDeHorasACubrir <= 0 Then
                            CubrioElMinimo = True
                            Recalcular = False
                            If RestoDeHorasCubiertas > 0 Then
                                If objrsDesgl!desghoradesde > hora_desde_desg Then
                                    hora_desde_desg = objrsDesgl!desghoradesde
                                    Recalcular = True
                                End If
                                            
                                If objrsDesgl!desghorahasta < hora_hasta_desg Then
                                    hora_hasta_desg = objrsDesgl!desghorahasta
                                    Recalcular = True
                                End If
                                
                                If Recalcular Then
                                    If hora_desde_desg > hora_hasta_desg Then
                                        TotHor = 0
                                        RestoDeHorasCubiertas = TotHor
                                    Else
                                        objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                                        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                                        RestoDeHorasCubiertas = TotHor
                                    End If
                                End If
                            End If
                            
                        End If
                
                    Else
                        SefuedeRango = True
                    End If
                
                    If Not CubrioElMinimo Then
                        objRs.MoveNext
                    End If
                Loop
                
                
                If Not CubrioElMinimo Then
                   ' no pago nada
                Else
                    If RestoDeHorasCubiertas > 0 Then
                        'FGZ - 31/10/2006 - le saq  ue la asignacion dado que debe pagar el total de horas hechas
                        'TotHor = RestoDeHorasCubiertas
                        
                        '/* Redondeo del total de horas */
                        'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
                        'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
                        'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
                        TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
                        Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
                        TotHorHHMM = "'" & TotHorHHMM & "'"
                        
                        Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
                        Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)

                        If TotHor > 0 Then
                          'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
                          
                        'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                        'Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
                        Fecha_Generacion = p_fecha
                        'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                          
                          StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                              "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                              "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                              TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
                              CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                              ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                              Reg_Ent & ",''," & Reg_Sal & ",''," & _
                              Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                          objConn.Execute StrSql, , adExecuteNoRecords
                          If depurar Then
                                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
                          End If
                          
                          'FGZ - 12/04/2006 No estaba esto
                          'Marcar las registraciones involucradas con el Horario generado
                          i = 1
                          NoHayMas = False
                          Do While i <= UBound(reg) And Not NoHayMas
                            If reg(i).Reg_Ent <> 0 Then
                                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                                objConn.Execute StrSql, , adExecuteNoRecords
                            Else
                                NoHayMas = True
                            End If
                            
                            If reg(i).Reg_Sal <> 0 Then
                                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                                objConn.Execute StrSql, , adExecuteNoRecords
                            Else
                                NoHayMas = True
                            End If
                                    
                            i = i + 1
                          Loop
                        End If
                    'FGZ - 31/10/2006
                    'agregué todo el else porque si la cantidad de horas hechas es = al minimo no las generaba
                    Else
                        If TotHor > 0 And RestoDeHorasCubiertas = 0 Then
                            'Redondeo del total de horas
                            'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
                            'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
                            'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
                            TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
                            Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
                            TotHorHHMM = "'" & TotHorHHMM & "'"
                            
                            Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
                            Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
                            
                            If TotHor > 0 Then
                              'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
                            'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                            'Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
                            Fecha_Generacion = p_fecha
                            'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                              
                              
                              
                              StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                                  "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                                  "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                                  TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
                                  CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                                  ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                                  Reg_Ent & ",''," & Reg_Sal & ",''," & _
                                  Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                              objConn.Execute StrSql, , adExecuteNoRecords
                              If depurar Then
                                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
                              End If
                              'Marcar las registraciones involucradas con el Horario generado
                              i = 1
                              NoHayMas = False
                              Do While i <= UBound(reg) And Not NoHayMas
                                If reg(i).Reg_Ent <> 0 Then
                                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                Else
                                    NoHayMas = True
                                End If
                                
                                If reg(i).Reg_Sal <> 0 Then
                                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                Else
                                    NoHayMas = True
                                End If
                                        
                                i = i + 1
                              Loop
                            End If
                        End If
                    End If
                    
                    If SefuedeRango Then
                        GoTo SiguienteFH
                    Else
                    
                        ' continuo analizando las registraciones dentro del rango
                        SefuedeRango = False
                        'FGZ - 20/10/2008 - Sin este control podia dar error
                        If Not objRs.EOF Then
                            objRs.MoveNext
                        End If
                        Do While Not objRs.EOF And Not SefuedeRango
                            hora_desde_desg = ""
                            hora_hasta_desg = ""
                            If (objRs!Hora >= objrsDesgl!desghoradesde And objRs!Fecha = p_fecha) And _
                            (objRs!Hora <= objrsDesgl!desghorahasta) Then
                                hora_desde_desg = objRs!Hora
                                fecha_desde_desg = objRs!Fecha
                            End If
                        
                            If (objRs!Hora < objrsDesgl!desghoradesde) Or _
                             (objRs!Hora > objrsDesgl!desghoradesde And objRs!Fecha < p_fecha) Then
                                hora_desde_desg = objrsDesgl!desghoradesde
                                fecha_desde_desg = objRs!Fecha
                            End If
                        
                            
                            ' Me muevo al proximo par
                            'FGZ - 20/10/2008 - Sin este control podia dar error
                            If Not objRs.EOF Then
                                objRs.MoveNext
                            Else
                                Exit Do
                            End If
                            'If objRs.EOF Then Exit Do
                            
                            If (objRs!Hora >= objrsDesgl!desghoradesde And objRs!Fecha = p_fecha) And _
                            (objRs!Hora <= objrsDesgl!desghorahasta) Then
                                hora_hasta_desg = objRs!Hora
                                fecha_hasta_desg = objRs!Fecha
                            End If
                            
                            If (objRs!Hora > objrsDesgl!desghorahasta And p_fecha = objRs!Fecha) Then
                                hora_hasta_desg = objrsDesgl!desghorahasta
                                fecha_hasta_desg = p_fecha
                                SefuedeRango = True
                            End If
                            
                            If (objRs!Hora < objrsDesgl!desghorahasta And p_fecha < objRs!Fecha) Then
                                If (objrsDesgl!desgcantmax > 24 And objrsDesgl!desghorahasta = "2400") Then
                                    hora_hasta_desg = objRs!Hora
                                    fecha_hasta_desg = objRs!Fecha
                                Else
                                    hora_hasta_desg = objrsDesgl!desghorahasta
                                    fecha_hasta_desg = p_fecha
                                    SefuedeRango = True
                                End If
                            End If
                        
                            If hora_desde_desg <> "" And hora_hasta_desg <> "" Then
                                objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                            Else
                                SefuedeRango = True
                                TotHor = 0
                            End If
                        

                            '/* Redondeo del total de horas */
                            'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
                            'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
                            'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
                            TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
                            Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
                            TotHorHHMM = "'" & TotHorHHMM & "'"
                            
                            Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
                            Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
                            
                            
                            If TotHor > 0 Then
                                'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
                                
                                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                                'Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
                                Fecha_Generacion = p_fecha
                                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                                
                                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                                    "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                                    "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                                    TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
                                    CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                                    ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                                    Reg_Ent & ",''," & Reg_Sal & ",''," & _
                                    Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                                objConn.Execute StrSql, , adExecuteNoRecords
                                If depurar Then
                                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
                                End If
                                
                                'FGZ - 12/04/2006 No estaba esto
                                'Marcar las registraciones involucradas con el Horario generado
                                i = 1
                                NoHayMas = False
                                Do While i <= UBound(reg) And Not NoHayMas
                                    If reg(i).Reg_Ent <> 0 Then
                                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                                        objConn.Execute StrSql, , adExecuteNoRecords
                                    Else
                                        NoHayMas = True
                                    End If
                                    
                                    If reg(i).Reg_Sal <> 0 Then
                                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                                        objConn.Execute StrSql, , adExecuteNoRecords
                                    Else
                                        NoHayMas = True
                                    End If
                                            
                                    i = i + 1
                                Loop
                                
                            End If
                            
                            'FGZ - 20/10/2008 - faltaba este control
                            If Not objRs.EOF Then
                                objRs.MoveNext
                            End If
                        Loop
                    End If
                End If
            End If
      End If
            
SiguienteFH:
       objrsDesgl.MoveNext
    Loop  ' loop 1

' FGZ - 12/3/2003. Hasta acá modificó Winsy
' ----------------------------------------------------
If depurar Then
    Flog.writeline
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 3) & "Cuando la sumatoria de las horas trabajadas entre las registraciones del empleado es menor a la cantidad de horas"
    Flog.writeline Espacios(Tabulador * 3) & "mínimas, configuradas en el turno, en el HC, debemos generar una anormalidad (faltar horas obligatorias)"
    Flog.writeline Espacios(Tabulador * 3) & "y una entrada en el HC mostrando esto"
    Flog.writeline
End If
'   Cuando la sumatoria de las horas trabajadas entre las registraciones del empleado es menor a la cantidad de horas
'   mínimas, configuradas en el turno, en el HC, debemos generar una anormalidad (faltar horas obligatorias)
'   y una entrada en el HC mostrando esto

'FGZ - 30/07/2007 - Le agregué este control
If Tipo_Turno = 3 Then  'Libre
    If UsaFeriadoConControl And esFeriado Then
       'No debe generar las ausencias
       Exit Sub
    End If
End If
'FGZ - 30/07/2007 - Le agregué este control

   cant_aux = 0
    
    ' AIB - Cambiada el 13/03
   StrSql = "SELECT * FROM gti_config_tur_hor WHERE turnro =" & Nro_Turno & " AND conhornro = 2 "
   'StrSql = "SELECT * FROM gti_config_tur_hor WHERE turnro =" & nro_turno & " AND conhornro = 10 "
   
   
   OpenRecordset StrSql, objRs
    
   If Not objRs.EOF Then
        'cambiado
        'redondeo = objRs!conhredondeo
        redondeo = IIf(Not EsNulo(objRs!conhredondeo), objRs!conhredondeo, 0)
        TipoHora = objRs!thnro
        tipofracc = 0 & objRs!conhfractipo
        cant_aux = sumarizar_horas(Cant_Pares, tipofracc, tipofracc)
        
        
        'FGZ - 26/02/2009 ---- Cambié esto ---------------
'        'Cambiado
'        'if (PER.gti_turno.tipoturno = 3) and (horas-oblig > cant-aux)
'        StrSql = "SELECT * FROM gti_turno WHERE turnro =" & Nro_Turno
'        OpenRecordset StrSql, rs
'
'        'If (rs!TipoTurno = 3) And (horas_oblig > cant_aux) Then
'        'FGZ - 19/04/2006
'        'se estan olvidando de sumar las horas por justificaciones
'        If (rs!TipoTurno = 3) And (horas_oblig > (cant_aux + Total_Hs_Justificadas)) Then
        If (Tipo_Turno = 3) And (Horas_Oblig > (cant_aux + Total_Hs_Justificadas)) Then
        'FGZ - 26/02/2009 ---- Cambié esto ---------------
            'TotHor = horas_oblig - cant_aux
            'FGZ - 19/04/2006
            TotHor = Horas_Oblig - (cant_aux + Total_Hs_Justificadas)
            
            
            'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
            'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, redondeo, TotHor
            'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
            TotHorHHMM = CHorasSF(TotHor, 60)
            Call Redondeo_enHorasMinutos(TotHorHHMM, redondeo, 60, TotHorHHMM)
            TotHorHHMM = "'" & TotHorHHMM & "'"
            
            objFechasHoras.Convertir_A_Hora_cDuracion TotHor, 60, Hora_a_Red
            objFechasHoras.Redondeo_Horas_Tipo2 Hora_a_Red, redondeo, 60, TotHor
            
            'Call ValidarTipoDeHora(tipohora, nro_turno, tipo_hora)
            
'            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
'            "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
'            "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
'            TotHor & "," & ConvFecha(p_fecha) & ",' '," & ValorNulo & ",'',''," & _
'            CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & ",5," & _
'            ValorNulo & "," & Empleado.Ternro & "," & TipoHora & "," & Nro_Turno & "," & _
'            ValorNulo & ",''," & ValorNulo & ",''," & _
'            Empleado.Legajo & "," & ConvFecha(p_fecha) & ")"
            
'            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
'            "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
'            "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
'            TotHor & "," & ConvFecha(p_fecha) & ",' '," & ValorNulo & ",'',''," & _
'            CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & ",3,3," & _
'            Empleado.Ternro & "," & TipoHora & "," & Nro_Turno & "," & _
'            ValorNulo & ",''," & ValorNulo & ",''," & _
'            Empleado.Legajo & "," & ConvFecha(p_fecha) & ")"
'            objConn.Execute StrSql, , adExecuteNoRecords
            
            'FGZ - 27/10/2008 - se le agregó la fecha Hasta, que se estaba cargando como NULL
            '   cuando se generaban las Ausencias Parciales y esto generaba error en la politica 480
            
            'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
            Fecha_Generacion = p_fecha
            'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
            
            'FGZ - 22/03/2011--
            If TotHor > 0 Then
            
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
                CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & ",7,7," & _
                Empleado.Ternro & "," & TipoHora & "," & Nro_Turno & "," & _
                ValorNulo & ",''," & ValorNulo & ",''," & _
                Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TipoHora & "- Cantidad: " & TotHor & " hs."
                End If
                
                'FGZ - 12/04/2006 No estaba esto
                'Marcar las registraciones involucradas con el Horario generado
                i = 1
                NoHayMas = False
                Do While i <= UBound(reg) And Not NoHayMas
                    If reg(i).Reg_Ent <> 0 Then
                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        NoHayMas = True
                    End If
                    
                    If reg(i).Reg_Sal <> 0 Then
                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        NoHayMas = True
                    End If
                            
                    i = i + 1
                Loop
            End If
        End If
   End If
End Sub





Private Sub Generar_Horario_Libre_STD()
' ---------------------------------------------------------------------------------------------
' Descripcion: Procedimiento que genera el Horario Libre del dia.
' Autor      : FGZ
' Fecha      : 08/04/2009
' Ultima Mod.: FGZ - 27/08/2009
' Descripcion:  Cambios cuando paga por cantidad de hs. No estaba deduciendo que registraciones estaban involucradas en las hs pagadas
' ---------------------------------------------------------------------------------------------
Dim redondeo As Integer
Dim TipoHora As Integer
Dim Cant_Reg As Integer
Dim CantR As Integer
Dim Cant_Pares As Integer
Dim i As Integer
Dim R As Integer
Dim par1 As String
Dim par2 As String
Dim HDesde As String
Dim HHasta As String
Dim fecpar1 As Date
Dim fecha_hc_desde As Date
Dim fecha_hc_hasta As Date
Dim fecpar2 As Date
Dim anor1 As Integer
Dim anor2 As Integer
Dim Reg_Ent As Long
Dim Reg_Sal As Long
Dim otroDia As Boolean
Dim j As Integer
Dim Weekdia As Byte
Dim objrsDesgl As New ADODB.Recordset
Dim TotHor As Single
Dim TotHor2 As Single
Dim TotHorHHMM As String

'FGZ - 30/08/2006
'Dim nro_desg As Integer
Dim nro_desg As Long

Dim hora_desde_desg As String
Dim hora_hasta_desg As String
Dim Hora_a_Red As String
Dim fecha_desde_desg As Date
Dim fecha_hasta_desg As Date
Dim HCDesde As String
Dim HCHasta As String
Dim cant_aux As Single
Dim CantH_Acum As Single
Dim cant_parcial As Single
Dim horas_max As Single
Dim horas_min As Single
Dim Registro As Long
Dim rs As New ADODB.Recordset
Dim tipofracc As Integer
Dim segunda As Boolean
Dim CubrioElMinimo As Boolean
Dim CantidadDeHorasACubrir As Single
Dim RestoDeHorasCubiertas As Single
Dim SefuedeRango As Boolean
Dim Recalcular As Boolean

'FGZ - 12/04/2006 - Arreglo de registraciones leidas y a marcar como procesadas
Dim reg(1 To 100) As TRegistracionesProcesadas
Dim NoHayMas As Boolean

Dim HCFDesde As Date
Dim HCFHasta As Date
Dim Cambio_dia As Boolean

diatipo = 0 'Dia laborable
Cant_Reg = 0
CantR = 1
    
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Version Estandar"
    End If
    
    If esFeriado And Dia_Libre Then
      Call Politica(380)
    ElseIf Dia_Libre Then diatipo = 1
      ElseIf esFeriado Then diatipo = 2
    End If
    ' Marco los pares
    StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 ORDER BY Fecha,hora"
    
    'OpenRecordset StrSql, objrs
    rs.Open StrSql, objConn
    i = 1
    Do While Not rs.EOF
'        objrs.Update objrs.Fields("par"), i
'        objrs.UpdateBatch
        
        Registro = rs!Regnro
        StrSql = "update " & TTempWFTurno & " set par = " & i & " where regnro = " & Registro
        objConn.Execute StrSql, , adExecuteNoRecords
        If CantR Mod 2 = 0 Then i = i + 1
        CantR = CantR + 1
        Cant_Reg = Cant_Reg + 1
        rs.MoveNext
    
    Loop
    'cantr = rs.RecordCount
        
    Cant_Pares = Int(Cant_Reg / 2)
    If Cant_Reg = 1 Then
        ' Se crea un reg. de wf-dia para usar en la política - Con turnos libres wf-dia está vacía */
        'FGZ - 20/04/2007 - saqué esta linea
        'InsertarWFDia Nro_Dia, "", p_fecha
        'FGZ - 20/04/2007 - saqué esta linea
        Call Politica(40)
        objConn.Execute "DELETE FROM " & TTempWFDiaLaboral, , adExecuteNoRecords
        Exit Sub
    End If
    'If cantr Mod 2 <> 0 Then Call Politica(70)
    
    Call buscar_horas_turno(Horas_Oblig, horas_max, horas_min)
    
    'Cambiado
    For i = 1 To Cant_Pares
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par =" & i
        OpenRecordset StrSql, objRs
        If objRs.EOF Then GoTo ProximoPar
        par1 = objRs!Hora
        fecpar1 = objRs!Fecha
        fecha_hc_desde = fecpar1
        Reg_Ent = objRs!Regnro
        
        'FGZ - 12/04/2006 - ojo !!! - si el desgloce es por cantidad de horas hay que guardar los pares anteriores porque acumula antes de guardar
        ' y se pisan los nro de las registraciones a marcar como procesadas
        reg(i).Reg_Ent = objRs!Regnro
        
        'Cambiado
        anor1 = 0 & objRs!anornro
        
        StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & objRs!Regnro & " AND regestado <> 'P'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        objRs.MoveNext
        If objRs.EOF Then GoTo ProximoPar
        
        par2 = objRs!Hora
        fecpar2 = objRs!Fecha
        fecha_hc_hasta = fecpar2
        Reg_Sal = objRs!Regnro
        
        'FGZ - 12/04/2006 - ojo !!! - si el desgloce es por cantidad de horas hay que guardar los pares anteriores porque acumula antes de guardar
        ' y se pisan los nro de las registraciones a marcar como procesadas
        reg(i).Reg_Sal = objRs!Regnro
        
        anor2 = 0 & objRs!anornro
        
        StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & objRs!Regnro & " AND regestado <> 'P'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        If fecpar1 = fecpar2 Then
            HDesde = par1
            HHasta = par2
            otroDia = False
        Else
            HDesde = par1    ' Como las fechas son distintas el desgloce es distinto por cada día */
            HHasta = "2400" ' Genero dos HC uno de par1 hasta 24:00 y el otro de 00:00 a par2 */
            otroDia = True
        End If
        
        Cambio_dia = False
        For j = 1 To 2 'En el peor de los casos lo hara 2 veces, una por cada día
            'weekdia = Weekday(fecpar1)
            'FGZ - 11/01/2006
            Weekdia = Weekday(p_fecha)
            
            If Not Cambio_dia Or (Cambio_dia And Subturno_Genera <> 1) Then
                Weekdia = Weekday(fecpar1)
            End If
            
            
            StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
                     "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
            OpenRecordset StrSql, objrsDesgl
            If objrsDesgl.EOF Then
                If depurar Then
                    GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
                End If
                Exit Sub
            End If
            
            StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 2 " & _
                     " ORDER BY desgdnro,desghoradesde"
            OpenRecordset StrSql, objrsDesgl
            Do While Not objrsDesgl.EOF
            
                TotHor = 0
                hora_desde = HDesde
                hora_hasta = HHasta
                nro_desg = objrsDesgl!desghnro
    
                'FGZ - 08/04/2009 ---------------------------------------------------------------------
                '***** Cambio segun lo definido en el desglose de horas ******
    
'                 Cambiar_Horas nro_desg, hora_desde_desg, hora_hasta_desg, fecha_desde_desg, fecha_hasta_desg
'                 fraccionar_horas fecpar1, hora_desde, hora_hasta, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, hora_desde, hora_hasta
'
'                 If (hora_desde_desg < hora_desde) And (hora_desde < hora_hasta_desg And hora_hasta_desg <= hora_hasta) Then
'                    '/* Genero HC de hora-desde a desghorahasta */
'                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta_desg, Tdias, Thoras, Tmin
'                    HCdesde = hora_desde
'                    HChasta = hora_hasta_desg
'                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
'                 End If
'
'                 If (hora_desde_desg >= hora_desde And hora_desde_desg < hora_hasta) And (hora_hasta_desg > hora_hasta) Then
'                    '/* Genero HC de desghoradesde a hora-hasta */
'                    objFechasHoras.RestaHs fecpar1, hora_desde_desg, fecpar1, hora_hasta, Tdias, Thoras, Tmin
'                    HCdesde = hora_desde_desg
'                    HChasta = hora_hasta
'                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
'                 End If
'
'                 If (hora_desde_desg >= hora_desde And hora_desde_desg < hora_hasta) And _
'                 (hora_hasta_desg <= hora_hasta And hora_hasta_desg > hora_desde) Then
'                '/* Genero HC de desghoradesde a desghorahasta */
'                    objFechasHoras.RestaHs fecpar1, hora_desde_desg, fecpar1, hora_hasta_desg, Tdias, Thoras, Tmin
'                    HCdesde = hora_desde_desg
'                    HChasta = hora_hasta
'                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
'                 End If
'
'                If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
'                     '/* Genero HC de hora-desde a hora-hasta */
'                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, Tdias, Thoras, Tmin
'                    HCdesde = hora_desde
'                    HChasta = hora_hasta
'                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
'                 End If
                 
                 
                '---- Lo nuevo ----------
                Call Cambiar_Horas_Desde(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_dia)
                Call Cambiar_Horas_hasta(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_dia)
                
                'FGZ - 10/01/2006
                'OJO !! cuando la FP es relativa y va de posterior a la salida y anterior a la entrada
                ' tiene problemas con los turnos nocturnos ya que la salida pasa de dia ==>
                'hay que hacer el control desde afuera y pasar de dia al calculo de la fecha hasta
                If objFechasHoras.Menor_Hora(fecha_hasta_desg, hora_hasta_desg, fecha_desde_desg, hora_desde_desg) Then
                    fecha_hasta_desg = DateAdd("d", 1, fecha_hasta_desg)
                End If
                
                Call fraccionar_horas(fecpar1, hora_desde, hora_hasta, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, hora_desde, hora_hasta)
    
                'Desgloce   [---------------]
                'Horario          (----------------)
                If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                    objFechasHoras.RestaHs fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                    HCDesde = hora_desde
                    HCHasta = hora_hasta_desg
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
                'Desgloce       [---------------]
                'Horario    (----------------)
                If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                    objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                    HCDesde = hora_desde_desg
                    HCHasta = hora_hasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
                
                'Desgloce       [---------------]
                'Horario    (-----------------------)
                If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_desde) Then
                    objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                    HCDesde = hora_desde_desg
                    HCHasta = hora_hasta_desg
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
                'Desgloce   [---------------]
                'Horario        (--------)
                If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                'If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                    HCDesde = hora_desde
                    HCHasta = hora_hasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
                 
                 
                 
                'FGZ - 08/04/2009 ---------------------------------------------------------------------
                 
                 
                 
                 
                 
                 
                 If (TotHor = 0) Then GoTo Continuar
                 
                 
'   Si la hora del desglose es no-plus, y la cantidad de horas, sumadas a la cantidad
'   de horas acumuladas, es mayor que la cantidad de horas obligatorias, debe separar
'   la cantidad de horas, en dos registros, uno para la cantidad obligatorias y otra
'   para las horas plus, que no se suman a las horas obligatorias

'   Canth-acum : Indica la cantidad de horas acumuladas, hasta el momento.
                 
                 '/* Si es plus, se calcula la duraci¢n de la hora */
                 If (objrsDesgl!desghplus = 1) Then
                    '/* Hora Plus */
                    TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
                    If (objrsDesgl!desghminplus <> 0) Or (objrsDesgl!desghmaxplus <> 0) Then
                        If (TotHor < objrsDesgl!desghminplus) Then TotHor = objrsDesgl!desghminplus
                        If (objrsDesgl!desghmaxplus < TotHor) Then TotHor = objrsDesgl!desghmaxplus
                    End If
                 End If
                 
                '/* Redondeo del total de horas */
                'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
                'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
                'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
                TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
                Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
                TotHorHHMM = "'" & TotHorHHMM & "'"
                
                
                Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
                Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
                
                
                If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
                
                Call Politica(540)
                
                If TotHor = 0 Then GoTo Continuar
                'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
                
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                
                
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                         "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                         "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                         TotHorHHMM & "," & TotHor & "," & ConvFecha(fecpar1) & ",' '," & ConvFecha(fecpar1) & ",'" & HCDesde & "','" & _
                         HCHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                         ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                         Reg_Ent & ",'" & IIf(j = 1, par1, "0000") & "'," & Reg_Sal & ",'" & _
                         IIf((j = 2) Or (j = 1 And Not otroDia), par2, "2400") & "'," & Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
                End If
                    
                    
                ' Marcar las registraciones involucradas con el Horario generado
                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Ent
                objConn.Execute StrSql, , adExecuteNoRecords
                    
                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Sal
                objConn.Execute StrSql, , adExecuteNoRecords

Continuar:
                objrsDesgl.MoveNext
            Loop    '/* FOR EACH per.gti_desghora */
            
            
            If fecpar1 = fecpar2 Then
                Exit For
            Else
                hora_desde = "0000"
                HDesde = hora_desde
                hora_hasta = par2
                HHasta = hora_hasta
                fecpar1 = fecpar2
                Cambio_dia = True
            End If
            
        Next j

ProximoPar:
    Next i


    '===============================================================================================================
    'Genero los registros del HC, cuando se trata de desglose como cantidad de horas
    If depurar Then
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 3) & "  Genero los registros del HC, cuando se trata de desglose como cantidad de horas"
    End If
    Weekdia = Weekday(p_fecha)
    StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
             "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
    OpenRecordset StrSql, objrsDesgl
    If objrsDesgl.EOF Then
        If depurar Then
            GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
        End If
        Exit Sub
    End If
    ' Cambiada
    StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 1 " & _
                     " ORDER BY desgdnro,desghoradesde"
    OpenRecordset StrSql, objrsDesgl
    Do While Not objrsDesgl.EOF
        cant_aux = sumarizar_horas(Cant_Pares, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta)
        'If ((cant_aux > 0) And (cant_aux < objrsDesgl!desghoffset)) Then TotHor = 0
        If (cant_aux < objrsDesgl!desgcantmin) Then TotHor = 0
        If ((cant_aux >= objrsDesgl!desgcantmin) And (cant_aux < objrsDesgl!desgcantmax)) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = cant_aux - objrsDesgl!desgcantmin
            Else
               TotHor = 0
            End If
        End If
        If (cant_aux >= objrsDesgl!desgcantmax) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = objrsDesgl!desgcantmax - objrsDesgl!desgcantmin
            Else
               TotHor = 0
            End If
        End If
        'FGZ - 29/07/2008 ----
        If ((TotHor > 0) And (TotHor < objrsDesgl!desghoffset)) Then TotHor = 0
        'FGZ - 29/07/2008 ----
        
        ' Chequea si las horas trabajadas estan entre en maximo plus y minimo plus o
        ' si el maximo y minimo son 0, paga el total de horas
        If (objrsDesgl!desghplus = 1) And (objrsDesgl!desghmaxplus = 0 And objrsDesgl!desghminplus = 0) Then
           If (TotHor < objrsDesgl!desghminplus) Then
                 GoTo Continuar
              Else
                 If (TotHor > objrsDesgl!desghmaxplus) Then TotHor = TotHor - objrsDesgl!desghmaxplus
            End If
        End If
        
        If TotHor > 0 Then
            ' Si es plus, se calcula la duración de la hora */
            If (objrsDesgl!desghplus = 1) Then
                TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
            End If
            ' Redondeo del total de horas
            'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
            'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
            'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
            TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
            Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
            TotHorHHMM = "'" & TotHorHHMM & "'"
            
            Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
            Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
            
            If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
            
            'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
            
            
            'FGZ - 22/03/2011--
            If TotHor > 0 Then
            
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                Fecha_Generacion = p_fecha
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                          "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                          "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                          TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'" & HCDesde & "','" & HCHasta & "'," & _
                          CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                          ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                          Reg_Ent & ",''," & Reg_Sal & ",''," & _
                          Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
                End If
                
                'FGZ - 12/04/2006 No estaba esto
                'Marcar las registraciones involucradas con el Horario generado
                i = 1
                NoHayMas = False
                Do While i <= UBound(reg) And Not NoHayMas
                    If reg(i).Reg_Ent <> 0 Then
                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        NoHayMas = True
                    End If
                    
                    If reg(i).Reg_Sal <> 0 Then
                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        NoHayMas = True
                    End If
                            
                    i = i + 1
                Loop
            End If
        End If
        
        objrsDesgl.MoveNext
    Loop
    '===============================================================================================================
    
    
    '===============================================================================================================
    'Nueva version de Pago por Cantidad y Franja (AMBAS)
    '-------------------------------------------------------------------
    'Genero los registros del HC, cuando se trata de desglose como Cantidad de Horas y Franja Horaria
    If depurar Then
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 3) & "  Genero los registros del HC, cuando se trata de desglose como Cantidad de Horas y Franja Horaria"
    End If
    Weekdia = Weekday(p_fecha)
    StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
             "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
    OpenRecordset StrSql, objrsDesgl
    If objrsDesgl.EOF Then
        If depurar Then
            GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
        End If
        Exit Sub
    End If
    StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 3 "
    StrSql = StrSql & " ORDER BY desghoradesde,desghplus"
    OpenRecordset StrSql, objrsDesgl
    Do While Not objrsDesgl.EOF
        HCFDesde = p_fecha
        HCFHasta = p_fecha
        
        cant_aux = Sumarizar_Horas_Franja(Cant_Pares, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, objrsDesgl!desghoradesde, objrsDesgl!desghorahasta, HCDesde, HCHasta)
        If (cant_aux < objrsDesgl!desgcantmin) Then TotHor = 0
        If ((cant_aux >= objrsDesgl!desgcantmin) And (cant_aux < objrsDesgl!desgcantmax)) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
                TotHor = cant_aux - objrsDesgl!desgcantmin
                Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFDesde, HCDesde, objrsDesgl!desgcantmin, "+")
                Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFHasta, HCHasta, TotHor, "+")
            Else
               TotHor = 0
            End If
        End If
        If (cant_aux >= objrsDesgl!desgcantmax) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = objrsDesgl!desgcantmax - objrsDesgl!desgcantmin
               Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFHasta, HCHasta, TotHor, "+")
            Else
               TotHor = 0
            End If
        End If
        If ((TotHor > 0) And (TotHor < objrsDesgl!desghoffset)) Then TotHor = 0
        
        'Si es plus, se calcula la duraci¢n de la hora
        If (objrsDesgl!desghplus = 1) Then
           'Hora Plus
           TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
            If (objrsDesgl!desghminplus <> 0) Or (objrsDesgl!desghmaxplus <> 0) Then
                If (TotHor < objrsDesgl!desghminplus) Then
                    TotHor = objrsDesgl!desghminplus
                    Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFHasta, HCHasta, TotHor, "+")
                End If
                If (objrsDesgl!desghmaxplus < TotHor) Then
                    TotHor = objrsDesgl!desghmaxplus
                    Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFHasta, HCHasta, TotHor, "+")
                End If
           End If
        End If

        
        If TotHor > 0 Then
            ' Redondeo del total de horas
            'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
            TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
            Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
            TotHorHHMM = "'" & TotHorHHMM & "'"
            
            Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
            Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
            
            If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
            
            'FGZ - 22/03/2011--
            If TotHor > 0 Then
            
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                Fecha_Generacion = p_fecha
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                          "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                          "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                          TotHorHHMM & "," & TotHor & "," & ConvFecha(HCFDesde) & ",' '," & ConvFecha(HCFHasta) & ",'" & HCDesde & "','" & HCHasta & "'," & _
                          CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                          ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                          Reg_Ent & ",''," & Reg_Sal & ",''," & _
                          Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
                End If
                
                
                'Marcar las registraciones involucradas con el Horario generado
                i = 1
                NoHayMas = False
                Do While i <= UBound(reg) And Not NoHayMas
                    If reg(i).Reg_Ent <> 0 Then
                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        NoHayMas = True
                    End If
                    
                    If reg(i).Reg_Sal <> 0 Then
                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        NoHayMas = True
                    End If
                            
                    i = i + 1
                Loop
            End If
        End If
        
        objrsDesgl.MoveNext
    Loop
    '-------------------------------------------------------------------
    

' FGZ - 12/3/2003. Hasta acá modificó Winsy
' ----------------------------------------------------
If depurar Then
    Flog.writeline
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 3) & "Cuando la sumatoria de las horas trabajadas entre las registraciones del empleado es menor a la cantidad de horas"
    Flog.writeline Espacios(Tabulador * 3) & "mínimas, configuradas en el turno, en el HC, debemos generar una anormalidad (faltar horas obligatorias)"
    Flog.writeline Espacios(Tabulador * 3) & "y una entrada en el HC mostrando esto"
    Flog.writeline
End If
'   Cuando la sumatoria de las horas trabajadas entre las registraciones del empleado es menor a la cantidad de horas
'   mínimas, configuradas en el turno, en el HC, debemos generar una anormalidad (faltar horas obligatorias)
'   y una entrada en el HC mostrando esto

'FGZ - 30/07/2007 - Le agregué este control
If Tipo_Turno = 3 Then  'Libre
    If UsaFeriadoConControl And esFeriado Then
       'No debe generar las ausencias
       Exit Sub
    End If
End If
'FGZ - 30/07/2007 - Le agregué este control

   cant_aux = 0
    
    ' AIB - Cambiada el 13/03
   StrSql = "SELECT * FROM gti_config_tur_hor WHERE turnro =" & Nro_Turno & " AND conhornro = 2 "
   'StrSql = "SELECT * FROM gti_config_tur_hor WHERE turnro =" & nro_turno & " AND conhornro = 10 "
   
   
   OpenRecordset StrSql, objRs
    
   If Not objRs.EOF Then
        'cambiado
        'redondeo = objRs!conhredondeo
        redondeo = IIf(Not EsNulo(objRs!conhredondeo), objRs!conhredondeo, 0)
        TipoHora = objRs!thnro
        tipofracc = 0 & objRs!conhfractipo
        cant_aux = sumarizar_horas(Cant_Pares, tipofracc, tipofracc)
'FGZ - 26/02/2009 ---- Cambié esto ---------------
'        'Cambiado
'        'if (PER.gti_turno.tipoturno = 3) and (horas-oblig > cant-aux)
'        StrSql = "SELECT * FROM gti_turno WHERE turnro =" & Nro_Turno
'        OpenRecordset StrSql, rs
'
'        'If (rs!TipoTurno = 3) And (horas_oblig > cant_aux) Then
'        'FGZ - 19/04/2006
'        'se estan olvidando de sumar las horas por justificaciones
'        If (rs!TipoTurno = 3) And (horas_oblig > (cant_aux + Total_Hs_Justificadas)) Then
        If (Tipo_Turno = 3) And (Horas_Oblig > (cant_aux + Total_Hs_Justificadas)) Then
'FGZ - 26/02/2009 ---- Cambié esto ---------------
        
            'TotHor = horas_oblig - cant_aux
            'FGZ - 19/04/2006
            TotHor = Horas_Oblig - (cant_aux + Total_Hs_Justificadas)
            
            'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
            TotHorHHMM = CHorasSF(TotHor, 60)
            Call Redondeo_enHorasMinutos(TotHorHHMM, redondeo, 60, TotHorHHMM)
            TotHorHHMM = "'" & TotHorHHMM & "'"
            
            objFechasHoras.Convertir_A_Hora_cDuracion TotHor, 60, Hora_a_Red
            objFechasHoras.Redondeo_Horas_Tipo2 Hora_a_Red, redondeo, 60, TotHor
            
            
            'Call ValidarTipoDeHora(tipohora, nro_turno, tipo_hora)
            
'            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
'            "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
'            "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
'            TotHor & "," & ConvFecha(p_fecha) & ",' '," & ValorNulo & ",'',''," & _
'            CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & ",5," & _
'            ValorNulo & "," & Empleado.Ternro & "," & TipoHora & "," & Nro_Turno & "," & _
'            ValorNulo & ",''," & ValorNulo & ",''," & _
'            Empleado.Legajo & "," & ConvFecha(p_fecha) & ")"
            
            
            'FGZ - 22/03/2011--
            If TotHor > 0 Then
            
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                Fecha_Generacion = p_fecha
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                
                
                'FGZ - 27/10/2008 - Se le agregó la fecha hasta porque estaba dando error en la pol 480
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
                CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & ",7,7," & _
                Empleado.Ternro & "," & TipoHora & "," & Nro_Turno & "," & _
                ValorNulo & ",''," & ValorNulo & ",''," & _
                Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TipoHora & "- Cantidad: " & TotHor & " hs."
                End If
                
                'FGZ - 12/04/2006 No estaba esto
                'Marcar las registraciones involucradas con el Horario generado
                i = 1
                NoHayMas = False
                Do While i <= UBound(reg) And Not NoHayMas
                    If reg(i).Reg_Ent <> 0 Then
                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        NoHayMas = True
                    End If
                    
                    If reg(i).Reg_Sal <> 0 Then
                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        NoHayMas = True
                    End If
                            
                    i = i + 1
                Loop
            End If
            
        End If
   End If
End Sub
Private Sub Generar_Horario_Libre_NocFlex()
' ---------------------------------------------------------------------------------------------
' Descripcion: Procedimiento que genera el Horario Libre del dia.
'               Especial para turnos nocturnos con turnos flexibles (politica 14)
' Autor      : FGZ
' Fecha      : 05/10/2010
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim redondeo As Integer
Dim TipoHora As Integer
Dim Cant_Reg As Integer
Dim CantR As Integer
Dim Cant_Pares As Integer
Dim i As Integer
Dim R As Integer
Dim par1 As String
Dim par2 As String
Dim HDesde As String
Dim HHasta As String
Dim fecpar1 As Date
Dim fecha_hc_desde As Date
Dim fecha_hc_hasta As Date
Dim fecpar2 As Date
Dim anor1 As Integer
Dim anor2 As Integer
Dim Reg_Ent As Long
Dim Reg_Sal As Long
Dim otroDia As Boolean
Dim j As Integer
Dim Weekdia As Byte
Dim objrsDesgl As New ADODB.Recordset
Dim TotHor As Single
Dim TotHor2 As Single
Dim TotHorHHMM As String
Dim nro_desg As Long
Dim hora_desde_desg As String
Dim hora_hasta_desg As String
Dim Hora_a_Red As String
Dim fecha_desde_desg As Date
Dim fecha_hasta_desg As Date
Dim HCDesde As String
Dim HCHasta As String
Dim cant_aux As Single
Dim CantH_Acum As Single
Dim cant_parcial As Single
Dim horas_max As Single
Dim horas_min As Single
Dim Registro As Long
Dim rs As New ADODB.Recordset
Dim tipofracc As Integer
Dim segunda As Boolean
Dim CubrioElMinimo As Boolean
Dim CantidadDeHorasACubrir As Single
Dim RestoDeHorasCubiertas As Single
Dim SefuedeRango As Boolean
Dim Recalcular As Boolean

'FGZ - 12/04/2006 - Arreglo de registraciones leidas y a marcar como procesadas
Dim reg(1 To 100) As TRegistracionesProcesadas
Dim NoHayMas As Boolean

Dim HCFDesde As Date
Dim HCFHasta As Date
Dim Cambio_dia As Boolean
Dim EsFeriado2 As Boolean
Dim objFeriado2 As New Feriado
Dim p_fecha_aux As Date
Dim Cambie_p_fecha As Boolean

Dim HCHDesde As String
Dim HCHHasta As String
Dim horres As String
Dim fecres As Date

Dim p_fecha_Original As Date

diatipo = 0 'Dia laborable
Cant_Reg = 0
CantR = 1
Cambie_p_fecha = False


    'FGZ - 04/01/2011
    p_fecha_Original = p_fecha

    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Version Nocturnos Flexibles"
    End If
    
    If esFeriado And Dia_Libre Then
      Call Politica(380)
    ElseIf Dia_Libre Then diatipo = 1
      ElseIf esFeriado Then diatipo = 2
    End If
    ' Marco los pares
    StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 ORDER BY Fecha,hora"
    rs.Open StrSql, objConn
    i = 1
    Do While Not rs.EOF
        Registro = rs!Regnro
        StrSql = "update " & TTempWFTurno & " set par = " & i & " where regnro = " & Registro
        objConn.Execute StrSql, , adExecuteNoRecords
        If CantR Mod 2 = 0 Then i = i + 1
        CantR = CantR + 1
        Cant_Reg = Cant_Reg + 1
        rs.MoveNext
    
    Loop
        
    Cant_Pares = Int(Cant_Reg / 2)
    If Cant_Reg = 1 Then
        Call Politica(40)
        objConn.Execute "DELETE FROM " & TTempWFDiaLaboral, , adExecuteNoRecords
        Exit Sub
    End If
    
    p_fecha_aux = p_fecha
    
    Call buscar_horas_turno(Horas_Oblig, horas_max, horas_min)
    
    'Cambiado
    For i = 1 To Cant_Pares
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par =" & i
        OpenRecordset StrSql, objRs
        If objRs.EOF Then GoTo ProximoPar
        par1 = objRs!Hora
        fecpar1 = objRs!Fecha
        fecha_hc_desde = fecpar1
        Reg_Ent = objRs!Regnro
        
        'FGZ - 12/04/2006 - ojo !!! - si el desgloce es por cantidad de horas hay que guardar los pares anteriores porque acumula antes de guardar
        ' y se pisan los nro de las registraciones a marcar como procesadas
        reg(i).Reg_Ent = objRs!Regnro
        
        'Cambiado
        anor1 = 0 & objRs!anornro
        
        StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & objRs!Regnro & " AND regestado <> 'P'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        objRs.MoveNext
        If objRs.EOF Then GoTo ProximoPar
        
        par2 = objRs!Hora
        fecpar2 = objRs!Fecha
        fecha_hc_hasta = fecpar2
        Reg_Sal = objRs!Regnro
        
        'FGZ - 12/04/2006 - ojo !!! - si el desgloce es por cantidad de horas hay que guardar los pares anteriores porque acumula antes de guardar
        ' y se pisan los nro de las registraciones a marcar como procesadas
        reg(i).Reg_Sal = objRs!Regnro
        
        anor2 = 0 & objRs!anornro
        
        StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & objRs!Regnro & " AND regestado <> 'P'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        If fecpar1 = fecpar2 Then
            HDesde = par1
            HHasta = par2
            otroDia = False
        Else
            HDesde = par1    ' Como las fechas son distintas el desgloce es distinto por cada día */
            HHasta = "2400" ' Genero dos HC uno de par1 hasta 24:00 y el otro de 00:00 a par2 */
            otroDia = True
        End If
        
        'Cambio_dia = False
        '------------------------------------------
        Cambio_dia = False
        Cambie_p_fecha = False
        Weekdia = Weekday(fecpar1)
        '------------------------------------------
        For j = 1 To 2 'En el peor de los casos lo hara 2 veces, una por cada día
            '--------------------------------------------------------------------
'            Weekdia = Weekday(p_fecha)
'            If Not Cambio_dia Or (Cambio_dia And Subturno_Genera <> 1) Then
'                Weekdia = Weekday(fecpar1)
'            End If

            If Cambio_dia Then
                Weekdia = Weekday(fecpar1)
                p_fecha = fecpar1
                Cambie_p_fecha = True
                EsFeriado2 = objFeriado2.Feriado(fecpar1, Empleado.Ternro, depurar)
                If EsFeriado2 Then
                    diatipo = 2
                End If
            End If
            '--------------------------------------------------------------------
            
            
            
            StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
                     "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
            OpenRecordset StrSql, objrsDesgl
            If objrsDesgl.EOF Then
                If depurar Then
                    GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
                    Flog.writeline Espacios(Tabulador * 4) & "No existe el desglose del Día."
                End If
                Exit Sub
            End If
            
            StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 2 "
            StrSql = StrSql & " ORDER BY desghorfijo,desghoradesde"
            OpenRecordset StrSql, objrsDesgl
            Do While Not objrsDesgl.EOF
                p_fecha = fecpar1
                
                '1 Horario Fijo ,2 Horario Variable, 3 Horario Fijo/Variable
                Tipo_de_Desgloce = objrsDesgl!desghorfijo
            
                TotHor = 0
                hora_desde = HDesde
                hora_hasta = HHasta
                nro_desg = objrsDesgl!desghnro
    
                If Cambie_p_fecha Then
                    p_fecha = DateAdd("d", -1, p_fecha)
                End If
                
                If diatipo = 0 Then
                    Call Cambiar_Horas_Desde(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_dia)
                    Call Cambiar_Horas_hasta(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_dia)
                Else
                    Call Cambiar_Horas_Desde2(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_dia, fecpar1)
                    Call Cambiar_Horas_hasta2(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_dia, fecpar1)
                End If
                
                If Cambie_p_fecha Then
                    p_fecha = DateAdd("d", 1, p_fecha)
                End If
                 
'                Call Cambiar_Horas_Desde(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_dia)
'                Call Cambiar_Horas_hasta(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_dia)
                
                'FGZ - 10/01/2006
                'OJO !! cuando la FP es relativa y va de posterior a la salida y anterior a la entrada
                ' tiene problemas con los turnos nocturnos ya que la salida pasa de dia ==>
                'hay que hacer el control desde afuera y pasar de dia al calculo de la fecha hasta
                If objFechasHoras.Menor_Hora(fecha_hasta_desg, hora_hasta_desg, fecha_desde_desg, hora_desde_desg) Then
                    fecha_hasta_desg = DateAdd("d", 1, fecha_hasta_desg)
                End If
                
                Call fraccionar_horas(fecpar1, hora_desde, hora_hasta, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, hora_desde, hora_hasta)
    
                'Desgloce   [---------------]
                'Horario          (----------------)
                If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                    objFechasHoras.RestaHs fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                    HCDesde = hora_desde
                    HCHasta = hora_hasta_desg
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
                'Desgloce       [---------------]
                'Horario    (----------------)
                If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                    objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                    HCDesde = hora_desde_desg
                    HCHasta = hora_hasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
                
                'Desgloce       [---------------]
                'Horario    (-----------------------)
                If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_desde) Then
                    objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                    HCDesde = hora_desde_desg
                    HCHasta = hora_hasta_desg
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
                'Desgloce   [---------------]
                'Horario        (--------)
                If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                'If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                    HCDesde = hora_desde
                    HCHasta = hora_hasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
                 
                 
                 
                'FGZ - 08/04/2009 ---------------------------------------------------------------------
                 
                 
                 
                 
                 
                 
                 If (TotHor = 0) Then GoTo Continuar
                 
                 If (objrsDesgl!desghplus = 1) Then
                    'Hora Plus
                    TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
                    If (objrsDesgl!desghminplus <> 0) Or (objrsDesgl!desghmaxplus <> 0) Then
                        If (TotHor < objrsDesgl!desghminplus) Then TotHor = objrsDesgl!desghminplus
                        If (objrsDesgl!desghmaxplus < TotHor) Then TotHor = objrsDesgl!desghmaxplus
                    End If
                 End If
                 
                '/* Redondeo del total de horas */
                'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
                'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
                'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
                TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
                Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
                TotHorHHMM = "'" & TotHorHHMM & "'"
                
                
                Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
                Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
                
                
                If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
                
                p_fecha = p_fecha_aux
                
                Call Politica(540)
                
                If TotHor = 0 Then GoTo Continuar
                'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
                
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                
                
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                         "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                         "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                         TotHorHHMM & "," & TotHor & "," & ConvFecha(fecpar1) & ",' '," & ConvFecha(fecpar1) & ",'" & HCDesde & "','" & _
                         HCHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                         ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                         Reg_Ent & ",'" & IIf(j = 1, par1, "0000") & "'," & Reg_Sal & ",'" & _
                         IIf((j = 2) Or (j = 1 And Not otroDia), par2, "2400") & "'," & Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
                End If
                    
                    
                ' Marcar las registraciones involucradas con el Horario generado
                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Ent
                objConn.Execute StrSql, , adExecuteNoRecords
                    
                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Sal
                objConn.Execute StrSql, , adExecuteNoRecords

Continuar:
                objrsDesgl.MoveNext
            Loop
            
            
            If fecpar1 = fecpar2 Then
                Exit For
            Else
                hora_desde = "0000"
                HDesde = hora_desde
                hora_hasta = par2
                HHasta = hora_hasta
                fecpar1 = fecpar2
                Cambio_dia = True
            End If
            
        Next j

ProximoPar:
    Next i


    '===============================================================================================================
    'Genero los registros del HC, cuando se trata de desglose como cantidad de horas
    If depurar Then
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 3) & "  Genero los registros del HC, cuando se trata de desglose como cantidad de horas"
    End If
    Weekdia = Weekday(p_fecha)
    StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
             "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
    OpenRecordset StrSql, objrsDesgl
    If objrsDesgl.EOF Then
        If depurar Then
            GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
        End If
        Exit Sub
    End If
    ' Cambiada
    StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 1 " & _
                     " ORDER BY desgdnro,desghoradesde"
    OpenRecordset StrSql, objrsDesgl
    Do While Not objrsDesgl.EOF
        cant_aux = Sumarizar_Horas2(Cant_Pares, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, HCFDesde, HCHDesde, HCFHasta, HCHHasta)
        'cant_aux = sumarizar_horas(Cant_Pares, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta)

        'If ((cant_aux > 0) And (cant_aux < objrsDesgl!desghoffset)) Then TotHor = 0
        If (cant_aux < objrsDesgl!desgcantmin) Then TotHor = 0
        If ((cant_aux >= objrsDesgl!desgcantmin) And (cant_aux < objrsDesgl!desgcantmax)) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = cant_aux - objrsDesgl!desgcantmin
               
               'FGZ - 06/10/2010 ----------------------------------------------------------
               'aca deberia recalcular fdesde y hdesde. hasta - cantidad de horas de tothor
               If cant_aux > objrsDesgl!desgcantmin Then
                    TotHorHHMM = CHorasSF(objrsDesgl!desgcantmin, 60)
                    Call objFechasHoras.SumoHoras(HCFDesde, HCHDesde, TotHorHHMM, fecres, horres)
                    If Not objFechasHoras.ValidarHora(horres) Then
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 4) & "Hora Invalida " & horres
                        End If
                    End If
                    HCFDesde = fecres
                    HCHDesde = horres
               
               End If
               'FGZ - 06/10/2010 ----------------------------------------------------------
            Else
               TotHor = 0
            End If
        End If
        If (cant_aux >= objrsDesgl!desgcantmax) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = objrsDesgl!desgcantmax - objrsDesgl!desgcantmin
               
               'FGZ - 06/10/2010 ----------------------------------------------------------
               'aca deberia recalcular fhasta y hhasta. desde + cantidad de horas de tothor
               TotHorHHMM = CHorasSF(TotHor, 60)
                Call objFechasHoras.SumoHoras(HCFDesde, HCHDesde, TotHorHHMM, fecres, horres)
                If Not objFechasHoras.ValidarHora(horres) Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 4) & "Hora Invalida " & horres
                    End If
                End If
                HCFHasta = fecres
                HCHHasta = horres
               'FGZ - 06/10/2010 ----------------------------------------------------------
            Else
               TotHor = 0
            End If
        End If
        'FGZ - 29/07/2008 ----
        If ((TotHor > 0) And (TotHor < objrsDesgl!desghoffset)) Then TotHor = 0
        'FGZ - 29/07/2008 ----
        
        ' Chequea si las horas trabajadas estan entre en maximo plus y minimo plus o
        ' si el maximo y minimo son 0, paga el total de horas
        If (objrsDesgl!desghplus = 1) And (objrsDesgl!desghmaxplus = 0 And objrsDesgl!desghminplus = 0) Then
           If (TotHor < objrsDesgl!desghminplus) Then
                 GoTo Continuar
              Else
                 If (TotHor > objrsDesgl!desghmaxplus) Then TotHor = TotHor - objrsDesgl!desghmaxplus
            End If
        End If
        
        If TotHor > 0 Then
            ' Si es plus, se calcula la duración de la hora */
            If (objrsDesgl!desghplus = 1) Then
                TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
            End If
            ' Redondeo del total de horas
            'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
            'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
            'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
            TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
            Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
            TotHorHHMM = "'" & TotHorHHMM & "'"
            
            Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
            Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
            
            If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
            
            'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
            
            'FGZ - 22/03/2011--
            If TotHor > 0 Then
            
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                Fecha_Generacion = p_fecha
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                          "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                          "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                          TotHorHHMM & "," & TotHor & "," & ConvFecha(HCFDesde) & ",' '," & ConvFecha(HCFHasta) & ",'" & HCHDesde & "','" & HCHHasta & "'," & _
                          CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                          ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                          Reg_Ent & ",''," & Reg_Sal & ",''," & _
                          Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
                End If
                
                'FGZ - 12/04/2006 No estaba esto
                'Marcar las registraciones involucradas con el Horario generado
                i = 1
                NoHayMas = False
                Do While i <= UBound(reg) And Not NoHayMas
                    If reg(i).Reg_Ent <> 0 Then
                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        NoHayMas = True
                    End If
                    
                    If reg(i).Reg_Sal <> 0 Then
                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        NoHayMas = True
                    End If
                            
                    i = i + 1
                Loop
            End If
        End If
        
        objrsDesgl.MoveNext
    Loop
    '===============================================================================================================
    
    
    '===============================================================================================================
    'Nueva version de Pago por Cantidad y Franja (AMBAS)
    '-------------------------------------------------------------------
    'Genero los registros del HC, cuando se trata de desglose como Cantidad de Horas y Franja Horaria
    If depurar Then
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 3) & "  Genero los registros del HC, cuando se trata de desglose como Cantidad de Horas y Franja Horaria"
    End If
    Weekdia = Weekday(p_fecha)
    StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
             "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
    OpenRecordset StrSql, objrsDesgl
    If objrsDesgl.EOF Then
        If depurar Then
            GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
        End If
        Exit Sub
    End If
    StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 3 "
    StrSql = StrSql & " ORDER BY desghoradesde,desghplus"
    OpenRecordset StrSql, objrsDesgl
    Do While Not objrsDesgl.EOF
        HCFDesde = p_fecha
        HCFHasta = p_fecha
        
        cant_aux = Sumarizar_Horas_Franja(Cant_Pares, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, objrsDesgl!desghoradesde, objrsDesgl!desghorahasta, HCDesde, HCHasta)
        If (cant_aux < objrsDesgl!desgcantmin) Then TotHor = 0
        If ((cant_aux >= objrsDesgl!desgcantmin) And (cant_aux < objrsDesgl!desgcantmax)) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
                TotHor = cant_aux - objrsDesgl!desgcantmin
                Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFDesde, HCDesde, objrsDesgl!desgcantmin, "+")
                Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFHasta, HCHasta, TotHor, "+")
            Else
               TotHor = 0
            End If
        End If
        If (cant_aux >= objrsDesgl!desgcantmax) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = objrsDesgl!desgcantmax - objrsDesgl!desgcantmin
               Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFHasta, HCHasta, TotHor, "+")
            Else
               TotHor = 0
            End If
        End If
        If ((TotHor > 0) And (TotHor < objrsDesgl!desghoffset)) Then TotHor = 0
        
        'Si es plus, se calcula la duraci¢n de la hora
        If (objrsDesgl!desghplus = 1) Then
           'Hora Plus
           TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
            If (objrsDesgl!desghminplus <> 0) Or (objrsDesgl!desghmaxplus <> 0) Then
                If (TotHor < objrsDesgl!desghminplus) Then
                    TotHor = objrsDesgl!desghminplus
                    Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFHasta, HCHasta, TotHor, "+")
                End If
                If (objrsDesgl!desghmaxplus < TotHor) Then
                    TotHor = objrsDesgl!desghmaxplus
                    Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFHasta, HCHasta, TotHor, "+")
                End If
           End If
        End If

        
        If TotHor > 0 Then
            ' Redondeo del total de horas
            'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
            TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
            Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
            TotHorHHMM = "'" & TotHorHHMM & "'"
            
            Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
            Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
            
            If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
            
            
            'FGZ - 22/03/2011--
            If TotHor > 0 Then
            
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                Fecha_Generacion = p_fecha
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                          "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                          "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                          TotHorHHMM & "," & TotHor & "," & ConvFecha(HCFDesde) & ",' '," & ConvFecha(HCFHasta) & ",'" & HCDesde & "','" & HCHasta & "'," & _
                          CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                          ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                          Reg_Ent & ",''," & Reg_Sal & ",''," & _
                          Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
                End If
                
                
                'Marcar las registraciones involucradas con el Horario generado
                i = 1
                NoHayMas = False
                Do While i <= UBound(reg) And Not NoHayMas
                    If reg(i).Reg_Ent <> 0 Then
                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        NoHayMas = True
                    End If
                    
                    If reg(i).Reg_Sal <> 0 Then
                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        NoHayMas = True
                    End If
                            
                    i = i + 1
                Loop
            End If
        End If
        
        objrsDesgl.MoveNext
    Loop
    '-------------------------------------------------------------------
    

' FGZ - 12/3/2003. Hasta acá modificó Winsy
' ----------------------------------------------------
If depurar Then
    Flog.writeline
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 3) & "Cuando la sumatoria de las horas trabajadas entre las registraciones del empleado es menor a la cantidad de horas"
    Flog.writeline Espacios(Tabulador * 3) & "mínimas, configuradas en el turno, en el HC, debemos generar una anormalidad (faltar horas obligatorias)"
    Flog.writeline Espacios(Tabulador * 3) & "y una entrada en el HC mostrando esto"
    Flog.writeline
End If
'   Cuando la sumatoria de las horas trabajadas entre las registraciones del empleado es menor a la cantidad de horas
'   mínimas, configuradas en el turno, en el HC, debemos generar una anormalidad (faltar horas obligatorias)
'   y una entrada en el HC mostrando esto

'FGZ - 30/07/2007 - Le agregué este control
If Tipo_Turno = 3 Then  'Libre
    If UsaFeriadoConControl And esFeriado Then
       'No debe generar las ausencias
       Exit Sub
    End If
End If
'FGZ - 30/07/2007 - Le agregué este control

   cant_aux = 0
    
    ' AIB - Cambiada el 13/03
   StrSql = "SELECT * FROM gti_config_tur_hor WHERE turnro =" & Nro_Turno & " AND conhornro = 2 "
   'StrSql = "SELECT * FROM gti_config_tur_hor WHERE turnro =" & nro_turno & " AND conhornro = 10 "
   
   
   OpenRecordset StrSql, objRs
    
   If Not objRs.EOF Then
        'cambiado
        'redondeo = objRs!conhredondeo
        redondeo = IIf(Not EsNulo(objRs!conhredondeo), objRs!conhredondeo, 0)
        TipoHora = objRs!thnro
        tipofracc = 0 & objRs!conhfractipo
        cant_aux = sumarizar_horas(Cant_Pares, tipofracc, tipofracc)
'FGZ - 26/02/2009 ---- Cambié esto ---------------
'        'Cambiado
'        'if (PER.gti_turno.tipoturno = 3) and (horas-oblig > cant-aux)
'        StrSql = "SELECT * FROM gti_turno WHERE turnro =" & Nro_Turno
'        OpenRecordset StrSql, rs
'
'        'If (rs!TipoTurno = 3) And (horas_oblig > cant_aux) Then
'        'FGZ - 19/04/2006
'        'se estan olvidando de sumar las horas por justificaciones
'        If (rs!TipoTurno = 3) And (horas_oblig > (cant_aux + Total_Hs_Justificadas)) Then
        If (Tipo_Turno = 3) And (Horas_Oblig > (cant_aux + Total_Hs_Justificadas)) Then
'FGZ - 26/02/2009 ---- Cambié esto ---------------
        
            'TotHor = horas_oblig - cant_aux
            'FGZ - 19/04/2006
            TotHor = Horas_Oblig - (cant_aux + Total_Hs_Justificadas)
            
            'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
            TotHorHHMM = CHorasSF(TotHor, 60)
            Call Redondeo_enHorasMinutos(TotHorHHMM, redondeo, 60, TotHorHHMM)
            TotHorHHMM = "'" & TotHorHHMM & "'"
            
            objFechasHoras.Convertir_A_Hora_cDuracion TotHor, 60, Hora_a_Red
            objFechasHoras.Redondeo_Horas_Tipo2 Hora_a_Red, redondeo, 60, TotHor
            
            
            'Call ValidarTipoDeHora(tipohora, nro_turno, tipo_hora)
            
'            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
'            "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
'            "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
'            TotHor & "," & ConvFecha(p_fecha) & ",' '," & ValorNulo & ",'',''," & _
'            CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & ",5," & _
'            ValorNulo & "," & Empleado.Ternro & "," & TipoHora & "," & Nro_Turno & "," & _
'            ValorNulo & ",''," & ValorNulo & ",''," & _
'            Empleado.Legajo & "," & ConvFecha(p_fecha) & ")"
            
            
            'FGZ - 22/03/2011--
            If TotHor > 0 Then
            
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                Fecha_Generacion = p_fecha
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                
                
                'FGZ - 27/10/2008 - Se le agregó la fecha hasta porque estaba dando error en la pol 480
    '            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
    '            "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
    '            "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
    '            TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
    '            CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & ",3,3," & _
    '            Empleado.Ternro & "," & TipoHora & "," & Nro_Turno & "," & _
    '            ValorNulo & ",''," & ValorNulo & ",''," & _
    '            Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
                CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                Empleado.Ternro & "," & TipoHora & "," & Nro_Turno & "," & _
                ValorNulo & ",''," & ValorNulo & ",''," & _
                Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TipoHora & "- Cantidad: " & TotHor & " hs."
                End If
                
                'FGZ - 12/04/2006 No estaba esto
                'Marcar las registraciones involucradas con el Horario generado
                i = 1
                NoHayMas = False
                Do While i <= UBound(reg) And Not NoHayMas
                    If reg(i).Reg_Ent <> 0 Then
                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        NoHayMas = True
                    End If
                    
                    If reg(i).Reg_Sal <> 0 Then
                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        NoHayMas = True
                    End If
                            
                    i = i + 1
                Loop
            End If
        End If
   End If

    'FGZ - 04/01/2011
    p_fecha = p_fecha_Original

End Sub

Private Sub Generar_Horario_Libre_NocFlex_TipDia()
' ---------------------------------------------------------------------------------------------
' Descripcion: Procedimiento que genera el Horario Libre del dia.
'               Especial para turnos nocturnos con turnos flexibles (politica 14)
' Autor      : FGZ
' Fecha      : 05/10/2010
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim redondeo As Integer
Dim TipoHora As Integer
Dim Cant_Reg As Integer
Dim CantR As Integer
Dim Cant_Pares As Integer
Dim i As Integer
Dim R As Integer
Dim par1 As String
Dim par2 As String
Dim HDesde As String
Dim HHasta As String
Dim fecpar1 As Date
Dim fecha_hc_desde As Date
Dim fecha_hc_hasta As Date
Dim fecpar2 As Date
Dim anor1 As Integer
Dim anor2 As Integer
Dim Reg_Ent As Long
Dim Reg_Sal As Long
Dim otroDia As Boolean
Dim j As Integer
Dim Weekdia As Byte
Dim objrsDesgl As New ADODB.Recordset
Dim TotHor As Single
Dim TotHor2 As Single
Dim TotHorHHMM As String
Dim nro_desg As Long
Dim hora_desde_desg As String
Dim hora_hasta_desg As String
Dim Hora_a_Red As String
Dim fecha_desde_desg As Date
Dim fecha_hasta_desg As Date
Dim HCDesde As String
Dim HCHasta As String
Dim cant_aux As Single
Dim CantH_Acum As Single
Dim cant_parcial As Single
Dim horas_max As Single
Dim horas_min As Single
Dim Registro As Long
Dim rs As New ADODB.Recordset
Dim tipofracc As Integer
Dim segunda As Boolean
Dim CubrioElMinimo As Boolean
Dim CantidadDeHorasACubrir As Single
Dim RestoDeHorasCubiertas As Single
Dim SefuedeRango As Boolean
Dim Recalcular As Boolean

'FGZ - 12/04/2006 - Arreglo de registraciones leidas y a marcar como procesadas
Dim reg(1 To 100) As TRegistracionesProcesadas
Dim NoHayMas As Boolean

Dim HCFDesde As Date
Dim HCFHasta As Date
Dim Cambio_dia As Boolean
Dim EsFeriado2 As Boolean
Dim objFeriado2 As New Feriado
Dim p_fecha_aux As Date
Dim Cambie_p_fecha As Boolean

Dim HCHDesde As String
Dim HCHHasta As String
Dim horres As String
Dim fecres As Date

Dim p_fecha_Original As Date

diatipo = 0 'Dia laborable
Cant_Reg = 0
CantR = 1
Cambie_p_fecha = False


    'FGZ - 04/01/2011
    p_fecha_Original = p_fecha

    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Version Nocturnos Flexibles Según Tipo de Día"
    End If
    
    If esFeriado And Dia_Libre Then
      Call Politica(380)
    ElseIf Dia_Libre Then diatipo = 1
      ElseIf esFeriado Then diatipo = 2
    End If
    ' Marco los pares
    StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 ORDER BY Fecha,hora"
    rs.Open StrSql, objConn
    i = 1
    Do While Not rs.EOF
        Registro = rs!Regnro
        StrSql = "update " & TTempWFTurno & " set par = " & i & " where regnro = " & Registro
        objConn.Execute StrSql, , adExecuteNoRecords
        If CantR Mod 2 = 0 Then i = i + 1
        CantR = CantR + 1
        Cant_Reg = Cant_Reg + 1
        rs.MoveNext
    
    Loop
        
    Cant_Pares = Int(Cant_Reg / 2)
    If Cant_Reg = 1 Then
        Call Politica(40)
        objConn.Execute "DELETE FROM " & TTempWFDiaLaboral, , adExecuteNoRecords
        Exit Sub
    End If
    
    p_fecha_aux = p_fecha
    
    Call buscar_horas_turno(Horas_Oblig, horas_max, horas_min)
    
    'Cambiado
    For i = 1 To Cant_Pares
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par =" & i
        OpenRecordset StrSql, objRs
        If objRs.EOF Then GoTo ProximoPar
        par1 = objRs!Hora
        fecpar1 = objRs!Fecha
        fecha_hc_desde = fecpar1
        Reg_Ent = objRs!Regnro
               
        
        'FGZ - 12/04/2006 - ojo !!! - si el desgloce es por cantidad de horas hay que guardar los pares anteriores porque acumula antes de guardar
        ' y se pisan los nro de las registraciones a marcar como procesadas
        reg(i).Reg_Ent = objRs!Regnro
        
        'Cambiado
        anor1 = 0 & objRs!anornro
        
        StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & objRs!Regnro & " AND regestado <> 'P'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        objRs.MoveNext
        If objRs.EOF Then GoTo ProximoPar
        
        par2 = objRs!Hora
        fecpar2 = objRs!Fecha
        fecha_hc_hasta = fecpar2
        Reg_Sal = objRs!Regnro
        
        'FGZ - 12/04/2006 - ojo !!! - si el desgloce es por cantidad de horas hay que guardar los pares anteriores porque acumula antes de guardar
        ' y se pisan los nro de las registraciones a marcar como procesadas
        reg(i).Reg_Sal = objRs!Regnro
        
        anor2 = 0 & objRs!anornro
        
        StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & objRs!Regnro & " AND regestado <> 'P'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        If fecpar1 = fecpar2 Then
            HDesde = par1
            HHasta = par2
            otroDia = False
        Else
            HDesde = par1    ' Como las fechas son distintas el desgloce es distinto por cada día */
            HHasta = "2400" ' Genero dos HC uno de par1 hasta 24:00 y el otro de 00:00 a par2 */
            otroDia = True
        End If
        
        'Cambio_dia = False
        '------------------------------------------
        Cambio_dia = (p_fecha_Original <> fecpar1)
        Cambie_p_fecha = Cambio_dia
        Weekdia = Weekday(fecpar1)
        '------------------------------------------
        For j = 1 To 2 'En el peor de los casos lo hara 2 veces, una por cada día
            '--------------------------------------------------------------------
'            Weekdia = Weekday(p_fecha)
'            If Not Cambio_dia Or (Cambio_dia And Subturno_Genera <> 1) Then
'                Weekdia = Weekday(fecpar1)
'            End If

            'CDM - 29/11/2013 -
'            If fecpar1 <> p_fecha_Original Then
'                Cambio_dia = True
'                Cambie_p_fecha = True
'                Weekdia = Weekday(fecpar1)
'            Else
'                Cambio_dia = False
'                Cambie_p_fecha = False
'                Weekdia = Weekday(fecpar1)
'            End If
            'If Cambio_dia Then
            
            Cambio_dia = (p_fecha_Original <> fecpar1)
                    
            If Cambio_dia Then
                Weekdia = Weekday(fecpar1)
                p_fecha = fecpar1
                Cambie_p_fecha = True
                EsFeriado2 = objFeriado2.Feriado(fecpar1, Empleado.Ternro, depurar)
                If EsFeriado2 Then
                    Weekdia = Weekday(fecpar1)
                    diatipo = 2
                Else
                    If Subturno_Genera <> 1 Then
                        Weekdia = Weekday(fecpar1)
                    End If
                End If
            End If
            '--------------------------------------------------------------------
            
            
            
            StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
                     "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
            OpenRecordset StrSql, objrsDesgl
            If objrsDesgl.EOF Then
                If depurar Then
                    GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
                    Flog.writeline Espacios(Tabulador * 4) & "No existe el desglose del Día."
                End If
                Exit Sub
            End If
            
            StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 2 "
            StrSql = StrSql & " ORDER BY desghorfijo,desghoradesde"
            OpenRecordset StrSql, objrsDesgl
            Do While Not objrsDesgl.EOF
                p_fecha = fecpar1
                
                '1 Horario Fijo ,2 Horario Variable, 3 Horario Fijo/Variable
                Tipo_de_Desgloce = objrsDesgl!desghorfijo
            
                TotHor = 0
                hora_desde = HDesde
                hora_hasta = HHasta
                nro_desg = objrsDesgl!desghnro
    
                If Cambie_p_fecha Then
                    p_fecha = DateAdd("d", -1, p_fecha)
                End If
                
                If diatipo = 0 Then
                    Call Cambiar_Horas_Desde(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_dia)
                    Call Cambiar_Horas_hasta(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_dia)
                Else
                    Call Cambiar_Horas_Desde2(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_dia, fecpar1)
                    Call Cambiar_Horas_hasta2(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_dia, fecpar1)
                End If
                
                If Cambie_p_fecha Then
                    p_fecha = DateAdd("d", 1, p_fecha)
                End If
                 
'                Call Cambiar_Horas_Desde(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_dia)
'                Call Cambiar_Horas_hasta(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_dia)
                
                'FGZ - 10/01/2006
                'OJO !! cuando la FP es relativa y va de posterior a la salida y anterior a la entrada
                ' tiene problemas con los turnos nocturnos ya que la salida pasa de dia ==>
                'hay que hacer el control desde afuera y pasar de dia al calculo de la fecha hasta
                If objFechasHoras.Menor_Hora(fecha_hasta_desg, hora_hasta_desg, fecha_desde_desg, hora_desde_desg) Then
                    fecha_hasta_desg = DateAdd("d", 1, fecha_hasta_desg)
                End If
                
                Call fraccionar_horas(fecpar1, hora_desde, hora_hasta, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, hora_desde, hora_hasta)
    
                'Desgloce   [---------------]
                'Horario          (----------------)
                If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                    objFechasHoras.RestaHs fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                    HCDesde = hora_desde
                    HCHasta = hora_hasta_desg
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
                'Desgloce       [---------------]
                'Horario    (----------------)
                If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                    objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                    HCDesde = hora_desde_desg
                    HCHasta = hora_hasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
                
                'Desgloce       [---------------]
                'Horario    (-----------------------)
                If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_desde) Then
                    objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                    HCDesde = hora_desde_desg
                    HCHasta = hora_hasta_desg
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
                'Desgloce   [---------------]
                'Horario        (--------)
                If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                'If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                    HCDesde = hora_desde
                    HCHasta = hora_hasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
                 
                 
                 
                'FGZ - 08/04/2009 ---------------------------------------------------------------------
                 
                 
                 
                 
                 
                 
                 If (TotHor = 0) Then GoTo Continuar
                 
                 If (objrsDesgl!desghplus = 1) Then
                    'Hora Plus
                    TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
                    If (objrsDesgl!desghminplus <> 0) Or (objrsDesgl!desghmaxplus <> 0) Then
                        If (TotHor < objrsDesgl!desghminplus) Then TotHor = objrsDesgl!desghminplus
                        If (objrsDesgl!desghmaxplus < TotHor) Then TotHor = objrsDesgl!desghmaxplus
                    End If
                 End If
                 
                '/* Redondeo del total de horas */
                'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
                'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
                'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
                TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
                Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
                TotHorHHMM = "'" & TotHorHHMM & "'"
                
                
                Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
                Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
                
                
                If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
                
                p_fecha = p_fecha_aux
                
                Call Politica(540)
                
                If TotHor = 0 Then GoTo Continuar
                'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
                
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                
                
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                         "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                         "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                         TotHorHHMM & "," & TotHor & "," & ConvFecha(fecpar1) & ",' '," & ConvFecha(fecpar1) & ",'" & HCDesde & "','" & _
                         HCHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                         ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                         Reg_Ent & ",'" & IIf(j = 1, par1, "0000") & "'," & Reg_Sal & ",'" & _
                         IIf((j = 2) Or (j = 1 And Not otroDia), par2, "2400") & "'," & Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
                End If
                    
                    
                ' Marcar las registraciones involucradas con el Horario generado
                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Ent
                objConn.Execute StrSql, , adExecuteNoRecords
                    
                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Sal
                objConn.Execute StrSql, , adExecuteNoRecords

Continuar:
                objrsDesgl.MoveNext
            Loop
            
            
            If fecpar1 = fecpar2 Then
                Exit For
            Else
                hora_desde = "0000"
                HDesde = hora_desde
                hora_hasta = par2
                HHasta = hora_hasta
                fecpar1 = fecpar2
                Cambio_dia = True
            End If
            
        Next j

ProximoPar:
    Next i


    '===============================================================================================================
    'Genero los registros del HC, cuando se trata de desglose como cantidad de horas
    If depurar Then
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 3) & "  Genero los registros del HC, cuando se trata de desglose como cantidad de horas"
    End If
    Weekdia = Weekday(p_fecha)
    StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
             "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
    OpenRecordset StrSql, objrsDesgl
    If objrsDesgl.EOF Then
        If depurar Then
            GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
        End If
        Exit Sub
    End If
    ' Cambiada
    StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 1 " & _
                     " ORDER BY desgdnro,desghoradesde"
    OpenRecordset StrSql, objrsDesgl
    Do While Not objrsDesgl.EOF
        cant_aux = Sumarizar_Horas2(Cant_Pares, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, HCFDesde, HCHDesde, HCFHasta, HCHHasta)
        'cant_aux = sumarizar_horas(Cant_Pares, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta)

        'If ((cant_aux > 0) And (cant_aux < objrsDesgl!desghoffset)) Then TotHor = 0
        If (cant_aux < objrsDesgl!desgcantmin) Then TotHor = 0
        If ((cant_aux >= objrsDesgl!desgcantmin) And (cant_aux < objrsDesgl!desgcantmax)) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = cant_aux - objrsDesgl!desgcantmin
               
               'FGZ - 06/10/2010 ----------------------------------------------------------
               'aca deberia recalcular fdesde y hdesde. hasta - cantidad de horas de tothor
               If cant_aux > objrsDesgl!desgcantmin Then
                    TotHorHHMM = CHorasSF(objrsDesgl!desgcantmin, 60)
                    Call objFechasHoras.SumoHoras(HCFDesde, HCHDesde, TotHorHHMM, fecres, horres)
                    If Not objFechasHoras.ValidarHora(horres) Then
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 4) & "Hora Invalida " & horres
                        End If
                    End If
                    HCFDesde = fecres
                    HCHDesde = horres
               
               End If
               'FGZ - 06/10/2010 ----------------------------------------------------------
            Else
               TotHor = 0
            End If
        End If
        If (cant_aux >= objrsDesgl!desgcantmax) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = objrsDesgl!desgcantmax - objrsDesgl!desgcantmin
               
               'FGZ - 06/10/2010 ----------------------------------------------------------
               'aca deberia recalcular fhasta y hhasta. desde + cantidad de horas de tothor
               TotHorHHMM = CHorasSF(TotHor, 60)
                Call objFechasHoras.SumoHoras(HCFDesde, HCHDesde, TotHorHHMM, fecres, horres)
                If Not objFechasHoras.ValidarHora(horres) Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 4) & "Hora Invalida " & horres
                    End If
                End If
                HCFHasta = fecres
                HCHHasta = horres
               'FGZ - 06/10/2010 ----------------------------------------------------------
            Else
               TotHor = 0
            End If
        End If
        'FGZ - 29/07/2008 ----
        If ((TotHor > 0) And (TotHor < objrsDesgl!desghoffset)) Then TotHor = 0
        'FGZ - 29/07/2008 ----
        
        ' Chequea si las horas trabajadas estan entre en maximo plus y minimo plus o
        ' si el maximo y minimo son 0, paga el total de horas
        If (objrsDesgl!desghplus = 1) And (objrsDesgl!desghmaxplus = 0 And objrsDesgl!desghminplus = 0) Then
           If (TotHor < objrsDesgl!desghminplus) Then
                 GoTo Continuar
              Else
                 If (TotHor > objrsDesgl!desghmaxplus) Then TotHor = TotHor - objrsDesgl!desghmaxplus
            End If
        End If
        
        If TotHor > 0 Then
            ' Si es plus, se calcula la duración de la hora */
            If (objrsDesgl!desghplus = 1) Then
                TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
            End If
            ' Redondeo del total de horas
            'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
            'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
            'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
            TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
            Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
            TotHorHHMM = "'" & TotHorHHMM & "'"
            
            Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
            Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
            
            If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
            
            'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
            
            'FGZ - 22/03/2011--
            If TotHor > 0 Then
            
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                Fecha_Generacion = p_fecha
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                          "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                          "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                          TotHorHHMM & "," & TotHor & "," & ConvFecha(HCFDesde) & ",' '," & ConvFecha(HCFHasta) & ",'" & HCHDesde & "','" & HCHHasta & "'," & _
                          CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                          ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                          Reg_Ent & ",''," & Reg_Sal & ",''," & _
                          Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
                End If
                
                'FGZ - 12/04/2006 No estaba esto
                'Marcar las registraciones involucradas con el Horario generado
                i = 1
                NoHayMas = False
                Do While i <= UBound(reg) And Not NoHayMas
                    If reg(i).Reg_Ent <> 0 Then
                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        NoHayMas = True
                    End If
                    
                    If reg(i).Reg_Sal <> 0 Then
                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        NoHayMas = True
                    End If
                            
                    i = i + 1
                Loop
            End If
        End If
        
        objrsDesgl.MoveNext
    Loop
    '===============================================================================================================
    
    
    '===============================================================================================================
    'Nueva version de Pago por Cantidad y Franja (AMBAS)
    '-------------------------------------------------------------------
    'Genero los registros del HC, cuando se trata de desglose como Cantidad de Horas y Franja Horaria
    If depurar Then
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 3) & "  Genero los registros del HC, cuando se trata de desglose como Cantidad de Horas y Franja Horaria"
    End If
    Weekdia = Weekday(p_fecha)
    StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
             "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
    OpenRecordset StrSql, objrsDesgl
    If objrsDesgl.EOF Then
        If depurar Then
            GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
        End If
        Exit Sub
    End If
    StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 3 "
    StrSql = StrSql & " ORDER BY desghoradesde,desghplus"
    OpenRecordset StrSql, objrsDesgl
    Do While Not objrsDesgl.EOF
        HCFDesde = p_fecha
        HCFHasta = p_fecha
        
        cant_aux = Sumarizar_Horas_Franja(Cant_Pares, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, objrsDesgl!desghoradesde, objrsDesgl!desghorahasta, HCDesde, HCHasta)
        If (cant_aux < objrsDesgl!desgcantmin) Then TotHor = 0
        If ((cant_aux >= objrsDesgl!desgcantmin) And (cant_aux < objrsDesgl!desgcantmax)) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
                TotHor = cant_aux - objrsDesgl!desgcantmin
                Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFDesde, HCDesde, objrsDesgl!desgcantmin, "+")
                Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFHasta, HCHasta, TotHor, "+")
            Else
               TotHor = 0
            End If
        End If
        If (cant_aux >= objrsDesgl!desgcantmax) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = objrsDesgl!desgcantmax - objrsDesgl!desgcantmin
               Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFHasta, HCHasta, TotHor, "+")
            Else
               TotHor = 0
            End If
        End If
        If ((TotHor > 0) And (TotHor < objrsDesgl!desghoffset)) Then TotHor = 0
        
        'Si es plus, se calcula la duraci¢n de la hora
        If (objrsDesgl!desghplus = 1) Then
           'Hora Plus
           TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
            If (objrsDesgl!desghminplus <> 0) Or (objrsDesgl!desghmaxplus <> 0) Then
                If (TotHor < objrsDesgl!desghminplus) Then
                    TotHor = objrsDesgl!desghminplus
                    Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFHasta, HCHasta, TotHor, "+")
                End If
                If (objrsDesgl!desghmaxplus < TotHor) Then
                    TotHor = objrsDesgl!desghmaxplus
                    Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFHasta, HCHasta, TotHor, "+")
                End If
           End If
        End If

        
        If TotHor > 0 Then
            ' Redondeo del total de horas
            'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
            TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
            Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
            TotHorHHMM = "'" & TotHorHHMM & "'"
            
            Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
            Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
            
            If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
            
            
            'FGZ - 22/03/2011--
            If TotHor > 0 Then
            
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                Fecha_Generacion = p_fecha
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                          "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                          "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                          TotHorHHMM & "," & TotHor & "," & ConvFecha(HCFDesde) & ",' '," & ConvFecha(HCFHasta) & ",'" & HCDesde & "','" & HCHasta & "'," & _
                          CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                          ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                          Reg_Ent & ",''," & Reg_Sal & ",''," & _
                          Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
                End If
                
                
                'Marcar las registraciones involucradas con el Horario generado
                i = 1
                NoHayMas = False
                Do While i <= UBound(reg) And Not NoHayMas
                    If reg(i).Reg_Ent <> 0 Then
                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        NoHayMas = True
                    End If
                    
                    If reg(i).Reg_Sal <> 0 Then
                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        NoHayMas = True
                    End If
                            
                    i = i + 1
                Loop
            End If
        End If
        
        objrsDesgl.MoveNext
    Loop
    '-------------------------------------------------------------------
    

' FGZ - 12/3/2003. Hasta acá modificó Winsy
' ----------------------------------------------------
If depurar Then
    Flog.writeline
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 3) & "Cuando la sumatoria de las horas trabajadas entre las registraciones del empleado es menor a la cantidad de horas"
    Flog.writeline Espacios(Tabulador * 3) & "mínimas, configuradas en el turno, en el HC, debemos generar una anormalidad (faltar horas obligatorias)"
    Flog.writeline Espacios(Tabulador * 3) & "y una entrada en el HC mostrando esto"
    Flog.writeline
End If
'   Cuando la sumatoria de las horas trabajadas entre las registraciones del empleado es menor a la cantidad de horas
'   mínimas, configuradas en el turno, en el HC, debemos generar una anormalidad (faltar horas obligatorias)
'   y una entrada en el HC mostrando esto

'FGZ - 30/07/2007 - Le agregué este control
If Tipo_Turno = 3 Then  'Libre
    If UsaFeriadoConControl And esFeriado Then
       'No debe generar las ausencias
       Exit Sub
    End If
End If
'FGZ - 30/07/2007 - Le agregué este control

   cant_aux = 0
    
    ' AIB - Cambiada el 13/03
   StrSql = "SELECT * FROM gti_config_tur_hor WHERE turnro =" & Nro_Turno & " AND conhornro = 2 "
   'StrSql = "SELECT * FROM gti_config_tur_hor WHERE turnro =" & nro_turno & " AND conhornro = 10 "
   
   
   OpenRecordset StrSql, objRs
    
   If Not objRs.EOF Then
        'cambiado
        'redondeo = objRs!conhredondeo
        redondeo = IIf(Not EsNulo(objRs!conhredondeo), objRs!conhredondeo, 0)
        TipoHora = objRs!thnro
        tipofracc = 0 & objRs!conhfractipo
        cant_aux = sumarizar_horas(Cant_Pares, tipofracc, tipofracc)
'FGZ - 26/02/2009 ---- Cambié esto ---------------
'        'Cambiado
'        'if (PER.gti_turno.tipoturno = 3) and (horas-oblig > cant-aux)
'        StrSql = "SELECT * FROM gti_turno WHERE turnro =" & Nro_Turno
'        OpenRecordset StrSql, rs
'
'        'If (rs!TipoTurno = 3) And (horas_oblig > cant_aux) Then
'        'FGZ - 19/04/2006
'        'se estan olvidando de sumar las horas por justificaciones
'        If (rs!TipoTurno = 3) And (horas_oblig > (cant_aux + Total_Hs_Justificadas)) Then
        If (Tipo_Turno = 3) And (Horas_Oblig > (cant_aux + Total_Hs_Justificadas)) Then
'FGZ - 26/02/2009 ---- Cambié esto ---------------
        
            'TotHor = horas_oblig - cant_aux
            'FGZ - 19/04/2006
            TotHor = Horas_Oblig - (cant_aux + Total_Hs_Justificadas)
            
            'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
            TotHorHHMM = CHorasSF(TotHor, 60)
            Call Redondeo_enHorasMinutos(TotHorHHMM, redondeo, 60, TotHorHHMM)
            TotHorHHMM = "'" & TotHorHHMM & "'"
            
            objFechasHoras.Convertir_A_Hora_cDuracion TotHor, 60, Hora_a_Red
            objFechasHoras.Redondeo_Horas_Tipo2 Hora_a_Red, redondeo, 60, TotHor
            
            
            'Call ValidarTipoDeHora(tipohora, nro_turno, tipo_hora)
            
'            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
'            "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
'            "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
'            TotHor & "," & ConvFecha(p_fecha) & ",' '," & ValorNulo & ",'',''," & _
'            CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & ",5," & _
'            ValorNulo & "," & Empleado.Ternro & "," & TipoHora & "," & Nro_Turno & "," & _
'            ValorNulo & ",''," & ValorNulo & ",''," & _
'            Empleado.Legajo & "," & ConvFecha(p_fecha) & ")"
            
            
            'FGZ - 22/03/2011--
            If TotHor > 0 Then
            
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                Fecha_Generacion = p_fecha
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                
                
                'FGZ - 27/10/2008 - Se le agregó la fecha hasta porque estaba dando error en la pol 480
    '            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
    '            "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
    '            "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
    '            TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
    '            CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & ",3,3," & _
    '            Empleado.Ternro & "," & TipoHora & "," & Nro_Turno & "," & _
    '            ValorNulo & ",''," & ValorNulo & ",''," & _
    '            Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
                CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                Empleado.Ternro & "," & TipoHora & "," & Nro_Turno & "," & _
                ValorNulo & ",''," & ValorNulo & ",''," & _
                Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TipoHora & "- Cantidad: " & TotHor & " hs."
                End If
                
                'FGZ - 12/04/2006 No estaba esto
                'Marcar las registraciones involucradas con el Horario generado
                i = 1
                NoHayMas = False
                Do While i <= UBound(reg) And Not NoHayMas
                    If reg(i).Reg_Ent <> 0 Then
                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        NoHayMas = True
                    End If
                    
                    If reg(i).Reg_Sal <> 0 Then
                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        NoHayMas = True
                    End If
                            
                    i = i + 1
                Loop
            End If
        End If
   End If

    'FGZ - 04/01/2011
    p_fecha = p_fecha_Original

End Sub




Private Sub Generar_Horario_Libre_W()
Dim redondeo As Integer
Dim TipoHora As Integer
Dim Cant_Reg As Integer
Dim CantR As Integer
Dim Cant_Pares As Integer
Dim i As Integer
Dim R As Integer
Dim par1 As String
Dim par2 As String
Dim HDesde As String
Dim HHasta As String
Dim fecpar1 As Date
Dim fecha_hc_desde As Date
Dim fecha_hc_hasta As Date
Dim fecpar2 As Date
Dim anor1 As Integer
Dim anor2 As Integer
Dim Reg_Ent As Long
Dim Reg_Sal As Long
Dim otroDia As Boolean
Dim j As Integer
Dim Weekdia As Byte
Dim objrsDesgl As New ADODB.Recordset
Dim TotHor As Single
Dim TotHor2 As Single
Dim TotHorHHMM As String

'FGZ - 30/08/2006
'Dim nro_desg As Integer
Dim nro_desg As Long

Dim hora_desde_desg As String
Dim hora_hasta_desg As String
Dim Hora_a_Red As String
Dim fecha_desde_desg As Date
Dim fecha_hasta_desg As Date
Dim HCDesde As String
Dim HCHasta As String
Dim cant_aux As Single
Dim CantH_Acum As Single
Dim cant_parcial As Single
Dim horas_max As Single
Dim horas_min As Single
Dim Registro As Long
Dim rs As New ADODB.Recordset
Dim tipofracc As Integer
Dim segunda As Boolean
Dim CubrioElMinimo As Boolean
Dim CantidadDeHorasACubrir As Single
Dim RestoDeHorasCubiertas As Single
Dim SefuedeRango As Boolean
Dim Recalcular As Boolean

'FGZ - 12/04/2006 - Arreglo de registraciones leidas y a marcar como procesadas
Dim reg(1 To 100) As TRegistracionesProcesadas
Dim NoHayMas As Boolean

Dim HCFDesde As Date
Dim HCFHasta As Date

diatipo = 0 'Dia laborable
Cant_Reg = 0
CantR = 1
    
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Version Estandar"
    End If
    
    If esFeriado And Dia_Libre Then
      Call Politica(380)
    ElseIf Dia_Libre Then diatipo = 1
      ElseIf esFeriado Then diatipo = 2
    End If
    ' Marco los pares
    StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 ORDER BY Fecha,hora"
    
    'OpenRecordset StrSql, objrs
    rs.Open StrSql, objConn
    i = 1
    Do While Not rs.EOF
'        objrs.Update objrs.Fields("par"), i
'        objrs.UpdateBatch
        
        Registro = rs!Regnro
        StrSql = "update " & TTempWFTurno & " set par = " & i & " where regnro = " & Registro
        objConn.Execute StrSql, , adExecuteNoRecords
        If CantR Mod 2 = 0 Then i = i + 1
        CantR = CantR + 1
        Cant_Reg = Cant_Reg + 1
        rs.MoveNext
    
    Loop
    'cantr = rs.RecordCount
        
    Cant_Pares = Int(Cant_Reg / 2)
    If Cant_Reg = 1 Then
        ' Se crea un reg. de wf-dia para usar en la política - Con turnos libres wf-dia está vacía */
        'FGZ - 20/04/2007 - saqué esta linea
        'InsertarWFDia Nro_Dia, "", p_fecha
        'FGZ - 20/04/2007 - saqué esta linea
        Call Politica(40)
        objConn.Execute "DELETE FROM " & TTempWFDiaLaboral, , adExecuteNoRecords
        Exit Sub
    End If
    'If cantr Mod 2 <> 0 Then Call Politica(70)
    
    Call buscar_horas_turno(Horas_Oblig, horas_max, horas_min)
    
    'Cambiado
    For i = 1 To Cant_Pares
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par =" & i
        OpenRecordset StrSql, objRs
        If objRs.EOF Then GoTo ProximoPar
        par1 = objRs!Hora
        fecpar1 = objRs!Fecha
        fecha_hc_desde = fecpar1
        Reg_Ent = objRs!Regnro
        
        'FGZ - 12/04/2006 - ojo !!! - si el desgloce es por cantidad de horas hay que guardar los pares anteriores porque acumula antes de guardar
        ' y se pisan los nro de las registraciones a marcar como procesadas
        reg(i).Reg_Ent = objRs!Regnro
        
        'Cambiado
        anor1 = 0 & objRs!anornro
        
        StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & objRs!Regnro & " AND regestado <> 'P'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        objRs.MoveNext
        If objRs.EOF Then GoTo ProximoPar
        
        par2 = objRs!Hora
        fecpar2 = objRs!Fecha
        fecha_hc_hasta = fecpar2
        Reg_Sal = objRs!Regnro
        
        'FGZ - 12/04/2006 - ojo !!! - si el desgloce es por cantidad de horas hay que guardar los pares anteriores porque acumula antes de guardar
        ' y se pisan los nro de las registraciones a marcar como procesadas
        reg(i).Reg_Sal = objRs!Regnro
        
        anor2 = 0 & objRs!anornro
        
        StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & objRs!Regnro & " AND regestado <> 'P'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        If fecpar1 = fecpar2 Then
            HDesde = par1
            HHasta = par2
            otroDia = False
        Else
            HDesde = par1    ' Como las fechas son distintas el desgloce es distinto por cada día */
            HHasta = "2400" ' Genero dos HC uno de par1 hasta 24:00 y el otro de 00:00 a par2 */
            otroDia = True
        End If
        
        For j = 1 To 2 'En el peor de los casos lo hara 2 veces, una por cada día
            'weekdia = Weekday(fecpar1)
            'FGZ - 11/01/2006
            Weekdia = Weekday(p_fecha)
            
            StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
                     "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
            OpenRecordset StrSql, objrsDesgl
            If objrsDesgl.EOF Then
                If depurar Then
                    GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
                End If
                Exit Sub
            End If
            
            StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 2 " & _
                     " ORDER BY desgdnro,desghoradesde"
            OpenRecordset StrSql, objrsDesgl
            Do While Not objrsDesgl.EOF
            
                TotHor = 0
                hora_desde = HDesde
                hora_hasta = HHasta
                nro_desg = objrsDesgl!desghnro
    
    '            ***** Cambio segun lo definido en el desglose de horas ******
    
                 Cambiar_Horas nro_desg, hora_desde_desg, hora_hasta_desg, fecha_desde_desg, fecha_hasta_desg
                 fraccionar_horas fecpar1, hora_desde, hora_hasta, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, hora_desde, hora_hasta
    
                 If (hora_desde_desg < hora_desde) And (hora_desde < hora_hasta_desg And hora_hasta_desg <= hora_hasta) Then
                    '/* Genero HC de hora-desde a desghorahasta */
                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta_desg, Tdias, Thoras, Tmin
                    HCDesde = hora_desde
                    HCHasta = hora_hasta_desg
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                 End If
                 
                 If (hora_desde_desg >= hora_desde And hora_desde_desg < hora_hasta) And (hora_hasta_desg > hora_hasta) Then
                    
                    '/* Genero HC de desghoradesde a hora-hasta */
                    
                    objFechasHoras.RestaHs fecpar1, hora_desde_desg, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                    HCDesde = hora_desde_desg
                    HCHasta = hora_hasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                 End If
                 
                 If (hora_desde_desg >= hora_desde And hora_desde_desg < hora_hasta) And _
                 (hora_hasta_desg <= hora_hasta And hora_hasta_desg > hora_desde) Then
                 
                '/* Genero HC de desghoradesde a desghorahasta */

                    objFechasHoras.RestaHs fecpar1, hora_desde_desg, fecpar1, hora_hasta_desg, Tdias, Thoras, Tmin
                    HCDesde = hora_desde_desg
                    HCHasta = hora_hasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                 
                 End If
                 
                If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
                     
                     '/* Genero HC de hora-desde a hora-hasta */
                    
                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                    HCDesde = hora_desde
                    HCHasta = hora_hasta

                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                 End If
                 
                 If (TotHor = 0) Then GoTo Continuar
                 
                 
'   Si la hora del desglose es no-plus, y la cantidad de horas, sumadas a la cantidad
'   de horas acumuladas, es mayor que la cantidad de horas obligatorias, debe separar
'   la cantidad de horas, en dos registros, uno para la cantidad obligatorias y otra
'   para las horas plus, que no se suman a las horas obligatorias

'   Canth-acum : Indica la cantidad de horas acumuladas, hasta el momento.
                 
                 '/* Si es plus, se calcula la duraci¢n de la hora */
                 If (objrsDesgl!desghplus = 1) Then
                    '/* Hora Plus */
                    TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
                    If (objrsDesgl!desghminplus <> 0) Or (objrsDesgl!desghmaxplus <> 0) Then
                        If (TotHor < objrsDesgl!desghminplus) Then TotHor = objrsDesgl!desghminplus
                        If (objrsDesgl!desghmaxplus < TotHor) Then TotHor = objrsDesgl!desghmaxplus
                    End If
                 End If
                 
                '/* Redondeo del total de horas */
                'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
                'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
                'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
                TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
                Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
                TotHorHHMM = "'" & TotHorHHMM & "'"
                
                Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
                Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
                
                
                If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
                
                Call Politica(540)
                
                If TotHor = 0 Then GoTo Continuar
                'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
                
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                'Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
                Fecha_Generacion = p_fecha
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                         "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                         "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                         TotHorHHMM & "," & TotHor & "," & ConvFecha(fecpar1) & ",' '," & ConvFecha(fecpar1) & ",'" & HCDesde & "','" & _
                         HCHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                         ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                         Reg_Ent & ",'" & IIf(j = 1, par1, "0000") & "'," & Reg_Sal & ",'" & _
                         IIf((j = 2) Or (j = 1 And Not otroDia), par2, "2400") & "'," & Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
                End If
                    
                    
                ' Marcar las registraciones involucradas con el Horario generado
                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Ent
                objConn.Execute StrSql, , adExecuteNoRecords
                    
                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Sal
                objConn.Execute StrSql, , adExecuteNoRecords

Continuar:
                objrsDesgl.MoveNext
            Loop    '/* FOR EACH per.gti_desghora */
            
            
            If fecpar1 = fecpar2 Then
                Exit For
            Else
                hora_desde = "0000"
                HDesde = hora_desde
                hora_hasta = par2
                HHasta = hora_hasta
                fecpar1 = fecpar2
            End If
            
        Next j

ProximoPar:
    Next i
    
    '=========================================================================================================
    'Genero los registros del HC, cuando se trata de desglose como cantidad de horas
    If depurar Then
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 3) & "  Genero los registros del HC, cuando se trata de desglose como cantidad de horas"
    End If
    Weekdia = Weekday(p_fecha)
    StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
             "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
    OpenRecordset StrSql, objrsDesgl
    If objrsDesgl.EOF Then
        If depurar Then
            GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
        End If
        Exit Sub
    End If
    ' Cambiada
    StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 1 " & _
                     " ORDER BY desgdnro,desghoradesde"
    OpenRecordset StrSql, objrsDesgl
    Do While Not objrsDesgl.EOF
        cant_aux = sumarizar_horas(Cant_Pares, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta)
        'If ((cant_aux > 0) And (cant_aux < objrsDesgl!desghoffset)) Then TotHor = 0
        If (cant_aux < objrsDesgl!desgcantmin) Then TotHor = 0
        If ((cant_aux >= objrsDesgl!desgcantmin) And (cant_aux < objrsDesgl!desgcantmax)) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = cant_aux - objrsDesgl!desgcantmin
            Else
               TotHor = 0
            End If
        End If
        If (cant_aux >= objrsDesgl!desgcantmax) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = objrsDesgl!desgcantmax - objrsDesgl!desgcantmin
            Else
               TotHor = 0
            End If
        End If
        'FGZ - 29/07/2008 ----
        If ((TotHor > 0) And (TotHor < objrsDesgl!desghoffset)) Then TotHor = 0
        'FGZ - 29/07/2008 ----
        
        ' Chequea si las horas trabajadas estan entre en maximo plus y minimo plus o
        ' si el maximo y minimo son 0, paga el total de horas
        If (objrsDesgl!desghplus = 1) And (objrsDesgl!desghmaxplus = 0 And objrsDesgl!desghminplus = 0) Then
           If (TotHor < objrsDesgl!desghminplus) Then
                 GoTo Continuar
              Else
                 If (TotHor > objrsDesgl!desghmaxplus) Then TotHor = TotHor - objrsDesgl!desghmaxplus
            End If
        End If
        
        If TotHor > 0 Then
            ' Si es plus, se calcula la duración de la hora */
            If (objrsDesgl!desghplus = 1) Then
                TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
            End If
            ' Redondeo del total de horas
            'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
            'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
            'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
            TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
            Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
            TotHorHHMM = "'" & TotHorHHMM & "'"
            
            Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
            Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
            
            If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
            
            'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
            
            'FGZ - 22/03/2011--
            If TotHor > 0 Then
            
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                Fecha_Generacion = p_fecha
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                          "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                          "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                          TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",''," & ConvFecha(p_fecha) & ",'',''," & _
                          CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                          ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                          Reg_Ent & ",''," & Reg_Sal & ",''," & _
                          Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
                End If
                
                'FGZ - 12/04/2006 No estaba esto
                'Marcar las registraciones involucradas con el Horario generado
                i = 1
                NoHayMas = False
                Do While i <= UBound(reg) And Not NoHayMas
                    If reg(i).Reg_Ent <> 0 Then
                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        NoHayMas = True
                    End If
                    
                    If reg(i).Reg_Sal <> 0 Then
                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        NoHayMas = True
                    End If
                            
                    i = i + 1
                Loop
            End If
        End If
        
        objrsDesgl.MoveNext
    Loop
    
    
    
    'Nueva version de Pago por Cantidad y Franja (AMBAS)
    '-------------------------------------------------------------------
    '-------------------------------------------------------------------
    'Genero los registros del HC, cuando se trata de desglose como Cantidad de Horas y Franja Horaria
    If depurar Then
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 3) & "  Genero los registros del HC, cuando se trata de desglose como Cantidad de Horas y Franja Horaria"
    End If
    Weekdia = Weekday(p_fecha)
    StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
             "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
    OpenRecordset StrSql, objrsDesgl
    If objrsDesgl.EOF Then
        If depurar Then
            GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
        End If
        Exit Sub
    End If
    StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 3 "
    StrSql = StrSql & " ORDER BY desghoradesde,desghplus"
    OpenRecordset StrSql, objrsDesgl
    Do While Not objrsDesgl.EOF
        HCFDesde = p_fecha
        HCFHasta = p_fecha
        
        'Cuenta la cantidad de hs que caen en el desgloce
        cant_aux = Sumarizar_Horas_Franja_Det(Cant_Pares, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, objrsDesgl!desghoradesde, objrsDesgl!desghorahasta, HCDesde, HCHasta)
        'Esta variable  (Indice_Reg) tiene la cantidad de pares de registraciones involucradas en la cantidad de horas que tiene cant_aux
        
        'cant_aux = Sumarizar_Horas_Franja_Par(R, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, objrsDesgl!desghoradesde, objrsDesgl!desghorahasta, HCdesde, HChasta, Reg_Ent, Reg_Sal)
        'cant_aux = Sumarizar_Horas_Franja(Cant_Pares, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, objrsDesgl!desghoradesde, objrsDesgl!desghorahasta, HCdesde, HChasta)
        If (cant_aux < objrsDesgl!desgcantmin) Then TotHor = 0
        If ((cant_aux >= objrsDesgl!desgcantmin) And (cant_aux < objrsDesgl!desgcantmax)) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
                TotHor = cant_aux - objrsDesgl!desgcantmin
                Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFDesde, HCDesde, objrsDesgl!desgcantmin, "+")
                Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFHasta, HCHasta, TotHor, "+")
            Else
               TotHor = 0
            End If
        End If
        If (cant_aux >= objrsDesgl!desgcantmax) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = objrsDesgl!desgcantmax - objrsDesgl!desgcantmin
               Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFHasta, HCHasta, TotHor, "+")
            Else
               TotHor = 0
            End If
        End If
        If ((TotHor > 0) And (TotHor < objrsDesgl!desghoffset)) Then TotHor = 0
        
        'Si es plus, se calcula la duraci¢n de la hora
        If (objrsDesgl!desghplus = 1) Then
           'Hora Plus
           TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
            If (objrsDesgl!desghminplus <> 0) Or (objrsDesgl!desghmaxplus <> 0) Then
                If (TotHor < objrsDesgl!desghminplus) Then
                    TotHor = objrsDesgl!desghminplus
                    Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFHasta, HCHasta, TotHor, "+")
                End If
                If (objrsDesgl!desghmaxplus < TotHor) Then
                    TotHor = objrsDesgl!desghmaxplus
                    Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFHasta, HCHasta, TotHor, "+")
                End If
           End If
        End If

        
        If TotHor > 0 Then
            'FGZ - debo ciclar por todos los pares involucrados
            For R = 1 To Cant_Pares
                If TotHor > 0 Then
                    If Arr_DesgReg(R).hs >= TotHor Then
                        TotHor2 = TotHor
                    Else
                        TotHor2 = Arr_DesgReg(R).hs
                    End If
                    
                    TotHor = TotHor - TotHor2
                    If TotHor2 > 0 Then
                        ' Redondeo del total de horas
                        'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
                        TotHorHHMM = CHorasSF(TotHor2, objrsDesgl!desghdurhora)
                        Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
                        TotHorHHMM = "'" & TotHorHHMM & "'"
                        
                        Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor2, objrsDesgl!desghdurhora, Hora_a_Red)
                        Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor2)
                        
                        If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor2
                        
                        'FGZ - 22/03/2011--
                        If TotHor2 > 0 Then
                        
                            'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                            Fecha_Generacion = p_fecha
                            'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                            
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                                      "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                                      "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                                      TotHorHHMM & "," & TotHor2 & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'" & HCDesde & "','" & HCHasta & "'," & _
                                      CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                                      ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                                      Arr_DesgReg(R).Reg_Ent & ",''," & Arr_DesgReg(R).Reg_Sal & ",''," & _
                                      Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
                            End If
                        End If
                    End If
                End If
            Next R
            
            
            'Marcar las registraciones involucradas con el Horario generado
            i = 1
            NoHayMas = False
            Do While i <= UBound(reg) And Not NoHayMas
                If reg(i).Reg_Ent <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                
                If reg(i).Reg_Sal <> 0 Then
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    NoHayMas = True
                End If
                        
                i = i + 1
            Loop
        End If
        
        objrsDesgl.MoveNext
    Loop
    '-------------------------------------------------------------------
    '-------------------------------------------------------------------

' FGZ - 12/3/2003. Hasta acá modificó Winsy
' ----------------------------------------------------
If depurar Then
    Flog.writeline
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 3) & "Cuando la sumatoria de las horas trabajadas entre las registraciones del empleado es menor a la cantidad de horas"
    Flog.writeline Espacios(Tabulador * 3) & "mínimas, configuradas en el turno, en el HC, debemos generar una anormalidad (faltar horas obligatorias)"
    Flog.writeline Espacios(Tabulador * 3) & "y una entrada en el HC mostrando esto"
    Flog.writeline
End If
'   Cuando la sumatoria de las horas trabajadas entre las registraciones del empleado es menor a la cantidad de horas
'   mínimas, configuradas en el turno, en el HC, debemos generar una anormalidad (faltar horas obligatorias)
'   y una entrada en el HC mostrando esto

'FGZ - 30/07/2007 - Le agregué este control
If Tipo_Turno = 3 Then  'Libre
    If UsaFeriadoConControl And esFeriado Then
       'No debe generar las ausencias
       Exit Sub
    End If
End If
'FGZ - 30/07/2007 - Le agregué este control

   cant_aux = 0
    
    ' AIB - Cambiada el 13/03
   StrSql = "SELECT * FROM gti_config_tur_hor WHERE turnro =" & Nro_Turno & " AND conhornro = 2 "
   'StrSql = "SELECT * FROM gti_config_tur_hor WHERE turnro =" & nro_turno & " AND conhornro = 10 "
   
   
   OpenRecordset StrSql, objRs
    
   If Not objRs.EOF Then
        'cambiado
        'redondeo = objRs!conhredondeo
        redondeo = IIf(Not EsNulo(objRs!conhredondeo), objRs!conhredondeo, 0)
        TipoHora = objRs!thnro
        tipofracc = 0 & objRs!conhfractipo
        cant_aux = sumarizar_horas(Cant_Pares, tipofracc, tipofracc)
'FGZ - 26/02/2009 ---- Cambié esto ---------------
'        'Cambiado
'        'if (PER.gti_turno.tipoturno = 3) and (horas-oblig > cant-aux)
'        StrSql = "SELECT * FROM gti_turno WHERE turnro =" & Nro_Turno
'        OpenRecordset StrSql, rs
'
'        'If (rs!TipoTurno = 3) And (horas_oblig > cant_aux) Then
'        'FGZ - 19/04/2006
'        'se estan olvidando de sumar las horas por justificaciones
'        If (rs!TipoTurno = 3) And (horas_oblig > (cant_aux + Total_Hs_Justificadas)) Then
        If (Tipo_Turno = 3) And (Horas_Oblig > (cant_aux + Total_Hs_Justificadas)) Then
'FGZ - 26/02/2009 ---- Cambié esto ---------------
        
            'TotHor = horas_oblig - cant_aux
            'FGZ - 19/04/2006
            TotHor = Horas_Oblig - (cant_aux + Total_Hs_Justificadas)
            
            'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
            TotHorHHMM = CHorasSF(TotHor, 60)
            Call Redondeo_enHorasMinutos(TotHorHHMM, redondeo, 60, TotHorHHMM)
            TotHorHHMM = "'" & TotHorHHMM & "'"
            
            objFechasHoras.Convertir_A_Hora_cDuracion TotHor, 60, Hora_a_Red
            objFechasHoras.Redondeo_Horas_Tipo2 Hora_a_Red, redondeo, 60, TotHor
            
            
            'Call ValidarTipoDeHora(tipohora, nro_turno, tipo_hora)
            
'            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
'            "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
'            "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
'            TotHor & "," & ConvFecha(p_fecha) & ",' '," & ValorNulo & ",'',''," & _
'            CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & ",5," & _
'            ValorNulo & "," & Empleado.Ternro & "," & TipoHora & "," & Nro_Turno & "," & _
'            ValorNulo & ",''," & ValorNulo & ",''," & _
'            Empleado.Legajo & "," & ConvFecha(p_fecha) & ")"
            
            'FGZ - 27/10/2008 - Se le agregó la fecha hasta porque estaba dando error en la pol 480
            
            'FGZ - 22/03/2011--
            If TotHor > 0 Then
            
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                Fecha_Generacion = p_fecha
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
                CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & ",7,7," & _
                Empleado.Ternro & "," & TipoHora & "," & Nro_Turno & "," & _
                ValorNulo & ",''," & ValorNulo & ",''," & _
                Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TipoHora & "- Cantidad: " & TotHor & " hs."
                End If
                
                'FGZ - 12/04/2006 No estaba esto
                'Marcar las registraciones involucradas con el Horario generado
                i = 1
                NoHayMas = False
                Do While i <= UBound(reg) And Not NoHayMas
                    If reg(i).Reg_Ent <> 0 Then
                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        NoHayMas = True
                    End If
                    
                    If reg(i).Reg_Sal <> 0 Then
                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        NoHayMas = True
                    End If
                            
                    i = i + 1
                Loop
            End If
        End If
   End If
End Sub


Private Sub Generar_Horario_Libre_Detallado()
' ---------------------------------------------------------------------------------------------
' Descripcion: Procedimiento que genera el Horario libre del dia. Custom AGD
'               se generó esta nueva version porque se debe desglozar por cada registracion dada que
'               hay informacion complementaria de contratos asociadas a las horas y que tiene que ver con
'               lo que se debe pagar a cada agencia.
' Autor      :
' Fecha      :
' Ultima Mod.: 09/06/2006
' Descripcion: se generó esta nueva version porque se debe desglozar por cada registracion dada que
'               hay informacion complementaria de contratos asociadas a las horas y que tiene que ver con
'               lo que se debe pagar a cada agencia.
' ---------------------------------------------------------------------------------------------
Dim redondeo As Integer
Dim TipoHora As Integer
Dim Cant_Reg As Integer
Dim CantR As Integer
Dim Cant_Pares As Integer
Dim i As Integer
Dim R As Integer
Dim par1 As String
Dim par2 As String
Dim HDesde As String
Dim HHasta As String
Dim fecpar1 As Date
Dim fecha_hc_desde As Date
Dim fecha_hc_hasta As Date
Dim fecpar2 As Date
Dim anor1 As Integer
Dim anor2 As Integer
Dim Reg_Ent As Long
Dim Reg_Sal As Long
Dim otroDia As Boolean
Dim j As Integer
Dim Weekdia As Byte
Dim objrsDesgl As New ADODB.Recordset
Dim TotHor As Single
Dim TotHor2 As Single
Dim TotHorHHMM As String

'FGZ - 30/08/2006
'Dim nro_desg As Integer
Dim nro_desg As Long

Dim hora_desde_desg As String
Dim hora_hasta_desg As String
Dim Hora_a_Red As String
Dim fecha_desde_desg As Date
Dim fecha_hasta_desg As Date
Dim HCDesde As String
Dim HCHasta As String
Dim cant_aux As Single
Dim CantH_Acum As Single
Dim cant_parcial As Single
Dim horas_max As Single
Dim horas_min As Single
Dim Registro As Long
Dim rs As New ADODB.Recordset
Dim tipofracc As Integer
Dim segunda As Boolean
Dim CubrioElMinimo As Boolean
Dim CantidadDeHorasACubrir As Single
Dim RestoDeHorasCubiertas As Single
Dim SefuedeRango As Boolean
Dim Recalcular As Boolean

'FGZ - 12/04/2006 - Arreglo de registraciones leidas y a marcar como procesadas
Dim reg(1 To 100) As TRegistracionesProcesadas
Dim NoHayMas As Boolean

Dim HCFDesde As Date
Dim HCFHasta As Date

Dim HS_Trabajadas As Single
Dim HS_Pagadas As Single
Dim HS_aCubrir As Single

diatipo = 0 'Dia laborable
Cant_Reg = 0
CantR = 1
    
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Version Detallada por cada par de registraciones."
    End If
    If depurar Then
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 3) & "-----------------------------------------------------------------------------"
        Flog.writeline Espacios(Tabulador * 3) & "Genero los registros del HC, cuando se trata de desglose como Franja Horaria "
        Flog.writeline
    End If
    
    If esFeriado And Dia_Libre Then
      Call Politica(380)
    ElseIf Dia_Libre Then diatipo = 1
      ElseIf esFeriado Then diatipo = 2
    End If
    ' Marco los pares
    StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 ORDER BY Fecha,hora"
    
    'OpenRecordset StrSql, objrs
    rs.Open StrSql, objConn
    i = 1
    Do While Not rs.EOF
'        objrs.Update objrs.Fields("par"), i
'        objrs.UpdateBatch
        
        Registro = rs!Regnro
        StrSql = "update " & TTempWFTurno & " set par = " & i & " where regnro = " & Registro
        objConn.Execute StrSql, , adExecuteNoRecords
        If CantR Mod 2 = 0 Then i = i + 1
        CantR = CantR + 1
        Cant_Reg = Cant_Reg + 1
        rs.MoveNext
    
    Loop
    'cantr = rs.RecordCount
        
    Cant_Pares = Int(Cant_Reg / 2)
    If Cant_Reg = 1 Then
        ' Se crea un reg. de wf-dia para usar en la política - Con turnos libres wf-dia está vacía */
        'FGZ - 20/04/2007 - saqué esta linea
        'InsertarWFDia Nro_Dia, "", p_fecha
        'FGZ - 20/04/2007 - saqué esta linea
        Call Politica(40)
        objConn.Execute "DELETE FROM " & TTempWFDiaLaboral, , adExecuteNoRecords
        Exit Sub
    End If
    'If cantr Mod 2 <> 0 Then Call Politica(70)
    
    Call buscar_horas_turno(Horas_Oblig, horas_max, horas_min)
    
    'Cambiado
    For i = 1 To Cant_Pares
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par =" & i
        OpenRecordset StrSql, objRs
        If objRs.EOF Then GoTo ProximoPar
        par1 = objRs!Hora
        fecpar1 = objRs!Fecha
        fecha_hc_desde = fecpar1
        Reg_Ent = objRs!Regnro
        
        'FGZ - 12/04/2006 - ojo !!! - si el desgloce es por cantidad de horas hay que guardar los pares anteriores porque acumula antes de guardar
        ' y se pisan los nro de las registraciones a marcar como procesadas
        reg(i).Reg_Ent = objRs!Regnro
        
        'Cambiado
        anor1 = 0 & objRs!anornro
        
        StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & objRs!Regnro & " AND regestado <> 'P'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        objRs.MoveNext
        If objRs.EOF Then GoTo ProximoPar
        
        par2 = objRs!Hora
        fecpar2 = objRs!Fecha
        fecha_hc_hasta = fecpar2
        Reg_Sal = objRs!Regnro
        
        'FGZ - 12/04/2006 - ojo !!! - si el desgloce es por cantidad de horas hay que guardar los pares anteriores porque acumula antes de guardar
        ' y se pisan los nro de las registraciones a marcar como procesadas
        reg(i).Reg_Sal = objRs!Regnro
        
        anor2 = 0 & objRs!anornro
        
        StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & objRs!Regnro & " AND regestado <> 'P'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        If fecpar1 = fecpar2 Then
            HDesde = par1
            HHasta = par2
            otroDia = False
        Else
            HDesde = par1    ' Como las fechas son distintas el desgloce es distinto por cada día */
            HHasta = "2400" ' Genero dos HC uno de par1 hasta 24:00 y el otro de 00:00 a par2 */
            otroDia = True
        End If
        
        For j = 1 To 2 'En el peor de los casos lo hara 2 veces, una por cada día
            'weekdia = Weekday(fecpar1)
            'FGZ - 11/01/2006
            Weekdia = Weekday(p_fecha)
            
            StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
                     "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
            OpenRecordset StrSql, objrsDesgl
            If objrsDesgl.EOF Then
                If depurar Then
                    GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
                End If
                Exit Sub
            End If
            
            StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 2 " & _
                     " ORDER BY desgdnro,desghoradesde"
            OpenRecordset StrSql, objrsDesgl
            Do While Not objrsDesgl.EOF
            
                TotHor = 0
                hora_desde = HDesde
                hora_hasta = HHasta
                nro_desg = objrsDesgl!desghnro
    
    '            ***** Cambio segun lo definido en el desglose de horas ******
    
                 Cambiar_Horas nro_desg, hora_desde_desg, hora_hasta_desg, fecha_desde_desg, fecha_hasta_desg
                 fraccionar_horas fecpar1, hora_desde, hora_hasta, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, hora_desde, hora_hasta
    
                 If (hora_desde_desg < hora_desde) And (hora_desde < hora_hasta_desg And hora_hasta_desg <= hora_hasta) Then
                    '/* Genero HC de hora-desde a desghorahasta */
                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta_desg, Tdias, Thoras, Tmin
                    HCDesde = hora_desde
                    HCHasta = hora_hasta_desg
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                 End If
                 
                 If (hora_desde_desg >= hora_desde And hora_desde_desg < hora_hasta) And (hora_hasta_desg > hora_hasta) Then
                    
                    '/* Genero HC de desghoradesde a hora-hasta */
                    
                    objFechasHoras.RestaHs fecpar1, hora_desde_desg, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                    HCDesde = hora_desde_desg
                    HCHasta = hora_hasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                 End If
                 
                 If (hora_desde_desg >= hora_desde And hora_desde_desg < hora_hasta) And _
                 (hora_hasta_desg <= hora_hasta And hora_hasta_desg > hora_desde) Then
                 
                '/* Genero HC de desghoradesde a desghorahasta */

                    objFechasHoras.RestaHs fecpar1, hora_desde_desg, fecpar1, hora_hasta_desg, Tdias, Thoras, Tmin
                    HCDesde = hora_desde_desg
                    HCHasta = hora_hasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                 
                 End If
                 
                If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
                     
                     '/* Genero HC de hora-desde a hora-hasta */
                    
                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                    HCDesde = hora_desde
                    HCHasta = hora_hasta

                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                 End If
                 
                 If (TotHor = 0) Then GoTo Continuar
                 
                 
'   Si la hora del desglose es no-plus, y la cantidad de horas, sumadas a la cantidad
'   de horas acumuladas, es mayor que la cantidad de horas obligatorias, debe separar
'   la cantidad de horas, en dos registros, uno para la cantidad obligatorias y otra
'   para las horas plus, que no se suman a las horas obligatorias

'   Canth-acum : Indica la cantidad de horas acumuladas, hasta el momento.
                 
                 '/* Si es plus, se calcula la duraci¢n de la hora */
                 If (objrsDesgl!desghplus = 1) Then
                    '/* Hora Plus */
                    TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
                    If (objrsDesgl!desghminplus <> 0) Or (objrsDesgl!desghmaxplus <> 0) Then
                        If (TotHor < objrsDesgl!desghminplus) Then TotHor = objrsDesgl!desghminplus
                        If (objrsDesgl!desghmaxplus < TotHor) Then TotHor = objrsDesgl!desghmaxplus
                    End If
                 End If
                 
                '/* Redondeo del total de horas */
                'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
                'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
                'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
                TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
                Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
                TotHorHHMM = "'" & TotHorHHMM & "'"
                
                
                Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
                Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
                
                
                If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
                
                Call Politica(540)
                
                If TotHor = 0 Then GoTo Continuar
                'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
                
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                'Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
                Fecha_Generacion = p_fecha
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                         "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                         "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                         TotHorHHMM & "," & TotHor & "," & ConvFecha(fecpar1) & ",' '," & ConvFecha(fecpar1) & ",'" & HCDesde & "','" & _
                         HCHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                         ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                         Reg_Ent & ",'" & IIf(j = 1, par1, "0000") & "'," & Reg_Sal & ",'" & _
                         IIf((j = 2) Or (j = 1 And Not otroDia), par2, "2400") & "'," & Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
                End If
                    
                    
                ' Marcar las registraciones involucradas con el Horario generado
                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Ent
                objConn.Execute StrSql, , adExecuteNoRecords
                    
                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Sal
                objConn.Execute StrSql, , adExecuteNoRecords

Continuar:
                objrsDesgl.MoveNext
            Loop    '/* FOR EACH per.gti_desghora */
            
            
            If fecpar1 = fecpar2 Then
                Exit For
            Else
                hora_desde = "0000"
                HDesde = hora_desde
                hora_hasta = par2
                HHasta = hora_hasta
                fecpar1 = fecpar2
            End If
            
        Next j

ProximoPar:
    Next i
    
    
    '=========================================================================================================
    'Genero los registros del HC, cuando se trata de desglose como cantidad de horas
    If depurar Then
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 3) & "-------------------------------------------------------------------------------"
        Flog.writeline Espacios(Tabulador * 3) & "Genero los registros del HC, cuando se trata de desglose como cantidad de horas"
        Flog.writeline
    End If
    Weekdia = Weekday(p_fecha)
    StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
             "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
    OpenRecordset StrSql, objrsDesgl
    If objrsDesgl.EOF Then
        If depurar Then
            GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
        End If
        Exit Sub
    End If
    ' Cambiada
    StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 1 " & _
                     " ORDER BY desgdnro,desghoradesde"
    OpenRecordset StrSql, objrsDesgl
    Do While Not objrsDesgl.EOF
        HS_Pagadas = 0
        HS_aCubrir = objrsDesgl!desgcantmin
    
        For R = 1 To Cant_Pares
            HCFDesde = p_fecha
            HCFHasta = p_fecha
            
            'Cuenta la cantidad total de hs (entre todas las registracion) que caen en el desgloce
            'HS_Trabajadas = Sumarizar_Horas_Franja(Cant_Pares, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, objrsDesgl!desghoradesde, objrsDesgl!desghorahasta, HCdesde, HChasta)
            HS_Trabajadas = Sumarizar_Horas_Franja_nueva(Cant_Pares, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, objrsDesgl!desghoradesde, objrsDesgl!desghorahasta, HCDesde, HCHasta)
            'Cuenta la cantidad de hs de la registracion que caen en el desgloce
            cant_aux = Sumarizar_Horas_Franja_Par2(R, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, objrsDesgl!desghoradesde, objrsDesgl!desghorahasta, HCFDesde, HCFHasta, HCDesde, HCHasta, Reg_Ent, Reg_Sal)
            
    
            If (HS_Trabajadas < objrsDesgl!desgcantmin) Then TotHor = 0
            If ((HS_Trabajadas >= objrsDesgl!desgcantmin) And (HS_Trabajadas < objrsDesgl!desgcantmax)) Then
                'dentro del rango
                If (HS_Trabajadas > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
                    If HS_Pagadas >= objrsDesgl!desgcantmax Then
                        TotHor = 0
                    Else
                        If (cant_aux + HS_Pagadas) > objrsDesgl!desgcantmax Then
                            TotHor = objrsDesgl!desgcantmax - HS_Pagadas '(cant_aux + HS_Pagadas) - objrsDesgl!desgcantmax
                        Else
                            TotHor = cant_aux
                        End If
                    End If
                    'If HS_Pagadas = 0 Then
                    '    TotHor = TotHor - objrsDesgl!desgcantmin
                    'End If
                    If HS_aCubrir = 0 Then
                        Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFDesde, HCDesde, objrsDesgl!desgcantmin, "+")
                        Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFHasta, HCHasta, TotHor, "+")
                    End If
                Else
                   TotHor = 0
                End If
            Else
                If (HS_Trabajadas >= objrsDesgl!desgcantmax) Then
                    If (HS_Trabajadas > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
                        If HS_Pagadas >= objrsDesgl!desgcantmax Then
                            TotHor = 0
                        Else
                            If (cant_aux + HS_Pagadas) > objrsDesgl!desgcantmax Then
                                TotHor = objrsDesgl!desgcantmax - HS_Pagadas
                            Else
                                TotHor = cant_aux
                            End If
                        End If
                        If HS_Pagadas = 0 Then
                            TotHor = TotHor - objrsDesgl!desgcantmin
                        End If
                        Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFHasta, HCHasta, TotHor, "+")
                    Else
                       TotHor = 0
                    End If
                Else
                    'No supera el minimo por lo cual no hay que pagarlo
                    TotHor = 0
                End If
            End If
            
            If ((TotHor > 0) And (TotHor < objrsDesgl!desghoffset)) Then TotHor = 0
            If (TotHor < 0) Then TotHor = 0
            
            
            'Si es plus, se calcula la duraci¢n de la hora
            If (objrsDesgl!desghplus = 1) Then
               'Hora Plus
               TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
                If (objrsDesgl!desghminplus <> 0) Or (objrsDesgl!desghmaxplus <> 0) Then
                    If (TotHor < objrsDesgl!desghminplus) Then
                        TotHor = objrsDesgl!desghminplus
                        Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFHasta, HCHasta, TotHor, "+")
                    End If
                    If (objrsDesgl!desghmaxplus < TotHor) Then
                        TotHor = objrsDesgl!desghmaxplus
                        Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFHasta, HCHasta, TotHor, "+")
                    End If
               End If
            End If
            
'            If TotHor > 0 Then
'                If HS_aCubrir > 0 Then
'                    If TotHor > HS_aCubrir Then
'                        HS_Pagadas = HS_Pagadas + TotHor    '(TotHor - HS_aCubrir)
'                        TotHor = TotHor - HS_aCubrir
'                        Call CalcularHC_DesdeyHasta(HCFdesde, HCdesde, HCFdesde, HCdesde, HS_aCubrir, "+")
'                        Call CalcularHC_DesdeyHasta(HCFdesde, HCdesde, HCFhasta, HChasta, TotHor, "+")
'                        HS_aCubrir = 0
'                    Else
'                        HS_Pagadas = HS_Pagadas + TotHor
'                        HS_aCubrir = HS_aCubrir - TotHor
'                        TotHor = 0
'                    End If
'                Else
'                    HS_Pagadas = HS_Pagadas + TotHor
'                End If
'            End If
            
            If TotHor > 0 Then
                
                ' Redondeo del total de horas
                'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
                TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
                Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
                TotHorHHMM = "'" & TotHorHHMM & "'"
                
                Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
                Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
                
                If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
                    
                'FGZ - 05/10/2009 - le agregué este control acá ----------
                If TotHor > 0 Then
                    If HS_aCubrir > 0 Then
                        If TotHor > HS_aCubrir Then
                            HS_Pagadas = HS_Pagadas + TotHor    '(TotHor - HS_aCubrir)
                            TotHor = TotHor - HS_aCubrir
                            Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFDesde, HCDesde, HS_aCubrir, "+")
                            Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFHasta, HCHasta, TotHor, "+")
                            HS_aCubrir = 0
                            
                            TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
                            Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
                            TotHorHHMM = "'" & TotHorHHMM & "'"
                        Else
                            HS_Pagadas = HS_Pagadas + TotHor
                            HS_aCubrir = HS_aCubrir - TotHor
                            TotHor = 0
                        End If
                    Else
                        HS_Pagadas = HS_Pagadas + TotHor
                    End If
                End If
                
                If TotHor > 0 Then
                
                
                    'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                    Fecha_Generacion = p_fecha
                    'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                    
                    StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                              "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                              "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                              TotHorHHMM & "," & TotHor & "," & ConvFecha(HCFDesde) & ",' '," & ConvFecha(HCFHasta) & ",'" & HCDesde & "','" & HCHasta & "'," & _
                              CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                              ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                              Reg_Ent & ",''," & Reg_Sal & ",''," & _
                              Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
                    End If
                    
                    'Marcar las registraciones involucradas con el Horario generado
                    i = 1
                    NoHayMas = False
                    Do While i <= UBound(reg) And Not NoHayMas
                        If reg(i).Reg_Ent <> 0 Then
                            StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                            objConn.Execute StrSql, , adExecuteNoRecords
                        Else
                            NoHayMas = True
                        End If
                        
                        If reg(i).Reg_Sal <> 0 Then
                            StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                            objConn.Execute StrSql, , adExecuteNoRecords
                        Else
                            NoHayMas = True
                        End If
                                
                        i = i + 1
                    Loop
                End If
            End If
        
        Next R
        objrsDesgl.MoveNext
    Loop
   
    
    ' =========================================================================================================
    'Nueva version de Pago por Cantidad y Franja (AMBAS)
    '-------------------------------------------------------------------
    '-------------------------------------------------------------------
    'Genero los registros del HC, cuando se trata de desglose como Cantidad de Horas y Franja Horaria
    If depurar Then
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 3) & "------------------------------------------------------------------------------------------------"
        Flog.writeline Espacios(Tabulador * 3) & "Genero los registros del HC, cuando se trata de desglose como Cantidad de Horas y Franja Horaria"
        Flog.writeline
    End If
    Weekdia = Weekday(p_fecha)
    StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
             "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
    OpenRecordset StrSql, objrsDesgl
    If objrsDesgl.EOF Then
        If depurar Then
            GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
        End If
        Exit Sub
    End If
    StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 3 "
    StrSql = StrSql & " ORDER BY desghoradesde,desghplus"
    OpenRecordset StrSql, objrsDesgl
    
    Do While Not objrsDesgl.EOF
        HS_Pagadas = 0
        HS_aCubrir = objrsDesgl!desgcantmin
    
        For R = 1 To Cant_Pares
            HCFDesde = p_fecha
            HCFHasta = p_fecha
            
            'Cuenta la cantidad total de hs (entre todas las registracion) que caen en el desgloce
            'HS_Trabajadas = Sumarizar_Horas_Franja(Cant_Pares, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, objrsDesgl!desghoradesde, objrsDesgl!desghorahasta, HCdesde, HChasta)
            HS_Trabajadas = Sumarizar_Horas_Franja_nueva(Cant_Pares, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, objrsDesgl!desghoradesde, objrsDesgl!desghorahasta, HCDesde, HCHasta)
            'Cuenta la cantidad de hs de la registracion que caen en el desgloce
            cant_aux = Sumarizar_Horas_Franja_Par2(R, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, objrsDesgl!desghoradesde, objrsDesgl!desghorahasta, HCFDesde, HCFHasta, HCDesde, HCHasta, Reg_Ent, Reg_Sal)
            
    
            If (HS_Trabajadas < objrsDesgl!desgcantmin) Then TotHor = 0
            If ((HS_Trabajadas >= objrsDesgl!desgcantmin) And (HS_Trabajadas < objrsDesgl!desgcantmax)) Then
                'dentro del rango
                If (HS_Trabajadas > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
                    If HS_Pagadas >= objrsDesgl!desgcantmax Then
                        TotHor = 0
                    Else
                        If (cant_aux + HS_Pagadas) > objrsDesgl!desgcantmax Then
                            TotHor = objrsDesgl!desgcantmax - HS_Pagadas '(cant_aux + HS_Pagadas) - objrsDesgl!desgcantmax
                        Else
                            TotHor = cant_aux
                        End If
                    End If
                    'If HS_Pagadas = 0 Then
                    '    TotHor = TotHor - objrsDesgl!desgcantmin
                    'End If
                    If HS_aCubrir = 0 Then
                        Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFDesde, HCDesde, objrsDesgl!desgcantmin, "+")
                        Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFHasta, HCHasta, TotHor, "+")
                    End If
                Else
                   TotHor = 0
                End If
            Else
                If (HS_Trabajadas >= objrsDesgl!desgcantmax) Then
                    If (HS_Trabajadas > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
                        If HS_Pagadas >= objrsDesgl!desgcantmax Then
                            TotHor = 0
                        Else
                            If (cant_aux + HS_Pagadas) > objrsDesgl!desgcantmax Then
                                TotHor = objrsDesgl!desgcantmax - HS_Pagadas
                            Else
                                TotHor = cant_aux
                            End If
                        End If
                        If HS_Pagadas = 0 Then
                            TotHor = TotHor - objrsDesgl!desgcantmin
                        End If
                        Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFHasta, HCHasta, TotHor, "+")
                    Else
                       TotHor = 0
                    End If
                Else
                    'No supera el minimo por lo cual no hay que pagarlo
                    TotHor = 0
                End If
            End If
            
            If ((TotHor > 0) And (TotHor < objrsDesgl!desghoffset)) Then TotHor = 0
            If (TotHor < 0) Then TotHor = 0
            
            
            'Si es plus, se calcula la duraci¢n de la hora
            If (objrsDesgl!desghplus = 1) Then
               'Hora Plus
               TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
                If (objrsDesgl!desghminplus <> 0) Or (objrsDesgl!desghmaxplus <> 0) Then
                    If (TotHor < objrsDesgl!desghminplus) Then
                        TotHor = objrsDesgl!desghminplus
                        Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFHasta, HCHasta, TotHor, "+")
                    End If
                    If (objrsDesgl!desghmaxplus < TotHor) Then
                        TotHor = objrsDesgl!desghmaxplus
                        Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFHasta, HCHasta, TotHor, "+")
                    End If
               End If
            End If
            
'            If TotHor > 0 Then
'                If HS_aCubrir > 0 Then
'                    If TotHor > HS_aCubrir Then
'                        HS_Pagadas = HS_Pagadas + TotHor    '(TotHor - HS_aCubrir)
'                        TotHor = TotHor - HS_aCubrir
'                        Call CalcularHC_DesdeyHasta(HCFdesde, HCdesde, HCFdesde, HCdesde, HS_aCubrir, "+")
'                        Call CalcularHC_DesdeyHasta(HCFdesde, HCdesde, HCFhasta, HChasta, TotHor, "+")
'                        HS_aCubrir = 0
'                    Else
'                        HS_Pagadas = HS_Pagadas + TotHor
'                        HS_aCubrir = HS_aCubrir - TotHor
'                        TotHor = 0
'                    End If
'                Else
'                    HS_Pagadas = HS_Pagadas + TotHor
'                End If
'            End If
            
            If TotHor > 0 Then
                
                ' Redondeo del total de horas
                'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
                TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
                Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
                TotHorHHMM = "'" & TotHorHHMM & "'"
                
                Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
                Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
                
                If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
                
                If TotHor > 0 Then
                    If HS_aCubrir > 0 Then
                        If TotHor > HS_aCubrir Then
                            HS_Pagadas = HS_Pagadas + TotHor    '(TotHor - HS_aCubrir)
                            TotHor = TotHor - HS_aCubrir
                            Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFDesde, HCDesde, HS_aCubrir, "+")
                            Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFHasta, HCHasta, TotHor, "+")
                            HS_aCubrir = 0
                            
                            TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
                            Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
                            TotHorHHMM = "'" & TotHorHHMM & "'"
                        Else
                            HS_Pagadas = HS_Pagadas + TotHor
                            HS_aCubrir = HS_aCubrir - TotHor
                            TotHor = 0
                        End If
                    Else
                        HS_Pagadas = HS_Pagadas + TotHor
                    End If
                End If
                
                
                If TotHor > 0 Then
                    'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                    Fecha_Generacion = p_fecha
                    'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                    
                    StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                              "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                              "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                              TotHorHHMM & "," & TotHor & "," & ConvFecha(HCFDesde) & ",' '," & ConvFecha(HCFHasta) & ",'" & HCDesde & "','" & HCHasta & "'," & _
                              CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                              ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                              Reg_Ent & ",''," & Reg_Sal & ",''," & _
                              Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
                    End If
                    
                    'Marcar las registraciones involucradas con el Horario generado
                    i = 1
                    NoHayMas = False
                    Do While i <= UBound(reg) And Not NoHayMas
                        If reg(i).Reg_Ent <> 0 Then
                            StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                            objConn.Execute StrSql, , adExecuteNoRecords
                        Else
                            NoHayMas = True
                        End If
                        
                        If reg(i).Reg_Sal <> 0 Then
                            StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                            objConn.Execute StrSql, , adExecuteNoRecords
                        Else
                            NoHayMas = True
                        End If
                                
                        i = i + 1
                    Loop
                End If
            End If
        Next R
        objrsDesgl.MoveNext
    Loop
    '-------------------------------------------------------------------
    '-------------------------------------------------------------------
    

' FGZ - 12/3/2003. Hasta acá modificó Winsy
' ----------------------------------------------------
If depurar Then
    Flog.writeline
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 3) & "Cuando la sumatoria de las horas trabajadas entre las registraciones del empleado es menor a la cantidad de horas"
    Flog.writeline Espacios(Tabulador * 3) & "mínimas, configuradas en el turno, en el HC, debemos generar una anormalidad (faltar horas obligatorias)"
    Flog.writeline Espacios(Tabulador * 3) & "y una entrada en el HC mostrando esto"
    Flog.writeline
End If
'   Cuando la sumatoria de las horas trabajadas entre las registraciones del empleado es menor a la cantidad de horas
'   mínimas, configuradas en el turno, en el HC, debemos generar una anormalidad (faltar horas obligatorias)
'   y una entrada en el HC mostrando esto

'FGZ - 30/07/2007 - Le agregué este control
If Tipo_Turno = 3 Then  'Libre
    If UsaFeriadoConControl And esFeriado Then
       'No debe generar las ausencias
       Exit Sub
    End If
End If
'FGZ - 30/07/2007 - Le agregué este control

   cant_aux = 0
    
    ' AIB - Cambiada el 13/03
   StrSql = "SELECT * FROM gti_config_tur_hor WHERE turnro =" & Nro_Turno & " AND conhornro = 2 "
   'StrSql = "SELECT * FROM gti_config_tur_hor WHERE turnro =" & nro_turno & " AND conhornro = 10 "
   
   
   OpenRecordset StrSql, objRs
    
   If Not objRs.EOF Then
        'cambiado
        'redondeo = objRs!conhredondeo
        redondeo = IIf(Not EsNulo(objRs!conhredondeo), objRs!conhredondeo, 0)
        TipoHora = objRs!thnro
        tipofracc = 0 & objRs!conhfractipo
        cant_aux = sumarizar_horas(Cant_Pares, tipofracc, tipofracc)
'FGZ - 26/02/2009 ---- Cambié esto ---------------
'        'Cambiado
'        'if (PER.gti_turno.tipoturno = 3) and (horas-oblig > cant-aux)
'        StrSql = "SELECT * FROM gti_turno WHERE turnro =" & Nro_Turno
'        OpenRecordset StrSql, rs
'
'        'If (rs!TipoTurno = 3) And (horas_oblig > cant_aux) Then
'        'FGZ - 19/04/2006
'        'se estan olvidando de sumar las horas por justificaciones
'        If (rs!TipoTurno = 3) And (horas_oblig > (cant_aux + Total_Hs_Justificadas)) Then
        If (Tipo_Turno = 3) And (Horas_Oblig > (cant_aux + Total_Hs_Justificadas)) Then
'FGZ - 26/02/2009 ---- Cambié esto ---------------
        
            'TotHor = horas_oblig - cant_aux
            'FGZ - 19/04/2006
            TotHor = Horas_Oblig - (cant_aux + Total_Hs_Justificadas)
            
            'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
            TotHorHHMM = CHorasSF(TotHor, 60)
            Call Redondeo_enHorasMinutos(TotHorHHMM, redondeo, 60, TotHorHHMM)
            TotHorHHMM = "'" & TotHorHHMM & "'"
            
            
            objFechasHoras.Convertir_A_Hora_cDuracion TotHor, 60, Hora_a_Red
            objFechasHoras.Redondeo_Horas_Tipo2 Hora_a_Red, redondeo, 60, TotHor
            
            
            'Call ValidarTipoDeHora(tipohora, nro_turno, tipo_hora)
            
'            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
'            "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
'            "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
'            TotHor & "," & ConvFecha(p_fecha) & ",' '," & ValorNulo & ",'',''," & _
'            CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & ",5," & _
'            ValorNulo & "," & Empleado.Ternro & "," & TipoHora & "," & Nro_Turno & "," & _
'            ValorNulo & ",''," & ValorNulo & ",''," & _
'            Empleado.Legajo & "," & ConvFecha(p_fecha) & ")"
            
            'FGZ - 27/10/2008 - Se le agregó la fecha hasta porque estaba dando error en la pol 480
            
            'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
            Fecha_Generacion = p_fecha
            'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
            
            'FGZ - 22/03/2011--
            If TotHor > 0 Then
            
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
                CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & ",7,7," & _
                Empleado.Ternro & "," & TipoHora & "," & Nro_Turno & "," & _
                ValorNulo & ",''," & ValorNulo & ",''," & _
                Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TipoHora & "- Cantidad: " & TotHor & " hs."
                End If
                
                'FGZ - 12/04/2006 No estaba esto
                'Marcar las registraciones involucradas con el Horario generado
                i = 1
                NoHayMas = False
                Do While i <= UBound(reg) And Not NoHayMas
                    If reg(i).Reg_Ent <> 0 Then
                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        NoHayMas = True
                    End If
                    
                    If reg(i).Reg_Sal <> 0 Then
                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        NoHayMas = True
                    End If
                            
                    i = i + 1
                Loop
            End If
        End If
   End If
End Sub




Private Sub Generar_Horario_Libre_3()
' ---------------------------------------------------------------------------------------------
' Descripcion: Procedimiento que genera el Horario libre del dia.
' Autor      :
' Fecha      :
' Ultima Mod.: 09/06/2006
' Descripcion: se generó esta nueva version porque hay problemas en la FP cuando los turnos son trasnoche
'               Ej. Dia Franco  --> Feriado
'                   Dia Feriado --> Feriado
'                   Dia Feriado --> Franco
'                   Dia Feriado --> Dia Normal
'                   Dia Franco  --> Dia Normal
'
'                   FGZ - 27/08/2009
'                   Cambios cuando paga por cantidad de hs. No estaba deduciendo que registraciones estaban involucradas en las hs pagadas
' ---------------------------------------------------------------------------------------------
Dim redondeo As Integer
Dim TipoHora As Integer
Dim Cant_Reg As Integer
Dim CantR As Integer
Dim Cant_Pares As Integer
Dim i As Integer
Dim R As Integer
Dim par1 As String
Dim par2 As String
Dim HDesde As String
Dim HHasta As String
Dim fecpar1 As Date
Dim fecha_hc_desde As Date
Dim fecha_hc_hasta As Date
Dim fecpar2 As Date
Dim anor1 As Integer
Dim anor2 As Integer
Dim Reg_Ent As Long
Dim Reg_Sal As Long
Dim otroDia As Boolean
Dim j As Integer
Dim Weekdia As Byte
Dim objrsDesgl As New ADODB.Recordset
Dim TotHor As Single
Dim TotHorHHMM As String
'FGZ - 30/08/2006
'Dim nro_desg As Integer
Dim nro_desg As Long

Dim hora_desde_desg As String
Dim hora_hasta_desg As String
Dim Hora_a_Red As String
Dim fecha_desde_desg As Date
Dim fecha_hasta_desg As Date
Dim HCDesde As String
Dim HCHasta As String
Dim cant_aux As Single
Dim CantH_Acum As Single
Dim cant_parcial As Single
Dim horas_max As Single
Dim horas_min As Single
Dim Registro As Long
Dim rs As New ADODB.Recordset
Dim tipofracc As Integer
Dim segunda As Boolean
Dim CubrioElMinimo As Boolean
Dim CantidadDeHorasACubrir As Single
Dim RestoDeHorasCubiertas As Single
Dim SefuedeRango As Boolean
Dim Recalcular As Boolean
Dim Cambio_dia As Boolean
Dim EsFeriado2 As Boolean
Dim Dia_Libre2 As Boolean
Dim objFeriado2 As New Feriado

'FGZ - 12/04/2006 - Arreglo de registraciones leidas y a marcar como procesadas
Dim reg(1 To 100) As TRegistracionesProcesadas
Dim NoHayMas As Boolean

diatipo = 0 'Dia laborable
Cant_Reg = 0
CantR = 1
    

    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Version para turnos Nocturnos."
    End If
    If depurar Then
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 3) & "-----------------------------------------------------------------------------"
        Flog.writeline Espacios(Tabulador * 3) & "Genero los registros del HC, cuando se trata de desglose como Franja Horaria "
        Flog.writeline
    End If

    Set objFeriado2.Conexion = objConn
    Set objFeriado2.ConexionTraza = CnTraza
    
    If esFeriado And Dia_Libre Then
      Call Politica(380)
      ElseIf Dia_Libre Then diatipo = 1
      ElseIf esFeriado Then diatipo = 2
    End If
    ' Marco los pares
    StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 ORDER BY Fecha,hora"
    
    'OpenRecordset StrSql, objrs
    rs.Open StrSql, objConn
    i = 1
    Do While Not rs.EOF
'        objrs.Update objrs.Fields("par"), i
'        objrs.UpdateBatch
        
        Registro = rs!Regnro
        StrSql = "update " & TTempWFTurno & " set par = " & i & " where regnro = " & Registro
        objConn.Execute StrSql, , adExecuteNoRecords
        If CantR Mod 2 = 0 Then i = i + 1
        CantR = CantR + 1
        Cant_Reg = Cant_Reg + 1
        rs.MoveNext
    
    Loop
    'cantr = rs.RecordCount
        
    Cant_Pares = Int(Cant_Reg / 2)
    If Cant_Reg = 1 Then
        ' Se crea un reg. de wf-dia para usar en la política - Con turnos libres wf-dia está vacía */
        'InsertarWFDia Nro_Dia, "", p_fecha
        Call Politica(40)
        objConn.Execute "DELETE FROM " & TTempWFDiaLaboral, , adExecuteNoRecords
        Exit Sub
    End If
    'If cantr Mod 2 <> 0 Then Call Politica(70)
    
    Call buscar_horas_turno(Horas_Oblig, horas_max, horas_min)
    
    'Cambiado
    For i = 1 To Cant_Pares
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par =" & i
        OpenRecordset StrSql, objRs
        If objRs.EOF Then GoTo ProximoPar
        par1 = objRs!Hora
        fecpar1 = objRs!Fecha
        fecha_hc_desde = fecpar1
        Reg_Ent = objRs!Regnro
        
        'FGZ - 12/04/2006 - ojo !!! - si el desgloce es por cantidad de horas hay que guardar los pares anteriores porque acumula antes de guardar
        ' y se pisan los nro de las registraciones a marcar como procesadas
        reg(i).Reg_Ent = objRs!Regnro
        
        'Cambiado
        anor1 = 0 & objRs!anornro
        
        StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & objRs!Regnro & " AND regestado <> 'P'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        objRs.MoveNext
        If objRs.EOF Then GoTo ProximoPar
        
        par2 = objRs!Hora
        fecpar2 = objRs!Fecha
        fecha_hc_hasta = fecpar2
        Reg_Sal = objRs!Regnro
        
        'FGZ - 12/04/2006 - ojo !!! - si el desgloce es por cantidad de horas hay que guardar los pares anteriores porque acumula antes de guardar
        ' y se pisan los nro de las registraciones a marcar como procesadas
        reg(i).Reg_Sal = objRs!Regnro
        
        anor2 = 0 & objRs!anornro
        
        StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & objRs!Regnro & " AND regestado <> 'P'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        If fecpar1 = fecpar2 Then
            HDesde = par1
            HHasta = par2
            otroDia = False
        Else
            HDesde = par1    ' Como las fechas son distintas el desgloce es distinto por cada día */
            HHasta = "2400" ' Genero dos HC uno de par1 hasta 24:00 y el otro de 00:00 a par2 */
            otroDia = True
        End If
        
        Weekdia = Weekday(p_fecha)
        Cambio_dia = False
        For j = 1 To 2 'En el peor de los casos lo hara 2 veces, una por cada día
            'FGZ - 09/06/2006
            'le tube que agregar esta condicion porque cuando se trataba de un turno nocturno hacia macanas
            If Cambio_dia Then
                EsFeriado2 = objFeriado2.Feriado(fecpar1, Empleado.Ternro, depurar)
                If EsFeriado2 Then
                    Weekdia = Weekday(fecpar1)
                    diatipo = 2
                Else
                    Dia_Libre2 = EsDiaLibre(fecpar1, Fecha_Inicio, Nro_Turno)
                    If (Dia_Libre And Dia_Libre2) Or (esFeriado And Dia_Libre2) Then
                        Weekdia = Weekday(fecpar1)
                        diatipo = 1
                    Else
                        'FGZ - 23/10/2008 - faltaba esta linea
                        Weekdia = Weekday(fecpar1)
                        diatipo = 0
                    End If
                End If
            End If
            
            StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
                     "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
            OpenRecordset StrSql, objrsDesgl
            If objrsDesgl.EOF Then
                If depurar Then
                    GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
                End If
                Exit Sub
            End If
            
            StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 2 " & _
                     " ORDER BY desgdnro,desghoradesde"
            OpenRecordset StrSql, objrsDesgl
            Do While Not objrsDesgl.EOF
            
                TotHor = 0
                hora_desde = HDesde
                hora_hasta = HHasta
                nro_desg = objrsDesgl!desghnro
    
    '            ***** Cambio segun lo definido en el desglose de horas ******
    
                If diatipo = 2 Then
'                    Cambiar_Horas nro_desg, hora_desde_desg, hora_hasta_desg, fecha_desde_desg, fecha_hasta_desg
'                    fraccionar_horas fecpar1, hora_desde, hora_hasta, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, hora_desde, hora_hasta

                    Call Cambiar_Horas_Desde2(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_dia, fecpar1)
                    Call Cambiar_Horas_hasta2(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_dia, fecpar1)
                    'OJO !! cuando la FP es relativa y va de posterior a la salida y anterior a la entrada
                    ' tiene problemas con los turnos nocturnos ya que la salida pasa de dia ==>
                    'hay que hacer el control desde afuera y pasar de dia al calculo de la fecha hasta
                    If objFechasHoras.Menor_Hora(fecha_hasta_desg, hora_hasta_desg, fecha_desde_desg, hora_desde_desg) Then
                        fecha_hasta_desg = DateAdd("d", 1, fecha_hasta_desg)
                    End If
                    Call fraccionar_horas(fecpar1, hora_desde, hora_hasta, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, hora_desde, hora_hasta)
                Else
                    If Cambio_dia Then
                        Call Cambiar_Horas_Desde2(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_dia, fecpar1)
                        Call Cambiar_Horas_hasta2(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_dia, fecpar1)
                        'OJO !! cuando la FP es relativa y va de posterior a la salida y anterior a la entrada
                        ' tiene problemas con los turnos nocturnos ya que la salida pasa de dia ==>
                        'hay que hacer el control desde afuera y pasar de dia al calculo de la fecha hasta
                        If objFechasHoras.Menor_Hora(fecha_hasta_desg, hora_hasta_desg, fecha_desde_desg, hora_desde_desg) Then
                            fecha_hasta_desg = DateAdd("d", 1, fecha_hasta_desg)
                        End If
                        Call fraccionar_horas(fecpar1, hora_desde, hora_hasta, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, hora_desde, hora_hasta)
                    Else
                        Call Cambiar_Horas_Desde(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_dia)
                        Call Cambiar_Horas_hasta(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_dia)
                    End If
                End If
    
    
    
    
    
                'Desgloce   [---------------]
                'Horario          (----------------)
                If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                    objFechasHoras.RestaHs fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                    HCDesde = hora_desde
                    HCHasta = hora_hasta_desg
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
                'Desgloce       [---------------]
                'Horario    (----------------)
                If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                    objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                    HCDesde = hora_desde_desg
                    HCHasta = hora_hasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
                
                'Desgloce       [---------------]
                'Horario    (-----------------------)
                If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_desde) Then
                    objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                    HCDesde = hora_desde_desg
                    HCHasta = hora_hasta_desg
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
                'Desgloce   [---------------]
                'Horario        (--------)
                If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                'If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                    HCDesde = hora_desde
                    HCHasta = hora_hasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
    
                 '--------------------------------------------------------------------------
                 '*************************************************************************
                 '--------------------------------------------------------------------------
'                 If (hora_desde_desg < hora_desde) And (hora_desde < hora_hasta_desg And hora_hasta_desg <= hora_hasta) Then
'                    '/* Genero HC de hora-desde a desghorahasta */
'                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta_desg, tdias, thoras, tmin
'                    hcdesde = hora_desde
'                    hchasta = hora_hasta_desg
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                 End If
'
'                 If (hora_desde_desg >= hora_desde And hora_desde_desg < hora_hasta) And (hora_hasta_desg > hora_hasta) Then
'
'                    '/* Genero HC de desghoradesde a hora-hasta */
'
'                    objFechasHoras.RestaHs fecpar1, hora_desde_desg, fecpar1, hora_hasta, tdias, thoras, tmin
'                    hcdesde = hora_desde_desg
'                    hchasta = hora_hasta
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                 End If
'
'                 If (hora_desde_desg >= hora_desde And hora_desde_desg < hora_hasta) And _
'                 (hora_hasta_desg <= hora_hasta And hora_hasta_desg > hora_desde) Then
'
'                '/* Genero HC de desghoradesde a desghorahasta */
'
'                    objFechasHoras.RestaHs fecpar1, hora_desde_desg, fecpar1, hora_hasta_desg, tdias, thoras, tmin
'                    hcdesde = hora_desde_desg
'                    hchasta = hora_hasta
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'
'                 End If
'
'                If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
'
'                     '/* Genero HC de hora-desde a hora-hasta */
'
'                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, tdias, thoras, tmin
'                    hcdesde = hora_desde
'                    hchasta = hora_hasta
'
'                    TotHor = (tdias * 24) + (thoras + (tmin / 60))
'                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo continuar
'                 End If
                 '--------------------------------------------------------------------------
                 '*************************************************************************
                 '--------------------------------------------------------------------------
                 
                 
                 If (TotHor = 0) Then GoTo Continuar
                 
                 
'   Si la hora del desglose es no-plus, y la cantidad de horas, sumadas a la cantidad
'   de horas acumuladas, es mayor que la cantidad de horas obligatorias, debe separar
'   la cantidad de horas, en dos registros, uno para la cantidad obligatorias y otra
'   para las horas plus, que no se suman a las horas obligatorias

'   Canth-acum : Indica la cantidad de horas acumuladas, hasta el momento.
                 
                 '/* Si es plus, se calcula la duraci¢n de la hora */
                 If (objrsDesgl!desghplus = 1) Then
                    '/* Hora Plus */
                    TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
                    If (objrsDesgl!desghminplus <> 0) Or (objrsDesgl!desghmaxplus <> 0) Then
                        If (TotHor < objrsDesgl!desghminplus) Then TotHor = objrsDesgl!desghminplus
                        If (objrsDesgl!desghmaxplus < TotHor) Then TotHor = objrsDesgl!desghmaxplus
                    End If
                 End If
                 
                '/* Redondeo del total de horas */
                'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
                'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
                'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
                TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
                Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
                TotHorHHMM = "'" & TotHorHHMM & "'"
                
                Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
                Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
                
                
                If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
                
                Call Politica(540)
                
                If TotHor = 0 Then GoTo Continuar
                'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
                
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                Fecha_Generacion = p_fecha
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                         "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                         "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                         TotHorHHMM & "," & TotHor & "," & ConvFecha(fecpar1) & ",' '," & ConvFecha(fecpar1) & ",'" & HCDesde & "','" & _
                         HCHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                         ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                         Reg_Ent & ",'" & IIf(j = 1, par1, "0000") & "'," & Reg_Sal & ",'" & _
                         IIf((j = 2) Or (j = 1 And Not otroDia), par2, "2400") & "'," & Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
                End If
                    
                    
                ' Marcar las registraciones involucradas con el Horario generado
                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Ent
                objConn.Execute StrSql, , adExecuteNoRecords
                    
                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Sal
                objConn.Execute StrSql, , adExecuteNoRecords

Continuar:
                objrsDesgl.MoveNext
            Loop    '/* FOR EACH per.gti_desghora */
            
            
            If fecpar1 = fecpar2 Then
                Exit For
            Else
                hora_desde = "0000"
                HDesde = hora_desde
                hora_hasta = par2
                HHasta = hora_hasta
                fecpar1 = fecpar2
                Cambio_dia = True
            End If
            
        Next j

ProximoPar:
    
    Next i
    
    'Genero los registros del HC, cuando se trata de desglose como cantidad de horas
    If depurar Then
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 3) & "-------------------------------------------------------------------------------"
        Flog.writeline Espacios(Tabulador * 3) & "Genero los registros del HC, cuando se trata de desglose como cantidad de horas"
        Flog.writeline
    End If
    
    Weekdia = Weekday(p_fecha)
    StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
             "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
    OpenRecordset StrSql, objrsDesgl
    If objrsDesgl.EOF Then
        If depurar Then
            GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
        End If
        Exit Sub
    End If
    ' Cambiada
    StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 1 " & _
                     " ORDER BY desgdnro,desghoradesde"
    OpenRecordset StrSql, objrsDesgl
    Do While Not objrsDesgl.EOF
        cant_aux = sumarizar_horas(Cant_Pares, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta)
        If (cant_aux < objrsDesgl!desgcantmin) Then TotHor = 0
        If ((cant_aux >= objrsDesgl!desgcantmin) And (cant_aux < objrsDesgl!desgcantmax)) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = cant_aux - objrsDesgl!desgcantmin
            Else
               TotHor = 0
            End If
        End If
        If (cant_aux >= objrsDesgl!desgcantmax) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = objrsDesgl!desgcantmax - objrsDesgl!desgcantmin
            Else
               TotHor = 0
            End If
        End If
        'FGZ - 29/07/2008 ----
        If ((TotHor > 0) And (TotHor < objrsDesgl!desghoffset)) Then TotHor = 0
        'FGZ - 29/07/2008 ----
        
        ' Chequea si las horas trabajadas estan entre en maximo plus y minimo plus o
        ' si el maximo y minimo son 0, paga el total de horas
        If (objrsDesgl!desghplus = 1) And (objrsDesgl!desghmaxplus = 0 And objrsDesgl!desghminplus = 0) Then
           If (TotHor < objrsDesgl!desghminplus) Then
                 GoTo Continuar
              Else
                 If (TotHor > objrsDesgl!desghmaxplus) Then TotHor = TotHor - objrsDesgl!desghmaxplus
            End If
        End If
        If TotHor > 0 Then
            ' Si es plus, se calcula la duración de la hora */
            If (objrsDesgl!desghplus = 1) Then
                TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
            End If
            ' Redondeo del total de horas
            'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
            'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
            'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
            TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
            Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
            TotHorHHMM = "'" & TotHorHHMM & "'"
            
            Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
            Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
            
            
            If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
            
            'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
            
            'FGZ - 22/03/2011--
            If TotHor > 0 Then
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                Fecha_Generacion = p_fecha
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                          "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                          "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                          TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
                          CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                          ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                          Reg_Ent & ",''," & Reg_Sal & ",''," & _
                          Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
                End If
                
                'FGZ - 12/04/2006 No estaba esto
                'Marcar las registraciones involucradas con el Horario generado
                i = 1
                NoHayMas = False
                Do While i <= UBound(reg) And Not NoHayMas
                    If reg(i).Reg_Ent <> 0 Then
                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        NoHayMas = True
                    End If
                    
                    If reg(i).Reg_Sal <> 0 Then
                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        NoHayMas = True
                    End If
                            
                    i = i + 1
                Loop
            End If
        End If
        
        objrsDesgl.MoveNext
    Loop
    '=================================================================================================
    
    '=================================================================================================
    'Genero los registros del HC, cuando se trata de desglose como Cantidad de Horas y Franja Horaria
    If depurar Then
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 3) & "------------------------------------------------------------------------------------------------"
        Flog.writeline Espacios(Tabulador * 3) & "Genero los registros del HC, cuando se trata de desglose como Cantidad de Horas y Franja Horaria"
        Flog.writeline
    End If
    
    Weekdia = Weekday(p_fecha)
    StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
             "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
    OpenRecordset StrSql, objrsDesgl
    If objrsDesgl.EOF Then
        If depurar Then
            GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
        End If
        Exit Sub
    End If
    StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 3 " & _
                     " ORDER BY desghoradesde,desghplus"
    OpenRecordset StrSql, objrsDesgl
    Do While Not objrsDesgl.EOF ' do 1
        cant_parcial = 0
        
' AIB - 3/1/2003. A partir de acá cambio
' Dejo todo como el fuente de Progress

' ----------------------------------------------------
' FGZ - 12/3/2003. A partir de acá modificó Winsy
        cant_parcial = sumarizar_horas(Cant_Pares, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta)
        If cant_parcial >= objrsDesgl!desghoffset Then
        
            If (cant_parcial >= objrsDesgl!desgcantmin And cant_parcial <= objrsDesgl!desgcantmax) Then
                
                ' saltar las registraciones hasta cubrir el minimo
                StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2"
                OpenRecordset StrSql, objRs
                
                CubrioElMinimo = False
                CantidadDeHorasACubrir = objrsDesgl!desgcantmin
                SefuedeRango = False
                
                Do While Not objRs.EOF And Not CubrioElMinimo And Not SefuedeRango
                
                    If (objRs!Hora >= objrsDesgl!desghoradesde And objRs!Fecha = p_fecha) And _
                    (objRs!Hora <= objrsDesgl!desghorahasta) Then
                        hora_desde_desg = objRs!Hora
                        fecha_desde_desg = objRs!Fecha
                    End If
                
                    If (objRs!Hora < objrsDesgl!desghoradesde) Or _
                     (objRs!Hora > objrsDesgl!desghoradesde And objRs!Fecha < p_fecha) Then
                        hora_desde_desg = objRs!Hora
                        fecha_desde_desg = objRs!Fecha
                    End If
                
                    'Me muevo al proximo par
                    'FGZ - 20/10/2008 - le agregué este control
                    If Not objRs.EOF Then
                        objRs.MoveNext
                    Else
                        Exit Do
                    End If
                    'If objRs.EOF Then Exit Do
                    
                    If objRs!Hora <= objrsDesgl!desghorahasta And objRs!Fecha = p_fecha Then
                        hora_hasta_desg = objRs!Hora
                        fecha_hasta_desg = objRs!Fecha
                    End If
                    
                    If (objRs!Hora >= objrsDesgl!desghorahasta And objRs!Fecha = p_fecha) Then
                        hora_hasta_desg = objrsDesgl!desghorahasta
                        fecha_hasta_desg = objRs!Fecha
                        SefuedeRango = True
                    End If
                    
                    If (objRs!Hora < objrsDesgl!desghorahasta And p_fecha < objRs!Fecha) Then
                        If (objrsDesgl!desgcantmax > 24 And objrsDesgl!desghorahasta = "2400") Then
                            hora_hasta_desg = objRs!Hora
                            fecha_hasta_desg = objRs!Fecha
                        Else
                            hora_hasta_desg = objrsDesgl!desghorahasta
                            fecha_hasta_desg = p_fecha
                            SefuedeRango = True
                        End If
                    End If
                    
                    
                    If hora_desde_desg <> "" And hora_hasta_desg <> "" Then
                        objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        If TotHor > CantidadDeHorasACubrir Then
                            RestoDeHorasCubiertas = TotHor - CantidadDeHorasACubrir
                            CantidadDeHorasACubrir = 0
                        Else
                            CantidadDeHorasACubrir = CantidadDeHorasACubrir - TotHor
                            RestoDeHorasCubiertas = 0
                        End If
                        
                        ' reviso si las horas restantes me sirven, es decir estan en el rango
                        '  en el que se pagan o hay que recalcularlas
                        
                        If CantidadDeHorasACubrir <= 0 Then
                            CubrioElMinimo = True
                            Recalcular = False
                            If RestoDeHorasCubiertas > 0 Then
                                If objrsDesgl!desghoradesde > hora_desde_desg Then
                                    hora_desde_desg = objrsDesgl!desghoradesde
                                    Recalcular = True
                                End If
                                            
                                If objrsDesgl!desghorahasta < hora_hasta_desg Then
                                    hora_hasta_desg = objrsDesgl!desghorahasta
                                    Recalcular = True
                                End If
                                
                                If Recalcular Then
                                    If hora_desde_desg > hora_hasta_desg Then
                                        TotHor = 0
                                        RestoDeHorasCubiertas = TotHor
                                    Else
                                        objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                                        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                                        RestoDeHorasCubiertas = TotHor
                                    End If
                                End If
                            End If
                            
                        End If
                
                    Else
                        SefuedeRango = True
                    End If
                
                    If Not CubrioElMinimo Then
                        'FGZ - 20/10/2008 - le agregué este control
                        If Not objRs.EOF Then
                            objRs.MoveNext
                        End If
                    End If
                Loop
                
                
                If Not CubrioElMinimo Then
                   ' no pago nada
                Else
                    If RestoDeHorasCubiertas > 0 Then
                        TotHor = RestoDeHorasCubiertas
                        '/* Redondeo del total de horas */
                        'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
                        'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
                        'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
                        TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
                        Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
                        TotHorHHMM = "'" & TotHorHHMM & "'"
                        
                        Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
                        Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)



                        If TotHor > 0 Then
                          'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
                          
                        'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                        Fecha_Generacion = p_fecha
                        'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                          
                          StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                              "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                              "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                              TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
                              CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                              ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                              Reg_Ent & ",''," & Reg_Sal & ",''," & _
                              Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                          objConn.Execute StrSql, , adExecuteNoRecords
                          If depurar Then
                             Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
                          End If
                          
                        'FGZ - 12/04/2006 No estaba esto
                        'Marcar las registraciones involucradas con el Horario generado
                        i = 1
                        NoHayMas = False
                        Do While i <= UBound(reg) And Not NoHayMas
                            If reg(i).Reg_Ent <> 0 Then
                                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                                objConn.Execute StrSql, , adExecuteNoRecords
                            Else
                                NoHayMas = True
                            End If
                            
                            If reg(i).Reg_Sal <> 0 Then
                                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                                objConn.Execute StrSql, , adExecuteNoRecords
                            Else
                                NoHayMas = True
                            End If
                                    
                            i = i + 1
                        Loop
                          
                        End If
                    End If
                    
                    If SefuedeRango Then
                        GoTo SiguienteFH
                    Else
                    
                        ' continuo analizando las registraciones dentro del rango
                        SefuedeRango = False
                        'FGZ - 20/10/2008 - le agregué este control
                        If Not objRs.EOF Then
                            objRs.MoveNext
                        End If
                        Do While Not objRs.EOF And Not SefuedeRango
                            hora_desde_desg = ""
                            hora_hasta_desg = ""
                            If (objRs!Hora >= objrsDesgl!desghoradesde And objRs!Fecha = p_fecha) And _
                            (objRs!Hora <= objrsDesgl!desghorahasta) Then
                                hora_desde_desg = objRs!Hora
                                fecha_desde_desg = objRs!Fecha
                            End If
                        
                            If (objRs!Hora < objrsDesgl!desghoradesde) Or _
                             (objRs!Hora > objrsDesgl!desghoradesde And objRs!Fecha < p_fecha) Then
                                hora_desde_desg = objrsDesgl!desghoradesde
                                fecha_desde_desg = objRs!Fecha
                            End If
                        
                            
                            ' Me muevo al proximo par
                            'FGZ - 20/10/2008 - le agregué este control
                            If Not objRs.EOF Then
                                objRs.MoveNext
                            Else
                                Exit Do
                            End If
                            'If objRs.EOF Then Exit Do
                            
                            If (objRs!Hora >= objrsDesgl!desghoradesde And objRs!Fecha = p_fecha) And _
                            (objRs!Hora <= objrsDesgl!desghorahasta) Then
                                hora_hasta_desg = objRs!Hora
                                fecha_hasta_desg = objRs!Fecha
                            End If
                            
                            If (objRs!Hora > objrsDesgl!desghorahasta And p_fecha = objRs!Fecha) Then
                                hora_hasta_desg = objrsDesgl!desghorahasta
                                fecha_hasta_desg = p_fecha
                                SefuedeRango = True
                            End If
                            
                            If (objRs!Hora < objrsDesgl!desghorahasta And p_fecha < objRs!Fecha) Then
                                If (objrsDesgl!desgcantmax > 24 And objrsDesgl!desghorahasta = "2400") Then
                                    hora_hasta_desg = objRs!Hora
                                    fecha_hasta_desg = objRs!Fecha
                                Else
                                    hora_hasta_desg = objrsDesgl!desghorahasta
                                    fecha_hasta_desg = p_fecha
                                    SefuedeRango = True
                                End If
                            End If
                        
                            If hora_desde_desg <> "" And hora_hasta_desg <> "" Then
                                objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                            Else
                                SefuedeRango = True
                                TotHor = 0
                            End If
                        

                            '/* Redondeo del total de horas */
                            'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
                            'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
                            'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
                            TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
                            Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
                            TotHorHHMM = "'" & TotHorHHMM & "'"
                            
                            Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
                            Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
                            
                            If TotHor > 0 Then
                                'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
                                
                                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                                Fecha_Generacion = p_fecha
                                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                                
                                
                                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                                    "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                                    "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                                    TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
                                    CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                                    ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                                    Reg_Ent & ",''," & Reg_Sal & ",''," & _
                                    Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                                objConn.Execute StrSql, , adExecuteNoRecords
                                If depurar Then
                                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
                                End If
                                
                                'FGZ - 12/04/2006 No estaba esto
                                'Marcar las registraciones involucradas con el Horario generado
                                i = 1
                                NoHayMas = False
                                Do While i <= UBound(reg) And Not NoHayMas
                                    If reg(i).Reg_Ent <> 0 Then
                                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                                        objConn.Execute StrSql, , adExecuteNoRecords
                                    Else
                                        NoHayMas = True
                                    End If
                                    
                                    If reg(i).Reg_Sal <> 0 Then
                                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                                        objConn.Execute StrSql, , adExecuteNoRecords
                                    Else
                                        NoHayMas = True
                                    End If
                                            
                                    i = i + 1
                                Loop
                                
                            End If
                                                    
                            If Not objRs.EOF Then
                                objRs.MoveNext
                            End If
                        Loop
                    End If
                End If
            End If
      End If
        
SiguienteFH:
       objrsDesgl.MoveNext
    Loop  ' loop 1

' FGZ - 12/3/2003. Hasta acá modificó Winsy
' ----------------------------------------------------
If depurar Then
    Flog.writeline
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 3) & "Cuando la sumatoria de las horas trabajadas entre las registraciones del empleado es menor a la cantidad de horas"
    Flog.writeline Espacios(Tabulador * 3) & "mínimas, configuradas en el turno, en el HC, debemos generar una anormalidad (faltar horas obligatorias)"
    Flog.writeline Espacios(Tabulador * 3) & "y una entrada en el HC mostrando esto"
    Flog.writeline
End If
'   Cuando la sumatoria de las horas trabajadas entre las registraciones del empleado es menor a la cantidad de horas
'   mínimas, configuradas en el turno, en el HC, debemos generar una anormalidad (faltar horas obligatorias)
'   y una entrada en el HC mostrando esto

'FGZ - 30/07/2007 - Le agregué este control
If Tipo_Turno = 3 Then  'Libre
    If UsaFeriadoConControl And esFeriado Then
       'No debe generar las ausencias
       Exit Sub
    End If
End If
'FGZ - 30/07/2007 - Le agregué este control



   cant_aux = 0
    
    ' AIB - Cambiada el 13/03
   StrSql = "SELECT * FROM gti_config_tur_hor WHERE turnro =" & Nro_Turno & " AND conhornro = 2 "
   'StrSql = "SELECT * FROM gti_config_tur_hor WHERE turnro =" & nro_turno & " AND conhornro = 10 "
   
   
   OpenRecordset StrSql, objRs
    
   If Not objRs.EOF Then
        'cambiado
        'redondeo = objRs!conhredondeo
        redondeo = IIf(Not EsNulo(objRs!conhredondeo), objRs!conhredondeo, 0)
        TipoHora = objRs!thnro
        tipofracc = 0 & objRs!conhfractipo
        cant_aux = sumarizar_horas(Cant_Pares, tipofracc, tipofracc)
        
        
'FGZ - 26/02/2009 ---- Cambié esto ---------------
'        'Cambiado
'        'if (PER.gti_turno.tipoturno = 3) and (horas-oblig > cant-aux)
'        StrSql = "SELECT * FROM gti_turno WHERE turnro =" & Nro_Turno
'        OpenRecordset StrSql, rs
'
'        'If (rs!TipoTurno = 3) And (horas_oblig > cant_aux) Then
'        'FGZ - 19/04/2006
'        'se estan olvidando de sumar las horas por justificaciones
'        'If (rs!TipoTurno = 3) And (horas_oblig > (cant_aux + Total_Hs_Justificadas)) Then
        If (Tipo_Turno = 3) And (Horas_Oblig > (cant_aux + Total_Hs_Justificadas)) Then
'FGZ - 26/02/2009 ---- Cambié esto ---------------
            'TotHor = horas_oblig - cant_aux
            'FGZ - 19/04/2006
            TotHor = Horas_Oblig - (cant_aux + Total_Hs_Justificadas)
            
            'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
            TotHorHHMM = CHorasSF(TotHor, 60)
            Call Redondeo_enHorasMinutos(TotHorHHMM, redondeo, 60, TotHorHHMM)
            TotHorHHMM = "'" & TotHorHHMM & "'"
            
            objFechasHoras.Convertir_A_Hora_cDuracion TotHor, 60, Hora_a_Red
            objFechasHoras.Redondeo_Horas_Tipo2 Hora_a_Red, redondeo, 60, TotHor
            
            'Call ValidarTipoDeHora(tipohora, nro_turno, tipo_hora)
            
'            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
'            "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
'            "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
'            TotHor & "," & ConvFecha(p_fecha) & ",' '," & ValorNulo & ",'',''," & _
'            CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & ",5," & _
'            ValorNulo & "," & Empleado.Ternro & "," & TipoHora & "," & Nro_Turno & "," & _
'            ValorNulo & ",''," & ValorNulo & ",''," & _
'            Empleado.Legajo & "," & ConvFecha(p_fecha) & ")"
            
            'FGZ - 27/10/2008 - Se le agregó la fecha hasta porque sino daba error en la pol 480
            
            'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
            Fecha_Generacion = p_fecha
            'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
            
            'FGZ - 22/03/2011--
            If TotHor > 0 Then
            
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
                CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & ",7,7," & _
                Empleado.Ternro & "," & TipoHora & "," & Nro_Turno & "," & _
                ValorNulo & ",''," & ValorNulo & ",''," & _
                Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TipoHora & "- Cantidad: " & TotHor & " hs."
                End If
                
                'FGZ - 12/04/2006 No estaba esto
                'Marcar las registraciones involucradas con el Horario generado
                i = 1
                NoHayMas = False
                Do While i <= UBound(reg) And Not NoHayMas
                    If reg(i).Reg_Ent <> 0 Then
                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        NoHayMas = True
                    End If
                    
                    If reg(i).Reg_Sal <> 0 Then
                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        NoHayMas = True
                    End If
                            
                    i = i + 1
                Loop
            End If
        End If
   End If
End Sub






Private Sub Generar_Horario_Libre_C1()
' ---------------------------------------------------------------------------------------------
' Descripcion: Version para Halliburton.
' Autor      : FGZ
' Fecha      : 01/11/2004
' Ultima Mod.: 01/11/2004
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim redondeo As Integer
Dim TipoHora As Integer
Dim Cant_Reg As Integer
Dim CantR As Integer
Dim Cant_Pares As Integer
Dim i As Integer
Dim R As Integer
Dim par1 As String
Dim par2 As String
Dim HDesde As String
Dim HHasta As String
Dim hDesde_lab As String
Dim hHasta_lab As String
Dim fecpar1 As Date
Dim fecha_hc_desde As Date
Dim fecha_hc_hasta As Date
Dim fecpar2 As Date
Dim anor1 As Integer
Dim anor2 As Integer
Dim Reg_Ent As Long
Dim Reg_Sal As Long
Dim otroDia As Boolean
Dim j As Integer
Dim Weekdia As Byte
Dim TotHor As Single
Dim TotHorHHMM As String
'FGZ - 30/08/2006
'Dim nro_desg As Integer
Dim nro_desg As Long

Dim hora_desde_desg As String
Dim hora_hasta_desg As String
Dim Hora_a_Red As String
Dim fecha_desde_desg As Date
Dim fecha_hasta_desg As Date
Dim HCDesde As String
Dim HCHasta As String
Dim cant_aux As Single
Dim CantH_Acum As Single
Dim cant_parcial As Single
Dim horas_max As Single
Dim horas_min As Single
Dim Registro As Long
Dim tipofracc As Integer
Dim segunda As Boolean
Dim CubrioElMinimo As Boolean
Dim CantidadDeHorasACubrir As Single
Dim RestoDeHorasCubiertas As Single
Dim SefuedeRango As Boolean
Dim Recalcular As Boolean

Dim cantdias As Integer
Dim Corte As Integer

Dim objrsDesgl As New ADODB.Recordset
Dim rs As New ADODB.Recordset

'FGZ - 12/04/2006 - Arreglo de registraciones leidas y a marcar como procesadas
Dim reg(1 To 100) As TRegistracionesProcesadas
Dim NoHayMas As Boolean


    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Version para Halliburton"
    End If
    
    diatipo = 0 'Dia laborable
    Cant_Reg = 0
    CantR = 1
    
    'FGZ - 01/08/2006
    Corte = 1
    If esFeriado And Dia_Libre Then
        Call Politica(380)
        ElseIf Dia_Libre Then diatipo = 1
        ElseIf esFeriado Then diatipo = 2
    End If
    ' Marco los pares
    StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 ORDER BY Fecha,hora"
    
    'OpenRecordset StrSql, objrs
    rs.Open StrSql, objConn
    i = 1
    
    Do While Not rs.EOF
'        objrs.Update objrs.Fields("par"), i
'        objrs.UpdateBatch
        
        Registro = rs!Regnro
        StrSql = "update " & TTempWFTurno & " set par = " & i & " where regnro = " & Registro
        objConn.Execute StrSql, , adExecuteNoRecords
        If CantR Mod 2 = 0 Then i = i + 1
        CantR = CantR + 1
        Cant_Reg = Cant_Reg + 1
        rs.MoveNext
    
    Loop
    'cantr = rs.RecordCount
        
    Cant_Pares = Int(Cant_Reg / 2)
    If Cant_Reg = 1 Then
        ' Se crea un reg. de wf-dia para usar en la política - Con turnos libres wf-dia está vacía */
        'FGZ - 20/04/2007 - saqué esta linea
        'InsertarWFDia Nro_Dia, "", p_fecha
        'FGZ - 20/04/2007 - saqué esta linea
        Call Politica(40)
        objConn.Execute "DELETE FROM " & TTempWFDiaLaboral, , adExecuteNoRecords
        Exit Sub
    End If
    'If cantr Mod 2 <> 0 Then Call Politica(70)
    
    Call buscar_horas_turno(Horas_Oblig, horas_max, horas_min)
    
    'Cambiado
    For i = 1 To Cant_Pares
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par =" & i
        OpenRecordset StrSql, objRs
        If objRs.EOF Then GoTo ProximoPar
        par1 = objRs!Hora
        fecpar1 = objRs!Fecha
        fecha_hc_desde = fecpar1
        Reg_Ent = objRs!Regnro
        'FGZ - 12/04/2006 - ojo !!! - si el desgloce es por cantidad de horas hay que guardar los pares anteriores porque acumula antes de guardar
        ' y se pisan los nro de las registraciones a marcar como procesadas
        reg(i).Reg_Ent = objRs!Regnro
        
        ' Cambiado
        anor1 = 0 & objRs!anornro
        
        StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & objRs!Regnro & " AND regestado <> 'P'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        objRs.MoveNext
        If objRs.EOF Then GoTo ProximoPar
        
        par2 = objRs!Hora
        fecpar2 = objRs!Fecha
        fecha_hc_hasta = fecpar2
        Reg_Sal = objRs!Regnro
        'FGZ - 12/04/2006 - ojo !!! - si el desgloce es por cantidad de horas hay que guardar los pares anteriores porque acumula antes de guardar
        ' y se pisan los nro de las registraciones a marcar como procesadas
        reg(i).Reg_Sal = objRs!Regnro
        
        anor2 = 0 & objRs!anornro
        
        StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & objRs!Regnro & " AND regestado <> 'P'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        '---------------------------------------------------
        ' 1 - Cambio realizado para Halliburton
        '---------------------------------------------------
        
        cantdias = (fecpar2 - fecpar1) + 1
        
        If fecpar1 = fecpar2 Then
            HDesde = par1
            HHasta = par2
            otroDia = False
        Else
            HDesde = par1    ' Como las fechas son distintas el desgloce es distinto por cada día */
            HHasta = "2400" ' Genero dos HC uno de par1 hasta 24:00 y el otro de 00:00 a par2 */
            otroDia = True
        End If
        
        For j = 1 To cantdias 'En el peor de los casos lo hara 2 veces, una por cada día
        
           Call Actualizar_Dia_Tipo(fecpar1 + 1, fecpar1, HDesde, HHasta, Corte, hDesde_lab, hHasta_lab, otroDia)
                
            If depurar Then
                Flog.writeline
                Flog.writeline Espacios(Tabulador * 3) & "Corte " & Corte
                Flog.writeline
            End If
                
           If Corte = 1 Or Corte = 2 Then
            
                Weekdia = Weekday(fecpar1)
                StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
                         "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
                OpenRecordset StrSql, objrsDesgl
                If objrsDesgl.EOF Then
                    If depurar Then
                        GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
                    End If
                    Exit Sub
                End If
                
                StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 2 " & _
                         " ORDER BY desgdnro,desghoradesde"
                
                OpenRecordset StrSql, objrsDesgl
                Do While Not objrsDesgl.EOF
                
                    TotHor = 0
                    hora_desde = HDesde
                    hora_hasta = HHasta
                    nro_desg = objrsDesgl!desghnro
        
        '            ***** Cambio segun lo definido en el desglose de horas ******
        
                     Cambiar_Horas nro_desg, hora_desde_desg, hora_hasta_desg, fecha_desde_desg, fecha_hasta_desg
                     fraccionar_horas fecpar1, hora_desde, hora_hasta, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, hora_desde, hora_hasta
        
                     If (hora_desde_desg < hora_desde) And (hora_desde < hora_hasta_desg And hora_hasta_desg <= hora_hasta) Then
                        '/* Genero HC de hora-desde a desghorahasta */
                        objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta_desg, Tdias, Thoras, Tmin
                        HCDesde = hora_desde
                        HCHasta = hora_hasta_desg
                        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                        If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                     End If
                     
                     If (hora_desde_desg >= hora_desde And hora_desde_desg < hora_hasta) And (hora_hasta_desg > hora_hasta) Then
                        
                        '/* Genero HC de desghoradesde a hora-hasta */
                        
                        objFechasHoras.RestaHs fecpar1, hora_desde_desg, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                        HCDesde = hora_desde_desg
                        HCHasta = hora_hasta
                        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                        If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                     End If
                     
                     If (hora_desde_desg >= hora_desde And hora_desde_desg < hora_hasta) And _
                     (hora_hasta_desg <= hora_hasta And hora_hasta_desg > hora_desde) Then
                     
                    '/* Genero HC de desghoradesde a desghorahasta */
    
                        objFechasHoras.RestaHs fecpar1, hora_desde_desg, fecpar1, hora_hasta_desg, Tdias, Thoras, Tmin
                        HCDesde = hora_desde_desg
                        HCHasta = hora_hasta
                        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                        If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                     
                     End If
                     
                    If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
                         
                         '/* Genero HC de hora-desde a hora-hasta */
                        
                        objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                        HCDesde = hora_desde
                        HCHasta = hora_hasta
    
                        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                        If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                     End If
                     
                     If (TotHor = 0) Then GoTo Continuar
                     
                     
    '   Si la hora del desglose es no-plus, y la cantidad de horas, sumadas a la cantidad
    '   de horas acumuladas, es mayor que la cantidad de horas obligatorias, debe separar
    '   la cantidad de horas, en dos registros, uno para la cantidad obligatorias y otra
    '   para las horas plus, que no se suman a las horas obligatorias
    
    '   Canth-acum : Indica la cantidad de horas acumuladas, hasta el momento.
                     
                     '/* Si es plus, se calcula la duraci¢n de la hora */
                     If (objrsDesgl!desghplus = 1) Then
                        '/* Hora Plus */
                        TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
                        If (objrsDesgl!desghminplus <> 0) Or (objrsDesgl!desghmaxplus <> 0) Then
                            If (TotHor < objrsDesgl!desghminplus) Then TotHor = objrsDesgl!desghminplus
                            If (objrsDesgl!desghmaxplus < TotHor) Then TotHor = objrsDesgl!desghmaxplus
                        End If
                     End If
                     
                    '/* Redondeo del total de horas */
                    'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
                    'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
                    'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
                    TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
                    Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
                    TotHorHHMM = "'" & TotHorHHMM & "'"
                    
                    
                    Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
                    Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
                    
                    
                    If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
                    
                    Call Politica(540)
                    
                    If TotHor = 0 Then GoTo Continuar
                    'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
                    
                    'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                    'Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
                    Fecha_Generacion = p_fecha
                    'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                    
                    StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                             "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                             "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                             TotHorHHMM & "," & TotHor & "," & ConvFecha(fecpar1) & ",' '," & ConvFecha(fecpar1) & ",'" & HCDesde & "','" & _
                             HCHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                             ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                             Reg_Ent & ",'" & IIf(j = 1, par1, "0000") & "'," & Reg_Sal & ",'" & _
                             IIf((j = 2) Or (j = 1 And Not otroDia), par2, "2400") & "'," & Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
                    End If
                        
                    ' Marcar las registraciones involucradas con el Horario generado
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Ent
                    objConn.Execute StrSql, , adExecuteNoRecords
                        
                    StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Sal
                    objConn.Execute StrSql, , adExecuteNoRecords
    
Continuar:
                    objrsDesgl.MoveNext
                Loop    '/* FOR EACH per.gti_desghora */
                
             End If 'Corte = 1 Or Corte = 2
            
             '---------------------------------------------------
             ' 2 - Cambio realizado para Halliburton
             '---------------------------------------------------
             
             If Corte = 2 Or Corte = 3 Then
             
                 Weekdia = Weekday(fecpar1)
             
                 If hDesde_lab <> "" And hHasta_lab <> "" Then
                     diatipo = 0
                 End If
                 HDesde = hDesde_lab
                 HHasta = hHasta_lab
             
                 StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
                          "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
                 OpenRecordset StrSql, objrsDesgl
                 If objrsDesgl.EOF Then
                     If depurar Then
                         GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
                     End If
                     Exit Sub
                 End If
                 ' Cambiada
                 StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 1 " & _
                                  " ORDER BY desgdnro,desghoradesde"
                 OpenRecordset StrSql, objrsDesgl
                 
                 Do While Not objrsDesgl.EOF
                     cant_aux = sumarizar_horas(Cant_Pares, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta)
                     'If ((cant_aux > 0) And (cant_aux < objrsDesgl!desghoffset)) Then TotHor = 0
                     If (cant_aux < objrsDesgl!desgcantmin) Then TotHor = 0
                     If ((cant_aux >= objrsDesgl!desgcantmin) And (cant_aux < objrsDesgl!desgcantmax)) Then
                         If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
                            TotHor = cant_aux - objrsDesgl!desgcantmin
                         Else
                            TotHor = 0
                         End If
                     End If
                     If (cant_aux >= objrsDesgl!desgcantmax) Then
                         If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
                            TotHor = objrsDesgl!desgcantmax - objrsDesgl!desgcantmin
                         Else
                            TotHor = 0
                         End If
                     End If
                    'FGZ - 29/07/2008 ----
                    If ((TotHor > 0) And (TotHor < objrsDesgl!desghoffset)) Then TotHor = 0
                    'FGZ - 29/07/2008 ----
                    
                     ' Chequea si las horas trabajadas estan entre en maximo plus y minimo plus o
                     ' si el maximo y minimo son 0, paga el total de horas
                     If (objrsDesgl!desghplus = 1) And (objrsDesgl!desghmaxplus = 0 And objrsDesgl!desghminplus = 0) Then
                        If (TotHor < objrsDesgl!desghminplus) Then
                              GoTo Continuar
                           Else
                              If (TotHor > objrsDesgl!desghmaxplus) Then TotHor = TotHor - objrsDesgl!desghmaxplus
                         End If
                     End If
                     If TotHor > 0 Then
                         ' Si es plus, se calcula la duración de la hora */
                         If (objrsDesgl!desghplus = 1) Then
                             TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
                         End If
                         ' Redondeo del total de horas
                         'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
                         'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
                         'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
                         TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
                         Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
                         TotHorHHMM = "'" & TotHorHHMM & "'"
                         
                         
                         Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
                         Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
                         
                         
                         If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
                         
                         'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
                         
                        'FGZ - 22/03/2011--
                        If TotHor > 0 Then
                         
                           'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                           Fecha_Generacion = p_fecha
                           'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                            
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                                      "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                                      "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                                      TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
                                      CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                                      ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                                      ValorNulo & ",''," & ValorNulo & ",''," & _
                                      Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                    
                            objConn.Execute StrSql, , adExecuteNoRecords
                            If depurar Then
                               Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
                            End If
                        
                           'FGZ - 12/04/2006 No estaba esto
                           'Marcar las registraciones involucradas con el Horario generado
                           i = 1
                           NoHayMas = False
                           Do While i <= UBound(reg) And Not NoHayMas
                               If reg(i).Reg_Ent <> 0 Then
                                   StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                                   objConn.Execute StrSql, , adExecuteNoRecords
                               Else
                                   NoHayMas = True
                               End If
                               
                               If reg(i).Reg_Sal <> 0 Then
                                   StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                                   objConn.Execute StrSql, , adExecuteNoRecords
                               Else
                                   NoHayMas = True
                               End If
                                       
                               i = i + 1
                           Loop
                        End If
                     
                     
                     End If
                     objrsDesgl.MoveNext
                 Loop
                 
             End If
            
             '---------------------------------------------------
             ' 3 - Cambio realizado para Halliburton
             '---------------------------------------------------
            
             If fecpar1 = fecpar2 Then
                Exit For
             Else
                hora_desde = "0000"
                HDesde = hora_desde
                hora_hasta = par2
                HHasta = hora_hasta
                fecpar1 = fecpar2
             End If
            
        Next j

ProximoPar:
    
    Next i
    
   
    ' Genero los registros del HC, cuando se trata de desglose como Cantidad de Horas y Franja Horaria
    
    Weekdia = Weekday(p_fecha)
    StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
             "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
    OpenRecordset StrSql, objrsDesgl
    If objrsDesgl.EOF Then
        If depurar Then
            GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
        End If
        Exit Sub
    End If
    StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 3 " & _
                     " ORDER BY desghoradesde,desghplus"
    OpenRecordset StrSql, objrsDesgl
    Do While Not objrsDesgl.EOF ' do 1
        cant_parcial = 0
        
' AIB - 3/1/2003. A partir de acá cambio
' Dejo todo como el fuente de Progress

' ----------------------------------------------------
' FGZ - 12/3/2003. A partir de acá modificó Winsy
        cant_parcial = sumarizar_horas(Cant_Pares, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta)
        If cant_parcial >= objrsDesgl!desghoffset Then
        
            If (cant_parcial >= objrsDesgl!desgcantmin And cant_parcial <= objrsDesgl!desgcantmax) Then
                
                ' saltar las registraciones hasta cubrir el minimo
                StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2"
                OpenRecordset StrSql, objRs
                
                CubrioElMinimo = False
                CantidadDeHorasACubrir = objrsDesgl!desgcantmin
                SefuedeRango = False
                
                Do While Not objRs.EOF And Not CubrioElMinimo And Not SefuedeRango
                
                    If (objRs!Hora >= objrsDesgl!desghoradesde And objRs!Fecha = p_fecha) And _
                    (objRs!Hora <= objrsDesgl!desghorahasta) Then
                        hora_desde_desg = objRs!Hora
                        fecha_desde_desg = objRs!Fecha
                    End If
                
                    If (objRs!Hora < objrsDesgl!desghoradesde) Or _
                     (objRs!Hora > objrsDesgl!desghoradesde And objRs!Fecha < p_fecha) Then
                        hora_desde_desg = objRs!Hora
                        fecha_desde_desg = objRs!Fecha
                    End If
                
                    ' Me muevo al proximo par
                    objRs.MoveNext
                    If objRs.EOF Then Exit Do
                    
                    If objRs!Hora <= objrsDesgl!desghorahasta And objRs!Fecha = p_fecha Then
                        hora_hasta_desg = objRs!Hora
                        fecha_hasta_desg = objRs!Fecha
                    End If
                    
                    If (objRs!Hora >= objrsDesgl!desghorahasta And objRs!Fecha = p_fecha) Then
                        hora_hasta_desg = objrsDesgl!desghorahasta
                        fecha_hasta_desg = objRs!Fecha
                        SefuedeRango = True
                    End If
                    
                    If (objRs!Hora < objrsDesgl!desghorahasta And p_fecha < objRs!Fecha) Then
                        If (objrsDesgl!desgcantmax > 24 And objrsDesgl!desghorahasta = "2400") Then
                            hora_hasta_desg = objRs!Hora
                            fecha_hasta_desg = objRs!Fecha
                        Else
                            hora_hasta_desg = objrsDesgl!desghorahasta
                            fecha_hasta_desg = p_fecha
                            SefuedeRango = True
                        End If
                    End If
                    
                    
                    If hora_desde_desg <> "" And hora_hasta_desg <> "" Then
                        objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                        If TotHor > CantidadDeHorasACubrir Then
                            RestoDeHorasCubiertas = TotHor - CantidadDeHorasACubrir
                            CantidadDeHorasACubrir = 0
                        Else
                            CantidadDeHorasACubrir = CantidadDeHorasACubrir - TotHor
                            RestoDeHorasCubiertas = 0
                        End If
                        
                        ' reviso si las horas restantes me sirven, es decir estan en el rango
                        '  en el que se pagan o hay que recalcularlas
                        
                        If CantidadDeHorasACubrir <= 0 Then
                            CubrioElMinimo = True
                            Recalcular = False
                            If RestoDeHorasCubiertas > 0 Then
                                If objrsDesgl!desghoradesde > hora_desde_desg Then
                                    hora_desde_desg = objrsDesgl!desghoradesde
                                    Recalcular = True
                                End If
                                            
                                If objrsDesgl!desghorahasta < hora_hasta_desg Then
                                    hora_hasta_desg = objrsDesgl!desghorahasta
                                    Recalcular = True
                                End If
                                
                                If Recalcular Then
                                    If hora_desde_desg > hora_hasta_desg Then
                                        TotHor = 0
                                        RestoDeHorasCubiertas = TotHor
                                    Else
                                        objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                                        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                                        RestoDeHorasCubiertas = TotHor
                                    End If
                                End If
                            End If
                            
                        End If
                
                    Else
                        SefuedeRango = True
                    End If
                
                    If Not CubrioElMinimo Then
                        objRs.MoveNext
                    End If
                Loop
                
                
                If Not CubrioElMinimo Then
                   ' no pago nada
                Else
                    If RestoDeHorasCubiertas > 0 Then
                        TotHor = RestoDeHorasCubiertas
                        '/* Redondeo del total de horas */
                        'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
                        'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
                        'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
                        TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
                        Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
                        TotHorHHMM = "'" & TotHorHHMM & "'"
                        
                        Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
                        Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)

                        If TotHor > 0 Then
                          'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
                          
                        'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                        'Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
                        Fecha_Generacion = p_fecha
                        'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                          
                          
                          StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                              "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                              "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                              TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
                              CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                              ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                              ValorNulo & ",''," & ValorNulo & ",''," & _
                              Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
            
                          objConn.Execute StrSql, , adExecuteNoRecords
                          If depurar Then
                                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
                          End If
                        'FGZ - 12/04/2006 No estaba esto
                        'Marcar las registraciones involucradas con el Horario generado
                        i = 1
                        NoHayMas = False
                        Do While i <= UBound(reg) And Not NoHayMas
                            If reg(i).Reg_Ent <> 0 Then
                                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                                objConn.Execute StrSql, , adExecuteNoRecords
                            Else
                                NoHayMas = True
                            End If
                            
                            If reg(i).Reg_Sal <> 0 Then
                                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                                objConn.Execute StrSql, , adExecuteNoRecords
                            Else
                                NoHayMas = True
                            End If
                                    
                            i = i + 1
                        Loop
                          
                        End If
                    End If
                    
                    If SefuedeRango Then
                        GoTo SiguienteFH
                    Else
                    
                        ' continuo analizando las registraciones dentro del rango
                        SefuedeRango = False
                        objRs.MoveNext
                        Do While Not objRs.EOF And Not SefuedeRango
                            hora_desde_desg = ""
                            hora_hasta_desg = ""
                            If (objRs!Hora >= objrsDesgl!desghoradesde And objRs!Fecha = p_fecha) And _
                            (objRs!Hora <= objrsDesgl!desghorahasta) Then
                                hora_desde_desg = objRs!Hora
                                fecha_desde_desg = objRs!Fecha
                            End If
                        
                            If (objRs!Hora < objrsDesgl!desghoradesde) Or _
                             (objRs!Hora > objrsDesgl!desghoradesde And objRs!Fecha < p_fecha) Then
                                hora_desde_desg = objrsDesgl!desghoradesde
                                fecha_desde_desg = objRs!Fecha
                            End If
                        
                            
                            ' Me muevo al proximo par
                            objRs.MoveNext
                            If objRs.EOF Then Exit Do
                            
                            If (objRs!Hora >= objrsDesgl!desghoradesde And objRs!Fecha = p_fecha) And _
                            (objRs!Hora <= objrsDesgl!desghorahasta) Then
                                hora_hasta_desg = objRs!Hora
                                fecha_hasta_desg = objRs!Fecha
                            End If
                            
                            If (objRs!Hora > objrsDesgl!desghorahasta And p_fecha = objRs!Fecha) Then
                                hora_hasta_desg = objrsDesgl!desghorahasta
                                fecha_hasta_desg = p_fecha
                                SefuedeRango = True
                            End If
                            
                            If (objRs!Hora < objrsDesgl!desghorahasta And p_fecha < objRs!Fecha) Then
                                If (objrsDesgl!desgcantmax > 24 And objrsDesgl!desghorahasta = "2400") Then
                                    hora_hasta_desg = objRs!Hora
                                    fecha_hasta_desg = objRs!Fecha
                                Else
                                    hora_hasta_desg = objrsDesgl!desghorahasta
                                    fecha_hasta_desg = p_fecha
                                    SefuedeRango = True
                                End If
                            End If
                        
                            If hora_desde_desg <> "" And hora_hasta_desg <> "" Then
                                objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                        
                            Else
                                SefuedeRango = True
                                TotHor = 0
                            End If
                        

                            '/* Redondeo del total de horas */
                            'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
                            'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
                            'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
                            TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
                            Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
                            TotHorHHMM = "'" & TotHorHHMM & "'"
                            
                            Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
                            Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
                            
                            If TotHor > 0 Then
                                'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
                                
                                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                                Fecha_Generacion = p_fecha
                                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                                
                                
                                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                                    "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                                    "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                                    TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
                                    CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                                    ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                                    ValorNulo & ",''," & ValorNulo & ",''," & _
                                    Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                                objConn.Execute StrSql, , adExecuteNoRecords
                                If depurar Then
                                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
                                End If
                                
                                'FGZ - 12/04/2006 No estaba esto
                                'Marcar las registraciones involucradas con el Horario generado
                                i = 1
                                NoHayMas = False
                                Do While i <= UBound(reg) And Not NoHayMas
                                    If reg(i).Reg_Ent <> 0 Then
                                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                                        objConn.Execute StrSql, , adExecuteNoRecords
                                    Else
                                        NoHayMas = True
                                    End If
                                    
                                    If reg(i).Reg_Sal <> 0 Then
                                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                                        objConn.Execute StrSql, , adExecuteNoRecords
                                    Else
                                        NoHayMas = True
                                    End If
                                            
                                    i = i + 1
                                Loop
                                
                            End If
                                                        
                            objRs.MoveNext
                        Loop
                    End If
                End If
            End If
      End If
        
SiguienteFH:
       objrsDesgl.MoveNext
    Loop  ' loop 1

' FGZ - 12/3/2003. Hasta acá modificó Winsy
' ----------------------------------------------------

'   Cuando la sumatoria de las horas trabajadas entre las registraciones del empleado es menor a la cantidad de horas
'   mínimas, configuradas en el turno, en el HC, debemos generar una anormalidad (faltar horas obligatorias)
'   y una entrada en el HC mostrando esto

   cant_aux = 0
    
    ' AIB - Cambiada el 13/03
   StrSql = "SELECT * FROM gti_config_tur_hor WHERE turnro =" & Nro_Turno & " AND conhornro = 2 "
   'StrSql = "SELECT * FROM gti_config_tur_hor WHERE turnro =" & nro_turno & " AND conhornro = 10 "
   
   
   OpenRecordset StrSql, objRs
    
   If Not objRs.EOF Then
        'cambiado
        'redondeo = objRs!conhredondeo
        redondeo = IIf(Not EsNulo(objRs!conhredondeo), objRs!conhredondeo, 0)
        TipoHora = objRs!thnro
        tipofracc = 0 & objRs!conhfractipo
        cant_aux = sumarizar_horas(Cant_Pares, tipofracc, tipofracc)
'FGZ - 26/02/2009 ---- Cambié esto ---------------
'        'Cambiado
'        'if (PER.gti_turno.tipoturno = 3) and (horas-oblig > cant-aux)
'        StrSql = "SELECT * FROM gti_turno WHERE turnro =" & Nro_Turno
'        OpenRecordset StrSql, rs
'        'If (rs!TipoTurno = 3) And (horas_oblig > cant_aux) Then
'        If (rs!TipoTurno = 3) And (horas_oblig > (cant_aux + Total_Hs_Justificadas)) Then
        If (Tipo_Turno = 3) And (Horas_Oblig > (cant_aux + Total_Hs_Justificadas)) Then
'FGZ - 26/02/2009 ---- Cambié esto ---------------
        
            TotHor = Horas_Oblig - (cant_aux + Total_Hs_Justificadas)
            'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
            TotHorHHMM = CHorasSF(TotHor, 60)
            Call Redondeo_enHorasMinutos(TotHorHHMM, redondeo, 60, TotHorHHMM)
            TotHorHHMM = "'" & TotHorHHMM & "'"
            
            objFechasHoras.Convertir_A_Hora_cDuracion TotHor, 60, Hora_a_Red
            objFechasHoras.Redondeo_Horas_Tipo2 Hora_a_Red, redondeo, 60, TotHor
            
            'Call ValidarTipoDeHora(tipohora, nro_turno, tipo_hora)
            
            'FGZ - 27/10/2008 - Se le agregó la fecha hasta porque sino daba error en la pol 480
            
            'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
            Fecha_Generacion = p_fecha
            'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
            
            'FGZ - 22/03/2011--
            If TotHor > 0 Then
              StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
              "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
              "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
              TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
              CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & ",5," & _
              ValorNulo & "," & Empleado.Ternro & "," & TipoHora & "," & Nro_Turno & "," & _
              ValorNulo & ",''," & ValorNulo & ",''," & _
              Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
            
              objConn.Execute StrSql, , adExecuteNoRecords
              If depurar Then
                  Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & Tipo_Hora & "- Cantidad: " & TotHor & " hs."
              End If
              
              'FGZ - 12/04/2006 No estaba esto
              'Marcar las registraciones involucradas con el Horario generado
              i = 1
              NoHayMas = False
              Do While i <= UBound(reg) And Not NoHayMas
                  If reg(i).Reg_Ent <> 0 Then
                      StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                      objConn.Execute StrSql, , adExecuteNoRecords
                  Else
                      NoHayMas = True
                  End If
                  
                  If reg(i).Reg_Sal <> 0 Then
                      StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                      objConn.Execute StrSql, , adExecuteNoRecords
                  Else
                      NoHayMas = True
                  End If
                          
                  i = i + 1
              Loop
            End If
        End If
   End If
End Sub


Private Sub ConvertirHorasNormales(ByVal p_fecha As Date, ByRef NroTh As Long, ByVal TotHor As Single, _
            ByVal fecpar1 As Date, ByVal HCDesde As String, ByVal HCHasta As String, ByVal Reg_Ent As Long, _
            ByVal Reg_Sal As Long, ByVal j As Integer, ByVal par1 As String, ByVal par2 As String, ByVal otroDia As Boolean, ByVal tipoH As Long)
' ---------------------------------------------------------------------------------------------
' Descripcion: Version para Halliburton.
' Autor      : FGZ
' Fecha      : 02/11/2004
' Ultima Mod.: 02/11/2004
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim HSalida As String
Dim HEntrada As String
Dim Fecha_Control As Date
Dim Continuidad As Boolean
Dim HorasNormales As Single

Dim rs_Gti_Registracion As New ADODB.Recordset
Dim rs_Hor_Cumplido As New ADODB.Recordset

    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Convertir Horas Normales"
    End If
    
    StrSql = "SELECT * FROM gti_registracion "
    StrSql = StrSql & " WHERE gti_registracion.ternro =" & Empleado.Ternro
    StrSql = StrSql & " AND gti_registracion.regfecha = " & ConvFecha(CDate(p_fecha - 1))
    StrSql = StrSql & " AND gti_registracion.regestado = 'P'"
    StrSql = StrSql & " AND gti_registracion.regentsal = 'S'"
    StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    OpenRecordset StrSql, rs_Gti_Registracion

    If Not rs_Gti_Registracion.EOF Then
        rs_Gti_Registracion.MoveLast
        HSalida = rs_Gti_Registracion!reghora
    Else
        HSalida = "2400"
    End If
    
    HEntrada = hora_desde

    If (NroTh = 3) And (HSalida = "2359") And (HEntrada = "0001") Then
        StrSql = "SELECT * FROM gti_horcumplido "
        StrSql = StrSql & " WHERE ternro =" & Empleado.Ternro
        StrSql = StrSql & " AND (thnro = 3 "
        StrSql = StrSql & " OR thnro = 1008 "
        StrSql = StrSql & " OR thnro = 1009 "
        StrSql = StrSql & " OR thnro = 1010 "
        StrSql = StrSql & " OR thnro = 1011 "
        StrSql = StrSql & " OR thnro = 1012 "
        StrSql = StrSql & " OR thnro = 1003 "
        StrSql = StrSql & " OR thnro = 1004 "
        StrSql = StrSql & " OR thnro = 1005 "
        StrSql = StrSql & " OR thnro = 1006) "
        StrSql = StrSql & " AND  horfecrep = " & ConvFecha(p_fecha)
        OpenRecordset StrSql, rs_Hor_Cumplido
    
        Do While Not rs_Hor_Cumplido.EOF
            HorasNormales = HorasNormales + rs_Hor_Cumplido!horcant
            rs_Hor_Cumplido.MoveNext
        Loop

        Fecha_Control = p_fecha
        Continuidad = True
    
        Do While (Continuidad) And (HorasNormales < 8)
            StrSql = "SELECT * FROM gti_registracion "
            StrSql = StrSql & " WHERE gti_registracion.ternro =" & Empleado.Ternro
            StrSql = StrSql & " AND gti_registracion.regfecha = " & ConvFecha(CDate(Fecha_Control - 1))
            StrSql = StrSql & " AND gti_registracion.regestado = 'P'"
            StrSql = StrSql & " AND gti_registracion.regentsal = 'S'"
            StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
            'FGZ - 19/05/2010 ------------ Control FT -------------
            StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
            'FGZ - 19/05/2010 ------------ Control FT -------------
            If rs_Gti_Registracion.State = adStateOpen Then rs_Gti_Registracion.Close
            OpenRecordset StrSql, rs_Gti_Registracion
        
            If Not rs_Gti_Registracion.EOF Then
                rs_Gti_Registracion.MoveLast
                HSalida = rs_Gti_Registracion!reghora
            Else
                HSalida = "2400"
            End If
            HEntrada = hora_desde
    
            If (HSalida = "2359" And HEntrada = "0001") Then
                StrSql = "SELECT * FROM gti_horcumplido "
                StrSql = StrSql & " WHERE ternro =" & Empleado.Ternro
                StrSql = StrSql & " AND (thnro = 3 "
                StrSql = StrSql & " OR thnro = 1008 "
                StrSql = StrSql & " OR thnro = 1009 "
                StrSql = StrSql & " OR thnro = 1010 "
                StrSql = StrSql & " OR thnro = 1011 "
                StrSql = StrSql & " OR thnro = 1012 "
                StrSql = StrSql & " OR thnro = 1003 "
                StrSql = StrSql & " OR thnro = 1004 "
                StrSql = StrSql & " OR thnro = 1005 "
                StrSql = StrSql & " OR thnro = 1006) "
                StrSql = StrSql & " AND  horfecrep = " & ConvFecha(Fecha_Control - 1)
                If rs_Hor_Cumplido.State = adStateOpen Then rs_Hor_Cumplido.Close
                OpenRecordset StrSql, rs_Hor_Cumplido
            
                Do While Not rs_Hor_Cumplido.EOF
                    HorasNormales = HorasNormales + rs_Hor_Cumplido!horcant
                    rs_Hor_Cumplido.MoveNext
                Loop
            Else
                Continuidad = False
            End If
    
            Fecha_Control = Fecha_Control - 1
        Loop

        If (HorasNormales >= 8) And (NroTh = 3) Then
    
                StrSql = "INSERT INTO gti_horcumplido "
                StrSql = StrSql & "(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                StrSql = StrSql & "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                StrSql = StrSql & "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                StrSql = StrSql & CHoras(TotHor, 60) & ","
                StrSql = StrSql & TotHor & ","
                StrSql = StrSql & ConvFecha(fecpar1) & ","
                StrSql = StrSql & "' ',"
                StrSql = StrSql & ConvFecha(fecpar1) & ","
                StrSql = StrSql & "'" & HCDesde & "',"
                StrSql = StrSql & "'" & HCHasta & "',"
                StrSql = StrSql & CInt(False) & ","
                StrSql = StrSql & CInt(True) & ","
                StrSql = StrSql & ValorNulo & ","
                StrSql = StrSql & ValorNulo & ","
                StrSql = StrSql & ValorNulo & ","
                StrSql = StrSql & ValorNulo & ","
                StrSql = StrSql & Empleado.Ternro & ","
                StrSql = StrSql & NroTh & ","
                StrSql = StrSql & Nro_Turno & ","
                StrSql = StrSql & Reg_Ent & ","
                StrSql = StrSql & "'" & IIf(j = 1, par1, "0000") & "',"
                StrSql = StrSql & Reg_Sal & ","
                StrSql = StrSql & "'" & IIf((j = 2) Or (j = 1 And Not otroDia), par2, "2400") & "',"
                StrSql = StrSql & Empleado.Legajo & ","
                StrSql = StrSql & ConvFecha(p_fecha) & ","
                StrSql = StrSql & ConvFecha(p_fecha)
                StrSql = StrSql & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & Tipo_Hora & "- Cantidad: " & TotHor & " hs."
                End If

                NroTh = 1008
        Else
            NroTh = tipoH
        End If
    End If
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "Fin Convertir Horas Normales"
    End If
    
'Cierro y libero
If rs_Gti_Registracion.State = adStateOpen Then rs_Gti_Registracion.Close
If rs_Hor_Cumplido.State = adStateOpen Then rs_Hor_Cumplido.Close

Set rs_Gti_Registracion = Nothing
Set rs_Hor_Cumplido = Nothing
End Sub



Private Sub ConvertirHorasNormales2(ByVal p_fecha As Date, ByRef NroTh As Long, ByRef TotHor As Single, _
            ByVal fecpar1 As Date, ByRef HCDesde As String, ByRef HCHasta As String, ByVal Reg_Ent As Long, _
            ByVal Reg_Sal As Long, ByVal j As Integer, ByVal par1 As String, ByVal par2 As String, ByVal otroDia As Boolean, ByVal tipoH As Long)
' ---------------------------------------------------------------------------------------------
' Descripcion: Version para Halliburton.
' Autor      : FGZ
' Fecha      : 02/11/2004
' Ultima Mod.: FGZ - 03/04/2006
' Descripcion: se saco la condicion If (HorasNormales >= 8) And (NroTh = 3) Then
' Ultima Mod.: FGZ - 18/10/2006
' Descripcion: le agregué un chequeo para ver si las hs adicionales ya se generaron
' Ultima Mod.: FGZ - 04/12/2006
' Descripcion: cambios varios
' ---------------------------------------------------------------------------------------------
Dim HSalida As String
Dim HEntrada As String
Dim Fecha_Control As Date
Dim Continuidad As Boolean
Dim HorasNormales As Single

'FGZ - 04/12/2006
Dim HN1 As Single
Dim HN2 As Single

Dim rs_Gti_Registracion As New ADODB.Recordset
Dim rs_Hor_Cumplido As New ADODB.Recordset

    If depurar Then
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 4) & "Inicio ConvertirHorasNormales2"
        Flog.writeline
    End If
    
    StrSql = "SELECT * FROM gti_registracion "
    StrSql = StrSql & " WHERE gti_registracion.ternro =" & Empleado.Ternro
    StrSql = StrSql & " AND gti_registracion.regfecha = " & ConvFecha(CDate(p_fecha - 1))
    StrSql = StrSql & " AND gti_registracion.regestado = 'P'"
    StrSql = StrSql & " AND gti_registracion.regentsal = 'S'"
    StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
    'FGZ - 19/05/2010 ------------ Control FT -------------
    OpenRecordset StrSql, rs_Gti_Registracion
    If Not rs_Gti_Registracion.EOF Then
        rs_Gti_Registracion.MoveLast
        HSalida = rs_Gti_Registracion!reghora
    Else
        HSalida = "2400"
    End If
    
    HEntrada = hora_desde
    If (NroTh = 3) And (HSalida = "2359") And (HEntrada = "0001") Then
        StrSql = "SELECT sum(horas, horcant) as cantidad FROM gti_horcumplido "
        StrSql = StrSql & " WHERE ternro =" & Empleado.Ternro
        StrSql = StrSql & " AND thnro = 3 "
'        StrSql = StrSql & " AND ( thnro = 3 "
'        StrSql = StrSql & " OR thnro = 1008 "
'        StrSql = StrSql & " OR thnro = 1009 "
'        StrSql = StrSql & " OR thnro = 1010 "
'        StrSql = StrSql & " OR thnro = 1011 "
'        StrSql = StrSql & " OR thnro = 1012 "
'        StrSql = StrSql & " OR thnro = 1003 "
'        StrSql = StrSql & " OR thnro = 1004 "
'        StrSql = StrSql & " OR thnro = 1005 "
'        StrSql = StrSql & " OR thnro = 1006) "
        StrSql = StrSql & " AND  horfecrep = " & ConvFecha(p_fecha)
        OpenRecordset StrSql, rs_Hor_Cumplido
        If Not rs_Hor_Cumplido.EOF Then
            HN2 = IIf(Not EsNulo(rs_Hor_Cumplido!Cantidad), rs_Hor_Cumplido!Cantidad, 0) 'rs_Hor_Cumplido!Cantidad
        End If

        Fecha_Control = p_fecha
        Continuidad = True
    
        Do While (Continuidad) And (HN2 < 8)
            StrSql = "SELECT * FROM gti_registracion "
            StrSql = StrSql & " WHERE gti_registracion.ternro =" & Empleado.Ternro
            StrSql = StrSql & " AND gti_registracion.regfecha = " & ConvFecha(CDate(Fecha_Control - 1))
            StrSql = StrSql & " AND gti_registracion.regestado = 'P'"
            StrSql = StrSql & " AND gti_registracion.regentsal = 'S'"
            StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
            'FGZ - 19/05/2010 ------------ Control FT -------------
            StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
            'FGZ - 19/05/2010 ------------ Control FT -------------
            If rs_Gti_Registracion.State = adStateOpen Then rs_Gti_Registracion.Close
            OpenRecordset StrSql, rs_Gti_Registracion
            If Not rs_Gti_Registracion.EOF Then
                rs_Gti_Registracion.MoveLast
                HSalida = rs_Gti_Registracion!reghora
            Else
                HSalida = "2400"
            End If
            HEntrada = hora_desde
    
            If (HSalida = "2359" And HEntrada = "0001") Then
                StrSql = "SELECT sum(horas, horcant) as cantidad FROM gti_horcumplido "
                StrSql = StrSql & " WHERE ternro =" & Empleado.Ternro
                StrSql = StrSql & " AND thnro = 3 "
'                StrSql = StrSql & " AND (thnro = 3 "
'                StrSql = StrSql & " OR thnro = 1008 "
'                StrSql = StrSql & " OR thnro = 1009 "
'                StrSql = StrSql & " OR thnro = 1010 "
'                StrSql = StrSql & " OR thnro = 1011 "
'                StrSql = StrSql & " OR thnro = 1012 "
'                StrSql = StrSql & " OR thnro = 1003 "
'                StrSql = StrSql & " OR thnro = 1004 "
'                StrSql = StrSql & " OR thnro = 1005 "
'                StrSql = StrSql & " OR thnro = 1006) "
                StrSql = StrSql & " AND  horfecrep = " & ConvFecha(Fecha_Control - 1)
                If rs_Hor_Cumplido.State = adStateOpen Then rs_Hor_Cumplido.Close
                OpenRecordset StrSql, rs_Hor_Cumplido
                If Not rs_Hor_Cumplido.EOF Then
                    HN1 = HN1 + IIf(Not EsNulo(rs_Hor_Cumplido!Cantidad), rs_Hor_Cumplido!Cantidad, 0)
                End If
            Else
                Continuidad = False
            End If
    
            Fecha_Control = Fecha_Control - 1
        Loop

'FGZ - 03/04/2006
'        If (HorasNormales >= 8) And (NroTh = 3) Then
                StrSql = "INSERT INTO gti_horcumplido "
                StrSql = StrSql & "(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                StrSql = StrSql & "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                StrSql = StrSql & "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                StrSql = StrSql & CHoras(TotHor, 60) & ","
                StrSql = StrSql & TotHor & ","
                StrSql = StrSql & ConvFecha(fecpar1) & ","
                StrSql = StrSql & "' ',"
                StrSql = StrSql & ConvFecha(fecpar1) & ","
                StrSql = StrSql & "'" & HCDesde & "',"
                StrSql = StrSql & "'" & HCHasta & "',"
                StrSql = StrSql & CInt(False) & ","
                StrSql = StrSql & CInt(True) & ","
                StrSql = StrSql & ValorNulo & ","
                StrSql = StrSql & ValorNulo & ","
                StrSql = StrSql & ValorNulo & ","
                StrSql = StrSql & ValorNulo & ","
                StrSql = StrSql & Empleado.Ternro & ","
                StrSql = StrSql & NroTh & ","
                StrSql = StrSql & Nro_Turno & ","
                StrSql = StrSql & Reg_Ent & ","
                StrSql = StrSql & "'" & IIf(j = 1, par1, "0000") & "',"
                StrSql = StrSql & Reg_Sal & ","
                StrSql = StrSql & "'" & IIf((j = 2) Or (j = 1 And Not otroDia), par2, "2400") & "',"
                StrSql = StrSql & Empleado.Legajo & ","
                StrSql = StrSql & ConvFecha(p_fecha) & ","
                StrSql = StrSql & ConvFecha(p_fecha)
                StrSql = StrSql & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & NroTh & "- Cantidad: " & TotHor & " hs."
                End If
    
                'Verifico la generacion de HN100
                NroTh = 1008
                If HN1 >= 8 Then
                    'debe generar = cantidad de HN100

                Else
                    If HN2 >= 8 Then
                        TotHor = HN2 - HN1
                    Else
                        'No debe generar nada
                        TotHor = 0
                    End If
                End If
                HCDesde = ""
                HCHasta = ""
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 5) & "NO genero pues adicionales ==> thnro = " & NroTh
        End If
    End If
    
    If depurar Then
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 4) & "Fin ConvertirHorasNormales2"
        Flog.writeline
    End If
'Cierro y libero
If rs_Gti_Registracion.State = adStateOpen Then rs_Gti_Registracion.Close
If rs_Hor_Cumplido.State = adStateOpen Then rs_Hor_Cumplido.Close

Set rs_Gti_Registracion = Nothing
Set rs_Hor_Cumplido = Nothing
End Sub


Private Sub Actualizar_Dia_Tipo(ByVal Fecha As Date, ByVal fecha_proc As Date, ByRef Desde_Lab As String, ByRef Hasta_Lab As String, ByRef Corte As Integer, ByRef Desde_Nlb As String, ByRef Hasta_Nlb As String, ByVal otroDia As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Version para Halliburton.
'       Este es un procedimiento interno nuevo que lo que hace es evaluar el dia de trabajo actual
'       y el siguiente para hacer el corte entre forma de pago según lo que dice un día laborable y
'       según lo que dice en un día no laborable.
'       Esto es para cuando por ejemplo:
'               El horario del viernes es de 0900 a 1800.
'               Si el franco comienza a las 2400 no hay problema tenemos que usar la version
'               que existe hoy día, pero si el franco comienza a las 1800 esto es lo que realiza
'               esos cortes. Junto con el generar horario normal o generar horario libre,
'               dependiendo del caso.
' Autor      : FGZ
' Fecha      : 02/11/2004
' Ultima Mod.: 02/11/2004
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Nro_dia_sig         As Integer
Dim Nro_turno_sig       As Integer
Dim Nro_subturno_sig    As Integer
Dim Nro_grupo_sig       As Integer
Dim Nro_fpgo_sig        As Integer
Dim Tiene_justif_sig    As Boolean
Dim Nro_justif_sig      As Integer
Dim Justif_turno_sig    As Boolean
Dim Turcomp_sig         As Boolean
Dim Trabaja_sig         As Boolean
Dim Orden_dia_sig       As Integer
Dim No_trabaja_just_sig As Boolean
Dim Fecha_inicio_sig    As Date
Dim Dia_libre_sig       As Boolean
Dim EsFeriado_Sig       As Boolean
Dim P_asignacion_sig    As Boolean
Dim Tiene_turno_sig     As Boolean

Dim Aux_desde           As String
Dim Aux_hasta           As String

Dim Reg_T As TipoTurno
Dim Justif As TJustif
Dim Turno As TTurno
Dim Emp As Templeado
Dim Reg_Dia As TDia

Dim rs_Gti_Detturtemp As New ADODB.Recordset
Dim rs_Gti_Dias As New ADODB.Recordset

'    If depurar Then
'        Flog.writeline
'        Flog.writeline Espacios(Tabulador * 4) & "Inicio Actualizar_Dia_Tipo()"
'        Flog.writeline
'    End If
    
    If (esFeriado) Then
        Desde_Nlb = ""
        Hasta_Nlb = ""
        Corte = 2
        Exit Sub
    End If

    If (Not Dia_Libre) And (Not esFeriado) Then '(0)
        Aux_desde = Desde_Lab
        Aux_hasta = Hasta_Lab
    
        If Corte = 2 Then
            Desde_Nlb = Aux_desde
            Hasta_Nlb = Aux_hasta
            Corte = 3
            Exit Sub
        End If
    
        EsFeriado_Sig = EsFeriado_Nuevo(Fecha, Empleado.Ternro, depurar)
         
        Call Buscar_Turno_Nuevo(p_fecha, Empleado.Ternro, depurar, Reg_T, Turno, Justif, Emp)
        
        If Reg_T.tiene_turno Then '(1)
            Call Buscar_Dia_Nuevo(Fecha, Fecha_Inicio, Reg_T.Nro_Turno, Empleado.Ternro, Reg_T.P_Asignacion, depurar, Reg_Dia)
    
            If Reg_Dia.Dia_Libre Then '(2)
                 
                 If Reg_T.P_Asignacion Then '(3)
                    
                    StrSql = "SELECT * gti_detturtemp "
                    StrSql = StrSql & " WHERE gti_detturtemp.ternro =" & Empleado.Ternro
                    StrSql = StrSql & " AND gti_detturtemp.gttempdesde <=" & ConvFecha(fecha_proc)
                    StrSql = StrSql & " AND " & ConvFecha(fecha_proc) & " <= gti_detturtemp.gttemphasta "
                    
                    OpenRecordset StrSql, rs_Gti_Detturtemp
                    
                    If Not rs_Gti_Detturtemp.EOF Then '(4)
    
                        If rs_Gti_Detturtemp!ttemplibre = -1 Then '(5)
                        
                            Desde_Nlb = Aux_desde
                            Hasta_Nlb = Aux_hasta
                            Corte = 2
                            
                        Else
                            If rs_Gti_Detturtemp!ttemphdesde3 <> "0000" And Not IsNull(rs_Gti_Detturtemp!ttemphdesde3) And _
                               rs_Gti_Detturtemp!ttemphhasta3 <> "0000" And Not IsNull(rs_Gti_Detturtemp!ttemphhasta3) Then '(6)

                                    If (Desde_Lab > rs_Gti_Detturtemp!ttemphhasta3) And _
                                       Not (CLng(rs_Gti_Detturtemp!diasiguiente) = 3 And otroDia) Then '(7)
                                    
                                               Hasta_Lab = ""
                                               Desde_Lab = ""
                                               Corte = 3
                                               Desde_Nlb = Aux_desde
                                               Hasta_Nlb = Aux_hasta
                                     Else
                                        If (Hasta_Lab > rs_Gti_Detturtemp!ttemphhasta3) And Not ((CLng(rs_Gti_Detturtemp!diasiguiente) = 3 And otroDia)) Then '(8)
                                        
                                                   Hasta_Lab = rs_Gti_Detturtemp!ttemphhasta3
                                                   Corte = 2
                                                   Desde_Nlb = rs_Gti_Detturtemp!ttemphhasta3
                                                   Hasta_Nlb = Aux_hasta
                                        End If '(8)
                                        
                                   End If '(7)
                                
                              Else '(6)
                                  If rs_Gti_Detturtemp!ttemphdesde2 <> "0000" And Not IsNull(rs_Gti_Detturtemp!ttemphdesde2) And _
                                     rs_Gti_Detturtemp!ttemphhasta2 <> "0000" And Not IsNull(rs_Gti_Detturtemp!ttemphhasta2) Then '(7)
                                  
                                      If (Desde_Lab > rs_Gti_Detturtemp!ttemphhasta2) And _
                                         (Not ((rs_Gti_Detturtemp!diasiguiente = 2 And otroDia))) Then '(8)

                                                  Hasta_Lab = ""
                                                  Desde_Lab = ""
                                                  Corte = 3
                                                  Desde_Nlb = Aux_desde
                                                  Hasta_Nlb = Aux_hasta
                                      Else '(8)
                                          If (Hasta_Lab > rs_Gti_Detturtemp!ttemphhasta2) And _
                                             (Not ((rs_Gti_Detturtemp!diasiguiente = 2 And otroDia))) Then '(9)
                                          
                                                  Hasta_Lab = rs_Gti_Detturtemp!ttemphhasta2
                                                  Corte = 2
                                                  Desde_Nlb = rs_Gti_Detturtemp!ttemphhasta2
                                                  Hasta_Nlb = Aux_hasta
                                          End If '(9)
                                      End If
                                   Else '(7)

                                         If Desde_Lab > rs_Gti_Detturtemp!ttemphhasta1 And _
                                            Not ((rs_Gti_Detturtemp!diasiguiente = 1 And otroDia)) Then '(8)
                                         
                                                    Hasta_Lab = ""
                                                    Desde_Lab = ""
                                                    Corte = 3
                                                    Desde_Nlb = Aux_desde
                                                    Hasta_Nlb = Aux_hasta
                                         Else '(8)

                                             If Hasta_Lab > rs_Gti_Detturtemp!ttemphhasta1 And _
                                                Not ((rs_Gti_Detturtemp!diasiguiente = 1 And otroDia)) Then '(9)

                                                        Hasta_Lab = rs_Gti_Detturtemp!ttemphhasta1
                                                        Corte = 2
                                                        Desde_Nlb = rs_Gti_Detturtemp!ttemphhasta1
                                                        Hasta_Nlb = Aux_hasta
                                             End If '(9)
                                        
                                        End If '(8)

                                  End If '(7)
                              
                              End If '(6)
                        
                        End If '(5)
    
                    End If '(4)

                 Else '(3)
                    
                    StrSql = "SELECT * FROM gti_dias "
                    StrSql = StrSql & " WHERE gti_dias.dianro =" & Nro_Dia
                    
                    OpenRecordset StrSql, rs_Gti_Dias
                    
                    If Not rs_Gti_Dias.EOF Then '(4)
    
                        If rs_Gti_Dias!Dialibre = -1 Then '(5)
                        
                                   Desde_Nlb = Aux_desde
                                   Hasta_Nlb = Aux_hasta
                                   Corte = 2
                        Else '(5)
    
                            If rs_Gti_Dias!diahoradesde3 <> "0000" And Not IsNull(rs_Gti_Dias!diahoradesde3) And _
                               rs_Gti_Dias!diahorahasta3 <> "0000" And Not IsNull(rs_Gti_Dias!diahorahasta3) Then '(6)

                                If Desde_Lab > rs_Gti_Dias!diahorahasta3 And _
                                   Not ((rs_Gti_Dias!diasiguiente = 3 And otroDia)) Then '(7)

                                           Hasta_Lab = ""
                                           Desde_Lab = ""
                                           Desde_Nlb = Aux_desde
                                           Hasta_Nlb = Aux_hasta
                                           Corte = 3
                                Else '(7)
                                    
                                    If Hasta_Lab > rs_Gti_Dias!diahorahasta3 And _
                                       Not ((rs_Gti_Dias!diasiguiente = 3 And otroDia)) Then
                                    
                                               Hasta_Lab = rs_Gti_Dias!diahorahasta3
                                               Desde_Nlb = rs_Gti_Dias!diahorahasta3
                                               Hasta_Nlb = Aux_hasta
                                               Corte = 2
                                    End If '(8)

                                End If '(7)

                            Else '(6)
                                  
                                  If rs_Gti_Dias!diahoradesde2 <> "0000" And Not IsNull(rs_Gti_Dias!diahoradesde2) And _
                                     rs_Gti_Dias!diahorahasta2 <> "0000" And Not IsNull(rs_Gti_Dias!diahorahasta2) Then '(7)
                                  
    
                                      If Desde_Lab > rs_Gti_Dias!diahorahasta2 And _
                                         Not ((rs_Gti_Dias!diasiguiente = 2 And otroDia)) Then '(8)

                                                 Hasta_Lab = ""
                                                 Desde_Lab = ""
                                                 Desde_Nlb = Aux_desde
                                                 Hasta_Nlb = Aux_hasta
                                                 Corte = 2
                                      Else '(8)

                                          If Hasta_Lab > rs_Gti_Dias!diahorahasta2 And _
                                             Not ((rs_Gti_Dias!diasiguiente = 2 And otroDia)) Then '(9)

                                                     Hasta_Lab = rs_Gti_Dias!diahorahasta2
                                                     Desde_Nlb = rs_Gti_Dias!diahorahasta2
                                                     Hasta_Nlb = Aux_hasta
                                                     Corte = 2
                                          End If '(9)

                                      End If '(8)

                                  Else '(7)
                                      
                                      If Desde_Lab > rs_Gti_Dias!diahorahasta1 And _
                                         Not ((rs_Gti_Dias!diasiguiente = 1 And otroDia)) Then '(8)
                                      
                                                 Hasta_Lab = ""
                                                 Desde_Lab = ""
                                                 Desde_Nlb = Aux_desde
                                                 Hasta_Nlb = Aux_hasta
                                                 Corte = 2
                                      Else '(8)
                                           If Hasta_Lab > rs_Gti_Dias!diahorahasta1 And _
                                              Not ((rs_Gti_Dias!diasiguiente = 1 And otroDia)) Then '(9)
                                           
                                                      Hasta_Lab = rs_Gti_Dias!diahorahasta1
                                                      Desde_Nlb = rs_Gti_Dias!diahorahasta1
                                                      Hasta_Nlb = Aux_hasta
                                                      Corte = 2
                                            End If '(9)
                                      
                                      End If '(8)
                                  
                                 End If '(7)
                            
                            End If '(6)
                        
                        End If '(5)
    
                    End If '(4)
                 
                 End If '(3)
    
            End If '(2)
    
        End If '(1)
    
    Else '(0) Si es feriado o dia libre

        Aux_desde = Desde_Lab
        Aux_hasta = Hasta_Lab
    
        If Corte = 2 Then
        
            Desde_Nlb = Aux_desde
            Hasta_Nlb = Aux_hasta
            Corte = 3
            Exit Sub
        End If
        
        EsFeriado_Sig = EsFeriado_Nuevo(Fecha, Empleado.Ternro, depurar)
         
        Call Buscar_Turno_Nuevo(p_fecha, Empleado.Ternro, depurar, Reg_T, Turno, Justif, Emp)
         
        If Reg_T.tiene_turno Then '(1)
            Call Buscar_Dia_Nuevo(Fecha, Fecha_Inicio, Reg_T.Nro_Turno, Empleado.Ternro, Reg_T.P_Asignacion, depurar, Reg_Dia)
    
            If Dia_libre_sig Then '(2)
                 
                 If Reg_T.P_Asignacion Then '(3)
        
                    StrSql = "SELECT * gti_detturtemp "
                    StrSql = StrSql & " WHERE gti_detturtemp.ternro =" & Empleado.Ternro
                    StrSql = StrSql & " AND gti_detturtemp.gttempdesde <=" & ConvFecha(fecha_proc)
                    StrSql = StrSql & " AND " & ConvFecha(fecha_proc) & " <= gti_detturtemp.gttemphasta "
                    OpenRecordset StrSql, rs_Gti_Detturtemp
                    
                    If Not rs_Gti_Detturtemp.EOF Then '(4)
                    
                        If rs_Gti_Detturtemp!ttemplibre = -1 Then '(5)
                                   Desde_Nlb = Aux_desde
                                   Hasta_Nlb = Aux_hasta
                                   Corte = 2
                        Else '(5)
                            
                            If rs_Gti_Detturtemp!ttemphdesde3 <> "0000" And Not IsNull(rs_Gti_Detturtemp!ttemphdesde3) And _
                               rs_Gti_Detturtemp!ttemphhasta3 <> "0000" And Not IsNull(rs_Gti_Detturtemp!ttemphhasta3) Then '(6)
                            
                                    If (Desde_Lab > rs_Gti_Detturtemp!ttemphhasta3) And _
                                       Not ((rs_Gti_Detturtemp!diasiguiente = 3 And otroDia)) Then '(7)

                                               Desde_Nlb = Aux_desde
                                               Hasta_Nlb = Aux_hasta
                                               Corte = 3
                                               Hasta_Lab = ""
                                               Desde_Lab = ""
                                               
                                    Else '(7)
                                        If (Hasta_Lab > rs_Gti_Detturtemp!ttemphhasta3) And _
                                           Not ((rs_Gti_Detturtemp!diasiguiente = 3 And otroDia)) Then '(8)
                                        
                                                   Hasta_Lab = rs_Gti_Detturtemp!ttemphhasta3
                                                   Corte = 2
                                                   Desde_Nlb = rs_Gti_Detturtemp!ttemphhasta3
                                                   Hasta_Nlb = Aux_hasta
                                        End If '(8)
                                        
                                    End If '(7)

                                Else '(6)
                                  
                                  If rs_Gti_Detturtemp!ttemphdesde2 <> "0000" And Not IsNull(rs_Gti_Detturtemp!ttemphdesde2) And _
                                     rs_Gti_Detturtemp!ttemphhasta2 <> "0000" And Not IsNull(rs_Gti_Detturtemp!ttemphhasta2) Then '(7)

                                      If Desde_Lab > rs_Gti_Detturtemp!ttemphhasta2 And _
                                         Not ((rs_Gti_Detturtemp!diasiguiente = 2 And otroDia)) Then '(8)
                                      
                                                 Desde_Nlb = Aux_desde
                                                 Hasta_Nlb = Aux_hasta
                                                 Corte = 3
                                                 Hasta_Lab = ""
                                                 Desde_Lab = ""
                                                 
                                      Else '(8)
                                      
                                          If Hasta_Lab > rs_Gti_Detturtemp!ttemphhasta2 And _
                                             Not ((rs_Gti_Detturtemp!diasiguiente = 2 And otroDia)) Then '(9)
                                          
                                                      Hasta_Lab = rs_Gti_Detturtemp!ttemphhasta2
                                                      Corte = 2
                                                      Desde_Nlb = rs_Gti_Detturtemp!ttemphhasta2
                                                      Hasta_Nlb = Aux_hasta
                                          End If '(9)
                                          
                                      End If '(8)
                                  
                                  Else '(7)

                                         If Desde_Lab > rs_Gti_Detturtemp!ttemphhasta1 And _
                                            Not ((rs_Gti_Detturtemp!diasiguiente = 1 And otroDia)) Then '(8)
                                         
                                                    Desde_Nlb = Aux_desde
                                                    Hasta_Nlb = Aux_hasta
                                                    Corte = 3
                                                    Hasta_Lab = ""
                                                    Desde_Lab = ""

                                         Else '(8)

                                            If Hasta_Lab > rs_Gti_Detturtemp!ttemphhasta1 And _
                                               Not ((rs_Gti_Detturtemp!diasiguiente = 1 And otroDia)) Then '(9)
                                            
                                                       Hasta_Lab = rs_Gti_Detturtemp!ttemphhasta1
                                                       Corte = 2
                                                       Desde_Nlb = rs_Gti_Detturtemp!ttemphhasta1
                                                       Hasta_Nlb = Aux_hasta
                                            End If '(9)
                                         
                                         End If '(8)

                                  End If '(7)
                             
                             End If '(6)
                        
                        End If '(5)
                    
                    End If '(4)
                 
                 Else '(3)
                    
                    StrSql = "SELECT * FROM gti_dias "
                    StrSql = StrSql & " WHERE gti_dias.dianro =" & Nro_dia_sig
                    
                    OpenRecordset StrSql, rs_Gti_Dias
                    
                    If Not rs_Gti_Dias.EOF Then '(4)
                    
                        If rs_Gti_Dias!Dialibre = -1 Then '(5)
                        
                                   Desde_Nlb = Aux_desde
                                   Hasta_Nlb = Aux_hasta
                                   Corte = 2
                        Else '(5)
    
                            If rs_Gti_Dias!diahoradesde3 <> "0000" And Not IsNull(rs_Gti_Dias!diahoradesde3) And _
                               rs_Gti_Dias!diahorahasta3 <> "0000" And Not IsNull(rs_Gti_Dias!diahorahasta3) Then '(6)
                            
                                If Desde_Lab > rs_Gti_Dias!diahorahasta3 And _
                                   Not ((rs_Gti_Dias!diasiguiente = 3 And otroDia)) Then '(7)
                                
                                           Desde_Nlb = Aux_desde
                                           Hasta_Nlb = Aux_hasta
                                           Corte = 3
                                           Hasta_Lab = ""
                                           Desde_Lab = ""
                                
                                Else '(7)
                                    
                                    If Hasta_Lab > rs_Gti_Dias!diahorahasta3 And _
                                       Not ((rs_Gti_Dias!diasiguiente = 3 And otroDia)) Then '(8)
                                    
                                               Hasta_Lab = rs_Gti_Dias!diahorahasta3
                                               Desde_Nlb = rs_Gti_Dias!diahorahasta3
                                               Hasta_Nlb = Aux_hasta
                                               Corte = 2
                                    End If '(8)
                                    
                                End If '(7)
                            
                            Else '(6)
                            
                                  If rs_Gti_Dias!diahoradesde2 <> "0000" And Not IsNull(rs_Gti_Dias!diahoradesde2) And _
                                     rs_Gti_Dias!diahorahasta2 <> "0000" And Not IsNull(rs_Gti_Dias!diahorahasta2) Then '(7)
    
                                      If Desde_Lab > rs_Gti_Dias!diahorahasta2 And _
                                        Not ((rs_Gti_Dias!diasiguiente = 2 And otroDia)) Then '(8)

                                                 Desde_Nlb = Aux_desde
                                                 Hasta_Nlb = Aux_hasta
                                                 Corte = 3
                                                 Hasta_Lab = ""
                                                 Desde_Lab = ""

                                      Else '(8)
                                          
                                          If Hasta_Lab > rs_Gti_Dias!diahorahasta2 And _
                                            Not ((rs_Gti_Dias!diasiguiente = 2 And otroDia)) Then '(9)

                                                     Hasta_Lab = rs_Gti_Dias!diahorahasta2
                                                     Desde_Nlb = rs_Gti_Dias!diahorahasta2
                                                     Hasta_Nlb = Aux_hasta
                                                     Corte = 2
                                          End If '(9)
                                      
                                      End If '(8)

                                  Else '(7)

                                      If Hasta_Lab > rs_Gti_Dias!diahorahasta1 And _
                                         Not ((rs_Gti_Dias!diasiguiente = 1 And otroDia)) Then '(8)
                                      
                                                 Desde_Nlb = Aux_desde
                                                 Hasta_Nlb = Aux_hasta
                                                 Corte = 3
                                                 Hasta_Lab = ""
                                                 Desde_Lab = ""

                                      Else '(8)
                                          If Hasta_Lab > rs_Gti_Dias!diahorahasta1 And _
                                             Not ((rs_Gti_Dias!diasiguiente = 1 And otroDia)) Then '(9)
                                          
                                                     Hasta_Lab = rs_Gti_Dias!diahorahasta1
                                                     Desde_Nlb = rs_Gti_Dias!diahorahasta1
                                                     Hasta_Nlb = Aux_hasta
                                                     Corte = 2
                                          End If '(9)
                                      
                                      End If '(8)
                                  
                                  End If '(7)
                            
                            End If '(6)
                        
                        End If '(5)
    
                    End If '(4)
                 
                 End If '(3)
    
            End If '(2)
    
        End If '(1)

    End If '(0)

'    If depurar Then
'        Flog.writeline
'        Flog.writeline Espacios(Tabulador * 4) & "Fin Actualizar_Dia_Tipo()"
'        Flog.writeline
'    End If
End Sub



Public Sub Cambiar_Horas_Desde(ByVal nro_desg As Long, ByRef hora_desde_desg As String, ByRef fecha_desde_desg As Date, ByVal Cambio_dia As Boolean)
'----------------------------------------------------------------------------------------------------
'Ultima Modificacion: FGZ - 10/01/2006
'       en realidad, si el desgloce es fijo siempre se refiere al dia que estoy procesando
'----------------------------------------------------------------------------------------------------
Dim hora_entrada1 As String
Dim hora_entrada2 As String
Dim hora_entrada3 As String
Dim hora_salida1 As String
Dim hora_salida2 As String
Dim hora_salida3 As String

Dim horres As String
Dim fecres As Date
Dim ok As Boolean
Dim objrsDesgl As New ADODB.Recordset
Dim objRs As New ADODB.Recordset

Dim Pasa As Boolean
Dim Aux_Fecha As Date

    Aux_Fecha = p_fecha
    If P_Asignacion Then
        If TurnoNocturno_HaciaAtras Then
            StrSql = "SELECT * FROM gti_detturtemp WHERE (ternro =" & Empleado.Ternro & " ) and (" & _
            "gttempdesde <= " & ConvFecha(p_fecha + 1) & ") and (" & _
            ConvFecha(p_fecha + 1) & " <= gttemphasta)"
        Else
            StrSql = "SELECT * FROM gti_detturtemp WHERE (ternro =" & Empleado.Ternro & " ) and (" & _
                     "gttempdesde <= " & ConvFecha(p_fecha) & ") and (" & _
                     ConvFecha(p_fecha) & " <= gttemphasta)"
        End If
        OpenRecordset StrSql, objRs
        If Not objRs.EOF Then
             hora_entrada1 = "" & objRs!ttemphdesde1
             hora_entrada2 = "" & objRs!ttemphdesde2
             hora_entrada3 = "" & objRs!ttemphdesde3
             hora_salida1 = "" & objRs!ttemphhasta1
             hora_salida2 = "" & objRs!ttemphhasta2
             hora_salida3 = "" & objRs!ttemphhasta3
         End If
    Else
        If Not Horario_Movil And Not Horario_Flexible_Rotativo Then
            StrSql = "SELECT * FROM gti_dias where dianro =" & Nro_Dia
            OpenRecordset StrSql, objRs
            If Not objRs.EOF Then
                hora_entrada1 = "" & objRs!diahoradesde1
                hora_entrada2 = "" & objRs!diahoradesde2
                hora_entrada3 = "" & objRs!diahoradesde3
                hora_salida1 = "" & objRs!diahorahasta1
                hora_salida2 = "" & objRs!diahorahasta2
                hora_salida3 = "" & objRs!diahorahasta3
            End If
        Else
            hora_entrada1 = "" & E1
            hora_entrada2 = "" & E2
            hora_entrada3 = "" & E3
            hora_salida1 = "" & S1
            hora_salida2 = "" & S2
            hora_salida3 = "" & S3
        End If
    End If

    'Cambio segun lo definido en el desglose de horas
    StrSql = "SELECT * FROM  gti_desghora WHERE desghnro = " & nro_desg
    OpenRecordset StrSql, objrsDesgl
    If Not objrsDesgl.EOF Then
        Select Case objrsDesgl!desghorfijo
            Case 1 ' Horario Fijo
                hora_desde_desg = objrsDesgl!desghoradesde
                'fecha_desde_desg = p_fecha
                'FGZ - 10/01/2006
                'en realidad, si el desgloce es fijo siempre se refiere al dia que estoy procesando
                If Cambio_dia Then
                    fecha_desde_desg = DateAdd("d", 1, p_fecha)
                Else
                    fecha_desde_desg = p_fecha
                End If
                
            Case 2 ' Horario Variable

                Select Case objrsDesgl!desde_entrada
                    Case 1:
                       If objrsDesgl!desdehorentant <> "" Then  'Anterior a la entrada
                            objFechasHoras.RestaXHoras p_fecha, hora_entrada1, objrsDesgl!desdehorentant, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_desde_desg = horres
                            fecha_desde_desg = fecres
                         End If
                       
                       If objrsDesgl!desdehorentpos <> "" Then  'Posteriores a la entrada
                            objFechasHoras.SumoHoras p_fecha, hora_entrada1, objrsDesgl!desdehorentpos, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_desde_desg = horres
                            fecha_desde_desg = fecres
                       End If
                       If objrsDesgl!desdehorsalant <> "" Then  'Anteriores a la salida
                            If hora_salida1 < hora_entrada1 Then
                                Aux_Fecha = p_fecha + 1
                            Else
                                Aux_Fecha = p_fecha
                            End If
                            objFechasHoras.RestaXHoras Aux_Fecha, hora_salida1, objrsDesgl!desdehorsalant, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_desde_desg = horres
                            fecha_desde_desg = fecres
                       End If
                       If objrsDesgl!desdehorsalpos <> "" Then  'Posteriores a la salida
                            If hora_salida1 < hora_entrada1 Then
                                Aux_Fecha = p_fecha + 1
                            Else
                                Aux_Fecha = p_fecha
                            End If
                            objFechasHoras.SumoHoras Aux_Fecha, hora_salida1, objrsDesgl!desdehorsalpos, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_desde_desg = horres
                            fecha_desde_desg = fecres
                       End If
                
                    Case 2 'Segunda Hora de entrada/salida
                      If objrsDesgl!desdehorentant <> "" Then
                         objFechasHoras.RestaXHoras p_fecha, hora_entrada2, objrsDesgl!desdehorentant, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_desde_desg = horres
                         fecha_desde_desg = fecres
                      End If
                      
                      If objrsDesgl!desdehorentpos <> "" Then
                         objFechasHoras.SumoHoras p_fecha, hora_entrada2, objrsDesgl!desdehorentpos, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_desde_desg = horres
                         fecha_desde_desg = fecres
                      End If
                      If objrsDesgl!desdehorsalant <> "" Then
                         If hora_salida2 < hora_entrada2 Then
                            Aux_Fecha = p_fecha + 1
                         Else
                            Aux_Fecha = p_fecha
                         End If
                         objFechasHoras.RestaXHoras Aux_Fecha, hora_salida2, objrsDesgl!desdehorsalant, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_desde_desg = horres
                         fecha_desde_desg = fecres
                      End If
                      If objrsDesgl!desdehorsalpos <> "" Then
                         If hora_salida2 < hora_entrada2 Then
                            Aux_Fecha = p_fecha + 1
                         Else
                            Aux_Fecha = p_fecha
                         End If
                         objFechasHoras.SumoHoras Aux_Fecha, hora_salida2, objrsDesgl!desdehorsalpos, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_desde_desg = horres
                         fecha_desde_desg = fecres
                      End If
             
                    Case 3   ' Tercera Hora de entrada/salida
                      If objrsDesgl!desdehorentant <> "" Then
                         objFechasHoras.RestaXHoras p_fecha, hora_entrada3, objrsDesgl!desdehorentant, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_desde_desg = horres
                         fecha_desde_desg = fecres
                      End If
                      If objrsDesgl!desdehorentpos <> "" Then
                            objFechasHoras.SumoHoras p_fecha, hora_entrada3, objrsDesgl!desdehorentpos, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_desde_desg = horres
                            fecha_desde_desg = fecres
                      End If
                      If objrsDesgl!desdehorsalant <> "" Then
                            If hora_salida3 < hora_entrada3 Then
                                Aux_Fecha = p_fecha + 1
                            Else
                                Aux_Fecha = p_fecha
                            End If
                            objFechasHoras.RestaXHoras Aux_Fecha, hora_salida3, objrsDesgl!desdehorsalant, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_desde_desg = horres
                            fecha_desde_desg = fecres
                      End If
                      If objrsDesgl!desdehorsalpos <> "" Then
                            If hora_salida3 < hora_entrada3 Then
                                Aux_Fecha = p_fecha + 1
                            Else
                                Aux_Fecha = p_fecha
                            End If
                            objFechasHoras.SumoHoras Aux_Fecha, hora_salida3, objrsDesgl!desdehorsalpos, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_desde_desg = horres
                            fecha_desde_desg = fecres
                      End If
                      
                    End Select
                    
           Case 3   'Fijo/Variable
               If objrsDesgl!desghoradesde <> "" Then
                    hora_desde_desg = objrsDesgl!desghoradesde
                    'FGZ - 06/03/2009 - no seteaba esta fecha
                                        
                    'FGZ - 06/05/2010 ---------------- no estaba controlando el pase de dia
                    'fecha_desde_desg = p_fecha
                    If Cambio_dia Then
                        fecha_desde_desg = DateAdd("d", 1, p_fecha)
                    Else
                        fecha_desde_desg = p_fecha
                    End If
                    'FGZ - 06/05/2010 ---------------- no estaba controlando el pase de dia
               Else
              
                    Select Case objrsDesgl!desde_entrada
                       Case 1  ' Primera hora de entrada salida
                           If objrsDesgl!desdehorentant <> "" Then
                                objFechasHoras.RestaXHoras p_fecha, hora_entrada1, objrsDesgl!desdehorentant, fecres, horres
                                ok = objFechasHoras.ValidarHora(horres)
                                If Not ok Then Exit Sub
                                hora_desde_desg = horres
                                fecha_desde_desg = fecres
                           End If
                           If objrsDesgl!desdehorentpos <> "" Then
                                 objFechasHoras.SumoHoras p_fecha, hora_entrada1, objrsDesgl!desdehorentpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_desde_desg = horres
                                 fecha_desde_desg = fecres
                           End If
                           If objrsDesgl!desdehorsalant <> "" Then
                                 If hora_salida1 < hora_entrada1 Then
                                    Aux_Fecha = p_fecha + 1
                                 Else
                                    Aux_Fecha = p_fecha
                                 End If
                                 objFechasHoras.RestaXHoras Aux_Fecha, hora_salida1, objrsDesgl!desdehorsalant, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_desde_desg = horres
                                 fecha_desde_desg = fecres
                           End If
                           If objrsDesgl!desdehorsalpos <> "" Then
                                 If hora_salida1 < hora_entrada1 Then
                                    Aux_Fecha = p_fecha + 1
                                 Else
                                    Aux_Fecha = p_fecha
                                 End If
                                 objFechasHoras.SumoHoras Aux_Fecha, hora_salida1, objrsDesgl!desdehorsalpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_desde_desg = horres
                                 fecha_desde_desg = fecres
                           End If
                       Case 2  ' Segunda hora de entrada salida */
                           If objrsDesgl!desdehorentant <> "" Then
                                 objFechasHoras.RestaXHoras p_fecha, hora_entrada2, objrsDesgl!desdehorentant, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_desde_desg = horres
                                 fecha_desde_desg = fecres
                            End If
                            If objrsDesgl!desdehorentpos <> "" Then
                                objFechasHoras.SumoHoras p_fecha, hora_entrada2, objrsDesgl!desdehorentpos, fecres, horres
                                ok = objFechasHoras.ValidarHora(horres)
                                If Not ok Then Exit Sub
                                hora_desde_desg = horres
                                fecha_desde_desg = fecres
                            End If
                            If objrsDesgl!desdehorsalant <> "" Then
                                 If hora_salida2 < hora_entrada2 Then
                                    Aux_Fecha = p_fecha + 1
                                 Else
                                    Aux_Fecha = p_fecha
                                 End If
                                objFechasHoras.RestaXHoras Aux_Fecha, hora_salida2, objrsDesgl!desdehorsalant, fecres, horres
                                ok = objFechasHoras.ValidarHora(horres)
                                If Not ok Then Exit Sub
                                hora_desde_desg = horres
                                fecha_desde_desg = fecres
                            End If
                            If objrsDesgl!desdehorsalpos <> "" Then
                                 If hora_salida2 < hora_entrada2 Then
                                    Aux_Fecha = p_fecha + 1
                                 Else
                                    Aux_Fecha = p_fecha
                                 End If
                                 objFechasHoras.SumoHoras Aux_Fecha, hora_salida2, objrsDesgl!desdehorsalpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_desde_desg = horres
                                 fecha_desde_desg = fecres
                            End If
                        Case 3  ' Tercer hora de entrada salida
                            If objrsDesgl!desdehorentant <> "" Then
                                 objFechasHoras.RestaXHoras p_fecha, hora_entrada3, objrsDesgl!desdehorentant, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_desde_desg = horres
                                 fecha_desde_desg = fecres
                            End If
                            If objrsDesgl!desdehorentpos <> "" Then
                                 objFechasHoras.SumoHoras p_fecha, hora_entrada3, objrsDesgl!desdehorentpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_desde_desg = horres
                                 fecha_desde_desg = fecres
                            End If
                            If objrsDesgl!desdehorsalant <> "" Then
                                 If hora_salida3 < hora_entrada3 Then
                                    Aux_Fecha = p_fecha + 1
                                 Else
                                    Aux_Fecha = p_fecha
                                 End If
                                 objFechasHoras.RestaXHoras Aux_Fecha, hora_salida3, objrsDesgl!desdehorsalant, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_desde_desg = horres
                                 fecha_desde_desg = fecres
                            End If
                            If objrsDesgl!desdehorsalpos <> "" Then
                                 If hora_salida3 < hora_entrada3 Then
                                    Aux_Fecha = p_fecha + 1
                                 Else
                                    Aux_Fecha = p_fecha
                                 End If
                                 objFechasHoras.SumoHoras Aux_Fecha, hora_salida3, objrsDesgl!desdehorsalpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_desde_desg = horres
                                 fecha_desde_desg = fecres
                            End If
                        End Select
               End If
        End Select
    End If
End Sub


Public Sub Cambiar_Horas_Desde_Sykes(ByVal nro_desg As Long, ByRef hora_desde_desg As String, ByRef fecha_desde_desg As Date, ByVal Cambio_dia As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: resuelve el desglose desde.
' Autor      : FGZ
' Fecha      : 25/07/2011
' Ultima Mod.:
' Descripcion:
'
' ---------------------------------------------------------------------------------------------
Dim hora_entrada1 As String
Dim hora_entrada2 As String
Dim hora_entrada3 As String
Dim hora_salida1 As String
Dim hora_salida2 As String
Dim hora_salida3 As String

Dim horres As String
Dim fecres As Date
Dim ok As Boolean
Dim objrsDesgl As New ADODB.Recordset
Dim objRs As New ADODB.Recordset

Dim Pasa As Boolean
Dim Aux_Fecha As Date

    Aux_Fecha = p_fecha
    
    hora_entrada1 = "" & E1
    hora_entrada2 = "" & E2
    hora_entrada3 = "" & E3
    hora_salida1 = "" & S1
    hora_salida2 = "" & S2
    hora_salida3 = "" & S3
    
    
'    If P_Asignacion Then
'        StrSql = "SELECT * FROM gti_detturtemp WHERE (ternro =" & Empleado.Ternro & " ) and (" & _
'                 "gttempdesde <= " & ConvFecha(p_fecha) & ") and (" & _
'                 ConvFecha(p_fecha) & " <= gttemphasta)"
'        OpenRecordset StrSql, objRs
'        If Not objRs.EOF Then
'             hora_entrada1 = "" & objRs!ttemphdesde1
'             hora_entrada2 = "" & objRs!ttemphdesde2
'             hora_entrada3 = "" & objRs!ttemphdesde3
'             hora_salida1 = "" & objRs!ttemphhasta1
'             hora_salida2 = "" & objRs!ttemphhasta2
'             hora_salida3 = "" & objRs!ttemphhasta3
'         End If
'    Else
'        If Not Horario_Movil And Not Horario_Flexible_Rotativo Then
'            StrSql = "SELECT * FROM gti_dias where dianro =" & Nro_Dia
'            OpenRecordset StrSql, objRs
'            If Not objRs.EOF Then
'                hora_entrada1 = "" & objRs!diahoradesde1
'                hora_entrada2 = "" & objRs!diahoradesde2
'                hora_entrada3 = "" & objRs!diahoradesde3
'                hora_salida1 = "" & objRs!diahorahasta1
'                hora_salida2 = "" & objRs!diahorahasta2
'                hora_salida3 = "" & objRs!diahorahasta3
'            End If
'        Else
'            hora_entrada1 = "" & E1
'            hora_entrada2 = "" & E2
'            hora_entrada3 = "" & E3
'            hora_salida1 = "" & S1
'            hora_salida2 = "" & S2
'            hora_salida3 = "" & S3
'        End If
'    End If

    'Cambio segun lo definido en el desglose de horas
    StrSql = "SELECT * FROM  gti_desghora WHERE desghnro = " & nro_desg
    OpenRecordset StrSql, objrsDesgl
    If Not objrsDesgl.EOF Then
        Select Case objrsDesgl!desghorfijo
            Case 1 ' Horario Fijo
                hora_desde_desg = objrsDesgl!desghoradesde
                'fecha_desde_desg = p_fecha
                'FGZ - 10/01/2006
                'en realidad, si el desgloce es fijo siempre se refiere al dia que estoy procesando
                If Cambio_dia Then
                    fecha_desde_desg = DateAdd("d", 1, p_fecha)
                Else
                    fecha_desde_desg = p_fecha
                End If
                
            Case 2 ' Horario Variable

                Select Case objrsDesgl!desde_entrada
                    Case 1:
                       If objrsDesgl!desdehorentant <> "" Then  'Anterior a la entrada
                            objFechasHoras.RestaXHoras p_fecha, hora_entrada1, objrsDesgl!desdehorentant, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_desde_desg = horres
                            fecha_desde_desg = fecres
                         End If
                       
                       If objrsDesgl!desdehorentpos <> "" Then  'Posteriores a la entrada
                            objFechasHoras.SumoHoras p_fecha, hora_entrada1, objrsDesgl!desdehorentpos, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_desde_desg = horres
                            fecha_desde_desg = fecres
                       End If
                       If objrsDesgl!desdehorsalant <> "" Then  'Anteriores a la salida
                            If hora_salida1 < hora_entrada1 Then
                                Aux_Fecha = p_fecha + 1
                            Else
                                Aux_Fecha = p_fecha
                            End If
                            objFechasHoras.RestaXHoras Aux_Fecha, hora_salida1, objrsDesgl!desdehorsalant, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_desde_desg = horres
                            fecha_desde_desg = fecres
                       End If
                       If objrsDesgl!desdehorsalpos <> "" Then  'Posteriores a la salida
                            If hora_salida1 < hora_entrada1 Then
                                Aux_Fecha = p_fecha + 1
                            Else
                                Aux_Fecha = p_fecha
                            End If
                            objFechasHoras.SumoHoras Aux_Fecha, hora_salida1, objrsDesgl!desdehorsalpos, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_desde_desg = horres
                            fecha_desde_desg = fecres
                       End If
                
                    Case 2 'Segunda Hora de entrada/salida
                      If objrsDesgl!desdehorentant <> "" Then
                         objFechasHoras.RestaXHoras p_fecha, hora_entrada2, objrsDesgl!desdehorentant, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_desde_desg = horres
                         fecha_desde_desg = fecres
                      End If
                      
                      If objrsDesgl!desdehorentpos <> "" Then
                         objFechasHoras.SumoHoras p_fecha, hora_entrada2, objrsDesgl!desdehorentpos, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_desde_desg = horres
                         fecha_desde_desg = fecres
                      End If
                      If objrsDesgl!desdehorsalant <> "" Then
                         If hora_salida2 < hora_entrada2 Then
                            Aux_Fecha = p_fecha + 1
                         Else
                            Aux_Fecha = p_fecha
                         End If
                         objFechasHoras.RestaXHoras Aux_Fecha, hora_salida2, objrsDesgl!desdehorsalant, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_desde_desg = horres
                         fecha_desde_desg = fecres
                      End If
                      If objrsDesgl!desdehorsalpos <> "" Then
                         If hora_salida2 < hora_entrada2 Then
                            Aux_Fecha = p_fecha + 1
                         Else
                            Aux_Fecha = p_fecha
                         End If
                         objFechasHoras.SumoHoras Aux_Fecha, hora_salida2, objrsDesgl!desdehorsalpos, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_desde_desg = horres
                         fecha_desde_desg = fecres
                      End If
             
                    Case 3   ' Tercera Hora de entrada/salida
                      If objrsDesgl!desdehorentant <> "" Then
                         objFechasHoras.RestaXHoras p_fecha, hora_entrada3, objrsDesgl!desdehorentant, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_desde_desg = horres
                         fecha_desde_desg = fecres
                      End If
                      If objrsDesgl!desdehorentpos <> "" Then
                            objFechasHoras.SumoHoras p_fecha, hora_entrada3, objrsDesgl!desdehorentpos, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_desde_desg = horres
                            fecha_desde_desg = fecres
                      End If
                      If objrsDesgl!desdehorsalant <> "" Then
                            If hora_salida3 < hora_entrada3 Then
                                Aux_Fecha = p_fecha + 1
                            Else
                                Aux_Fecha = p_fecha
                            End If
                            objFechasHoras.RestaXHoras Aux_Fecha, hora_salida3, objrsDesgl!desdehorsalant, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_desde_desg = horres
                            fecha_desde_desg = fecres
                      End If
                      If objrsDesgl!desdehorsalpos <> "" Then
                            If hora_salida3 < hora_entrada3 Then
                                Aux_Fecha = p_fecha + 1
                            Else
                                Aux_Fecha = p_fecha
                            End If
                            objFechasHoras.SumoHoras Aux_Fecha, hora_salida3, objrsDesgl!desdehorsalpos, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_desde_desg = horres
                            fecha_desde_desg = fecres
                      End If
                      
                    End Select
                    
           Case 3   'Fijo/Variable
               If objrsDesgl!desghoradesde <> "" Then
                    hora_desde_desg = objrsDesgl!desghoradesde
                    'FGZ - 06/03/2009 - no seteaba esta fecha
                                        
                    'FGZ - 06/05/2010 ---------------- no estaba controlando el pase de dia
                    'fecha_desde_desg = p_fecha
                    If Cambio_dia Then
                        fecha_desde_desg = DateAdd("d", 1, p_fecha)
                    Else
                        fecha_desde_desg = p_fecha
                    End If
                    'FGZ - 06/05/2010 ---------------- no estaba controlando el pase de dia
               Else
              
                    Select Case objrsDesgl!desde_entrada
                       Case 1  ' Primera hora de entrada salida
                           If objrsDesgl!desdehorentant <> "" Then
                                objFechasHoras.RestaXHoras p_fecha, hora_entrada1, objrsDesgl!desdehorentant, fecres, horres
                                ok = objFechasHoras.ValidarHora(horres)
                                If Not ok Then Exit Sub
                                hora_desde_desg = horres
                                fecha_desde_desg = fecres
                           End If
                           If objrsDesgl!desdehorentpos <> "" Then
                                 objFechasHoras.SumoHoras p_fecha, hora_entrada1, objrsDesgl!desdehorentpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_desde_desg = horres
                                 fecha_desde_desg = fecres
                           End If
                           If objrsDesgl!desdehorsalant <> "" Then
                                 If hora_salida1 < hora_entrada1 Then
                                    Aux_Fecha = p_fecha + 1
                                 Else
                                    Aux_Fecha = p_fecha
                                 End If
                                 objFechasHoras.RestaXHoras Aux_Fecha, hora_salida1, objrsDesgl!desdehorsalant, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_desde_desg = horres
                                 fecha_desde_desg = fecres
                           End If
                           If objrsDesgl!desdehorsalpos <> "" Then
                                 If hora_salida1 < hora_entrada1 Then
                                    Aux_Fecha = p_fecha + 1
                                 Else
                                    Aux_Fecha = p_fecha
                                 End If
                                 objFechasHoras.SumoHoras Aux_Fecha, hora_salida1, objrsDesgl!desdehorsalpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_desde_desg = horres
                                 fecha_desde_desg = fecres
                           End If
                       Case 2  ' Segunda hora de entrada salida */
                           If objrsDesgl!desdehorentant <> "" Then
                                 objFechasHoras.RestaXHoras p_fecha, hora_entrada2, objrsDesgl!desdehorentant, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_desde_desg = horres
                                 fecha_desde_desg = fecres
                            End If
                            If objrsDesgl!desdehorentpos <> "" Then
                                objFechasHoras.SumoHoras p_fecha, hora_entrada2, objrsDesgl!desdehorentpos, fecres, horres
                                ok = objFechasHoras.ValidarHora(horres)
                                If Not ok Then Exit Sub
                                hora_desde_desg = horres
                                fecha_desde_desg = fecres
                            End If
                            If objrsDesgl!desdehorsalant <> "" Then
                                 If hora_salida2 < hora_entrada2 Then
                                    Aux_Fecha = p_fecha + 1
                                 Else
                                    Aux_Fecha = p_fecha
                                 End If
                                objFechasHoras.RestaXHoras Aux_Fecha, hora_salida2, objrsDesgl!desdehorsalant, fecres, horres
                                ok = objFechasHoras.ValidarHora(horres)
                                If Not ok Then Exit Sub
                                hora_desde_desg = horres
                                fecha_desde_desg = fecres
                            End If
                            If objrsDesgl!desdehorsalpos <> "" Then
                                 If hora_salida2 < hora_entrada2 Then
                                    Aux_Fecha = p_fecha + 1
                                 Else
                                    Aux_Fecha = p_fecha
                                 End If
                                 objFechasHoras.SumoHoras Aux_Fecha, hora_salida2, objrsDesgl!desdehorsalpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_desde_desg = horres
                                 fecha_desde_desg = fecres
                            End If
                        Case 3  ' Tercer hora de entrada salida
                            If objrsDesgl!desdehorentant <> "" Then
                                 objFechasHoras.RestaXHoras p_fecha, hora_entrada3, objrsDesgl!desdehorentant, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_desde_desg = horres
                                 fecha_desde_desg = fecres
                            End If
                            If objrsDesgl!desdehorentpos <> "" Then
                                 objFechasHoras.SumoHoras p_fecha, hora_entrada3, objrsDesgl!desdehorentpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_desde_desg = horres
                                 fecha_desde_desg = fecres
                            End If
                            If objrsDesgl!desdehorsalant <> "" Then
                                 If hora_salida3 < hora_entrada3 Then
                                    Aux_Fecha = p_fecha + 1
                                 Else
                                    Aux_Fecha = p_fecha
                                 End If
                                 objFechasHoras.RestaXHoras Aux_Fecha, hora_salida3, objrsDesgl!desdehorsalant, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_desde_desg = horres
                                 fecha_desde_desg = fecres
                            End If
                            If objrsDesgl!desdehorsalpos <> "" Then
                                 If hora_salida3 < hora_entrada3 Then
                                    Aux_Fecha = p_fecha + 1
                                 Else
                                    Aux_Fecha = p_fecha
                                 End If
                                 objFechasHoras.SumoHoras Aux_Fecha, hora_salida3, objrsDesgl!desdehorsalpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_desde_desg = horres
                                 fecha_desde_desg = fecres
                            End If
                        End Select
               End If
        End Select
    End If
End Sub

Public Sub Cambiar_Horas_Desde2(ByVal nro_desg As Long, ByRef hora_desde_desg As String, ByRef fecha_desde_desg As Date, ByVal Cambio_dia As Boolean, ByVal FechaDeProc As Date)
'----------------------------------------------------------------------------------------------------
'Ultima Modificacion: FGZ - 12/06/2006
'
'----------------------------------------------------------------------------------------------------
Dim hora_entrada1 As String
Dim hora_entrada2 As String
Dim hora_entrada3 As String
Dim hora_salida1 As String
Dim hora_salida2 As String
Dim hora_salida3 As String

Dim horres As String
Dim fecres As Date
Dim ok As Boolean
Dim objrsDesgl As New ADODB.Recordset
Dim objRs As New ADODB.Recordset

Dim Pasa As Boolean
Dim Aux_Fecha As Date


    Aux_Fecha = FechaDeProc
    If P_Asignacion Then
        StrSql = "SELECT * FROM gti_detturtemp WHERE (ternro =" & Empleado.Ternro & " ) and (" & _
                 "gttempdesde <= " & ConvFecha(p_fecha) & ") and (" & _
                 ConvFecha(p_fecha) & " <= gttemphasta)"
        OpenRecordset StrSql, objRs
        If Not objRs.EOF Then
             hora_entrada1 = "" & objRs!ttemphdesde1
             hora_entrada2 = "" & objRs!ttemphdesde2
             hora_entrada3 = "" & objRs!ttemphdesde3
             hora_salida1 = "" & objRs!ttemphhasta1
             hora_salida2 = "" & objRs!ttemphhasta2
             hora_salida3 = "" & objRs!ttemphhasta3
         End If
    Else
        If Not Horario_Movil And Not Horario_Flexible_Rotativo Then
            StrSql = "SELECT * FROM gti_dias where dianro =" & Nro_Dia
            OpenRecordset StrSql, objRs
            If Not objRs.EOF Then
                hora_entrada1 = "" & objRs!diahoradesde1
                hora_entrada2 = "" & objRs!diahoradesde2
                hora_entrada3 = "" & objRs!diahoradesde3
                hora_salida1 = "" & objRs!diahorahasta1
                hora_salida2 = "" & objRs!diahorahasta2
                hora_salida3 = "" & objRs!diahorahasta3
            End If
        Else
            hora_entrada1 = "" & E1
            hora_entrada2 = "" & E2
            hora_entrada3 = "" & E3
            hora_salida1 = "" & S1
            hora_salida2 = "" & S2
            hora_salida3 = "" & S3
        End If
    End If

    'Cambio segun lo definido en el desglose de horas
    StrSql = "SELECT * FROM  gti_desghora WHERE desghnro = " & nro_desg
    OpenRecordset StrSql, objrsDesgl
    If Not objrsDesgl.EOF Then
        Select Case objrsDesgl!desghorfijo
            Case 1 ' Horario Fijo
                hora_desde_desg = objrsDesgl!desghoradesde
                'fecha_desde_desg = FechaDeProc
                'FGZ - 10/01/2006
                'en realidad, si el desgloce es fijo siempre se refiere al dia que estoy procesando
                If Cambio_dia Then
                    'fecha_desde_desg = DateAdd("d", 1, FechaDeProc)
                    fecha_desde_desg = FechaDeProc
                Else
                    fecha_desde_desg = FechaDeProc
                End If
                
            Case 2 ' Horario Variable

                Select Case objrsDesgl!desde_entrada
                    Case 1:
                       If objrsDesgl!desdehorentant <> "" Then  'Anterior a la entrada
                            objFechasHoras.RestaXHoras FechaDeProc, hora_entrada1, objrsDesgl!desdehorentant, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_desde_desg = horres
                            fecha_desde_desg = fecres
                         End If
                       
                       If objrsDesgl!desdehorentpos <> "" Then  'Posteriores a la entrada
                            objFechasHoras.SumoHoras FechaDeProc, hora_entrada1, objrsDesgl!desdehorentpos, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_desde_desg = horres
                            fecha_desde_desg = fecres
                       End If
                       If objrsDesgl!desdehorsalant <> "" Then  'Anteriores a la salida
                            If hora_salida1 < hora_entrada1 Then
                                Aux_Fecha = FechaDeProc + 1
                            Else
                                Aux_Fecha = FechaDeProc
                            End If
                            objFechasHoras.RestaXHoras Aux_Fecha, hora_salida1, objrsDesgl!desdehorsalant, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_desde_desg = horres
                            fecha_desde_desg = fecres
                       End If
                       If objrsDesgl!desdehorsalpos <> "" Then  'Posteriores a la salida
                            If hora_salida1 < hora_entrada1 Then
                                Aux_Fecha = FechaDeProc + 1
                            Else
                                Aux_Fecha = FechaDeProc
                            End If
                            objFechasHoras.SumoHoras Aux_Fecha, hora_salida1, objrsDesgl!desdehorsalpos, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_desde_desg = horres
                            fecha_desde_desg = fecres
                       End If
                
                    Case 2 'Segunda Hora de entrada/salida
                      If objrsDesgl!desdehorentant <> "" Then
                         objFechasHoras.RestaXHoras FechaDeProc, hora_entrada2, objrsDesgl!desdehorentant, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_desde_desg = horres
                         fecha_desde_desg = fecres
                      End If
                      
                      If objrsDesgl!desdehorentpos <> "" Then
                         objFechasHoras.SumoHoras FechaDeProc, hora_entrada2, objrsDesgl!desdehorentpos, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_desde_desg = horres
                         fecha_desde_desg = fecres
                      End If
                      If objrsDesgl!desdehorsalant <> "" Then
                         If hora_salida2 < hora_entrada2 Then
                            Aux_Fecha = FechaDeProc + 1
                         Else
                            Aux_Fecha = FechaDeProc
                         End If
                         objFechasHoras.RestaXHoras Aux_Fecha, hora_salida2, objrsDesgl!desdehorsalant, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_desde_desg = horres
                         fecha_desde_desg = fecres
                      End If
                      If objrsDesgl!desdehorsalpos <> "" Then
                         If hora_salida2 < hora_entrada2 Then
                            Aux_Fecha = FechaDeProc + 1
                         Else
                            Aux_Fecha = FechaDeProc
                         End If
                         objFechasHoras.SumoHoras Aux_Fecha, hora_salida2, objrsDesgl!desdehorsalpos, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_desde_desg = horres
                         fecha_desde_desg = fecres
                      End If
             
                    Case 3   ' Tercera Hora de entrada/salida
                      If objrsDesgl!desdehorentant <> "" Then
                         objFechasHoras.RestaXHoras FechaDeProc, hora_entrada3, objrsDesgl!desdehorentant, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_desde_desg = horres
                         fecha_desde_desg = fecres
                      End If
                      If objrsDesgl!desdehorentpos <> "" Then
                            objFechasHoras.SumoHoras FechaDeProc, hora_entrada3, objrsDesgl!desdehorentpos, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_desde_desg = horres
                            fecha_desde_desg = fecres
                      End If
                      If objrsDesgl!desdehorsalant <> "" Then
                            If hora_salida3 < hora_entrada3 Then
                                Aux_Fecha = FechaDeProc + 1
                            Else
                                Aux_Fecha = FechaDeProc
                            End If
                            objFechasHoras.RestaXHoras Aux_Fecha, hora_salida3, objrsDesgl!desdehorsalant, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_desde_desg = horres
                            fecha_desde_desg = fecres
                      End If
                      If objrsDesgl!desdehorsalpos <> "" Then
                            If hora_salida3 < hora_entrada3 Then
                                Aux_Fecha = FechaDeProc + 1
                            Else
                                Aux_Fecha = FechaDeProc
                            End If
                            objFechasHoras.SumoHoras Aux_Fecha, hora_salida3, objrsDesgl!desdehorsalpos, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_desde_desg = horres
                            fecha_desde_desg = fecres
                      End If
                      
                    End Select
                    
           Case 3   'Fijo/Variable
               If objrsDesgl!desghoradesde <> "" Then
                    hora_desde_desg = objrsDesgl!desghoradesde
               Else
              
                    Select Case objrsDesgl!desde_entrada
                       Case 1  ' Primera hora de entrada salida
                           If objrsDesgl!desdehorentant <> "" Then
                                objFechasHoras.RestaXHoras FechaDeProc, hora_entrada1, objrsDesgl!desdehorentant, fecres, horres
                                ok = objFechasHoras.ValidarHora(horres)
                                If Not ok Then Exit Sub
                                hora_desde_desg = horres
                                fecha_desde_desg = fecres
                           End If
                           If objrsDesgl!desdehorentpos <> "" Then
                                 objFechasHoras.SumoHoras FechaDeProc, hora_entrada1, objrsDesgl!desdehorentpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_desde_desg = horres
                                 fecha_desde_desg = fecres
                           End If
                           If objrsDesgl!desdehorsalant <> "" Then
                                 If hora_salida1 < hora_entrada1 Then
                                    Aux_Fecha = FechaDeProc + 1
                                 Else
                                    Aux_Fecha = FechaDeProc
                                 End If
                                 objFechasHoras.RestaXHoras Aux_Fecha, hora_salida1, objrsDesgl!desdehorsalant, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_desde_desg = horres
                                 fecha_desde_desg = fecres
                           End If
                           If objrsDesgl!desdehorsalpos <> "" Then
                                 If hora_salida1 < hora_entrada1 Then
                                    Aux_Fecha = FechaDeProc + 1
                                 Else
                                    Aux_Fecha = FechaDeProc
                                 End If
                                 objFechasHoras.SumoHoras Aux_Fecha, hora_salida1, objrsDesgl!desdehorsalpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_desde_desg = horres
                                 fecha_desde_desg = fecres
                           End If
                       Case 2  ' Segunda hora de entrada salida */
                           If objrsDesgl!desdehorentant <> "" Then
                                 objFechasHoras.RestaXHoras FechaDeProc, hora_entrada2, objrsDesgl!desdehorentant, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_desde_desg = horres
                                 fecha_desde_desg = fecres
                            End If
                            If objrsDesgl!desdehorentpos <> "" Then
                                objFechasHoras.SumoHoras FechaDeProc, hora_entrada2, objrsDesgl!desdehorentpos, fecres, horres
                                ok = objFechasHoras.ValidarHora(horres)
                                If Not ok Then Exit Sub
                                hora_desde_desg = horres
                                fecha_desde_desg = fecres
                            End If
                            If objrsDesgl!desdehorsalant <> "" Then
                                 If hora_salida2 < hora_entrada2 Then
                                    Aux_Fecha = FechaDeProc + 1
                                 Else
                                    Aux_Fecha = FechaDeProc
                                 End If
                                objFechasHoras.RestaXHoras Aux_Fecha, hora_salida2, objrsDesgl!desdehorsalant, fecres, horres
                                ok = objFechasHoras.ValidarHora(horres)
                                If Not ok Then Exit Sub
                                hora_desde_desg = horres
                                fecha_desde_desg = fecres
                            End If
                            If objrsDesgl!desdehorsalpos <> "" Then
                                 If hora_salida2 < hora_entrada2 Then
                                    Aux_Fecha = FechaDeProc + 1
                                 Else
                                    Aux_Fecha = FechaDeProc
                                 End If
                                 objFechasHoras.SumoHoras Aux_Fecha, hora_salida2, objrsDesgl!desdehorsalpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_desde_desg = horres
                                 fecha_desde_desg = fecres
                            End If
                        Case 3  ' Tercer hora de entrada salida
                            If objrsDesgl!desdehorentant <> "" Then
                                 objFechasHoras.RestaXHoras FechaDeProc, hora_entrada3, objrsDesgl!desdehorentant, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_desde_desg = horres
                                 fecha_desde_desg = fecres
                            End If
                            If objrsDesgl!desdehorentpos <> "" Then
                                 objFechasHoras.SumoHoras FechaDeProc, hora_entrada3, objrsDesgl!desdehorentpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_desde_desg = horres
                                 fecha_desde_desg = fecres
                            End If
                            If objrsDesgl!desdehorsalant <> "" Then
                                 If hora_salida3 < hora_entrada3 Then
                                    Aux_Fecha = FechaDeProc + 1
                                 Else
                                    Aux_Fecha = FechaDeProc
                                 End If
                                 objFechasHoras.RestaXHoras Aux_Fecha, hora_salida3, objrsDesgl!desdehorsalant, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_desde_desg = horres
                                 fecha_desde_desg = fecres
                            End If
                            If objrsDesgl!desdehorsalpos <> "" Then
                                 If hora_salida3 < hora_entrada3 Then
                                    Aux_Fecha = FechaDeProc + 1
                                 Else
                                    Aux_Fecha = FechaDeProc
                                 End If
                                 objFechasHoras.SumoHoras Aux_Fecha, hora_salida3, objrsDesgl!desdehorsalpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_desde_desg = horres
                                 fecha_desde_desg = fecres
                            End If
                        End Select
               End If
        End Select
    End If
End Sub


Public Sub Cambiar_Horas_Desde3(ByVal nro_desg As Long, ByRef hora_desde_desg As String, ByRef fecha_desde_desg As Date, ByVal Cambio_dia As Boolean, ByVal FechaDeProc As Date)
'----------------------------------------------------------------------------------------------------
'Ultima Modificacion: FGZ - 12/06/2006
'
'----------------------------------------------------------------------------------------------------
Dim hora_entrada1 As String
Dim hora_entrada2 As String
Dim hora_entrada3 As String
Dim hora_salida1 As String
Dim hora_salida2 As String
Dim hora_salida3 As String

Dim horres As String
Dim fecres As Date
Dim ok As Boolean
Dim objrsDesgl As New ADODB.Recordset
Dim objRs As New ADODB.Recordset

Dim Pasa As Boolean
Dim Aux_Fecha As Date


    Aux_Fecha = FechaDeProc
    If P_Asignacion Then
        StrSql = "SELECT * FROM gti_detturtemp WHERE (ternro =" & Empleado.Ternro & " ) and (" & _
                 "gttempdesde <= " & ConvFecha(p_fecha) & ") and (" & _
                 ConvFecha(p_fecha) & " <= gttemphasta)"
        OpenRecordset StrSql, objRs
        If Not objRs.EOF Then
             hora_entrada1 = "" & objRs!ttemphdesde1
             hora_entrada2 = "" & objRs!ttemphdesde2
             hora_entrada3 = "" & objRs!ttemphdesde3
             hora_salida1 = "" & objRs!ttemphhasta1
             hora_salida2 = "" & objRs!ttemphhasta2
             hora_salida3 = "" & objRs!ttemphhasta3
         End If
    Else
        If Not Horario_Movil And Not Horario_Flexible_Rotativo Then
            StrSql = "SELECT * FROM gti_dias where dianro =" & Nro_Dia
            OpenRecordset StrSql, objRs
            If Not objRs.EOF Then
                hora_entrada1 = "" & objRs!diahoradesde1
                hora_entrada2 = "" & objRs!diahoradesde2
                hora_entrada3 = "" & objRs!diahoradesde3
                hora_salida1 = "" & objRs!diahorahasta1
                hora_salida2 = "" & objRs!diahorahasta2
                hora_salida3 = "" & objRs!diahorahasta3
            End If
        Else
            hora_entrada1 = "" & E1
            hora_entrada2 = "" & E2
            hora_entrada3 = "" & E3
            hora_salida1 = "" & S1
            hora_salida2 = "" & S2
            hora_salida3 = "" & S3
        End If
    End If

    'Cambio segun lo definido en el desglose de horas
    StrSql = "SELECT * FROM  gti_desghora WHERE desghnro = " & nro_desg
    OpenRecordset StrSql, objrsDesgl
    If Not objrsDesgl.EOF Then
        Select Case objrsDesgl!desghorfijo
            Case 1 ' Horario Fijo
                hora_desde_desg = objrsDesgl!desghoradesde
                'fecha_desde_desg = FechaDeProc
                'FGZ - 10/01/2006
                'en realidad, si el desgloce es fijo siempre se refiere al dia que estoy procesando
                If Cambio_dia Then
                    'fecha_desde_desg = DateAdd("d", 1, FechaDeProc)
                    fecha_desde_desg = FechaDeProc
                Else
                    fecha_desde_desg = FechaDeProc
                End If
                
            Case 2 ' Horario Variable

                Select Case objrsDesgl!desde_entrada
                    Case 1:
                       If objrsDesgl!desdehorentant <> "" Then  'Anterior a la entrada
                            objFechasHoras.RestaXHoras FechaDeProc, hora_entrada1, objrsDesgl!desdehorentant, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_desde_desg = horres
                            fecha_desde_desg = fecres
                         End If
                       
                       If objrsDesgl!desdehorentpos <> "" Then  'Posteriores a la entrada
                            objFechasHoras.SumoHoras FechaDeProc, hora_entrada1, objrsDesgl!desdehorentpos, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_desde_desg = horres
                            fecha_desde_desg = fecres
                       End If
                       If objrsDesgl!desdehorsalant <> "" Then  'Anteriores a la salida
                            If hora_salida1 < hora_entrada1 Then
                                Aux_Fecha = FechaDeProc + 1
                            Else
                                Aux_Fecha = FechaDeProc
                            End If
                            objFechasHoras.RestaXHoras Aux_Fecha, hora_salida1, objrsDesgl!desdehorsalant, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_desde_desg = horres
                            fecha_desde_desg = fecres
                       End If
                       If objrsDesgl!desdehorsalpos <> "" Then  'Posteriores a la salida
                            If hora_salida1 < hora_entrada1 Then
                                Aux_Fecha = FechaDeProc + 1
                            Else
                                Aux_Fecha = FechaDeProc
                            End If
                            objFechasHoras.SumoHoras Aux_Fecha, hora_salida1, objrsDesgl!desdehorsalpos, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_desde_desg = horres
                            fecha_desde_desg = fecres
                       End If
                
                    Case 2 'Segunda Hora de entrada/salida
                      If objrsDesgl!desdehorentant <> "" Then
                         objFechasHoras.RestaXHoras FechaDeProc, hora_entrada2, objrsDesgl!desdehorentant, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_desde_desg = horres
                         fecha_desde_desg = fecres
                      End If
                      
                      If objrsDesgl!desdehorentpos <> "" Then
                         objFechasHoras.SumoHoras FechaDeProc, hora_entrada2, objrsDesgl!desdehorentpos, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_desde_desg = horres
                         fecha_desde_desg = fecres
                      End If
                      If objrsDesgl!desdehorsalant <> "" Then
                         If hora_salida2 < hora_entrada2 Then
                            Aux_Fecha = FechaDeProc + 1
                         Else
                            Aux_Fecha = FechaDeProc
                         End If
                         objFechasHoras.RestaXHoras Aux_Fecha, hora_salida2, objrsDesgl!desdehorsalant, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_desde_desg = horres
                         fecha_desde_desg = fecres
                      End If
                      If objrsDesgl!desdehorsalpos <> "" Then
                         If hora_salida2 < hora_entrada2 Then
                            Aux_Fecha = FechaDeProc + 1
                         Else
                            Aux_Fecha = FechaDeProc
                         End If
                         objFechasHoras.SumoHoras Aux_Fecha, hora_salida2, objrsDesgl!desdehorsalpos, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_desde_desg = horres
                         fecha_desde_desg = fecres
                      End If
             
                    Case 3   ' Tercera Hora de entrada/salida
                      If objrsDesgl!desdehorentant <> "" Then
                         objFechasHoras.RestaXHoras FechaDeProc, hora_entrada3, objrsDesgl!desdehorentant, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_desde_desg = horres
                         fecha_desde_desg = fecres
                      End If
                      If objrsDesgl!desdehorentpos <> "" Then
                            objFechasHoras.SumoHoras FechaDeProc, hora_entrada3, objrsDesgl!desdehorentpos, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_desde_desg = horres
                            fecha_desde_desg = fecres
                      End If
                      If objrsDesgl!desdehorsalant <> "" Then
                            If hora_salida3 < hora_entrada3 Then
                                Aux_Fecha = FechaDeProc + 1
                            Else
                                Aux_Fecha = FechaDeProc
                            End If
                            objFechasHoras.RestaXHoras Aux_Fecha, hora_salida3, objrsDesgl!desdehorsalant, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_desde_desg = horres
                            fecha_desde_desg = fecres
                      End If
                      If objrsDesgl!desdehorsalpos <> "" Then
                            If hora_salida3 < hora_entrada3 Then
                                Aux_Fecha = FechaDeProc + 1
                            Else
                                Aux_Fecha = FechaDeProc
                            End If
                            objFechasHoras.SumoHoras Aux_Fecha, hora_salida3, objrsDesgl!desdehorsalpos, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_desde_desg = horres
                            fecha_desde_desg = fecres
                      End If
                      
                    End Select
                    
           Case 3   'Fijo/Variable
               If objrsDesgl!desghoradesde <> "" Then
                    hora_desde_desg = objrsDesgl!desghoradesde
                    fecha_desde_desg = FechaDeProc
               Else
              
                    Select Case objrsDesgl!desde_entrada
                       Case 1  ' Primera hora de entrada salida
                           If objrsDesgl!desdehorentant <> "" Then
                                objFechasHoras.RestaXHoras FechaDeProc, hora_entrada1, objrsDesgl!desdehorentant, fecres, horres
                                ok = objFechasHoras.ValidarHora(horres)
                                If Not ok Then Exit Sub
                                hora_desde_desg = horres
                                fecha_desde_desg = fecres
                           End If
                           If objrsDesgl!desdehorentpos <> "" Then
                                 objFechasHoras.SumoHoras FechaDeProc, hora_entrada1, objrsDesgl!desdehorentpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_desde_desg = horres
                                 fecha_desde_desg = fecres
                           End If
                           If objrsDesgl!desdehorsalant <> "" Then
                                 If hora_salida1 < hora_entrada1 Then
                                    Aux_Fecha = FechaDeProc + 1
                                 Else
                                    Aux_Fecha = FechaDeProc
                                 End If
                                 objFechasHoras.RestaXHoras Aux_Fecha, hora_salida1, objrsDesgl!desdehorsalant, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_desde_desg = horres
                                 fecha_desde_desg = fecres
                           End If
                           If objrsDesgl!desdehorsalpos <> "" Then
                                 If hora_salida1 < hora_entrada1 Then
                                    Aux_Fecha = FechaDeProc + 1
                                 Else
                                    Aux_Fecha = FechaDeProc
                                 End If
                                 objFechasHoras.SumoHoras Aux_Fecha, hora_salida1, objrsDesgl!desdehorsalpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_desde_desg = horres
                                 fecha_desde_desg = fecres
                           End If
                       Case 2  ' Segunda hora de entrada salida */
                           If objrsDesgl!desdehorentant <> "" Then
                                 objFechasHoras.RestaXHoras FechaDeProc, hora_entrada2, objrsDesgl!desdehorentant, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_desde_desg = horres
                                 fecha_desde_desg = fecres
                            End If
                            If objrsDesgl!desdehorentpos <> "" Then
                                objFechasHoras.SumoHoras FechaDeProc, hora_entrada2, objrsDesgl!desdehorentpos, fecres, horres
                                ok = objFechasHoras.ValidarHora(horres)
                                If Not ok Then Exit Sub
                                hora_desde_desg = horres
                                fecha_desde_desg = fecres
                            End If
                            If objrsDesgl!desdehorsalant <> "" Then
                                 If hora_salida2 < hora_entrada2 Then
                                    Aux_Fecha = FechaDeProc + 1
                                 Else
                                    Aux_Fecha = FechaDeProc
                                 End If
                                objFechasHoras.RestaXHoras Aux_Fecha, hora_salida2, objrsDesgl!desdehorsalant, fecres, horres
                                ok = objFechasHoras.ValidarHora(horres)
                                If Not ok Then Exit Sub
                                hora_desde_desg = horres
                                fecha_desde_desg = fecres
                            End If
                            If objrsDesgl!desdehorsalpos <> "" Then
                                 If hora_salida2 < hora_entrada2 Then
                                    Aux_Fecha = FechaDeProc + 1
                                 Else
                                    Aux_Fecha = FechaDeProc
                                 End If
                                 objFechasHoras.SumoHoras Aux_Fecha, hora_salida2, objrsDesgl!desdehorsalpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_desde_desg = horres
                                 fecha_desde_desg = fecres
                            End If
                        Case 3  ' Tercer hora de entrada salida
                            If objrsDesgl!desdehorentant <> "" Then
                                 objFechasHoras.RestaXHoras FechaDeProc, hora_entrada3, objrsDesgl!desdehorentant, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_desde_desg = horres
                                 fecha_desde_desg = fecres
                            End If
                            If objrsDesgl!desdehorentpos <> "" Then
                                 objFechasHoras.SumoHoras FechaDeProc, hora_entrada3, objrsDesgl!desdehorentpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_desde_desg = horres
                                 fecha_desde_desg = fecres
                            End If
                            If objrsDesgl!desdehorsalant <> "" Then
                                 If hora_salida3 < hora_entrada3 Then
                                    Aux_Fecha = FechaDeProc + 1
                                 Else
                                    Aux_Fecha = FechaDeProc
                                 End If
                                 objFechasHoras.RestaXHoras Aux_Fecha, hora_salida3, objrsDesgl!desdehorsalant, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_desde_desg = horres
                                 fecha_desde_desg = fecres
                            End If
                            If objrsDesgl!desdehorsalpos <> "" Then
                                 If hora_salida3 < hora_entrada3 Then
                                    Aux_Fecha = FechaDeProc + 1
                                 Else
                                    Aux_Fecha = FechaDeProc
                                 End If
                                 objFechasHoras.SumoHoras Aux_Fecha, hora_salida3, objrsDesgl!desdehorsalpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_desde_desg = horres
                                 fecha_desde_desg = fecres
                            End If
                        End Select
               End If
        End Select
    End If
End Sub



Public Sub Cambiar_Horas_hasta(ByVal nro_desg As Long, ByRef hora_hasta_desg As String, ByRef fecha_hasta_desg As Date, ByVal Cambio_dia As Boolean)
'----------------------------------------------------------------------------------------------------
'Ultima Modificacion: FGZ - cambié p_fecha por Aux_Fecha en todas las llamadas a sumar y restar horas
'Ultima Modificacion: FGZ - Habia un error cuando el tipo de desgloce era fijo / relativo. cargaba la hora hasta pero no cargaba la fecha hasta
'Ultima Modificacion: FGZ - 10/01/2006. si el desgloce es fijo siempre se refiere al dia que estoy procesando
'----------------------------------------------------------------------------------------------------
Dim hora_entrada1 As String
Dim hora_entrada2 As String
Dim hora_entrada3 As String
Dim hora_salida1 As String
Dim hora_salida2 As String
Dim hora_salida3 As String

Dim horres As String
Dim fecres As Date
Dim ok As Boolean
Dim objrsDesgl As New ADODB.Recordset
Dim objRs As New ADODB.Recordset

Dim Aux_Fecha As Date

   If P_Asignacion Then
        If TurnoNocturno_HaciaAtras Then
            StrSql = "SELECT * FROM gti_detturtemp WHERE (ternro =" & Empleado.Ternro & " ) and (" & _
                    "gttempdesde <= " & ConvFecha(p_fecha + 1) & ") and (" & _
                    ConvFecha(p_fecha + 1) & " <= gttemphasta)"
        Else
            StrSql = "SELECT * FROM gti_detturtemp WHERE (ternro =" & Empleado.Ternro & " ) and (" & _
                     "gttempdesde <= " & ConvFecha(p_fecha) & ") and (" & _
                     ConvFecha(p_fecha) & " <= gttemphasta)"
        End If
        OpenRecordset StrSql, objRs
        If Not objRs.EOF Then
             hora_entrada1 = "" & objRs!ttemphdesde1
             hora_entrada2 = "" & objRs!ttemphdesde2
             hora_entrada3 = "" & objRs!ttemphdesde3
             hora_salida1 = "" & objRs!ttemphhasta1
             hora_salida2 = "" & objRs!ttemphhasta2
             hora_salida3 = "" & objRs!ttemphhasta3
             
             Aux_Fecha = p_fecha
         End If
    Else
        If Not Horario_Movil And Not Horario_Flexible_Rotativo Then
            StrSql = "SELECT * FROM gti_dias where dianro =" & Nro_Dia
            OpenRecordset StrSql, objRs
            If Not objRs.EOF Then
                hora_entrada1 = "" & objRs!diahoradesde1
                hora_entrada2 = "" & objRs!diahoradesde2
                hora_entrada3 = "" & objRs!diahoradesde3
                hora_salida1 = "" & objRs!diahorahasta1
                hora_salida2 = "" & objRs!diahorahasta2
                hora_salida3 = "" & objRs!diahorahasta3
                
                Aux_Fecha = p_fecha
            End If
        Else
            hora_entrada1 = "" & E1
            hora_entrada2 = "" & E2
            hora_entrada3 = "" & E3
            hora_salida1 = "" & S1
            hora_salida2 = "" & S2
            hora_salida3 = "" & S3
            
            Aux_Fecha = p_fecha
            
'            If Pasa_de_Dia Then
'                Aux_Fecha = p_fecha + 1
'            Else
'                Aux_Fecha = p_fecha
'            End If
        End If
    End If

'    ***** Cambio segun lo definido en el desglose de horas ******
    StrSql = "SELECT * FROM  gti_desghora WHERE desghnro = " & nro_desg
    OpenRecordset StrSql, objrsDesgl
    If Not objrsDesgl.EOF Then
        Select Case objrsDesgl!desghorfijo
            Case 1 ' Horario Fijo
                hora_hasta_desg = objrsDesgl!desghorahasta
                'fecha_hasta_desg = p_fecha
                'FGZ - 10/01/2006
                'en realidad, si el desgloce es fijo siempre se refiere al dia que estoy procesando
                If Cambio_dia Then
                    fecha_hasta_desg = DateAdd("d", 1, p_fecha)
                Else
                    fecha_hasta_desg = p_fecha
                End If
                
            Case 2 ' Horario Variable

                Select Case objrsDesgl!hasta_entrada
                    Case 1
                       If objrsDesgl!hastahorentant <> "" Then
                            objFechasHoras.RestaXHoras Aux_Fecha, hora_entrada1, objrsDesgl!hastahorentant, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_hasta_desg = horres
                            fecha_hasta_desg = fecres
                         End If
                       
                       If objrsDesgl!hastahorentpos <> "" Then
                            objFechasHoras.SumoHoras Aux_Fecha, hora_entrada1, objrsDesgl!hastahorentpos, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_hasta_desg = horres
                            fecha_hasta_desg = fecres
                       End If
                       If objrsDesgl!hastahorsalant <> "" Then
                            If hora_salida1 < hora_entrada1 Then
                                Aux_Fecha = p_fecha + 1
                            Else
                                Aux_Fecha = p_fecha
                            End If
                            objFechasHoras.RestaXHoras Aux_Fecha, hora_salida1, objrsDesgl!hastahorsalant, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_hasta_desg = horres
                            fecha_hasta_desg = fecres
                       End If
                       If objrsDesgl!hastahorsalpos <> "" Then
                            If hora_salida1 < hora_entrada1 Then
                                Aux_Fecha = p_fecha + 1
                            Else
                                Aux_Fecha = p_fecha
                            End If
                            objFechasHoras.SumoHoras Aux_Fecha, hora_salida1, objrsDesgl!hastahorsalpos, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_hasta_desg = horres
                            fecha_hasta_desg = fecres
                       End If
                
                    Case 2 'Segunda Hora de entrada/salida
                      
                      If objrsDesgl!hastahorentant <> "" Then
                         objFechasHoras.RestaXHoras Aux_Fecha, hora_entrada2, objrsDesgl!hastahorentant, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_hasta_desg = horres
                         fecha_hasta_desg = fecres
                      End If
                      If objrsDesgl!hastahorentpos <> "" Then
                         objFechasHoras.SumoHoras Aux_Fecha, hora_entrada2, objrsDesgl!hastahorentpos, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_hasta_desg = horres
                         fecha_hasta_desg = fecres
                      End If
                      If objrsDesgl!hastahorsalant <> "" Then
                         If hora_salida2 < hora_entrada2 Then
                            Aux_Fecha = p_fecha + 1
                         Else
                            Aux_Fecha = p_fecha
                         End If
                         objFechasHoras.RestaXHoras Aux_Fecha, hora_salida2, objrsDesgl!hastahorsalant, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_hasta_desg = horres
                         fecha_hasta_desg = fecres
                      End If
                      If objrsDesgl!hastahorsalpos <> "" Then
                         If hora_salida2 < hora_entrada2 Then
                            Aux_Fecha = p_fecha + 1
                         Else
                            Aux_Fecha = p_fecha
                         End If
                         objFechasHoras.SumoHoras Aux_Fecha, hora_salida2, objrsDesgl!hastahorsalpos, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_hasta_desg = horres
                         fecha_hasta_desg = fecres
                      End If
             
                    Case 3   ' Tercera Hora de entrada/salida
                      If objrsDesgl!hastahorentant <> "" Then
                         objFechasHoras.RestaXHoras Aux_Fecha, hora_entrada3, objrsDesgl!hastahorentant, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_hasta_desg = horres
                         fecha_hasta_desg = fecres
                      End If
                      If objrsDesgl!hastahorentpos <> "" Then
                            objFechasHoras.SumoHoras Aux_Fecha, hora_entrada3, objrsDesgl!hastahorentpos, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_hasta_desg = horres
                            fecha_hasta_desg = fecres
                      End If
                      If objrsDesgl!hastahorsalant <> "" Then
                            If hora_salida3 < hora_entrada3 Then
                                Aux_Fecha = p_fecha + 1
                            Else
                                Aux_Fecha = p_fecha
                            End If
                            objFechasHoras.RestaXHoras Aux_Fecha, hora_salida3, objrsDesgl!hastahorsalant, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_hasta_desg = horres
                            fecha_hasta_desg = fecres
                      End If
                      If objrsDesgl!hastahorsalpos <> "" Then
                            If hora_salida3 < hora_entrada3 Then
                                Aux_Fecha = p_fecha + 1
                            Else
                                Aux_Fecha = p_fecha
                            End If
                            objFechasHoras.SumoHoras Aux_Fecha, hora_salida3, objrsDesgl!hastahorsalpos, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_hasta_desg = horres
                            fecha_hasta_desg = fecres
                      End If
                    End Select
                    
           Case 3   'Fijo/Variable
               If objrsDesgl!desghorahasta <> "" Then
                    hora_hasta_desg = objrsDesgl!desghorahasta
                    If Cambio_dia Then
                        '28/04/2015 - MDF
                        ' Como la hora es fija ==> no debe pasa de dìa, se trata del dìa original
                       If Not hor_normal_amr Then
                          fecha_hasta_desg = DateAdd("d", 1, p_fecha)
                       Else
                          Flog.writeline "No cambio de dia"
                          fecha_hasta_desg = p_fecha  'no quiero q se cambie de dia, q el desglose sea al dia anterior
                       End If
                    Else
                        fecha_hasta_desg = p_fecha
                    End If
               Else
                    Select Case objrsDesgl!hasta_entrada
                       Case 1  ' Primera hora de entrada salida
                           If objrsDesgl!hastahorentant <> "" Then
                                objFechasHoras.RestaXHoras Aux_Fecha, hora_entrada1, objrsDesgl!hastahorentant, fecres, horres
                                ok = objFechasHoras.ValidarHora(horres)
                                If Not ok Then Exit Sub
                                hora_hasta_desg = horres
                                fecha_hasta_desg = fecres
                           End If
                           If objrsDesgl!hastahorentpos <> "" Then
                                 objFechasHoras.SumoHoras Aux_Fecha, hora_entrada1, objrsDesgl!hastahorentpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_hasta_desg = horres
                                 fecha_hasta_desg = fecres
                           End If
                           If objrsDesgl!hastahorsalant <> "" Then
                                If hora_salida1 < hora_entrada1 Then
                                    Aux_Fecha = p_fecha + 1
                                Else
                                    Aux_Fecha = p_fecha
                                End If
                                 objFechasHoras.RestaXHoras Aux_Fecha, hora_salida1, objrsDesgl!hastahorsalant, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_hasta_desg = horres
                                 fecha_hasta_desg = fecres
                           End If
                           If objrsDesgl!hastahorsalpos <> "" Then
                                If hora_salida1 < hora_entrada1 Then
                                    Aux_Fecha = p_fecha + 1
                                Else
                                    Aux_Fecha = p_fecha
                                End If
                                 objFechasHoras.SumoHoras Aux_Fecha, hora_salida1, objrsDesgl!hastahorsalpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_hasta_desg = horres
                                 fecha_hasta_desg = fecres
                           End If
                       Case 2  ' Primera hora de entrada salida */
                           If objrsDesgl!hastahorentant <> "" Then
                                 objFechasHoras.RestaXHoras Aux_Fecha, hora_entrada2, objrsDesgl!hastahorentant, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_hasta_desg = horres
                                 fecha_hasta_desg = fecres
                            End If
                            If objrsDesgl!hastahorentpos <> "" Then
                                objFechasHoras.SumoHoras Aux_Fecha, hora_entrada2, objrsDesgl!hastahorentpos, fecres, horres
                                ok = objFechasHoras.ValidarHora(horres)
                                If Not ok Then Exit Sub
                                hora_hasta_desg = horres
                                fecha_hasta_desg = fecres
                            End If
                            If objrsDesgl!hastahorsalant <> "" Then
                                If hora_salida2 < hora_entrada2 Then
                                    Aux_Fecha = p_fecha + 1
                                Else
                                    Aux_Fecha = p_fecha
                                End If
                                objFechasHoras.RestaXHoras Aux_Fecha, hora_salida2, objrsDesgl!hastahorsalant, fecres, horres
                                ok = objFechasHoras.ValidarHora(horres)
                                If Not ok Then Exit Sub
                                hora_hasta_desg = horres
                                fecha_hasta_desg = fecres
                            End If
                            If objrsDesgl!hastahorsalpos <> "" Then
                                If hora_salida2 < hora_entrada2 Then
                                    Aux_Fecha = p_fecha + 1
                                Else
                                    Aux_Fecha = p_fecha
                                End If
                                 objFechasHoras.SumoHoras Aux_Fecha, hora_salida2, objrsDesgl!hastahorsalpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_hasta_desg = horres
                                 fecha_hasta_desg = fecres
                            End If
                        Case 3  ' Primera hora de entrada salida
                            If objrsDesgl!hastahorentant <> "" Then
                                 objFechasHoras.RestaXHoras Aux_Fecha, hora_entrada3, objrsDesgl!hastahorentant, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_hasta_desg = horres
                                 fecha_hasta_desg = fecres
                            End If
                            If objrsDesgl!hastahorentpos <> "" Then
                                 objFechasHoras.SumoHoras Aux_Fecha, hora_entrada3, objrsDesgl!hastahorentpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_hasta_desg = horres
                                 fecha_hasta_desg = fecres
                            End If
                            If objrsDesgl!hastahorsalant <> "" Then
                                If hora_salida3 < hora_entrada3 Then
                                    Aux_Fecha = p_fecha + 1
                                Else
                                    Aux_Fecha = p_fecha
                                End If
                                 objFechasHoras.RestaXHoras Aux_Fecha, hora_salida3, objrsDesgl!hastahorsalant, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_hasta_desg = horres
                                 fecha_hasta_desg = fecres
                            End If
                            If objrsDesgl!hastahorsalpos <> "" Then
                                If hora_salida3 < hora_entrada3 Then
                                    Aux_Fecha = p_fecha + 1
                                Else
                                    Aux_Fecha = p_fecha
                                End If
                                 objFechasHoras.SumoHoras Aux_Fecha, hora_salida3, objrsDesgl!hastahorsalpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_hasta_desg = horres
                                 fecha_hasta_desg = fecres
                            End If
                        End Select
               End If
        End Select
    End If
End Sub


Public Sub Cambiar_Horas_hasta_Sykes(ByVal nro_desg As Long, ByRef hora_hasta_desg As String, ByRef fecha_hasta_desg As Date, ByVal Cambio_dia As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: resuelve el desglose hasta.
' Autor      : FGZ
' Fecha      : 25/07/2011
' Ultima Mod.:
' Descripcion:
'
' ---------------------------------------------------------------------------------------------
Dim hora_entrada1 As String
Dim hora_entrada2 As String
Dim hora_entrada3 As String
Dim hora_salida1 As String
Dim hora_salida2 As String
Dim hora_salida3 As String

Dim horres As String
Dim fecres As Date
Dim ok As Boolean
Dim objrsDesgl As New ADODB.Recordset
Dim objRs As New ADODB.Recordset

Dim Aux_Fecha As Date


    hora_entrada1 = "" & E1
    hora_entrada2 = "" & E2
    hora_entrada3 = "" & E3
    hora_salida1 = "" & S1
    hora_salida2 = "" & S2
    hora_salida3 = "" & S3
    
    Aux_Fecha = p_fecha

'   If P_Asignacion Then
'        StrSql = "SELECT * FROM gti_detturtemp WHERE (ternro =" & Empleado.Ternro & " ) and (" & _
'                 "gttempdesde <= " & ConvFecha(p_fecha) & ") and (" & _
'                 ConvFecha(p_fecha) & " <= gttemphasta)"
'        OpenRecordset StrSql, objRs
'        If Not objRs.EOF Then
'             hora_entrada1 = "" & objRs!ttemphdesde1
'             hora_entrada2 = "" & objRs!ttemphdesde2
'             hora_entrada3 = "" & objRs!ttemphdesde3
'             hora_salida1 = "" & objRs!ttemphhasta1
'             hora_salida2 = "" & objRs!ttemphhasta2
'             hora_salida3 = "" & objRs!ttemphhasta3
'
'             Aux_Fecha = p_fecha
'         End If
'    Else
'        If Not Horario_Movil And Not Horario_Flexible_Rotativo Then
'            StrSql = "SELECT * FROM gti_dias where dianro =" & Nro_Dia
'            OpenRecordset StrSql, objRs
'            If Not objRs.EOF Then
'                hora_entrada1 = "" & objRs!diahoradesde1
'                hora_entrada2 = "" & objRs!diahoradesde2
'                hora_entrada3 = "" & objRs!diahoradesde3
'                hora_salida1 = "" & objRs!diahorahasta1
'                hora_salida2 = "" & objRs!diahorahasta2
'                hora_salida3 = "" & objRs!diahorahasta3
'
'                Aux_Fecha = p_fecha
'            End If
'        Else
'            hora_entrada1 = "" & E1
'            hora_entrada2 = "" & E2
'            hora_entrada3 = "" & E3
'            hora_salida1 = "" & S1
'            hora_salida2 = "" & S2
'            hora_salida3 = "" & S3
'
'            Aux_Fecha = p_fecha
'
''            If Pasa_de_Dia Then
''                Aux_Fecha = p_fecha + 1
''            Else
''                Aux_Fecha = p_fecha
''            End If
'        End If
'    End If

'    ***** Cambio segun lo definido en el desglose de horas ******
    StrSql = "SELECT * FROM  gti_desghora WHERE desghnro = " & nro_desg
    OpenRecordset StrSql, objrsDesgl
    If Not objrsDesgl.EOF Then
        Select Case objrsDesgl!desghorfijo
            Case 1 ' Horario Fijo
                hora_hasta_desg = objrsDesgl!desghorahasta
                'fecha_hasta_desg = p_fecha
                'FGZ - 10/01/2006
                'en realidad, si el desgloce es fijo siempre se refiere al dia que estoy procesando
                If Cambio_dia Then
                    fecha_hasta_desg = DateAdd("d", 1, p_fecha)
                Else
                    fecha_hasta_desg = p_fecha
                End If
                
            Case 2 ' Horario Variable

                Select Case objrsDesgl!hasta_entrada
                    Case 1
                       If objrsDesgl!hastahorentant <> "" Then
                            objFechasHoras.RestaXHoras Aux_Fecha, hora_entrada1, objrsDesgl!hastahorentant, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_hasta_desg = horres
                            fecha_hasta_desg = fecres
                         End If
                       
                       If objrsDesgl!hastahorentpos <> "" Then
                            objFechasHoras.SumoHoras Aux_Fecha, hora_entrada1, objrsDesgl!hastahorentpos, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_hasta_desg = horres
                            fecha_hasta_desg = fecres
                       End If
                       If objrsDesgl!hastahorsalant <> "" Then
                            If hora_salida1 < hora_entrada1 Then
                                Aux_Fecha = p_fecha + 1
                            Else
                                Aux_Fecha = p_fecha
                            End If
                            objFechasHoras.RestaXHoras Aux_Fecha, hora_salida1, objrsDesgl!hastahorsalant, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_hasta_desg = horres
                            fecha_hasta_desg = fecres
                       End If
                       If objrsDesgl!hastahorsalpos <> "" Then
                            If hora_salida1 < hora_entrada1 Then
                                Aux_Fecha = p_fecha + 1
                            Else
                                Aux_Fecha = p_fecha
                            End If
                            objFechasHoras.SumoHoras Aux_Fecha, hora_salida1, objrsDesgl!hastahorsalpos, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_hasta_desg = horres
                            fecha_hasta_desg = fecres
                       End If
                
                    Case 2 'Segunda Hora de entrada/salida
                      
                      If objrsDesgl!hastahorentant <> "" Then
                         objFechasHoras.RestaXHoras Aux_Fecha, hora_entrada2, objrsDesgl!hastahorentant, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_hasta_desg = horres
                         fecha_hasta_desg = fecres
                      End If
                      If objrsDesgl!hastahorentpos <> "" Then
                         objFechasHoras.SumoHoras Aux_Fecha, hora_entrada2, objrsDesgl!hastahorentpos, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_hasta_desg = horres
                         fecha_hasta_desg = fecres
                      End If
                      If objrsDesgl!hastahorsalant <> "" Then
                         If hora_salida2 < hora_entrada2 Then
                            Aux_Fecha = p_fecha + 1
                         Else
                            Aux_Fecha = p_fecha
                         End If
                         objFechasHoras.RestaXHoras Aux_Fecha, hora_salida2, objrsDesgl!hastahorsalant, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_hasta_desg = horres
                         fecha_hasta_desg = fecres
                      End If
                      If objrsDesgl!hastahorsalpos <> "" Then
                         If hora_salida2 < hora_entrada2 Then
                            Aux_Fecha = p_fecha + 1
                         Else
                            Aux_Fecha = p_fecha
                         End If
                         objFechasHoras.SumoHoras Aux_Fecha, hora_salida2, objrsDesgl!hastahorsalpos, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_hasta_desg = horres
                         fecha_hasta_desg = fecres
                      End If
             
                    Case 3   ' Tercera Hora de entrada/salida
                      If objrsDesgl!hastahorentant <> "" Then
                         objFechasHoras.RestaXHoras Aux_Fecha, hora_entrada3, objrsDesgl!hastahorentant, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_hasta_desg = horres
                         fecha_hasta_desg = fecres
                      End If
                      If objrsDesgl!hastahorentpos <> "" Then
                            objFechasHoras.SumoHoras Aux_Fecha, hora_entrada3, objrsDesgl!hastahorentpos, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_hasta_desg = horres
                            fecha_hasta_desg = fecres
                      End If
                      If objrsDesgl!hastahorsalant <> "" Then
                            If hora_salida3 < hora_entrada3 Then
                                Aux_Fecha = p_fecha + 1
                            Else
                                Aux_Fecha = p_fecha
                            End If
                            objFechasHoras.RestaXHoras Aux_Fecha, hora_salida3, objrsDesgl!hastahorsalant, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_hasta_desg = horres
                            fecha_hasta_desg = fecres
                      End If
                      If objrsDesgl!hastahorsalpos <> "" Then
                            If hora_salida3 < hora_entrada3 Then
                                Aux_Fecha = p_fecha + 1
                            Else
                                Aux_Fecha = p_fecha
                            End If
                            objFechasHoras.SumoHoras Aux_Fecha, hora_salida3, objrsDesgl!hastahorsalpos, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_hasta_desg = horres
                            fecha_hasta_desg = fecres
                      End If
                    End Select
                    
           Case 3   'Fijo/Variable
               If objrsDesgl!desghorahasta <> "" Then
                    hora_hasta_desg = objrsDesgl!desghorahasta
                    If Cambio_dia Then
                        fecha_hasta_desg = DateAdd("d", 1, p_fecha)
                    Else
                        fecha_hasta_desg = p_fecha
                    End If
               Else
                    Select Case objrsDesgl!hasta_entrada
                       Case 1  ' Primera hora de entrada salida
                           If objrsDesgl!hastahorentant <> "" Then
                                objFechasHoras.RestaXHoras Aux_Fecha, hora_entrada1, objrsDesgl!hastahorentant, fecres, horres
                                ok = objFechasHoras.ValidarHora(horres)
                                If Not ok Then Exit Sub
                                hora_hasta_desg = horres
                                fecha_hasta_desg = fecres
                           End If
                           If objrsDesgl!hastahorentpos <> "" Then
                                 objFechasHoras.SumoHoras Aux_Fecha, hora_entrada1, objrsDesgl!hastahorentpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_hasta_desg = horres
                                 fecha_hasta_desg = fecres
                           End If
                           If objrsDesgl!hastahorsalant <> "" Then
                                If hora_salida1 < hora_entrada1 Then
                                    Aux_Fecha = p_fecha + 1
                                Else
                                    Aux_Fecha = p_fecha
                                End If
                                 objFechasHoras.RestaXHoras Aux_Fecha, hora_salida1, objrsDesgl!hastahorsalant, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_hasta_desg = horres
                                 fecha_hasta_desg = fecres
                           End If
                           If objrsDesgl!hastahorsalpos <> "" Then
                                If hora_salida1 < hora_entrada1 Then
                                    Aux_Fecha = p_fecha + 1
                                Else
                                    Aux_Fecha = p_fecha
                                End If
                                 objFechasHoras.SumoHoras Aux_Fecha, hora_salida1, objrsDesgl!hastahorsalpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_hasta_desg = horres
                                 fecha_hasta_desg = fecres
                           End If
                       Case 2  ' Primera hora de entrada salida */
                           If objrsDesgl!hastahorentant <> "" Then
                                 objFechasHoras.RestaXHoras Aux_Fecha, hora_entrada2, objrsDesgl!hastahorentant, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_hasta_desg = horres
                                 fecha_hasta_desg = fecres
                            End If
                            If objrsDesgl!hastahorentpos <> "" Then
                                objFechasHoras.SumoHoras Aux_Fecha, hora_entrada2, objrsDesgl!hastahorentpos, fecres, horres
                                ok = objFechasHoras.ValidarHora(horres)
                                If Not ok Then Exit Sub
                                hora_hasta_desg = horres
                                fecha_hasta_desg = fecres
                            End If
                            If objrsDesgl!hastahorsalant <> "" Then
                                If hora_salida2 < hora_entrada2 Then
                                    Aux_Fecha = p_fecha + 1
                                Else
                                    Aux_Fecha = p_fecha
                                End If
                                objFechasHoras.RestaXHoras Aux_Fecha, hora_salida2, objrsDesgl!hastahorsalant, fecres, horres
                                ok = objFechasHoras.ValidarHora(horres)
                                If Not ok Then Exit Sub
                                hora_hasta_desg = horres
                                fecha_hasta_desg = fecres
                            End If
                            If objrsDesgl!hastahorsalpos <> "" Then
                                If hora_salida2 < hora_entrada2 Then
                                    Aux_Fecha = p_fecha + 1
                                Else
                                    Aux_Fecha = p_fecha
                                End If
                                 objFechasHoras.SumoHoras Aux_Fecha, hora_salida2, objrsDesgl!hastahorsalpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_hasta_desg = horres
                                 fecha_hasta_desg = fecres
                            End If
                        Case 3  ' Primera hora de entrada salida
                            If objrsDesgl!hastahorentant <> "" Then
                                 objFechasHoras.RestaXHoras Aux_Fecha, hora_entrada3, objrsDesgl!hastahorentant, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_hasta_desg = horres
                                 fecha_hasta_desg = fecres
                            End If
                            If objrsDesgl!hastahorentpos <> "" Then
                                 objFechasHoras.SumoHoras Aux_Fecha, hora_entrada3, objrsDesgl!hastahorentpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_hasta_desg = horres
                                 fecha_hasta_desg = fecres
                            End If
                            If objrsDesgl!hastahorsalant <> "" Then
                                If hora_salida3 < hora_entrada3 Then
                                    Aux_Fecha = p_fecha + 1
                                Else
                                    Aux_Fecha = p_fecha
                                End If
                                 objFechasHoras.RestaXHoras Aux_Fecha, hora_salida3, objrsDesgl!hastahorsalant, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_hasta_desg = horres
                                 fecha_hasta_desg = fecres
                            End If
                            If objrsDesgl!hastahorsalpos <> "" Then
                                If hora_salida3 < hora_entrada3 Then
                                    Aux_Fecha = p_fecha + 1
                                Else
                                    Aux_Fecha = p_fecha
                                End If
                                 objFechasHoras.SumoHoras Aux_Fecha, hora_salida3, objrsDesgl!hastahorsalpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_hasta_desg = horres
                                 fecha_hasta_desg = fecres
                            End If
                        End Select
               End If
        End Select
    End If
End Sub

Public Sub Cambiar_Horas_hasta2(ByVal nro_desg As Long, ByRef hora_hasta_desg As String, ByRef fecha_hasta_desg As Date, ByVal Cambio_dia As Boolean, ByVal FechaDeProc As Date)
'----------------------------------------------------------------------------------------------------
'Ultima Modificacion: FGZ - 12/06/2006.
'----------------------------------------------------------------------------------------------------
Dim hora_entrada1 As String
Dim hora_entrada2 As String
Dim hora_entrada3 As String
Dim hora_salida1 As String
Dim hora_salida2 As String
Dim hora_salida3 As String

Dim horres As String
Dim fecres As Date
Dim ok As Boolean
Dim objrsDesgl As New ADODB.Recordset
Dim objRs As New ADODB.Recordset

Dim Aux_Fecha As Date

   If P_Asignacion Then
        StrSql = "SELECT * FROM gti_detturtemp WHERE (ternro =" & Empleado.Ternro & " ) and (" & _
                 "gttempdesde <= " & ConvFecha(p_fecha) & ") and (" & _
                 ConvFecha(p_fecha) & " <= gttemphasta)"
        OpenRecordset StrSql, objRs
        If Not objRs.EOF Then
             hora_entrada1 = "" & objRs!ttemphdesde1
             hora_entrada2 = "" & objRs!ttemphdesde2
             hora_entrada3 = "" & objRs!ttemphdesde3
             hora_salida1 = "" & objRs!ttemphhasta1
             hora_salida2 = "" & objRs!ttemphhasta2
             hora_salida3 = "" & objRs!ttemphhasta3
             
             Aux_Fecha = FechaDeProc
         End If
    Else
        If Not Horario_Movil And Not Horario_Flexible_Rotativo Then
            StrSql = "SELECT * FROM gti_dias where dianro =" & Nro_Dia
            OpenRecordset StrSql, objRs
            If Not objRs.EOF Then
                hora_entrada1 = "" & objRs!diahoradesde1
                hora_entrada2 = "" & objRs!diahoradesde2
                hora_entrada3 = "" & objRs!diahoradesde3
                hora_salida1 = "" & objRs!diahorahasta1
                hora_salida2 = "" & objRs!diahorahasta2
                hora_salida3 = "" & objRs!diahorahasta3
                
                Aux_Fecha = FechaDeProc
            End If
        Else
            hora_entrada1 = "" & E1
            hora_entrada2 = "" & E2
            hora_entrada3 = "" & E3
            hora_salida1 = "" & S1
            hora_salida2 = "" & S2
            hora_salida3 = "" & S3
            
            Aux_Fecha = FechaDeProc
            
'            If Pasa_de_Dia Then
'                Aux_Fecha = FechaDeProc + 1
'            Else
'                Aux_Fecha = FechaDeProc
'            End If
        End If
    End If

'    ***** Cambio segun lo definido en el desglose de horas ******
    StrSql = "SELECT * FROM  gti_desghora WHERE desghnro = " & nro_desg
    OpenRecordset StrSql, objrsDesgl
    If Not objrsDesgl.EOF Then
        Select Case objrsDesgl!desghorfijo
            Case 1 ' Horario Fijo
                hora_hasta_desg = objrsDesgl!desghorahasta
                'fecha_hasta_desg = FechaDeProc
                'FGZ - 10/01/2006
                'en realidad, si el desgloce es fijo siempre se refiere al dia que estoy procesando
                If Cambio_dia Then
                    'fecha_hasta_desg = DateAdd("d", 1, FechaDeProc)
                    fecha_hasta_desg = FechaDeProc
                Else
                    fecha_hasta_desg = FechaDeProc
                End If
                
            Case 2 ' Horario Variable

                Select Case objrsDesgl!hasta_entrada
                    Case 1
                       If objrsDesgl!hastahorentant <> "" Then
                            objFechasHoras.RestaXHoras Aux_Fecha, hora_entrada1, objrsDesgl!hastahorentant, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_hasta_desg = horres
                            fecha_hasta_desg = fecres
                         End If
                       
                       If objrsDesgl!hastahorentpos <> "" Then
                            objFechasHoras.SumoHoras Aux_Fecha, hora_entrada1, objrsDesgl!hastahorentpos, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_hasta_desg = horres
                            fecha_hasta_desg = fecres
                       End If
                       If objrsDesgl!hastahorsalant <> "" Then
                            If hora_salida1 < hora_entrada1 Then
                                Aux_Fecha = FechaDeProc + 1
                            Else
                                Aux_Fecha = FechaDeProc
                            End If
                            objFechasHoras.RestaXHoras Aux_Fecha, hora_salida1, objrsDesgl!hastahorsalant, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_hasta_desg = horres
                            fecha_hasta_desg = fecres
                       End If
                       If objrsDesgl!hastahorsalpos <> "" Then
                            If hora_salida1 < hora_entrada1 Then
                                Aux_Fecha = FechaDeProc + 1
                            Else
                                Aux_Fecha = FechaDeProc
                            End If
                            objFechasHoras.SumoHoras Aux_Fecha, hora_salida1, objrsDesgl!hastahorsalpos, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_hasta_desg = horres
                            fecha_hasta_desg = fecres
                       End If
                
                    Case 2 'Segunda Hora de entrada/salida
                      
                      If objrsDesgl!hastahorentant <> "" Then
                         objFechasHoras.RestaXHoras Aux_Fecha, hora_entrada2, objrsDesgl!hastahorentant, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_hasta_desg = horres
                         fecha_hasta_desg = fecres
                      End If
                      If objrsDesgl!hastahorentpos <> "" Then
                         objFechasHoras.SumoHoras Aux_Fecha, hora_entrada2, objrsDesgl!hastahorentpos, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_hasta_desg = horres
                         fecha_hasta_desg = fecres
                      End If
                      If objrsDesgl!hastahorsalant <> "" Then
                         If hora_salida2 < hora_entrada2 Then
                            Aux_Fecha = FechaDeProc + 1
                         Else
                            Aux_Fecha = FechaDeProc
                         End If
                         objFechasHoras.RestaXHoras Aux_Fecha, hora_salida2, objrsDesgl!hastahorsalant, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_hasta_desg = horres
                         fecha_hasta_desg = fecres
                      End If
                      If objrsDesgl!hastahorsalpos <> "" Then
                         If hora_salida2 < hora_entrada2 Then
                            Aux_Fecha = FechaDeProc + 1
                         Else
                            Aux_Fecha = FechaDeProc
                         End If
                         objFechasHoras.SumoHoras Aux_Fecha, hora_salida2, objrsDesgl!hastahorsalpos, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_hasta_desg = horres
                         fecha_hasta_desg = fecres
                      End If
             
                    Case 3   ' Tercera Hora de entrada/salida
                      If objrsDesgl!hastahorentant <> "" Then
                         objFechasHoras.RestaXHoras Aux_Fecha, hora_entrada3, objrsDesgl!hastahorentant, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_hasta_desg = horres
                         fecha_hasta_desg = fecres
                      End If
                      If objrsDesgl!hastahorentpos <> "" Then
                            objFechasHoras.SumoHoras Aux_Fecha, hora_entrada3, objrsDesgl!hastahorentpos, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_hasta_desg = horres
                            fecha_hasta_desg = fecres
                      End If
                      If objrsDesgl!hastahorsalant <> "" Then
                            If hora_salida3 < hora_entrada3 Then
                                Aux_Fecha = FechaDeProc + 1
                            Else
                                Aux_Fecha = FechaDeProc
                            End If
                            objFechasHoras.RestaXHoras Aux_Fecha, hora_salida3, objrsDesgl!hastahorsalant, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_hasta_desg = horres
                            fecha_hasta_desg = fecres
                      End If
                      If objrsDesgl!hastahorsalpos <> "" Then
                            If hora_salida3 < hora_entrada3 Then
                                Aux_Fecha = FechaDeProc + 1
                            Else
                                Aux_Fecha = FechaDeProc
                            End If
                            objFechasHoras.SumoHoras Aux_Fecha, hora_salida3, objrsDesgl!hastahorsalpos, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_hasta_desg = horres
                            fecha_hasta_desg = fecres
                      End If
                    End Select
                    
           Case 3   'Fijo/Variable
               If objrsDesgl!desghorahasta <> "" Then
                    hora_hasta_desg = objrsDesgl!desghorahasta
                    If Cambio_dia Then
                        'fecha_hasta_desg = DateAdd("d", 1, FechaDeProc)
                        fecha_hasta_desg = FechaDeProc
                    Else
                        fecha_hasta_desg = FechaDeProc
                    End If
               Else
                    Select Case objrsDesgl!hasta_entrada
                       Case 1  ' Primera hora de entrada salida
                           If objrsDesgl!hastahorentant <> "" Then
                                objFechasHoras.RestaXHoras Aux_Fecha, hora_entrada1, objrsDesgl!hastahorentant, fecres, horres
                                ok = objFechasHoras.ValidarHora(horres)
                                If Not ok Then Exit Sub
                                hora_hasta_desg = horres
                                fecha_hasta_desg = fecres
                           End If
                           If objrsDesgl!hastahorentpos <> "" Then
                                 objFechasHoras.SumoHoras Aux_Fecha, hora_entrada1, objrsDesgl!hastahorentpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_hasta_desg = horres
                                 fecha_hasta_desg = fecres
                           End If
                           If objrsDesgl!hastahorsalant <> "" Then
                                If hora_salida1 < hora_entrada1 Then
                                    Aux_Fecha = FechaDeProc + 1
                                Else
                                    Aux_Fecha = FechaDeProc
                                End If
                                 objFechasHoras.RestaXHoras Aux_Fecha, hora_salida1, objrsDesgl!hastahorsalant, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_hasta_desg = horres
                                 fecha_hasta_desg = fecres
                           End If
                           If objrsDesgl!hastahorsalpos <> "" Then
                                If hora_salida1 < hora_entrada1 Then
                                    Aux_Fecha = FechaDeProc + 1
                                Else
                                    Aux_Fecha = FechaDeProc
                                End If
                                 objFechasHoras.SumoHoras Aux_Fecha, hora_salida1, objrsDesgl!hastahorsalpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_hasta_desg = horres
                                 fecha_hasta_desg = fecres
                           End If
                       Case 2  ' Primera hora de entrada salida */
                           If objrsDesgl!hastahorentant <> "" Then
                                 objFechasHoras.RestaXHoras Aux_Fecha, hora_entrada2, objrsDesgl!hastahorentant, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_hasta_desg = horres
                                 fecha_hasta_desg = fecres
                            End If
                            If objrsDesgl!hastahorentpos <> "" Then
                                objFechasHoras.SumoHoras Aux_Fecha, hora_entrada2, objrsDesgl!hastahorentpos, fecres, horres
                                ok = objFechasHoras.ValidarHora(horres)
                                If Not ok Then Exit Sub
                                hora_hasta_desg = horres
                                fecha_hasta_desg = fecres
                            End If
                            If objrsDesgl!hastahorsalant <> "" Then
                                If hora_salida2 < hora_entrada2 Then
                                    Aux_Fecha = FechaDeProc + 1
                                Else
                                    Aux_Fecha = FechaDeProc
                                End If
                                objFechasHoras.RestaXHoras Aux_Fecha, hora_salida2, objrsDesgl!hastahorsalant, fecres, horres
                                ok = objFechasHoras.ValidarHora(horres)
                                If Not ok Then Exit Sub
                                hora_hasta_desg = horres
                                fecha_hasta_desg = fecres
                            End If
                            If objrsDesgl!hastahorsalpos <> "" Then
                                If hora_salida2 < hora_entrada2 Then
                                    Aux_Fecha = FechaDeProc + 1
                                Else
                                    Aux_Fecha = FechaDeProc
                                End If
                                 objFechasHoras.SumoHoras Aux_Fecha, hora_salida2, objrsDesgl!hastahorsalpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_hasta_desg = horres
                                 fecha_hasta_desg = fecres
                            End If
                        Case 3  ' Primera hora de entrada salida
                            If objrsDesgl!hastahorentant <> "" Then
                                 objFechasHoras.RestaXHoras Aux_Fecha, hora_entrada3, objrsDesgl!hastahorentant, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_hasta_desg = horres
                                 fecha_hasta_desg = fecres
                            End If
                            If objrsDesgl!hastahorentpos <> "" Then
                                 objFechasHoras.SumoHoras Aux_Fecha, hora_entrada3, objrsDesgl!hastahorentpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_hasta_desg = horres
                                 fecha_hasta_desg = fecres
                            End If
                            If objrsDesgl!hastahorsalant <> "" Then
                                If hora_salida3 < hora_entrada3 Then
                                    Aux_Fecha = FechaDeProc + 1
                                Else
                                    Aux_Fecha = FechaDeProc
                                End If
                                 objFechasHoras.RestaXHoras Aux_Fecha, hora_salida3, objrsDesgl!hastahorsalant, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_hasta_desg = horres
                                 fecha_hasta_desg = fecres
                            End If
                            If objrsDesgl!hastahorsalpos <> "" Then
                                If hora_salida3 < hora_entrada3 Then
                                    Aux_Fecha = FechaDeProc + 1
                                Else
                                    Aux_Fecha = FechaDeProc
                                End If
                                 objFechasHoras.SumoHoras Aux_Fecha, hora_salida3, objrsDesgl!hastahorsalpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_hasta_desg = horres
                                 fecha_hasta_desg = fecres
                            End If
                        End Select
               End If
        End Select
    End If
End Sub

Public Sub Cambiar_Horas_hasta3(ByVal nro_desg As Long, ByRef hora_hasta_desg As String, ByRef fecha_hasta_desg As Date, ByVal Cambio_dia As Boolean, ByVal FechaDeProc As Date)
'----------------------------------------------------------------------------------------------------
'Ultima Modificacion: FGZ - 12/06/2006.
'----------------------------------------------------------------------------------------------------
Dim hora_entrada1 As String
Dim hora_entrada2 As String
Dim hora_entrada3 As String
Dim hora_salida1 As String
Dim hora_salida2 As String
Dim hora_salida3 As String

Dim horres As String
Dim fecres As Date
Dim ok As Boolean
Dim objrsDesgl As New ADODB.Recordset
Dim objRs As New ADODB.Recordset

Dim Aux_Fecha As Date

   If P_Asignacion Then
        StrSql = "SELECT * FROM gti_detturtemp WHERE (ternro =" & Empleado.Ternro & " ) and (" & _
                 "gttempdesde <= " & ConvFecha(p_fecha) & ") and (" & _
                 ConvFecha(p_fecha) & " <= gttemphasta)"
        OpenRecordset StrSql, objRs
        If Not objRs.EOF Then
             hora_entrada1 = "" & objRs!ttemphdesde1
             hora_entrada2 = "" & objRs!ttemphdesde2
             hora_entrada3 = "" & objRs!ttemphdesde3
             hora_salida1 = "" & objRs!ttemphhasta1
             hora_salida2 = "" & objRs!ttemphhasta2
             hora_salida3 = "" & objRs!ttemphhasta3
             
             Aux_Fecha = p_fecha
         End If
    Else
        If Not Horario_Movil And Not Horario_Flexible_Rotativo Then
            StrSql = "SELECT * FROM gti_dias where dianro =" & Nro_Dia
            OpenRecordset StrSql, objRs
            If Not objRs.EOF Then
                hora_entrada1 = "" & objRs!diahoradesde1
                hora_entrada2 = "" & objRs!diahoradesde2
                hora_entrada3 = "" & objRs!diahoradesde3
                hora_salida1 = "" & objRs!diahorahasta1
                hora_salida2 = "" & objRs!diahorahasta2
                hora_salida3 = "" & objRs!diahorahasta3
                
                Aux_Fecha = FechaDeProc
            End If
        Else
            hora_entrada1 = "" & E1
            hora_entrada2 = "" & E2
            hora_entrada3 = "" & E3
            hora_salida1 = "" & S1
            hora_salida2 = "" & S2
            hora_salida3 = "" & S3
            
            Aux_Fecha = FechaDeProc
            
'            If Pasa_de_Dia Then
'                Aux_Fecha = FechaDeProc + 1
'            Else
'                Aux_Fecha = FechaDeProc
'            End If
        End If
    End If

'    ***** Cambio segun lo definido en el desglose de horas ******
    StrSql = "SELECT * FROM  gti_desghora WHERE desghnro = " & nro_desg
    OpenRecordset StrSql, objrsDesgl
    If Not objrsDesgl.EOF Then
        Select Case objrsDesgl!desghorfijo
            Case 1 ' Horario Fijo
                hora_hasta_desg = objrsDesgl!desghorahasta
                'fecha_hasta_desg = FechaDeProc
                'FGZ - 10/01/2006
                'en realidad, si el desgloce es fijo siempre se refiere al dia que estoy procesando
                If Cambio_dia Then
                    'fecha_hasta_desg = DateAdd("d", 1, FechaDeProc)
                    fecha_hasta_desg = FechaDeProc
                Else
                    fecha_hasta_desg = FechaDeProc
                End If
                
            Case 2 ' Horario Variable

                Select Case objrsDesgl!hasta_entrada
                    Case 1
                       If objrsDesgl!hastahorentant <> "" Then
                            objFechasHoras.RestaXHoras Aux_Fecha, hora_entrada1, objrsDesgl!hastahorentant, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_hasta_desg = horres
                            fecha_hasta_desg = fecres
                         End If
                       
                       If objrsDesgl!hastahorentpos <> "" Then
                            objFechasHoras.SumoHoras Aux_Fecha, hora_entrada1, objrsDesgl!hastahorentpos, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_hasta_desg = horres
                            fecha_hasta_desg = fecres
                       End If
                       If objrsDesgl!hastahorsalant <> "" Then
                            If hora_salida1 < hora_entrada1 Then
                                Aux_Fecha = FechaDeProc
                            Else
                                Aux_Fecha = FechaDeProc
                            End If
                            objFechasHoras.RestaXHoras Aux_Fecha, hora_salida1, objrsDesgl!hastahorsalant, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_hasta_desg = horres
                            fecha_hasta_desg = fecres
                       End If
                       If objrsDesgl!hastahorsalpos <> "" Then
                            If hora_salida1 < hora_entrada1 Then
                                Aux_Fecha = FechaDeProc
                            Else
                                Aux_Fecha = FechaDeProc
                            End If
                            objFechasHoras.SumoHoras Aux_Fecha, hora_salida1, objrsDesgl!hastahorsalpos, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_hasta_desg = horres
                            fecha_hasta_desg = fecres
                       End If
                
                    Case 2 'Segunda Hora de entrada/salida
                      
                      If objrsDesgl!hastahorentant <> "" Then
                         objFechasHoras.RestaXHoras Aux_Fecha, hora_entrada2, objrsDesgl!hastahorentant, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_hasta_desg = horres
                         fecha_hasta_desg = fecres
                      End If
                      If objrsDesgl!hastahorentpos <> "" Then
                         objFechasHoras.SumoHoras Aux_Fecha, hora_entrada2, objrsDesgl!hastahorentpos, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_hasta_desg = horres
                         fecha_hasta_desg = fecres
                      End If
                      If objrsDesgl!hastahorsalant <> "" Then
                         If hora_salida2 < hora_entrada2 Then
                            Aux_Fecha = FechaDeProc
                         Else
                            Aux_Fecha = FechaDeProc
                         End If
                         objFechasHoras.RestaXHoras Aux_Fecha, hora_salida2, objrsDesgl!hastahorsalant, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_hasta_desg = horres
                         fecha_hasta_desg = fecres
                      End If
                      If objrsDesgl!hastahorsalpos <> "" Then
                         If hora_salida2 < hora_entrada2 Then
                            Aux_Fecha = FechaDeProc
                         Else
                            Aux_Fecha = FechaDeProc
                         End If
                         objFechasHoras.SumoHoras Aux_Fecha, hora_salida2, objrsDesgl!hastahorsalpos, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_hasta_desg = horres
                         fecha_hasta_desg = fecres
                      End If
             
                    Case 3   ' Tercera Hora de entrada/salida
                      If objrsDesgl!hastahorentant <> "" Then
                         objFechasHoras.RestaXHoras Aux_Fecha, hora_entrada3, objrsDesgl!hastahorentant, fecres, horres
                         ok = objFechasHoras.ValidarHora(horres)
                         If Not ok Then Exit Sub
                         hora_hasta_desg = horres
                         fecha_hasta_desg = fecres
                      End If
                      If objrsDesgl!hastahorentpos <> "" Then
                            objFechasHoras.SumoHoras Aux_Fecha, hora_entrada3, objrsDesgl!hastahorentpos, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_hasta_desg = horres
                            fecha_hasta_desg = fecres
                      End If
                      If objrsDesgl!hastahorsalant <> "" Then
                            If hora_salida3 < hora_entrada3 Then
                                Aux_Fecha = FechaDeProc
                            Else
                                Aux_Fecha = FechaDeProc
                            End If
                            objFechasHoras.RestaXHoras Aux_Fecha, hora_salida3, objrsDesgl!hastahorsalant, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_hasta_desg = horres
                            fecha_hasta_desg = fecres
                      End If
                      If objrsDesgl!hastahorsalpos <> "" Then
                            If hora_salida3 < hora_entrada3 Then
                                Aux_Fecha = FechaDeProc
                            Else
                                Aux_Fecha = FechaDeProc
                            End If
                            objFechasHoras.SumoHoras Aux_Fecha, hora_salida3, objrsDesgl!hastahorsalpos, fecres, horres
                            ok = objFechasHoras.ValidarHora(horres)
                            If Not ok Then Exit Sub
                            hora_hasta_desg = horres
                            fecha_hasta_desg = fecres
                      End If
                    End Select
                    
           Case 3   'Fijo/Variable
               If objrsDesgl!desghorahasta <> "" Then
                    hora_hasta_desg = objrsDesgl!desghorahasta
                    If Cambio_dia Then
                        'fecha_hasta_desg = DateAdd("d", 1, FechaDeProc)
                        fecha_hasta_desg = FechaDeProc
                    Else
                        fecha_hasta_desg = FechaDeProc
                    End If
               Else
                    Select Case objrsDesgl!hasta_entrada
                       Case 1  ' Primera hora de entrada salida
                           If objrsDesgl!hastahorentant <> "" Then
                                objFechasHoras.RestaXHoras Aux_Fecha, hora_entrada1, objrsDesgl!hastahorentant, fecres, horres
                                ok = objFechasHoras.ValidarHora(horres)
                                If Not ok Then Exit Sub
                                hora_hasta_desg = horres
                                fecha_hasta_desg = fecres
                           End If
                           If objrsDesgl!hastahorentpos <> "" Then
                                 objFechasHoras.SumoHoras Aux_Fecha, hora_entrada1, objrsDesgl!hastahorentpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_hasta_desg = horres
                                 fecha_hasta_desg = fecres
                           End If
                           If objrsDesgl!hastahorsalant <> "" Then
                                If hora_salida1 < hora_entrada1 Then
                                    Aux_Fecha = FechaDeProc
                                Else
                                    Aux_Fecha = FechaDeProc
                                End If
                                 objFechasHoras.RestaXHoras Aux_Fecha, hora_salida1, objrsDesgl!hastahorsalant, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_hasta_desg = horres
                                 fecha_hasta_desg = fecres
                           End If
                           If objrsDesgl!hastahorsalpos <> "" Then
                                If hora_salida1 < hora_entrada1 Then
                                    Aux_Fecha = FechaDeProc
                                Else
                                    Aux_Fecha = FechaDeProc
                                End If
                                 objFechasHoras.SumoHoras Aux_Fecha, hora_salida1, objrsDesgl!hastahorsalpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_hasta_desg = horres
                                 fecha_hasta_desg = fecres
                           End If
                       Case 2  ' Primera hora de entrada salida */
                           If objrsDesgl!hastahorentant <> "" Then
                                 objFechasHoras.RestaXHoras Aux_Fecha, hora_entrada2, objrsDesgl!hastahorentant, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_hasta_desg = horres
                                 fecha_hasta_desg = fecres
                            End If
                            If objrsDesgl!hastahorentpos <> "" Then
                                objFechasHoras.SumoHoras Aux_Fecha, hora_entrada2, objrsDesgl!hastahorentpos, fecres, horres
                                ok = objFechasHoras.ValidarHora(horres)
                                If Not ok Then Exit Sub
                                hora_hasta_desg = horres
                                fecha_hasta_desg = fecres
                            End If
                            If objrsDesgl!hastahorsalant <> "" Then
                                If hora_salida2 < hora_entrada2 Then
                                    Aux_Fecha = FechaDeProc
                                Else
                                    Aux_Fecha = FechaDeProc
                                End If
                                objFechasHoras.RestaXHoras Aux_Fecha, hora_salida2, objrsDesgl!hastahorsalant, fecres, horres
                                ok = objFechasHoras.ValidarHora(horres)
                                If Not ok Then Exit Sub
                                hora_hasta_desg = horres
                                fecha_hasta_desg = fecres
                            End If
                            If objrsDesgl!hastahorsalpos <> "" Then
                                If hora_salida2 < hora_entrada2 Then
                                    Aux_Fecha = FechaDeProc
                                Else
                                    Aux_Fecha = FechaDeProc
                                End If
                                 objFechasHoras.SumoHoras Aux_Fecha, hora_salida2, objrsDesgl!hastahorsalpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_hasta_desg = horres
                                 fecha_hasta_desg = fecres
                            End If
                        Case 3  ' Primera hora de entrada salida
                            If objrsDesgl!hastahorentant <> "" Then
                                 objFechasHoras.RestaXHoras Aux_Fecha, hora_entrada3, objrsDesgl!hastahorentant, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_hasta_desg = horres
                                 fecha_hasta_desg = fecres
                            End If
                            If objrsDesgl!hastahorentpos <> "" Then
                                 objFechasHoras.SumoHoras Aux_Fecha, hora_entrada3, objrsDesgl!hastahorentpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_hasta_desg = horres
                                 fecha_hasta_desg = fecres
                            End If
                            If objrsDesgl!hastahorsalant <> "" Then
                                If hora_salida3 < hora_entrada3 Then
                                    Aux_Fecha = FechaDeProc
                                Else
                                    Aux_Fecha = FechaDeProc
                                End If
                                 objFechasHoras.RestaXHoras Aux_Fecha, hora_salida3, objrsDesgl!hastahorsalant, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_hasta_desg = horres
                                 fecha_hasta_desg = fecres
                            End If
                            If objrsDesgl!hastahorsalpos <> "" Then
                                If hora_salida3 < hora_entrada3 Then
                                    Aux_Fecha = FechaDeProc
                                Else
                                    Aux_Fecha = FechaDeProc
                                End If
                                 objFechasHoras.SumoHoras Aux_Fecha, hora_salida3, objrsDesgl!hastahorsalpos, fecres, horres
                                 ok = objFechasHoras.ValidarHora(horres)
                                 If Not ok Then Exit Sub
                                 hora_hasta_desg = horres
                                 fecha_hasta_desg = fecres
                            End If
                        End Select
               End If
        End Select
    End If
End Sub


Public Sub fraccionar_horas(Fecha As Date, Desde As String, Hasta As String, tfrac_desde As Integer, tfrac_hasta As Integer, ByRef sal_h_desde As String, ByRef sal_h_hasta As String)

Dim hora_frac As String
Dim ok As Boolean

sal_h_desde = objFechasHoras.FraccionaHs(Desde, tfrac_desde)
ok = objFechasHoras.ValidarHora(sal_h_desde)
sal_h_hasta = objFechasHoras.FraccionaHs(Hasta, tfrac_hasta)
ok = objFechasHoras.ValidarHora(sal_h_hasta)

End Sub

Public Function Duracion_Hora(tot_horas As Single, Dur_horas As Single) As Single
'FGZ - 03/11/2008 - cambié la definicion del parametro Dur_horas a single
Dim Horas As Single
Dim minutos_60 As Single

If Dur_horas = 0 Or Dur_horas = 60 Then
   Horas = tot_horas
Else
   minutos_60 = tot_horas * 60
   Horas = minutos_60 / Dur_horas
End If
Duracion_Hora = Horas
End Function

Public Function sumarizar_horas(Cant As Integer, frac_desde As Integer, frac_hasta As Integer) As Single
Dim fecpar1 As Date
Dim fecpar2 As Date
Dim hora_desde As String
Dim hora_hasta As String

Dim TotHor As Single
Dim Tdias As Integer
Dim Thoras As Integer
Dim Tmin As Integer
Dim i As Integer
Dim cant_horas As Single

 If depurar Then
    Flog.writeline Espacios(Tabulador * 3) & "Sumarizar horas. Begin"
 End If
 For i = 1 To Cant
      StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par =" & i
      OpenRecordset StrSql, objRs
      If Not objRs.EOF Then
            fecpar1 = objRs!Fecha
            hora_desde = objRs!Hora
            objRs.MoveNext
      End If
      If Not objRs.EOF Then
            fecpar2 = objRs!Fecha
            hora_hasta = objRs!Hora
      End If
      fraccionar_horas fecpar1, hora_desde, hora_hasta, frac_desde, frac_hasta, hora_desde, hora_hasta
      objFechasHoras.RestaHs fecpar1, hora_desde, fecpar2, hora_hasta, Tdias, Thoras, Tmin
      TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
      cant_horas = cant_horas + TotHor
 Next
 
 'if cant-horas = 0 then assign cant-horas = .
 If depurar Then
    Flog.writeline Espacios(Tabulador * 4) & "Horas del turno " & cant_horas
    Flog.writeline Espacios(Tabulador * 3) & "Sumarizar horas. END"
 End If
 sumarizar_horas = cant_horas
 
End Function
Public Function Sumarizar_Horas2(Cant As Integer, frac_desde As Integer, frac_hasta As Integer, ByRef FDesde As Date, ByRef HDesde As String, ByRef FHasta As Date, ByRef HHasta As String) As Single
Dim fecpar1 As Date
Dim fecpar2 As Date
Dim hora_desde As String
Dim hora_hasta As String

Dim TotHor As Single
Dim Tdias As Integer
Dim Thoras As Integer
Dim Tmin As Integer
Dim i As Integer
Dim cant_horas As Single

 If depurar Then
    Flog.writeline Espacios(Tabulador * 3) & "Sumarizar horas. Begin"
 End If
 For i = 1 To Cant
      StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par =" & i
      OpenRecordset StrSql, objRs
      If Not objRs.EOF Then
            fecpar1 = objRs!Fecha
            hora_desde = objRs!Hora
            objRs.MoveNext
      End If
      If Not objRs.EOF Then
            fecpar2 = objRs!Fecha
            hora_hasta = objRs!Hora
      End If
      fraccionar_horas fecpar1, hora_desde, hora_hasta, frac_desde, frac_hasta, hora_desde, hora_hasta
      objFechasHoras.RestaHs fecpar1, hora_desde, fecpar2, hora_hasta, Tdias, Thoras, Tmin
      TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
      cant_horas = cant_horas + TotHor
 Next
 
 'if cant-horas = 0 then assign cant-horas = .
 If depurar Then
    Flog.writeline Espacios(Tabulador * 4) & "Horas del turno " & cant_horas
    Flog.writeline Espacios(Tabulador * 3) & "Sumarizar horas. END"
 End If
 
FDesde = fecpar1
HDesde = hora_desde
FHasta = fecpar2
HHasta = hora_hasta
Sumarizar_Horas2 = cant_horas
End Function

Public Function Sumarizar_Horas_Det(Cant As Integer, frac_desde As Integer, frac_hasta As Integer) As Single
Dim fecpar1 As Date
Dim fecpar2 As Date
Dim hora_desde As String
Dim hora_hasta As String

Dim TotHor As Single
Dim Tdias As Integer
Dim Thoras As Integer
Dim Tmin As Integer
Dim i As Integer
Dim cant_horas As Single

 If depurar Then
    Flog.writeline Espacios(Tabulador * 3) & "Sumarizar horas. Begin"
 End If
 
'Inicializo
For i = 1 To MaxPares
    Arr_DesgReg(i).hs = 0
    Arr_DesgReg(i).Reg_Ent = 0
    Arr_DesgReg(i).Reg_Sal = 0
    Arr_DesgReg(i).Desde = ""
    Arr_DesgReg(i).Hasta = ""
Next i
 
 
 For i = 1 To Cant
      StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par =" & i
      OpenRecordset StrSql, objRs
      If Not objRs.EOF Then
            fecpar1 = objRs!Fecha
            hora_desde = objRs!Hora
            Arr_DesgReg(i).Reg_Ent = objRs!Regnro
            objRs.MoveNext
      End If
      If Not objRs.EOF Then
            fecpar2 = objRs!Fecha
            hora_hasta = objRs!Hora
            Arr_DesgReg(i).Reg_Sal = objRs!Regnro
      End If
      Arr_DesgReg(i).Desde = hora_desde
      Arr_DesgReg(i).Hasta = hora_hasta
      
      fraccionar_horas fecpar1, hora_desde, hora_hasta, frac_desde, frac_hasta, hora_desde, hora_hasta
      objFechasHoras.RestaHs fecpar1, hora_desde, fecpar2, hora_hasta, Tdias, Thoras, Tmin
      TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
      cant_horas = cant_horas + TotHor
      Arr_DesgReg(i).hs = TotHor
 Next
 
 'if cant-horas = 0 then assign cant-horas = .
 If depurar Then
    Flog.writeline Espacios(Tabulador * 4) & "Horas del turno " & cant_horas
    Flog.writeline Espacios(Tabulador * 3) & "Sumarizar horas. END"
 End If
 Sumarizar_Horas_Det = cant_horas
 
End Function


Public Function Sumarizar_Horas_Par(par As Integer, frac_desde As Integer, frac_hasta As Integer, Regnro1 As Long, Regnro2 As Long) As Single
Dim fecpar1 As Date
Dim fecpar2 As Date
Dim hora_desde As String
Dim hora_hasta As String

Dim TotHor As Single
Dim Tdias As Integer
Dim Thoras As Integer
Dim Tmin As Integer
Dim i As Integer
Dim cant_horas As Single

 If depurar Then
    Flog.writeline Espacios(Tabulador * 3) & "Sumarizar horas par " & par & ". Begin"
 End If

    Regnro1 = 0
    Regnro2 = 0
    
    StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par =" & par
    OpenRecordset StrSql, objRs
    If Not objRs.EOF Then
          fecpar1 = objRs!Fecha
          hora_desde = objRs!Hora
          Regnro1 = objRs!Regnro
          objRs.MoveNext
    End If
    If Not objRs.EOF Then
          fecpar2 = objRs!Fecha
          hora_hasta = objRs!Hora
          Regnro2 = objRs!Regnro
    End If
    fraccionar_horas fecpar1, hora_desde, hora_hasta, frac_desde, frac_hasta, hora_desde, hora_hasta
    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar2, hora_hasta, Tdias, Thoras, Tmin
    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
    cant_horas = cant_horas + TotHor
 
 If depurar Then
    Flog.writeline Espacios(Tabulador * 4) & "Horas del par " & cant_horas
    Flog.writeline Espacios(Tabulador * 3) & "Sumarizar horas par " & par & ". END"
 End If
 Sumarizar_Horas_Par = cant_horas
 
End Function

Public Function Sumarizar_Horas_Franja_Par(ByVal par As Integer, ByVal frac_desde As Integer, ByVal frac_hasta As Integer, ByVal HDesde As String, ByVal HHasta As String, ByRef HCDesde As String, ByRef HCHasta As String, ByRef Regnro1 As Long, ByRef Regnro2 As Long) As Single
Dim fecpar1 As Date
Dim fecpar2 As Date
Dim hora_desde As String
Dim hora_hasta As String

Dim TotHor As Single
Dim Tdias As Integer
Dim Thoras As Integer
Dim Tmin As Integer
Dim i As Integer
Dim cant_horas As Single
Dim FDesde As Date
Dim FHasta As Date

Dim hora_desde_desg As String
Dim fecha_desde_desg As Date
Dim hora_hasta_desg As String
Dim fecha_hasta_desg As Date



 'If depurar Then
 '   Flog.writeline Espacios(Tabulador * 3) & "Sumarizar horas en Franja " & HDesde & "-" & HHasta
 'End If

'Seteo las fechas correspondientes a las horas desde y hasta del desgloce
FDesde = p_fecha
FHasta = p_fecha
If HHasta < HDesde Then
    FHasta = FHasta + 1
End If
 
 
  hora_desde_desg = HDesde
  fecha_desde_desg = FDesde
  hora_hasta_desg = HHasta
  fecha_hasta_desg = FHasta
  
  StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par =" & par
  OpenRecordset StrSql, objRs
  If Not objRs.EOF Then
        fecpar1 = objRs!Fecha
        hora_desde = objRs!Hora
        Regnro1 = objRs!Regnro
        If Not objRs.EOF Then
            objRs.MoveNext
        End If
  End If
  If Not objRs.EOF Then
        fecpar2 = objRs!Fecha
        hora_hasta = objRs!Hora
        Regnro2 = objRs!Regnro
  End If
  
''Chequeo la hora desde del par
'If (hora_desde >= HDesde And fecpar1 = FDesde) And (hora_desde <= HHasta) Then
'    hora_desde_desg = hora_desde
'    fecha_desde_desg = fecpar1
'End If
''If (hora_desde < HDesde) Or (hora_desde > HDesde And fecpar1 < FDesde) Then
'If (hora_desde < HDesde And fecpar1 < FDesde) Then
'    hora_desde_desg = hora_desde
'    fecha_desde_desg = fecpar1
'End If
'
'
''Chequeo la hora hasta del par
'If hora_hasta <= HHasta And fecpar2 = FHasta Then
'    hora_hasta_desg = hora_hasta
'    fecha_hasta_desg = fecpar2
'End If
'If (hora_hasta < HHasta And FHasta < fecpar2) Then
'    If HHasta = "2400" Then
'        hora_hasta_desg = hora_hasta
'        fecha_hasta_desg = fecpar2
'    End If
'End If
'
'
''Faltaba este control
''Cuando la registracion esta completamente fuera de la franja sumaba toda la franja y no debe sumar nada
'If ((hora_desde >= hora_hasta_desg And fecpar1 = fecha_hasta_desg) Or (fecpar1 > fecha_hasta_desg)) Then
'    hora_hasta_desg = hora_desde_desg
'    fecha_hasta_desg = fecha_desde_desg
'End If
'    If hora_desde_desg = "" Then
'        hora_desde_desg = hora_desde
'        fecha_desde_desg = fecpar1
'    End If
'    If hora_hasta_desg = "" Then
'        hora_hasta_desg = hora_hasta
'        fecha_hasta_desg = fecpar2
'    End If
'
'If hora_desde_desg <> "" And hora_hasta_desg <> "" Then
'    fraccionar_horas fecha_desde_desg, hora_desde_desg, hora_hasta_desg, frac_desde, frac_hasta, hora_desde, hora_hasta
'    objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
'    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
'    cant_horas = cant_horas + TotHor
'End If
 



    '-----------------------------------------------------
    If (hora_hasta < HHasta And FHasta < fecpar2) Then
        If HHasta = "2400" Then
            hora_hasta_desg = hora_hasta
            fecha_hasta_desg = fecpar2
        End If
    End If

    TotHor = 0

    'Desgloce   [---------------]
    'Horario          (----------------)
    If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar2, hora_hasta) Then
        objFechasHoras.RestaHs fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
        HCDesde = hora_desde
        HCHasta = hora_hasta_desg
        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
    End If

    'Desgloce       [---------------]
    'Horario    (----------------)
    If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar2, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar2, hora_hasta) Then
        objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecpar2, hora_hasta, Tdias, Thoras, Tmin
        HCDesde = hora_desde_desg
        HCHasta = hora_hasta
        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
    End If

    'Desgloce       [---------------]
    'Horario    (-----------------------)
    If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar2, hora_hasta) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar2, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_desde) Then
        objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
        HCDesde = hora_desde_desg
        HCHasta = hora_hasta_desg
        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
    End If

    'Desgloce   [---------------]
    'Horario        (--------)
    If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar2, hora_hasta) Then
    'If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
        objFechasHoras.RestaHs fecpar1, hora_desde, fecpar2, hora_hasta, Tdias, Thoras, Tmin
        HCDesde = hora_desde
        HCHasta = hora_hasta
        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
    End If

    cant_horas = cant_horas + TotHor


 If depurar Then
    Flog.writeline Espacios(Tabulador * 3) & "      --> Horas del par en la franja " & cant_horas
 End If
 'HCdesde = hora_desde_desg
 'HChasta = hora_hasta_desg
 Sumarizar_Horas_Franja_Par = cant_horas
End Function


Public Function Sumarizar_Horas_Franja_Par2(ByVal par As Integer, ByVal frac_desde As Integer, ByVal frac_hasta As Integer, ByVal HDesde As String, ByVal HHasta As String, ByRef HCFDesde As Date, ByRef HCFHasta As Date, ByRef HCDesde As String, ByRef HCHasta As String, ByRef Regnro1 As Long, ByRef Regnro2 As Long) As Single
Dim fecpar1 As Date
Dim fecpar2 As Date
Dim hora_desde As String
Dim hora_hasta As String

Dim TotHor As Single
Dim Tdias As Integer
Dim Thoras As Integer
Dim Tmin As Integer
Dim i As Integer
Dim cant_horas As Single
Dim FDesde As Date
Dim FHasta As Date

Dim hora_desde_desg As String
Dim fecha_desde_desg As Date
Dim hora_hasta_desg As String
Dim fecha_hasta_desg As Date



 'If depurar Then
 '   Flog.writeline Espacios(Tabulador * 3) & "Sumarizar horas en Franja " & HDesde & "-" & HHasta
 'End If

'Seteo las fechas correspondientes a las horas desde y hasta del desgloce
FDesde = p_fecha
FHasta = p_fecha
If HHasta < HDesde Then
    FHasta = FHasta + 1
End If
 
 
  hora_desde_desg = HDesde
  fecha_desde_desg = FDesde
  hora_hasta_desg = HHasta
  fecha_hasta_desg = FHasta
  
  StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par =" & par
  OpenRecordset StrSql, objRs
  If Not objRs.EOF Then
        fecpar1 = objRs!Fecha
        hora_desde = objRs!Hora
        Regnro1 = objRs!Regnro
        If Not objRs.EOF Then
            objRs.MoveNext
        End If
  End If
  If Not objRs.EOF Then
        fecpar2 = objRs!Fecha
        hora_hasta = objRs!Hora
        Regnro2 = objRs!Regnro
  End If
  
    
    If hora_desde_desg = "" Then
        hora_desde_desg = hora_desde
        fecha_desde_desg = fecpar1
    End If
    If hora_hasta_desg = "" Then
        hora_hasta_desg = hora_hasta
        fecha_hasta_desg = fecpar2
    End If
    
    
    If (hora_hasta < HHasta And FHasta < fecpar2) Then
        If HHasta = "2400" Then
            hora_hasta_desg = hora_hasta
            fecha_hasta_desg = fecpar2
        End If
    End If

    TotHor = 0

    'Desgloce   [---------------]
    'Horario          (----------------)
    If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar2, hora_hasta) Then
        objFechasHoras.RestaHs fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
        HCDesde = hora_desde
        HCHasta = hora_hasta_desg
        HCFDesde = fecpar1
        HCFHasta = fecha_hasta_desg
        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
    End If

    'Desgloce       [---------------]
    'Horario    (----------------)
    If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar2, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar2, hora_hasta) Then
        objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecpar2, hora_hasta, Tdias, Thoras, Tmin
        HCDesde = hora_desde_desg
        HCHasta = hora_hasta
        HCFDesde = fecha_desde_desg
        HCFHasta = fecpar2
        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
    End If

    'Desgloce       [---------------]
    'Horario    (-----------------------)
    If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar2, hora_hasta) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar2, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_desde) Then
        objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
        HCDesde = hora_desde_desg
        HCHasta = hora_hasta_desg
        HCFDesde = fecha_desde_desg
        HCFHasta = fecha_hasta_desg
        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
    End If

    'Desgloce   [---------------]
    'Horario        (--------)
    If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar2, hora_hasta) Then
    'If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
        objFechasHoras.RestaHs fecpar1, hora_desde, fecpar2, hora_hasta, Tdias, Thoras, Tmin
        HCDesde = hora_desde
        HCHasta = hora_hasta
        HCFDesde = fecpar1
        HCFHasta = fecpar2
        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
    End If
    cant_horas = cant_horas + TotHor


 If depurar Then
    Flog.writeline Espacios(Tabulador * 3) & "      --> Horas del par en la franja " & cant_horas
 End If
 Sumarizar_Horas_Franja_Par2 = cant_horas
End Function

Public Function Sumarizar_Horas_Franja_Det(Cant As Integer, ByVal frac_desde As Integer, ByVal frac_hasta As Integer, ByVal HDesde As String, ByVal HHasta As String, ByRef HCDesde As String, ByRef HCHasta As String) As Single
Dim fecpar1 As Date
Dim fecpar2 As Date
Dim hora_desde As String
Dim hora_hasta As String

Dim TotHor As Single
Dim Tdias As Integer
Dim Thoras As Integer
Dim Tmin As Integer
Dim i As Integer
Dim cant_horas As Single
Dim FDesde As Date
Dim FHasta As Date


Dim hora_desde_desg As String
Dim fecha_desde_desg As Date
Dim hora_hasta_desg As String
Dim fecha_hasta_desg As Date


 If depurar Then
    Flog.writeline Espacios(Tabulador * 3) & "Sumarizar horas en Franja " & HDesde & "-" & HHasta
 End If
 
'Inicializo
For i = 1 To MaxPares
    Arr_DesgReg(i).hs = 0
    Arr_DesgReg(i).Reg_Ent = 0
    Arr_DesgReg(i).Reg_Sal = 0
    Arr_DesgReg(i).Desde = ""
    Arr_DesgReg(i).Hasta = ""
Next i
 
 
'Seteo las fechas correspondientes a las horas desde y hasta del desgloce
FDesde = p_fecha
FHasta = p_fecha
If HHasta < HDesde Then
    FHasta = FHasta + 1
End If
 
 
 For i = 1 To Cant
      TotHor = 0
      hora_desde_desg = HDesde
      fecha_desde_desg = FDesde
      hora_hasta_desg = HHasta
      fecha_hasta_desg = FHasta
      
      StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par =" & i
      OpenRecordset StrSql, objRs
      If Not objRs.EOF Then
            fecpar1 = objRs!Fecha
            hora_desde = objRs!Hora
            Arr_DesgReg(i).Reg_Ent = objRs!Regnro
            If Not objRs.EOF Then
                objRs.MoveNext
            End If
      End If
      If Not objRs.EOF Then
            fecpar2 = objRs!Fecha
            hora_hasta = objRs!Hora
            Arr_DesgReg(i).Reg_Sal = objRs!Regnro
      End If
      
      
'============================================================================================
               
                Call fraccionar_horas(fecpar1, hora_desde, hora_hasta, frac_desde, frac_hasta, hora_desde, hora_hasta)
                
                'Desgloce   [---------------]
                'Horario          (----------------)
                If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                    objFechasHoras.RestaHs fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                    Arr_DesgReg(i).Desde = hora_desde
                    Arr_DesgReg(i).Hasta = hora_hasta_desg
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    'If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
                'Desgloce       [---------------]
                'Horario    (----------------)
                If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                    objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                    Arr_DesgReg(i).Desde = hora_desde_desg
                    Arr_DesgReg(i).Hasta = hora_hasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    'If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
                
                'Desgloce       [---------------]
                'Horario    (-----------------------)
                If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_desde) Then
                    objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                    Arr_DesgReg(i).Desde = hora_desde_desg
                    Arr_DesgReg(i).Hasta = hora_hasta_desg
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    'If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
                'Desgloce   [---------------]
                'Horario        (--------)
                If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                    Arr_DesgReg(i).Desde = hora_desde
                    Arr_DesgReg(i).Hasta = hora_hasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    'If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
      
                cant_horas = cant_horas + TotHor
                Arr_DesgReg(i).hs = TotHor
     
      
'============================================================================================
      
      
'    'Chequeo la hora desde del par
'    If (hora_desde >= HDesde And fecpar1 = FDesde) And (hora_desde <= HHasta) Then
'        hora_desde_desg = hora_desde
'        fecha_desde_desg = fecpar1
'    Else
'        hora_desde_desg = ""
'    End If
'    'If (hora_desde < HDesde) Or (hora_desde > HDesde And fecpar1 < FDesde) Then
'    If (hora_desde < HDesde And fecpar1 < FDesde) Then
'        hora_desde_desg = hora_desde
'        fecha_desde_desg = fecpar1
'    End If
'
'
'    'Chequeo la hora hasta del par
'    If hora_hasta <= HHasta And fecpar2 = FHasta Then
'        hora_hasta_desg = hora_hasta
'        fecha_hasta_desg = fecpar2
'    End If
'    If (hora_hasta < HHasta And FHasta < fecpar2) Then
'        If HHasta = "2400" Then
'            hora_hasta_desg = hora_hasta
'            fecha_hasta_desg = fecpar2
'        End If
'    End If
'
'
'    If hora_desde_desg <> "" And hora_hasta_desg <> "" Then
'        fraccionar_horas fecha_desde_desg, hora_desde_desg, hora_hasta_desg, frac_desde, frac_hasta, hora_desde, hora_hasta
'        objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
'        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
'        cant_horas = cant_horas + TotHor
'        Arr_DesgReg(I).Hs = TotHor
'    End If


 Next
 
 'if cant-horas = 0 then assign cant-horas = .
 If depurar Then
    Flog.writeline Espacios(Tabulador * 4) & "Horas del turno " & cant_horas
    Flog.writeline Espacios(Tabulador * 3) & "Sumarizar horas en Franja. FIN"
 End If
 HCDesde = hora_desde_desg
 HCHasta = hora_hasta_desg
 Sumarizar_Horas_Franja_Det = cant_horas
End Function


Public Function Sumarizar_Horas_Franja(Cant As Integer, ByVal frac_desde As Integer, ByVal frac_hasta As Integer, ByVal HDesde As String, ByVal HHasta As String, ByRef HCDesde As String, ByRef HCHasta As String) As Single
Dim fecpar1 As Date
Dim fecpar2 As Date
Dim hora_desde As String
Dim hora_hasta As String

Dim TotHor As Single
Dim Tdias As Integer
Dim Thoras As Integer
Dim Tmin As Integer
Dim i As Integer
Dim cant_horas As Single
Dim FDesde As Date
Dim FHasta As Date


Dim hora_desde_desg As String
Dim fecha_desde_desg As Date
Dim hora_hasta_desg As String
Dim fecha_hasta_desg As Date



 If depurar Then
    Flog.writeline Espacios(Tabulador * 3) & "Sumarizar horas en Franja " & HDesde & "-" & HHasta
 End If
 
'Seteo las fechas correspondientes a las horas desde y hasta del desgloce
FDesde = p_fecha
FHasta = p_fecha
If HHasta < HDesde Then
    FHasta = FHasta + 1
End If
 
 
 For i = 1 To Cant
      hora_desde_desg = HDesde
      fecha_desde_desg = FDesde
      hora_hasta_desg = HHasta
      fecha_hasta_desg = FHasta
      
      StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par =" & i
      OpenRecordset StrSql, objRs
      If Not objRs.EOF Then
            fecpar1 = objRs!Fecha
            hora_desde = objRs!Hora
            If Not objRs.EOF Then
                objRs.MoveNext
            End If
      End If
      If Not objRs.EOF Then
            fecpar2 = objRs!Fecha
            hora_hasta = objRs!Hora
      End If
      
    'Chequeo la hora desde del par
    If (hora_desde >= HDesde And fecpar1 = FDesde) And (hora_desde <= HHasta) Then
        hora_desde_desg = hora_desde
        fecha_desde_desg = fecpar1
    End If
    'If (hora_desde < HDesde) Or (hora_desde > HDesde And fecpar1 < FDesde) Then
    If (hora_desde < HDesde And fecpar1 < FDesde) Then
        hora_desde_desg = hora_desde
        fecha_desde_desg = fecpar1
    End If
    
    
    'Chequeo la hora hasta del par
    If hora_hasta <= HHasta And fecpar2 = FHasta Then
        hora_hasta_desg = hora_hasta
        fecha_hasta_desg = fecpar2
    End If
    If (hora_hasta < HHasta And FHasta < fecpar2) Then
        If HHasta = "2400" Then
            hora_hasta_desg = hora_hasta
            fecha_hasta_desg = fecpar2
        End If
    End If
      
      
    If hora_desde_desg <> "" And hora_hasta_desg <> "" Then
        fraccionar_horas fecha_desde_desg, hora_desde_desg, hora_hasta_desg, frac_desde, frac_hasta, hora_desde, hora_hasta
        objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
        cant_horas = cant_horas + TotHor
    End If
 Next
 
 'if cant-horas = 0 then assign cant-horas = .
 If depurar Then
    Flog.writeline Espacios(Tabulador * 4) & "Horas del turno " & cant_horas
    Flog.writeline Espacios(Tabulador * 3) & "Sumarizar horas en Franja. FIN"
 End If
 HCDesde = hora_desde_desg
 HCHasta = hora_hasta_desg
 Sumarizar_Horas_Franja = cant_horas
End Function




Public Function Sumarizar_Horas_Franja_nueva(Cant As Integer, ByVal frac_desde As Integer, ByVal frac_hasta As Integer, ByVal HDesde As String, ByVal HHasta As String, ByRef HCDesde As String, ByRef HCHasta As String) As Single
Dim fecpar1 As Date
Dim fecpar2 As Date
Dim hora_desde As String
Dim hora_hasta As String

Dim TotHor As Single
Dim Tdias As Integer
Dim Thoras As Integer
Dim Tmin As Integer
Dim i As Integer
Dim cant_horas As Single
Dim FDesde As Date
Dim FHasta As Date


Dim hora_desde_desg As String
Dim fecha_desde_desg As Date
Dim hora_hasta_desg As String
Dim fecha_hasta_desg As Date



 'If depurar Then
 '   Flog.writeline Espacios(Tabulador * 3) & "Sumarizar horas en Franja " & HDesde & "-" & HHasta
 'End If
 
'Seteo las fechas correspondientes a las horas desde y hasta del desgloce
FDesde = p_fecha
FHasta = p_fecha
If HHasta < HDesde Then
    FHasta = FHasta + 1
End If
 
 
 For i = 1 To Cant
      hora_desde_desg = HDesde
      fecha_desde_desg = FDesde
      hora_hasta_desg = HHasta
      fecha_hasta_desg = FHasta
      
      StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par =" & i
      OpenRecordset StrSql, objRs
      If Not objRs.EOF Then
            fecpar1 = objRs!Fecha
            hora_desde = objRs!Hora
            If Not objRs.EOF Then
                objRs.MoveNext
            End If
      End If
      If Not objRs.EOF Then
            fecpar2 = objRs!Fecha
            hora_hasta = objRs!Hora
      End If
      
    
    
'    'Chequeo la hora desde del par
'    If (hora_desde >= HDesde And fecpar1 = FDesde) And (hora_desde <= HHasta) Then
'        hora_desde_desg = hora_desde
'        fecha_desde_desg = fecpar1
'    End If
'    'If (hora_desde < HDesde) Or (hora_desde > HDesde And fecpar1 < FDesde) Then
'    If (hora_desde < HDesde And fecpar1 < FDesde) Then
'        hora_desde_desg = hora_desde
'        fecha_desde_desg = fecpar1
'    End If
'
'
'    'Chequeo la hora hasta del par
'    If hora_hasta <= HHasta And fecpar2 = FHasta Then
'        hora_hasta_desg = hora_hasta
'        fecha_hasta_desg = fecpar2
'    End If
'    If (hora_hasta < HHasta And FHasta < fecpar2) Then
'        If HHasta = "2400" Then
'            hora_hasta_desg = hora_hasta
'            fecha_hasta_desg = fecpar2
'        End If
'    End If
'
'    'Faltaba este control
'    'Cuando la registracion esta completamente fuera de la franja sumaba toda la franja y no debe sumar nada
'    If ((hora_desde >= hora_hasta_desg And fecpar1 = fecha_hasta_desg) Or (fecpar1 > fecha_hasta_desg)) Then
'        hora_hasta_desg = hora_desde_desg
'        fecha_hasta_desg = fecha_desde_desg
'    End If
'    If hora_desde_desg = "" Then
'        hora_desde_desg = hora_desde
'        fecha_desde_desg = fecpar1
'    End If
'    If hora_hasta_desg = "" Then
'        hora_hasta_desg = hora_hasta
'        fecha_hasta_desg = fecpar2
'    End If
'
'
'    If hora_desde_desg <> "" And hora_hasta_desg <> "" Then
'        If objFechasHoras.Menor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg) Then
'            fraccionar_horas fecha_desde_desg, hora_desde_desg, hora_hasta_desg, frac_desde, frac_hasta, hora_desde, hora_hasta
'            objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
'            TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
'        Else
'            TotHor = 0
'        End If
'        cant_horas = cant_horas + TotHor
'    End If
    
    
    
    '-----------------------------------------------------
    If hora_desde_desg = "" Then
        hora_desde_desg = hora_desde
        fecha_desde_desg = fecpar1
    End If
    If hora_hasta_desg = "" Then
        hora_hasta_desg = hora_hasta
        fecha_hasta_desg = fecpar2
    End If
    
    
    If (hora_hasta < HHasta And FHasta < fecpar2) Then
        If HHasta = "2400" Then
            hora_hasta_desg = hora_hasta
            fecha_hasta_desg = fecpar2
        End If
    End If

    TotHor = 0

    'Desgloce   [---------------]
    'Horario          (----------------)
    If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar2, hora_hasta) Then
        objFechasHoras.RestaHs fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
        HCDesde = hora_desde
        HCHasta = hora_hasta_desg
        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
    End If

    'Desgloce       [---------------]
    'Horario    (----------------)
    If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar2, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar2, hora_hasta) Then
        objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecpar2, hora_hasta, Tdias, Thoras, Tmin
        HCDesde = hora_desde_desg
        HCHasta = hora_hasta
        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
    End If

    'Desgloce       [---------------]
    'Horario    (-----------------------)
    If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar2, hora_hasta) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar2, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_desde) Then
        objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
        HCDesde = hora_desde_desg
        HCHasta = hora_hasta_desg
        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
    End If

    'Desgloce   [---------------]
    'Horario        (--------)
    If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar2, hora_hasta) Then
    'If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
        objFechasHoras.RestaHs fecpar1, hora_desde, fecpar2, hora_hasta, Tdias, Thoras, Tmin
        HCDesde = hora_desde
        HCHasta = hora_hasta
        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
    End If

    cant_horas = cant_horas + TotHor
    
 Next
 
 'if cant-horas = 0 then assign cant-horas = .
 If depurar Then
    Flog.writeline Espacios(Tabulador * 3) & "      --> Horas en la franja " & cant_horas
 End If
 'HCdesde = hora_desde_desg
 'HChasta = hora_hasta_desg
 Sumarizar_Horas_Franja_nueva = cant_horas
End Function





Public Sub Politica14(ByVal Fecha As Date, ByVal NroTer As Long, Nro_Turno As Long, ByRef ok As Boolean, ByVal subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Setea el horario teorico del legajo.
' Autor: FGZ - 24/10/2005
' Ultima modificacion: FGZ - 30/10/2006
' Descripcion:
'           Se agregó la opcion 3 para Turnos Rotativos Flexibles. Se hizo para AGD.
'           Funciona con un subturnos y toma el dia que mas se acerque segun las registraciones del dia.
' Ultima modificacion: FGZ - 21/11/2006
' Descripcion:
'           Se agregó la opcion 2 para Turnos Flexible. Se hizo para AGD.
'           La idea es estimar cual es el subturno dentro del turno que cuadra mejor teniendo en cuenta la 1er registracion del dia.
' Ultima modificacion: Diego Rosso - 12/11/2007
' Descripcion:
'           Se agregó en las versiones 1,2,3 y 4 la linea  Nro_Dia_Default = Nro_Dia
'           La utiliza para guardar el nro de dia que le corresponderia y la usa en Insertar_GTI_Proc_Emp
' --------------------------------------------------------------
Dim Opcion As Integer
Dim F_Desde As Date
Dim F_Hasta As Date
Dim H_Desde As String
Dim H_Hasta As String
Dim Aux_Hora As String
Dim Aux_Hora_R As String
Dim Aux_Fecha As Date
Dim Horas_Dia As Single

Dim entrada As Boolean

Dim Fecha_Auxiliar As Date
Dim Encontro As Boolean
Dim contador As Long

Dim SubTdia(1 To 50) As TipoSubTDia
Dim Subturno_Anterior As Long
Dim EntTeorica As String
Dim SalTeorica As String
Dim Indice_Menor As Integer
Dim Diferencia As Double
Dim Resultado As Double
Dim subt As Integer
Dim i As Integer
Dim fEntTeorica As Date
Dim fSalTeorica As Date
Dim Indice_dia As Integer
Dim HoraDesde_Anterior As String

Dim Dia_Libre_Original As Boolean
Dim Retroce_Dia As Boolean
'FGZ - 22/11/2006
'Dim Cantidad_de_Horas As Single
'Dim Min_Cantidad_de_Horas As Single
Dim HoraHasta_Anterior As String
'Dim Es_Sabado As Boolean
Dim Cantidad_Subturnos As Integer
Dim Primer_Orden As Integer
Dim Tamaño_Subt As Integer
Dim Tam_Turno As Integer
Dim Tam_Acumulado As Integer

'FGZ - 11/06/2007
Dim ST() As TST
Dim Orden_en_ST As Integer

Dim rs As New ADODB.Recordset
Dim rs_Dia As New ADODB.Recordset
Dim rs_gti_Proc_Emp As New ADODB.Recordset

Dim Reg_Mas_Cerca As Long
Dim Reg_Diferencia As String
Dim Reg_Entrada As Boolean
Dim EncontroReg As Boolean
Dim HoraTopeNocturno As String
'Dim HoraTopeNocturno2 As String


    Call SetearParametrosPolitica(Detalle, ok)
    Opcion = st_Opcion
    TipoRedondeo = st_TipoRedondeo
    ok = True
    
    If st_Modifica <> "" Then
        If CLng(st_Modifica) = 0 Then
            ModificaHT = False
        Else
            ModificaHT = True
        End If
    Else
          ModificaHT = True
    End If
    
    'Inicializo
    E1 = ""
    S1 = ""
    E2 = ""
    S2 = ""
    E3 = ""
    S3 = ""
    
    'FGZ - 20/11/2006 - Agregué estas lineas
    Horario_Movil = False
    Horario_Flexible_Rotativo = False
    
    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "  Version " & Opcion
        Flog.writeline
    End If
    Select Case Opcion
    Case 1:
        Nro_Dia_Default = Nro_Dia 'Diego Rosso - 12/11/2007

        Horario_Movil = True
        
        'Busco la cantidad de horas para ese dia en ese turno
        StrSql = "SELECT diacanthoras FROM gti_dias "
        StrSql = StrSql & " WHERE subturnro = " & Nro_Subturno
        StrSql = StrSql & " ORDER BY diaorden"
        OpenRecordset StrSql, rs_Dia
        If Not rs_Dia.EOF Then
            Horas_Dia = rs_Dia!diacanthoras
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Cantidad de Horas para el turno " & Horas_Dia
            End If
            'Dia_Libre = rs_dia!Dialibre
        End If
    
        'Busco la primer registracion dentro de la ventana
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Busco la primer registracion dentro de la ventana"
        End If
        StrSql = "SELECT regfecha,reghora,regentsal FROM gti_registracion WHERE (regestado = 'I') "
        StrSql = StrSql & " AND (ternro = " & NroTer & ") "
        StrSql = StrSql & " AND ( regfecha >= " & ConvFecha(Fecha) & ") "
        StrSql = StrSql & " AND (regfecha <=" & ConvFecha(DateAdd("d", 1, Fecha)) & ")"
        'FGZ - 19/05/2010 ------------ Control FT -------------
        StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
        'FGZ - 19/05/2010 ------------ Control FT -------------
        StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        
        If Not rs.EOF Then
            Aux_Fecha = rs!regfecha
            Aux_Hora = rs!reghora
            
            If Not EsNulo(rs!regentsal) Then
                If UCase(rs!regentsal) = "E" Then
                    entrada = True
                Else
                    entrada = False
                End If
            Else
                entrada = True
            End If
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Encontré " & IIf(entrada, " Entrada ", " Salida ") & " Fecha: " & Aux_Fecha & " Hora: " & Aux_Hora
            End If
            
            'Redondeo/Fraccionamiento
            If TipoRedondeo <> 0 Then
                Aux_Hora_R = objFechasHoras.FraccionaHs(Aux_Hora, TipoRedondeo)
                If Not objFechasHoras.ValidarHora(Aux_Hora) Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Hora no valida. " & Aux_Hora
                    End If
                    Exit Sub
                Else
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Redondeo/Fraccionamiento. ==> Hora " & Aux_Hora_R
                    End If
                End If
            Else
                Aux_Hora_R = Aux_Hora
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "No se redondea la registracion."
                End If
            End If
        
            If entrada Then
                F_Desde = Aux_Fecha
                H_Desde = Aux_Hora_R
            Else
                F_Hasta = Aux_Fecha
                H_Hasta = Aux_Hora_R
            End If
                    
            If entrada Then
                'Sumo a la hora la cantidad de hs del turno
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & " --- Sumo a la hora la cantidad de hs del turno"
                End If
                Call objFechasHoras.SumoHoras(F_Desde, H_Desde, Horas_Dia, F_Hasta, H_Hasta)
                If Not objFechasHoras.ValidarHora(H_Hasta) Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Hora no valida. " & H_Hasta
                    End If
                    Exit Sub
                End If
            Else
                'Resto a la hora la cantidad de hs del turno
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & " --- Resto a la hora la cantidad de hs del turno"
                End If
                Call objFechasHoras.RestaXHoras(F_Hasta, H_Hasta, Horas_Dia, F_Desde, H_Desde)
                If Not objFechasHoras.ValidarHora(H_Desde) Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Hora no valida. " & H_Desde
                    End If
                    Exit Sub
                End If
            End If
            E1 = H_Desde
            S1 = H_Hasta
            FE1 = F_Desde
            FS1 = F_Hasta
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "H. Teorico en fecha " & FE1 & " --- Desde: " & E1 & " hasta: " & S1
            End If
            
            If F_Desde <> F_Hasta Or Fecha < F_Desde Then
                Pasa_de_Dia = True
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "El H. Teorico pasa de dia"
                End If
            Else
                Pasa_de_Dia = False
            End If
        Else
            If Not Dia_Libre Then
                'Como no tengo resgistraciones no se el horario teorico, entonces busco el 1er horario teorico de dias anteriores
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "No hay registraciones para la fecha. Se setea Horario teorico de dia anterior."
                End If
                
                Encontro = False
                contador = 12
                Fecha_Auxiliar = DateAdd("d", -1, Fecha)
                Do While Not Encontro And contador > 0
                    StrSql = "SELECT horadesde1,horadesde2,horadesde3,horahasta1,horahasta2,horahasta3 FROM gti_proc_emp WHERE ternro =" & NroTer
                    StrSql = StrSql & " AND fecha = " & ConvFecha(Fecha_Auxiliar)
                    OpenRecordset StrSql, rs_gti_Proc_Emp
                    If Not rs_gti_Proc_Emp.EOF Then
                           
                        If Not EsNulo(rs_gti_Proc_Emp!horadesde1) Then
                            E1 = rs_gti_Proc_Emp!horadesde1
                            S1 = rs_gti_Proc_Emp!horahasta1
                            FE1 = Fecha
                            Encontro = True
                        End If
                        
                        If Not EsNulo(rs_gti_Proc_Emp!horadesde2) Then
                            E2 = rs_gti_Proc_Emp!horadesde2
                            S2 = rs_gti_Proc_Emp!horahasta2
                            FE2 = Fecha
                            Encontro = True
                        End If
                        
                        If Not EsNulo(rs_gti_Proc_Emp!horadesde3) Then
                            E3 = rs_gti_Proc_Emp!horadesde3
                            S3 = rs_gti_Proc_Emp!horahasta3
                            FE3 = Fecha
                            Encontro = True
                        End If
                    End If
                    contador = contador - 1
                    Fecha_Auxiliar = DateAdd("d", -1, Fecha_Auxiliar)
                Loop
                
                If Not Encontro Then
                    E1 = ""
                    S1 = ""
                    E2 = ""
                    S2 = ""
                    E3 = ""
                    S3 = ""
                    Pasa_de_Dia = False
                End If
            Else
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "No hay H. Teorico. Dia Libre."
                End If
            End If
        End If
    Case 2: 'Busca el subturno adecuado (Para Turnos Flexibles)
        Nro_Dia_Default = Nro_Dia 'Diego Rosso - 12/11/2007

        'Si el dia tocaba franco ==> FRANCO
        If Trabaja And Not Dia_Libre Then
            
            'Busco la primer registracion dentro de la ventana
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Busco la primer registracion dentro de la ventana"
            End If
            StrSql = "SELECT regfecha,reghora,regentsal FROM gti_registracion WHERE (regestado = 'I') "
            StrSql = StrSql & " AND (ternro = " & NroTer & ") "
            StrSql = StrSql & " AND ( regfecha >= " & ConvFecha(Fecha) & ") "
            'StrSql = StrSql & " AND (regfecha <=" & ConvFecha(DateAdd("d", 1, Fecha)) & ")"
            StrSql = StrSql & " AND (regfecha <=" & ConvFecha(Fecha) & ")"
            StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
            'FGZ - 19/05/2010 ------------ Control FT -------------
            StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
            'FGZ - 19/05/2010 ------------ Control FT -------------
            StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                Horario_Flexible_Rotativo = True
                
                Aux_Fecha = rs!regfecha
                Aux_Hora = rs!reghora
                
                If Not EsNulo(rs!regentsal) Then
                    If UCase(rs!regentsal) = "E" Then
                        entrada = True
                    Else
                        entrada = False
                    End If
                Else
                    entrada = True
                End If
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "Encontré " & IIf(entrada, " Entrada ", " Salida ") & " Fecha: " & Aux_Fecha & " Hora: " & Aux_Hora
                End If
                
                'Redondeo/Fraccionamiento
                If TipoRedondeo <> 0 Then
                    Aux_Hora_R = objFechasHoras.FraccionaHs(Aux_Hora, TipoRedondeo)
                    If Not objFechasHoras.ValidarHora(Aux_Hora) Then
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 2) & "Hora no valida. " & Aux_Hora
                        End If
                        Exit Sub
                    Else
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 2) & "Redondeo/Fraccionamiento. ==> Hora " & Aux_Hora_R
                        End If
                    End If
                Else
                    Aux_Hora_R = Aux_Hora
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "No se redondea la registracion."
                    End If
                End If
            
                If entrada Then
                    F_Desde = Aux_Fecha
                    H_Desde = Aux_Hora_R
                Else
                    F_Hasta = Aux_Fecha
                    H_Hasta = Aux_Hora_R
                End If
            
                'Contar la cantidad de subturnos del turno
                StrSql = "SELECT distinct gti_dias.subturnro, subturtamanio FROM gti_subturno "
                StrSql = StrSql & " INNER JOIN gti_dias ON gti_subturno.subturnro = gti_dias.subturnro"
                StrSql = StrSql & " WHERE turnro = " & Nro_Turno
                If rs.State = adStateOpen Then rs.Close
                OpenRecordset StrSql, rs
                If Not rs.EOF Then
                    Cantidad_Subturnos = rs.RecordCount
                    Tamaño_Subt = rs!subturtamanio
                Else
                    Cantidad_Subturnos = 1
                    Tamaño_Subt = 0
                End If
            
                'Busco cual seria el orden de dia que tocaria originalmente
                StrSql = "SELECT gti_dias.diaorden,gti_subturno.subturdesabr FROM gti_subturno "
                StrSql = StrSql & " INNER JOIN gti_dias ON gti_subturno.subturnro = gti_dias.subturnro"
                StrSql = StrSql & " WHERE turnro = " & Nro_Turno
                StrSql = StrSql & " AND gti_dias.diaorden <= " & Orden_Dia
                'StrSql = StrSql & " ORDER BY gti_dias.subturnro, diaorden DESC "
                StrSql = StrSql & " ORDER BY diaorden DESC "
                If rs.State = adStateOpen Then rs.Close
                OpenRecordset StrSql, rs
                If Not rs.EOF Then
                    Primer_Orden = rs!diaorden
                Else
                    Primer_Orden = 0
                End If
            
                'Buscar el dia Correspondiente para todos los subturnos del turno
                StrSql = "SELECT gti_dias.subturnro,gti_dias.dianro,gti_dias.diaorden ,gti_dias.Dialibre, gti_subturno.subturdesabr "
                StrSql = StrSql & " FROM gti_subturno "
                StrSql = StrSql & " INNER JOIN gti_dias ON gti_subturno.subturnro = gti_dias.subturnro"
                StrSql = StrSql & " WHERE turnro = " & Nro_Turno
                StrSql = StrSql & " AND ( gti_dias.diaorden = " & Primer_Orden
                For i = 2 To Cantidad_Subturnos
                    If Primer_Orden + (Tamaño_Subt * (i - 1)) > (Tamaño_Subt * Cantidad_Subturnos) Then
                        StrSql = StrSql & " OR gti_dias.diaorden = " & (Primer_Orden + (Tamaño_Subt * (i - 1))) - (Tamaño_Subt * Cantidad_Subturnos)
                    Else
                        StrSql = StrSql & " OR gti_dias.diaorden = " & (Primer_Orden + (Tamaño_Subt * (i - 1)))
                    End If
                Next i
                StrSql = StrSql & ") ORDER BY diaorden "
                If rs.State = adStateOpen Then rs.Close
                OpenRecordset StrSql, rs
                subt = 0
                Subturno_Anterior = 0
                Do While Not rs.EOF
                    If Subturno_Anterior <> rs!subturnro Then
                        subt = subt + 1
                        Subturno_Anterior = rs!subturnro
                        
                        SubTdia(subt).Trabaja = True
                        SubTdia(subt).Orden_Dia = rs!diaorden
                        SubTdia(subt).Nro_Dia = rs!diaNro
                        SubTdia(subt).Nro_Subturno = rs!subturnro
                        SubTdia(subt).NombreSubTurno = rs!subturdesabr
                        SubTdia(subt).Dia_Libre = rs!Dialibre
                    End If
                    rs.MoveNext
                Loop
                
                'Reviso que subturno cuadra mejor
                Indice_Menor = 0
                Diferencia = 1000
                For i = 1 To subt
                    
                    StrSql = "SELECT diahoradesde1,diahorahasta1 FROM gti_dias WHERE dianro = " & SubTdia(i).Nro_Dia
                    OpenRecordset StrSql, objRs
                    If Not objRs.EOF Then
                        If (objRs!diahoradesde1 <> "0000" Or objRs!diahorahasta1 <> "0000") Then
                            EntTeorica = objRs!diahoradesde1
                            SalTeorica = objRs!diahorahasta1
                            
                            fEntTeorica = p_fecha
                            If SalTeorica < EntTeorica Then
                                fSalTeorica = DateAdd("d", 1, p_fecha)
                            Else
                                fSalTeorica = p_fecha
                            End If
                        Else
                            EntTeorica = ""
                            SalTeorica = ""
                            'FGZ - 04/10/2011 ----------------------------
                            fEntTeorica = p_fecha
                            fSalTeorica = p_fecha
                            'FGZ - 04/10/2011 ----------------------------
                        End If
                    End If
                    
                    If entrada Then
                        'Calcula la diferencia entre la entrada teorica y la entrada real
                        If Not objFechasHoras.Menor_Hora(fEntTeorica, EntTeorica, F_Desde, H_Desde) Then
                            Call objFechasHoras.RestaHs(F_Desde, H_Desde, fEntTeorica, EntTeorica, Tdias, Thoras, Tmin)
                        Else
                            Call objFechasHoras.RestaHs(fEntTeorica, EntTeorica, F_Desde, H_Desde, Tdias, Thoras, Tmin)
                        End If
                    Else
                        'Calcula la diferencia entre la salida teorica y la salida real
                        If Not objFechasHoras.Menor_Hora(fSalTeorica, SalTeorica, F_Hasta, H_Hasta) Then
                            Call objFechasHoras.RestaHs(F_Hasta, H_Hasta, fSalTeorica, SalTeorica, Tdias, Thoras, Tmin)
                        Else
                            Call objFechasHoras.RestaHs(fSalTeorica, SalTeorica, F_Hasta, H_Hasta, Tdias, Thoras, Tmin)
                        End If
                    End If
                    
                    Resultado = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If Resultado < Diferencia Then
                        Indice_Menor = i
                        Diferencia = Resultado
                    End If
                Next i
                
                'El dia que le coresponde es el del subturno
                Nro_Dia = SubTdia(Indice_Menor).Nro_Dia
                
                'No deberia actualizar el subturno?????????????
                'FGZ - 23/11/2006
                Trabaja = SubTdia(Indice_Menor).Trabaja
                Orden_Dia = SubTdia(Indice_Menor).Orden_Dia
                Nro_Subturno = SubTdia(Indice_Menor).Nro_Subturno
                'NombreSTurno = SubTdia(Indice_Menor).NombreSubTurno
                Dia_Libre = SubTdia(Indice_Menor).Dia_Libre
                
                StrSql = "SELECT diahoradesde1,diahorahasta1,diahoradesde2,diahorahasta2,diahoradesde3,diahorahasta3 FROM gti_dias WHERE dianro = " & Nro_Dia
                OpenRecordset StrSql, objRs
                If Not objRs.EOF Then
                
                    If (objRs!diahoradesde1 <> "0000" Or objRs!diahorahasta1 <> "0000") Then
                        E1 = objRs!diahoradesde1
                        S1 = objRs!diahorahasta1
                        
                        FE1 = Fecha
                        If S1 < E1 Then Fecha = DateAdd("d", 1, Fecha)
                        FS1 = Fecha
                    Else
                        E1 = ""
                        S1 = ""
                    End If
                    If (objRs!diahoradesde2 <> "0000" Or objRs!diahorahasta2 <> "0000") Then
                        E2 = objRs!diahoradesde2
                        S2 = objRs!diahorahasta2
                        
                        If (E2 < S1) Then Fecha = DateAdd("d", 1, Fecha)
                        FE2 = Fecha
                        If S2 < E2 Then Fecha = DateAdd("d", 1, Fecha)
                        FS2 = Fecha
                    Else
                        E2 = ""
                        S2 = ""
                    End If
                    If (objRs!diahoradesde3 <> "0000" Or objRs!diahorahasta3 <> "0000") Then
                        E3 = objRs!diahoradesde3
                        S3 = objRs!diahorahasta3
                        
                        If E3 < S2 Then Fecha = DateAdd("d", 1, Fecha)
                        FE3 = Fecha
                        If S3 < S3 Then Fecha = DateAdd("d", 1, Fecha)
                        FS3 = Fecha
                    Else
                        E3 = ""
                        S3 = ""
                    End If
                End If
            Else
                'No hay registraciones
                Horario_Flexible_Rotativo = False
            End If
        Else
            Horario_Flexible_Rotativo = False
        End If
    Case 3: 'Busca el dia adecuado en el unico subturno (Para Turnos ROTATIVOS)
        Nro_Dia_Default = Nro_Dia 'Diego Rosso - 12/11/2007

        'Busco la primer registracion dentro de la ventana
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Busco la primer registracion dentro de la ventana"
        End If
        
        Nro_Dia_Original = Nro_Dia
        Horario_Flexible_Rotativo = False
        
        StrSql = "SELECT regfecha,reghora,regentsal FROM gti_registracion WHERE (regestado = 'I') "
        StrSql = StrSql & " AND (ternro = " & NroTer & ") "
        'esto lo cambié
        'StrSql = StrSql & " AND ( regfecha >= " & ConvFecha(Fecha) & ") "
        StrSql = StrSql & " AND ( regfecha >= " & ConvFecha(DateAdd("d", -1, Fecha)) & ") "
        'StrSql = StrSql & " AND (regfecha <=" & ConvFecha(DateAdd("d", 1, Fecha)) & ")"
        StrSql = StrSql & " AND (regfecha <=" & ConvFecha(Fecha) & ")"
        StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
        'FGZ - 19/05/2010 ------------ Control FT -------------
        StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
        'FGZ - 19/05/2010 ------------ Control FT -------------
        StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            Aux_Fecha = rs!regfecha
            Aux_Hora = rs!reghora
            
            If Not EsNulo(rs!regentsal) Then
                If UCase(rs!regentsal) = "E" Then
                    entrada = True
                Else
                    entrada = False
                End If
            Else
                entrada = True
            End If
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Encontré " & IIf(entrada, " Entrada ", " Salida ") & " Fecha: " & Aux_Fecha & " Hora: " & Aux_Hora
            End If
            
            'Redondeo/Fraccionamiento
            If TipoRedondeo <> 0 Then
                Aux_Hora_R = objFechasHoras.FraccionaHs(Aux_Hora, TipoRedondeo)
                If Not objFechasHoras.ValidarHora(Aux_Hora) Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Hora no valida. " & Aux_Hora
                    End If
                    Exit Sub
                Else
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Redondeo/Fraccionamiento. ==> Hora " & Aux_Hora_R
                    End If
                End If
            Else
                Aux_Hora_R = Aux_Hora
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "No se redondea la registracion."
                End If
            End If
        
            If entrada Then
                F_Desde = Aux_Fecha
                H_Desde = Aux_Hora_R
            Else
                F_Hasta = Aux_Fecha
                H_Hasta = Aux_Hora_R
            End If
        
            'Buscar el dia Correspondiente para todos los subturnos del turno
            StrSql = "SELECT gti_dias.subturnro,gti_dias.dianro,gti_dias.diaorden,gti_dias.Dialibre,gti_dias.diahoradesde1,gti_dias.diahorahasta1, gti_subturno.subturdesabr "
            StrSql = StrSql & " FROM gti_subturno "
            StrSql = StrSql & " INNER JOIN gti_dias ON gti_subturno.subturnro = gti_dias.subturnro"
            StrSql = StrSql & " WHERE turnro = " & Nro_Turno
            'StrSql = StrSql & " AND gti_dias.diaorden <= " & Orden_Dia
            StrSql = StrSql & " AND gti_dias.Dialibre = 0"
            'FGZ - 21/11/2006
            'StrSql = StrSql & " ORDER BY gti_dias.subturnro, gti_dias.diahoradesde1, gti_dias.diaorden DESC "
            StrSql = StrSql & " ORDER BY gti_dias.subturnro, gti_dias.diahoradesde1, gti_dias.diahorahasta1, gti_dias.diaorden DESC "
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            
            Indice_dia = 0
            HoraDesde_Anterior = ""
            HoraHasta_Anterior = ""
            
            Do While Not rs.EOF
                If HoraDesde_Anterior <> rs!diahoradesde1 Then
                    Indice_dia = Indice_dia + 1
                    HoraDesde_Anterior = rs!diahoradesde1
                    HoraHasta_Anterior = rs!diahorahasta1
                    
                    SubTdia(Indice_dia).Trabaja = True
                    SubTdia(Indice_dia).Orden_Dia = rs!diaorden
                    SubTdia(Indice_dia).Nro_Dia = rs!diaNro
                    SubTdia(Indice_dia).Nro_Subturno = rs!subturnro
                    SubTdia(Indice_dia).NombreSubTurno = rs!subturdesabr
                    SubTdia(Indice_dia).Dia_Libre = rs!Dialibre
                Else
                    If HoraHasta_Anterior = rs!diahorahasta1 Then
                        Indice_dia = Indice_dia + 1
                        HoraDesde_Anterior = rs!diahoradesde1
                        HoraHasta_Anterior = rs!diahorahasta1
                        
                        SubTdia(Indice_dia).Trabaja = True
                        SubTdia(Indice_dia).Orden_Dia = rs!diaorden
                        SubTdia(Indice_dia).Nro_Dia = rs!diaNro
                        SubTdia(Indice_dia).Nro_Subturno = rs!subturnro
                        SubTdia(Indice_dia).NombreSubTurno = rs!subturdesabr
                        SubTdia(Indice_dia).Dia_Libre = rs!Dialibre
                    End If
                End If
                rs.MoveNext
            Loop
            
            'Reviso que subturno cuadra mejor
            Indice_Menor = 0
            Diferencia = 1000
            'Min_Cantidad_de_Horas = 24
            
            For i = 1 To Indice_dia
                
                StrSql = "SELECT diahoradesde1,diahorahasta1 FROM gti_dias WHERE dianro = " & SubTdia(i).Nro_Dia
                OpenRecordset StrSql, objRs
                If Not objRs.EOF Then
                    If (objRs!diahoradesde1 <> "0000" Or objRs!diahorahasta1 <> "0000") Then
                        EntTeorica = objRs!diahoradesde1
                        SalTeorica = objRs!diahorahasta1
                        
                        fEntTeorica = p_fecha
                        If SalTeorica < EntTeorica Then
                            If F_Desde < fEntTeorica Then
                                fEntTeorica = DateAdd("d", -1, p_fecha)
                                fSalTeorica = p_fecha
                            Else
                                fSalTeorica = DateAdd("d", 1, p_fecha)
                            End If
                        Else
                            fSalTeorica = p_fecha
                        End If
                    Else
                        EntTeorica = ""
                        SalTeorica = ""
                        'FGZ - 04/10/2011 ----------------------------
                        fEntTeorica = p_fecha
                        fSalTeorica = p_fecha
                        'FGZ - 04/10/2011 ----------------------------
                    End If
                End If
                
                If entrada Then
                    'Calcula la diferencia entre la entrada teorica y la entrada real
                    If Not objFechasHoras.Menor_Hora(fEntTeorica, EntTeorica, F_Desde, H_Desde) Then
                        Call objFechasHoras.RestaHs(F_Desde, H_Desde, fEntTeorica, EntTeorica, Tdias, Thoras, Tmin)
                    Else
                        Call objFechasHoras.RestaHs(fEntTeorica, EntTeorica, F_Desde, H_Desde, Tdias, Thoras, Tmin)
                    End If
                Else
                    'Calcula la diferencia entre la salida teorica y la salida real
                    If Not objFechasHoras.Menor_Hora(fSalTeorica, SalTeorica, F_Hasta, H_Hasta) Then
                        Call objFechasHoras.RestaHs(F_Hasta, H_Hasta, fSalTeorica, SalTeorica, Tdias, Thoras, Tmin)
                    Else
                        Call objFechasHoras.RestaHs(fSalTeorica, SalTeorica, F_Hasta, H_Hasta, Tdias, Thoras, Tmin)
                    End If
                End If
                Resultado = (Tdias * 24) + (Thoras + (Tmin / 60))
'                'FGZ -21/11/2006 - calculo la cantidad de hs
'                If Not objFechasHoras.Menor_Hora(fEntTeorica, EntTeorica, fSalTeorica, SalTeorica) Then
'                    Call objFechasHoras.RestaHs(fSalTeorica, SalTeorica, fEntTeorica, EntTeorica, tdias, thoras, tmin)
'                Else
'                    Call objFechasHoras.RestaHs(fEntTeorica, EntTeorica, fSalTeorica, SalTeorica, tdias, thoras, tmin)
'                End If
'                Cantidad_de_Horas = (tdias * 24) + (thoras + (tmin / 60))
                If Abs(Resultado) < Diferencia Then
                    Indice_Menor = i
                    Diferencia = Resultado
                    'FGZ - 21/11/2006
                    'Min_Cantidad_de_Horas = Cantidad_de_Horas
'                Else
'                    If (Abs(Cantidad_de_Horas) < Min_Cantidad_de_Horas) And Es_Sabado Then
'                        Indice_Menor = I
'                        Diferencia = Resultado
'                        Min_Cantidad_de_Horas = Cantidad_de_Horas
'                    End If
                End If
            Next i
            
            'Busco la diferencia del dia original
            StrSql = "SELECT diahoradesde1,diahorahasta1,Dialibre FROM gti_dias WHERE dianro = " & Nro_Dia_Original
            OpenRecordset StrSql, objRs
            If Not objRs.EOF Then
                If (objRs!diahoradesde1 <> "0000" Or objRs!diahorahasta1 <> "0000") Then
                    EntTeorica = objRs!diahoradesde1
                    SalTeorica = objRs!diahorahasta1
                    
                    fEntTeorica = p_fecha
                    If SalTeorica < EntTeorica Then
                        If F_Desde < fEntTeorica Then
                            fEntTeorica = DateAdd("d", -1, p_fecha)
                            fSalTeorica = p_fecha
                        Else
                            fSalTeorica = DateAdd("d", 1, p_fecha)
                        End If
                    Else
                        fSalTeorica = p_fecha
                    End If
                Else
                    EntTeorica = ""
                    SalTeorica = ""
                    Dia_Libre_Original = objRs!Dialibre
                    'FGZ - 04/10/2011 ----------------------------
                    fEntTeorica = p_fecha
                    fSalTeorica = p_fecha
                    'FGZ - 04/10/2011 ----------------------------
                End If
            End If
            If Not Dia_Libre_Original Then
                If entrada Then
                    'Calcula la diferencia entre la entrada teorica y la entrada real
                    If Not objFechasHoras.Menor_Hora(fEntTeorica, EntTeorica, F_Desde, H_Desde) Then
                        Call objFechasHoras.RestaHs(F_Desde, H_Desde, fEntTeorica, EntTeorica, Tdias, Thoras, Tmin)
                    Else
                        Call objFechasHoras.RestaHs(fEntTeorica, EntTeorica, F_Desde, H_Desde, Tdias, Thoras, Tmin)
                    End If
                Else
                    'Calcula la diferencia entre la salida teorica y la salida real
                    If Not objFechasHoras.Menor_Hora(fSalTeorica, SalTeorica, F_Hasta, H_Hasta) Then
                        Call objFechasHoras.RestaHs(F_Hasta, H_Hasta, fSalTeorica, SalTeorica, Tdias, Thoras, Tmin)
                    Else
                        Call objFechasHoras.RestaHs(fSalTeorica, SalTeorica, F_Hasta, H_Hasta, Tdias, Thoras, Tmin)
                    End If
                End If
            Else
                Tdias = 1
            End If
            Resultado = (Tdias * 24) + (Thoras + (Tmin / 60))
'            'FGZ -21/11/2006 - calculo la cantidad de hs
'            If Not objFechasHoras.Menor_Hora(fEntTeorica, EntTeorica, fSalTeorica, SalTeorica) Then
'                Call objFechasHoras.RestaHs(fSalTeorica, SalTeorica, fEntTeorica, EntTeorica, tdias, thoras, tmin)
'            Else
'                Call objFechasHoras.RestaHs(fEntTeorica, EntTeorica, fSalTeorica, SalTeorica, tdias, thoras, tmin)
'            End If
'            Cantidad_de_Horas = (tdias * 24) + (thoras + (tmin / 60))
            If Abs(Resultado) <= Diferencia Then
                Nro_Dia = Nro_Dia_Original
                Horario_Flexible_Rotativo = False
            Else
                'El dia que le coresponde es
                Nro_Dia = SubTdia(Indice_Menor).Nro_Dia
                If Nro_Dia <> Nro_Dia_Original Then
                    Horario_Flexible_Rotativo = True
                End If
            End If
                
            StrSql = "SELECT diahoradesde1,diahoradesde2,diahoradesde3,diahorahasta1,diahorahasta2,diahorahasta3 FROM gti_dias WHERE dianro = " & Nro_Dia
            OpenRecordset StrSql, objRs
            If Not objRs.EOF Then
            
                If (objRs!diahoradesde1 <> "0000" Or objRs!diahorahasta1 <> "0000") Then
                    E1 = objRs!diahoradesde1
                    S1 = objRs!diahorahasta1
                    
                    FE1 = Fecha
                    If S1 < E1 Then
                        If F_Desde < FE1 Then
                            FE1 = DateAdd("d", -1, p_fecha)
                            FS1 = p_fecha
                            Horario_Flexible_Rotativo = True
                        Else
                            FS1 = DateAdd("d", 1, p_fecha)
                        End If
                    Else
                        FS1 = Fecha
                    End If
                Else
                    E1 = ""
                    S1 = ""
                End If
                If (objRs!diahoradesde2 <> "0000" Or objRs!diahorahasta2 <> "0000") Then
                    E2 = objRs!diahoradesde2
                    S2 = objRs!diahorahasta2
                    
                    If (E2 < S1) Then Fecha = DateAdd("d", 1, Fecha)
                    FE2 = Fecha
                    If S2 < E2 Then Fecha = DateAdd("d", 1, Fecha)
                    FS2 = Fecha
                Else
                    E2 = ""
                    S2 = ""
                End If
                If (objRs!diahoradesde3 <> "0000" Or objRs!diahorahasta3 <> "0000") Then
                    E3 = objRs!diahoradesde3
                    S3 = objRs!diahorahasta3
                    
                    If E3 < S2 Then Fecha = DateAdd("d", 1, Fecha)
                    FE3 = Fecha
                    If S3 < S3 Then Fecha = DateAdd("d", 1, Fecha)
                    FS3 = Fecha
                Else
                    E3 = ""
                    S3 = ""
                End If
            End If
        Else
            'No hay registraciones
            Horario_Flexible_Rotativo = False
        End If
    Case 4: 'Busca el subturno adecuado (Para Turnos Flexibles) - Subturnos de diferente tamaño
        Nro_Dia_Default = Nro_Dia 'Diego Rosso - 12/11/2007

        'Si el dia tocaba franco ==> FRANCO
        If Trabaja And Not Dia_Libre Then
            'Busco la primer registracion dentro de la ventana
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Busco la primer registracion dentro de la ventana"
            End If
            StrSql = "SELECT regfecha,reghora,regentsal FROM gti_registracion WHERE (regestado = 'I') "
            StrSql = StrSql & " AND (ternro = " & NroTer & ") "
            StrSql = StrSql & " AND ( regfecha >= " & ConvFecha(Fecha) & ") "
            'StrSql = StrSql & " AND (regfecha <=" & ConvFecha(DateAdd("d", 1, Fecha)) & ")"
            StrSql = StrSql & " AND (regfecha <=" & ConvFecha(Fecha) & ")"
            StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
            'FGZ - 19/05/2010 ------------ Control FT -------------
            StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
            'FGZ - 19/05/2010 ------------ Control FT -------------
            StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                Horario_Flexible_Rotativo = True
                
                Aux_Fecha = rs!regfecha
                Aux_Hora = rs!reghora
                
                If Not EsNulo(rs!regentsal) Then
                    If UCase(rs!regentsal) = "E" Then
                        entrada = True
                    Else
                        entrada = False
                    End If
                Else
                    entrada = True
                End If
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "Encontré " & IIf(entrada, " Entrada ", " Salida ") & " Fecha: " & Aux_Fecha & " Hora: " & Aux_Hora
                End If
                
                'Redondeo/Fraccionamiento
                If TipoRedondeo <> 0 Then
                    Aux_Hora_R = objFechasHoras.FraccionaHs(Aux_Hora, TipoRedondeo)
                    If Not objFechasHoras.ValidarHora(Aux_Hora) Then
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 2) & "Hora no valida. " & Aux_Hora
                        End If
                        Exit Sub
                    Else
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 2) & "Redondeo/Fraccionamiento. ==> Hora " & Aux_Hora_R
                        End If
                    End If
                Else
                    Aux_Hora_R = Aux_Hora
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "No se redondea la registracion."
                    End If
                End If
            
                If entrada Then
                    F_Desde = Aux_Fecha
                    H_Desde = Aux_Hora_R
                Else
                    F_Hasta = Aux_Fecha
                    H_Hasta = Aux_Hora_R
                End If
            
                'Busco los subturnos del turno
                StrSql = "SELECT distinct gti_dias.subturnro, subturtamanio FROM gti_subturno "
                StrSql = StrSql & " INNER JOIN gti_dias ON gti_subturno.subturnro = gti_dias.subturnro"
                StrSql = StrSql & " WHERE turnro = " & Nro_Turno
                OpenRecordset StrSql, rs
                If Not rs.EOF Then
                    Cantidad_Subturnos = rs.RecordCount

                    i = 0
                    Tam_Turno = 0
                    ReDim Preserve ST(Cantidad_Subturnos) As TST
                    Do While Not rs.EOF
                        i = i + 1
                        ST(i).Subturno = rs!subturnro
                        ST(i).Tam = rs!subturtamanio
                        Tam_Turno = Tam_Turno + ST(i).Tam
                        
                        rs.MoveNext
                    Loop
                Else
                    Cantidad_Subturnos = 1
                    Tamaño_Subt = 0
                End If
            
                'Busco cual seria el orden de dia que tocaria originalmente
                StrSql = "SELECT gti_dias.diaorden,gti_subturno.subturdesabr FROM gti_subturno "
                StrSql = StrSql & " INNER JOIN gti_dias ON gti_subturno.subturnro = gti_dias.subturnro"
                StrSql = StrSql & " WHERE turnro = " & Nro_Turno
                StrSql = StrSql & " AND gti_dias.diaorden <= " & Orden_Dia
                'StrSql = StrSql & " ORDER BY gti_dias.subturnro, diaorden DESC "
                StrSql = StrSql & " ORDER BY diaorden DESC "
                OpenRecordset StrSql, rs
                If Not rs.EOF Then
                    Primer_Orden = rs!diaorden
                    Orden_en_ST = Orden_Dia - Primer_Orden + 1
                Else
                    Primer_Orden = 0
                    Orden_en_ST = 0
                End If
            
                'Buscar el dia Correspondiente para todos los subturnos del turno
                StrSql = "SELECT gti_dias.subturnro,gti_dias.dianro,gti_dias.diaorden ,gti_dias.Dialibre, gti_subturno.subturdesabr "
                StrSql = StrSql & " FROM gti_subturno "
                StrSql = StrSql & " INNER JOIN gti_dias ON gti_subturno.subturnro = gti_dias.subturnro"
                StrSql = StrSql & " WHERE turnro = " & Nro_Turno
                StrSql = StrSql & " AND ( gti_dias.diaorden = " & Primer_Orden
                Tam_Acumulado = 0
                For i = 1 To Cantidad_Subturnos
                    If Orden_en_ST + Tam_Acumulado > (Tam_Turno) Then
                        StrSql = StrSql & " OR gti_dias.diaorden = " & (Orden_en_ST + Tam_Acumulado) - (Tam_Turno)
                    Else
                        StrSql = StrSql & " OR gti_dias.diaorden = " & (Orden_en_ST + (Tam_Acumulado))
                    End If
                    Tam_Acumulado = Tam_Acumulado + ST(i).Tam
                Next i
                StrSql = StrSql & ") ORDER BY diaorden "
                OpenRecordset StrSql, rs
                subt = 0
                Subturno_Anterior = 0
                Do While Not rs.EOF
                    If Subturno_Anterior <> rs!subturnro Then
                        subt = subt + 1
                        Subturno_Anterior = rs!subturnro
                        
                        SubTdia(subt).Trabaja = True
                        SubTdia(subt).Orden_Dia = rs!diaorden
                        SubTdia(subt).Nro_Dia = rs!diaNro
                        SubTdia(subt).Nro_Subturno = rs!subturnro
                        SubTdia(subt).NombreSubTurno = rs!subturdesabr
                        SubTdia(subt).Dia_Libre = rs!Dialibre
                    End If
                    rs.MoveNext
                Loop
                
                'Reviso que subturno cuadra mejor
                Indice_Menor = 0
                Diferencia = 1000
                For i = 1 To subt
                    
                    StrSql = "SELECT diahoradesde1,diahorahasta1 FROM gti_dias WHERE dianro = " & SubTdia(i).Nro_Dia
                    OpenRecordset StrSql, objRs
                    If Not objRs.EOF Then
                        If (objRs!diahoradesde1 <> "0000" Or objRs!diahorahasta1 <> "0000") Then
                            EntTeorica = objRs!diahoradesde1
                            SalTeorica = objRs!diahorahasta1
                            
                            fEntTeorica = p_fecha
                            If SalTeorica < EntTeorica Then
                                fSalTeorica = DateAdd("d", 1, p_fecha)
                            Else
                                fSalTeorica = p_fecha
                            End If
                        Else
                            EntTeorica = ""
                            SalTeorica = ""
                            'FGZ - 04/10/2011 ----------------------------
                            fEntTeorica = p_fecha
                            fSalTeorica = p_fecha
                            'FGZ - 04/10/2011 ----------------------------
                        End If
                    End If
                    
                    If entrada Then
                        'Calcula la diferencia entre la entrada teorica y la entrada real
                        If Not objFechasHoras.Menor_Hora(fEntTeorica, EntTeorica, F_Desde, H_Desde) Then
                            Call objFechasHoras.RestaHs(F_Desde, H_Desde, fEntTeorica, EntTeorica, Tdias, Thoras, Tmin)
                        Else
                            Call objFechasHoras.RestaHs(fEntTeorica, EntTeorica, F_Desde, H_Desde, Tdias, Thoras, Tmin)
                        End If
                    Else
                        'Calcula la diferencia entre la salida teorica y la salida real
                        If Not objFechasHoras.Menor_Hora(fSalTeorica, SalTeorica, F_Hasta, H_Hasta) Then
                            Call objFechasHoras.RestaHs(F_Hasta, H_Hasta, fSalTeorica, SalTeorica, Tdias, Thoras, Tmin)
                        Else
                            Call objFechasHoras.RestaHs(fSalTeorica, SalTeorica, F_Hasta, H_Hasta, Tdias, Thoras, Tmin)
                        End If
                    End If
                    
                    Resultado = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If Resultado < Diferencia Then
                        Indice_Menor = i
                        Diferencia = Resultado
                    End If
                Next i
                
                'El dia que le coresponde es el del subturno
                Nro_Dia = SubTdia(Indice_Menor).Nro_Dia
                
                'No deberia actualizar el subturno?????????????
                'FGZ - 23/11/2006
                Trabaja = SubTdia(Indice_Menor).Trabaja
                Orden_Dia = SubTdia(Indice_Menor).Orden_Dia
                Nro_Subturno = SubTdia(Indice_Menor).Nro_Subturno
                'NombreSTurno = SubTdia(Indice_Menor).NombreSubTurno
                Dia_Libre = SubTdia(Indice_Menor).Dia_Libre
                
                StrSql = "SELECT diahoradesde1,diahorahasta1,diahoradesde2,diahorahasta2,diahoradesde3,diahorahasta3 FROM gti_dias WHERE dianro = " & Nro_Dia
                OpenRecordset StrSql, objRs
                If Not objRs.EOF Then
                
                    If (objRs!diahoradesde1 <> "0000" Or objRs!diahorahasta1 <> "0000") Then
                        E1 = objRs!diahoradesde1
                        S1 = objRs!diahorahasta1
                        
                        FE1 = Fecha
                        If S1 < E1 Then Fecha = DateAdd("d", 1, Fecha)
                        FS1 = Fecha
                    Else
                        E1 = ""
                        S1 = ""
                    End If
                    If (objRs!diahoradesde2 <> "0000" Or objRs!diahorahasta2 <> "0000") Then
                        E2 = objRs!diahoradesde2
                        S2 = objRs!diahorahasta2
                        
                        If (E2 < S1) Then Fecha = DateAdd("d", 1, Fecha)
                        FE2 = Fecha
                        If S2 < E2 Then Fecha = DateAdd("d", 1, Fecha)
                        FS2 = Fecha
                    Else
                        E2 = ""
                        S2 = ""
                    End If
                    If (objRs!diahoradesde3 <> "0000" Or objRs!diahorahasta3 <> "0000") Then
                        E3 = objRs!diahoradesde3
                        S3 = objRs!diahorahasta3
                        
                        If E3 < S2 Then Fecha = DateAdd("d", 1, Fecha)
                        FE3 = Fecha
                        If S3 < S3 Then Fecha = DateAdd("d", 1, Fecha)
                        FS3 = Fecha
                    Else
                        E3 = ""
                        S3 = ""
                    End If
                End If
            Else
                'No hay registraciones
                Horario_Flexible_Rotativo = False
            End If
        Else
            Horario_Flexible_Rotativo = False
        End If
    Case 5: 'Busca el subturno adecuado (Para Turnos Flexibles) - Subturnos de diferente tamaño
        'SMT  - Relojes No distinguen E y S
        '1ero se verifica si hay registraciones que cubren su HT ademas de las otras registraciones
        'Porque puede darse el caso que ....
        '
        'HT    |------------------------13:00-------------------------21:00--------------------]
        'Reg   |-----5:40--------11:40--13:00-------------------------21:02--------------------]
        '
        'Este caso estaba dando como HT de 5 a 13 y en realidad deberia dar de 13 a 21
        
        Nro_Dia_Default = Nro_Dia 'Diego Rosso - 12/11/2007
        
        'Si el dia tocaba franco ==> FRANCO
        If Trabaja And Not Dia_Libre Then
            Reg_Mas_Cerca = -1
            'Busco la primer registracion dentro de la ventana que cubra su HT
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Busco la primer registracion dentro de la ventana que cubra su HT"
            End If
            StrSql = "SELECT regfecha,reghora,regentsal,regnro FROM gti_registracion WHERE (regestado = 'I') "
            StrSql = StrSql & " AND (ternro = " & NroTer & ") "
            StrSql = StrSql & " AND ( regfecha >= " & ConvFecha(Fecha) & ") "
            StrSql = StrSql & " AND (regfecha <=" & ConvFecha(Fecha) & ")"
            StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
            'FGZ - 19/05/2010 ------------ Control FT -------------
            StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
            'FGZ - 19/05/2010 ------------ Control FT -------------
            StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
            OpenRecordset StrSql, rs
            If rs.RecordCount > 2 Then
                
                Call Horario_Teorico
                
                Reg_Mas_Cerca = 0
                Reg_Diferencia = 2400
                Do While Not rs.EOF
                    'Calcula la diferencia entre la registracion y la
                    Call objFechasHoras.RestaHs(rs!regfecha, rs!reghora, FE1, E1, Tdias, Thoras, Tmin)
                        
                    Resultado = (Abs(Tdias) * 24) + (Abs(Thoras) + (Abs(Tmin) / 60))
                    If Resultado < Reg_Diferencia Then
                        Reg_Mas_Cerca = rs!Regnro
                        Reg_Diferencia = Resultado
                    End If
                
                    'Paso 2 registraciones
                    If Not rs.EOF Then
                        rs.MoveNext
                        If Not rs.EOF Then
                            rs.MoveNext
                        End If
                    End If
                Loop
                
            End If
            
            
            'Busco la primer registracion dentro de la ventana
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Busco la primer registracion dentro de la ventana"
            End If
            StrSql = "SELECT regfecha,reghora,regentsal FROM gti_registracion WHERE (regestado = 'I') "
            StrSql = StrSql & " AND (ternro = " & NroTer & ") "
            StrSql = StrSql & " AND ( regfecha >= " & ConvFecha(Fecha) & ") "
            'StrSql = StrSql & " AND (regfecha <=" & ConvFecha(DateAdd("d", 1, Fecha)) & ")"
            StrSql = StrSql & " AND (regfecha <=" & ConvFecha(Fecha) & ")"
            If Reg_Mas_Cerca <> -1 Then
                StrSql = StrSql & " AND regnro = " & Reg_Mas_Cerca
            End If
            StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
            'FGZ - 19/05/2010 ------------ Control FT -------------
            StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
            'FGZ - 19/05/2010 ------------ Control FT -------------
            StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
            OpenRecordset StrSql, rs
            
            If Not rs.EOF Then
                Horario_Flexible_Rotativo = True
                
                Aux_Fecha = rs!regfecha
                Aux_Hora = rs!reghora
                
                If Not EsNulo(rs!regentsal) Then
                    If UCase(rs!regentsal) = "E" Then
                        entrada = True
                    Else
                        entrada = False
                    End If
                Else
                    entrada = True
                End If
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "Encontré " & IIf(entrada, " Entrada ", " Salida ") & " Fecha: " & Aux_Fecha & " Hora: " & Aux_Hora
                End If
                
                'Redondeo/Fraccionamiento
                If TipoRedondeo <> 0 Then
                    Aux_Hora_R = objFechasHoras.FraccionaHs(Aux_Hora, TipoRedondeo)
                    If Not objFechasHoras.ValidarHora(Aux_Hora) Then
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 2) & "Hora no valida. " & Aux_Hora
                        End If
                        Exit Sub
                    Else
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 2) & "Redondeo/Fraccionamiento. ==> Hora " & Aux_Hora_R
                        End If
                    End If
                Else
                    Aux_Hora_R = Aux_Hora
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "No se redondea la registracion."
                    End If
                End If
            
                If entrada Then
                    F_Desde = Aux_Fecha
                    H_Desde = Aux_Hora_R
                Else
                    F_Hasta = Aux_Fecha
                    H_Hasta = Aux_Hora_R
                End If
            
                'Busco los subturnos del turno
                StrSql = "SELECT DISTINCT gti_dias.subturnro, subturtamanio FROM gti_subturno "
                StrSql = StrSql & " INNER JOIN gti_dias ON gti_subturno.subturnro = gti_dias.subturnro"
                StrSql = StrSql & " WHERE turnro = " & Nro_Turno
                OpenRecordset StrSql, rs
                If Not rs.EOF Then
                    Cantidad_Subturnos = rs.RecordCount

                    i = 0
                    Tam_Turno = 0
                    ReDim Preserve ST(Cantidad_Subturnos) As TST
                    Do While Not rs.EOF
                        i = i + 1
                        ST(i).Subturno = rs!subturnro
                        ST(i).Tam = rs!subturtamanio
                        Tam_Turno = Tam_Turno + ST(i).Tam
                        
                        rs.MoveNext
                    Loop
                Else
                    Cantidad_Subturnos = 1
                    Tamaño_Subt = 0
                End If
            
                'Busco cual seria el orden de dia que tocaria originalmente
                StrSql = "SELECT gti_dias.diaorden,gti_subturno.subturdesabr FROM gti_subturno "
                StrSql = StrSql & " INNER JOIN gti_dias ON gti_subturno.subturnro = gti_dias.subturnro"
                StrSql = StrSql & " WHERE turnro = " & Nro_Turno
                StrSql = StrSql & " AND gti_dias.diaorden <= " & Orden_Dia
                'StrSql = StrSql & " ORDER BY gti_dias.subturnro, diaorden DESC "
                StrSql = StrSql & " ORDER BY diaorden DESC "
                OpenRecordset StrSql, rs
                If Not rs.EOF Then
                    Primer_Orden = rs!diaorden
                    Orden_en_ST = Orden_Dia - Primer_Orden + 1
                Else
                    Primer_Orden = 0
                    Orden_en_ST = 0
                End If
            
                'Buscar el dia Correspondiente para todos los subturnos del turno
                StrSql = "SELECT gti_dias.subturnro,gti_dias.dianro,gti_dias.diaorden ,gti_dias.Dialibre, gti_subturno.subturdesabr "
                StrSql = StrSql & " FROM gti_subturno "
                StrSql = StrSql & " INNER JOIN gti_dias ON gti_subturno.subturnro = gti_dias.subturnro"
                StrSql = StrSql & " WHERE turnro = " & Nro_Turno
                StrSql = StrSql & " AND ( gti_dias.diaorden = " & Primer_Orden
                Tam_Acumulado = 0
                For i = 1 To Cantidad_Subturnos
                    If Orden_en_ST + Tam_Acumulado > (Tam_Turno) Then
                        StrSql = StrSql & " OR gti_dias.diaorden = " & (Orden_en_ST + Tam_Acumulado) - (Tam_Turno)
                    Else
                        StrSql = StrSql & " OR gti_dias.diaorden = " & (Orden_en_ST + (Tam_Acumulado))
                    End If
                    Tam_Acumulado = Tam_Acumulado + ST(i).Tam
                Next i
                StrSql = StrSql & ") ORDER BY diaorden "
                OpenRecordset StrSql, rs
                subt = 0
                Subturno_Anterior = 0
                Do While Not rs.EOF
                    If Subturno_Anterior <> rs!subturnro Then
                        subt = subt + 1
                        Subturno_Anterior = rs!subturnro
                        
                        SubTdia(subt).Trabaja = True
                        SubTdia(subt).Orden_Dia = rs!diaorden
                        SubTdia(subt).Nro_Dia = rs!diaNro
                        SubTdia(subt).Nro_Subturno = rs!subturnro
                        SubTdia(subt).NombreSubTurno = rs!subturdesabr
                        SubTdia(subt).Dia_Libre = rs!Dialibre
                    End If
                    rs.MoveNext
                Loop
                
                'Reviso que subturno cuadra mejor
                Indice_Menor = 0
                Diferencia = 1000
                For i = 1 To subt
                    
                    StrSql = "SELECT diahoradesde1,diahorahasta1 FROM gti_dias WHERE dianro = " & SubTdia(i).Nro_Dia
                    OpenRecordset StrSql, objRs
                    If Not objRs.EOF Then
                        If (objRs!diahoradesde1 <> "0000" Or objRs!diahorahasta1 <> "0000") Then
                            EntTeorica = objRs!diahoradesde1
                            SalTeorica = objRs!diahorahasta1
                            
                            fEntTeorica = p_fecha
                            If SalTeorica < EntTeorica Then
                                fSalTeorica = DateAdd("d", 1, p_fecha)
                            Else
                                fSalTeorica = p_fecha
                            End If
                        Else
                            EntTeorica = ""
                            SalTeorica = ""
                            'FGZ - 04/10/2011 ----------------------------
                            fEntTeorica = p_fecha
                            fSalTeorica = p_fecha
                            'FGZ - 04/10/2011 ----------------------------
                        End If
                    End If
                    
                    If entrada Then
                        'Calcula la diferencia entre la entrada teorica y la entrada real
                        If Not objFechasHoras.Menor_Hora(fEntTeorica, EntTeorica, F_Desde, H_Desde) Then
                            Call objFechasHoras.RestaHs(F_Desde, H_Desde, fEntTeorica, EntTeorica, Tdias, Thoras, Tmin)
                        Else
                            Call objFechasHoras.RestaHs(fEntTeorica, EntTeorica, F_Desde, H_Desde, Tdias, Thoras, Tmin)
                        End If
                    Else
                        'Calcula la diferencia entre la salida teorica y la salida real
                        If Not objFechasHoras.Menor_Hora(fSalTeorica, SalTeorica, F_Hasta, H_Hasta) Then
                            Call objFechasHoras.RestaHs(F_Hasta, H_Hasta, fSalTeorica, SalTeorica, Tdias, Thoras, Tmin)
                        Else
                            Call objFechasHoras.RestaHs(fSalTeorica, SalTeorica, F_Hasta, H_Hasta, Tdias, Thoras, Tmin)
                        End If
                    End If
                    
                    Resultado = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If Resultado < Diferencia Then
                        Indice_Menor = i
                        Diferencia = Resultado
                    End If
                Next i
                
                'El dia que le coresponde es el del subturno
                Nro_Dia = SubTdia(Indice_Menor).Nro_Dia
                
                'No deberia actualizar el subturno?????????????
                'FGZ - 23/11/2006
                Trabaja = SubTdia(Indice_Menor).Trabaja
                Orden_Dia = SubTdia(Indice_Menor).Orden_Dia
                Nro_Subturno = SubTdia(Indice_Menor).Nro_Subturno
                'NombreSTurno = SubTdia(Indice_Menor).NombreSubTurno
                Dia_Libre = SubTdia(Indice_Menor).Dia_Libre
                
                StrSql = "SELECT diahoradesde1,diahorahasta1,diahoradesde2,diahorahasta2,diahoradesde3,diahorahasta3 FROM gti_dias WHERE dianro = " & Nro_Dia
                OpenRecordset StrSql, objRs
                If Not objRs.EOF Then
                
                    If (objRs!diahoradesde1 <> "0000" Or objRs!diahorahasta1 <> "0000") Then
                        E1 = objRs!diahoradesde1
                        S1 = objRs!diahorahasta1
                        
                        FE1 = Fecha
                        If S1 < E1 Then Fecha = DateAdd("d", 1, Fecha)
                        FS1 = Fecha
                    Else
                        E1 = ""
                        S1 = ""
                    End If
                    If (objRs!diahoradesde2 <> "0000" Or objRs!diahorahasta2 <> "0000") Then
                        E2 = objRs!diahoradesde2
                        S2 = objRs!diahorahasta2
                        
                        If (E2 < S1) Then Fecha = DateAdd("d", 1, Fecha)
                        FE2 = Fecha
                        If S2 < E2 Then Fecha = DateAdd("d", 1, Fecha)
                        FS2 = Fecha
                    Else
                        E2 = ""
                        S2 = ""
                    End If
                    If (objRs!diahoradesde3 <> "0000" Or objRs!diahorahasta3 <> "0000") Then
                        E3 = objRs!diahoradesde3
                        S3 = objRs!diahorahasta3
                        
                        If E3 < S2 Then Fecha = DateAdd("d", 1, Fecha)
                        FE3 = Fecha
                        If S3 < S3 Then Fecha = DateAdd("d", 1, Fecha)
                        FS3 = Fecha
                    Else
                        E3 = ""
                        S3 = ""
                    End If
                End If
            Else
                'No hay registraciones
                Horario_Flexible_Rotativo = False
            End If
        Else
            Horario_Flexible_Rotativo = False
        End If
    Case 6: 'Busca el subturno adecuado (Para Turnos Flexibles) - Subturnos de diferente tamaño
        'SMT  - Relojes No distinguen E y S
        '1ero se verifica si hay registraciones que cubren su HT ademas de las otras registraciones
        'Porque puede darse el caso que ....
        '
        'HT    |------------------------13:00-------------------------21:00--------------------]
        'Reg   |-----5:40--------11:40--13:00-------------------------21:02--------------------]
        '
        'Este caso estaba dando como HT de 5 a 13 y en realidad deberia dar de 13 a 21
        
        'ademas del caso
        'HT    |------------------------13:00-------------------------21:00--------------------]
        'Reg   |-----5:40---------------------------------------------21:02--------------------]
        '
        'Este caso estaba dando como HT de 5 a 13 y en realidad deberia dar de 13 a 21
        
        Nro_Dia_Default = Nro_Dia 'Diego Rosso - 12/11/2007
        
        'Si el dia tocaba franco ==> FRANCO
        If Trabaja And Not Dia_Libre Then
            Reg_Mas_Cerca = -1
            'Busco la primer registracion dentro de la ventana que cubra su HT
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Busco la primer registracion dentro de la ventana que cubra su HT"
            End If
            StrSql = "SELECT regfecha,reghora,regentsal,regnro FROM gti_registracion WHERE (regestado = 'I') "
            StrSql = StrSql & " AND (ternro = " & NroTer & ") "
            StrSql = StrSql & " AND ( regfecha >= " & ConvFecha(Fecha) & ") "
            StrSql = StrSql & " AND (regfecha <=" & ConvFecha(Fecha) & ")"
            StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
            'FGZ - 19/05/2010 ------------ Control FT -------------
            StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
            'FGZ - 19/05/2010 ------------ Control FT -------------
            StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
            OpenRecordset StrSql, rs
            If rs.RecordCount > 2 Then
                
                Call Horario_Teorico
                
                Reg_Mas_Cerca = 0
                Reg_Diferencia = 2400
                Do While Not rs.EOF
                    'Calcula la diferencia entre la registracion y la
                    Call objFechasHoras.RestaHs(rs!regfecha, rs!reghora, FE1, E1, Tdias, Thoras, Tmin)
                        
                    Resultado = (Abs(Tdias) * 24) + (Abs(Thoras) + (Abs(Tmin) / 60))
                    If Resultado < Reg_Diferencia Then
                        Reg_Mas_Cerca = rs!Regnro
                        Reg_Diferencia = Resultado
                        Reg_Entrada = True
                    End If
                
                    'Paso 2 registraciones
                    If Not rs.EOF Then
                        rs.MoveNext
                        If Not rs.EOF Then
                            rs.MoveNext
                        End If
                    End If
                Loop
            Else
                'debo revisar si el par de registraciones contiene al horario teorico
                'es decir algo de la forma
                'HT    |------------------------13:00-------------------------21:00--------------------]
                'Reg   |-----5:40---------------------------------------------21:02--------------------]
                '
                'Este caso estaba dando como HT de 5 a 13 y en realidad deberia dar de 13 a 21
                Call Horario_Teorico
                
                Reg_Mas_Cerca = 0
                Reg_Diferencia = 2400
                
                'Reviso segun Entradas
                Do While Not rs.EOF
                    'Calcula la diferencia entre la registracion y la
                    Call objFechasHoras.RestaHs(rs!regfecha, rs!reghora, FE1, E1, Tdias, Thoras, Tmin)
                        
                    Resultado = (Abs(Tdias) * 24) + (Abs(Thoras) + (Abs(Tmin) / 60))
                    If Resultado < Reg_Diferencia Then
                        Reg_Mas_Cerca = rs!Regnro
                        Reg_Diferencia = Resultado
                        Reg_Entrada = True
                    End If
                
                    'Paso 2 registraciones
                    If Not rs.EOF Then
                        rs.MoveNext
                        If Not rs.EOF Then
                            rs.MoveNext
                        End If
                    End If
                Loop
            
                'Reviso segun Salidas
                If Not rs.EOF Then
                    rs.MoveFirst
                End If
                Do While Not rs.EOF
                    If Not rs.EOF Then
                        rs.MoveNext
                    End If
                
                    'Calcula la diferencia entre la registracion real y la teorica
                    Call objFechasHoras.RestaHs(rs!regfecha, rs!reghora, FS1, S1, Tdias, Thoras, Tmin)
                        
                    Resultado = (Abs(Tdias) * 24) + (Abs(Thoras) + (Abs(Tmin) / 60))
                    If Resultado < Reg_Diferencia Or Resultado > 24 Then
                        Reg_Mas_Cerca = rs!Regnro
                        Reg_Diferencia = Resultado
                        Reg_Entrada = False
                    End If
                
                    'Paso 2 registraciones
                    If Not rs.EOF Then
                        rs.MoveNext
                        If Not rs.EOF Then
                            rs.MoveNext
                        End If
                    End If
                Loop
            End If
            
            
            'Busco la primer registracion dentro de la ventana
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Busco la primer registracion dentro de la ventana"
            End If
            StrSql = "SELECT regfecha,reghora,regentsal FROM gti_registracion WHERE (regestado = 'I') "
            StrSql = StrSql & " AND (ternro = " & NroTer & ") "
            StrSql = StrSql & " AND ( regfecha >= " & ConvFecha(Fecha) & ") "
            'StrSql = StrSql & " AND (regfecha <=" & ConvFecha(DateAdd("d", 1, Fecha)) & ")"
            StrSql = StrSql & " AND (regfecha <=" & ConvFecha(Fecha) & ")"
            If Reg_Mas_Cerca <> -1 Then
                StrSql = StrSql & " AND regnro = " & Reg_Mas_Cerca
            End If
            StrSql = StrSql & " AND ( regllamada = 0 OR regllamada is null )"
            'FGZ - 19/05/2010 ------------ Control FT -------------
            StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
            'FGZ - 19/05/2010 ------------ Control FT -------------
            StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
            OpenRecordset StrSql, rs
            
            If Not rs.EOF Then
                Horario_Flexible_Rotativo = True
                
                Aux_Fecha = rs!regfecha
                Aux_Hora = rs!reghora
                
                If Not EsNulo(rs!regentsal) Then
                    If UCase(rs!regentsal) = "E" Then
                        entrada = True
                    Else
                        entrada = False
                    End If
                Else
                    If Reg_Entrada Then
                        entrada = True
                    Else
                        entrada = False
                    End If
                End If
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "Encontré " & IIf(entrada, " Entrada ", " Salida ") & " Fecha: " & Aux_Fecha & " Hora: " & Aux_Hora
                End If
                
                'Redondeo/Fraccionamiento
                If TipoRedondeo <> 0 Then
                    Aux_Hora_R = objFechasHoras.FraccionaHs(Aux_Hora, TipoRedondeo)
                    If Not objFechasHoras.ValidarHora(Aux_Hora) Then
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 2) & "Hora no valida. " & Aux_Hora
                        End If
                        Exit Sub
                    Else
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 2) & "Redondeo/Fraccionamiento. ==> Hora " & Aux_Hora_R
                        End If
                    End If
                Else
                    Aux_Hora_R = Aux_Hora
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "No se redondea la registracion."
                    End If
                End If
            
                If entrada Then
                    F_Desde = Aux_Fecha
                    H_Desde = Aux_Hora_R
                Else
                    F_Hasta = Aux_Fecha
                    H_Hasta = Aux_Hora_R
                End If
            
                'Busco los subturnos del turno
                StrSql = "SELECT DISTINCT gti_dias.subturnro, subturtamanio FROM gti_subturno "
                StrSql = StrSql & " INNER JOIN gti_dias ON gti_subturno.subturnro = gti_dias.subturnro"
                StrSql = StrSql & " WHERE turnro = " & Nro_Turno
                OpenRecordset StrSql, rs
                If Not rs.EOF Then
                    Cantidad_Subturnos = rs.RecordCount

                    i = 0
                    Tam_Turno = 0
                    ReDim Preserve ST(Cantidad_Subturnos) As TST
                    Do While Not rs.EOF
                        i = i + 1
                        ST(i).Subturno = rs!subturnro
                        ST(i).Tam = rs!subturtamanio
                        Tam_Turno = Tam_Turno + ST(i).Tam
                        
                        rs.MoveNext
                    Loop
                Else
                    Cantidad_Subturnos = 1
                    Tamaño_Subt = 0
                End If
            
                'Busco cual seria el orden de dia que tocaria originalmente
                StrSql = "SELECT gti_dias.diaorden,gti_subturno.subturdesabr FROM gti_subturno "
                StrSql = StrSql & " INNER JOIN gti_dias ON gti_subturno.subturnro = gti_dias.subturnro"
                StrSql = StrSql & " WHERE turnro = " & Nro_Turno
                StrSql = StrSql & " AND gti_dias.diaorden <= " & Orden_Dia
                'StrSql = StrSql & " ORDER BY gti_dias.subturnro, diaorden DESC "
                StrSql = StrSql & " ORDER BY diaorden DESC "
                OpenRecordset StrSql, rs
                If Not rs.EOF Then
                    Primer_Orden = rs!diaorden
                    Orden_en_ST = Orden_Dia - Primer_Orden + 1
                Else
                    Primer_Orden = 0
                    Orden_en_ST = 0
                End If
            
                'Buscar el dia Correspondiente para todos los subturnos del turno
                StrSql = "SELECT gti_dias.subturnro,gti_dias.dianro,gti_dias.diaorden ,gti_dias.Dialibre, gti_subturno.subturdesabr "
                StrSql = StrSql & " FROM gti_subturno "
                StrSql = StrSql & " INNER JOIN gti_dias ON gti_subturno.subturnro = gti_dias.subturnro"
                StrSql = StrSql & " WHERE turnro = " & Nro_Turno
                StrSql = StrSql & " AND ( gti_dias.diaorden = " & Primer_Orden
                Tam_Acumulado = 0
                For i = 1 To Cantidad_Subturnos
                    If Orden_en_ST + Tam_Acumulado > (Tam_Turno) Then
                        StrSql = StrSql & " OR gti_dias.diaorden = " & (Orden_en_ST + Tam_Acumulado) - (Tam_Turno)
                    Else
                        StrSql = StrSql & " OR gti_dias.diaorden = " & (Orden_en_ST + (Tam_Acumulado))
                    End If
                    Tam_Acumulado = Tam_Acumulado + ST(i).Tam
                Next i
                StrSql = StrSql & ") ORDER BY diaorden "
                OpenRecordset StrSql, rs
                subt = 0
                Subturno_Anterior = 0
                Do While Not rs.EOF
                    If Subturno_Anterior <> rs!subturnro Then
                        subt = subt + 1
                        Subturno_Anterior = rs!subturnro
                        
                        SubTdia(subt).Trabaja = True
                        SubTdia(subt).Orden_Dia = rs!diaorden
                        SubTdia(subt).Nro_Dia = rs!diaNro
                        SubTdia(subt).Nro_Subturno = rs!subturnro
                        SubTdia(subt).NombreSubTurno = rs!subturdesabr
                        SubTdia(subt).Dia_Libre = rs!Dialibre
                    End If
                    rs.MoveNext
                Loop
                
                'Reviso que subturno cuadra mejor
                Indice_Menor = 0
                Diferencia = 1000
                For i = 1 To subt
                    
                    StrSql = "SELECT diahoradesde1,diahorahasta1 FROM gti_dias WHERE dianro = " & SubTdia(i).Nro_Dia
                    OpenRecordset StrSql, objRs
                    If Not objRs.EOF Then
                        If (objRs!diahoradesde1 <> "0000" Or objRs!diahorahasta1 <> "0000") Then
                            EntTeorica = objRs!diahoradesde1
                            SalTeorica = objRs!diahorahasta1
                            
                            fEntTeorica = p_fecha
                            If SalTeorica < EntTeorica Then
                                fSalTeorica = DateAdd("d", 1, p_fecha)
                            Else
                                fSalTeorica = p_fecha
                            End If
                        Else
                            EntTeorica = ""
                            SalTeorica = ""
                            'FGZ - 04/10/2011 ----------------------------
                            fEntTeorica = p_fecha
                            fSalTeorica = p_fecha
                            'FGZ - 04/10/2011 ----------------------------
                        End If
                    End If
                    
                    If entrada Then
                        'Calcula la diferencia entre la entrada teorica y la entrada real
                        If Not objFechasHoras.Menor_Hora(fEntTeorica, EntTeorica, F_Desde, H_Desde) Then
                            Call objFechasHoras.RestaHs(F_Desde, H_Desde, fEntTeorica, EntTeorica, Tdias, Thoras, Tmin)
                        Else
                            Call objFechasHoras.RestaHs(fEntTeorica, EntTeorica, F_Desde, H_Desde, Tdias, Thoras, Tmin)
                        End If
                    Else
                        'Calcula la diferencia entre la salida teorica y la salida real
                        If Not objFechasHoras.Menor_Hora(fSalTeorica, SalTeorica, F_Hasta, H_Hasta) Then
                            Call objFechasHoras.RestaHs(F_Hasta, H_Hasta, fSalTeorica, SalTeorica, Tdias, Thoras, Tmin)
                        Else
                            Call objFechasHoras.RestaHs(fSalTeorica, SalTeorica, F_Hasta, H_Hasta, Tdias, Thoras, Tmin)
                        End If
                    End If
                    
                    Resultado = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If Resultado < Diferencia Then
                        Indice_Menor = i
                        Diferencia = Resultado
                    End If
                Next i
                
                'El dia que le coresponde es el del subturno
                Nro_Dia = SubTdia(Indice_Menor).Nro_Dia
                
                'No deberia actualizar el subturno?????????????
                'FGZ - 23/11/2006
                Trabaja = SubTdia(Indice_Menor).Trabaja
                Orden_Dia = SubTdia(Indice_Menor).Orden_Dia
                Nro_Subturno = SubTdia(Indice_Menor).Nro_Subturno
                'NombreSTurno = SubTdia(Indice_Menor).NombreSubTurno
                Dia_Libre = SubTdia(Indice_Menor).Dia_Libre
                
                StrSql = "SELECT diahoradesde1,diahorahasta1,diahoradesde2,diahorahasta2,diahoradesde3,diahorahasta3 FROM gti_dias WHERE dianro = " & Nro_Dia
                OpenRecordset StrSql, objRs
                If Not objRs.EOF Then
                
                    If (objRs!diahoradesde1 <> "0000" Or objRs!diahorahasta1 <> "0000") Then
                        E1 = objRs!diahoradesde1
                        S1 = objRs!diahorahasta1
                        
                        FE1 = Fecha
                        If S1 < E1 Then Fecha = DateAdd("d", 1, Fecha)
                        FS1 = Fecha
                    Else
                        E1 = ""
                        S1 = ""
                    End If
                    If (objRs!diahoradesde2 <> "0000" Or objRs!diahorahasta2 <> "0000") Then
                        E2 = objRs!diahoradesde2
                        S2 = objRs!diahorahasta2
                        
                        If (E2 < S1) Then Fecha = DateAdd("d", 1, Fecha)
                        FE2 = Fecha
                        If S2 < E2 Then Fecha = DateAdd("d", 1, Fecha)
                        FS2 = Fecha
                    Else
                        E2 = ""
                        S2 = ""
                    End If
                    If (objRs!diahoradesde3 <> "0000" Or objRs!diahorahasta3 <> "0000") Then
                        E3 = objRs!diahoradesde3
                        S3 = objRs!diahorahasta3
                        
                        If E3 < S2 Then Fecha = DateAdd("d", 1, Fecha)
                        FE3 = Fecha
                        If S3 < S3 Then Fecha = DateAdd("d", 1, Fecha)
                        FS3 = Fecha
                    Else
                        E3 = ""
                        S3 = ""
                    End If
                End If
            Else
                'No hay registraciones
                Horario_Flexible_Rotativo = False
            End If
        Else
            Horario_Flexible_Rotativo = False
        End If
    Case 7:
        Nro_Dia_Default = Nro_Dia
        Horario_Movil = True
        
        'Busco la cantidad de horas para ese dia en ese turno
        StrSql = "SELECT diacanthoras FROM gti_dias "
        StrSql = StrSql & " WHERE subturnro = " & Nro_Subturno
        StrSql = StrSql & " AND dianro = " & Nro_Dia
        StrSql = StrSql & " ORDER BY diaorden"
        OpenRecordset StrSql, rs_Dia
        If Not rs_Dia.EOF Then
            Horas_Dia = rs_Dia!diacanthoras
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Cantidad de Horas para el turno " & Horas_Dia
            End If
            'Dia_Libre = rs_dia!Dialibre
        End If
    
        'Busco la primer registracion dentro de la ventana
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Busco la primer registracion dentro de la ventana"
        End If
        StrSql = "SELECT regfecha,reghora,regentsal FROM gti_registracion WHERE (regestado = 'I') "
        StrSql = StrSql & " AND (ternro = " & NroTer & ") "
        StrSql = StrSql & " AND ( regfecha >= " & ConvFecha(Fecha) & ") "
        StrSql = StrSql & " AND (regfecha <=" & ConvFecha(DateAdd("d", 1, Fecha)) & ")"
        'FGZ - 19/05/2010 ------------ Control FT -------------
        StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
        'FGZ - 19/05/2010 ------------ Control FT -------------
        StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        
        If Not rs.EOF Then
            Aux_Fecha = rs!regfecha
            Aux_Hora = rs!reghora
            
            If Not EsNulo(rs!regentsal) Then
                If UCase(rs!regentsal) = "E" Then
                    entrada = True
                Else
                    entrada = False
                End If
            Else
                entrada = True
            End If
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Encontré " & IIf(entrada, " Entrada ", " Salida ") & " Fecha: " & Aux_Fecha & " Hora: " & Aux_Hora
            End If
            
            'Redondeo/Fraccionamiento
            If TipoRedondeo <> 0 Then
                Aux_Hora_R = objFechasHoras.FraccionaHs(Aux_Hora, TipoRedondeo)
                If Not objFechasHoras.ValidarHora(Aux_Hora) Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Hora no valida. " & Aux_Hora
                    End If
                    Exit Sub
                Else
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Redondeo/Fraccionamiento. ==> Hora " & Aux_Hora_R
                    End If
                End If
            Else
                Aux_Hora_R = Aux_Hora
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "No se redondea la registracion."
                End If
            End If
        
            If entrada Then
                F_Desde = Aux_Fecha
                H_Desde = Aux_Hora_R
            Else
                F_Hasta = Aux_Fecha
                H_Hasta = Aux_Hora_R
            End If
                    
            If entrada Then
                'Sumo a la hora la cantidad de hs del turno
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & " --- Sumo a la hora la cantidad de hs del turno"
                End If
                Call objFechasHoras.SumoHoras(F_Desde, H_Desde, Horas_Dia, F_Hasta, H_Hasta)
                If Not objFechasHoras.ValidarHora(H_Hasta) Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Hora no valida. " & H_Hasta
                    End If
                    Exit Sub
                End If
            Else
                'Resto a la hora la cantidad de hs del turno
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & " --- Resto a la hora la cantidad de hs del turno"
                End If
                Call objFechasHoras.RestaXHoras(F_Hasta, H_Hasta, Horas_Dia, F_Desde, H_Desde)
                If Not objFechasHoras.ValidarHora(H_Desde) Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Hora no valida. " & H_Desde
                    End If
                    Exit Sub
                End If
            End If
            E1 = H_Desde
            S1 = H_Hasta
            FE1 = F_Desde
            FS1 = F_Hasta
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "H. Teorico en fecha " & FE1 & " --- Desde: " & E1 & " hasta: " & S1
            End If
            
            If F_Desde <> F_Hasta Or Fecha < F_Desde Then
                Pasa_de_Dia = True
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "El H. Teorico pasa de dia"
                End If
            Else
                Pasa_de_Dia = False
            End If
        Else
            If Not Dia_Libre Then
                'Como no tengo resgistraciones no se el horario teorico, entonces busco el 1er horario teorico de dias anteriores
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "No hay registraciones para la fecha. Se setea Horario teorico de dia anterior."
                End If
                
                Encontro = False
                contador = 12
                Fecha_Auxiliar = DateAdd("d", -1, Fecha)
                Do While Not Encontro And contador > 0
                    StrSql = "SELECT horadesde1,horadesde2,horadesde3,horahasta1,horahasta2,horahasta3 FROM gti_proc_emp WHERE ternro =" & NroTer
                    StrSql = StrSql & " AND fecha = " & ConvFecha(Fecha_Auxiliar)
                    OpenRecordset StrSql, rs_gti_Proc_Emp
                    If Not rs_gti_Proc_Emp.EOF Then
                           
                        If Not EsNulo(rs_gti_Proc_Emp!horadesde1) Then
                            E1 = rs_gti_Proc_Emp!horadesde1
                            S1 = rs_gti_Proc_Emp!horahasta1
                            FE1 = Fecha
                            'FGZ - 16/09/2010 -------
                            FS1 = Fecha
                            'FGZ - 16/09/2010 -------
                            Encontro = True
                        End If
                        
                        If Not EsNulo(rs_gti_Proc_Emp!horadesde2) Then
                            E2 = rs_gti_Proc_Emp!horadesde2
                            S2 = rs_gti_Proc_Emp!horahasta2
                            FE2 = Fecha
                            'FGZ - 16/09/2010 -------
                            FS2 = Fecha
                            'FGZ - 16/09/2010 -------
                            Encontro = True
                        End If
                        
                        If Not EsNulo(rs_gti_Proc_Emp!horadesde3) Then
                            E3 = rs_gti_Proc_Emp!horadesde3
                            S3 = rs_gti_Proc_Emp!horahasta3
                            FE3 = Fecha
                            'FGZ - 16/09/2010 -------
                            FS3 = Fecha
                            'FGZ - 16/09/2010 -------
                            Encontro = True
                        End If
                    End If
                    contador = contador - 1
                    Fecha_Auxiliar = DateAdd("d", -1, Fecha_Auxiliar)
                Loop
                
                If Not Encontro Then
                    E1 = ""
                    S1 = ""
                    E2 = ""
                    S2 = ""
                    E3 = ""
                    S3 = ""
                    Pasa_de_Dia = False
                End If
            Else
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "No hay H. Teorico. Dia Libre."
                End If
            End If
        End If
    Case 8: 'igual que la version 7 pero con la diferencia que solo busca registraciones para el dia de la fecha
    
        Nro_Dia_Default = Nro_Dia
        Horario_Movil = True
        
        'Busco la cantidad de horas para ese dia en ese turno
        StrSql = "SELECT diacanthoras FROM gti_dias "
        StrSql = StrSql & " WHERE subturnro = " & Nro_Subturno
        StrSql = StrSql & " AND dianro = " & Nro_Dia
        StrSql = StrSql & " ORDER BY diaorden"
        OpenRecordset StrSql, rs_Dia
        If Not rs_Dia.EOF Then
            Horas_Dia = rs_Dia!diacanthoras
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Cantidad de Horas para el turno " & Horas_Dia
            End If
            'Dia_Libre = rs_dia!Dialibre
        End If
    
        'Busco la primer registracion dentro de la ventana
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Busco la primer registracion dentro de la ventana"
        End If
        StrSql = "SELECT regfecha,reghora,regentsal,tiporeg FROM gti_registracion WHERE (regestado = 'I') "
        StrSql = StrSql & " AND (ternro = " & NroTer & ") "
        StrSql = StrSql & " AND ( regfecha = " & ConvFecha(Fecha) & ") "
        'FGZ - 19/05/2010 ------------ Control FT -------------
        StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
        'FGZ - 19/05/2010 ------------ Control FT -------------
        StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        
        EncontroReg = False
        Do While Not rs.EOF And Not EncontroReg
            Aux_Fecha = rs!regfecha
            Aux_Hora = rs!reghora
            
            If Not EsNulo(rs!tiporeg) Then
                'Tipo reg
                '01 es "entrada al turno"
                '02 es "salida a pausa de descanso",
                '03 es "entrada de fin de pausa de descanso"
                '04 es la "salida del turno"
                If rs!tiporeg = "1" Or rs!tiporeg = "01" Or rs!tiporeg = "4" Or rs!tiporeg = "04" Then
                    If Not EsNulo(rs!regentsal) Then
                        If UCase(rs!regentsal) = "E" Then
                            entrada = True
                        Else
                            entrada = False
                        End If
                    Else
                        entrada = True
                    End If
                    EncontroReg = True
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Encontré " & IIf(entrada, " Entrada ", " Salida ") & " Fecha: " & Aux_Fecha & " Hora: " & Aux_Hora
                    End If
                Else
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Encontré " & IIf(entrada, " Entrada ", " Salida ") & "de descanso Fecha: " & Aux_Fecha & " Hora: " & Aux_Hora
                        Flog.writeline Espacios(Tabulador * 2) & "Sigo buscando "
                    End If
                End If
'            Else    'tiporeg es nulo por lo cual en principio no seria de monresa (trabaja como el estandar)
'                If Not EsNulo(rs!regentsal) Then
'                    If UCase(rs!regentsal) = "E" Then
'                        entrada = True
'                    Else
'                        entrada = False
'                    End If
'                Else
'                    entrada = True
'                End If
'                EncontroReg = True
'
'                If depurar Then
'                    Flog.writeline Espacios(Tabulador * 2) & "Encontré " & IIf(entrada, " Entrada ", " Salida ") & " Fecha: " & Aux_Fecha & " Hora: " & Aux_Hora
'                End If
            End If
        
            rs.MoveNext
        Loop
        
        'dado que puede que no halla encontrado ninguna registracion con mara.. busco nuevamente y si hay me quedo con la primera que encuenrte
        If Not EncontroReg Then
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                Aux_Fecha = rs!regfecha
                Aux_Hora = rs!reghora
                
                If Not EsNulo(rs!regentsal) Then
                    If UCase(rs!regentsal) = "E" Then
                        entrada = True
                    Else
                        entrada = False
                    End If
                Else
                    entrada = True
                End If
                EncontroReg = True
                
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "Encontré " & IIf(entrada, " Entrada ", " Salida ") & " Fecha: " & Aux_Fecha & " Hora: " & Aux_Hora
                End If
            End If
        End If
        
        
        If EncontroReg Then
            'Redondeo/Fraccionamiento
            If TipoRedondeo <> 0 Then
                Aux_Hora_R = objFechasHoras.FraccionaHs(Aux_Hora, TipoRedondeo)
                If Not objFechasHoras.ValidarHora(Aux_Hora) Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Hora no valida. " & Aux_Hora
                    End If
                    Exit Sub
                Else
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Redondeo/Fraccionamiento. ==> Hora " & Aux_Hora_R
                    End If
                End If
            Else
                Aux_Hora_R = Aux_Hora
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "No se redondea la registracion."
                End If
            End If
        
            If entrada Then
                F_Desde = Aux_Fecha
                H_Desde = Aux_Hora_R
            Else
                F_Hasta = Aux_Fecha
                H_Hasta = Aux_Hora_R
            End If
                    
            If entrada Then
                'Sumo a la hora la cantidad de hs del turno
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & " --- Sumo a la hora la cantidad de hs del turno"
                End If
                Call objFechasHoras.SumoHoras(F_Desde, H_Desde, Horas_Dia, F_Hasta, H_Hasta)
                If Not objFechasHoras.ValidarHora(H_Hasta) Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Hora no valida. " & H_Hasta
                    End If
                    Exit Sub
                End If
            Else
                'Resto a la hora la cantidad de hs del turno
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & " --- Resto a la hora la cantidad de hs del turno"
                End If
                Call objFechasHoras.RestaXHoras(F_Hasta, H_Hasta, Horas_Dia, F_Desde, H_Desde)
                If Not objFechasHoras.ValidarHora(H_Desde) Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Hora no valida. " & H_Desde
                    End If
                    Exit Sub
                End If
            End If
            E1 = H_Desde
            S1 = H_Hasta
            FE1 = F_Desde
            FS1 = F_Hasta
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "H. Teorico en fecha " & FE1 & " --- Desde: " & E1 & " hasta: " & S1
            End If
            
            If F_Desde <> F_Hasta Or Fecha < F_Desde Then
                Pasa_de_Dia = True
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "El H. Teorico pasa de dia"
                End If
            Else
                Pasa_de_Dia = False
            End If
        Else
            If Not Dia_Libre Then
                'Como no tengo resgistraciones no se el horario teorico, entonces busco el 1er horario teorico de dias anteriores
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "No hay registraciones para la fecha. Se setea Horario teorico de dia anterior."
                End If
                
                Encontro = False
                contador = 12
                Fecha_Auxiliar = DateAdd("d", -1, Fecha)
                Do While Not Encontro And contador > 0
                    StrSql = "SELECT horadesde1,horadesde2,horadesde3,horahasta1,horahasta2,horahasta3 FROM gti_proc_emp WHERE ternro =" & NroTer
                    StrSql = StrSql & " AND fecha = " & ConvFecha(Fecha_Auxiliar)
                    OpenRecordset StrSql, rs_gti_Proc_Emp
                    If Not rs_gti_Proc_Emp.EOF Then
                           
                        If Not EsNulo(rs_gti_Proc_Emp!horadesde1) Then
                            E1 = rs_gti_Proc_Emp!horadesde1
                            S1 = rs_gti_Proc_Emp!horahasta1
                            FE1 = Fecha
                            'FGZ - 16/09/2010 -------
                            FS1 = Fecha
                            'FGZ - 16/09/2010 -------
                            Encontro = True
                        End If
                        
                        If Not EsNulo(rs_gti_Proc_Emp!horadesde2) Then
                            E2 = rs_gti_Proc_Emp!horadesde2
                            S2 = rs_gti_Proc_Emp!horahasta2
                            FE2 = Fecha
                            'FGZ - 16/09/2010 -------
                            FS2 = Fecha
                            'FGZ - 16/09/2010 -------
                            Encontro = True
                        End If
                        
                        If Not EsNulo(rs_gti_Proc_Emp!horadesde3) Then
                            E3 = rs_gti_Proc_Emp!horadesde3
                            S3 = rs_gti_Proc_Emp!horahasta3
                            FE3 = Fecha
                            'FGZ - 16/09/2010 -------
                            FS3 = Fecha
                            'FGZ - 16/09/2010 -------
                            Encontro = True
                        End If
                    End If
                    contador = contador - 1
                    Fecha_Auxiliar = DateAdd("d", -1, Fecha_Auxiliar)
                Loop
                
                If Not Encontro Then
                    E1 = ""
                    S1 = ""
                    E2 = ""
                    S2 = ""
                    E3 = ""
                    S3 = ""
                    Pasa_de_Dia = False
                End If
            Else
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "No hay H. Teorico. Dia Libre."
                End If
            End If
        End If
    Case 9: 'Se basa solo en la registracion de entrada para determinar el teorico
        Nro_Dia_Default = Nro_Dia
        Horario_Movil = True
        
        'Busco la cantidad de horas para ese dia en ese turno
        StrSql = "SELECT diacanthoras FROM gti_dias "
        StrSql = StrSql & " WHERE subturnro = " & Nro_Subturno
        StrSql = StrSql & " AND dianro = " & Nro_Dia
        StrSql = StrSql & " ORDER BY diaorden"
        OpenRecordset StrSql, rs_Dia
        If Not rs_Dia.EOF Then
            Horas_Dia = rs_Dia!diacanthoras
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Cantidad de Horas para el turno " & Horas_Dia
            End If
            'Dia_Libre = rs_dia!Dialibre
        End If
    
        'Busco la primer registracion dentro de la ventana
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Busco la primer registracion dentro de la ventana"
        End If
        StrSql = "SELECT regfecha,reghora,regentsal,tiporeg FROM gti_registracion WHERE (regestado = 'I') "
        StrSql = StrSql & " AND (ternro = " & NroTer & ") "
        StrSql = StrSql & " AND ( regfecha = " & ConvFecha(Fecha) & ") "
        'FGZ - 19/05/2010 ------------ Control FT -------------
        StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
        'FGZ - 19/05/2010 ------------ Control FT -------------
        StrSql = StrSql & " AND regestado = 'I' "
        StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        
        EncontroReg = False
        If Not rs.EOF Then
            Aux_Fecha = rs!regfecha
            Aux_Hora = rs!reghora
            
            If Not EsNulo(rs!tiporeg) Then
                'Tipo reg
                '01 es "entrada al turno"
                '02 es "salida a pausa de descanso",
                '03 es "entrada de fin de pausa de descanso"
                '04 es la "salida del turno"
                Select Case rs!tiporeg
                Case "1", "01":
                    If Not EsNulo(rs!regentsal) Then
                        If UCase(rs!regentsal) = "E" Then
                            entrada = True
                        Else
                            entrada = False
                        End If
                    Else
                        entrada = True
                    End If
                    EncontroReg = True
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Encontré " & IIf(entrada, " Entrada ", " Salida ") & " Fecha: " & Aux_Fecha & " Hora: " & Aux_Hora
                    End If
                    
                Case Else:
                    'Debo buscar registraciones en el dia anterior
                    StrSql = "SELECT regfecha,reghora,regentsal,tiporeg FROM gti_registracion WHERE (regestado = 'I') "
                    StrSql = StrSql & " AND (ternro = " & NroTer & ") "
                    StrSql = StrSql & " AND ( regfecha = " & ConvFecha(Fecha - 1) & ") "
                    'FGZ - 19/05/2010 ------------ Control FT -------------
                    StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
                    'FGZ - 19/05/2010 ------------ Control FT -------------
                    StrSql = StrSql & " AND (tiporeg = '01' OR tiporeg = '1') "
                    StrSql = StrSql & " AND regestado = 'I' "
                    StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora desc"
                    If rs.State = adStateOpen Then rs.Close
                    OpenRecordset StrSql, rs
                    If Not rs.EOF Then
                        Aux_Fecha = rs!regfecha
                        Aux_Hora = rs!reghora
                        
                        If Not EsNulo(rs!tiporeg) Then
                            'Tipo reg
                            '01 es "entrada al turno"
                            '02 es "salida a pausa de descanso",
                            '03 es "entrada de fin de pausa de descanso"
                            '04 es la "salida del turno"
                            Select Case rs!tiporeg
                            Case "1", "01":
                                If Not EsNulo(rs!regentsal) Then
                                    If UCase(rs!regentsal) = "E" Then
                                        entrada = True
                                    Else
                                        entrada = False
                                    End If
                                Else
                                    entrada = True
                                End If
                                EncontroReg = True
                                If depurar Then
                                    Flog.writeline Espacios(Tabulador * 2) & "Encontré " & IIf(entrada, " Entrada ", " Salida ") & " Fecha: " & Aux_Fecha & " Hora: " & Aux_Hora
                                End If
                            Case Else:
                                EncontroReg = False
                            End Select
                        Else
                            EncontroReg = False
                        End If
                    End If
                End Select
            Else 'no tiene la marca de registracion
                'Debo buscar registraciones en el dia anterior
                StrSql = "SELECT regfecha,reghora,regentsal,tiporeg FROM gti_registracion WHERE (regestado = 'I') "
                StrSql = StrSql & " AND (ternro = " & NroTer & ") "
                StrSql = StrSql & " AND ( regfecha = " & ConvFecha(Fecha - 1) & ") "
                'FGZ - 19/05/2010 ------------ Control FT -------------
                StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
                'FGZ - 19/05/2010 ------------ Control FT -------------
                StrSql = StrSql & " AND (tiporeg = '01' OR tiporeg = '1') "
                StrSql = StrSql & " AND regestado = 'I' "
                StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora desc"
                If rs.State = adStateOpen Then rs.Close
                OpenRecordset StrSql, rs
                If Not rs.EOF Then
                    Aux_Fecha = rs!regfecha
                    Aux_Hora = rs!reghora
                    
                    If Not EsNulo(rs!tiporeg) Then
                        'Tipo reg
                        '01 es "entrada al turno"
                        '02 es "salida a pausa de descanso",
                        '03 es "entrada de fin de pausa de descanso"
                        '04 es la "salida del turno"
                        Select Case rs!tiporeg
                        Case "1", "01":
                            If Not EsNulo(rs!regentsal) Then
                                If UCase(rs!regentsal) = "E" Then
                                    entrada = True
                                Else
                                    entrada = False
                                End If
                            Else
                                entrada = True
                            End If
                            EncontroReg = True
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 2) & "Encontré " & IIf(entrada, " Entrada ", " Salida ") & " Fecha: " & Aux_Fecha & " Hora: " & Aux_Hora
                            End If
                        Case Else:
                            EncontroReg = False
                        End Select
                    Else
                        EncontroReg = False
                    End If
                End If
            End If
        End If
        
        If EncontroReg Then
            'Redondeo/Fraccionamiento
            If TipoRedondeo <> 0 Then
                Aux_Hora_R = objFechasHoras.FraccionaHs(Aux_Hora, TipoRedondeo)
                If Not objFechasHoras.ValidarHora(Aux_Hora) Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Hora no valida. " & Aux_Hora
                    End If
                    Exit Sub
                Else
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Redondeo/Fraccionamiento. ==> Hora " & Aux_Hora_R
                    End If
                End If
            Else
                Aux_Hora_R = Aux_Hora
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "No se redondea la registracion."
                End If
            End If
        
            If entrada Then
                F_Desde = Aux_Fecha
                H_Desde = Aux_Hora_R
            Else
                F_Hasta = Aux_Fecha
                H_Hasta = Aux_Hora_R
            End If
                    
            If entrada Then
                'Sumo a la hora la cantidad de hs del turno
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & " --- Sumo a la hora la cantidad de hs del turno"
                End If
                Call objFechasHoras.SumoHoras(F_Desde, H_Desde, Horas_Dia, F_Hasta, H_Hasta)
                If Not objFechasHoras.ValidarHora(H_Hasta) Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Hora no valida. " & H_Hasta
                    End If
                    Exit Sub
                End If
            Else
                'Resto a la hora la cantidad de hs del turno
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & " --- Resto a la hora la cantidad de hs del turno"
                End If
                Call objFechasHoras.RestaXHoras(F_Hasta, H_Hasta, Horas_Dia, F_Desde, H_Desde)
                If Not objFechasHoras.ValidarHora(H_Desde) Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Hora no valida. " & H_Desde
                    End If
                    Exit Sub
                End If
            End If
            E1 = H_Desde
            S1 = H_Hasta
            FE1 = F_Desde
            FS1 = F_Hasta
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "H. Teorico en fecha " & FE1 & " --- Desde: " & E1 & " hasta: " & S1
            End If
            
            If F_Desde <> F_Hasta Or Fecha < F_Desde Then
                Pasa_de_Dia = True
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "El H. Teorico pasa de dia"
                End If
            Else
                Pasa_de_Dia = False
            End If
        End If
        
        If Not EncontroReg And Not Dia_Libre Then
                'Como no tengo resgistraciones no se el horario teorico, entonces busco el 1er horario teorico de dias anteriores
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "No hay registraciones para la fecha. Se setea Horario teorico de dia anterior."
                End If
                
                Encontro = False
                contador = 12
                Fecha_Auxiliar = DateAdd("d", -1, Fecha)
                Do While Not Encontro And contador > 0
                    StrSql = "SELECT horadesde1,horadesde2,horadesde3,horahasta1,horahasta2,horahasta3 FROM gti_proc_emp WHERE ternro =" & NroTer
                    StrSql = StrSql & " AND fecha = " & ConvFecha(Fecha_Auxiliar)
                    OpenRecordset StrSql, rs_gti_Proc_Emp
                    If Not rs_gti_Proc_Emp.EOF Then
                           
                        If Not EsNulo(rs_gti_Proc_Emp!horadesde1) Then
                            E1 = rs_gti_Proc_Emp!horadesde1
                            S1 = rs_gti_Proc_Emp!horahasta1
                            FE1 = Fecha
                            'FGZ - 16/09/2010 -------
                            FS1 = Fecha
                            'FGZ - 16/09/2010 -------
                            Encontro = True
                        End If
                        
                        If Not EsNulo(rs_gti_Proc_Emp!horadesde2) Then
                            E2 = rs_gti_Proc_Emp!horadesde2
                            S2 = rs_gti_Proc_Emp!horahasta2
                            FE2 = Fecha
                            'FGZ - 16/09/2010 -------
                            FS2 = Fecha
                            'FGZ - 16/09/2010 -------
                            Encontro = True
                        End If
                        
                        If Not EsNulo(rs_gti_Proc_Emp!horadesde3) Then
                            E3 = rs_gti_Proc_Emp!horadesde3
                            S3 = rs_gti_Proc_Emp!horahasta3
                            FE3 = Fecha
                            'FGZ - 16/09/2010 -------
                            FS3 = Fecha
                            'FGZ - 16/09/2010 -------
                            Encontro = True
                        End If
                    End If
                    contador = contador - 1
                    Fecha_Auxiliar = DateAdd("d", -1, Fecha_Auxiliar)
                Loop
                
                If Not Encontro Then
                    E1 = ""
                    S1 = ""
                    E2 = ""
                    S2 = ""
                    E3 = ""
                    S3 = ""
                    Pasa_de_Dia = False
                End If
            Else
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "No hay H. Teorico. Dia Libre."
                End If
            End If
            If P_Asignacion Then
                StrSql = "SELECT ttemphdesde1,ttemphhasta1,diaanterior FROM gti_detturtemp WHERE ternro= " & NroTer & _
                " AND gttempdesde <= " & ConvFecha(Fecha) & " AND gttemphasta >= " & ConvFecha(Fecha)
                OpenRecordset StrSql, rs
                If Not rs.EOF Then
                    If Not EsNulo(rs!ttemphdesde1) And Not EsNulo(rs!ttemphhasta1) Then
                        E1 = rs!ttemphdesde1
                        S1 = rs!ttemphhasta1
                    Else
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & "Parte con hora nula. Se descarta."
                        End If
                    End If
                End If
            End If
            P_Asignacion = False
    Case 10: 'Se basa solo en la registracion de entrada para determinar el teorico
        Nro_Dia_Default = Nro_Dia
        Horario_Movil = True
        HoraTopeNocturno = "2000"
        'HoraTopeNocturno2 = "0600"
        
        'Busco la cantidad de horas para ese dia en ese turno
        StrSql = "SELECT diacanthoras FROM gti_dias "
        StrSql = StrSql & " WHERE subturnro = " & Nro_Subturno
        StrSql = StrSql & " AND dianro = " & Nro_Dia
        StrSql = StrSql & " ORDER BY diaorden"
        OpenRecordset StrSql, rs_Dia
        If Not rs_Dia.EOF Then
            Horas_Dia = rs_Dia!diacanthoras
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Cantidad de Horas para el turno " & Horas_Dia
            End If
            'Dia_Libre = rs_dia!Dialibre
        End If
    
        'Busco la primer registracion dentro de la ventana
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Busco la primer registracion dentro de la ventana"
        End If
        StrSql = "SELECT regfecha,reghora,regentsal,tiporeg FROM gti_registracion WHERE (regestado = 'I') "
        StrSql = StrSql & " AND (ternro = " & NroTer & ") "
        StrSql = StrSql & " AND ( regfecha = " & ConvFecha(Fecha) & ") "
        'FGZ - 19/05/2010 ------------ Control FT -------------
        StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
        'FGZ - 19/05/2010 ------------ Control FT -------------
        StrSql = StrSql & " AND regestado = 'I' "
        StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        
        EncontroReg = False
        If Not rs.EOF Then
            Aux_Fecha = rs!regfecha
            Aux_Hora = rs!reghora
            
            If Not EsNulo(rs!tiporeg) Then
                'Tipo reg
                '01 es "entrada al turno"
                '02 es "salida a pausa de descanso",
                '03 es "entrada de fin de pausa de descanso"
                '04 es la "salida del turno"
                Select Case rs!tiporeg
                Case "1", "01":
                    If Not EsNulo(rs!regentsal) Then
                        If UCase(rs!regentsal) = "E" Then
                            entrada = True
                        Else
                            entrada = False
                        End If
                    Else
                        entrada = True
                    End If
                    EncontroReg = True
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Encontré " & IIf(entrada, " Entrada ", " Salida ") & " Fecha: " & Aux_Fecha & " Hora: " & Aux_Hora
                    End If
                    
                    'Debo verificar que la salida no se encuentre en el siguiente dia pues de ser así,
                    'esta registracion no debiera contemplarse porque se supondria que corresponde al siguiente dia
                    'y en ese caso significaria que estuvo ausente en el dia de la fecha procesada.
                    
                    'Si la reg es despues de una hora X y Si la hora de registracion + la cantidad de hs del dia pasan de dia
                    'entonces la reg corresponde para el siguiente dia y en el dia de la fecha estuvo ausente.
                    
                    'If (Aux_Hora >= HoraTopeNocturno) Or (Aux_Hora <= HoraTopeNocturno2) Then
                    If Aux_Hora >= HoraTopeNocturno Then
                        Call objFechasHoras.SumoHoras(Aux_Fecha, Aux_Hora, Horas_Dia, F_Hasta, H_Hasta)
                        If Not objFechasHoras.ValidarHora(H_Hasta) Then
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 2) & "Hora no valida. " & H_Hasta
                            End If
                            Exit Sub
                        End If
                        If F_Hasta > p_fecha Then
                            'la registracion corresponde al siguiente dia
                            EncontroReg = False
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 2) & "La registracion encontrada corresponde al siguiente dia. " & IIf(entrada, " Entrada ", " Salida ") & " Fecha: " & Aux_Fecha & " Hora: " & Aux_Hora
                            End If
                        
                            'Tomo el teorico pero del dia anterior
                            EncontroReg = True
                            Aux_Fecha = Aux_Fecha - 1
                        End If
                    End If
                    
                    
                    
                    
                Case Else:
                    'Debo buscar registraciones en el dia anterior
                    StrSql = "SELECT regfecha,reghora,regentsal,tiporeg FROM gti_registracion WHERE (regestado = 'I') "
                    StrSql = StrSql & " AND (ternro = " & NroTer & ") "
                    StrSql = StrSql & " AND ( regfecha = " & ConvFecha(Fecha - 1) & ") "
                    'FGZ - 19/05/2010 ------------ Control FT -------------
                    StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
                    'FGZ - 19/05/2010 ------------ Control FT -------------
                    StrSql = StrSql & " AND (tiporeg = '01' OR tiporeg = '1') "
                    StrSql = StrSql & " AND regestado = 'I' "
                    StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora desc"
                    If rs.State = adStateOpen Then rs.Close
                    OpenRecordset StrSql, rs
                    If Not rs.EOF Then
                        Aux_Fecha = rs!regfecha
                        Aux_Hora = rs!reghora
                        
                        If Not EsNulo(rs!tiporeg) Then
                            'Tipo reg
                            '01 es "entrada al turno"
                            '02 es "salida a pausa de descanso",
                            '03 es "entrada de fin de pausa de descanso"
                            '04 es la "salida del turno"
                            Select Case rs!tiporeg
                            Case "1", "01":
                                If Not EsNulo(rs!regentsal) Then
                                    If UCase(rs!regentsal) = "E" Then
                                        entrada = True
                                    Else
                                        entrada = False
                                    End If
                                Else
                                    entrada = True
                                End If
                                EncontroReg = True
                                If depurar Then
                                    Flog.writeline Espacios(Tabulador * 2) & "Encontré " & IIf(entrada, " Entrada ", " Salida ") & " Fecha: " & Aux_Fecha & " Hora: " & Aux_Hora
                                End If
                            Case Else:
                                EncontroReg = False
                            End Select
                        Else
                            EncontroReg = False
                        End If
                    End If
                End Select
            Else 'no tiene la marca de registracion
                'Debo buscar registraciones en el dia anterior
                StrSql = "SELECT regfecha,reghora,regentsal,tiporeg FROM gti_registracion WHERE (regestado = 'I') "
                StrSql = StrSql & " AND (ternro = " & NroTer & ") "
                StrSql = StrSql & " AND ( regfecha = " & ConvFecha(Fecha - 1) & ") "
                'FGZ - 19/05/2010 ------------ Control FT -------------
                StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
                'FGZ - 19/05/2010 ------------ Control FT -------------
                StrSql = StrSql & " AND (tiporeg = '01' OR tiporeg = '1') "
                StrSql = StrSql & " AND regestado = 'I' "
                StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora desc"
                If rs.State = adStateOpen Then rs.Close
                OpenRecordset StrSql, rs
                If Not rs.EOF Then
                    Aux_Fecha = rs!regfecha
                    Aux_Hora = rs!reghora
                    
                    If Not EsNulo(rs!tiporeg) Then
                        'Tipo reg
                        '01 es "entrada al turno"
                        '02 es "salida a pausa de descanso",
                        '03 es "entrada de fin de pausa de descanso"
                        '04 es la "salida del turno"
                        Select Case rs!tiporeg
                        Case "1", "01":
                            If Not EsNulo(rs!regentsal) Then
                                If UCase(rs!regentsal) = "E" Then
                                    entrada = True
                                Else
                                    entrada = False
                                End If
                            Else
                                entrada = True
                            End If
                            EncontroReg = True
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 2) & "Encontré " & IIf(entrada, " Entrada ", " Salida ") & " Fecha: " & Aux_Fecha & " Hora: " & Aux_Hora
                            End If
                        Case Else:
                            EncontroReg = False
                        End Select
                    Else
                        EncontroReg = False
                    End If
                End If
            End If
        End If
        
        If EncontroReg Then
            'Redondeo/Fraccionamiento
            If TipoRedondeo <> 0 Then
                Aux_Hora_R = objFechasHoras.FraccionaHs(Aux_Hora, TipoRedondeo)
                If Not objFechasHoras.ValidarHora(Aux_Hora) Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Hora no valida. " & Aux_Hora
                    End If
                    Exit Sub
                Else
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Redondeo/Fraccionamiento. ==> Hora " & Aux_Hora_R
                    End If
                End If
            Else
                Aux_Hora_R = Aux_Hora
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "No se redondea la registracion."
                End If
            End If
        
            If entrada Then
                F_Desde = Aux_Fecha
                H_Desde = Aux_Hora_R
            Else
                F_Hasta = Aux_Fecha
                H_Hasta = Aux_Hora_R
            End If
                    
            If entrada Then
                'Sumo a la hora la cantidad de hs del turno
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & " --- Sumo a la hora la cantidad de hs del turno"
                End If
                Call objFechasHoras.SumoHoras(F_Desde, H_Desde, Horas_Dia, F_Hasta, H_Hasta)
                If Not objFechasHoras.ValidarHora(H_Hasta) Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Hora no valida. " & H_Hasta
                    End If
                    Exit Sub
                End If
            Else
                'Resto a la hora la cantidad de hs del turno
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & " --- Resto a la hora la cantidad de hs del turno"
                End If
                Call objFechasHoras.RestaXHoras(F_Hasta, H_Hasta, Horas_Dia, F_Desde, H_Desde)
                If Not objFechasHoras.ValidarHora(H_Desde) Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Hora no valida. " & H_Desde
                    End If
                    Exit Sub
                End If
            End If
            E1 = H_Desde
            S1 = H_Hasta
            FE1 = F_Desde
            FS1 = F_Hasta
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "H. Teorico en fecha " & FE1 & " --- Desde: " & E1 & " hasta: " & S1
            End If
            
            If F_Desde <> F_Hasta Or Fecha < F_Desde Then
                Pasa_de_Dia = True
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "El H. Teorico pasa de dia"
                End If
            Else
                Pasa_de_Dia = False
            End If
        End If
        
        If Not EncontroReg And Not Dia_Libre Then
                'Como no tengo resgistraciones no se el horario teorico, entonces busco el 1er horario teorico de dias anteriores
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "No hay registraciones para la fecha. Se setea Horario teorico de dia anterior."
                End If
                
                Encontro = False
                contador = 12
                Fecha_Auxiliar = DateAdd("d", -1, Fecha)
                Do While Not Encontro And contador > 0
                    StrSql = "SELECT horadesde1,horadesde2,horadesde3,horahasta1,horahasta2,horahasta3 FROM gti_proc_emp WHERE ternro =" & NroTer
                    StrSql = StrSql & " AND fecha = " & ConvFecha(Fecha_Auxiliar)
                    OpenRecordset StrSql, rs_gti_Proc_Emp
                    If Not rs_gti_Proc_Emp.EOF Then
                           
                        If Not EsNulo(rs_gti_Proc_Emp!horadesde1) Then
                            E1 = rs_gti_Proc_Emp!horadesde1
                            S1 = rs_gti_Proc_Emp!horahasta1
                            FE1 = Fecha
                            'FGZ - 16/09/2010 -------
                            If S1 < E1 Then
                                FS1 = Fecha + 1
                            Else
                                FS1 = Fecha
                            End If
                            'FGZ - 16/09/2010 -------
                            Encontro = True
                        End If
                        
                        If Not EsNulo(rs_gti_Proc_Emp!horadesde2) Then
                            E2 = rs_gti_Proc_Emp!horadesde2
                            S2 = rs_gti_Proc_Emp!horahasta2
                            FE2 = Fecha
                            'FGZ - 16/09/2010 -------
                            If S2 < E2 Then
                                FS2 = Fecha + 1
                            Else
                                FS2 = Fecha
                            End If
                            'FGZ - 16/09/2010 -------
                            Encontro = True
                        End If
                        
                        If Not EsNulo(rs_gti_Proc_Emp!horadesde3) Then
                            E3 = rs_gti_Proc_Emp!horadesde3
                            S3 = rs_gti_Proc_Emp!horahasta3
                            FE3 = Fecha
                            'FGZ - 16/09/2010 -------
                            If S3 < E3 Then
                                FS3 = Fecha + 1
                            Else
                                FS3 = Fecha
                            End If
                            'FGZ - 16/09/2010 -------
                            Encontro = True
                        End If
                    End If
                    contador = contador - 1
                    Fecha_Auxiliar = DateAdd("d", -1, Fecha_Auxiliar)
                Loop
                
                If Not Encontro Then
                    Horario_Movil = False
                    E1 = ""
                    S1 = ""
                    E2 = ""
                    S2 = ""
                    E3 = ""
                    S3 = ""
                    Pasa_de_Dia = False
                End If
            Else
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "No hay H. Teorico. Dia Libre."
                End If
            End If
            If P_Asignacion Then
                StrSql = "SELECT ttemphdesde1,ttemphhasta1,diaanterior FROM gti_detturtemp WHERE ternro= " & NroTer & _
                " AND gttempdesde <= " & ConvFecha(Fecha) & " AND gttemphasta >= " & ConvFecha(Fecha)
                OpenRecordset StrSql, rs
                If Not rs.EOF Then
                    If Not EsNulo(rs!ttemphdesde1) And Not EsNulo(rs!ttemphhasta1) Then
                        E1 = rs!ttemphdesde1
                        S1 = rs!ttemphhasta1
                    Else
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & "Parte con hora nula. Se descarta."
                        End If
                    End If
                End If
            End If
            P_Asignacion = False
    Case 11:    'Es como la version 1 pero para buscar la cantidad de hs del dia tiene en cuenta partes de asignacion horaria
        Nro_Dia_Default = Nro_Dia 'Diego Rosso - 12/11/2007

        Horario_Movil = True
        Horario_Flexible_Rotativo = True
        Horario_Flexible_sinParte = True
        
        'Busco la cantidad de horas para ese dia en ese turno
        StrSql = "SELECT diacanthoras FROM gti_dias "
        StrSql = StrSql & " WHERE subturnro = " & Nro_Subturno
        StrSql = StrSql & " ORDER BY diaorden"
        OpenRecordset StrSql, rs_Dia
        If Not rs_Dia.EOF Then
            Horas_Dia = rs_Dia!diacanthoras
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Cantidad de Horas para el turno " & Horas_Dia
            End If
            'Dia_Libre = rs_dia!Dialibre
        End If
    
            If P_Asignacion Then
                StrSql = "SELECT ttemphdesde1,ttemphhasta1,diaanterior,diacanthoras FROM gti_detturtemp WHERE ternro= " & NroTer & _
                " AND gttempdesde <= " & ConvFecha(Fecha) & " AND gttemphasta >= " & ConvFecha(Fecha)
                OpenRecordset StrSql, rs
                If Not rs.EOF Then
                    If Not EsNulo(rs!ttemphdesde1) And Not EsNulo(rs!ttemphhasta1) Then
                        E1 = rs!ttemphdesde1
                        S1 = rs!ttemphhasta1
                        Horas_Dia = rs!diacanthoras
                    Else
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & "Parte con hora nula. Se descarta."
                        End If
                    End If
                End If
            End If
    
        'Busco la primer registracion dentro de la ventana
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Busco la primer registracion dentro de la ventana"
        End If
        StrSql = "SELECT regfecha,reghora,regentsal FROM gti_registracion WHERE (regestado = 'I') "
        StrSql = StrSql & " AND (ternro = " & NroTer & ") "
        StrSql = StrSql & " AND ( regfecha >= " & ConvFecha(Fecha) & ") "
        StrSql = StrSql & " AND (regfecha <=" & ConvFecha(DateAdd("d", 1, Fecha)) & ")"
        'FGZ - 19/05/2010 ------------ Control FT -------------
        StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
        'FGZ - 19/05/2010 ------------ Control FT -------------
        StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        
        If Not rs.EOF Then
            Aux_Fecha = rs!regfecha
            Aux_Hora = rs!reghora
            
            If Not EsNulo(rs!regentsal) Then
                If UCase(rs!regentsal) = "E" Then
                    entrada = True
                Else
                    entrada = False
                End If
            Else
                entrada = True
            End If
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Encontré " & IIf(entrada, " Entrada ", " Salida ") & " Fecha: " & Aux_Fecha & " Hora: " & Aux_Hora
            End If
            
            'Redondeo/Fraccionamiento
            If TipoRedondeo <> 0 Then
                Aux_Hora_R = objFechasHoras.FraccionaHs(Aux_Hora, TipoRedondeo)
                If Not objFechasHoras.ValidarHora(Aux_Hora) Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Hora no valida. " & Aux_Hora
                    End If
                    Exit Sub
                Else
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Redondeo/Fraccionamiento. ==> Hora " & Aux_Hora_R
                    End If
                End If
            Else
                Aux_Hora_R = Aux_Hora
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "No se redondea la registracion."
                End If
            End If
        
            If entrada Then
                F_Desde = Aux_Fecha
                H_Desde = Aux_Hora_R
            Else
                F_Hasta = Aux_Fecha
                H_Hasta = Aux_Hora_R
            End If
                    
            If entrada Then
                'Sumo a la hora la cantidad de hs del turno
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & " --- Sumo a la hora la cantidad de hs del turno"
                End If
                Call objFechasHoras.SumoHoras(F_Desde, H_Desde, Horas_Dia, F_Hasta, H_Hasta)
                If Not objFechasHoras.ValidarHora(H_Hasta) Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Hora no valida. " & H_Hasta
                    End If
                    Exit Sub
                End If
            Else
                'Resto a la hora la cantidad de hs del turno
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & " --- Resto a la hora la cantidad de hs del turno"
                End If
                Call objFechasHoras.RestaXHoras(F_Hasta, H_Hasta, Horas_Dia, F_Desde, H_Desde)
                If Not objFechasHoras.ValidarHora(H_Desde) Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Hora no valida. " & H_Desde
                    End If
                    Exit Sub
                End If
            End If
            E1 = H_Desde
            S1 = H_Hasta
            FE1 = F_Desde
            FS1 = F_Hasta
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "H. Teorico en fecha " & FE1 & " --- Desde: " & E1 & " hasta: " & S1
            End If
            
            If F_Desde <> F_Hasta Or Fecha < F_Desde Then
                Pasa_de_Dia = True
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "El H. Teorico pasa de dia"
                End If
            Else
                Pasa_de_Dia = False
            End If
        Else
            If Not Dia_Libre Then
                'Como no tengo resgistraciones no se el horario teorico, entonces busco el 1er horario teorico de dias anteriores
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "No hay registraciones para la fecha. Se setea Horario teorico de dia anterior."
                End If
                
                Encontro = False
                contador = 12
                Fecha_Auxiliar = DateAdd("d", -1, Fecha)
                Do While Not Encontro And contador > 0
                    StrSql = "SELECT horadesde1,horadesde2,horadesde3,horahasta1,horahasta2,horahasta3 FROM gti_proc_emp WHERE ternro =" & NroTer
                    StrSql = StrSql & " AND fecha = " & ConvFecha(Fecha_Auxiliar)
                    OpenRecordset StrSql, rs_gti_Proc_Emp
                    If Not rs_gti_Proc_Emp.EOF Then
                           
                        If Not EsNulo(rs_gti_Proc_Emp!horadesde1) Then
                            E1 = rs_gti_Proc_Emp!horadesde1
                            S1 = rs_gti_Proc_Emp!horahasta1
                            FE1 = Fecha
                            Encontro = True
                        End If
                        
                        If Not EsNulo(rs_gti_Proc_Emp!horadesde2) Then
                            E2 = rs_gti_Proc_Emp!horadesde2
                            S2 = rs_gti_Proc_Emp!horahasta2
                            FE2 = Fecha
                            Encontro = True
                        End If
                        
                        If Not EsNulo(rs_gti_Proc_Emp!horadesde3) Then
                            E3 = rs_gti_Proc_Emp!horadesde3
                            S3 = rs_gti_Proc_Emp!horahasta3
                            FE3 = Fecha
                            Encontro = True
                        End If
                    End If
                    contador = contador - 1
                    Fecha_Auxiliar = DateAdd("d", -1, Fecha_Auxiliar)
                Loop
                
                If Not Encontro Then
                    E1 = ""
                    S1 = ""
                    E2 = ""
                    S2 = ""
                    E3 = ""
                    S3 = ""
                    Pasa_de_Dia = False
                End If
            Else
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "No hay H. Teorico. Dia Libre."
                End If
            End If
        End If
    Case 12:    'Es como la version 1 pero para buscar la cantidad de hs del dia tiene en cuenta partes de asignacion horaria.
                ' si no hay registraciones entonces se queda con el horario teorico asignado por definicion o por el parte
        Nro_Dia_Default = Nro_Dia

        Horario_Movil = True
        Horario_Flexible_Rotativo = True
        Horario_Flexible_sinParte = True
        
        'Busco la cantidad de horas para ese dia en ese turno
        StrSql = "SELECT diacanthoras FROM gti_dias "
        StrSql = StrSql & " WHERE subturnro = " & Nro_Subturno
        StrSql = StrSql & " ORDER BY diaorden"
        OpenRecordset StrSql, rs_Dia
        If Not rs_Dia.EOF Then
            Horas_Dia = rs_Dia!diacanthoras
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Cantidad de Horas para el turno " & Horas_Dia
            End If
            'Dia_Libre = rs_dia!Dialibre
        End If
    
            If P_Asignacion Then
                StrSql = "SELECT ttemphdesde1,ttemphhasta1,diaanterior,diacanthoras FROM gti_detturtemp WHERE ternro= " & NroTer & _
                " AND gttempdesde <= " & ConvFecha(Fecha) & " AND gttemphasta >= " & ConvFecha(Fecha)
                OpenRecordset StrSql, rs
                If Not rs.EOF Then
                    If Not EsNulo(rs!ttemphdesde1) And Not EsNulo(rs!ttemphhasta1) Then
                        E1 = rs!ttemphdesde1
                        S1 = rs!ttemphhasta1
                        
                        If E1 > S1 Then
                            FE1 = Fecha
                            FS1 = Fecha + 1
                        Else
                            FE1 = Fecha
                            FS1 = Fecha
                        End If
                        Horas_Dia = rs!diacanthoras
                    Else
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & "Parte con hora nula. Se descarta."
                        End If
                    End If
                End If
            End If
    
        'Busco la primer registracion dentro de la ventana
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Busco la primer registracion dentro de la ventana"
        End If
        StrSql = "SELECT regfecha,reghora,regentsal FROM gti_registracion WHERE (regestado = 'I') "
        StrSql = StrSql & " AND (ternro = " & NroTer & ") "
        StrSql = StrSql & " AND ( regfecha >= " & ConvFecha(Fecha) & ") "
        StrSql = StrSql & " AND (regfecha <=" & ConvFecha(DateAdd("d", 1, Fecha)) & ")"
        'FGZ - 19/05/2010 ------------ Control FT -------------
        StrSql = StrSql & " AND (gti_registracion.ft = 0 OR (gti_registracion.ft = -1 AND gti_registracion.ftap = -1))"
        'FGZ - 19/05/2010 ------------ Control FT -------------
        ''FGZ - 23/07/2014 ---------
        StrSql = StrSql & " AND hornro <> 21 AND hornro <> -121 AND hornro <> 121"
        ''FGZ - 23/07/2014 ---------
        StrSql = StrSql & " ORDER BY ternro ASC, regfecha ASC, reghora ASC"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        
        If Not rs.EOF Then
            Aux_Fecha = rs!regfecha
            Aux_Hora = rs!reghora
            
            If Not EsNulo(rs!regentsal) Then
                If UCase(rs!regentsal) = "E" Then
                    entrada = True
                Else
                    entrada = False
                End If
            Else
                entrada = True
            End If
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Encontré " & IIf(entrada, " Entrada ", " Salida ") & " Fecha: " & Aux_Fecha & " Hora: " & Aux_Hora
            End If
            
            'Redondeo/Fraccionamiento
            If TipoRedondeo <> 0 Then
                Aux_Hora_R = objFechasHoras.FraccionaHs(Aux_Hora, TipoRedondeo)
                If Not objFechasHoras.ValidarHora(Aux_Hora) Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Hora no valida. " & Aux_Hora
                    End If
                    Exit Sub
                Else
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Redondeo/Fraccionamiento. ==> Hora " & Aux_Hora_R
                    End If
                End If
            Else
                Aux_Hora_R = Aux_Hora
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "No se redondea la registracion."
                End If
            End If
        
            If entrada Then
                F_Desde = Aux_Fecha
                H_Desde = Aux_Hora_R
            Else
                F_Hasta = Aux_Fecha
                H_Hasta = Aux_Hora_R
            End If
                    
            If entrada Then
                'Sumo a la hora la cantidad de hs del turno
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & " --- Sumo a la hora la cantidad de hs del turno"
                End If
                Call objFechasHoras.SumoHoras(F_Desde, H_Desde, Horas_Dia, F_Hasta, H_Hasta)
                If Not objFechasHoras.ValidarHora(H_Hasta) Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Hora no valida. " & H_Hasta
                    End If
                    Exit Sub
                End If
            Else
                'Resto a la hora la cantidad de hs del turno
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & " --- Resto a la hora la cantidad de hs del turno"
                End If
                Call objFechasHoras.RestaXHoras(F_Hasta, H_Hasta, Horas_Dia, F_Desde, H_Desde)
                If Not objFechasHoras.ValidarHora(H_Desde) Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Hora no valida. " & H_Desde
                    End If
                    Exit Sub
                End If
            End If
            E1 = H_Desde
            S1 = H_Hasta
            FE1 = F_Desde
            FS1 = F_Hasta
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "H. Teorico en fecha " & FE1 & " --- Desde: " & E1 & " hasta: " & S1
            End If
            
            If F_Desde <> F_Hasta Or Fecha < F_Desde Then
                Pasa_de_Dia = True
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "El H. Teorico pasa de dia"
                End If
            Else
                Pasa_de_Dia = False
            End If
        Else
            If Not Dia_Libre Then
                'Como no tengo resgistraciones no se el horario teorico, entonces busco el 1er horario teorico de dias anteriores
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "No hay registraciones para la fecha. Se setea Horario teorico por Parte diario o definicion del turno."
                End If
            Else
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "No hay H. Teorico. Dia Libre."
                End If
            End If
        End If
        
    Case 13: 'Custom para Monresa, Arma el horario teorico en función del parte de asignacion horaria si existe y sino en funcion del turno.
            ' --------------------------------------------------------------
            ' Descripcion: Esta version es igual que la version 1 pero hace unos controles extras
            '       Si encuentra un parte de Asignacion horaria se basa en dicho parte y determina si el turno es nocturno(Verifica si el empleado entra un dia y sale al dia siguiente).
            '       Si el turno es nocturno busca la fichada desde el dia anterior a hoy segun la ventana configurada en la politica.
            '       Si el turno es Noctruno ==> supone la entrada en el dia anterior al procesado
            ' Autor: EAM - 06/03/2012
            ' Ultima modificacion:
            ' --------------------------------------------------------------
            'Funcionamiento
            '-----------------------------------------------------
            'Si hay parte de asignacion ==>
            '       Se basa en el parte de asignacion horaria y arma la ventana igual que la version 1. Resta y suma horas al HT
            '       Determina si la fichada de salida cae al dia siguiente > 2400 para verificar si es un turno nocturno
            'SINO
            '   Se basa en el turno y arma la ventana igual que la version 1. Resta y suma horas al HT
            '       Determina si la fichada de salida cae al dia siguiente > 2400 para verificar si es un turno nocturno
            'End
            '-----------------------------------------------------
            Dim Hora As String
            
            TurnoNocturno_HaciaAtras = False
            Aux_Fecha = Fecha
            Pasa_de_Dia = False
            Horario_Movil = True
            'EAM- Verifica si tiene un parte de asignacion horaria o sino se basa en el turno y verifica si el horario es Nocturno
            If P_Asignacion Then
                'EAM- si tiene un parte calcula la ventana en función de éste
                StrSql = "SELECT ttemphdesde1,ttemphhasta1,diaanterior FROM gti_detturtemp WHERE ternro= " & NroTer & _
                        " AND gttempdesde <= " & ConvFecha(Fecha) & " AND gttemphasta >= " & ConvFecha(Fecha)
                OpenRecordset StrSql, rs
                
                If Not rs.EOF Then
                    If Not EsNulo(rs!ttemphdesde1) And Not EsNulo(rs!ttemphhasta1) Then
                        Aux_Hora = rs!ttemphdesde1
                        H_Desde = rs!ttemphdesde1
                        H_Hasta = rs!ttemphhasta1
                    Else
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & "Parte con hora nula. Se descarta."
                        End If
                    End If
                Else
                    Exit Sub
                End If
            Else
                StrSql = "SELECT diahoradesde1,diahorahasta1,diaanterior FROM gti_dias WHERE dianro= " & Nro_Dia
                OpenRecordset StrSql, rs
                
                If Not rs.EOF Then
                    If Not EsNulo(rs!diahoradesde1) And Not EsNulo(rs!diahorahasta1) Then
                        Aux_Hora = rs!diahoradesde1
                        H_Desde = rs!diahoradesde1
                        H_Hasta = rs!diahorahasta1
                    Else
                         If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & "Turno con hora nula. Se descarta."
                        End If
                    End If
                Else
                    Exit Sub
                End If
            End If
     

            If Not P_Asignacion Then
                If Not Horario_Movil And Not Horario_Flexible_Rotativo Then
                    If Not EsNulo(rs!diahoradesde1) Then
                        Hora = rs!diahoradesde1
                    Else
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & "Dia " & Nro_Dia & " con diahoradesde1 Nulo"
                        End If
                        Hora = "0000"
                    End If
                Else
                    If Horario_Movil Then
                        Hora = E1
                        fecha_desde = FE1
                    Else
                        Hora = E1
                        Fecha = FE1
                    End If
                End If
            Else
                If Not EsNulo(H_Desde) Then
                    Hora = rs!ttemphdesde1
                Else
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & "Parte con ttemphdesde1 Nulo"
                    End If
                    Hora = "0000"
                End If
            End If
            
            If Not objFechasHoras.ValidarHora(H_Desde) Or Not objFechasHoras.ValidarHora(H_Hasta) Then
                Horario_Movil = False
                E1 = ""
                S1 = ""
                E2 = ""
                S2 = ""
                E3 = ""
                S3 = ""
                Pasa_de_Dia = False
                Exit Sub
            End If

        'EAM- Verifica si el turno es nocturno, es decir si pasa de día
        If H_Desde > H_Hasta Then
            Pasa_de_Dia = True
            F_Desde = Fecha - 1
            F_Hasta = Fecha
            Aux_Fecha = Fecha - 1
            TurnoNocturno_HaciaAtras = True
        Else
            F_Desde = Fecha
            F_Hasta = Fecha
        End If
         'End If
    
        'Redondeo/Fraccionamiento
        If TipoRedondeo <> 0 Then
            Aux_Hora_R = objFechasHoras.FraccionaHs(Aux_Hora, TipoRedondeo)
            If Not objFechasHoras.ValidarHora(Aux_Hora) Then
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "Hora no valida. " & Aux_Hora
                End If
                Exit Sub
            Else
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 2) & "Redondeo/Fraccionamiento. ==> Hora " & Aux_Hora_R
                End If
            End If
        Else
            Aux_Hora_R = Aux_Hora
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "No se redondea la registracion."
            End If
        End If

        'EAM- Asigna a la hora desde el valor que resulta de aplicar el redondeo, sino es valor es el mismo que tenia (turno o parte)
        H_Desde = Aux_Hora_R

        E1 = H_Desde
        S1 = H_Hasta
        FE1 = F_Desde
        FS1 = F_Hasta
        fecha_desde = FE1
        fecha_hasta = FS1
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "H. Teorico en fecha " & FE1 & " Desde: " & E1 & " a la fecha " & FS1 & " hasta: " & S1
        End If
            
            
    Case Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Opcion de Politica Desconocido."
        End If
        Horario_Flexible_Rotativo = False
        Horario_Movil = False
        ok = False
    End Select

    'libero
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing

    If rs_Dia.State = adStateOpen Then rs_Dia.Close
    Set rs_Dia = Nothing

    If rs_gti_Proc_Emp.State = adStateOpen Then rs_gti_Proc_Emp.Close
    Set rs_gti_Proc_Emp = Nothing
End Sub


Public Sub Descontar_Horas(fecha_dto As Date, horas_dto As Single, ByVal TipoAnorm As Integer)
'--------------------------------------------------------------------
'Ult Mod:   FGZ - 01/12/2005
'           Controla que no venga nulo en el campo conhfraccionamiento
'           se agrego el parametro: ByVal TipoAnorm As Integer
'--------------------------------------------------------------------
Dim TH_Dto As Long
Dim Horas_Acum As Single
Dim hora_red   As String
Dim Hora_a_Red As String
Dim fraccionamiento As Single
Dim objRs As New ADODB.Recordset

If depurar Then
    Flog.writeline Espacios(Tabulador * 2) & "Horas de descuento"
End If

Horas_Acum = 0
If horas_dto = 0 Then Exit Sub

StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 3 AND turnro = " & Nro_Turno
OpenRecordset StrSql, objRs
If Not objRs.EOF Then
    TH_Dto = objRs!thnro
Else
    If depurar Then
        GeneraTraza Empleado.Ternro, p_fecha, "No está configurado el Tipo de Hora Descuento para el Turno:", Str(Nro_Turno)
    End If
    Exit Sub
End If
  
'fraccionamiento = IIf(Not EsNulo(objRs!conhfraccionamiento), objRs!conhfraccionamiento, 0) / 60
If TipoAnorm = 1 Then
    fraccionamiento = IIf(Not EsNulo(objRs!conhfracdesde), objRs!conhfracdesde, 0) / 60
Else
    fraccionamiento = IIf(Not EsNulo(objRs!conhfrachasta), objRs!conhfrachasta, 0) / 60
End If

If fraccionamiento > 0 Then
    Do While fraccionamiento < horas_dto
        Horas_Acum = Horas_Acum + fraccionamiento
        horas_dto = horas_dto - fraccionamiento
    Loop
    Horas_Acum = Horas_Acum + fraccionamiento
End If
       
objFechasHoras.Convertir_A_Hora Horas_Acum * 60, Hora_a_Red
'objFechasHoras.Redondeo_Horas_Tipo hora_a_red, objRs!conhredondeo, horas_acum
objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, IIf(Not EsNulo(objRs!conhredondeo), objRs!conhredondeo, 0), Horas_Acum

'Call ValidarTipoDeHora(th_dto, nro_turno, tipo_hora)
StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
          "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
          "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
          CHoras(Horas_Acum, 60) & "," & Horas_Acum & "," & ConvFecha(fecha_dto) & ",' '," & ConvFecha(fecha_dto) & ",'',''," & _
          CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & ",5," & _
          5 & "," & Empleado.Ternro & "," & TH_Dto & "," & Nro_Turno & "," & _
          ValorNulo & ",''," & ValorNulo & ",''," & _
          Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
objConn.Execute StrSql, , adExecuteNoRecords
If depurar Then
    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TH_Dto & "- Cantidad: " & Horas_Acum & " hs."
    Flog.writeline Espacios(Tabulador * 2) & "Fin Horas de descuento"
End If
End Sub



Public Sub Revisar_Justif(ByRef Registraciones As Integer)
' ---------------------------------------------------------------------------------------------
' Descripcion: Procedimiento que verifica si hay que sacar registraciones obligatorias debido a las justificaciones.
' Autor      : FGZ
' Fecha      : 18/04/2006
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim i As Integer
Dim j As Integer
Dim Cantidad As Integer

    'For i = 1 To 3
    For i = 1 To 6
        If Not EsNulo(Arr_Oblig(i).Ent) Then
            For j = 1 To (Indice_Justif - 1)
                If (Arr_Justificaciones(j).Ent <= Arr_Oblig(i).Ent) And (Arr_Justificaciones(j).Sal >= Arr_Oblig(i).Sal) Then
                    'Justif     (-----------)-
                    'Reg Obli   --[------]----
                    Arr_Oblig(i).Ent = ""
                    Arr_Oblig(i).Sal = ""
                    Arr_Oblig(i).Justificada = True
                End If
            
                If (Arr_Justificaciones(j).Ent <= Arr_Oblig(i).Ent) And (Arr_Justificaciones(j).Sal <= Arr_Oblig(i).Sal) Then
                '2010/05/10 EGO - Cambio el actual el "(Arr_Justificaciones(J).Ent <= Arr_Oblig(I).Ent) And (Arr_Justificaciones(J).Sal <= Arr_Oblig(I).Sal)"
                    'Justif     -(-------)------
                    'Reg Obli   ---[--------]---
                    Arr_Oblig(i).Ent = Arr_Justificaciones(j).Sal
                    Arr_Oblig(i).Sal = Arr_Oblig(i).Sal 'queda igual
                    Arr_Oblig(i).Justificada = False
                End If
            
                If (Arr_Justificaciones(j).Ent >= Arr_Oblig(i).Ent) And (Arr_Justificaciones(j).Sal <= Arr_Oblig(i).Sal) Then
                    'Justif     -----(----)---
                    'Reg Obli   ---[----]-----
                    Arr_Oblig(i).Ent = Arr_Oblig(i).Ent 'queda igual
                    Arr_Oblig(i).Sal = Arr_Justificaciones(j).Ent
                    Arr_Oblig(i).Justificada = False
                End If
            
'                'FGZ - 15/08/2006 - Agregué esta opcion
'                If (Arr_Justificaciones(J).Ent >= Arr_Oblig(I).Ent) And (Arr_Justificaciones(J).Sal <= Arr_Oblig(I).Sal) Then
'                    'Justif     -----(----)---
'                    'Reg Obli   ---[-------]--
'                    Arr_Oblig(I).Ent = Arr_Oblig(I).Ent 'queda igual
'                    Arr_Oblig(I).Sal = Arr_Justificaciones(J).Ent
'                    Arr_Oblig(I).Justificada = False
'                End If
                
            Next j
        End If
    Next i
    
    'For i = 1 To 3
    For i = 1 To 6
        If Arr_Oblig(i).Justificada Then
            Cantidad = Cantidad + 2
        End If
    Next i

    Registraciones = Registraciones - Cantidad
End Sub


Public Sub SumarJustifParVar()
' ---------------------------------------------------------------------------------------------
' Descripcion: suma la cantidad de horas de justificaciones parciales variables
' Autor: FGZ
' Fecha: 19/04/2006
' Ultima Mod.:
' ----------------------------------------------------------------------------------------------
Dim Aux_Tipohora As Long

Dim Rs_Justif As New ADODB.Recordset
Dim rs As New ADODB.Recordset

'StrSql = "SELECT * FROM GTI_JUSTIFICACION WHERE ternro = " & Empleado.Ternro
'StrSql = StrSql & " AND juseltipo = 3 AND jusdesde <= " & ConvFecha(p_fecha)
'StrSql = StrSql & " AND jushasta >= " & ConvFecha(p_fecha)
'StrSql = StrSql & " ORDER BY juselorden "
'If rs_Justif.State = adStateOpen Then rs_Justif.Close
'OpenRecordset StrSql, rs_Justif
'
'Do While Not rs_Justif.EOF
'    Aux_Tipohora = 0
'    Select Case rs_Justif!jussigla
'    Case "NOV":
'        StrSql = " SELECT gti_tiponovedad.thnro FROM gti_novedad "
'        StrSql = StrSql & " INNER JOIN gti_tiponovedad ON gti_tiponovedad.gtnovnro = gti_novedad.gtnovnro "
'        StrSql = StrSql & " WHERE gti_novedad.gnovotoa = " & Empleado.Ternro
'        StrSql = StrSql & " AND gti_novedad.gnovnro = " & rs_Justif!juscodext
'        If rs.State = adStateOpen Then rs.Close
'        OpenRecordset StrSql, rs
'        If Not rs.EOF Then
'            Aux_Tipohora = rs!thnro
'        End If
'    Case "LIC"
'        StrSql = "SELECT tipdia.thnro FROM emp_lic "
'        StrSql = StrSql & " INNER JOIN tipdia ON emp_lic.tdnro = tipdia.tdnro "
'        StrSql = StrSql & " WHERE emp_lic.empleado = " & Empleado.Ternro
'        StrSql = StrSql & " AND emp_lic.emp_licnro = " & rs_Justif!juscodext
'        StrSql = StrSql & " AND (emp_lic.licestnro = 2)" 'Autorizada
'        If rs.State = adStateOpen Then rs.Close
'        OpenRecordset StrSql, rs
'        If Not rs.EOF Then
'            Aux_Tipohora = rs!thnro
'        End If
'    End Select
'    If Aux_Tipohora <> 0 Then
'        Total_Hs_Justificadas = Total_Hs_Justificadas + rs_Justif!juselmaxhoras
'    End If
'
'    rs_Justif.MoveNext
'Loop

CierroTodo:
    If Rs_Justif.State = adStateOpen Then Rs_Justif.Close
    Set Rs_Justif = Nothing
    
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
End Sub


Public Sub Cargar_PoliticasGlobales()
' ---------------------------------------------------------------------------------------------
' Descripcion: Carga las politicas con alcance global en el arreglo Global.
' Autor      : FGZ
' Fecha      : 17/05/2007
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim i As Integer
Dim rs_Pol As New ADODB.Recordset

    
    StrSql = " SELECT gti_cabpolitica.cabpolnro,gti_cabpolitica.cabpolnivel, gti_detpolitica.detpolnro, gti_detpolitica.detpolprograma"
    StrSql = StrSql & " FROM gti_cabpolitica INNER JOIN gti_alcanpolitica ON gti_cabpolitica.cabpolnro = gti_alcanpolitica.cabpolnro INNER JOIN gti_detpolitica ON gti_alcanpolitica.detpolnro = gti_detpolitica.detpolnro"
    StrSql = StrSql & " WHERE gti_alcanpolitica.alcpolnivel = 1 "
    StrSql = StrSql & " AND gti_cabpolitica.cabpolestado = -1 "
    StrSql = StrSql & " AND gti_alcanpolitica.alcpolestado = -1 "
    StrSql = StrSql & " ORDER BY gti_cabpolitica.cabpolnivel"
    OpenRecordset StrSql, rs_Pol
    If rs_Pol.EOF Then
        If CBool(depurar) Then
            Flog.writeline Espacios(Tabulador * 1) & "Atención. No se encontraron Politicas con Alcance Global"
        End If
    End If
    Do While Not rs_Pol.EOF
            i = rs_Pol!CabPolNivel
            
            Arr_PolG(i).CabPolNro = rs_Pol!CabPolNro
            Arr_PolG(i).CabPolNivel = rs_Pol!CabPolNivel
            If Not EsNulo(rs_Pol!DetPolPrograma) Then
                Arr_PolG(i).DetPolPrograma = rs_Pol!DetPolPrograma
            End If
            Arr_PolG(i).DetPolNro = rs_Pol!DetPolNro
'            Debug.Print Arr_PolG(I).CabPolNivel, Arr_PolG(I).DetPolNro, Arr_PolG(I).DetPolPrograma
        rs_Pol.MoveNext
    Loop
    
    If rs_Pol.State = adStateOpen Then rs_Pol.Close
    Set rs_Pol = Nothing
End Sub

Public Sub Cargar_PoliticasEstructuras(ByVal aFecha As Date)
' ---------------------------------------------------------------------------------------------
' Descripcion: Carga las politicas con alcance por Estructura en el arreglo Global.
' Autor      : FGZ
' Fecha      : 17/05/2007
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim i As Integer
Dim j As Integer
Dim Nivel_Anterior As Integer
Dim rs_Pol As New ADODB.Recordset

    'Inicializo
    For i = LBound(Arr_PolE) To UBound(Arr_PolE)
        For j = 1 To 5
            Arr_PolE(i, j).CabPolNro = 0
            Arr_PolE(i, j).CabPolNivel = 0
            Arr_PolE(i, j).DetPolPrograma = 0
            Arr_PolE(i, j).DetPolNro = 0
        Next j
    Next i

    StrSql = " SELECT gti_cabpolitica.cabpolnro, gti_cabpolitica.cabpolnivel,gti_alcanpolitica.alcpolnivel, gti_alcanpolitica.alcpolorigen, gti_detpolitica.detpolnro,gti_detpolitica.detpolprograma,alcance_testr.alteOrden "
    StrSql = StrSql & " FROM gti_cabpolitica "
    StrSql = StrSql & " INNER JOIN gti_alcanpolitica ON gti_cabpolitica.cabpolnro = gti_alcanpolitica.cabpolnro "
    StrSql = StrSql & " INNER JOIN gti_detpolitica ON gti_alcanpolitica.detpolnro = gti_detpolitica.detpolnro "
    StrSql = StrSql & " INNER JOIN his_estructura ON gti_alcanpolitica.alcpolorigen = his_estructura.estrnro "
    StrSql = StrSql & " INNER JOIN alcance_tEstr ON his_estructura.tenro = alcance_tEstr.tenro "
    StrSql = StrSql & " INNER JOIN empleado ON empleado.ternro = his_estructura.ternro"
    StrSql = StrSql & " WHERE gti_alcanpolitica.alcpolnivel = 2 "
    StrSql = StrSql & " And gti_cabpolitica.cabpolestado = -1 "
    StrSql = StrSql & " And gti_alcanpolitica.alcpolestado = -1 "
    StrSql = StrSql & " And alcance_testr.tanro = 1 "
    StrSql = StrSql & " And empleado.ternro = " & Empleado.Ternro
    StrSql = StrSql & " And (his_estructura.htetdesde <= " & ConvFecha(aFecha) & ")"
    StrSql = StrSql & " And ((" & ConvFecha(aFecha) & " <= his_estructura.htethasta) or (his_estructura.htethasta is null))"
    StrSql = StrSql & " ORDER BY gti_cabpolitica.cabpolnivel, alcance_testr.AlteOrden Asc "
    OpenRecordset StrSql, rs_Pol
    If rs_Pol.EOF Then
'        If CBool(depurar) Then
'            Flog.writeline Espacios(Tabulador * 2) & "No se encontraron Politicas con Alcance Por Estructuras"
'        End If
    End If
    Nivel_Anterior = 0
    Do While Not rs_Pol.EOF
            If Nivel_Anterior <> rs_Pol!CabPolNivel Then
                j = 1
            Else
                'Esto no deberia darse pero ... controlamos por las dudas que tenga
                '   mas de 5 tipos de estructuras configuradas como politicas de alcance
                '   lo normal es 1, a veces se dá hasta 3 pero mas de eso es inmantenible y no recomendable
                If j < 5 Then
                    j = j + 1
                End If
            End If
            i = rs_Pol!CabPolNivel
            
            Arr_PolE(i, j).CabPolNro = rs_Pol!CabPolNro
            Arr_PolE(i, j).CabPolNivel = rs_Pol!CabPolNivel
            If Not EsNulo(rs_Pol!DetPolPrograma) Then
                Arr_PolE(i, j).DetPolPrograma = rs_Pol!DetPolPrograma
            End If
            Arr_PolE(i, j).DetPolNro = rs_Pol!DetPolNro
            'Debug.Print Arr_PolE(I, J).CabPolNivel, Arr_PolE(I, J).DetPolNro, Arr_PolE(I, J).DetPolPrograma
            Nivel_Anterior = i
        rs_Pol.MoveNext
    Loop
    
    If rs_Pol.State = adStateOpen Then rs_Pol.Close
    Set rs_Pol = Nothing
End Sub



Public Sub Cargar_PoliticasIndividuales()
' ---------------------------------------------------------------------------------------------
' Descripcion: Carga las politicas con alcance individual en el arreglo Global.
' Autor      : FGZ
' Fecha      : 17/05/2007
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim i As Integer
Dim rs_Pol As New ADODB.Recordset

    
    'Inicializo
    For i = LBound(Arr_PolI) To UBound(Arr_PolI)
            Arr_PolI(i).CabPolNro = 0
            Arr_PolI(i).CabPolNivel = 0
            Arr_PolI(i).DetPolPrograma = 0
            Arr_PolI(i).DetPolNro = 0
    Next i
    
    
    StrSql = " SELECT gti_cabpolitica.cabpolnro,gti_cabpolitica.cabpolnivel, gti_detpolitica.detpolnro, gti_detpolitica.detpolprograma"
    StrSql = StrSql & " FROM gti_cabpolitica INNER JOIN gti_alcanpolitica ON gti_cabpolitica.cabpolnro = gti_alcanpolitica.cabpolnro INNER JOIN gti_detpolitica ON gti_alcanpolitica.detpolnro = gti_detpolitica.detpolnro"
    StrSql = StrSql & " WHERE gti_alcanpolitica.alcpolnivel = 3 "
    StrSql = StrSql & " AND gti_cabpolitica.cabpolestado = -1 "
    StrSql = StrSql & " AND gti_alcanpolitica.alcpolestado = -1 "
    StrSql = StrSql & " AND gti_alcanpolitica.alcpolorigen = " & Empleado.Ternro
    StrSql = StrSql & " ORDER BY gti_cabpolitica.cabpolnivel "
    OpenRecordset StrSql, rs_Pol
    If rs_Pol.EOF Then
'        If CBool(depurar) Then
'            Flog.writeline Espacios(Tabulador * 2) & "No se encontraron Politicas con Alcance Individual"
'        End If
    End If
    Do While Not rs_Pol.EOF
            i = rs_Pol!CabPolNivel
            
            Arr_PolI(i).CabPolNro = rs_Pol!CabPolNro
            Arr_PolI(i).CabPolNivel = rs_Pol!CabPolNivel
            If Not EsNulo(rs_Pol!DetPolPrograma) Then
                Arr_PolI(i).DetPolPrograma = rs_Pol!DetPolPrograma
            End If
            Arr_PolI(i).DetPolNro = rs_Pol!DetPolNro
'            Debug.Print Arr_PolG(I).CabPolNivel, Arr_PolG(I).DetPolNro, Arr_PolG(I).DetPolPrograma
        rs_Pol.MoveNext
    Loop
    
    If rs_Pol.State = adStateOpen Then rs_Pol.Close
    Set rs_Pol = Nothing
End Sub

Public Sub Cargar_DetallePoliticas()
' ---------------------------------------------------------------------------------------------
' Descripcion: Carga los parametros de cada detalle de politica existentes.
' Autor      : FGZ
' Fecha      : 30/05/2007
' Ultima Mod.: FGZ - 16/04/2008
' Descripcion: la linea del where fallaba para Oracle
' Ultima Mod.: FGZ - 05/11/2008
' Descripcion: se agregaron los parametros 3 y 28
' ---------------------------------------------------------------------------------------------
Dim i As Integer
Dim rs_Pol As New ADODB.Recordset
Dim LI As Long
Dim LS As Long

On Error GoTo ME_L

    LI = 0
    LS = 0
    
    StrSql = " SELECT gti_pol_det_param.DetPolNro,gti_pol_det_param.polparamnro,gti_pol_det_param.polparamvalor FROM gti_pol_det_param "
    StrSql = StrSql & " INNER JOIN gti_pol_param ON gti_pol_det_param.polparamnro = gti_pol_param.polparamnro "
    'FGZ - 16/04/2008 se cambió esta linea porque no anda en ORACLE
    If TipoBD = 4 Then
        StrSql = StrSql & " WHERE gti_pol_det_param.polparamvalor is not null "
    Else
        StrSql = StrSql & " WHERE gti_pol_det_param.polparamvalor <> ''"
    End If
    'FGZ - 16/04/2008 se cambió esta linea porque no anda en ORACLE
    StrSql = StrSql & " ORDER BY gti_pol_det_param.detpolnro, gti_pol_param.polparamnro"
    OpenRecordset StrSql, rs_Pol
    If rs_Pol.EOF Then
        If CBool(depurar) Then
            Flog.writeline Espacios(Tabulador * 2) & "No hay detalle de politicas activos"
        End If
    Else
        rs_Pol.MoveFirst
        LI = rs_Pol!DetPolNro
        rs_Pol.MoveLast
        LS = rs_Pol!DetPolNro + 1
    End If
    ReDim Preserve Arr_DetallesPol(LI To LS) As TDetPol
    
    rs_Pol.MoveFirst
    Do While Not rs_Pol.EOF
            i = rs_Pol!DetPolNro
            Arr_DetallesPol(i).ok = True
            Select Case rs_Pol!polparamnro
            Case 1:
                Arr_DetallesPol(i).st_Opcion = IIf(Not EsNulo(rs_Pol!polparamvalor), CInt(rs_Pol!polparamvalor), 0)
            Case 2:
                Arr_DetallesPol(i).st_VentSal = IIf(Not EsNulo(rs_Pol!polparamvalor), Format(rs_Pol!polparamvalor, "0000"), "0000")
            Case 3:     'FGZ - 05/11/2008
                If Not EsNulo(rs_Pol!polparamvalor) Then
                    If UCase(rs_Pol!polparamvalor) = "SI" Or rs_Pol!polparamvalor = "-1" Or rs_Pol!polparamvalor = "1" Then
                        Arr_DetallesPol(i).st_Continua = True
                    Else
                        Arr_DetallesPol(i).st_Continua = False
                    End If
                Else
                    Arr_DetallesPol(i).st_Continua = True
                End If
            Case 4:
                Arr_DetallesPol(i).st_VentEnt = IIf(Not EsNulo(rs_Pol!polparamvalor), Format(rs_Pol!polparamvalor, "0000"), "0000")
            Case 5:
                Arr_DetallesPol(i).st_Iteraciones = IIf(Not EsNulo(rs_Pol!polparamvalor), CInt(rs_Pol!polparamvalor), 0)
            Case 6:
                Arr_DetallesPol(i).st_Tolerancia = IIf(Not EsNulo(rs_Pol!polparamvalor), Format(rs_Pol!polparamvalor, "0000"), "0000")
            Case 7:
                Arr_DetallesPol(i).st_Distancia = IIf(Not EsNulo(rs_Pol!polparamvalor), CInt(rs_Pol!polparamvalor), 0)
            Case 8:
                Arr_DetallesPol(i).st_TipoHora1 = IIf(Not EsNulo(rs_Pol!polparamvalor), CLng(rs_Pol!polparamvalor), 0)
            Case 9:
                Arr_DetallesPol(i).st_TamañoVentana = IIf(Not EsNulo(rs_Pol!polparamvalor), Format(rs_Pol!polparamvalor, "0000"), "0000")
            Case 10:
                Arr_DetallesPol(i).st_TipoDia1 = IIf(Not EsNulo(rs_Pol!polparamvalor), CInt(rs_Pol!polparamvalor), 0)
            Case 11:
                Arr_DetallesPol(i).st_CantidadDias = IIf(Not EsNulo(rs_Pol!polparamvalor), CInt(rs_Pol!polparamvalor), 0)
            Case 12:
                Arr_DetallesPol(i).st_FactorDivision = IIf(Not EsNulo(rs_Pol!polparamvalor), CInt(rs_Pol!polparamvalor), 0)
            Case 13:
                Arr_DetallesPol(i).st_Escala = IIf(Not EsNulo(rs_Pol!polparamvalor), CInt(rs_Pol!polparamvalor), 0)
            Case 14:
                Arr_DetallesPol(i).st_ModeloPago = IIf(Not EsNulo(rs_Pol!polparamvalor), CInt(rs_Pol!polparamvalor), 0)
            Case 15:
                Arr_DetallesPol(i).st_ModeloDto = IIf(Not EsNulo(rs_Pol!polparamvalor), CInt(rs_Pol!polparamvalor), 0)
            Case 16:
                Arr_DetallesPol(i).st_TipoRedondeo = IIf(Not EsNulo(rs_Pol!polparamvalor), CInt(rs_Pol!polparamvalor), 0)
            Case 17:
                Arr_DetallesPol(i).st_ListaTH = IIf(Not EsNulo(rs_Pol!polparamvalor), rs_Pol!polparamvalor, "")
            Case 18:
                Arr_DetallesPol(i).st_BaseAntiguedad = IIf(Not EsNulo(rs_Pol!polparamvalor), rs_Pol!polparamvalor, "")
            Case 19:
                Arr_DetallesPol(i).st_Factor = IIf(Not EsNulo(rs_Pol!polparamvalor), rs_Pol!polparamvalor, "")
            Case 20:
                Arr_DetallesPol(i).st_ModeloPago2 = IIf(Not EsNulo(rs_Pol!polparamvalor), rs_Pol!polparamvalor, "")
            Case 21:
                Arr_DetallesPol(i).st_ModeloDto2 = IIf(Not EsNulo(rs_Pol!polparamvalor), rs_Pol!polparamvalor, "")
            Case 22: ' Diego Rosso 12/11/2007
                Arr_DetallesPol(i).st_Modifica = IIf(Not EsNulo(rs_Pol!polparamvalor), rs_Pol!polparamvalor, "")
            Case 23:    'FGZ - 31/01/2008
                Arr_DetallesPol(i).st_ListaF1 = IIf(Not EsNulo(rs_Pol!polparamvalor), rs_Pol!polparamvalor, "")
            Case 24:    'FGZ - 31/01/2008
                Arr_DetallesPol(i).st_ListaF2 = IIf(Not EsNulo(rs_Pol!polparamvalor), rs_Pol!polparamvalor, "")
            Case 25:    'FGZ - 31/01/2008
                Arr_DetallesPol(i).st_ListaF3 = IIf(Not EsNulo(rs_Pol!polparamvalor), rs_Pol!polparamvalor, "")
            Case 26:    'FGZ - 18/06/2008
                Arr_DetallesPol(i).st_TipoHora2 = IIf(Not EsNulo(rs_Pol!polparamvalor), rs_Pol!polparamvalor, "")
            Case 27:    'FGZ - 18/06/2008
                Arr_DetallesPol(i).st_Minutos = IIf(Not EsNulo(rs_Pol!polparamvalor), rs_Pol!polparamvalor, "")
            Case 28:    'FGZ - 05/11/2008
                Arr_DetallesPol(i).st_Anormalidad = IIf(Not EsNulo(rs_Pol!polparamvalor), rs_Pol!polparamvalor, "")
            Case 29:    'FGZ - 05/06/2009
                Arr_DetallesPol(i).st_Dias = IIf(Not EsNulo(rs_Pol!polparamvalor), rs_Pol!polparamvalor, "")
            Case 30:    'FGZ - 18/01/2010
                Arr_DetallesPol(i).st_Tolerancia2 = IIf(Not EsNulo(rs_Pol!polparamvalor), rs_Pol!polparamvalor, "")
            Case 31:    'FGZ - 18/01/2010
                Arr_DetallesPol(i).st_Tolerancia3 = IIf(Not EsNulo(rs_Pol!polparamvalor), rs_Pol!polparamvalor, "")
            Case 32:    'FGZ - 18/01/2010
                Arr_DetallesPol(i).st_TipoHora3 = IIf(Not EsNulo(rs_Pol!polparamvalor), rs_Pol!polparamvalor, "")
            Case 33:    'FGZ - 18/01/2010
                Arr_DetallesPol(i).st_Anormalidad2 = IIf(Not EsNulo(rs_Pol!polparamvalor), rs_Pol!polparamvalor, "")
            Case 34:    'FGZ - 18/01/2010
                Arr_DetallesPol(i).st_Anormalidad3 = IIf(Not EsNulo(rs_Pol!polparamvalor), rs_Pol!polparamvalor, "")
            Case 35:    '04/03/2010
                Arr_DetallesPol(i).st_Dia = IIf(Not EsNulo(rs_Pol!polparamvalor), rs_Pol!polparamvalor, "")
            Case 36:    '04/03/2010
                Arr_DetallesPol(i).st_Mes = IIf(Not EsNulo(rs_Pol!polparamvalor), rs_Pol!polparamvalor, "")
            Case 37:    'FGZ - 03/08/2010
                Arr_DetallesPol(i).st_Anormalidad4 = IIf(Not EsNulo(rs_Pol!polparamvalor), rs_Pol!polparamvalor, "")
            Case 38:    'FGZ - 03/08/2010
                Arr_DetallesPol(i).st_Anormalidad5 = IIf(Not EsNulo(rs_Pol!polparamvalor), rs_Pol!polparamvalor, "")
            Case 39:    'FGZ - 03/08/2010
                Arr_DetallesPol(i).st_Anormalidad6 = IIf(Not EsNulo(rs_Pol!polparamvalor), rs_Pol!polparamvalor, "")
            Case 40:    'FGZ - 03/08/2010
                Arr_DetallesPol(i).st_TipoHora4 = IIf(Not EsNulo(rs_Pol!polparamvalor), rs_Pol!polparamvalor, "")
            Case 41:    'FGZ - 03/08/2010
                Arr_DetallesPol(i).st_TipoHora5 = IIf(Not EsNulo(rs_Pol!polparamvalor), rs_Pol!polparamvalor, "")
            Case 42:    'FGZ - 03/08/2010
                Arr_DetallesPol(i).st_TipoHora6 = IIf(Not EsNulo(rs_Pol!polparamvalor), rs_Pol!polparamvalor, "")
            Case 43:    'EAM- (v5.43 - PRC01) Se agrego parametro que faltaba setear
                Arr_DetallesPol(i).st_Factor2 = IIf(Not EsNulo(rs_Pol!polparamvalor), rs_Pol!polparamvalor, 0)
            Case 46:    'EAM (v5.10)- 12/02/2014
                Arr_DetallesPol(i).st_modeloAsiento = IIf(Not EsNulo(rs_Pol!polparamvalor), rs_Pol!polparamvalor, 0)
            Case 47:    'FGZ- 07/10/2014
                Arr_DetallesPol(i).st_TipoMotivo = IIf(Not EsNulo(rs_Pol!polparamvalor), rs_Pol!polparamvalor, 0)
            Case 48:    'FGZ- 08/10/2014
                Arr_DetallesPol(i).st_TipoEstructura = IIf(Not EsNulo(rs_Pol!polparamvalor), rs_Pol!polparamvalor, 0)
            Case 49:    'FGZ- 08/10/2014
                Arr_DetallesPol(i).st_TipoPeriodo = IIf(Not EsNulo(rs_Pol!polparamvalor), rs_Pol!polparamvalor, 0)
            Case Else
            
            End Select
        
        rs_Pol.MoveNext
    Loop
    
    If rs_Pol.State = adStateOpen Then rs_Pol.Close
    Set rs_Pol = Nothing
Exit Sub

ME_L:
        If CBool(depurar) Then
            Flog.writeline Espacios(Tabulador * 2) & "Error Cargando parametros de politica. Detalle " & i
        End If
End Sub


Function ReemplazarCampos(ByVal query As String) As String
    Dim campo As String
    Dim valor
    
    Do Until InStr(1, query, "@@") = 0
        campo = Mid(query, InStr(1, query, "@@") + 2, Len(query))
        campo = Mid(campo, 1, InStr(1, campo, "@@") - 1)
        
        Select Case UCase(campo)
        Case "EMPLEADO":
            valor = Empleado.Ternro
        Case "FECHA":
            valor = ConvFecha(p_fecha)
            'Valor = "'" & Format(p_fecha, "YYYY/MM/DD") & "'"
        Case "LUNES":
            valor = "'Lunes'"
        Case "MARTES":
            valor = "'Martes'"
        Case "MIERCOLES":
            valor = "'Miercoles'"
        Case "JUEVES":
            valor = "'Jueves'"
        Case "VIERNES":
            valor = "'Viernes'"
        Case "SABADO":
            valor = "'Sabado'"
        Case "DOMINGO":
            valor = "'DOMINGO'"
        Case "MONDAY":
            valor = "'MONDAY'"
        Case "TUESDAY":
            valor = "'TUESDAY'"
        Case "WEDNESDAY":
            valor = "'WEDNESDAY'"
        Case "THURSDAY":
            valor = "'THURSDAY'"
        Case "FRIDAY":
            valor = "'Friday'"
        Case "SATURDAY":
            valor = "'Saturday'"
        Case "Sunday":
            valor = "'Sunday'"
        Case Else
        End Select
        query = Replace(query, "@@" & campo & "@@", valor)
        
    Loop
    ReemplazarCampos = query
End Function

Function ReemplazarCamposSMT(ByVal query As String) As String
    Dim campo As String
    Dim valor
    
    Do Until InStr(1, query, "@@") = 0
        campo = Mid(query, InStr(1, query, "@@") + 2, Len(query))
        campo = Mid(campo, 1, InStr(1, campo, "@@") - 1)
        
        Select Case UCase(campo)
        Case "EMPLEADO":
            valor = Empleado.Ternro
        Case "FECHA":
            valor = "'" & Format(p_fecha, "YYYY/MM/DD") & "'"
        Case "LUNES":
            valor = "'Lunes'"
        Case "MARTES":
            valor = "'Martes'"
        Case "MIERCOLES":
            valor = "'Miercoles'"
        Case "JUEVES":
            valor = "'Jueves'"
        Case "VIERNES":
            valor = "'Viernes'"
        Case "SABADO":
            valor = "'Sabado'"
        Case "DOMINGO":
            valor = "'DOMINGO'"
        Case "MONDAY":
            valor = "'MONDAY'"
        Case "TUESDAY":
            valor = "'TUESDAY'"
        Case "WEDNESDAY":
            valor = "'WEDNESDAY'"
        Case "THURSDAY":
            valor = "'THURSDAY'"
        Case "FRIDAY":
            valor = "'Friday'"
        Case "SATURDAY":
            valor = "'Saturday'"
        Case "Sunday":
            valor = "'Sunday'"
        Case Else
        End Select
        query = Replace(query, "@@" & campo & "@@", valor)
        
    Loop
    ReemplazarCamposSMT = query
End Function


Public Sub Restar_Horas(ByVal Fecha_Inicio As Date, ByVal hora_inicio As String, ByVal Fecha_Fin As Date, ByVal hora_fin As String, ByRef TotDias As Integer, ByRef tothoras As Integer, ByRef TotMin As Integer)
'------------------------------------------------------------------------------------------
'Descripcion:   Calcula la cantidad horas minutos y dias
'Autor:         FGZ
'Fecha:         04/07/2005
'Ult. Modif:
'------------------------------------------------------------------------------------------
Dim total As Integer
Dim cantdias  As Integer
Dim canthoras As Integer
Dim Dia   As Integer '  cantidad de minutos en un dia
Dim Hora As Integer   ' cantidad de minutos en una hora

    Dia = 1440
    Hora = 60
    canthoras = (Int(Mid(hora_fin, 1, 2)) * Hora + _
                   Int(Mid(hora_fin, 3, 2))) - _
                  (Int(Mid(hora_inicio, 1, 2)) * Hora + _
                   Int(Mid(hora_inicio, 3, 2)))
    cantdias = DateDiff("d", Fecha_Inicio, Fecha_Fin) * Dia
    
    total = cantdias + canthoras
    TotDias = Int(total / Dia)
    tothoras = Int((total Mod Dia) / Hora)
    TotMin = (total Mod Hora)
End Sub


Public Sub bus_EscalaAjuste(ByVal NroGrilla As Long, ByVal Cordenada As Long, ByRef HsValida As Double, ByRef HsDescuento As Double)
' ---------------------------------------------------------------------------------------------
' Descripcion: Busca en escala los parametros para realizar ajuste.
' Autor      : FGZ
' Fecha      : 18/01/2008
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Valor_Grilla(10) As Boolean ' Elemento de una coordenada de una grilla
Dim tipoBus As Long
Dim Concnro As Long
Dim prog As Long

Dim tdinteger3 As Integer

Dim ValAnt As Single
Dim Busq As Integer

Dim j As Integer
Dim antig As Boolean
Dim pvariable As Boolean
Dim pvar As Integer
Dim ant As Integer
Dim Continuar As Boolean
Dim parametros(5) As Long
Dim grilla_val(10) As Boolean     ' para alojar los valores de:  valgrilla.val(i)

Dim vgrcoor_ant As Long
Dim vgrcoor_pvar As Long

Dim rs_valgrilla As New ADODB.Recordset
Dim rs_cabgrilla As New ADODB.Recordset
Dim rs_tbase As New ADODB.Recordset
Dim TipoBase As Long

Dim NroBusqueda As Long

Dim antdia As Long
Dim antmes As Long
Dim antanio As Long
Dim q As Integer

'Dim Aux_Dias_trab As Double

Dim ValorCoord As Single
Dim Encontro As Boolean
Dim Encontro2 As Boolean

'Dim VersionBaseAntig As Integer
'Dim Habiles As Integer
'Dim ExcluyeFeriados As Boolean
Dim rs As New ADODB.Recordset

   
    StrSql = "SELECT * FROM cabgrilla " & _
             " WHERE cabgrilla.cgrnro = " & NroGrilla
    OpenRecordset StrSql, rs_cabgrilla
    If rs_cabgrilla.EOF Then
        'La escala de Ajustes no esta configurada
        Flog.writeline "La escala de Ajustes no esta configurada. Escala " & NroGrilla
        Exit Sub
    End If
    
    'El tipo Base variable(15) se considera para que trabaje igual que antiguedad
    'TipoBase = 15
    TipoBase = 4
    
    Continuar = True
    ant = 1
    Do While (ant <= rs_cabgrilla!cgrdimension) And Continuar
        Select Case ant
        Case 1:
            StrSql = "SELECT tipoprog.tprogbase FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_1
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBase = rs_tbase!tprogbase Then
                    Continuar = False
                Else
                    ant = ant + 1
                End If
            End If
            
        Case 2:
            StrSql = "SELECT tipoprog.tprogbase FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_2
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBase = rs_tbase!tprogbase Then
                    Continuar = False
                Else
                    ant = ant + 1
                End If
            End If
        Case 3:
            StrSql = "SELECT tipoprog.tprogbase FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_3
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBase = rs_tbase!tprogbase Then
                    Continuar = False
                Else
                    ant = ant + 1
                End If
            End If
        Case 4:
            StrSql = "SELECT tipoprog.tprogbase FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_4
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBase = rs_tbase!tprogbase Then
                    Continuar = False
                Else
                    ant = ant + 1
                End If
            End If
        Case 5:
            StrSql = "SELECT tipoprog.tprogbase FROM programa " & _
                     " INNER JOIN tipoprog ON programa.tprognro = tipoprog.tprognro" & _
                     " WHERE programa.prognro = " & rs_cabgrilla!grparnro_5
            OpenRecordset StrSql, rs_tbase
        
            If Not rs_tbase.EOF Then
                If TipoBase = rs_tbase!tprogbase Then
                    Continuar = False
                Else
                    ant = ant + 1
                End If
            End If
        End Select
    Loop


    For j = 1 To rs_cabgrilla!cgrdimension
        Select Case j
        Case ant:
            parametros(j) = Cordenada
        Case Else:
            Select Case j
            Case 1:
                'Call bus_Estructura(rs_cabgrilla!grparnro_1)
            Case 2:
                'Call bus_Estructura(rs_cabgrilla!grparnro_2)
            Case 3:
                'Call bus_Estructura(rs_cabgrilla!grparnro_3)
            Case 4:
                'Call bus_Estructura(rs_cabgrilla!grparnro_4)
            Case 5:
                'Call bus_Estructura(rs_cabgrilla!grparnro_5)
            End Select
            parametros(j) = valor
        End Select
    Next j

    'Busco la primera antiguedad de la escala menor a la del empleado
    ' de abajo hacia arriba
    StrSql = "SELECT * FROM valgrilla WHERE cgrnro = " & NroGrilla
    For j = 1 To rs_cabgrilla!cgrdimension
        If j <> ant Then
            StrSql = StrSql & " AND vgrcoor_" & j & "= " & parametros(j)
        End If
    Next j
        StrSql = StrSql & " ORDER BY vgrcoor_" & ant & " DESC "
    OpenRecordset StrSql, rs_valgrilla


    Encontro = False
    Do While Not rs_valgrilla.EOF And (Not Encontro Or Not Encontro2)
        Select Case ant
        Case 1:
            If parametros(ant) >= rs_valgrilla!vgrcoor_1 Then
                 If rs_valgrilla!vgrvalor <> 0 Then
                    If rs_valgrilla!vgrorden = 1 Then
                        HsValida = rs_valgrilla!vgrvalor
                        Encontro = True
                    End If
                    If rs_valgrilla!vgrorden = 2 Then
                        HsDescuento = rs_valgrilla!vgrvalor
                        Encontro2 = True
                    End If
                 End If
            End If
        Case 2:
            If parametros(ant) >= rs_valgrilla!vgrcoor_2 Then
                 If rs_valgrilla!vgrvalor <> 0 Then
                    If rs_valgrilla!vgrorden = 1 Then
                        HsValida = rs_valgrilla!vgrvalor
                        Encontro = True
                    End If
                    If rs_valgrilla!vgrorden = 2 Then
                        HsDescuento = rs_valgrilla!vgrvalor
                        Encontro2 = True
                    End If
                 End If
            End If
        Case 3:
            If parametros(ant) >= rs_valgrilla!vgrcoor_3 Then
                 If rs_valgrilla!vgrvalor <> 0 Then
                    If rs_valgrilla!vgrorden = 1 Then
                        HsValida = rs_valgrilla!vgrvalor
                        Encontro = True
                    End If
                    If rs_valgrilla!vgrorden = 2 Then
                        HsDescuento = rs_valgrilla!vgrvalor
                        Encontro2 = True
                    End If
                 End If
            End If
        Case 4:
            If parametros(ant) >= rs_valgrilla!vgrcoor_4 Then
                 If rs_valgrilla!vgrvalor <> 0 Then
                    If rs_valgrilla!vgrorden = 1 Then
                        HsValida = rs_valgrilla!vgrvalor
                        Encontro = True
                    End If
                    If rs_valgrilla!vgrorden = 2 Then
                        HsDescuento = rs_valgrilla!vgrvalor
                        Encontro2 = True
                    End If
                 End If
            End If
        Case 5:
            If parametros(ant) >= rs_valgrilla!vgrcoor_5 Then
                 If rs_valgrilla!vgrvalor <> 0 Then
                    If rs_valgrilla!vgrorden = 1 Then
                        HsValida = rs_valgrilla!vgrvalor
                        Encontro = True
                    End If
                    If rs_valgrilla!vgrorden = 2 Then
                        HsDescuento = rs_valgrilla!vgrvalor
                        Encontro2 = True
                    End If
                 End If
            End If
        End Select
                    
        rs_valgrilla.MoveNext
    Loop
    
' Cierro todo y libero
If rs_cabgrilla.State = adStateOpen Then rs_cabgrilla.Close
If rs_valgrilla.State = adStateOpen Then rs_valgrilla.Close

Set rs_cabgrilla = Nothing
Set rs_valgrilla = Nothing
End Sub


Private Sub Politica541(ByVal p_ternro As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Topea horas segun un topeo definido.
'
'
'       Horas al 50%: Desborde realizado en:
'               Días laborables y El sábado (Laborable o no laborable) hasta las 13hs.

'       Horas al 100%: Desborde realizado en:
'               Días Feriados,
'               No laborables,
'               Domingos (Laborable o no laborable) y
'               El sábado (Laborable o no laborable) después de las 13hs.
' Autor: Diego Rosso
' Fecha: 19/03/2008
' Ultima modificacion:
'                   28/03/2008 - Diego Rosso - Se cambio 52 por 45 (tipo de hora) cuando busca las horas adicionales.
'                                               ya que en MV tienen 45 como hora adicional
'                                               Cuando genera horas al 50 o al 100 borra las adicionales.
' --------------------------------------------------------------
Dim th50 As Integer
Dim th100 As Integer
Dim thJStaff As Integer
Dim objRs As New ADODB.Recordset
Dim rs_HC As New ADODB.Recordset
Dim rs_HC2 As New ADODB.Recordset
Dim rs_Aux As New ADODB.Recordset
Dim Dia
Dim thConvenio ' Tipo de hora convenia
Dim TopeSemanal  As Integer
Dim DiasSemana   As Integer
Dim Proporcion
'Dim TopeAFecha
Dim Opcion       As Integer
Dim ListaTH
Dim FechaDesde
Dim FechaHasta
Dim FechaDiaAnt
Dim HsConvenioAcum
Dim DiaDeCorte
Dim objFeriado As New Feriado
Dim CantHoras100
Dim CantHoras50
Dim UltimoDia
'Dim DiasaDomingo
'Dim DiasACorte
Dim Dias As Integer
Dim Horas As Integer
Dim Minutos As Integer
Dim Faltan
Dim Sobran
Dim objRs541 As New ADODB.Recordset
Dim rs_JP As New ADODB.Recordset
Dim Pasa
Dim SegundaParte As Boolean

'Dim EsHoraNormal As Boolean
Dim RestoHsOriginales
Dim SumaA50
Dim SumaA100
'Dim SumaAConvenio
'Dim Cantidad_Registros As Long
Dim i As Long
Dim j As Long
Dim ListaTHOrigen As String

'---------------------------------
Dim Reg_T As TipoTurno
Dim Justif As TJustif
Dim Turno As TTurno
Dim Emp As Templeado
Dim Reg_Dia As TDia
Dim Siguiente_Dia As THT
Dim JorProg
Dim JorStaff
Dim XX  As Integer
Dim Ausencias
Dim Adicionales
Dim AcumAdicionales
Dim Diferencia
Dim DiferenciaAnt
Dim SaldoDifAnterior
'Dim CantDiasSemana
Dim THNoAut As Long
Dim THAut As Long
'---------------------------------

   Call SetearParametrosPolitica(Detalle, ok)

   Opcion = st_Opcion  'Version de la politica
   ListaTH = st_ListaTH 'Lista de horas configuradas
   thConvenio = st_TipoHora1 'Tipo de hora convenio
    
    
   th100 = 6
   th50 = 2
   thJStaff = 45    'Para Multivoice
   'thJStaff = 51   'Para probar en 8000
   
   DiaDeCorte = 20
   CantHoras100 = 0
   CantHoras50 = 0
    
   Select Case Opcion
   Case 1: '
       
       'Averiguo el dia de la semana en el que estoy parado
        Dia = Weekday(p_fecha)
    
    
       'Averiguo el Tope semanal
        
       StrSql = " SELECT thestrexcsem, thestrlimsem FROM tiphora_estr "
       StrSql = StrSql & " INNER JOIN his_estructura ON tiphora_estr.estrnro = his_estructura.estrnro AND "
       StrSql = StrSql & " his_estructura.tenro = tiphora_estr.tenro AND his_estructura.ternro = " & p_ternro
       StrSql = StrSql & " WHERE thnro = " & thConvenio & " AND his_estructura.htethasta IS NULL "
       OpenRecordset StrSql, objRs
       If Not objRs.EOF Then
            TopeSemanal = objRs!thestrlimsem
       Else
            'NO ESTA CONFIGURADO EL TOPE
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "NO ESTA CONFIGURADO EL TOPE SEMANAL"
            End If
            Exit Sub
       End If
        
       
        
        'Cuantos dias hay desde el dia que estoy procesando hasta el anterior lunes.
        'Lunes = 2
       DiasSemana = Dia - 2
        
       'Calcular la proporcion del tope por dia
        Proporcion = (TopeSemanal / 7)
        
        
        'Armo la semana
        If DiasSemana >= 0 Then
            FechaDesde = DateAdd("D", DiasSemana * -1, p_fecha) 'Lunes
            UltimoDia = DateAdd("D", 6, FechaDesde) 'Domingo
        Else
            FechaDesde = DateAdd("D", -6, p_fecha) 'Lunes
            UltimoDia = p_fecha  'Domingo
        
        End If
             
'        SegundaParte = False
'        If (Day(UltimoDia) <= DiaDeCorte) Or (Day(FechaDesde) >= DiaDeCorte) Then '(2)
'            'El dia de corte (20 del mes) no entra en la semana
'
'            'Tope de horas permitido para la semana actual. El CONFIGURADO
'                TopeAFecha = TopeSemanal
'
'              CantDiasSemana = 6
'
'        Else '(2)
'            If (Day(p_fecha) > DiaDeCorte) Then
'                'Si la fecha que estoy procesando es mayor a la fecha de corte
'                'Cuento la cantidad de dias desde el 20 hasta el fin de la semana
'                'y saco el proporcional para esos dias
'                DiasaDomingo = (Day(UltimoDia) - DiaDeCorte)
'
'                 'Tope de horas permitido para la semana actual.
'                 TopeAFecha = Proporcion * DiasaDomingo
'                 SegundaParte = True
'
'                 CantDiasSemana = DiasaDomingo
'            Else
'                'Desde el lunes al corte
'                DiasACorte = DiaDeCorte - Day(FechaDesde) + 1
'
'                'Tope de horas permitido para la semana actual.
'                TopeAFecha = Proporcion * DiasACorte
'
'                CantDiasSemana = DiasACorte
'          End If
'
'        End If '(2)
'
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "TOPE SEMANAL CONFIGURADO :" & TopeSemanal
        End If
            
         'Traer la cantidad de hs convenio al dia anterior al que estoy procesando. thConvenio
         'Siempre que ese dia no sea anterior al dia lunes de la semana que estoy procesando.
         'If Not SegundaParte Then
            FechaDiaAnt = DateAdd("D", -1, p_fecha)
       ' Else
          '  If Day(p_fecha) = DiaDeCorte + 1 Then
        '       FechaDiaAnt = DateAdd("D", 0, p_fecha)
        '    Else
         '       FechaDiaAnt = DateAdd("D", -1, p_fecha)
        '    End If
        'End If
             
             
        
        '------------------------------------------------------------------------------
        'INSERTO EL TOPE SEMANAL EN EL TIPO DE HS CONVENIO
        'SI LO TIENE LO ACTUALIZO.
                    
        'Grabo las hs convenio
        If TopeSemanal <> 0 Then
            StrSql = " SELECT * FROM gti_acumdiario WHERE thnro = " & thConvenio & " AND ternro = " & p_ternro & " AND adfecha = " & ConvFecha(p_fecha)
            OpenRecordset StrSql, objRs541
            If Not objRs541.EOF Then
                StrSql = " UPDATE gti_acumdiario SET adcanthoras = " & Round(TopeSemanal, 3)
                StrSql = StrSql & " WHERE thnro = " & thConvenio & " AND ternro = " & p_ternro & " AND adfecha = " & ConvFecha(p_fecha)
                objConn.Execute StrSql, , adExecuteNoRecords
            Else
                StrSql = " INSERT INTO gti_acumdiario(adfecha,ternro,thnro,adcanthoras,admanual,advalido) " & _
                         " VALUES (" & ConvFecha(p_fecha) & "," & p_ternro & "," & thConvenio & "," & Round(TopeSemanal, 3) & "," & _
                         CInt(False) & "," & CInt(True) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
        End If
        
        
        '------------------------------------------------------------------------------
        
        '------------------------------------------------------------------------------
        'Calculo la jornada programada=Carga horaria=Semana de trabajo (Lun a Dom)
        '
        AcumAdicionales = 0
        Ausencias = 0
        JorProg = 0
        For XX = 0 To 6
            Call Buscar_Turno_Nuevo(DateAdd("D", XX, FechaDesde), p_ternro, depurar, Reg_T, Turno, Justif, Emp)
            
            If Reg_T.tiene_turno Then
                'Call Buscar_Dia_Nuevo(DateAdd("D", XX, FechaDesde), Fecha_Inicio, Reg_T.Nro_Turno, p_ternro, Reg_T.P_Asignacion, depurar, Reg_Dia)
                Call Buscar_Dia_Nuevo(DateAdd("D", XX, FechaDesde), FechaDesde, Reg_T.Nro_Turno, p_ternro, Reg_T.P_Asignacion, depurar, Reg_Dia)
                If Not Reg_Dia.Dia_Libre Then
                    'SUMO LA CANTIDAD DE HORAS Y LO ACUMULO
                     StrSql = " SELECT diacanthoras FROM gti_dias WHERE (dianro = " & Reg_Dia.Nro_Dia & ")"
                     OpenRecordset StrSql, objRs
                     If Not objRs.EOF Then
                        JorProg = JorProg + objRs!diacanthoras
                     End If
                End If
            End If
        Next XX
        
        'Busco las adicionales desde el lunes hasta el dia que estoy procesando
        'y las acumulo para utilizarlas en el calculo de Jornada Staff
        XX = 0
        Do While DateAdd("D", XX, FechaDesde) <= p_fecha
             StrSql = " SELECT gti_acumdiario.* FROM gti_acumdiario"
             StrSql = StrSql & " WHERE ternro = " & p_ternro
             StrSql = StrSql & " AND adfecha = " & ConvFecha(DateAdd("D", XX, FechaDesde))
             StrSql = StrSql & " AND gti_acumdiario.thnro = " & thJStaff
             StrSql = StrSql & " Order BY  gti_acumdiario.thnro"
             OpenRecordset StrSql, rs_HC
             If Not rs_HC.EOF Then
                AcumAdicionales = AcumAdicionales + rs_HC!adcanthoras
             End If
             
             XX = XX + 1
        Loop
        
        
         'Busco la cantidad de horas de ausencia para el dia
         StrSql = " SELECT gti_acumdiario.* FROM gti_acumdiario"
         StrSql = StrSql & " WHERE ternro = " & p_ternro
         StrSql = StrSql & " AND adfecha = " & ConvFecha(p_fecha)
         StrSql = StrSql & " AND gti_acumdiario.thnro  in (13,14,41)"
         StrSql = StrSql & " Order BY  gti_acumdiario.thnro"
         OpenRecordset StrSql, rs_HC
         If Not rs_HC.EOF Then
            Ausencias = Ausencias + rs_HC!adcanthoras
         Else
            Ausencias = 0
         End If
        
        'Calculo la jornada Staff
        JorStaff = 0
        'JorStaff = JorProg + AcumAdicionales
        JorStaff = JorProg + AcumAdicionales - Ausencias
        'FGZ - 14/11/2008 - si se pasa del tope ==> le dejo el tope
        If JorStaff > TopeSemanal Then
            JorStaff = TopeSemanal
        End If
        
        'Guardo la Jornada Programada
        If JorProg <> 0 Then 'Tipo de hora Jornada Programada = 63 fijo
            StrSql = " SELECT * FROM gti_acumdiario WHERE thnro =63 AND ternro = " & p_ternro & " AND adfecha = " & ConvFecha(p_fecha)
            OpenRecordset StrSql, objRs541
            
            If Not objRs541.EOF Then
                StrSql = " UPDATE gti_acumdiario SET adcanthoras = " & Round(JorProg, 3)
                StrSql = StrSql & " WHERE thnro = 63 AND ternro = " & p_ternro & " AND adfecha = " & ConvFecha(p_fecha)
                objConn.Execute StrSql, , adExecuteNoRecords
            Else
                StrSql = " INSERT INTO gti_acumdiario(adfecha,ternro,thnro,adcanthoras,admanual,advalido) " & _
                         " VALUES (" & ConvFecha(p_fecha) & "," & p_ternro & ",63," & Round(JorProg, 3) & "," & _
                         CInt(False) & "," & CInt(True) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
        End If
          
        
          
        If JorStaff <> 0 Then
           StrSql = " SELECT * FROM gti_acumdiario WHERE thnro = 65 AND ternro = " & p_ternro & " AND adfecha = " & ConvFecha(p_fecha)
           OpenRecordset StrSql, objRs541
           
           If Not objRs541.EOF Then
               StrSql = " UPDATE gti_acumdiario SET adcanthoras = " & Round(JorStaff, 3)
               StrSql = StrSql & " WHERE thnro = 65 AND ternro = " & p_ternro & " AND adfecha = " & ConvFecha(p_fecha)
               objConn.Execute StrSql, , adExecuteNoRecords
           Else
               StrSql = " INSERT INTO gti_acumdiario(adfecha,ternro,thnro,adcanthoras,admanual,advalido) " & _
                        " VALUES (" & ConvFecha(p_fecha) & "," & p_ternro & ",65," & Round(JorStaff, 3) & "," & _
                        CInt(False) & "," & CInt(True) & ")"
               objConn.Execute StrSql, , adExecuteNoRecords
           End If
        End If
        '------------------------------------------------------------------------------
        'Busco la cantidad de horas de adicionales para el dia
        StrSql = " SELECT gti_acumdiario.*, tiphora.thnro noaut FROM gti_acumdiario "
        StrSql = StrSql & " LEFT JOIN tiphora ON gti_acumdiario.thnro = tiphora.thautpor "
        StrSql = StrSql & " WHERE ternro = " & p_ternro
        StrSql = StrSql & " AND adfecha = " & ConvFecha(p_fecha)
        StrSql = StrSql & " AND gti_acumdiario.thnro = " & thJStaff
        StrSql = StrSql & " Order BY  gti_acumdiario.thnro"
        OpenRecordset StrSql, rs_HC
        If Not rs_HC.EOF Then
            Adicionales = Adicionales + rs_HC!adcanthoras
            THNoAut = IIf(Not EsNulo(rs_HC!noaut), rs_HC!noaut, 0)
            THAut = rs_HC!thnro
        Else
            Adicionales = 0
            THNoAut = 0
            THAut = thJStaff
        End If
        
          
          If p_fecha = FechaDesde Then      'Lunes
             
             DiferenciaAnt = 0
             
             'Calcular la diferencia actual
             Diferencia = TopeSemanal - (JorProg + Adicionales - Ausencias)
             
             'FGZ - 26/01/2010 --------------------
             If (JorProg >= TopeSemanal) And Adicionales = 0 Then
                Diferencia = 0
             End If
             'FGZ - 26/01/2010 --------------------
             
             
            '--- FGZ - 14/11/2008 ------------------------------------
                'Si la diferencia me da negativo debo llevarla a cero y las horas que faltan acumular
                'Convertirlas en 50 o 100
                If Diferencia < 0 Then
                    'Le saco el signo y son las horas que faltan acumular
                    Faltan = Abs(Diferencia)
                    
                    'Llevo la diferencia a cero
                    Diferencia = 0
                    
                    'Generar horas. Al 50 o al 100 pero las que faltan
                    
                    ' SumaAConvenio = Sobran
                            
                     If esFeriado Then '(A)
                        'Si es feriado todas las horas van al 100%
                        CantHoras100 = CantHoras100 + Faltan
                        SumaA100 = Faltan
                       ' RestoHsOriginales = RestoHsOriginales - SumaA100
                     Else '(A)
                     'No es Feriado
                         If Not (Weekday(p_fecha) = 7) Then '(B)
                            'Si no es sabado
                             If Dia_Libre Then 'Siempre que sea dia libre va al 100 salvo los sabados '(C)
                                CantHoras100 = CantHoras100 + Faltan
                                SumaA100 = Faltan
                              '  RestoHsOriginales = RestoHsOriginales - SumaA100
                             Else '(C)
                                'Si no es dia libre va al 50 pero si es domingo va al 100
                                 If (Weekday(p_fecha) = 1) Then '(D)
                                     CantHoras100 = CantHoras100 + Faltan
                                    ' RestoHsOriginales = RestoHsOriginales - CantHoras100
                                     SumaA100 = Faltan
                                 Else '(D)
                                     CantHoras50 = CantHoras50 + Faltan
                                     SumaA50 = Faltan
                                    ' RestoHsOriginales = RestoHsOriginales - SumaA50
                                 End If '(D)
                             End If '(C)
                         Else 'If Not (Weekday(p_fecha) = 7) Then'(B)
                           'Es sabado
                            StrSql = " SELECT * FROM gti_horcumplido "
                            StrSql = StrSql & " WHERE ternro = " & p_ternro
                            StrSql = StrSql & " AND hordesde = " & ConvFecha(p_fecha)
                            StrSql = StrSql & " AND horhasta = " & ConvFecha(p_fecha)
                            'StrSql = StrSql & " AND thnro  in (" & ListaTH & ")"
                            'ListaTHOrigen = rs_HC!thnro & "," & IIf(Not EsNulo(rs_HC!noaut), rs_HC!noaut, 0)
                            'ListaTHOrigen = rs_HC!thnro & "," & THNoAut
                            ListaTHOrigen = THAut & "," & THNoAut
                            StrSql = StrSql & " AND thnro  in (" & ListaTHOrigen & ")"
                            StrSql = StrSql & " Order BY  thnro"
                            OpenRecordset StrSql, rs_HC2
                            
                            Do While Not rs_HC2.EOF
                               Pasa = 0
                               If CInt(Mid(rs_HC2!horhoradesde, 1, 4)) <= 1300 Then
                                  hora_desde = rs_HC2!horhoradesde
                                  If CInt(Mid(rs_HC2!horhorahasta, 1, 4)) <= 1300 Then
                                     'Si trabajo todas las horas antes de las 13 se guardan al 50% las que faltaban guardar
                                     'O sea las que superaron la diferencia
                                     CantHoras50 = CantHoras50 + Faltan
                                     SumaA50 = Faltan
                                    ' RestoHsOriginales = RestoHsOriginales + SumaA50
                                  Else
                                     hora_hasta = "1300"
                                     Call Restar_Horas(p_fecha, hora_desde, p_fecha, hora_hasta, Dias, Horas, Minutos)
                                     Pasa = CantHoras50 + (Dias * 24) + (Horas + (Minutos / 60))
                                          
                                          If Pasa < Faltan Then
                                             'Si las horas al 50 no superan las que faltaban acumular busco las horas al 100%
                                             'y guardo las horas al 50
                                              CantHoras50 = CantHoras50 + Pasa
                                              SumaA50 = Pasa
                                            '  RestoHsOriginales = RestoHsOriginales + SumaA50
                                              'Actualizo la cantidad q faltan
                                              Faltan = Faltan - Pasa
                                              
                                              hora_desde = "1300"
                                              hora_hasta = rs_HC2!horhorahasta
                                              Call Restar_Horas(p_fecha, hora_desde, p_fecha, hora_hasta, Dias, Horas, Minutos)
                                              Pasa = CantHoras100 + (Dias * 24) + (Horas + (Minutos / 60))
                                              If Pasa < Faltan Then
                                                  CantHoras100 = CantHoras100 + Pasa
                                                  SumaA100 = Pasa
                                                  RestoHsOriginales = RestoHsOriginales + SumaA100
                                              Else
                                                  CantHoras100 = CantHoras100 + Faltan
                                                  SumaA100 = Faltan
                                                 ' RestoHsOriginales = RestoHsOriginales + SumaA100
                                              End If
                                          Else
                                              'Si la cantidad de horas del HC superan las que faltan guardo solo las que faltan
                                              'Y no calculo en 100% ya que no me quedan horas para guardar
                                               
                                               'CantHoras50 = Faltan
                                               
                                               'chino avanzado
                                               CantHoras100 = CantHoras100 + (Faltan + Sobran) - Pasa
                                               CantHoras50 = CantHoras50 + (Faltan - ((Faltan + Sobran) - Pasa))
                                               'RestoHsOriginales = RestoHsOriginales - CantHoras100 - CantHoras50
                                               'RestoHsOriginales = RestoHsOriginales + CantHoras50
                                               SumaA100 = (Faltan + Sobran) - Pasa
                                               SumaA50 = (Faltan - ((Faltan + Sobran) - Pasa))
                                              ' RestoHsOriginales = RestoHsOriginales - SumaA100 - SumaA50
                                          End If
                                                    
                                      End If
                                  Else
                                     CantHoras100 = CantHoras100 + Faltan
                                     SumaA100 = CantHoras100
                                     'RestoHsOriginales = RestoHsOriginales + SumaA100
                                     RestoHsOriginales = RestoHsOriginales - SumaA100
                                  End If ' CInt(Mid(rs_HC!horhoradesde, 1, 2)) <= 13
                             rs_HC2.MoveNext
                            Loop 'rs_HC2.EOF
                         End If '(B)
                     End If '(A)
                Else 'Si diferencia es mayor a cero
                    
                    'Si entra aca es menor a cero
                    
                    'Grabo la diferencia
                    StrSql = " SELECT * FROM gti_acumdiario WHERE thnro =64 AND ternro = " & p_ternro & " AND adfecha = " & ConvFecha(p_fecha)
                    OpenRecordset StrSql, objRs541
            
                    If Not objRs541.EOF Then
                        StrSql = " UPDATE gti_acumdiario SET adcanthoras = " & Round(Diferencia, 3)
                        StrSql = StrSql & " WHERE thnro = 64 AND ternro = " & p_ternro & " AND adfecha = " & ConvFecha(p_fecha)
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        StrSql = " INSERT INTO gti_acumdiario(adfecha,ternro,thnro,adcanthoras,admanual,advalido) " & _
                                 " VALUES (" & ConvFecha(p_fecha) & "," & p_ternro & ",64," & Round(Diferencia, 3) & "," & _
                                 CInt(False) & "," & CInt(True) & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                    End If
                End If
             '--- FGZ - 14/11/2008 -----------------------------------
             
'             'Grabo la diferencia
'             StrSql = " SELECT * FROM gti_acumdiario WHERE thnro = 64 AND ternro = " & p_ternro & " AND adfecha = " & ConvFecha(p_fecha)
'             OpenRecordset StrSql, objRs541
'             If Not objRs541.EOF Then
'                StrSql = " UPDATE gti_acumdiario SET adcanthoras = " & Round(Diferencia, 3)
'                StrSql = StrSql & " WHERE thnro = 64 AND ternro = " & p_ternro & " AND adfecha = " & ConvFecha(p_fecha)
'                objConn.Execute StrSql, , adExecuteNoRecords
'             Else
'                StrSql = " INSERT INTO gti_acumdiario(adfecha,ternro,thnro,adcanthoras,admanual,advalido) " & _
'                         " VALUES (" & ConvFecha(p_fecha) & "," & p_ternro & ",64," & Round(Diferencia, 3) & "," & _
'                          CInt(False) & "," & CInt(True) & ")"
'                objConn.Execute StrSql, , adExecuteNoRecords
'             End If
             
             
          Else 'p_fecha = FechaDesde Then  'Lunes
             
             'Si no es Lunes busco la diferencia del dia anterior
             StrSql = " SELECT gti_acumdiario.* FROM gti_acumdiario"
             StrSql = StrSql & " WHERE ternro = " & p_ternro
             StrSql = StrSql & " AND adfecha = " & ConvFecha(FechaDiaAnt)
             StrSql = StrSql & " AND gti_acumdiario.thnro = 64 "
             StrSql = StrSql & " Order BY  gti_acumdiario.thnro"
             OpenRecordset StrSql, rs_Aux
             If Not rs_Aux.EOF Then
                DiferenciaAnt = rs_Aux!adcanthoras
             Else
                DiferenciaAnt = 0
             End If
             
             If DiferenciaAnt = 0 Then 'Si diferencia anterior es cero y no es lunes genero hs 50 y 100
                'Generar horas
             
                'Objetos Feriados
                Set objFeriado.Conexion = objConn
                Set objFeriado.ConexionTraza = CnTraza
                
                SumaA50 = 0
                CantHoras100 = 0
                
                esFeriado = objFeriado.Feriado(p_fecha, p_ternro, depurar)
                If depurar Then
                   Flog.writeline Espacios(Tabulador * 3) & "Feriado? " & esFeriado
                End If
                
        '          If HsConvenioAcum >= TopeAFecha Then '(4)
        
                If esFeriado Then '(A)
        '          'Si es feriado todas las horas van al 100%
                   CantHoras100 = CantHoras100 + Adicionales
                
                Else '(A)
                    'No es Feriado
                     If Not (Weekday(p_fecha) = 7) Then '(B)
                        'Si no es sabado
                         If Dia_Libre Then 'Siempre que sea dia libre va al 100 salvo los sabados '(C)
                            CantHoras100 = CantHoras100 + Adicionales
                         Else '(C)
                            'Si no es dia libre va al 50 pero si es domingo va al 100
                            If (Weekday(p_fecha) = 1) Then '(D)
                                CantHoras100 = CantHoras100 + Adicionales
                            Else '(D)
                               CantHoras50 = CantHoras50 + Adicionales
                            End If '(D)
                         End If '(C) 'If Dia_Libre
                    Else '(B)
                        'Es sabado. Busco el Horario que hizo
                         StrSql = " SELECT * FROM gti_horcumplido "
                         StrSql = StrSql & " WHERE ternro = " & p_ternro
                         StrSql = StrSql & " AND hordesde = " & ConvFecha(p_fecha)
                         StrSql = StrSql & " AND horhasta = " & ConvFecha(p_fecha)
                         'StrSql = StrSql & " AND thnro  in (" & ListaTH & ")"
                         'ListaTHOrigen = rs_HC!thnro & "," & IIf(Not EsNulo(rs_HC!noaut), rs_HC!noaut, 0)
                         'ListaTHOrigen = rs_HC!thnro & "," & THNoAut
                         ListaTHOrigen = THAut & "," & THNoAut
                         StrSql = StrSql & " AND thnro  in (" & ListaTHOrigen & ")"
                         StrSql = StrSql & " Order BY  thnro"
                         OpenRecordset StrSql, rs_HC2
                         Do While Not rs_HC2.EOF
                            If CInt(Mid(rs_HC2!horhoradesde, 1, 4)) <= 1300 Then '(E)
                               hora_desde = rs_HC2!horhoradesde
                               If CInt(Mid(rs_HC2!horhorahasta, 1, 4)) <= 1300 Then '(F)
                                  hora_hasta = rs_HC2!horhorahasta
                                  Call Restar_Horas(p_fecha, hora_desde, p_fecha, hora_hasta, Dias, Horas, Minutos)
                                  CantHoras50 = CantHoras50 + (Dias * 24) + (Horas + (Minutos / 60))
                               Else '(F)
                                  hora_hasta = "1300"
                                  Call Restar_Horas(p_fecha, hora_desde, p_fecha, hora_hasta, Dias, Horas, Minutos)
                                  CantHoras50 = CantHoras50 + (Dias * 24) + (Horas + (Minutos / 60))
                                  
                                  hora_desde = "1300"
                                  hora_hasta = rs_HC2!horhorahasta
                                  Call Restar_Horas(p_fecha, hora_desde, p_fecha, hora_hasta, Dias, Horas, Minutos)
                                  CantHoras100 = CantHoras100 + (Dias * 24) + (Horas + (Minutos / 60))
                               End If '(f)
                            Else '(E)
                               hora_desde = rs_HC2!horhoradesde
                               hora_hasta = rs_HC2!horhorahasta
                               Call Restar_Horas(p_fecha, hora_desde, p_fecha, hora_hasta, Dias, Horas, Minutos)
                               CantHoras100 = CantHoras100 + (Dias * 24) + (Horas + (Minutos / 60))
                            End If ' CInt(Mid(rs_HC!horhoradesde, 1, 2)) <= 13 '(E)
                          rs_HC2.MoveNext
                          Loop 'rs_HC2.EOF
                    End If '(B)
               End If 'Es feriado '(A)
                
                
             Else 'If DiferenciaAnt = 0 Then 'Si diferencia anterior es cero y no es lunes genero hs 50 y 100
           
                  
                'Calculo la nueva diferencia
                Diferencia = DiferenciaAnt + Ausencias - Adicionales
                
                'Si la diferencia me da negativo debo llevarla a cero y las horas que faltan acumular
                'Convertirlas en 50 o 100
                If Diferencia < 0 Then
                
                    'Le saco el signo y son las horas que faltan acumular
                    Faltan = Abs(Diferencia)
                    
                    'Llevo la diferencia a cero
                    Diferencia = 0
                    
                    
                    'Generar horas. Al 50 o al 100 pero las que faltan
                    
                    ' SumaAConvenio = Sobran
                            
                     If esFeriado Then '(A)
                        'Si es feriado todas las horas van al 100%
                        CantHoras100 = CantHoras100 + Faltan
                        SumaA100 = Faltan
                       ' RestoHsOriginales = RestoHsOriginales - SumaA100
                     Else '(A)
                     'No es Feriado
                         If Not (Weekday(p_fecha) = 7) Then '(B)
                            'Si no es sabado
                             If Dia_Libre Then 'Siempre que sea dia libre va al 100 salvo los sabados '(C)
                                CantHoras100 = CantHoras100 + Faltan
                                SumaA100 = Faltan
                              '  RestoHsOriginales = RestoHsOriginales - SumaA100
                             Else '(C)
                                'Si no es dia libre va al 50 pero si es domingo va al 100
                                 If (Weekday(p_fecha) = 1) Then '(D)
                                     CantHoras100 = CantHoras100 + Faltan
                                    ' RestoHsOriginales = RestoHsOriginales - CantHoras100
                                     SumaA100 = Faltan
                                 Else '(D)
                                     CantHoras50 = CantHoras50 + Faltan
                                     SumaA50 = Faltan
                                    ' RestoHsOriginales = RestoHsOriginales - SumaA50
                                 End If '(D)
                             End If '(C)
                         Else 'If Not (Weekday(p_fecha) = 7) Then'(B)
                           'Es sabado
                            StrSql = " SELECT * FROM gti_horcumplido "
                            StrSql = StrSql & " WHERE ternro = " & p_ternro
                            StrSql = StrSql & " AND hordesde = " & ConvFecha(p_fecha)
                            StrSql = StrSql & " AND horhasta = " & ConvFecha(p_fecha)
                            'StrSql = StrSql & " AND thnro  in (" & ListaTH & ")"
                            'ListaTHOrigen = rs_HC!thnro & "," & IIf(Not EsNulo(rs_HC!noaut), rs_HC!noaut, 0)
                            'ListaTHOrigen = rs_HC!thnro & "," & THNoAut
                            ListaTHOrigen = THAut & "," & THNoAut
                            StrSql = StrSql & " AND thnro  in (" & ListaTHOrigen & ")"
                            StrSql = StrSql & " Order BY  thnro"
                            OpenRecordset StrSql, rs_HC2
                            
                            SaldoDifAnterior = DiferenciaAnt
                            Do While Not rs_HC2.EOF
                                'todo lo que se trabaje antes de las 13 y que no se halla saldado de la diferencia del dia anterior se debe pagar al 50
                                ' el resto va a 100
                               If CInt(Mid(rs_HC2!horhoradesde, 1, 4)) <= 1300 Then
                                  hora_desde = rs_HC2!horhoradesde
                                  If CInt(Mid(rs_HC2!horhorahasta, 1, 4)) <= 1300 Then
                                     'Si trabajo todas las horas antes de las 13 se guardan al 50% las que faltaban guardar
                                     'O sea las que superaron la diferencia
                                     CantHoras50 = CantHoras50 + Faltan
                                     SumaA50 = Faltan
                                    ' RestoHsOriginales = RestoHsOriginales + SumaA50
                                  Else
                                        hora_hasta = "1300"
                                        Call Restar_Horas(p_fecha, hora_desde, p_fecha, hora_hasta, Dias, Horas, Minutos)
                                        Pasa = CantHoras50 + (Dias * 24) + (Horas + (Minutos / 60))
                                          
                                        If SaldoDifAnterior > 0 Then
                                            'tengo que usar las que pasan para
                                            If Pasa < SaldoDifAnterior Then
                                                SaldoDifAnterior = SaldoDifAnterior - Pasa
                                                Pasa = 0
                                            Else
                                                Pasa = Pasa - SaldoDifAnterior
                                                SaldoDifAnterior = 0
                                            End If
                                        End If
                                          
                                          If Pasa < Faltan Then
                                             If Pasa > 0 Then
                                                 'Si las horas al 50 no superan las que faltaban acumular busco las horas al 100%
                                                 'y guardo las horas al 50
                                                  CantHoras50 = CantHoras50 + Pasa
                                                  SumaA50 = Pasa
                                                  'RestoHsOriginales = RestoHsOriginales + SumaA50
                                                  'Actualizo la cantidad q faltan
                                                  Faltan = Faltan - Pasa
                                              End If
                                              hora_desde = "1300"
                                              hora_hasta = rs_HC2!horhorahasta
                                              Call Restar_Horas(p_fecha, hora_desde, p_fecha, hora_hasta, Dias, Horas, Minutos)
                                              Pasa = CantHoras100 + (Dias * 24) + (Horas + (Minutos / 60))
                                              If Pasa < Faltan Then
                                                  CantHoras100 = CantHoras100 + Pasa
                                                  SumaA100 = Pasa
                                                  RestoHsOriginales = RestoHsOriginales + SumaA100
                                              Else
                                                  CantHoras100 = CantHoras100 + Faltan
                                                  SumaA100 = Faltan
                                                 ' RestoHsOriginales = RestoHsOriginales + SumaA100
                                              End If
                                          Else
                                              'Si la cantidad de horas del HC superan las que faltan guardo solo las que faltan
                                              'Y no calculo en 100% ya que no me quedan horas para guardar
                                               
                                               'CantHoras50 = Faltan
                                               
'                                               'chino avanzado
'                                               CantHoras100 = CantHoras100 + (Faltan + Sobran) - Pasa
'                                               CantHoras50 = CantHoras50 + (Faltan - ((Faltan + Sobran) - Pasa))
'                                               'RestoHsOriginales = RestoHsOriginales - CantHoras100 - CantHoras50
'                                               'RestoHsOriginales = RestoHsOriginales + CantHoras50
'                                               SumaA100 = (Faltan + Sobran) - Pasa
'                                               SumaA50 = (Faltan - ((Faltan + Sobran) - Pasa))
'                                              ' RestoHsOriginales = RestoHsOriginales - SumaA100 - SumaA50
                                              
                                              'FGZ - 08/01/2009
                                               CantHoras50 = CantHoras50 + Faltan
                                               CantHoras100 = CantHoras100
                                               SumaA50 = Faltan
                                               SumaA100 = 0
                                          End If
                                                    
                                      End If
                                  Else
                                     CantHoras100 = CantHoras100 + Faltan
                                     SumaA100 = CantHoras100
                                     'RestoHsOriginales = RestoHsOriginales + SumaA100
                                     RestoHsOriginales = RestoHsOriginales - SumaA100
                                  End If ' CInt(Mid(rs_HC!horhoradesde, 1, 2)) <= 13
                             rs_HC2.MoveNext
                            Loop 'rs_HC2.EOF
                         End If '(B)
                     End If '(A)
                    
                    
                Else 'Si diferencia es mayor a cero
                    
                    'Si entra aca es menor a cero
                    
                    'Grabo la diferencia
                    StrSql = " SELECT * FROM gti_acumdiario WHERE thnro =64 AND ternro = " & p_ternro & " AND adfecha = " & ConvFecha(p_fecha)
                    OpenRecordset StrSql, objRs541
            
                    If Not objRs541.EOF Then
                        StrSql = " UPDATE gti_acumdiario SET adcanthoras = " & Round(Diferencia, 3)
                        StrSql = StrSql & " WHERE thnro = 64 AND ternro = " & p_ternro & " AND adfecha = " & ConvFecha(p_fecha)
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        StrSql = " INSERT INTO gti_acumdiario(adfecha,ternro,thnro,adcanthoras,admanual,advalido) " & _
                                 " VALUES (" & ConvFecha(p_fecha) & "," & p_ternro & ",64," & Round(Diferencia, 3) & "," & _
                                 CInt(False) & "," & CInt(True) & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                    End If
        
                    
                End If
                
             End If
                
          End If
     
          
  
            If CantHoras100 <> 0 Then
               StrSql = " SELECT * FROM gti_acumdiario WHERE thnro = " & th100 & " AND ternro = " & p_ternro & " AND adfecha = " & ConvFecha(p_fecha)
               OpenRecordset StrSql, objRs541
                        
                If Not objRs541.EOF Then
                    StrSql = " UPDATE gti_acumdiario SET adcanthoras = " & Round(objRs541!adcanthoras + CantHoras100, 3)
                    StrSql = StrSql & " WHERE thnro = " & th100 & " AND ternro = " & p_ternro & " AND adfecha = " & ConvFecha(p_fecha)
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    StrSql = " INSERT INTO gti_acumdiario(adfecha,ternro,thnro,adcanthoras,admanual,advalido) " & _
                             " VALUES (" & ConvFecha(p_fecha) & "," & p_ternro & "," & th100 & "," & Round(CantHoras100, 3) & "," & _
                             CInt(False) & "," & CInt(True) & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                End If
                
                'Borro las adicionales
                'FGZ - 04/03/2009 - le agregué el control de negativos ---------
                If (Adicionales - CantHoras100) < 0 Then
                    StrSql = " UPDATE gti_acumdiario SET adcanthoras = 0"
                Else
                    StrSql = " UPDATE gti_acumdiario SET adcanthoras = " & Round(Adicionales - CantHoras100, 3)
                End If
                'FGZ - 04/03/2009 - le agregué el control de negativos ---------
                StrSql = StrSql & " WHERE thnro = " & thJStaff & " AND ternro = " & p_ternro & " AND adfecha = " & ConvFecha(p_fecha) ' para Multivoice
                objConn.Execute StrSql, , adExecuteNoRecords
                
            End If 'If CantHoras100 <> 0
            
            If CantHoras50 <> 0 Then
               StrSql = " SELECT * FROM gti_acumdiario WHERE thnro = " & th50 & " AND ternro = " & p_ternro & " AND adfecha = " & ConvFecha(p_fecha)
               OpenRecordset StrSql, objRs541
                        
                If Not objRs541.EOF Then
                    StrSql = " UPDATE gti_acumdiario SET adcanthoras = " & Round(objRs541!adcanthoras + CantHoras50, 3)
                    StrSql = StrSql & " WHERE thnro = " & th50 & " AND ternro = " & p_ternro & " AND adfecha = " & ConvFecha(p_fecha)
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    StrSql = " INSERT INTO gti_acumdiario(adfecha,ternro,thnro,adcanthoras,admanual,advalido) " & _
                             " VALUES (" & ConvFecha(p_fecha) & "," & p_ternro & "," & th50 & "," & Round(CantHoras50, 3) & "," & _
                             CInt(False) & "," & CInt(True) & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                End If
                
                'Borro las adicionales
                'FGZ - 24/02/2009 - le agregaue el control de negativos ---------
                'StrSql = " UPDATE gti_acumdiario SET adcanthoras = " & Round(abAdicionales - CantHoras50 - CantHoras100, 3)
                If (Adicionales - CantHoras50 - CantHoras100) < 0 Then
                    StrSql = " UPDATE gti_acumdiario SET adcanthoras = 0 "
                Else
                    StrSql = " UPDATE gti_acumdiario SET adcanthoras = " & Round(Adicionales - CantHoras50 - CantHoras100, 3)
                End If
                'FGZ - 24/02/2009 - le agregaue el control de negativos ---------
                StrSql = StrSql & " WHERE thnro = " & thJStaff & " AND ternro = " & p_ternro & " AND adfecha = " & ConvFecha(p_fecha) 'para multivoice
                objConn.Execute StrSql, , adExecuteNoRecords
                
            End If '  If CantHoras50
            
   Case 2:
   Case Else
   End Select

'Cierro y libero
    If rs_Aux.State = adStateOpen Then rs_Aux.Close
    Set rs_Aux = Nothing
    If rs_HC.State = adStateOpen Then rs_HC.Close
    Set rs_HC = Nothing
    If rs_HC2.State = adStateOpen Then rs_HC2.Close
    Set rs_HC2 = Nothing
    If rs_JP.State = adStateOpen Then rs_JP.Close
    Set rs_JP = Nothing
    
    If objRs.State = adStateOpen Then objRs.Close
    Set objRs = Nothing
    If objRs541.State = adStateOpen Then objRs541.Close
    Set objRs541 = Nothing
End Sub





Public Function Cantidad_Reg_Obligatorias() As Integer
' ---------------------------------------------------------------------------------------------
' Descripcion: Calcula la cantidad de registraciones obligatorias para el empleado en el dia.
' Autor      : FGZ
' Fecha      : 20/05/2008
' Ultima Mod.:
' ---------------------------------------------------------------------------------------------
Dim Reg_Oblig As Integer
Dim rs As New ADODB.Recordset

    Reg_Oblig = 0
    StrSql = "SELECT count(entrada) as reg FROM " & TTempWFDia
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        Reg_Oblig = rs!reg
    End If
    If (Tiene_Justif) And (Not No_Trabaja_just) Then
        If Tipo_de_Justificacion = 2 Then 'Justificacion parcial fija
            'Unicamente hay que restar 2 registraciones si la cantidad de horas justificadas es mayor a la cantidad de horas de un par del turno
            Call Revisar_Justif(Reg_Oblig)
        Else
            'no resto nada
        End If
    End If
    Cantidad_Reg_Obligatorias = Reg_Oblig
   
If rs.State = adStateOpen Then rs.Close
Set rs = Nothing
End Function

Sub ImprimirTexto(ByVal Texto, ByVal Archivo, ByVal Longitud, ByVal Derecha)
' ---------------------------------------------------------------------------------------------
' Descripcion: Rutina genérica para imprimir un TEXTO, de una LONGITUD determinada.
'              'Se completa con espacios
' Autor      : FGZ
' Fecha      : 27/06/2008
' Ultima Mod.:
' ---------------------------------------------------------------------------------------------
Dim cadena
Dim txt
Dim u
Dim longTexto
    
    If IsNull(Texto) Then
        longTexto = 1
        cadena = " "
    Else
        longTexto = Len(Texto)
        cadena = CStr(Texto)
    End If
    
    u = CInt(Longitud) - longTexto
    If u <= 0 Then
        Archivo.Write Left(cadena, Longitud)
    Else
        If Derecha Then
            Archivo.Write cadena & String(u, " ")
        Else
            Archivo.Write String(u, " ") & cadena
        End If
    End If

End Sub
Sub imprimirTextoConCeros(Texto, Archivo, Longitud, Derecha)
' ---------------------------------------------------------------------------------------------
' Descripcion: Rutina genérica para imprimir un TEXTO, de una LONGITUD determinada.
'              Se completa con 0's
' Autor      : FGZ
' Fecha      : 27/06/2008
' Ultima Mod.:
' ---------------------------------------------------------------------------------------------
Dim cadena
Dim txt
Dim u
Dim longTexto
    
    If IsNull(Texto) Then
        longTexto = 1
        cadena = "0"
    Else
        longTexto = Len(Texto)
        cadena = CStr(Texto)
    End If
    
    u = CInt(Longitud) - longTexto
    If u <= 0 Then
        Archivo.Write cadena
    Else
        If Derecha Then
            Archivo.Write cadena & String(u, "0")
        Else
            Archivo.Write String(u, "0") & cadena
        End If
    End If

End Sub


Public Sub CalcularInterseccionHoras(ByVal Desde1 As Date, ByVal HorDesde1 As String, ByVal Hasta1 As Date, ByVal HorHasta1 As String, ByVal Desde2 As Date, ByVal HorDesde2 As String, ByVal Hasta2 As Date, ByVal HorHasta2 As String, ByVal Maximo As Double, ByRef Cant As Double, ByRef R_FecDesde As Date, ByRef R_HorDesde As String, ByRef R_FecHasta As Date, ByRef R_HorHasta As String, ByRef Caso As String, ByRef HC1 As Double, ByRef HC2 As Double)
' ---------------------------------------------------------------------------------------------
' Descripcion: Calcula la cantidad de horas entre dos rangos de horas desde-hasta intersectados
' Autor      : FGZ
' Fecha      : 15/08/2008
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim VHora As String
Dim CantHsTotales As Double

    'Calculo la cantidad de horas entre hordesde1 y horhasta1
    objFechasHoras.RestaHs Desde1, HorDesde1, Hasta1, HorHasta1, Tdias, Thoras, Tmin
    CantHsTotales = (Tdias * 24) + (Thoras + (Tmin / 60))


    'Calculo el desde y hasta
    Caso = ""
    Cant = 0
    HC1 = 0
    HC2 = 0
    R_HorDesde = ""
    R_HorHasta = ""
    R_FecDesde = Desde1
    R_FecHasta = Hasta1
    If (HorDesde1 <= HorDesde2) And (HorDesde2 <= HorHasta1) And (HorHasta2 >= HorHasta1) Then
        '-----D1------H1---------
        '---------D2------H2-----
            'Debe quedar ---D2-----H1------
        R_HorDesde = HorDesde2
        R_HorHasta = HorHasta1
        R_FecDesde = Desde2
        R_FecHasta = Hasta1
        Caso = "A"
        
        objFechasHoras.RestaHs R_FecDesde, R_HorDesde, R_FecHasta, R_HorHasta, Tdias, Thoras, Tmin
        Cant = (Tdias * 24) + (Thoras + (Tmin / 60))
        
        If Maximo >= Cant Then
            objFechasHoras.RestaHs Desde1, HorDesde1, R_FecDesde, R_HorDesde, Tdias, Thoras, Tmin
            HC1 = (Tdias * 24) + (Thoras + (Tmin / 60))
            HC2 = 0
        Else
            'objFechasHoras.RestaHs Desde1, HorDesde1, R_FecDesde, R_HorDesde, tdias, thoras, tmin
            objFechasHoras.RestaHs Desde1, HorDesde1, R_FecDesde, R_HorDesde, Tdias, Thoras, Tmin
            HC1 = (Tdias * 24) + (Thoras + (Tmin / 60))
            
            'HC2 = Cant - Maximo
            HC2 = CantHsTotales - Maximo - HC1
            Cant = Maximo
            
            Call Calcula_Hora(CSng(HC2), R_FecHasta, VHora, R_FecHasta)
            Call objFechasHoras.RestaXHoras(R_FecHasta, R_HorHasta, VHora, R_FecHasta, R_HorHasta)
            If Not objFechasHoras.ValidarHora(R_HorHasta) Then
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "Hora Invalida " & R_HorHasta
                End If
                Exit Sub
            End If
        End If
    End If
    
    
    If (HorDesde1 < HorDesde2) And (HorDesde2 <= HorHasta1) And (HorHasta2 <= HorHasta1) Then
        '-----D1----------H1-----
        '---------D2---H2--------
            'Debe quedar ---D2-----H2----
        R_HorDesde = HorDesde2
        R_HorHasta = HorHasta2
        R_FecDesde = Desde2
        R_FecHasta = Hasta2
        Caso = "B"
        
        objFechasHoras.RestaHs R_FecDesde, R_HorDesde, R_FecHasta, R_HorHasta, Tdias, Thoras, Tmin
        Cant = (Tdias * 24) + (Thoras + (Tmin / 60))
        If Maximo >= Cant Then
            objFechasHoras.RestaHs Desde1, HorDesde1, R_FecDesde, R_HorDesde, Tdias, Thoras, Tmin
            HC1 = (Tdias * 24) + (Thoras + (Tmin / 60))
            
            objFechasHoras.RestaHs R_FecHasta, R_HorHasta, Hasta1, HorHasta1, Tdias, Thoras, Tmin
            HC2 = (Tdias * 24) + (Thoras + (Tmin / 60))
        Else
            objFechasHoras.RestaHs Desde1, HorDesde1, R_FecDesde, R_HorDesde, Tdias, Thoras, Tmin
            HC1 = (Tdias * 24) + (Thoras + (Tmin / 60))
            'HC2 = Cant - Maximo
            HC2 = CantHsTotales - Maximo - HC1
            Cant = Maximo
            
            Call Calcula_Hora(CSng(HC1), R_FecHasta, VHora, R_FecHasta)
            Call objFechasHoras.RestaXHoras(R_FecHasta, R_HorHasta, VHora, R_FecHasta, R_HorHasta)
            If Not objFechasHoras.ValidarHora(R_HorHasta) Then
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "Hora Invalida " & R_HorHasta
                End If
                Exit Sub
            End If
        End If
    End If
    
    If (HorDesde2 <= HorDesde1) And (HorDesde1 <= HorHasta2) And (HorHasta2 <= HorHasta1) Then
        '--------D1------H1---------
        '-----D2------H2------------
            'Debe quedar ---D1-----H2------
        R_HorDesde = HorDesde1
        R_HorHasta = HorHasta2
        R_FecDesde = Desde1
        R_FecHasta = Hasta2
        Caso = "C"
        
        objFechasHoras.RestaHs R_FecDesde, R_HorDesde, R_FecHasta, R_HorHasta, Tdias, Thoras, Tmin
        Cant = (Tdias * 24) + (Thoras + (Tmin / 60))
    
        If Maximo >= Cant Then
            objFechasHoras.RestaHs R_FecHasta, R_HorHasta, Hasta1, HorHasta1, Tdias, Thoras, Tmin
            HC1 = (Tdias * 24) + (Thoras + (Tmin / 60))
            
            HC2 = 0
        Else
            HC2 = 0
            HC1 = Cant - Maximo
            Cant = Maximo
            
            Call Calcula_Hora(CSng(HC1), R_FecHasta, VHora, R_FecHasta)
            Call objFechasHoras.RestaXHoras(R_FecHasta, R_HorHasta, VHora, R_FecHasta, R_HorHasta)
            If Not objFechasHoras.ValidarHora(R_HorHasta) Then
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "Hora Invalida " & R_HorHasta
                End If
                Exit Sub
            End If
        End If
    End If
    
    If (HorDesde2 <= HorDesde1) And (HorDesde1 <= HorHasta2) And (HorHasta2 >= HorHasta1) Then
        '--------D1------H1---------
        '-----D2-----------H2-------
            'Debe quedar ---D1-----H1------
        R_HorDesde = HorDesde1
        R_HorHasta = HorHasta1
        R_FecDesde = Desde1
        R_FecHasta = Hasta1
        Caso = "D"
        
        objFechasHoras.RestaHs R_FecDesde, R_HorDesde, Hasta1, HorHasta1, Tdias, Thoras, Tmin
        Cant = (Tdias * 24) + (Thoras + (Tmin / 60))
    
        If Maximo >= Cant Then
            HC1 = 0
            HC2 = 0
        Else
            HC2 = 0
            HC1 = Cant - Maximo
            Cant = Maximo
            
            Call Calcula_Hora(CSng(HC1), R_FecHasta, VHora, R_FecHasta)
            Call objFechasHoras.RestaXHoras(R_FecHasta, R_HorHasta, VHora, R_FecHasta, R_HorHasta)
            If Not objFechasHoras.ValidarHora(R_HorHasta) Then
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "Hora Invalida " & R_HorHasta
                End If
                Exit Sub
            End If
        End If
    End If
    
    
    'FGZ - 10/05/2013 ------------------
    '   Redondeo a 2 decimales
    Cant = Round(Cant, 2)
    'FGZ - 10/05/2013 ------------------
End Sub



Public Sub CalcularInterseccionHoras2(ByVal Desde1 As Date, ByVal HorDesde1 As String, ByVal Hasta1 As Date, ByVal HorHasta1 As String, ByVal Desde2 As Date, ByVal HorDesde2 As String, ByVal Hasta2 As Date, ByVal HorHasta2 As String, ByVal Maximo As Double, ByRef Cant As Double, ByRef R_FecDesde As Date, ByRef R_HorDesde As String, ByRef R_FecHasta As Date, ByRef R_HorHasta As String, ByRef Caso As String, ByRef HC1 As Double, ByRef HC2 As Double)
' ---------------------------------------------------------------------------------------------
' Descripcion: Calcula la cantidad de horas entre dos rangos de horas desde-hasta intersectados
' Autor      : FGZ
' Fecha      : 15/08/2008
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim VHora As String
Dim CantHsTotales As Double

'Para rango 1 fuera de interseccion
Dim FD1 As Date
Dim FH1 As Date
Dim HD1 As String
Dim HH1 As String
Dim C1 As Double
'Para rango dentro de interseccion
Dim FD2 As Date
Dim FH2 As Date
Dim HD2 As String
Dim HH2 As String
Dim C2 As Double
'Para rango 2 fuera de interseccion
Dim FD3 As Date
Dim FH3 As Date
Dim HD3 As String
Dim HH3 As String
Dim C3 As Double

'Ejemplo
'--------------D1---------------------------H1-----
'---------------------D2---------H2----------------
'rango 1: -----[-------]---------------------------
'rango 2: -------------[---------]-----------------
'rango 3: -----------------------[-----------]-----


    'Calculo la cantidad de horas entre hordesde1 y horhasta1
    objFechasHoras.RestaHs Desde1, HorDesde1, Hasta1, HorHasta1, Tdias, Thoras, Tmin
    CantHsTotales = (Tdias * 24) + (Thoras + (Tmin / 60))


    'Calculo el desde y hasta
    Caso = ""
    Cant = 0
    HC1 = 0
    HC2 = 0
    R_HorDesde = ""
    R_HorHasta = ""
    R_FecDesde = Desde1
    R_FecHasta = Hasta1
    If (HorDesde1 <= HorDesde2) And (HorDesde2 <= HorHasta1) And (HorHasta2 >= HorHasta1) Then
        '-----D1------H1---------
        '---------D2------H2-----
            'Debe quedar ---D2-----H1------
        R_HorDesde = HorDesde2
        R_HorHasta = HorHasta1
        R_FecDesde = Desde2
        R_FecHasta = Hasta1
        Caso = "A"
        
        objFechasHoras.RestaHs R_FecDesde, R_HorDesde, R_FecHasta, R_HorHasta, Tdias, Thoras, Tmin
        Cant = (Tdias * 24) + (Thoras + (Tmin / 60))
        
        If Maximo >= Cant Then
            objFechasHoras.RestaHs Desde1, HorDesde1, R_FecDesde, R_HorDesde, Tdias, Thoras, Tmin
            HC1 = (Tdias * 24) + (Thoras + (Tmin / 60))
            HC2 = 0
        Else
            'objFechasHoras.RestaHs Desde1, HorDesde1, R_FecDesde, R_HorDesde, tdias, thoras, tmin
            objFechasHoras.RestaHs Desde1, HorDesde1, R_FecDesde, R_HorDesde, Tdias, Thoras, Tmin
            HC1 = (Tdias * 24) + (Thoras + (Tmin / 60))
            
            'HC2 = Cant - Maximo
            HC2 = CantHsTotales - Maximo - HC1
            Cant = Maximo
            
            Call Calcula_Hora(CSng(HC2), R_FecHasta, VHora, R_FecHasta)
            Call objFechasHoras.RestaXHoras(R_FecHasta, R_HorHasta, VHora, R_FecHasta, R_HorHasta)
            If Not objFechasHoras.ValidarHora(R_HorHasta) Then
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "Hora Invalida " & R_HorHasta
                End If
                Exit Sub
            End If
        End If
        
        'Resultados (D1 a D2)
        FD1 = Desde1
        HD1 = HorDesde1
        FH1 = Desde2
        HH1 = HorDesde2
        objFechasHoras.RestaHs FD1, HD1, FH1, HH1, Tdias, Thoras, Tmin
        C1 = (Tdias * 24) + (Thoras + (Tmin / 60))
        
        'Resultados (D2 a H1)
        FD2 = Desde2
        HD2 = HorDesde2
        FH2 = Hasta1
        HH2 = HorHasta1
        objFechasHoras.RestaHs FD2, HD2, FH2, HH2, Tdias, Thoras, Tmin
        C2 = (Tdias * 24) + (Thoras + (Tmin / 60))

        'Resultados (H1 a H2)
        FD3 = Hasta1
        HD3 = HorHasta1
        FH3 = Hasta2
        HH3 = HorHasta2
        objFechasHoras.RestaHs FD3, HD3, FH3, HH3, Tdias, Thoras, Tmin
        C3 = (Tdias * 24) + (Thoras + (Tmin / 60))
    End If
    
    
    If (HorDesde1 < HorDesde2) And (HorDesde2 <= HorHasta1) And (HorHasta2 <= HorHasta1) Then
        '-----D1----------H1-----
        '---------D2---H2--------
            'Debe quedar ---D2-----H2----
        R_HorDesde = HorDesde2
        R_HorHasta = HorHasta2
        R_FecDesde = Desde2
        R_FecHasta = Hasta2
        Caso = "B"
        
        objFechasHoras.RestaHs R_FecDesde, R_HorDesde, R_FecHasta, R_HorHasta, Tdias, Thoras, Tmin
        Cant = (Tdias * 24) + (Thoras + (Tmin / 60))
        If Maximo >= Cant Then
            objFechasHoras.RestaHs Desde1, HorDesde1, R_FecDesde, R_HorDesde, Tdias, Thoras, Tmin
            HC1 = (Tdias * 24) + (Thoras + (Tmin / 60))
            
            objFechasHoras.RestaHs R_FecHasta, R_HorHasta, Hasta1, HorHasta1, Tdias, Thoras, Tmin
            HC2 = (Tdias * 24) + (Thoras + (Tmin / 60))
        Else
            objFechasHoras.RestaHs Desde1, HorDesde1, R_FecDesde, R_HorDesde, Tdias, Thoras, Tmin
            HC1 = (Tdias * 24) + (Thoras + (Tmin / 60))
            'HC2 = Cant - Maximo
            'FGZ - 24/05/2013 -----------------
            HC2 = CantHsTotales - Maximo - HC1
            HC2 = Cant - Maximo
            'FGZ - 24/05/2013 -----------------
            Cant = Maximo
            
            Call Calcula_Hora(CSng(HC1), R_FecHasta, VHora, R_FecHasta)
            Call objFechasHoras.RestaXHoras(R_FecHasta, R_HorHasta, VHora, R_FecHasta, R_HorHasta)
            If Not objFechasHoras.ValidarHora(R_HorHasta) Then
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "Hora Invalida " & R_HorHasta
                End If
                Exit Sub
            End If
        End If
        'Resultados (D1 a D2)
        FD1 = Desde1
        HD1 = HorDesde1
        FH1 = Desde2
        HH1 = HorDesde2
        objFechasHoras.RestaHs FD1, HD1, FH1, HH1, Tdias, Thoras, Tmin
        C1 = (Tdias * 24) + (Thoras + (Tmin / 60))
        
        'Resultados (D2 a H2)
        FD2 = Desde2
        HD2 = HorDesde2
        FH2 = Hasta2
        HH2 = HorHasta2
        objFechasHoras.RestaHs FD2, HD2, FH2, HH2, Tdias, Thoras, Tmin
        C2 = (Tdias * 24) + (Thoras + (Tmin / 60))

        'Resultados (H2 a H1)
        FD3 = Hasta2
        HD3 = HorHasta2
        FH3 = Hasta1
        HH3 = HorHasta1
        objFechasHoras.RestaHs FD3, HD3, FH3, HH3, Tdias, Thoras, Tmin
        C3 = (Tdias * 24) + (Thoras + (Tmin / 60))
    End If
    
    If (HorDesde2 <= HorDesde1) And (HorDesde1 <= HorHasta2) And (HorHasta2 <= HorHasta1) Then
        '--------D1------H1---------
        '-----D2------H2------------
            'Debe quedar ---D1-----H2------
        R_HorDesde = HorDesde1
        R_HorHasta = HorHasta2
        R_FecDesde = Desde1
        R_FecHasta = Hasta2
        Caso = "C"
        
        objFechasHoras.RestaHs R_FecDesde, R_HorDesde, R_FecHasta, R_HorHasta, Tdias, Thoras, Tmin
        Cant = (Tdias * 24) + (Thoras + (Tmin / 60))
    
        If Maximo >= Cant Then
            objFechasHoras.RestaHs R_FecHasta, R_HorHasta, Hasta1, HorHasta1, Tdias, Thoras, Tmin
            HC1 = (Tdias * 24) + (Thoras + (Tmin / 60))
            
            HC2 = 0
        Else
            HC2 = 0
            HC1 = Cant - Maximo
            Cant = Maximo
            
            Call Calcula_Hora(CSng(HC1), R_FecHasta, VHora, R_FecHasta)
            Call objFechasHoras.RestaXHoras(R_FecHasta, R_HorHasta, VHora, R_FecHasta, R_HorHasta)
            If Not objFechasHoras.ValidarHora(R_HorHasta) Then
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "Hora Invalida " & R_HorHasta
                End If
                Exit Sub
            End If
        End If
        'Resultados (D2 a D1)
        FD1 = Desde2
        HD1 = HorDesde2
        FH1 = Desde1
        HH1 = HorDesde1
        objFechasHoras.RestaHs FD1, HD1, FH1, HH1, Tdias, Thoras, Tmin
        C1 = (Tdias * 24) + (Thoras + (Tmin / 60))
        
        'Resultados (D1 a H2)
        FD2 = Desde1
        HD2 = HorDesde1
        FH2 = Hasta2
        HH2 = HorHasta2
        objFechasHoras.RestaHs FD2, HD2, FH2, HH2, Tdias, Thoras, Tmin
        C2 = (Tdias * 24) + (Thoras + (Tmin / 60))

        'Resultados (H2 a H1)
        FD3 = Hasta2
        HD3 = HorHasta2
        FH3 = Hasta1
        HH3 = HorHasta1
        objFechasHoras.RestaHs FD3, HD3, FH3, HH3, Tdias, Thoras, Tmin
        C3 = (Tdias * 24) + (Thoras + (Tmin / 60))
    End If
    
    If (HorDesde2 <= HorDesde1) And (HorDesde1 <= HorHasta2) And (HorHasta2 >= HorHasta1) Then
        '--------D1------H1---------
        '-----D2-----------H2-------
            'Debe quedar ---D1-----H1------
        R_HorDesde = HorDesde1
        R_HorHasta = HorHasta1
        R_FecDesde = Desde1
        R_FecHasta = Hasta1
        Caso = "D"
        
        objFechasHoras.RestaHs R_FecDesde, R_HorDesde, Hasta1, HorHasta1, Tdias, Thoras, Tmin
        Cant = (Tdias * 24) + (Thoras + (Tmin / 60))
    
        If Maximo >= Cant Then
            HC1 = 0
            HC2 = 0
        Else
            HC2 = 0
            HC1 = Cant - Maximo
            Cant = Maximo
            
            Call Calcula_Hora(CSng(HC1), R_FecHasta, VHora, R_FecHasta)
            Call objFechasHoras.RestaXHoras(R_FecHasta, R_HorHasta, VHora, R_FecHasta, R_HorHasta)
            If Not objFechasHoras.ValidarHora(R_HorHasta) Then
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "Hora Invalida " & R_HorHasta
                End If
                Exit Sub
            End If
        End If
        'Resultados (D2 a D1)
        FD1 = Desde2
        HD1 = HorDesde2
        FH1 = Desde1
        HH1 = HorDesde1
        objFechasHoras.RestaHs FD1, HD1, FH1, HH1, Tdias, Thoras, Tmin
        C1 = (Tdias * 24) + (Thoras + (Tmin / 60))
        
        'Resultados (D1 a H1)
        FD2 = Desde1
        HD2 = HorDesde1
        FH2 = Hasta1
        HH2 = HorHasta1
        objFechasHoras.RestaHs FD2, HD2, FH2, HH2, Tdias, Thoras, Tmin
        C2 = (Tdias * 24) + (Thoras + (Tmin / 60))

        'Resultados (H1 a H2)
        FD3 = Hasta1
        HD3 = HorHasta1
        FH3 = Hasta2
        HH3 = HorHasta2
        objFechasHoras.RestaHs FD3, HD3, FH3, HH3, Tdias, Thoras, Tmin
        C3 = (Tdias * 24) + (Thoras + (Tmin / 60))
    End If
    
    
    'FGZ - 10/05/2013 ------------------
    '   Redondeo a 2 decimales
    Cant = Round(Cant, 2)
    'FGZ - 10/05/2013 ------------------
End Sub


Public Sub CalcularInterseccionHoras3(ByVal Desde1 As Date, ByVal HorDesde1 As String, ByVal Hasta1 As Date, ByVal HorHasta1 As String, ByVal Desde2 As Date, ByVal HorDesde2 As String, ByVal Hasta2 As Date, ByVal HorHasta2 As String, ByVal Maximo As Double, ByRef Cant As Double, ByRef R_FecDesde As Date, ByRef R_HorDesde As String, ByRef R_FecHasta As Date, ByRef R_HorHasta As String, ByRef Caso As String, ByRef HC1 As Double, ByRef HC2 As Double)
' ---------------------------------------------------------------------------------------------
' Descripcion: Calcula la cantidad de horas entre dos rangos de horas desde-hasta intersectados
' Autor      : FGZ
' Fecha      : 25/08/2014
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim VHora As String
Dim CantHsTotales As Double

'Para rango 1 fuera de interseccion
Dim FD1 As Date
Dim FH1 As Date
Dim HD1 As String
Dim HH1 As String
Dim C1 As Double
'Para rango dentro de interseccion
Dim FD2 As Date
Dim FH2 As Date
Dim HD2 As String
Dim HH2 As String
Dim C2 As Double
'Para rango 2 fuera de interseccion
Dim FD3 As Date
Dim FH3 As Date
Dim HD3 As String
Dim HH3 As String
Dim C3 As Double

'Ejemplo
'--------------D1---------------------------H1-----
'---------------------D2---------H2----------------
'rango 1: -----[-------]---------------------------
'rango 2: -------------[---------]-----------------
'rango 3: -----------------------[-----------]-----


    'Calculo la cantidad de horas entre hordesde1 y horhasta1
    objFechasHoras.RestaHs Desde1, HorDesde1, Hasta1, HorHasta1, Tdias, Thoras, Tmin
    CantHsTotales = (Tdias * 24) + (Thoras + (Tmin / 60))


    'Calculo el desde y hasta
    Caso = ""
    Cant = 0
    HC1 = 0
    HC2 = 0
    R_HorDesde = ""
    R_HorHasta = ""
    R_FecDesde = Desde1
    R_FecHasta = Hasta1
    
    '** reemplazos *******************************
    'fecha_desde_desg * Desde1
    'hora_desde_desg * HorDesde1
    'fecha_hasta_desg * hasta1
    'hora_hasta_desg * HorHasta1
    'hora_desde * HorDesde2
    'hora_hasta * Horhasta2
    'fecpar1 * desde2
    'fecpar1 * hasta2

    
    If objFechasHoras.Menor_Hora(Desde1, HorDesde1, Desde2, HorDesde2) And objFechasHoras.Menor_Hora(Desde2, HorDesde2, Hasta1, HorHasta1) And objFechasHoras.Menor_Igual_Hora(Hasta1, HorHasta1, Hasta2, HorHasta2) Then
    'If (HorDesde1 <= HorDesde2) And (HorDesde2 <= HorHasta1) And (HorHasta2 >= HorHasta1) Then
        '-----D1------H1---------
        '---------D2------H2-----
            'Debe quedar ---D2-----H1------
        R_HorDesde = HorDesde2
        R_HorHasta = HorHasta1
        R_FecDesde = Desde2
        R_FecHasta = Hasta1
        Caso = "A"
        
        objFechasHoras.RestaHs R_FecDesde, R_HorDesde, R_FecHasta, R_HorHasta, Tdias, Thoras, Tmin
        Cant = (Tdias * 24) + (Thoras + (Tmin / 60))
        
        If Maximo >= Cant Then
            objFechasHoras.RestaHs Desde1, HorDesde1, R_FecDesde, R_HorDesde, Tdias, Thoras, Tmin
            HC1 = (Tdias * 24) + (Thoras + (Tmin / 60))
            HC2 = 0
        Else
            'objFechasHoras.RestaHs Desde1, HorDesde1, R_FecDesde, R_HorDesde, tdias, thoras, tmin
            objFechasHoras.RestaHs Desde1, HorDesde1, R_FecDesde, R_HorDesde, Tdias, Thoras, Tmin
            HC1 = (Tdias * 24) + (Thoras + (Tmin / 60))
            
            'HC2 = Cant - Maximo
            HC2 = CantHsTotales - Maximo - HC1
            Cant = Maximo
            
            Call Calcula_Hora(CSng(HC2), R_FecHasta, VHora, R_FecHasta)
            Call objFechasHoras.RestaXHoras(R_FecHasta, R_HorHasta, VHora, R_FecHasta, R_HorHasta)
            If Not objFechasHoras.ValidarHora(R_HorHasta) Then
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "Hora Invalida " & R_HorHasta
                End If
                Exit Sub
            End If
        End If
        
        'Resultados (D1 a D2)
        FD1 = Desde1
        HD1 = HorDesde1
        FH1 = Desde2
        HH1 = HorDesde2
        objFechasHoras.RestaHs FD1, HD1, FH1, HH1, Tdias, Thoras, Tmin
        C1 = (Tdias * 24) + (Thoras + (Tmin / 60))
        'Resultados (D2 a H1)
        FD2 = Desde2
        HD2 = HorDesde2
        FH2 = Hasta1
        HH2 = HorHasta1
        objFechasHoras.RestaHs FD2, HD2, FH2, HH2, Tdias, Thoras, Tmin
        C2 = (Tdias * 24) + (Thoras + (Tmin / 60))
        'Resultados (H1 a H2)
        FD3 = Hasta1
        HD3 = HorHasta1
        FH3 = Hasta2
        HH3 = HorHasta2
        objFechasHoras.RestaHs FD3, HD3, FH3, HH3, Tdias, Thoras, Tmin
        C3 = (Tdias * 24) + (Thoras + (Tmin / 60))
    End If
    
    If objFechasHoras.Menor_Hora(Desde1, HorDesde1, Desde2, HorDesde2) And objFechasHoras.Mayor_Hora(Hasta1, HorHasta1, Hasta2, HorHasta2) Then
    'If (HorDesde1 < HorDesde2) And (HorDesde2 <= HorHasta1) And (HorHasta2 <= HorHasta1) Then
        '-----D1----------H1-----
        '---------D2---H2--------
            'Debe quedar ---D2-----H2----
        R_HorDesde = HorDesde2
        R_HorHasta = HorHasta2
        R_FecDesde = Desde2
        R_FecHasta = Hasta2
        Caso = "B"
        objFechasHoras.RestaHs R_FecDesde, R_HorDesde, R_FecHasta, R_HorHasta, Tdias, Thoras, Tmin
        Cant = (Tdias * 24) + (Thoras + (Tmin / 60))
        If Maximo >= Cant Then
            objFechasHoras.RestaHs Desde1, HorDesde1, R_FecDesde, R_HorDesde, Tdias, Thoras, Tmin
            HC1 = (Tdias * 24) + (Thoras + (Tmin / 60))
            
            objFechasHoras.RestaHs R_FecHasta, R_HorHasta, Hasta1, HorHasta1, Tdias, Thoras, Tmin
            HC2 = (Tdias * 24) + (Thoras + (Tmin / 60))
        Else
            objFechasHoras.RestaHs Desde1, HorDesde1, R_FecDesde, R_HorDesde, Tdias, Thoras, Tmin
            HC1 = (Tdias * 24) + (Thoras + (Tmin / 60))
            'HC2 = Cant - Maximo
            'FGZ - 24/05/2013 -----------------
            HC2 = CantHsTotales - Maximo - HC1
            HC2 = Cant - Maximo
            'FGZ - 24/05/2013 -----------------
            Cant = Maximo
            Call Calcula_Hora(CSng(HC1), R_FecHasta, VHora, R_FecHasta)
            Call objFechasHoras.RestaXHoras(R_FecHasta, R_HorHasta, VHora, R_FecHasta, R_HorHasta)
            If Not objFechasHoras.ValidarHora(R_HorHasta) Then
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "Hora Invalida " & R_HorHasta
                End If
                Exit Sub
            End If
        End If
        'Resultados (D1 a D2)
        FD1 = Desde1
        HD1 = HorDesde1
        FH1 = Desde2
        HH1 = HorDesde2
        objFechasHoras.RestaHs FD1, HD1, FH1, HH1, Tdias, Thoras, Tmin
        C1 = (Tdias * 24) + (Thoras + (Tmin / 60))
        'Resultados (D2 a H2)
        FD2 = Desde2
        HD2 = HorDesde2
        FH2 = Hasta2
        HH2 = HorHasta2
        objFechasHoras.RestaHs FD2, HD2, FH2, HH2, Tdias, Thoras, Tmin
        C2 = (Tdias * 24) + (Thoras + (Tmin / 60))

        'Resultados (H2 a H1)
        FD3 = Hasta2
        HD3 = HorHasta2
        FH3 = Hasta1
        HH3 = HorHasta1
        objFechasHoras.RestaHs FD3, HD3, FH3, HH3, Tdias, Thoras, Tmin
        C3 = (Tdias * 24) + (Thoras + (Tmin / 60))
    End If
    
    
    
    If objFechasHoras.Mayor_Igual_Hora(Desde1, HorDesde1, Desde2, HorDesde2) And objFechasHoras.Menor_Hora(Desde1, HorDesde1, Hasta2, HorHasta2) And objFechasHoras.Mayor_Hora(Hasta1, HorHasta1, Hasta2, HorHasta2) Then
    'If (HorDesde2 <= HorDesde1) And (HorDesde1 <= HorHasta2) And (HorHasta2 <= HorHasta1) Then
        '--------D1------H1---------
        '-----D2------H2------------
            'Debe quedar ---D1-----H2------
        R_HorDesde = HorDesde1
        R_HorHasta = HorHasta2
        R_FecDesde = Desde1
        R_FecHasta = Hasta2
        Caso = "C"
        objFechasHoras.RestaHs R_FecDesde, R_HorDesde, R_FecHasta, R_HorHasta, Tdias, Thoras, Tmin
        Cant = (Tdias * 24) + (Thoras + (Tmin / 60))
    
        If Maximo >= Cant Then
            objFechasHoras.RestaHs R_FecHasta, R_HorHasta, Hasta1, HorHasta1, Tdias, Thoras, Tmin
            HC1 = (Tdias * 24) + (Thoras + (Tmin / 60))
            
            HC2 = 0
        Else
            HC2 = 0
            HC1 = Cant - Maximo
            Cant = Maximo
            
            Call Calcula_Hora(CSng(HC1), R_FecHasta, VHora, R_FecHasta)
            Call objFechasHoras.RestaXHoras(R_FecHasta, R_HorHasta, VHora, R_FecHasta, R_HorHasta)
            If Not objFechasHoras.ValidarHora(R_HorHasta) Then
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "Hora Invalida " & R_HorHasta
                End If
                Exit Sub
            End If
        End If
        'Resultados (D2 a D1)
        FD1 = Desde2
        HD1 = HorDesde2
        FH1 = Desde1
        HH1 = HorDesde1
        objFechasHoras.RestaHs FD1, HD1, FH1, HH1, Tdias, Thoras, Tmin
        C1 = (Tdias * 24) + (Thoras + (Tmin / 60))
        'Resultados (D1 a H2)
        FD2 = Desde1
        HD2 = HorDesde1
        FH2 = Hasta2
        HH2 = HorHasta2
        objFechasHoras.RestaHs FD2, HD2, FH2, HH2, Tdias, Thoras, Tmin
        C2 = (Tdias * 24) + (Thoras + (Tmin / 60))
        'Resultados (H2 a H1)
        FD3 = Hasta2
        HD3 = HorHasta2
        FH3 = Hasta1
        HH3 = HorHasta1
        objFechasHoras.RestaHs FD3, HD3, FH3, HH3, Tdias, Thoras, Tmin
        C3 = (Tdias * 24) + (Thoras + (Tmin / 60))
    End If
    If objFechasHoras.Mayor_Igual_Hora(Desde1, HorDesde1, Desde2, HorDesde2) And objFechasHoras.Menor_Hora(Desde1, HorDesde1, Hasta2, HorHasta2) And objFechasHoras.Menor_Igual_Hora(Hasta1, HorHasta1, Hasta2, HorHasta2) And objFechasHoras.Mayor_Hora(Hasta1, HorHasta1, Desde2, HorDesde2) Then
    'If (HorDesde2 <= HorDesde1) And (HorDesde1 <= HorHasta2) And (HorHasta2 >= HorHasta1) Then
        '--------D1------H1---------
        '-----D2-----------H2-------
            'Debe quedar ---D1-----H1------
        R_HorDesde = HorDesde1
        R_HorHasta = HorHasta1
        R_FecDesde = Desde1
        R_FecHasta = Hasta1
        Caso = "D"
        objFechasHoras.RestaHs R_FecDesde, R_HorDesde, Hasta1, HorHasta1, Tdias, Thoras, Tmin
        Cant = (Tdias * 24) + (Thoras + (Tmin / 60))
        
        If Maximo >= Cant Then
            HC1 = 0
            HC2 = 0
        Else
            HC2 = 0
            HC1 = Cant - Maximo
            Cant = Maximo
            Call Calcula_Hora(CSng(HC1), R_FecHasta, VHora, R_FecHasta)
            Call objFechasHoras.RestaXHoras(R_FecHasta, R_HorHasta, VHora, R_FecHasta, R_HorHasta)
            If Not objFechasHoras.ValidarHora(R_HorHasta) Then
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "Hora Invalida " & R_HorHasta
                End If
                Exit Sub
            End If
        End If
        'Resultados (D2 a D1)
        FD1 = Desde2
        HD1 = HorDesde2
        FH1 = Desde1
        HH1 = HorDesde1
        objFechasHoras.RestaHs FD1, HD1, FH1, HH1, Tdias, Thoras, Tmin
        C1 = (Tdias * 24) + (Thoras + (Tmin / 60))
        'Resultados (D1 a H1)
        FD2 = Desde1
        HD2 = HorDesde1
        FH2 = Hasta1
        HH2 = HorHasta1
        objFechasHoras.RestaHs FD2, HD2, FH2, HH2, Tdias, Thoras, Tmin
        C2 = (Tdias * 24) + (Thoras + (Tmin / 60))
        'Resultados (H1 a H2)
        FD3 = Hasta1
        HD3 = HorHasta1
        FH3 = Hasta2
        HH3 = HorHasta2
        objFechasHoras.RestaHs FD3, HD3, FH3, HH3, Tdias, Thoras, Tmin
        C3 = (Tdias * 24) + (Thoras + (Tmin / 60))
    End If
    
    'FGZ - 10/05/2013 ------------------
    '   Redondeo a 2 decimales
    Cant = Round(Cant, 2)
    'FGZ - 10/05/2013 ------------------
End Sub


Public Sub CalcularHC_DesdeyHasta(ByRef FechaD As Date, ByRef HCDesde As String, ByRef FechaH As Date, ByRef HCHasta As String, ByVal TotHor As Single, ByVal aPartirDe As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Calcula las horas desde y hasta a partir de un y por la cantidad de horas.
'               Si el parametro aPartirDe es
'                  + significa que se va a calcular la hora hasta a partir de la hora desde y por la cantidad de horas
'                  - significa que se va a calcular la hora desde a partir de la hora hasta y por la cantidad de horas
' Autor      : FGZ
' Fecha      : 21/10/2008
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim fecres As Date
Dim horres As String
Dim Horas As String

Call objFechasHoras.Convertir_A_Hora2(TotHor * 60, Horas)
If aPartirDe = "+" Then
    Call objFechasHoras.SumoHoras(FechaD, HCDesde, Horas, fecres, horres)
    If Not objFechasHoras.ValidarHora(horres) Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "Hora Invalida " & horres
        End If
    End If
    FechaH = fecres
    HCHasta = horres
Else
    Call objFechasHoras.RestaXHoras(FechaH, HCHasta, Horas, fecres, horres)
    If Not objFechasHoras.ValidarHora(horres) Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "Hora Invalida " & horres
        End If
    End If
    FechaD = fecres
    HCDesde = horres
End If









End Sub




Public Function CalcularFechadeGeneracion(ByVal Nro_Subturno As Long, ByVal FechaProc As Date, ByVal FechaE As Date, ByVal FechaS As Date, ByVal Cambio_dia As Boolean) As Date
' ---------------------------------------------------------------------------------------------
' Descripcion: Setea los parametros de cada detalle de politica existentes.
' Autor      : FGZ
' Fecha      : 29/07/2009
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Opcion As Integer
Dim rs_ST As New ADODB.Recordset

On Error GoTo ME_localFG


'    'Buscar el subturno
'    StrSql = "SELECT gti_subturno.subtgen FROM gti_subturno "
'    StrSql = StrSql & " WHERE turnro = " & Nro_Turno
'    StrSql = StrSql & " AND subturnro = " & Nro_Subturno
'    OpenRecordset StrSql, rs_ST
'    If Not rs_ST.EOF Then
'        Opcion = rs_ST!subtgen
'    End If
    
    Opcion = Subturno_Genera
    
    Select Case Opcion
    Case 1:
        CalcularFechadeGeneracion = FechaProc
    Case 2:
        If Cambio_dia Then
            If FechaProc < FechaE Then
                CalcularFechadeGeneracion = FechaProc
            Else
                CalcularFechadeGeneracion = FechaE
            End If
        Else
            CalcularFechadeGeneracion = FechaE
        End If
    Case 3:
        CalcularFechadeGeneracion = FechaS
    Case 4:
        If Cambio_dia Then
            CalcularFechadeGeneracion = FechaS
        Else
            CalcularFechadeGeneracion = FechaE
        End If
    Case Else
        CalcularFechadeGeneracion = FechaProc
    End Select
    
FIN:
    If rs_ST.State = adStateOpen Then rs_ST.Close
    Set rs_ST = Nothing
Exit Function

ME_localFG:
    CalcularFechadeGeneracion = FechaProc
    GoTo FIN
End Function



Public Sub Balance_Reg(ByVal Modelo As Long, ByVal Lista_Reg As String, ByRef Indice As Long, ByRef Reg_Falta As String, ByRef Balancea As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Revisa que las registraciones esten balanceadas.
' Autor      : FGZ
' Fecha      : 02/08/2010
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim regs
Dim i As Long
Dim j As Long
Dim Lista_Sig(0 To 4) As String
Dim Aux_reg As String

    Lista_Sig(0) = "01,1"
    Lista_Sig(1) = "2,02,4,04"
    Lista_Sig(2) = "03,3"
    Lista_Sig(3) = "2,02,4,04"
    Lista_Sig(4) = "#,1,01"
    
    
    regs = Split(Lista_Reg, ",")
    i = 0
    Aux_reg = regs(i)
    
    If Not (Aux_reg = "01" Or Aux_reg = "1") Then
        j = 1
        Indice = 1
        Reg_Falta = "1"
        Balancea = False
    Else
        Balancea = True
    End If
    
    If Not Aux_reg = "#" Then
        i = 1
        Do While i <= UBound(regs) And Balancea
            
                    
            'aux_reg es la registracion inicial
            Select Case Aux_reg
            Case "1", "01":
                j = 1
                Indice = 4
                Reg_Falta = "4"
            Case "2", "02":
                j = 2
                Reg_Falta = "3"
                Indice = 3
            Case "3", "03":
                j = 3
                Reg_Falta = "4"
                Indice = 4
            Case "4", "04":
                j = 4
                Reg_Falta = "1"
                Indice = 1
            End Select
            
            If InStr(1, Lista_Sig(j), regs(i)) > 0 Then
                'siguiente
                Balancea = True
                Aux_reg = regs(i)
                i = i + 1
            Else
                If InStr(1, Lista_Sig(j), "#") > 0 Then
                    'siguiente
                    Balancea = True
                    Aux_reg = regs(i)
                    i = i + 1
                Else
                    'hay algo mal
                    Balancea = False
                End If
            End If
        Loop
    Else
        Balancea = True
    End If
    
    If Not Balancea Then
        'Reg_Falta = Lista_Sig(J)
        'Indice = J
    Else
        Reg_Falta = ""
        Indice = 0
    End If
    
    
Exit Sub
ME_localBal:
    
    
End Sub

Public Sub Registraciones_A_Evaluar(ByRef Lista_Reg As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Retorna una lista de codigos de tipo de registraciones.
' Autor      : FGZ
' Fecha      : 02/08/2010
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Aux As String
Dim Sigo_Controlando As Boolean

Dim rs As New ADODB.Recordset
Dim rs_reg As New ADODB.Recordset

    On Error GoTo ME_localBal
    
    Lista_Reg = ""
    Sigo_Controlando = True
    
    StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 OR evenro = 1"
    StrSql = StrSql & " ORDER BY fecha ASC, hora ASC"
    OpenRecordset StrSql, rs
    'Por cada registro seleccionado de wf-turno
    Do While Not rs.EOF And Sigo_Controlando
        StrSql = "SELECT tiporeg FROM gti_registracion WHERE regnro = " & rs!Regnro
        OpenRecordset StrSql, rs_reg
        If Not rs_reg.EOF Then
            If Not EsNulo(rs_reg!tiporeg) Then
                Aux = rs_reg!tiporeg
            Else
                Aux = ""
                Sigo_Controlando = False
            End If
        Else
            Aux = ""
            Sigo_Controlando = False
        End If
        
        If Not EsNulo(Aux) And Sigo_Controlando Then
            'Armo la lista de reg
            If EsNulo(Lista_Reg) Then
                Lista_Reg = Aux
            Else
                Lista_Reg = Lista_Reg & "," & Aux
            End If
        End If
        
        rs.MoveNext
    Loop
    If Not EsNulo(Lista_Reg) Then
        Lista_Reg = Lista_Reg & ",#"
    Else
        Lista_Reg = "#"
    End If
    
Exit Sub
ME_localBal:
    Lista_Reg = "#"
    If depurar Then
        Flog.writeline Espacios(Tabulador * (Nivel_Tab_Log + 1)) & "Sub Registraciones_A_Evaluar. Error cargando la lista de registraciones a evaluar"
    End If
End Sub




Public Sub Balance_Reg_Obligatorio(ByVal Modelo As Long, ByVal Lista_Reg As String, ByRef Indice As Long, ByRef Reg_Falta As String, ByRef Balancea As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Revisa que las registraciones esten balanceadas.
' Autor      : FGZ
' Fecha      : 02/08/2010
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim regs
Dim i As Long
Dim j As Long
Dim Lista_Sig(0 To 4) As String
Dim Aux_reg As String

    Lista_Sig(0) = "01,1"
    Lista_Sig(1) = "2,02"
    Lista_Sig(2) = "03,3"
    Lista_Sig(3) = "4,04"
    Lista_Sig(4) = "#"
    
    
    regs = Split(Lista_Reg, ",")
    i = 0
    Aux_reg = regs(i)
    
    If Not (Aux_reg = "01" Or Aux_reg = "1") Then
        j = 1
        Indice = 1
        Reg_Falta = "1"
        Balancea = False
    Else
        Balancea = True
    End If
    
    If Not Aux_reg = "#" Then
        i = 1
        Do While i <= UBound(regs) And Balancea
            
                    
            'aux_reg es la registracion inicial
            Select Case Aux_reg
            Case "1", "01":
                j = 1
                Indice = 2
                Reg_Falta = "2"
            Case "2", "02":
                j = 2
                Reg_Falta = "3"
                Indice = 3
            Case "3", "03":
                j = 3
                Reg_Falta = "4"
                Indice = 4
            Case "4", "04":
                j = 4
                Reg_Falta = "1"
                Indice = 1
            End Select
            
            If InStr(1, Lista_Sig(j), regs(i)) > 0 Then
                'siguiente
                Balancea = True
                Aux_reg = regs(i)
                i = i + 1
            Else
                If InStr(1, Lista_Sig(j), "#") > 0 Then
                    'siguiente
                    Balancea = True
                    Aux_reg = regs(i)
                    i = i + 1
                Else
                    'hay algo mal
                    Balancea = False
                End If
            End If
        Loop
    Else
        Balancea = True
    End If
    
    If Not Balancea Then
        'Reg_Falta = Lista_Sig(J)
        'Indice = J
    Else
        Reg_Falta = ""
        Indice = 0
    End If
Exit Sub
ME_localBal:
End Sub


Public Sub Balance_Reg_2Obligatorio(ByVal Modelo As Long, ByVal Lista_Reg As String, ByRef Indice As Long, ByRef Reg_Falta As String, ByRef Balancea As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Revisa que las registraciones esten balanceadas.
' Autor      : FGZ
' Fecha      : 02/08/2010
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim regs
Dim i As Long
Dim j As Long
Dim Lista_Sig(0 To 4) As String
Dim Lista_Sig2(0 To 4) As String
Dim Aux_reg As String
Dim Descanso1 As Boolean

    Lista_Sig(0) = "01,1"
    Lista_Sig(1) = "02,2"
    Lista_Sig(2) = "03,3"
    Lista_Sig(3) = "02,2"
    Lista_Sig(4) = "#"
    
    Lista_Sig2(0) = "01,1"
    Lista_Sig2(1) = "02,2"
    Lista_Sig2(2) = "03,3"
    Lista_Sig2(3) = "04,4"
    Lista_Sig2(4) = "#"
    
    
    regs = Split(Lista_Reg, ",")
    i = 0
    Aux_reg = regs(i)
    
    If Not (Aux_reg = "01" Or Aux_reg = "1") Then
        j = 1
        Indice = 1
        Reg_Falta = "1"
        Balancea = False
    Else
        Balancea = True
    End If
    
    Descanso1 = True
    If Not Aux_reg = "#" Then
        i = 1
        Do While i <= UBound(regs) And Balancea
            
                    
            'aux_reg es la registracion inicial
            Select Case Aux_reg
            Case "1", "01":
                j = 1
                Indice = 2
                Reg_Falta = "2"
            Case "2", "02":
                j = 2
                Reg_Falta = "3"
                Indice = 3
            Case "3", "03":
                j = 3
                Reg_Falta = "4"
                Indice = 4
                Descanso1 = False
            Case "4", "04":
                j = 4
                Reg_Falta = "1"
                Indice = 1
            End Select
            
            If Descanso1 Then
                If InStr(1, Lista_Sig(j), regs(i)) > 0 Then
                    'siguiente
                    Balancea = True
                    Aux_reg = regs(i)
                    i = i + 1
                Else
                    If InStr(1, Lista_Sig(j), "#") > 0 Then
                        'siguiente
                        Balancea = True
                        Aux_reg = regs(i)
                        i = i + 1
                    Else
                        'hay algo mal
                        Balancea = False
                    End If
                End If
            Else
                If InStr(1, Lista_Sig2(j), regs(i)) > 0 Then
                    'siguiente
                    Balancea = True
                    Aux_reg = regs(i)
                    i = i + 1
                Else
                    If InStr(1, Lista_Sig2(j), "#") > 0 Then
                        'siguiente
                        Balancea = True
                        Aux_reg = regs(i)
                        i = i + 1
                    Else
                        'hay algo mal
                        Balancea = False
                    End If
                End If
            End If
        Loop
    Else
        Balancea = True
    End If
    
    If Not Balancea Then
        'Reg_Falta = Lista_Sig(J)
        'Indice = J
    Else
        Reg_Falta = ""
        Indice = 0
    End If
Exit Sub
ME_localBal:
End Sub

Public Sub Balance_Reg_1Obligatorioy1Opcional(ByVal Modelo As Long, ByVal Lista_Reg As String, ByRef Indice As Long, ByRef Reg_Falta As String, ByRef Balancea As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Revisa que las registraciones esten balanceadas.
' Autor      : FGZ
' Fecha      : 02/08/2010
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim regs
Dim i As Long
Dim j As Long
Dim Lista_Sig(0 To 4) As String
Dim Aux_reg As String

    Lista_Sig(0) = "01,1"
    Lista_Sig(1) = "2,02"
    Lista_Sig(2) = "03,3"
    Lista_Sig(3) = "2,02,4,04"
    Lista_Sig(4) = "#"
    
    
    regs = Split(Lista_Reg, ",")
    i = 0
    Aux_reg = regs(i)
    
    If Not (Aux_reg = "01" Or Aux_reg = "1") Then
        j = 1
        Indice = 1
        Reg_Falta = "1"
        Balancea = False
    Else
        Balancea = True
    End If
    
    If Not Aux_reg = "#" Then
        i = 1
        Do While i <= UBound(regs) And Balancea
            
                    
            'aux_reg es la registracion inicial
            Select Case Aux_reg
            Case "1", "01":
                j = 1
                Indice = 2
                Reg_Falta = "2"
            Case "2", "02":
                j = 2
                Reg_Falta = "3"
                Indice = 3
            Case "3", "03":
                j = 3
                Reg_Falta = "4"
                Indice = 4
            Case "4", "04":
                j = 4
                Reg_Falta = "1"
                Indice = 1
            End Select
            
            If InStr(1, Lista_Sig(j), regs(i)) > 0 Then
                'siguiente
                Balancea = True
                Aux_reg = regs(i)
                i = i + 1
            Else
                If InStr(1, Lista_Sig(j), "#") > 0 Then
                    'siguiente
                    Balancea = True
                    Aux_reg = regs(i)
                    i = i + 1
                Else
                    'hay algo mal
                    Balancea = False
                End If
            End If
        Loop
    Else
        Balancea = True
    End If
    
    If Not Balancea Then
        'Reg_Falta = Lista_Sig(J)
        'Indice = J
    Else
        Reg_Falta = ""
        Indice = 0
    End If
Exit Sub
ME_localBal:
End Sub


Public Sub Politica495(Fecha As Date, NroTer As Long, VentDesde As String, ventFdesde As Date, VentHasta As String, ventFhasta As Date, Nro_Turno As Long, deb As Boolean, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Política de descuento de hs por paro gremial.
'   La idea es que la política analice si en el dia de la fecha había paro y contraste con las registraciones
'   y genere un tipo de hora por la intersección.
'   Ademas debe considerar del total que posiblemente tenga horas de descanso que no deben ser descontadas.
'   Por lo cual debe buscar novedades horarias y descontarlas del total.
' Autor: FGZ - 01/09/2010
' Ultima modificacion:
'
' --------------------------------------------------------------
Dim Opcion As Long
Dim TH_Descuento As Long
Dim TH_Pausa As Long

Dim Thoras As Integer
Dim Tmin As Integer
Dim Tdias As Integer

Dim TotHor As Single '(descuento - pausa)
Dim TotHorHHMM As String

Dim Descuento As Single
Dim Diferencia As Single
Dim Pausa As Double
Dim Pausa_HDesde As String
Dim Pausa_HHasta As String

Dim Pausa_FDesde As Date
Dim Pausa_FHasta As Date

Dim ParoHDesde As String
Dim ParoHHasta As String
Dim ParoFDesde As Date
Dim ParoFHasta As Date
Dim ParoHoras As Single

Dim RegHDesde As String
Dim RegHHasta As String
Dim RegFDesde As Date
Dim RegFHasta As Date

Dim HCDesde As String
Dim HCHasta As String
Dim HCFDesde As Date
Dim HCFHasta As Date
Dim Hay_Reg As Boolean

Dim Cant_Reg As Integer
Dim Cant_Pares As Integer
Dim i As Integer


Dim par1 As String
Dim fecpar1 As Date
Dim par2 As String
Dim fecpar2 As Date

Dim ParoMonresa As Boolean
Dim Paro24HS As Boolean
Dim ParoCubierto As Boolean
Dim Hora_Ausencia As Long
Dim Hora_AP As Long
Dim Hora_LLT As Long
Dim Hora_ST As Long
Dim Hora_ExcesoPausa As Long

'Dim Hora_Normal As Long
'Dim Hora_Nocturna As Long
'Dim Hora_Colgadas As Long
Dim Lista_Horas As String

Dim rs As New ADODB.Recordset
Dim rs_Paros As New ADODB.Recordset
Dim rs_reg As New ADODB.Recordset


    'Busco los paros para el dia de la fecha
    StrSql = "SELECT paros.paronro,paros.tparonro,paros.parocompleto,paros.parofecha,paros.parohoradesde,paros.parohorahasta,paros.horcant  FROM paros "
    StrSql = StrSql & " INNER JOIN paros_ter ON paros.paronro = paros_ter.paronro"
    StrSql = StrSql & " WHERE parofecha = " & ConvFecha(p_fecha)
    StrSql = StrSql & " AND paros_ter.ternro = " & NroTer
    OpenRecordset StrSql, rs_Paros
    If rs_Paros.EOF Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No hay paros gremiales para el dia"
        End If
        GoTo Fin_Paros
    Else
        Call SetearParametrosPolitica(Detalle, ok)
        Opcion = st_Opcion
        TH_Descuento = IIf(EsNulo(st_TipoHora1), 0, st_TipoHora1)
        TH_Pausa = IIf(EsNulo(st_TipoHora2), 0, st_TipoHora2)
        Lista_Horas = IIf(EsNulo(st_ListaTH), 0, st_ListaTH)
        
        If depurar Then
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Version: " & Opcion
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "  Tipos Hora Descuento: " & TH_Descuento
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "  Tipos Hora Pausa: " & TH_Pausa
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "  Lista de Horas a descontar: " & Lista_Horas
        End If
    End If
    
    
    '---------------------------------------------------------------------
    'Busco los tipos de horas de anormalidades (ausencias, LLT, ST, AP, Exceso de Pausa)
    
    'Ausencia
    StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 2"
    StrSql = StrSql & " AND turnro = " & Nro_Turno
    StrSql = StrSql & " ORDER BY conhornro ASC, turnro ASC"
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        Hora_Ausencia = rs!thnro
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No esta configurado el tipo de hora de ausencia."
        End If
        Hora_Ausencia = 0
    End If
     
    'Ausencia Parcial
    StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 19"
    StrSql = StrSql & " AND turnro = " & Nro_Turno
    StrSql = StrSql & " ORDER BY conhornro ASC, turnro ASC"
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        Hora_AP = rs!thnro
    Else
       If depurar Then
           Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No esta configurado el tipo de hora de ausencia parcial."
       End If
       Hora_AP = 0
    End If
    
    'LLegada Tarde
    StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 4"
    StrSql = StrSql & " AND turnro = " & Nro_Turno
    StrSql = StrSql & " ORDER BY conhornro ASC, turnro ASC"
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        Hora_LLT = rs!thnro
    Else
       If depurar Then
           Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No esta configurado el tipo de hora de llegada tarde."
       End If
       Hora_LLT = 0
    End If
    
    'Salida Temprano
    StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 5"
    StrSql = StrSql & " AND turnro = " & Nro_Turno
    StrSql = StrSql & " ORDER BY conhornro ASC, turnro ASC"
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        Hora_ST = rs!thnro
    Else
       If depurar Then
           Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No esta configurado el tipo de hora de Salida Temprano."
       End If
       Hora_ST = 0
    End If
    
    'Exceso de Pausa
    StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 18"
    StrSql = StrSql & " AND turnro = " & Nro_Turno
    StrSql = StrSql & " ORDER BY conhornro ASC, turnro ASC"
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        Hora_ExcesoPausa = rs!thnro
    Else
       If depurar Then
           Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No esta configurado el tipo de hora de Exceso de Pausa."
       End If
       Hora_ExcesoPausa = 0
    End If
    '---------------------------------------------------------------------
    
    Do While Not rs_Paros.EOF
        ParoMonresa = IIf(rs_Paros!tparonro = 1, True, False)
        Paro24HS = CBool(rs_Paros!parocompleto)
        
        If Paro24HS Then
            'Entonces no hay registraciones por lo cual se deben comparar con las horas de ausencia
            'hornro, horcant cantidad, horhoradesde, horhorahasta, normnro, normnro2, thnro
            'StrSql = "SELECT hornro,horcant  FROM gti_horcumplido WHERE ternro = " & NroTer
            StrSql = "SELECT hornro, horcant, horhoradesde, horhorahasta, normnro, normnro2, thnro  FROM gti_horcumplido WHERE ternro = " & NroTer
            StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
            StrSql = StrSql & " AND horfecgen = " & ConvFecha(p_fecha)
            StrSql = StrSql & " AND thnro = " & Hora_Ausencia
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                'Genero hs de descuento de paro y elimino la anormalidad
                ParoHDesde = IIf(Not EsNulo(rs!horhoradesde), rs!horhoradesde, "0000")
                ParoHHasta = IIf(Not EsNulo(rs!horhorahasta), rs!horhorahasta, "0000")
                Descuento = rs!horcant
                
                If Descuento > 0 Then
                    TotHor = Descuento
                    TotHorHHMM = CHoras(TotHor, 60)
            
                    StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                    StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                    StrSql = StrSql & " thnro,turnro,horrealent,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                    StrSql = StrSql & TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & IIf(ParoHHasta < ParoHDesde, ConvFecha(p_fecha + 1), ConvFecha(p_fecha)) & ",'" & ParoHDesde & "','" & ParoHHasta & "'"
                    StrSql = StrSql & "," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                    StrSql = StrSql & ValorNulo & "," & Empleado.Ternro & "," & TH_Descuento & "," & Nro_Turno & ","
                    StrSql = StrSql & "'',''," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
            
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TH_Descuento & "- Cantidad: " & TotHor & " hs."
                    End If
                End If
            
                'Elimino las ausencias dado que se reemplazaron con las horas del paro
                StrSql = "DELETE FROM gti_horcumplido WHERE hornro = " & rs!hornro
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
        Else    'paro parcial
            ParoHoras = rs_Paros!horcant
            ParoHDesde = rs_Paros!parohoradesde
            ParoHHasta = rs_Paros!parohorahasta
            ParoFDesde = rs_Paros!parofecha
            ParoFHasta = rs_Paros!parofecha
            'Descuento = ParoHoras
            Descuento = 0
            ParoCubierto = False
            
            'Genero las horas de descuento entre las registraciones y el paro
            StrSql = "SELECT COUNT(regnro) as cant FROM " & TTempWFTurno & " WHERE evenro = 2 "
            OpenRecordset StrSql, rs_reg
            If Not rs_reg.EOF Then If Not IsNull(rs_reg!Cant) Then Cant_Reg = rs_reg!Cant
            Cant_Pares = Int(Cant_Reg / 2)
            If Cant_Pares = 0 Then
                Descuento = 0
            End If
            'intersecto con las registraciones
            For i = 1 To Cant_Pares
                Hay_Reg = True
                
                StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par = " & i
                OpenRecordset StrSql, rs_reg
                
                If rs_reg.EOF Then
                    Hay_Reg = False
                Else
                    par1 = rs_reg!Hora
                    fecpar1 = rs_reg!Fecha
                    
                    rs_reg.MoveNext
                    If rs_reg.EOF Then
                        Hay_Reg = False
                    Else
                        par2 = rs_reg!Hora
                        fecpar2 = rs_reg!Fecha
                    End If
                End If
                If Hay_Reg Then
                    'Paro       [---------------]
                    'registracion     (----------------)
                    If objFechasHoras.Menor_Hora(ParoFDesde, ParoHDesde, fecpar1, par1) And objFechasHoras.Menor_Hora(fecpar1, par1, ParoFHasta, ParoHHasta) And objFechasHoras.Menor_Igual_Hora(ParoFHasta, ParoHHasta, fecpar1, par2) Then
                        objFechasHoras.RestaHs fecpar1, par1, ParoFHasta, ParoHHasta, Tdias, Thoras, Tmin
                        HCDesde = par1
                        HCHasta = ParoHHasta
                        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    End If
        
                    'paro           [---------------]
                    'Horario    (----------------)
                    If objFechasHoras.Mayor_Igual_Hora(ParoFDesde, ParoHDesde, fecpar1, par1) And objFechasHoras.Menor_Hora(ParoFDesde, ParoHDesde, fecpar1, par2) And objFechasHoras.Mayor_Hora(ParoFHasta, ParoHHasta, fecpar1, par2) Then
                        objFechasHoras.RestaHs ParoFDesde, ParoHDesde, fecpar1, par2, Tdias, Thoras, Tmin
                        HCDesde = ParoHDesde
                        HCHasta = par2
                        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    End If
                    
                    'paro           [---------------]
                    'Horario    (-----------------------)
                    If objFechasHoras.Mayor_Igual_Hora(ParoFDesde, ParoHDesde, fecpar1, par1) And objFechasHoras.Menor_Hora(ParoFDesde, ParoHDesde, fecpar1, par2) And objFechasHoras.Menor_Igual_Hora(ParoFHasta, ParoHHasta, fecpar1, par2) And objFechasHoras.Mayor_Hora(ParoFHasta, ParoHHasta, fecpar1, par1) Then
                        objFechasHoras.RestaHs ParoFDesde, ParoHDesde, ParoFHasta, ParoHHasta, Tdias, Thoras, Tmin
                        HCDesde = ParoHDesde
                        HCHasta = ParoHHasta
                        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                        ParoCubierto = True
                    End If
        
                    'Paro       [---------------]
                    'Horario        (--------)
                    If objFechasHoras.Menor_Hora(ParoFDesde, ParoHDesde, fecpar1, par1) And objFechasHoras.Mayor_Hora(ParoFHasta, ParoHHasta, fecpar1, par2) Then
                        objFechasHoras.RestaHs fecpar1, par1, fecpar1, par2, Tdias, Thoras, Tmin
                        HCDesde = par1
                        HCHasta = par2
                        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    End If
                    Descuento = TotHor
                Else
                    Descuento = 0
                End If
            Next i
            
'            'Insertar las horas
'            If Descuento > 0 Then
'                TotHor = Descuento
'                TotHorHHMM = CHoras(TotHor, 60)
'
'                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
'                StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
'                StrSql = StrSql & " thnro,turnro,horrealent,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
'                StrSql = StrSql & TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'" & HCdesde & "','" & HChasta & "'"
'                StrSql = StrSql & "," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
'                StrSql = StrSql & ValorNulo & "," & Empleado.Ternro & "," & TH_Descuento & "," & Nro_Turno & ","
'                StrSql = StrSql & "'',''," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
'                objConn.Execute StrSql, , adExecuteNoRecords
'
'                If depurar Then
'                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TH_Descuento & "- Cantidad: " & TotHor & " hs."
'                End If
'            End If
            
            '-----------------------------------------------------
            'Reviso las horas a descontar (normales, colgadas y nocturnas).
            'Si intersectan las horas del paro ==> generan hs_descuento y actualizan las horas originales
            StrSql = "SELECT hornro, horcant cantidad,hordesde, horhoradesde,horhasta, horhorahasta, normnro, normnro2, thnro FROM gti_horcumplido WHERE ternro = " & NroTer
            StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
            StrSql = StrSql & " AND horfecgen = " & ConvFecha(p_fecha)
            StrSql = StrSql & " AND thnro IN (" & Lista_Horas & ")"
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                rs.MoveFirst
            End If
            Do While Not rs.EOF
                Pausa = rs!Cantidad
                
                Pausa_FDesde = IIf(Not EsNulo(rs!hordesde), rs!hordesde, "0000")
                Pausa_FHasta = IIf(Not EsNulo(rs!horhasta), rs!horhasta, "0000")
                Pausa_HDesde = IIf(Not EsNulo(rs!horhoradesde), rs!horhoradesde, "0000")
                Pausa_HHasta = IIf(Not EsNulo(rs!horhorahasta), rs!horhorahasta, "0000")
        
                'Reviso la interseccion de la pausa con el horario del paro
                'Paro       [---------------]
                'Pausa            (----------------)
                If objFechasHoras.Menor_Hora(ParoFDesde, ParoHDesde, Pausa_FDesde, Pausa_HDesde) And objFechasHoras.Menor_Hora(Pausa_FDesde, Pausa_HDesde, ParoFHasta, ParoHHasta) And objFechasHoras.Menor_Igual_Hora(ParoFHasta, ParoHHasta, Pausa_FHasta, Pausa_HHasta) Then
                    objFechasHoras.RestaHs Pausa_FDesde, Pausa_HDesde, ParoFHasta, ParoHHasta, Tdias, Thoras, Tmin
                    HCFDesde = Pausa_FDesde
                    HCDesde = Pausa_HDesde
                    HCFHasta = ParoFHasta
                    HCHasta = ParoHHasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    
                    If TotHor > 0 Then
                        TotHorHHMM = CHoras(TotHor, 60)
                
                        StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                        StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                        StrSql = StrSql & " thnro,turnro,horrealent,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                        StrSql = StrSql & TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'" & HCDesde & "','" & HCHasta & "'"
                        StrSql = StrSql & "," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                        StrSql = StrSql & ValorNulo & "," & Empleado.Ternro & "," & TH_Descuento & "," & Nro_Turno & ","
                        StrSql = StrSql & "'',''," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TH_Descuento & "- Cantidad: " & TotHor & " hs."
                        End If
                        
                        'Actualizo las horas originales
                        Diferencia = rs!Cantidad - TotHor
                        If Diferencia > 0 Then
                            HCFDesde = ParoFHasta
                            HCDesde = ParoHHasta
                            HCFHasta = Pausa_FHasta
                            HCHasta = Pausa_HHasta
                            objFechasHoras.RestaHs HCFDesde, HCDesde, HCFHasta, HCHasta, Tdias, Thoras, Tmin
                            TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                            TotHorHHMM = CHoras(TotHor, 60)
                        
                            'TotHorHHMM = CHoras(Diferencia, 60)
                            'HCDesde = HCHasta
                            'HCHasta = rs!horhorahasta
                            
                            StrSql = "UPDATE gti_horcumplido SET "
                            StrSql = StrSql & " horcant = " & Diferencia
                            StrSql = StrSql & " ,horas = " & TotHorHHMM
                            StrSql = StrSql & " ,hordesde = " & ConvFecha(HCFDesde)
                            StrSql = StrSql & " ,horhoradesde = '" & HCDesde & "'"
                            StrSql = StrSql & " ,horhasta = " & ConvFecha(HCFHasta)
                            StrSql = StrSql & " ,horhorahasta = '" & HCHasta & "'"
                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
                            objConn.Execute StrSql, , adExecuteNoRecords
                        Else
                            StrSql = "DELETE gti_horcumplido "
                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                End If
    
                'Paro           [---------------]
                'Pausa      (----------------)
                If objFechasHoras.Mayor_Igual_Hora(ParoFDesde, ParoHDesde, p_fecha, Pausa_HDesde) And objFechasHoras.Menor_Hora(ParoFDesde, ParoHDesde, p_fecha, Pausa_HHasta) And objFechasHoras.Mayor_Hora(ParoFHasta, ParoHHasta, p_fecha, Pausa_HHasta) Then
                    objFechasHoras.RestaHs ParoFDesde, ParoHDesde, p_fecha, Pausa_HHasta, Tdias, Thoras, Tmin
                    HCDesde = ParoHDesde
                    HCHasta = Pausa_HHasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor > 0 Then
                        TotHorHHMM = CHoras(TotHor, 60)
                
                        StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                        StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                        StrSql = StrSql & " thnro,turnro,horrealent,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                        StrSql = StrSql & TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'" & HCDesde & "','" & HCHasta & "'"
                        StrSql = StrSql & "," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                        StrSql = StrSql & ValorNulo & "," & Empleado.Ternro & "," & TH_Descuento & "," & Nro_Turno & ","
                        StrSql = StrSql & "'',''," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TH_Descuento & "- Cantidad: " & TotHor & " hs."
                        End If
                        
                        'Actualizo las horas originales
                        Diferencia = rs!Cantidad - TotHor
                        If Diferencia > 0 Then
                            HCFDesde = Pausa_FDesde
                            HCDesde = Pausa_HDesde
                            HCFHasta = ParoFDesde
                            HCHasta = ParoHDesde
                            objFechasHoras.RestaHs HCFDesde, HCDesde, HCFHasta, HCHasta, Tdias, Thoras, Tmin
                            TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                            TotHorHHMM = CHoras(TotHor, 60)
                           
                            StrSql = "UPDATE gti_horcumplido SET "
                            StrSql = StrSql & " horcant = " & Diferencia
                            StrSql = StrSql & " ,horas = " & TotHorHHMM
                            StrSql = StrSql & " ,hordesde = " & ConvFecha(HCFDesde)
                            StrSql = StrSql & " ,horhoradesde = '" & HCDesde & "'"
                            StrSql = StrSql & " ,horhasta = " & ConvFecha(HCFHasta)
                            StrSql = StrSql & " ,horhorahasta = '" & HCHasta & "'"
                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
                            objConn.Execute StrSql, , adExecuteNoRecords
                        Else
                            StrSql = "DELETE gti_horcumplido "
                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                End If
    
                'Paro           [---------------]
                'Pausa      (-----------------------)
                If objFechasHoras.Mayor_Igual_Hora(ParoFDesde, ParoHDesde, p_fecha, Pausa_HDesde) And objFechasHoras.Menor_Hora(ParoFDesde, ParoHDesde, p_fecha, Pausa_HHasta) And objFechasHoras.Menor_Igual_Hora(ParoFHasta, ParoHHasta, p_fecha, Pausa_HHasta) And objFechasHoras.Mayor_Hora(ParoFHasta, ParoHHasta, p_fecha, Pausa_HDesde) Then
                    objFechasHoras.RestaHs ParoFDesde, ParoHDesde, ParoFHasta, ParoHHasta, Tdias, Thoras, Tmin
                    HCFDesde = ParoFDesde
                    HCDesde = ParoHDesde
                    HCFHasta = ParoFHasta
                    HCHasta = ParoHHasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor > 0 Then
                        TotHorHHMM = CHoras(TotHor, 60)
                
                        StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                        StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                        StrSql = StrSql & " thnro,turnro,horrealent,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                        StrSql = StrSql & TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'" & HCDesde & "','" & HCHasta & "'"
                        StrSql = StrSql & "," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                        StrSql = StrSql & ValorNulo & "," & Empleado.Ternro & "," & TH_Descuento & "," & Nro_Turno & ","
                        StrSql = StrSql & "'',''," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TH_Descuento & "- Cantidad: " & TotHor & " hs."
                        End If
                        
                        'Actualizo las horas originales
                        Diferencia = rs!Cantidad - TotHor
                        If Diferencia > 0 Then
                            HCFDesde = Pausa_FDesde
                            HCDesde = Pausa_HDesde
                            HCFHasta = ParoFDesde
                            HCHasta = ParoHDesde
                            objFechasHoras.RestaHs HCFDesde, HCDesde, HCFHasta, HCHasta, Tdias, Thoras, Tmin
                            TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                            TotHorHHMM = CHoras(TotHor, 60)
                            
                            StrSql = "UPDATE gti_horcumplido SET "
                            StrSql = StrSql & " horcant = " & TotHor
                            StrSql = StrSql & " ,horas = " & TotHorHHMM
                            StrSql = StrSql & " ,hordesde = " & ConvFecha(HCFDesde)
                            StrSql = StrSql & " ,horhoradesde = '" & HCDesde & "'"
                            StrSql = StrSql & " ,horhasta = " & ConvFecha(HCFHasta)
                            StrSql = StrSql & " ,horhorahasta = '" & HCHasta & "'"
                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
                            objConn.Execute StrSql, , adExecuteNoRecords
                            
                            HCFDesde = ParoFHasta
                            HCDesde = ParoHHasta
                            HCFHasta = Pausa_FHasta
                            HCHasta = Pausa_HHasta
                            objFechasHoras.RestaHs HCFDesde, HCDesde, HCFHasta, HCHasta, Tdias, Thoras, Tmin
                            TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                            If TotHor > 0 Then
                                TotHorHHMM = CHoras(TotHor, 60)
                                
                                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                                StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                                StrSql = StrSql & " thnro,turnro,horrealent,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                                StrSql = StrSql & TotHorHHMM & "," & TotHor & "," & ConvFecha(HCFDesde) & ",' '," & ConvFecha(HCFHasta) & ",'" & HCDesde & "','" & HCHasta & "'"
                                StrSql = StrSql & "," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & IIf(EsNulo(rs!normnro), ValorNulo, "'" & rs!normnro & "'") & ","
                                StrSql = StrSql & IIf(EsNulo(rs!normnro2), ValorNulo, "'" & rs!normnro2 & "'") & "," & Empleado.Ternro & "," & rs!thnro & "," & Nro_Turno & ","
                                StrSql = StrSql & "'',''," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                                objConn.Execute StrSql, , adExecuteNoRecords
                            End If
                        Else
                            StrSql = "DELETE gti_horcumplido "
                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                End If
    
                'Paro       [---------------]
                'Pausa          (--------)
                If objFechasHoras.Menor_Hora(ParoFDesde, ParoHDesde, p_fecha, Pausa_HDesde) And objFechasHoras.Mayor_Hora(ParoFHasta, ParoHHasta, p_fecha, Pausa_HHasta) Then
                    objFechasHoras.RestaHs p_fecha, Pausa_HDesde, p_fecha, Pausa_HHasta, Tdias, Thoras, Tmin
                    HCDesde = Pausa_HDesde
                    HCHasta = Pausa_HHasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor > 0 Then
                        TotHorHHMM = CHoras(TotHor, 60)
                
                        StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                        StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                        StrSql = StrSql & " thnro,turnro,horrealent,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                        StrSql = StrSql & TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'" & HCDesde & "','" & HCHasta & "'"
                        StrSql = StrSql & "," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                        StrSql = StrSql & ValorNulo & "," & Empleado.Ternro & "," & TH_Descuento & "," & Nro_Turno & ","
                        StrSql = StrSql & "'',''," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TH_Descuento & "- Cantidad: " & TotHor & " hs."
                        End If
                        
                        StrSql = "DELETE gti_horcumplido "
                        StrSql = StrSql & " WHERE hornro = " & rs!hornro
                        objConn.Execute StrSql, , adExecuteNoRecords
                    End If
                End If
        
                rs.MoveNext
            Loop
            
            
            '-----------------------------------------------------
            'Revisar las anormalidades solapadas con el paro
            'Busco las horas de pausa o anormalidades
            StrSql = "SELECT hornro, horcant cantidad, horhoradesde, horhorahasta, normnro, normnro2, thnro FROM gti_horcumplido WHERE ternro = " & NroTer
            StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
            StrSql = StrSql & " AND horfecgen = " & ConvFecha(p_fecha)
            If ParoCubierto Then
                StrSql = StrSql & " AND thnro IN (" & Hora_ExcesoPausa & ")"
            Else
                StrSql = StrSql & " AND thnro IN (" & Hora_AP & "," & Hora_ST & "," & Hora_LLT & "," & Hora_ExcesoPausa & ")"
            End If
            OpenRecordset StrSql, rs
            'Reviso si hubo pausas
            If Not rs.EOF Then
                rs.MoveFirst
            End If
            Do While Not rs.EOF
                Pausa = rs!Cantidad
                
                Pausa_HDesde = IIf(Not EsNulo(rs!horhoradesde), rs!horhoradesde, "0000")
                Pausa_HHasta = IIf(Not EsNulo(rs!horhorahasta), rs!horhorahasta, "0000")
        
                'Reviso la interseccion de la pausa con el horario del paro
                'Paro       [---------------]
                'Pausa            (----------------)
                If objFechasHoras.Menor_Hora(ParoFDesde, ParoHDesde, p_fecha, Pausa_HDesde) And objFechasHoras.Menor_Hora(p_fecha, Pausa_HDesde, ParoFHasta, ParoHHasta) And objFechasHoras.Menor_Igual_Hora(ParoFHasta, ParoHHasta, p_fecha, Pausa_HHasta) Then
                    objFechasHoras.RestaHs p_fecha, Pausa_HDesde, ParoFHasta, ParoHHasta, Tdias, Thoras, Tmin
                    HCDesde = Pausa_HDesde
                    HCHasta = ParoHHasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    
                    If TotHor > 0 Then
                        If Not ParoCubierto Then
                            TotHorHHMM = CHoras(TotHor, 60)
                    
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,horrealent,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'" & HCDesde & "','" & HCHasta & "'"
                            StrSql = StrSql & "," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & Empleado.Ternro & "," & TH_Descuento & "," & Nro_Turno & ","
                            StrSql = StrSql & "'',''," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                    
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TH_Descuento & "- Cantidad: " & TotHor & " hs."
                            End If
                            
                            'Actualizo las horas originales
                            Diferencia = rs!Cantidad - TotHor
                            If Diferencia > 0 Then
                                TotHorHHMM = CHoras(Diferencia, 60)
                                HCDesde = HCHasta
                                HCHasta = rs!horhorahasta
                                
                                StrSql = "UPDATE gti_horcumplido SET "
                                StrSql = StrSql & " horcant = " & Diferencia
                                StrSql = StrSql & " ,horas = " & TotHorHHMM
                                StrSql = StrSql & " ,horhoradesde = '" & HCDesde & "'"
                                StrSql = StrSql & " ,horhorahasta = '" & HCHasta & "'"
                                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, , adExecuteNoRecords
                            Else
                                StrSql = "DELETE gti_horcumplido "
                                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, , adExecuteNoRecords
                            End If
                        Else
                            HCDesde = HCHasta
                            HCHasta = rs!horhorahasta
                            objFechasHoras.RestaHs p_fecha, HCDesde, p_fecha, HCHasta, Tdias, Thoras, Tmin
                            Diferencia = (Tdias * 24) + (Thoras + (Tmin / 60))
                            'Diferencia = Abs(rs!Cantidad - TotHor)
                            If Diferencia > 0 Then
                                TotHorHHMM = CHoras(Diferencia, 60)
                                'HCdesde = HChasta
                                'HChasta = rs!horhorahasta
                                
                                StrSql = "UPDATE gti_horcumplido SET "
                                StrSql = StrSql & " horcant = " & Diferencia
                                StrSql = StrSql & " ,horas = " & TotHorHHMM
                                StrSql = StrSql & " ,horhoradesde = '" & HCDesde & "'"
                                StrSql = StrSql & " ,horhorahasta = '" & HCHasta & "'"
                                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, , adExecuteNoRecords
                            Else
                                StrSql = "DELETE gti_horcumplido "
                                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, , adExecuteNoRecords
                            End If
                        End If
                    End If
                End If
    
                'Paro           [---------------]
                'Pausa      (----------------)
                If objFechasHoras.Mayor_Igual_Hora(ParoFDesde, ParoHDesde, p_fecha, Pausa_HDesde) And objFechasHoras.Menor_Hora(ParoFDesde, ParoHDesde, p_fecha, Pausa_HHasta) And objFechasHoras.Mayor_Hora(ParoFHasta, ParoHHasta, p_fecha, Pausa_HHasta) Then
                    objFechasHoras.RestaHs ParoFDesde, ParoHDesde, p_fecha, Pausa_HHasta, Tdias, Thoras, Tmin
                    HCDesde = ParoHDesde
                    HCHasta = Pausa_HHasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                
                    If TotHor > 0 Then
                        If Not ParoCubierto Then
                            TotHorHHMM = CHoras(TotHor, 60)
                    
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,horrealent,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'" & HCDesde & "','" & HCHasta & "'"
                            StrSql = StrSql & "," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & Empleado.Ternro & "," & TH_Descuento & "," & Nro_Turno & ","
                            StrSql = StrSql & "'',''," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                    
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TH_Descuento & "- Cantidad: " & TotHor & " hs."
                            End If
                            
                            'Actualizo las horas originales
                            Diferencia = rs!Cantidad - TotHor
                            If Diferencia > 0 Then
                                TotHorHHMM = CHoras(Diferencia, 60)
                                HCDesde = rs!horhoradesde
                                HCHasta = HCHasta
                                
                                StrSql = "UPDATE gti_horcumplido SET "
                                StrSql = StrSql & " horcant = " & Diferencia
                                StrSql = StrSql & " ,horas = " & TotHorHHMM
                                StrSql = StrSql & " ,thnro = " & TH_Pausa
                                StrSql = StrSql & " ,normnro = " & ValorNulo
                                StrSql = StrSql & " ,normnro2 = " & ValorNulo
                                StrSql = StrSql & " ,horhoradesde = '" & HCDesde & "'"
                                StrSql = StrSql & " ,horhorahasta = '" & HCHasta & "'"
                                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, , adExecuteNoRecords
                            Else
                                StrSql = "DELETE gti_horcumplido "
                                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, , adExecuteNoRecords
                            End If
                            
                            If ParoMonresa Then
                                'Eliminar los tipos de horas FRO
                                StrSql = "DELETE gti_horcumplido "
                                StrSql = StrSql & " WHERE ternro = " & NroTer
                                StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
                                StrSql = StrSql & " AND horfecgen = " & ConvFecha(p_fecha)
                                StrSql = StrSql & " AND (normnro IN (26,27,28,29,30,31)" 'FRO
                                StrSql = StrSql & " OR normnro2 IN (26,27,28,29,30,31))" 'FRO
                                objConn.Execute StrSql, , adExecuteNoRecords
                            Else
                                'Si la Salida teorica es mayor que el inicio del paro y menor que el fin ==> elimino las FRO
                                If S1 >= ParoHDesde And S1 <= ParoHHasta Then
                                    'Eliminar los tipos de horas FRO
                                    StrSql = "DELETE gti_horcumplido "
                                    StrSql = StrSql & " WHERE ternro = " & NroTer
                                    StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
                                    StrSql = StrSql & " AND horfecgen = " & ConvFecha(p_fecha)
                                    StrSql = StrSql & " AND (normnro IN (26,27,28,29,30,31)" 'FRO
                                    StrSql = StrSql & " OR normnro2 IN (26,27,28,29,30,31))" 'FRO
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                End If
                            End If
                        Else
                            HCDesde = HCHasta
                            HCHasta = rs!horhorahasta
                            objFechasHoras.RestaHs p_fecha, HCDesde, p_fecha, HCHasta, Tdias, Thoras, Tmin
                            Diferencia = (Tdias * 24) + (Thoras + (Tmin / 60))
                            'Diferencia = Abs(rs!Cantidad - TotHor)
                            If Diferencia > 0 Then
                                TotHorHHMM = CHoras(Diferencia, 60)
                                'HCdesde = HChasta
                                'HChasta = rs!horhorahasta
                                
                                StrSql = "UPDATE gti_horcumplido SET "
                                StrSql = StrSql & " horcant = " & Diferencia
                                StrSql = StrSql & " ,horas = " & TotHorHHMM
                                StrSql = StrSql & " ,horhoradesde = '" & HCDesde & "'"
                                StrSql = StrSql & " ,horhorahasta = '" & HCHasta & "'"
                                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, , adExecuteNoRecords
                            Else
                                StrSql = "DELETE gti_horcumplido "
                                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, , adExecuteNoRecords
                            End If
                        End If
                    End If
                End If
    
                'Paro           [---------------]
                'Pausa      (-----------------------)
                If objFechasHoras.Mayor_Igual_Hora(ParoFDesde, ParoHDesde, p_fecha, Pausa_HDesde) And objFechasHoras.Menor_Hora(ParoFDesde, ParoHDesde, p_fecha, Pausa_HHasta) And objFechasHoras.Menor_Igual_Hora(ParoFHasta, ParoHHasta, p_fecha, Pausa_HHasta) And objFechasHoras.Mayor_Hora(ParoFHasta, ParoHHasta, p_fecha, Pausa_HDesde) Then
                    objFechasHoras.RestaHs ParoFDesde, ParoHDesde, ParoFHasta, ParoHHasta, Tdias, Thoras, Tmin
                    HCDesde = ParoHDesde
                    HCHasta = ParoHHasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                
                    If TotHor > 0 Then
                        If Not ParoCubierto Then
                            TotHorHHMM = CHoras(TotHor, 60)
                    
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,horrealent,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'" & HCDesde & "','" & HCHasta & "'"
                            StrSql = StrSql & "," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & Empleado.Ternro & "," & TH_Descuento & "," & Nro_Turno & ","
                            StrSql = StrSql & "'',''," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                    
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TH_Descuento & "- Cantidad: " & TotHor & " hs."
                            End If
                            
                            'Actualizo las horas originales
                            Diferencia = rs!Cantidad - TotHor
                            If Diferencia > 0 Then
                                HCDesde = rs!horhoradesde
                                HCHasta = HCDesde
                                objFechasHoras.RestaHs p_fecha, HCDesde, p_fecha, HCHasta, Tdias, Thoras, Tmin
                                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                                TotHorHHMM = CHoras(TotHor, 60)
                                
                                StrSql = "UPDATE gti_horcumplido SET "
                                StrSql = StrSql & " horcant = " & TotHor
                                StrSql = StrSql & " ,horas = " & TotHorHHMM
                                StrSql = StrSql & " ,horhoradesde = '" & HCDesde & "'"
                                StrSql = StrSql & " ,horhorahasta = '" & HCHasta & "'"
                                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, , adExecuteNoRecords
                                
                                HCDesde = ParoHHasta
                                HCHasta = rs!horhorahasta
                                objFechasHoras.RestaHs p_fecha, HCDesde, p_fecha, HCHasta, Tdias, Thoras, Tmin
                                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                                If TotHor > 0 Then
                                    TotHorHHMM = CHoras(TotHor, 60)
                                    
                                    StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                                    StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                                    StrSql = StrSql & " thnro,turnro,horrealent,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                                    StrSql = StrSql & TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'" & HCDesde & "','" & HCHasta & "'"
                                    StrSql = StrSql & "," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & IIf(EsNulo(rs!normnro), ValorNulo, "'" & rs!normnro & "'") & ","
                                    StrSql = StrSql & IIf(EsNulo(rs!normnro2), ValorNulo, "'" & rs!normnro2 & "'") & "," & Empleado.Ternro & "," & rs!thnro & "," & Nro_Turno & ","
                                    StrSql = StrSql & "'',''," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                End If
                            Else
                                StrSql = "DELETE gti_horcumplido "
                                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, , adExecuteNoRecords
                            End If
                        Else
                            'Paro cubierto
                            'tengo 2 rangos de exceso(una parte antes y otra despues)
                            'me quedo solo con la de atras pues la de adelante se supone que se cubrió
                            HCDesde = HCHasta
                            HCHasta = rs!horhorahasta
                            objFechasHoras.RestaHs p_fecha, HCDesde, p_fecha, HCHasta, Tdias, Thoras, Tmin
                            Diferencia = (Tdias * 24) + (Thoras + (Tmin / 60))
                            If Diferencia > 0 Then
                                TotHorHHMM = CHoras(Diferencia, 60)
                                'HCdesde = HChasta
                                'HChasta = rs!horhorahasta
                                
                                StrSql = "UPDATE gti_horcumplido SET "
                                StrSql = StrSql & " horcant = " & Diferencia
                                StrSql = StrSql & " ,horas = " & TotHorHHMM
                                StrSql = StrSql & " ,horhoradesde = '" & HCDesde & "'"
                                StrSql = StrSql & " ,horhorahasta = '" & HCHasta & "'"
                                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, , adExecuteNoRecords
                            Else
                                StrSql = "DELETE gti_horcumplido "
                                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, , adExecuteNoRecords
                            End If
                        End If
                    End If
                End If
    
                'Paro       [---------------]
                'Pausa          (--------)
                If objFechasHoras.Menor_Hora(ParoFDesde, ParoHDesde, p_fecha, Pausa_HDesde) And objFechasHoras.Mayor_Hora(ParoFHasta, ParoHHasta, p_fecha, Pausa_HHasta) Then
                    objFechasHoras.RestaHs p_fecha, Pausa_HDesde, p_fecha, Pausa_HHasta, Tdias, Thoras, Tmin
                    HCDesde = Pausa_HDesde
                    HCHasta = Pausa_HHasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                
                    If TotHor > 0 Then
                        If Not ParoCubierto Then
                            TotHorHHMM = CHoras(TotHor, 60)
                    
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,horrealent,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'" & HCDesde & "','" & HCHasta & "'"
                            StrSql = StrSql & "," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & Empleado.Ternro & "," & TH_Descuento & "," & Nro_Turno & ","
                            StrSql = StrSql & "'',''," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                    
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TH_Descuento & "- Cantidad: " & TotHor & " hs."
                            End If
                            
                            StrSql = "DELETE gti_horcumplido "
                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
                            objConn.Execute StrSql, , adExecuteNoRecords
                            
                            If ParoMonresa Then
                                'Eliminar los tipos de horas FRO
                                StrSql = "DELETE gti_horcumplido "
                                StrSql = StrSql & " WHERE ternro = " & NroTer
                                StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
                                StrSql = StrSql & " AND horfecgen = " & ConvFecha(p_fecha)
                                StrSql = StrSql & " AND (normnro IN (26,27,28,29,30,31)" 'FRO
                                StrSql = StrSql & " OR normnro2 IN (26,27,28,29,30,31))" 'FRO
                                objConn.Execute StrSql, , adExecuteNoRecords
                            Else
                                'Si la Salida teorica es mayor que el inicio del paro y menor que el fin ==> elimino las FRO
                                If S1 >= ParoHDesde And S1 <= ParoHHasta Then
                                    'Eliminar los tipos de horas FRO
                                    StrSql = "DELETE gti_horcumplido "
                                    StrSql = StrSql & " WHERE ternro = " & NroTer
                                    StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
                                    StrSql = StrSql & " AND horfecgen = " & ConvFecha(p_fecha)
                                    StrSql = StrSql & " AND (normnro IN (26,27,28,29,30,31)" 'FRO
                                    StrSql = StrSql & " OR normnro2 IN (26,27,28,29,30,31))" 'FRO
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                End If
                            End If
                        Else
                            'Paro Cubierto
                            Diferencia = Abs(rs!Cantidad - TotHor)
                            If Diferencia > 0 Then
                                TotHorHHMM = CHoras(Diferencia, 60)
                                HCDesde = HCHasta
                                HCHasta = rs!horhorahasta
                                
                                StrSql = "UPDATE gti_horcumplido SET "
                                StrSql = StrSql & " horcant = " & Diferencia
                                StrSql = StrSql & " ,horas = " & TotHorHHMM
                                StrSql = StrSql & " ,horhoradesde = '" & HCDesde & "'"
                                StrSql = StrSql & " ,horhorahasta = '" & HCHasta & "'"
                                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, , adExecuteNoRecords
                            Else
                                StrSql = "DELETE gti_horcumplido "
                                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, , adExecuteNoRecords
                            End If
                        End If
                    End If
                End If
        
                rs.MoveNext
            Loop
            
            If ParoMonresa Then
                'FGZ - 28/10/2010 --------------------------------
                If (S1 >= ParoHDesde And S1 <= ParoHHasta) Then
                    'Eliminar los tipos de horas FRO
                    StrSql = "DELETE gti_horcumplido "
                    StrSql = StrSql & " WHERE ternro = " & NroTer
                    StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
                    StrSql = StrSql & " AND horfecgen = " & ConvFecha(p_fecha)
                    StrSql = StrSql & " AND (normnro IN (26,27,28,29,30,31)" 'FRO
                    StrSql = StrSql & " OR normnro2 IN (26,27,28,29,30,31))" 'FRO
                    objConn.Execute StrSql, , adExecuteNoRecords
                End If
            Else
                'Si la Salida teorica es mayor que el inicio del paro y menor que el fin ==> elimino las FRO
                If S1 >= ParoHDesde And S1 <= ParoHHasta Then
                    'Eliminar los tipos de horas FRO
                    StrSql = "DELETE gti_horcumplido "
                    StrSql = StrSql & " WHERE ternro = " & NroTer
                    StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
                    StrSql = StrSql & " AND horfecgen = " & ConvFecha(p_fecha)
                    StrSql = StrSql & " AND (normnro IN (26,27,28,29,30,31)" 'FRO
                    StrSql = StrSql & " OR normnro2 IN (26,27,28,29,30,31))" 'FRO
                    objConn.Execute StrSql, , adExecuteNoRecords
                End If
            End If
        End If
        
SiguienteParo:
        rs_Paros.MoveNext
    Loop
    '----------------------------------------------------------------------------------------------------
    '----------------------------------------------------------------------------------------------------
        
    
    
Fin_Paros:
'cierro y libero
    If rs.State = adStateOpen Then rs.Close
    If rs_Paros.State = adStateOpen Then rs_Paros.Close
    Set rs = Nothing
    Set rs_Paros = Nothing
    
    
End Sub


Public Sub Politica495_old(Fecha As Date, NroTer As Long, VentDesde As String, ventFdesde As Date, VentHasta As String, ventFhasta As Date, Nro_Turno As Long, deb As Boolean, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Política de descuento de hs por paro gremial.
'   La idea es que la política analice si en el dia de la fecha había paro y contraste con las registraciones
'   y genere un tipo de hora por la intersección.
'   Ademas debe considerar del total que posiblemente tenga horas de descanso que no deben ser descontadas.
'   Por lo cual debe buscar novedades horarias y descontarlas del total.
' Autor: FGZ - 01/09/2010
' Ultima modificacion:
'
' --------------------------------------------------------------
Dim Opcion As Long
Dim TH_Descuento As Long
Dim TH_Pausa As Long

Dim Thoras As Integer
Dim Tmin As Integer
Dim Tdias As Integer

Dim TotHor As Single '(descuento - pausa)
Dim TotHorHHMM As String

Dim Descuento As Single
Dim Diferencia As Single
Dim Pausa As Double
Dim Pausa_HDesde As String
Dim Pausa_HHasta As String

Dim ParoHDesde As String
Dim ParoHHasta As String
Dim ParoFDesde As Date
Dim ParoFHasta As Date
Dim ParoHoras As Single

Dim RegHDesde As String
Dim RegHHasta As String
Dim RegFDesde As Date
Dim RegFHasta As Date

Dim HCDesde As String
Dim HCHasta As String
Dim Hay_Reg As Boolean

Dim Cant_Reg As Integer
Dim Cant_Pares As Integer
Dim i As Integer


Dim par1 As String
Dim fecpar1 As Date
Dim par2 As String
Dim fecpar2 As Date

Dim ParoMonresa As Boolean
Dim Paro24HS As Boolean
Dim ParoCubierto As Boolean
Dim Hora_Ausencia As Long
Dim Hora_AP As Long
Dim Hora_LLT As Long
Dim Hora_ST As Long
Dim Hora_ExcesoPausa As Long


Dim rs As New ADODB.Recordset
Dim rs_Paros As New ADODB.Recordset
Dim rs_reg As New ADODB.Recordset


    'Busco los paros para el dia de la fecha
    StrSql = "SELECT paros.paronro,paros.tparonro,paros.parocompleto,paros.parofecha,paros.parohoradesde,paros.parohorahasta,paros.horcant  FROM paros "
    StrSql = StrSql & " INNER JOIN paros_ter ON paros.paronro = paros_ter.paronro"
    StrSql = StrSql & " WHERE parofecha = " & ConvFecha(p_fecha)
    StrSql = StrSql & " AND paros_ter.ternro = " & NroTer
    OpenRecordset StrSql, rs_Paros
    If rs_Paros.EOF Then
        If depurar Then
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No hay paros gremiales para el dia"
        End If
        GoTo Fin_Paros
    Else
        Call SetearParametrosPolitica(Detalle, ok)
        Opcion = st_Opcion
        TH_Descuento = IIf(EsNulo(st_TipoHora1), 0, st_TipoHora1)
        TH_Pausa = IIf(EsNulo(st_TipoHora2), 0, st_TipoHora2)
        
        If depurar Then
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Version: " & Opcion
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "  Tipos Hora Descuento: " & TH_Descuento
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "  Tipos Hora Pausa: " & TH_Pausa
        End If
    End If
    
    
    '---------------------------------------------------------------------
    'Busco los tipos de horas de anormalidades (ausencias, LLT, ST, AP, Exceso de Pausa)
    
    'Ausencia
    StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 2"
    StrSql = StrSql & " AND turnro = " & Nro_Turno
    StrSql = StrSql & " ORDER BY conhornro ASC, turnro ASC"
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        Hora_Ausencia = rs!thnro
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No esta configurado el tipo de hora de ausencia."
        End If
        Hora_Ausencia = 0
    End If
     
    'Ausencia Parcial
    StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 19"
    StrSql = StrSql & " AND turnro = " & Nro_Turno
    StrSql = StrSql & " ORDER BY conhornro ASC, turnro ASC"
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        Hora_AP = rs!thnro
    Else
       If depurar Then
           Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No esta configurado el tipo de hora de ausencia parcial."
       End If
       Hora_AP = 0
    End If
    
    'LLegada Tarde
    StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 4"
    StrSql = StrSql & " AND turnro = " & Nro_Turno
    StrSql = StrSql & " ORDER BY conhornro ASC, turnro ASC"
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        Hora_LLT = rs!thnro
    Else
       If depurar Then
           Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No esta configurado el tipo de hora de llegada tarde."
       End If
       Hora_LLT = 0
    End If
    
    'Salida Temprano
    StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 5"
    StrSql = StrSql & " AND turnro = " & Nro_Turno
    StrSql = StrSql & " ORDER BY conhornro ASC, turnro ASC"
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        Hora_ST = rs!thnro
    Else
       If depurar Then
           Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No esta configurado el tipo de hora de Salida Temprano."
       End If
       Hora_ST = 0
    End If
    
    'Exceso de Pausa
    StrSql = "SELECT * FROM gti_config_tur_hor WHERE conhornro = 18"
    StrSql = StrSql & " AND turnro = " & Nro_Turno
    StrSql = StrSql & " ORDER BY conhornro ASC, turnro ASC"
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        Hora_ExcesoPausa = rs!thnro
    Else
       If depurar Then
           Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "No esta configurado el tipo de hora de Exceso de Pausa."
       End If
       Hora_ExcesoPausa = 0
    End If
    '---------------------------------------------------------------------
    
    Do While Not rs_Paros.EOF
        ParoMonresa = IIf(rs_Paros!tparonro = 1, True, False)
        Paro24HS = CBool(rs_Paros!parocompleto)
        
        If Paro24HS Then
            'Entonces no hay registraciones por lo cual se deben comparar con las horas de ausencia
            'hornro, horcant cantidad, horhoradesde, horhorahasta, normnro, normnro2, thnro
            'StrSql = "SELECT hornro,horcant  FROM gti_horcumplido WHERE ternro = " & NroTer
            StrSql = "SELECT hornro, horcant, horhoradesde, horhorahasta, normnro, normnro2, thnro  FROM gti_horcumplido WHERE ternro = " & NroTer
            StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
            StrSql = StrSql & " AND horfecgen = " & ConvFecha(p_fecha)
            StrSql = StrSql & " AND thnro = " & Hora_Ausencia
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                'Genero hs de descuento de paro y elimino la anormalidad
                ParoHDesde = IIf(Not EsNulo(rs!horhoradesde), rs!horhoradesde, "0000")
                ParoHHasta = IIf(Not EsNulo(rs!horhorahasta), rs!horhorahasta, "0000")
                Descuento = rs!horcant
                
                If Descuento > 0 Then
                    TotHor = Descuento
                    TotHorHHMM = CHoras(TotHor, 60)
            
                    StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                    StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                    StrSql = StrSql & " thnro,turnro,horrealent,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                    StrSql = StrSql & TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & IIf(ParoHHasta < ParoHDesde, ConvFecha(p_fecha + 1), ConvFecha(p_fecha)) & ",'" & ParoHDesde & "','" & ParoHHasta & "'"
                    StrSql = StrSql & "," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                    StrSql = StrSql & ValorNulo & "," & Empleado.Ternro & "," & TH_Descuento & "," & Nro_Turno & ","
                    StrSql = StrSql & "'',''," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
            
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TH_Descuento & "- Cantidad: " & TotHor & " hs."
                    End If
                End If
            
                'Elimino las ausencias dado que se reemplazaron con las horas del paro
                StrSql = "DELETE FROM gti_horcumplido WHERE hornro = " & rs!hornro
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
        Else    'paro parcial
            
            ParoHoras = rs_Paros!horcant
            ParoHDesde = rs_Paros!parohoradesde
            ParoHHasta = rs_Paros!parohorahasta
            ParoFDesde = rs_Paros!parofecha
            ParoFHasta = rs_Paros!parofecha
            'Descuento = ParoHoras
            Descuento = 0
            ParoCubierto = False
            
            'Genero las horas de descuento entre las registraciones y el paro
            StrSql = "SELECT COUNT(regnro) as cant FROM " & TTempWFTurno & " WHERE evenro = 2 "
            OpenRecordset StrSql, rs_reg
            If Not rs_reg.EOF Then If Not IsNull(rs_reg!Cant) Then Cant_Reg = rs_reg!Cant
            Cant_Pares = Int(Cant_Reg / 2)
            If Cant_Pares = 0 Then
                Descuento = 0
            End If
            'intersecto con las registraciones
            For i = 1 To Cant_Pares
                Hay_Reg = True
                
                StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par = " & i
                OpenRecordset StrSql, rs_reg
                
                If rs_reg.EOF Then
                    Hay_Reg = False
                Else
                    par1 = rs_reg!Hora
                    fecpar1 = rs_reg!Fecha
                    
                    rs_reg.MoveNext
                    If rs_reg.EOF Then
                        Hay_Reg = False
                    Else
                        par2 = rs_reg!Hora
                        fecpar2 = rs_reg!Fecha
                    End If
                End If
                
                
                If Hay_Reg Then
            
                    'Paro       [---------------]
                    'registracion     (----------------)
                    If objFechasHoras.Menor_Hora(ParoFDesde, ParoHDesde, fecpar1, par1) And objFechasHoras.Menor_Hora(fecpar1, par1, ParoFHasta, ParoHHasta) And objFechasHoras.Menor_Igual_Hora(ParoFHasta, ParoHHasta, fecpar1, par2) Then
                        objFechasHoras.RestaHs fecpar1, par1, ParoFHasta, ParoHHasta, Tdias, Thoras, Tmin
                        HCDesde = par1
                        HCHasta = ParoHHasta
                        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    End If
        
                    'paro           [---------------]
                    'Horario    (----------------)
                    If objFechasHoras.Mayor_Igual_Hora(ParoFDesde, ParoHDesde, fecpar1, par1) And objFechasHoras.Menor_Hora(ParoFDesde, ParoHDesde, fecpar1, par2) And objFechasHoras.Mayor_Hora(ParoFHasta, ParoHHasta, fecpar1, par2) Then
                        objFechasHoras.RestaHs ParoFDesde, ParoHDesde, fecpar1, par2, Tdias, Thoras, Tmin
                        HCDesde = ParoHDesde
                        HCHasta = par2
                        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    End If
                    
                    'paro           [---------------]
                    'Horario    (-----------------------)
                    If objFechasHoras.Mayor_Igual_Hora(ParoFDesde, ParoHDesde, fecpar1, par1) And objFechasHoras.Menor_Hora(ParoFDesde, ParoHDesde, fecpar1, par2) And objFechasHoras.Menor_Igual_Hora(ParoFHasta, ParoHHasta, fecpar1, par2) And objFechasHoras.Mayor_Hora(ParoFHasta, ParoHHasta, fecpar1, par1) Then
                        objFechasHoras.RestaHs ParoFDesde, ParoHDesde, ParoFHasta, ParoHHasta, Tdias, Thoras, Tmin
                        HCDesde = ParoHDesde
                        HCHasta = ParoHHasta
                        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                        ParoCubierto = True
                    End If
        
                    'Paro       [---------------]
                    'Horario        (--------)
                    If objFechasHoras.Menor_Hora(ParoFDesde, ParoHDesde, fecpar1, par1) And objFechasHoras.Mayor_Hora(ParoFHasta, ParoHHasta, fecpar1, par2) Then
                        objFechasHoras.RestaHs fecpar1, par1, fecpar1, par2, Tdias, Thoras, Tmin
                        HCDesde = par1
                        HCHasta = par2
                        TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    End If
                    Descuento = TotHor
                Else
                    Descuento = 0
                End If
            Next i
            
            'Insertar las horas
            If Descuento > 0 Then
                TotHor = Descuento
                TotHorHHMM = CHoras(TotHor, 60)
        
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                StrSql = StrSql & " thnro,turnro,horrealent,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                StrSql = StrSql & TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'" & HCDesde & "','" & HCHasta & "'"
                StrSql = StrSql & "," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                StrSql = StrSql & ValorNulo & "," & Empleado.Ternro & "," & TH_Descuento & "," & Nro_Turno & ","
                StrSql = StrSql & "'',''," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
        
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TH_Descuento & "- Cantidad: " & TotHor & " hs."
                End If
            End If
            
            
            
            'Revisar las anormalidades solapadas con el paro
            
            'Busco las horas de pausa
            StrSql = "SELECT hornro, horcant cantidad, horhoradesde, horhorahasta, normnro, normnro2, thnro FROM gti_horcumplido WHERE ternro = " & NroTer
            StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
            StrSql = StrSql & " AND horfecgen = " & ConvFecha(p_fecha)
            If ParoCubierto Then
                StrSql = StrSql & " AND thnro IN (" & Hora_ExcesoPausa & ")"
            Else
                StrSql = StrSql & " AND thnro IN (" & Hora_AP & "," & Hora_ST & "," & Hora_LLT & "," & Hora_ExcesoPausa & ")"
            End If
            OpenRecordset StrSql, rs
            'Reviso si hubo pausas
            If Not rs.EOF Then
                rs.MoveFirst
            End If
            Do While Not rs.EOF
                Pausa = rs!Cantidad
                
                Pausa_HDesde = IIf(Not EsNulo(rs!horhoradesde), rs!horhoradesde, "0000")
                Pausa_HHasta = IIf(Not EsNulo(rs!horhorahasta), rs!horhorahasta, "0000")
        
                'Reviso la interseccion de la pausa con el horario del paro
                'Paro       [---------------]
                'Pausa            (----------------)
                If objFechasHoras.Menor_Hora(ParoFDesde, ParoHDesde, p_fecha, Pausa_HDesde) And objFechasHoras.Menor_Hora(p_fecha, Pausa_HDesde, ParoFHasta, ParoHHasta) And objFechasHoras.Menor_Igual_Hora(ParoFHasta, ParoHHasta, p_fecha, Pausa_HHasta) Then
                    objFechasHoras.RestaHs p_fecha, Pausa_HDesde, ParoFHasta, ParoHHasta, Tdias, Thoras, Tmin
                    HCDesde = Pausa_HDesde
                    HCHasta = ParoHHasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    
                    If TotHor > 0 Then
                        If Not ParoCubierto Then
                            TotHorHHMM = CHoras(TotHor, 60)
                    
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,horrealent,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'" & HCDesde & "','" & HCHasta & "'"
                            StrSql = StrSql & "," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & Empleado.Ternro & "," & TH_Descuento & "," & Nro_Turno & ","
                            StrSql = StrSql & "'',''," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                    
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TH_Descuento & "- Cantidad: " & TotHor & " hs."
                            End If
                            
                            'Actualizo las horas originales
                            Diferencia = rs!Cantidad - TotHor
                            If Diferencia > 0 Then
                                TotHorHHMM = CHoras(Diferencia, 60)
                                HCDesde = HCHasta
                                HCHasta = rs!horhorahasta
                                
                                StrSql = "UPDATE gti_horcumplido SET "
                                StrSql = StrSql & " horcant = " & Diferencia
                                StrSql = StrSql & " ,horas = " & TotHorHHMM
                                StrSql = StrSql & " ,horhoradesde = '" & HCDesde & "'"
                                StrSql = StrSql & " ,horhorahasta = '" & HCHasta & "'"
                                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, , adExecuteNoRecords
                            Else
                                StrSql = "DELETE gti_horcumplido "
                                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, , adExecuteNoRecords
                            End If
                        Else
                            HCDesde = HCHasta
                            HCHasta = rs!horhorahasta
                            objFechasHoras.RestaHs p_fecha, HCDesde, p_fecha, HCHasta, Tdias, Thoras, Tmin
                            Diferencia = (Tdias * 24) + (Thoras + (Tmin / 60))
                            'Diferencia = Abs(rs!Cantidad - TotHor)
                            If Diferencia > 0 Then
                                TotHorHHMM = CHoras(Diferencia, 60)
                                'HCdesde = HChasta
                                'HChasta = rs!horhorahasta
                                
                                StrSql = "UPDATE gti_horcumplido SET "
                                StrSql = StrSql & " horcant = " & Diferencia
                                StrSql = StrSql & " ,horas = " & TotHorHHMM
                                StrSql = StrSql & " ,horhoradesde = '" & HCDesde & "'"
                                StrSql = StrSql & " ,horhorahasta = '" & HCHasta & "'"
                                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, , adExecuteNoRecords
                            Else
                                StrSql = "DELETE gti_horcumplido "
                                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, , adExecuteNoRecords
                            End If
                        End If
                    End If
                End If
    
                'Paro           [---------------]
                'Pausa      (----------------)
                If objFechasHoras.Mayor_Igual_Hora(ParoFDesde, ParoHDesde, p_fecha, Pausa_HDesde) And objFechasHoras.Menor_Hora(ParoFDesde, ParoHDesde, p_fecha, Pausa_HHasta) And objFechasHoras.Mayor_Hora(ParoFHasta, ParoHHasta, p_fecha, Pausa_HHasta) Then
                    objFechasHoras.RestaHs ParoFDesde, ParoHDesde, p_fecha, Pausa_HHasta, Tdias, Thoras, Tmin
                    HCDesde = ParoHDesde
                    HCHasta = Pausa_HHasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                
                    If TotHor > 0 Then
                        If Not ParoCubierto Then
                            TotHorHHMM = CHoras(TotHor, 60)
                    
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,horrealent,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'" & HCDesde & "','" & HCHasta & "'"
                            StrSql = StrSql & "," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & Empleado.Ternro & "," & TH_Descuento & "," & Nro_Turno & ","
                            StrSql = StrSql & "'',''," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                    
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TH_Descuento & "- Cantidad: " & TotHor & " hs."
                            End If
                            
                            'Actualizo las horas originales
                            Diferencia = rs!Cantidad - TotHor
                            If Diferencia > 0 Then
                                TotHorHHMM = CHoras(Diferencia, 60)
                                HCDesde = rs!horhoradesde
                                HCHasta = HCHasta
                                
                                StrSql = "UPDATE gti_horcumplido SET "
                                StrSql = StrSql & " horcant = " & Diferencia
                                StrSql = StrSql & " ,horas = " & TotHorHHMM
                                StrSql = StrSql & " ,thnro = " & TH_Pausa
                                StrSql = StrSql & " ,normnro = " & ValorNulo
                                StrSql = StrSql & " ,normnro2 = " & ValorNulo
                                StrSql = StrSql & " ,horhoradesde = '" & HCDesde & "'"
                                StrSql = StrSql & " ,horhorahasta = '" & HCHasta & "'"
                                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, , adExecuteNoRecords
                            Else
                                StrSql = "DELETE gti_horcumplido "
                                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, , adExecuteNoRecords
                            End If
                            
                            'Si la Salida teorica es mayor que el inicio del paro y menor que el fin ==> elimino las FRO
                            If S1 >= ParoHDesde And S1 <= ParoHHasta Then
                                'Eliminar los tipos de horas FRO
                                StrSql = "DELETE gti_horcumplido "
                                StrSql = StrSql & " WHERE ternro = " & NroTer
                                StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
                                StrSql = StrSql & " AND horfecgen = " & ConvFecha(p_fecha)
                                StrSql = StrSql & " AND (normnro IN (26,27,28,29,30,31)" 'FRO
                                StrSql = StrSql & " OR normnro2 IN (26,27,28,29,30,31))" 'FRO
                                objConn.Execute StrSql, , adExecuteNoRecords
                            End If
                        Else
                            'Paro cubierto
                            Diferencia = Abs(rs!Cantidad - TotHor)
                            If Diferencia > 0 Then
                                TotHorHHMM = CHoras(Diferencia, 60)
                                HCDesde = HCHasta
                                HCHasta = rs!horhorahasta
                                
                                StrSql = "UPDATE gti_horcumplido SET "
                                StrSql = StrSql & " horcant = " & Diferencia
                                StrSql = StrSql & " ,horas = " & TotHorHHMM
                                StrSql = StrSql & " ,horhoradesde = '" & HCDesde & "'"
                                StrSql = StrSql & " ,horhorahasta = '" & HCHasta & "'"
                                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, , adExecuteNoRecords
                            Else
                                StrSql = "DELETE gti_horcumplido "
                                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, , adExecuteNoRecords
                            End If
                        End If
                    End If
                End If
    
                'Paro           [---------------]
                'Pausa      (-----------------------)
                If objFechasHoras.Mayor_Igual_Hora(ParoFDesde, ParoHDesde, p_fecha, Pausa_HDesde) And objFechasHoras.Menor_Hora(ParoFDesde, ParoHDesde, p_fecha, Pausa_HHasta) And objFechasHoras.Menor_Igual_Hora(ParoFHasta, ParoHHasta, p_fecha, Pausa_HHasta) And objFechasHoras.Mayor_Hora(ParoFHasta, ParoHHasta, p_fecha, Pausa_HDesde) Then
                    objFechasHoras.RestaHs ParoFDesde, ParoHDesde, ParoFHasta, ParoHHasta, Tdias, Thoras, Tmin
                    HCDesde = ParoHDesde
                    HCHasta = ParoHHasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                
                    If TotHor > 0 Then
                        If Not ParoCubierto Then
                            TotHorHHMM = CHoras(TotHor, 60)
                    
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,horrealent,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'" & HCDesde & "','" & HCHasta & "'"
                            StrSql = StrSql & "," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & Empleado.Ternro & "," & TH_Descuento & "," & Nro_Turno & ","
                            StrSql = StrSql & "'',''," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                    
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TH_Descuento & "- Cantidad: " & TotHor & " hs."
                            End If
                            
                            'Actualizo las horas originales
                            Diferencia = rs!Cantidad - TotHor
                            If Diferencia > 0 Then
                                HCDesde = rs!horhoradesde
                                HCHasta = HCDesde
                                objFechasHoras.RestaHs p_fecha, HCDesde, p_fecha, HCHasta, Tdias, Thoras, Tmin
                                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                                TotHorHHMM = CHoras(TotHor, 60)
                                
                                StrSql = "UPDATE gti_horcumplido SET "
                                StrSql = StrSql & " horcant = " & TotHor
                                StrSql = StrSql & " ,horas = " & TotHorHHMM
                                StrSql = StrSql & " ,horhoradesde = '" & HCDesde & "'"
                                StrSql = StrSql & " ,horhorahasta = '" & HCHasta & "'"
                                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, , adExecuteNoRecords
                                
                                HCDesde = ParoHHasta
                                HCHasta = rs!horhorahasta
                                objFechasHoras.RestaHs p_fecha, HCDesde, p_fecha, HCHasta, Tdias, Thoras, Tmin
                                TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                                If TotHor > 0 Then
                                    TotHorHHMM = CHoras(TotHor, 60)
                                    
                                    StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                                    StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                                    StrSql = StrSql & " thnro,turnro,horrealent,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                                    StrSql = StrSql & TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'" & HCDesde & "','" & HCHasta & "'"
                                    StrSql = StrSql & "," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & IIf(EsNulo(rs!normnro), ValorNulo, "'" & rs!normnro & "'") & ","
                                    StrSql = StrSql & IIf(EsNulo(rs!normnro2), ValorNulo, "'" & rs!normnro2 & "'") & "," & Empleado.Ternro & "," & rs!thnro & "," & Nro_Turno & ","
                                    StrSql = StrSql & "'',''," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                End If
                            Else
                                StrSql = "DELETE gti_horcumplido "
                                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, , adExecuteNoRecords
                            End If
                        Else
                            'Paro cubierto
                            'tengo 2 rangos de exceso(una parte antes y otra despues)
                            'me quedo solo con la de atras pues la de adelante se supone que se cubrió
                            HCDesde = HCHasta
                            HCHasta = rs!horhorahasta
                            objFechasHoras.RestaHs p_fecha, HCDesde, p_fecha, HCHasta, Tdias, Thoras, Tmin
                            Diferencia = (Tdias * 24) + (Thoras + (Tmin / 60))
                            If Diferencia > 0 Then
                                TotHorHHMM = CHoras(Diferencia, 60)
                                'HCdesde = HChasta
                                'HChasta = rs!horhorahasta
                                
                                StrSql = "UPDATE gti_horcumplido SET "
                                StrSql = StrSql & " horcant = " & Diferencia
                                StrSql = StrSql & " ,horas = " & TotHorHHMM
                                StrSql = StrSql & " ,horhoradesde = '" & HCDesde & "'"
                                StrSql = StrSql & " ,horhorahasta = '" & HCHasta & "'"
                                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, , adExecuteNoRecords
                            Else
                                StrSql = "DELETE gti_horcumplido "
                                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, , adExecuteNoRecords
                            End If
                        End If
                    End If
                End If
    
                'Paro       [---------------]
                'Pausa          (--------)
                If objFechasHoras.Menor_Hora(ParoFDesde, ParoHDesde, p_fecha, Pausa_HDesde) And objFechasHoras.Mayor_Hora(ParoFHasta, ParoHHasta, p_fecha, Pausa_HHasta) Then
                    objFechasHoras.RestaHs p_fecha, Pausa_HDesde, p_fecha, Pausa_HHasta, Tdias, Thoras, Tmin
                    HCDesde = Pausa_HDesde
                    HCHasta = Pausa_HHasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                
                    If TotHor > 0 Then
                        If Not ParoCubierto Then
                            TotHorHHMM = CHoras(TotHor, 60)
                    
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde,"
                            StrSql = StrSql & " horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro,"
                            StrSql = StrSql & " thnro,turnro,horrealent,horrealsal,Empleg,horfecrep,horfecgen) VALUES ("
                            StrSql = StrSql & TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'" & HCDesde & "','" & HCHasta & "'"
                            StrSql = StrSql & "," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & ","
                            StrSql = StrSql & ValorNulo & "," & Empleado.Ternro & "," & TH_Descuento & "," & Nro_Turno & ","
                            StrSql = StrSql & "'',''," & Empleado.Legajo & "," & ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                    
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TH_Descuento & "- Cantidad: " & TotHor & " hs."
                            End If
                            
                            StrSql = "DELETE gti_horcumplido "
                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
                            objConn.Execute StrSql, , adExecuteNoRecords
                            
                            
                            'Si la Salida teorica es mayor que el inicio del paro y menor que el fin ==> elimino las FRO
                            If S1 >= ParoHDesde And S1 <= ParoHHasta Then
                                'Eliminar los tipos de horas FRO
                                StrSql = "DELETE gti_horcumplido "
                                StrSql = StrSql & " WHERE ternro = " & NroTer
                                StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
                                StrSql = StrSql & " AND horfecgen = " & ConvFecha(p_fecha)
                                StrSql = StrSql & " AND (normnro IN (26,27,28,29,30,31)" 'FRO
                                StrSql = StrSql & " OR normnro2 IN (26,27,28,29,30,31))" 'FRO
                                objConn.Execute StrSql, , adExecuteNoRecords
                            End If
                        Else
                            'Paro Cubierto
                            Diferencia = Abs(rs!Cantidad - TotHor)
                            If Diferencia > 0 Then
                                TotHorHHMM = CHoras(Diferencia, 60)
                                HCDesde = HCHasta
                                HCHasta = rs!horhorahasta
                                
                                StrSql = "UPDATE gti_horcumplido SET "
                                StrSql = StrSql & " horcant = " & Diferencia
                                StrSql = StrSql & " ,horas = " & TotHorHHMM
                                StrSql = StrSql & " ,horhoradesde = '" & HCDesde & "'"
                                StrSql = StrSql & " ,horhorahasta = '" & HCHasta & "'"
                                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, , adExecuteNoRecords
                            Else
                                StrSql = "DELETE gti_horcumplido "
                                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, , adExecuteNoRecords
                            End If
                        End If
                    End If
                End If
        
                rs.MoveNext
            Loop
        End If
        
SiguienteParo:
        rs_Paros.MoveNext
    Loop
    '----------------------------------------------------------------------------------------------------
    '----------------------------------------------------------------------------------------------------
        
    
    
Fin_Paros:
'cierro y libero
    If rs.State = adStateOpen Then rs.Close
    If rs_Paros.State = adStateOpen Then rs_Paros.Close
    Set rs = Nothing
    Set rs_Paros = Nothing
    
    
End Sub





Public Sub politica589(subn As Integer)
' --------------------------------------------------------------
' Descripcion: Habilita el desglose de movilidad (relevos).
'                1 - Monresa
'                2 - Relevo de estructuras - Desglose de horas a partir de relevos de estructuras
' Autor: FGZ
' Ultima modificacion: LED - 14/05/2013 - Se versiono la politica y se agrego la version 2
'                   EAM (v5.37) - CAS-22808 - SGS - Distribución Contable.

' --------------------------------------------------------------

    UsaDesgloseMovilidad = True
    
    Select Case subn
        Case 1:
            Call Desglose_Relevos(Empleado.Ternro, p_fecha)
        Case 2:
            Call Desglose_RelevosV2(Empleado.Ternro, p_fecha)
        Case 3:
            Call Desglose_MovilidadV3(Empleado.Ternro, p_fecha)
        Case 4
            Call Desglose_MovilidadV4(Empleado.Ternro, p_fecha)
    End Select

End Sub

Public Sub politica710(ByVal p_ternro As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Habilita el distribucion de hs .
' Autor: FGZ
' Ultima modificacion:
' --------------------------------------------------------------
Dim Opcion As Long

    Call SetearParametrosPolitica(Detalle, ok)

    Opcion = st_Opcion  'Version de la politica
    If depurar Then
        Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Version: " & Opcion
    End If

    Select Case Opcion
    Case 1: 'Custom AGD
        Call DistribucionHs(p_ternro, p_fecha)
    Case Else:  'Version inexistente
        If depurar Then
            Flog.writeline Espacios(Tabulador * Nivel_Tab_Log) & "Version inexistente. " & Opcion
        End If
    End Select


End Sub


Public Sub Politica720(ByVal NroTer As Long, ByVal Fecha As Date, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Política de Horas Insalubles. (v5.44)
' Autor: Margiotta, Emanuel
'
' --------------------------------------------------------------
Dim TH_Justif As Long
Dim TH_ExcesoComedor As Long
Dim VentSal As String
Dim VentEnt As String
Dim HsComedor As Integer
Dim ListaTH As String

    Call SetearParametrosPolitica(Detalle, ok)
        
    Select Case subn
    Case 1: 'EAM- Convierte las horas del horario cumplido al equivalente de horas insalubles configurada.
        Call Politica720v1(NroTer, Fecha)
    Case 2:
        Call Politica720v2(NroTer, Fecha)
    Case 3:
        Call Politica720v3(NroTer, Fecha)
    Case 4:
        Call Politica720v4(NroTer, Fecha)
    Case Else:
        Call Politica720v1(NroTer, Fecha)
    End Select
End Sub


Public Sub Politica730(ByVal NroTer As Long, ByVal Fecha As Date, subn As Integer, ByVal Cabecera As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Política de desgloce de Horas. (v5.48)
' Autor: Margiotta, Emanuel
'
' --------------------------------------------------------------
    Call SetearParametrosPolitica(Detalle, ok)
        
    Select Case subn
    Case 1: 'EAM (5.48)- Genera el desgloce de las horas generadas por la forma de pago. El desgloce viene del modelo 169 de lectura de registraciones
        Call Politica730v1(NroTer, Fecha)
    Case 2: 'Carmen Quintero (5.74)- Genera el desgloce de las horas en funcion si se cargó algun parte de cambio de turno con distribucion
        Call Politica730v2(NroTer, Fecha)
    Case Else:
        Call Politica730v1(NroTer, Fecha)
    End Select
End Sub


Public Sub Politica720v1(ByVal NroTer As Long, ByVal Fecha As Date)
' --------------------------------------------------------------
' Descripcion: Convierte las totalidad de horas configuradas como insaluble a su equivalente.
' Autor: EAM Convierte las horas al equivalente a las horas insalubles configurada (factor politica 720)
'       EJ: Factor:1.33 - Hs Normales 9
'       Caluclo: (hsNormales * Factor)
'       Resultado: 11.97 HsInsalubles
' Ultima modificacion:
' --------------------------------------------------------------
Dim Opcion As Long
Dim l_rs As New ADODB.Recordset
Dim l_rsHorCumpl As New ADODB.Recordset
Dim TotHorHHMM
Dim canthoras As Single
Dim StrSql2 As String

    On Error GoTo ce
    'Call SetearParametrosPolitica(Detalle, ok)
    
    
        StrSql = "SELECT hc.* FROM gti_horcumplido hc " & _
                " INNER JOIN gti_registracion r ON r.regnro = hc.regent " & _
                " INNER JOIN gti_reloj rel ON rel.relnro = r.relnro AND rel.relinsal=-1 " & _
                " WHERE horfecrep = " & ConvFecha(Fecha) & " AND hc.ternro= " & NroTer
        OpenRecordset StrSql, l_rsHorCumpl
        
        If depurar Then
            If l_rsHorCumpl.RecordCount > 0 Then
                Flog.writeline Espacios(Tabulador * 2) & "  ==> Se encontraron Tipo de Horas de relojes Insaluble."
            Else
                Flog.writeline Espacios(Tabulador * 2) & "  ==> No se encontraron Tipo de Horas de relojes Insaluble."
                
            End If
        End If
        
        
        'Analizo todos las horas generadas en relojes insalubles. Busco por cada hora el tipo de hora equivalente insaluble y la convierte
        Do While Not l_rsHorCumpl.EOF
        
            StrSql = "SELECT thnro,thinsal FROM tiphora Where thinsal <> 0 AND thnro= " & l_rsHorCumpl("thnro")
            OpenRecordset StrSql, l_rs
            StrSql = ""
            If Not l_rs.EOF Then
                canthoras = CDbl(l_rsHorCumpl("horcant")) * st_Factor
                TotHorHHMM = CHoras(canthoras, 60)
                
                StrSql = "UPDATE gti_horcumplido SET horas= " & TotHorHHMM
                StrSql = StrSql & ", horcant= " & canthoras
                StrSql = StrSql & ", thnro = " & l_rs!thinsal
                StrSql = StrSql & " WHERE thnro = " & l_rsHorCumpl!thnro
                StrSql = StrSql & " AND ternro = " & NroTer
                StrSql = StrSql & " AND horfecrep = " & ConvFecha(Fecha)
                objConn.Execute StrSql, , adExecuteNoRecords
                
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Se convirtio el Tipo de Hora " & l_rsHorCumpl!thnro & " al Tipo de Hora: " & l_rs!thinsal & " - Cantidad: " & canthoras & " hs."
                End If
            Else
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> No se encontro configurada la Hora Insaluble equivalente para el Tipo de Hora: " & l_rs!thnro
                End If
            End If
            l_rsHorCumpl.MoveNext
        Loop
        GoTo datosOK

datosOK:
    Exit Sub
ce:
    Flog.writeline " ------------------------------"
    Flog.writeline Err.Description
    Flog.writeline
    Flog.writeline "Ultimo SQL: " & StrSql
    Flog.writeline
End Sub


Public Sub Politica720v2(ByVal NroTer As Long, ByVal Fecha As Date)
' --------------------------------------------------------------
' Descripcion: Calcula las horas insaluble
' Autor: EAM- Convierte las horas al equivalente a las horas insalubles configurada (factor politica 720)
'       EJ: Factor:1.33 - Hs Normales 9
'       Caluclo: (hsNormales * Factor) - hsNormales
'       Resultado: 9 hs normales
'                  2.97 HsInsalubles
' Ultima modificacion:
' --------------------------------------------------------------
Dim Opcion As Long
Dim l_rs As New ADODB.Recordset
Dim l_rsHorCumpl As New ADODB.Recordset
Dim TotHorHHMM
Dim TotHorHHMMAux
Dim canthoras As Single
Dim cantHorasAux As Single
Dim StrSql2 As String

    On Error GoTo ce
    'Call SetearParametrosPolitica(Detalle, ok)
    
    
        StrSql = "SELECT hc.* FROM gti_horcumplido hc " & _
                " INNER JOIN gti_registracion r ON r.regnro = hc.regent " & _
                " INNER JOIN gti_reloj rel ON rel.relnro = r.relnro AND rel.relinsal=-1 " & _
                " WHERE horfecrep = " & ConvFecha(Fecha) & " AND hc.ternro= " & NroTer
        OpenRecordset StrSql, l_rsHorCumpl
        
        If depurar Then
            If l_rsHorCumpl.RecordCount > 0 Then
                Flog.writeline Espacios(Tabulador * 2) & "  ==> Se encontraron Tipo de Horas de relojes Insaluble."
            Else
                Flog.writeline Espacios(Tabulador * 2) & "  ==> No se encontraron Tipo de Horas de relojes Insaluble."
            End If
        End If
        
        
        'Analizo todos las horas generadas en relojes insalubles. Busco por cada hora el tipo de hora equivalente insaluble y la convierte
        Do While Not l_rsHorCumpl.EOF
        
            StrSql = "SELECT thnro,thinsal FROM tiphora Where thinsal <> 0 AND thnro= " & l_rsHorCumpl("thnro")
            OpenRecordset StrSql, l_rs
            StrSql = ""
            If Not l_rs.EOF Then
                
                'Convierte las horas y calcula el saldo de las horas original
                canthoras = CDbl(l_rsHorCumpl("horcant")) * st_Factor
                If (canthoras > CDbl(l_rsHorCumpl("horcant"))) Then
                    cantHorasAux = canthoras - CDbl(l_rsHorCumpl("horcant"))
                    TotHorHHMMAux = CHoras(cantHorasAux, 60)
                    canthoras = CDbl(l_rsHorCumpl("horcant"))
                    TotHorHHMM = CHoras(canthoras, 60)
                Else
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> No aplica conversión porque el total es menor que las horas originales. Factor < 1"
                    GoTo ce
                End If
                
                If cantHorasAux > 0 Then
                    StrSql = "UPDATE gti_horcumplido SET horas= " & TotHorHHMMAux
                    StrSql = StrSql & ", horcant= " & canthoras
                    StrSql = StrSql & " WHERE thnro = " & l_rsHorCumpl!thnro
                    StrSql = StrSql & " AND ternro = " & NroTer
                    StrSql = StrSql & " AND horfecrep = " & ConvFecha(Fecha)
                    objConn.Execute StrSql, , adExecuteNoRecords
                End If
                
                
                If canthoras > 0 Then
                    StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                        " horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta,horestado" & _
                        " ) VALUES (" & TotHorHHMMAux & "," & cantHorasAux & "," & _
                        ConvFecha(l_rsHorCumpl!hordesde) & "," & ConvFecha(l_rsHorCumpl!horhasta) & "," & l_rsHorCumpl!hormanual & "," & l_rsHorCumpl!horvalido & "," & _
                        NroTer & "," & l_rs!thinsal & "," & l_rsHorCumpl!turnro & "," & l_rsHorCumpl!empleg & "," & _
                        ConvFecha(l_rsHorCumpl!horfecrep) & "," & ConvFecha(l_rsHorCumpl!horfecgen) & ",'" & l_rsHorCumpl!horhoradesde & "','" & l_rsHorCumpl!horhorahasta & "','')"
                        objConn.Execute StrSql, , adExecuteNoRecords
                End If
                
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Se convirtio el Tipo de Hora " & l_rsHorCumpl!thnro & " al Tipo de Hora: " & l_rs!thinsal & " - Cantidad: " & canthoras & " hs."
                End If
            Else
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> No se encontro configurada la Hora Insaluble equivalente para el Tipo de Hora: " & l_rs!thnro
                End If
            End If
            l_rsHorCumpl.MoveNext
        Loop
        GoTo datosOK

datosOK:
    Exit Sub
ce:
    Flog.writeline " ------------------------------"
    Flog.writeline Err.Description
    Flog.writeline
    Flog.writeline "Ultimo SQL: " & StrSql
    Flog.writeline
End Sub

Public Sub Politica720v3(ByVal NroTer As Long, ByVal Fecha As Date)
' --------------------------------------------------------------
' Descripcion: Calcula las horas insaluble
' Autor: EAM- Convierte las horas al equivalente a las horas insalubles configurada (factor politica 720)
'       EJ: Factor:1.33 - Hs Normales 9
'       Caluclo: (hsNormales * Factor)
'       Resultado: 9 hs normales
'                  11.97 HsInsalubles
' Ultima modificacion:
' --------------------------------------------------------------
Dim Opcion As Long
Dim l_rs As New ADODB.Recordset
Dim l_rsHorCumpl As New ADODB.Recordset
Dim TotHorHHMM
Dim TotHorHHMMAux
Dim canthoras As Single
Dim cantHorasAux As Single
Dim StrSql2 As String

    On Error GoTo ce

    StrSql = "SELECT hc.* FROM gti_horcumplido hc " & _
            " INNER JOIN gti_registracion r ON r.regnro = hc.regent " & _
            " INNER JOIN gti_reloj rel ON rel.relnro = r.relnro AND rel.relinsal=-1 " & _
            " WHERE horfecrep = " & ConvFecha(Fecha) & " AND hc.ternro= " & NroTer
    OpenRecordset StrSql, l_rsHorCumpl
    
    If depurar Then
        If l_rsHorCumpl.RecordCount > 0 Then
            Flog.writeline Espacios(Tabulador * 2) & "  ==> Se encontraron Tipo de Horas de relojes Insaluble."
        Else
            Flog.writeline Espacios(Tabulador * 2) & "  ==> No se encontraron Tipo de Horas de relojes Insaluble."
        End If
    End If
    
    
    'Analizo todos las horas generadas en relojes insalubles. Busco por cada hora el tipo de hora equivalente insaluble y la convierte
    Do While Not l_rsHorCumpl.EOF
    
        StrSql = "SELECT thnro,thinsal FROM tiphora Where thinsal <> 0 AND thnro= " & l_rsHorCumpl("thnro")
        OpenRecordset StrSql, l_rs
        StrSql = ""
        
        If Not l_rs.EOF Then
            
            'Convierte las horas y calcula el saldo de las horas original
            canthoras = CDbl(l_rsHorCumpl("horcant")) * st_Factor
            If (canthoras > 0) Then
                cantHorasAux = canthoras
                TotHorHHMMAux = CHoras(canthoras, 60)
                canthoras = CDbl(l_rsHorCumpl("horcant"))
                TotHorHHMM = CHoras(canthoras, 60)
            End If
            
            If cantHorasAux > 0 Then
                StrSql = "UPDATE gti_horcumplido SET horas= " & TotHorHHMM
                StrSql = StrSql & ", horcant= " & canthoras
                StrSql = StrSql & " WHERE thnro = " & l_rsHorCumpl!thnro
                StrSql = StrSql & " AND ternro = " & NroTer
                StrSql = StrSql & " AND horfecrep = " & ConvFecha(Fecha)
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
            
            
            If canthoras > 0 Then
                StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                    " horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta,horestado" & _
                    " ) VALUES (" & TotHorHHMMAux & "," & cantHorasAux & "," & _
                    ConvFecha(l_rsHorCumpl!hordesde) & "," & ConvFecha(l_rsHorCumpl!horhasta) & "," & l_rsHorCumpl!hormanual & "," & l_rsHorCumpl!horvalido & "," & _
                    NroTer & "," & l_rs!thinsal & "," & l_rsHorCumpl!turnro & "," & l_rsHorCumpl!empleg & "," & _
                    ConvFecha(l_rsHorCumpl!horfecrep) & "," & ConvFecha(l_rsHorCumpl!horfecgen) & ",'" & l_rsHorCumpl!horhoradesde & "','" & l_rsHorCumpl!horhorahasta & "','')"
                    objConn.Execute StrSql, , adExecuteNoRecords
            End If
            
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  ==> Se convirtio el Tipo de Hora " & l_rsHorCumpl!thnro & " al Tipo de Hora: " & l_rs!thinsal & " - Cantidad: " & canthoras & " hs."
            End If
        Else
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  ==> No se encontro configurada la Hora Insaluble equivalente para el Tipo de Hora: " & l_rs!thnro
            End If
        End If
        l_rsHorCumpl.MoveNext
    Loop
    GoTo datosOK

datosOK:
    Exit Sub
ce:
    Flog.writeline " ------------------------------"
    Flog.writeline Err.Description
    Flog.writeline
    Flog.writeline "Ultimo SQL: " & StrSql
    Flog.writeline
End Sub


Public Sub Politica720v4(ByVal NroTer As Long, ByVal Fecha As Date)
' --------------------------------------------------------------
' Descripcion: Calcula las horas insaluble
' Autor: EAM- Convierte las horas al equivalente a las horas insalubles configurada (factor politica 720)
'       EJ: Factor:1.33 - Hs Normales 9
'       Caluclo: (hsNormales * Factor)
'       Resultado: 6.76 hs normales --> hsNormales / factor
'                  2.97 HsInsalubles
' Ultima modificacion:
' --------------------------------------------------------------
Dim Opcion As Long
Dim l_rs As New ADODB.Recordset
Dim l_rsHorCumpl As New ADODB.Recordset
Dim TotHorHHMM
Dim TotHorHHMMAux
Dim canthoras As Single
Dim cantHorasAux As Single
Dim StrSql2 As String

    On Error GoTo ce

    StrSql = "SELECT hc.* FROM gti_horcumplido hc " & _
            " INNER JOIN gti_registracion r ON r.regnro = hc.regent " & _
            " INNER JOIN gti_reloj rel ON rel.relnro = r.relnro AND rel.relinsal=-1 " & _
            " WHERE horfecrep = " & ConvFecha(Fecha) & " AND hc.ternro= " & NroTer
    OpenRecordset StrSql, l_rsHorCumpl
    
    If depurar Then
        If l_rsHorCumpl.RecordCount > 0 Then
            Flog.writeline Espacios(Tabulador * 2) & "  ==> Se encontraron Tipo de Horas de relojes Insaluble."
        Else
            Flog.writeline Espacios(Tabulador * 2) & "  ==> No se encontraron Tipo de Horas de relojes Insaluble."
        End If
    End If
    
    
    'Analizo todos las horas generadas en relojes insalubles. Busco por cada hora el tipo de hora equivalente insaluble y la convierte
    Do While Not l_rsHorCumpl.EOF
    
        StrSql = "SELECT thnro,thinsal FROM tiphora Where thinsal <> 0 AND thnro= " & l_rsHorCumpl("thnro")
        OpenRecordset StrSql, l_rs
        StrSql = ""
        
        If Not l_rs.EOF Then
            
            'Convierte las horas y calcula el saldo de las horas original
            canthoras = CDbl(l_rsHorCumpl("horcant")) * st_Factor
            If (canthoras > CDbl(l_rsHorCumpl("horcant"))) Then
                cantHorasAux = canthoras - CDbl(l_rsHorCumpl("horcant"))
                TotHorHHMMAux = CHoras(cantHorasAux, 60)
                canthoras = CDbl(l_rsHorCumpl("horcant") / st_Factor)
                TotHorHHMM = CHoras(canthoras, 60)
            Else
                Flog.writeline Espacios(Tabulador * 3) & "  ==> No aplica conversión porque el total es menor que las horas originales."
                GoTo ce
            End If
            
            If cantHorasAux > 0 Then
                StrSql = "UPDATE gti_horcumplido SET horas= " & TotHorHHMM
                StrSql = StrSql & ", horcant= " & canthoras
                StrSql = StrSql & " WHERE thnro = " & l_rsHorCumpl!thnro
                StrSql = StrSql & " AND ternro = " & NroTer
                StrSql = StrSql & " AND horfecrep = " & ConvFecha(Fecha)
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
            
            
            If canthoras > 0 Then
                StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                    " horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta,horestado" & _
                    " ) VALUES (" & TotHorHHMMAux & "," & cantHorasAux & "," & _
                    ConvFecha(l_rsHorCumpl!hordesde) & "," & ConvFecha(l_rsHorCumpl!horhasta) & "," & l_rsHorCumpl!hormanual & "," & l_rsHorCumpl!horvalido & "," & _
                    NroTer & "," & l_rs!thinsal & "," & l_rsHorCumpl!turnro & "," & l_rsHorCumpl!empleg & "," & _
                    ConvFecha(l_rsHorCumpl!horfecrep) & "," & ConvFecha(l_rsHorCumpl!horfecgen) & ",'" & l_rsHorCumpl!horhoradesde & "','" & l_rsHorCumpl!horhorahasta & "','')"
                    objConn.Execute StrSql, , adExecuteNoRecords
            End If
            
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  ==> Se convirtio el Tipo de Hora " & l_rsHorCumpl!thnro & " al Tipo de Hora: " & l_rs!thinsal & " - Cantidad: " & canthoras & " hs."
            End If
        Else
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  ==> No se encontro configurada la Hora Insaluble equivalente para el Tipo de Hora: " & l_rs!thnro
            End If
        End If
        l_rsHorCumpl.MoveNext
    Loop
    GoTo datosOK

datosOK:
    Exit Sub
ce:
    Flog.writeline " ------------------------------"
    Flog.writeline Err.Description
    Flog.writeline
    Flog.writeline "Ultimo SQL: " & StrSql
    Flog.writeline
End Sub




Public Sub DistribucionHs(ByVal NroTer As Long, ByVal Fecha As Date)
' ------------------------------------------------------------------
' Descripcion: Procedimiento que genera y valida las distribuciones de horas cargadas desde ESS
' Autor: FGZ - 12/11/2010
' Ultima modificacion:
' ------------------------------------------------------------------
Dim rs As New ADODB.Recordset
Dim rs_dist As New ADODB.Recordset
Dim rs_hist As New ADODB.Recordset

Dim ListaHsTot As String
Dim TotalHS As Single
Dim Anormalidad As Long
Dim OT_Default As Long
Dim TotalCargado As Single
Dim Diferencia As Single

'Borro para reprocesar (solo las marcadas como generadas automaticas)
StrSql = "DELETE FROM gti_disthor_det WHERE ternro = " & NroTer
StrSql = StrSql & " AND fecha = " & ConvFecha(Fecha)
StrSql = StrSql & " AND autom = -1"
objConn.Execute StrSql, , adExecuteNoRecords

'Borro para reprocesar (solo las marcadas como generadas automaticas)
StrSql = "DELETE FROM gti_disthor WHERE ternro = " & NroTer
StrSql = StrSql & " AND fecha = " & ConvFecha(Fecha)
objConn.Execute StrSql, , adExecuteNoRecords

'Horas Total: configurable (confrep 59 tipo THT)
'   ej: Horas Totales = Normales  + Extras + Francos trabajados, etc.

'Busco las horas Produccion
ListaHsTot = "0"
StrSql = "SELECT confval FROM confrep WHERE repnro = 59 AND conftipo = 'THT'"
OpenRecordset StrSql, rs
If rs.EOF Then
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "No hay Tipos de Horas configuradas para el total de hs."
    End If
Else
    Do While Not rs.EOF
        ListaHsTot = ListaHsTot & "," & rs!confval
        rs.MoveNext
    Loop
End If


'Busco la suma de hs generadas en el AD
StrSql = "SELECT sum(adcanthoras) suma FROM gti_acumdiario WHERE (ternro = " & NroTer & ") AND adfecha = " & ConvFecha(Fecha)
StrSql = StrSql & " AND thnro IN (" & ListaHsTot & ")"
OpenRecordset StrSql, rs
If Not rs.EOF Then
    TotalHS = IIf(EsNulo(rs!suma), 0, rs!suma)
End If


Anormalidad = 0

'Busco el total de horas producción del día
StrSql = "SELECT sum(canthoras) suma FROM gti_disthor_det "
StrSql = StrSql & " WHERE (ternro = " & NroTer & ") AND "
StrSql = StrSql & " (fecha = " & ConvFecha(Fecha) & ")"
OpenRecordset StrSql, rs_dist
If rs_dist.EOF Then
    
    'Reviso ti tiene OT por default
    StrSql = "SELECT * FROM his_ot "
    StrSql = StrSql & " WHERE ternro = " & NroTer
    StrSql = StrSql & " AND (his_ot.hdesde <= " & ConvFecha(Fecha) & ")"
    StrSql = StrSql & " AND ((" & ConvFecha(Fecha) & " <= his_ot.hasta) OR (his_ot.hhasta IS NULL))"
    OpenRecordset StrSql, rs_hist
    If Not rs_hist.EOF Then
        OT_Default = rs_hist!ot
        
        StrSql = "INSERT INTO gti_disthor_det "
        StrSql = StrSql & "(ternro, fecha, ot, canthoras, autom"
        StrSql = StrSql & ") VALUES ("
        StrSql = StrSql & NroTer
        StrSql = StrSql & "," & ConvFecha(Fecha)
        StrSql = StrSql & "," & OT_Default
        StrSql = StrSql & "," & TotalHS
        StrSql = StrSql & ",-1"
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "Distribucion genrada automaticamente. OT(" & OT_Default & ") por " & TotalHS & " hs."
        End If
    Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "No hay distribucion de hs cargadas y no tiene OT por Defeult."
        End If
        Anormalidad = 32
    End If
    
Else
    TotalCargado = IIf(EsNulo(rs_dist!suma), 0, rs_dist!suma)
    Diferencia = TotalHS - TotalCargado
    
    If Diferencia > 0 Then
        'Reviso ti tiene OT por default
        StrSql = "SELECT * FROM his_ot "
        StrSql = StrSql & " WHERE ternro = " & NroTer
        StrSql = StrSql & " AND (his_ot.hdesde <= " & ConvFecha(Fecha) & ")"
        StrSql = StrSql & " AND ((" & ConvFecha(Fecha) & " <= his_ot.hhasta) OR (his_ot.hhasta IS NULL))"
        OpenRecordset StrSql, rs_hist
        If Not rs_hist.EOF Then
            OT_Default = rs_hist!ot
            
            StrSql = "INSERT INTO gti_disthor_det "
            StrSql = StrSql & "(ternro, fecha, ot, canthoras, autom"
            StrSql = StrSql & ") VALUES ("
            StrSql = StrSql & NroTer
            StrSql = StrSql & "," & ConvFecha(Fecha)
            StrSql = StrSql & "," & OT_Default
            StrSql = StrSql & "," & TotalHS
            StrSql = StrSql & ",-1"
            StrSql = StrSql & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "Distribucion genrada automaticamente por diferencia. OT(" & OT_Default & ") por " & TotalHS & " hs."
            End If
        Else
            If TotalCargado = 0 Then
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "No hay distribucion de hs cargadas y no tiene OT por Defeult."
                End If
                Anormalidad = 32
            Else
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "Hay diferencia en la distribucion de hs cargadas y no tiene OT por Defeult."
                End If
                Anormalidad = 33
            End If
        End If
    Else
        If Diferencia < 0 Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "Hay diferencia en la distribucion de hs cargadas (mas de las que trabajó) y no tiene OT por Defeult."
            End If
            Anormalidad = 33
        End If
    End If
End If


'Si hay anormalidad ==> inserto
If Anormalidad <> 0 Then
        StrSql = "INSERT INTO gti_disthor "
        StrSql = StrSql & "(ternro, fecha, normnro"
        StrSql = StrSql & ") VALUES ("
        StrSql = StrSql & NroTer
        StrSql = StrSql & "," & ConvFecha(Fecha)
        StrSql = StrSql & "," & Anormalidad
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
End If


FIN:
'Cierro todo y libero
If rs.State = adStateOpen Then rs.Close
If rs_dist.State = adStateOpen Then rs_dist.Close
If rs_hist.State = adStateOpen Then rs_hist.Close

Set rs = Nothing
Set rs_dist = Nothing
Set rs_hist = Nothing
End Sub



Public Sub politica300(Fecha As Date, NroTer As Long)
' --------------------------------------------------------------
' Descripcion: Politica de Infracción de Sanciones
' Autor: EAM
' Fecha: 11/04/2011
' --------------------------------------------------------------
Dim rs_Sancion As New ADODB.Recordset

StrSql = "UPDATE gti_acumdiario SET gti_acumdiario.infraccion= -1 WHERE adfecha= " & ConvFecha(Fecha) & _
        " AND ternro= " & NroTer & " AND thnro IN (SELECT thnro FROM tiphora WHERE thsancion = -1)"
objConn.Execute StrSql, , adExecuteNoRecords

If depurar Then
    Flog.writeline Espacios(Tabulador * 2) & "Se actualizaron los tipos de horas sancionables de la fecha " & Fecha
End If

End Sub



Public Function Existe_Justificacion(ByVal Fecha As Date, ByVal Tercero As Long) As Boolean
Dim rs As New ADODB.Recordset
Dim Justificacion_Completa As Boolean
Dim NoTrabaja As Boolean
Dim Justificacion_Tipo As Long

    Justificacion_Completa = False
    
    
    'Busco la justificacion
    StrSql = ""
    Select Case TipoBD
    Case 4:
        StrSql = "SELECT * FROM ("
    End Select
    StrSql = StrSql & "(SELECT gti_justificacion.jusdiacompleto,gti_justificacion.juseltipo FROM gti_justificacion "
    StrSql = StrSql & " INNER JOIN emp_lic ON gti_justificacion.juscodext = emp_lic.emp_licnro "
    StrSql = StrSql & " WHERE (ternro = " & Tercero & ") "
    StrSql = StrSql & " AND (jusdesde <= " & ConvFecha(Fecha) & ")"
    StrSql = StrSql & " AND (" & ConvFecha(Fecha) & " <= jushasta)"
    StrSql = StrSql & " AND emp_lic.licestnro = 2"
    StrSql = StrSql & " AND jussigla = 'LIC'"
    StrSql = StrSql & " AND (emp_lic.ft = 0 OR (emp_lic.ft = -1 AND emp_lic.ftap = -1))"
    StrSql = StrSql & " )UNION ("
    StrSql = StrSql & " SELECT gti_justificacion.jusdiacompleto,gti_justificacion.juseltipo FROM gti_justificacion "
    StrSql = StrSql & " INNER JOIN gti_novedad ON gti_justificacion.juscodext = gti_novedad.gnovnro "
    StrSql = StrSql & " WHERE (Ternro = " & Tercero & ")"
    StrSql = StrSql & " AND (jusdesde <= " & ConvFecha(Fecha) & ")"
    StrSql = StrSql & " AND (" & ConvFecha(Fecha) & " <= jushasta)"
    StrSql = StrSql & " AND jussigla = 'NOV'"
    StrSql = StrSql & " AND jussigla <> 'ALM'"
    StrSql = StrSql & " AND (gti_novedad.ft = 0 OR (gti_novedad.ft = -1 AND gti_novedad.ftap = -1))"
    StrSql = StrSql & " )UNION ("
    StrSql = StrSql & " SELECT gti_justificacion.jusdiacompleto,gti_justificacion.juseltipo FROM gti_justificacion "
    StrSql = StrSql & " WHERE (Ternro = " & Tercero & ")"
    StrSql = StrSql & " AND (jusdesde <= " & ConvFecha(Fecha) & ")"
    StrSql = StrSql & " AND (" & ConvFecha(Fecha) & " <= jushasta)"
    StrSql = StrSql & " AND jussigla <> 'LIC'"
    StrSql = StrSql & " AND jussigla <> 'NOV'"
    StrSql = StrSql & " AND jussigla <> 'ALM'"
    StrSql = StrSql & ")"
    Select Case TipoBD
    Case 4:
        StrSql = StrSql & ")"
    End Select
    StrSql = StrSql & " ORDER BY juseltipo "
    OpenRecordset StrSql, rs

    If Not rs.EOF Then
        Justificacion_Completa = CBool(rs!jusdiacompleto)
        
        'Siempre las justificaciones estan cargadas como de dia completo ==>
        'segun el tipo las pongo como de dia completo o no
        Select Case rs!juseltipo
        Case 1:
            Justificacion_Completa = True
        Case 2:
            Justificacion_Completa = False
        Case 3:
            Justificacion_Completa = False
        Case Else
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Tipo de justificacion desconocido: " & rs!juseltipo
            End If
        End Select
        
        Justificacion_Tipo = rs!juseltipo
        If rs!juseltipo = 1 Then 'No trabaja en todo el dia
            NoTrabaja = True
        Else
            NoTrabaja = False
        End If
    End If
    
    Existe_Justificacion = Justificacion_Completa
    
End Function


Public Function Existe_Justificacion_ParcialFija(ByVal AuxFechaDesde As Date, ByVal AuxHDesde As String, ByVal AuxFechaHasta As Date, ByVal AuxHHasta As String, ByVal Tercero As Long, ByRef FDesde As Date, ByRef HDesde As String, ByRef FHasta As Date, ByRef HHasta As String) As Boolean
'Fecha
Dim rs As New ADODB.Recordset
Dim HayJustificacion As Boolean
Dim NoTrabaja As Boolean
Dim Justificacion_Tipo As Long
Dim Horas

    HayJustificacion = False
    
    FDesde = AuxFechaDesde
    HDesde = AuxHDesde
    FHasta = AuxFechaHasta
    HHasta = AuxHHasta
    
    'Busco la justificacion
    StrSql = ""
    Select Case TipoBD
    Case 4:
        StrSql = "SELECT * FROM ("
    End Select
    StrSql = StrSql & "(SELECT gti_justificacion.jusdiacompleto,gti_justificacion.juseltipo, jusdesde, jushoradesde, jushasta, jushorahasta FROM gti_justificacion "
    StrSql = StrSql & " INNER JOIN emp_lic ON gti_justificacion.juscodext = emp_lic.emp_licnro "
    StrSql = StrSql & " WHERE (ternro = " & Tercero & ") "
    'StrSql = StrSql & " AND (jusdesde <= " & ConvFecha(FDesde) & ")"
    'StrSql = StrSql & " AND (" & ConvFecha(FDesde) & " <= jushasta)"
    
    StrSql = StrSql & " and ((jusdesde >=" & ConvFecha(FDesde)
    StrSql = StrSql & " and jusdesde <=" & ConvFecha(FHasta) & ") "
    StrSql = StrSql & " or (jushasta >=" & ConvFecha(FDesde)
    StrSql = StrSql & " and jushasta <=" & ConvFecha(FHasta) & ") "
    StrSql = StrSql & " or (jusdesde <=" & ConvFecha(FDesde)
    StrSql = StrSql & " and jushasta >=" & ConvFecha(FDesde) & ") "
    StrSql = StrSql & " or (jusdesde <=" & ConvFecha(FHasta)
    StrSql = StrSql & " and jushasta >=" & ConvFecha(FHasta) & ")) "
    
    StrSql = StrSql & " AND emp_lic.licestnro = 2"
    StrSql = StrSql & " AND jussigla = 'LIC'"
    StrSql = StrSql & " AND (emp_lic.ft = 0 OR (emp_lic.ft = -1 AND emp_lic.ftap = -1))"
    StrSql = StrSql & " )UNION ("
    StrSql = StrSql & " SELECT gti_justificacion.jusdiacompleto,gti_justificacion.juseltipo, jusdesde, jushoradesde, jushasta, jushorahasta FROM gti_justificacion "
    StrSql = StrSql & " INNER JOIN gti_novedad ON gti_justificacion.juscodext = gti_novedad.gnovnro "
    StrSql = StrSql & " WHERE (Ternro = " & Tercero & ")"
    'StrSql = StrSql & " AND (jusdesde <= " & ConvFecha(FDesde) & ")"
    'StrSql = StrSql & " AND (" & ConvFecha(FDesde) & " <= jushasta)"
    
    StrSql = StrSql & " and ((jusdesde >=" & ConvFecha(FDesde)
    StrSql = StrSql & " and jusdesde <=" & ConvFecha(FHasta) & ") "
    StrSql = StrSql & " or (jushasta >=" & ConvFecha(FDesde)
    StrSql = StrSql & " and jushasta <=" & ConvFecha(FHasta) & ") "
    StrSql = StrSql & " or (jusdesde <=" & ConvFecha(FDesde)
    StrSql = StrSql & " and jushasta >=" & ConvFecha(FDesde) & ") "
    StrSql = StrSql & " or (jusdesde <=" & ConvFecha(FHasta)
    StrSql = StrSql & " and jushasta >=" & ConvFecha(FHasta) & ")) "
    
    StrSql = StrSql & " AND jussigla = 'NOV'"
    StrSql = StrSql & " AND jussigla <> 'ALM'"
    StrSql = StrSql & " AND (gti_novedad.ft = 0 OR (gti_novedad.ft = -1 AND gti_novedad.ftap = -1))"
    StrSql = StrSql & " )UNION ("
    StrSql = StrSql & " SELECT gti_justificacion.jusdiacompleto,gti_justificacion.juseltipo, jusdesde, jushoradesde, jushasta, jushorahasta FROM gti_justificacion "
    StrSql = StrSql & " WHERE (Ternro = " & Tercero & ")"
    'StrSql = StrSql & " AND (jusdesde <= " & ConvFecha(FDesde) & ")"
    'StrSql = StrSql & " AND (" & ConvFecha(FDesde) & " <= jushasta)"
    StrSql = StrSql & " and ((jusdesde >=" & ConvFecha(FDesde)
    StrSql = StrSql & " and jusdesde <=" & ConvFecha(FHasta) & ") "
    StrSql = StrSql & " or (jushasta >=" & ConvFecha(FDesde)
    StrSql = StrSql & " and jushasta <=" & ConvFecha(FHasta) & ") "
    StrSql = StrSql & " or (jusdesde <=" & ConvFecha(FDesde)
    StrSql = StrSql & " and jushasta >=" & ConvFecha(FDesde) & ") "
    StrSql = StrSql & " or (jusdesde <=" & ConvFecha(FHasta)
    StrSql = StrSql & " and jushasta >=" & ConvFecha(FHasta) & ")) "
    
    StrSql = StrSql & " AND jussigla <> 'LIC'"
    StrSql = StrSql & " AND jussigla <> 'NOV'"
    StrSql = StrSql & " AND jussigla <> 'ALM'"
    StrSql = StrSql & ")"
    Select Case TipoBD
    Case 4:
        StrSql = StrSql & ")"
    End Select
    StrSql = StrSql & " ORDER BY juseltipo "
    OpenRecordset StrSql, rs
    
    HayJustificacion = False
    Do While Not rs.EOF And Not HayJustificacion
        'HayJustificacion = CBool(rs!jusdiacompleto)
    
        If rs!juseltipo = 2 Then
            Horas = HorasInterseccion(AuxFechaDesde, AuxHDesde, AuxFechaHasta, AuxHHasta, rs!jusdesde, rs!jushoradesde, rs!jushasta, rs!jushorahasta)
            If Horas > 0 Then
                FDesde = rs!jusdesde
                HDesde = rs!jushoradesde
                FHasta = rs!jushasta
                HHasta = rs!jushorahasta
                
                HayJustificacion = True
                Justificacion_Tipo = rs!juseltipo
                If rs!juseltipo = 1 Then 'No trabaja en todo el dia
                    NoTrabaja = True
                Else
                    NoTrabaja = False
                End If
            End If
        End If
        
        rs.MoveNext
    Loop
    
    Existe_Justificacion_ParcialFija = HayJustificacion
End Function


Public Function HorasInterseccion(ByVal R1FD As Date, ByVal R1HD As String, ByVal R1FH As Date, ByVal R1HH As String, ByVal R2FD As Date, ByVal R2HD As String, ByVal R2FH As Date, ByVal R2HH As String) As Single
' ---------------------------------------------------------------------------------------------
' Descripcion: Calcula la cantidad de horas que caen en la interseccion de 2 rangos de pares fecha-hora
'       R1FD -----------------R1FH
'       R2FD -----------------R2FH
' Parametros entrada
'              R1FD --> Fecha desde del rango 1
'              R1FH --> Fecha hasta del rango 1
'              R2FD --> Fecha desde del rango 2
'              R2FH --> Fecha hasta del rango 2

'              R1HD --> Hora desde del rango 1
'              R1HH --> Hora hasta del rango 1
'              R2HD --> Hora desde del rango 2
'              R2HH --> Hora hasta del rango 2
' Autor      : FGZ
' Fecha      : 07/11/2008
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim TotHor As Single
Dim Tdias As Integer
Dim Thoras As Integer
Dim Tmin As Integer

TotHor = 0

'Rango1     [---------------]
'Rango2           (----------------)
If Menor_Hora(R1FD, R1HD, R2FD, R2HD) And Menor_Hora(R2FD, R2HD, R1FH, R1HH) And Menor_Igual_Hora(R1FH, R1HH, R2FH, R2HH) Then
    RestaHs R2FD, R2HD, R1FH, R1HH, Tdias, Thoras, Tmin
    'HCdesde = R2HD
    'HChasta = R1HH
    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
End If

'Rango1         [---------------]
'Rango2     (----------------)
If Mayor_Igual_Hora(R1FD, R1HD, R2FD, R2HD) And Menor_Hora(R1FD, R1HD, R2FH, R2HH) And Mayor_Hora(R1FH, R1HH, R2FH, R2HH) Then
    RestaHs R1FD, R1HD, R2FH, R2HH, Tdias, Thoras, Tmin
    'HCdesde = R1HD
    'HChasta = R2HH
    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
End If

'rango1         [---------------]
'rango2     (-----------------------)
If Mayor_Igual_Hora(R1FD, R1HD, R2FD, R2HD) And Menor_Hora(R1FD, R1HD, R2FH, R2HH) And Menor_Igual_Hora(R1FH, R1HH, R2FH, R2HH) And Mayor_Hora(R1FH, R1HH, R2FD, R2HD) Then
    RestaHs R1FD, R1HD, R1FH, R1HH, Tdias, Thoras, Tmin
    'HCdesde = R1HD
    'HChasta = R1HH
    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
End If

'rango1     [---------------]
'rango2         (--------)
If Menor_Hora(R1FD, R1HD, R2FD, R2HD) And Mayor_Hora(R1FH, R1HH, R2FH, R2HH) Then
    RestaHs R2FD, R2HD, R2FH, R2HH, Tdias, Thoras, Tmin
    'HCdesde = R2HD
    'HChasta = R2HH
    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
End If
   
HorasInterseccion = TotHor
    
End Function


Public Function Mayor_Hora(ByVal F1 As Date, ByVal H1 As String, ByVal F2 As Date, ByVal H2 As String) As Boolean
' ---------------------------------------------------------------------------------------------
' Descripcion: Funcion que retorna TRUE si la hora 1 es > que la hora 2.
' Autor      : FGZ
' Fecha      : 26/10/2005
' Ultima Mod.:
' ---------------------------------------------------------------------------------------------

    Mayor_Hora = Not Menor_Igual_Hora(F1, H1, F2, H2)
End Function

Public Function Menor_Hora(ByVal F1 As Date, ByVal H1 As String, ByVal F2 As Date, ByVal H2 As String) As Boolean
' ---------------------------------------------------------------------------------------------
' Descripcion: Funcion que retorna TRUE si la hora 1 es > que la hora 2.
' Autor      : FGZ
' Fecha      : 26/10/2005
' Ultima Mod.:
' ---------------------------------------------------------------------------------------------

    Menor_Hora = Not Mayor_Igual_Hora(F1, H1, F2, H2)
End Function

Public Function Mayor_Igual_Hora(ByVal F1 As Date, ByVal H1 As String, ByVal F2 As Date, ByVal H2 As String) As Boolean
' ---------------------------------------------------------------------------------------------
' Descripcion: Funcion que retorna TRUE si la hora 1 es >= que la hora 2.
' Autor      : FGZ
' Fecha      : 26/10/2005
' Ultima Mod.:
' ---------------------------------------------------------------------------------------------
Dim R As Boolean

    If F1 > F2 Then
        R = True
    Else
        If F1 < F2 Then
            R = False
        Else
            If H1 >= H2 Then
                R = True
            Else
                R = False
            End If
        End If
    End If
    
    Mayor_Igual_Hora = R
End Function

Public Function Menor_Igual_Hora(ByVal F1 As Date, ByVal H1 As String, ByVal F2 As Date, ByVal H2 As String) As Boolean
' ---------------------------------------------------------------------------------------------
' Descripcion: Funcion que retorna TRUE si la hora 1 es <= que la hora 2.
' Autor      : FGZ
' Fecha      : 26/10/2005
' Ultima Mod.:
' ---------------------------------------------------------------------------------------------
Dim R As Boolean

    If F1 < F2 Then
        R = True
    Else
        If F1 > F2 Then
            R = False
        Else
            If H1 <= H2 Then
                R = True
            Else
                R = False
            End If
        End If
    End If
    
    Menor_Igual_Hora = R
End Function


Public Sub RestaHs(Fecha_Inicio As Date, hora_inicio As String, Fecha_Fin As Date, hora_fin As String, ByRef TotDias, ByRef tothoras As Integer, ByRef TotMin As Integer)
Dim total As Integer
Dim cantdias  As Integer
Dim canthoras As Integer
Dim Dia   As Integer '  cantidad de minutos en un dia
Dim Hora As Integer   ' cantidad de minutos en una hora

    Dia = 1440
    Hora = 60
    canthoras = 0
    If Not EsNulo(hora_fin) And Not EsNulo(hora_inicio) Then
        canthoras = (Int(Mid(hora_fin, 1, 2)) * Hora + _
                       Int(Mid(hora_fin, 3, 2))) - _
                      (Int(Mid(hora_inicio, 1, 2)) * Hora + _
                       Int(Mid(hora_inicio, 3, 2)))
    End If
    cantdias = DateDiff("d", Fecha_Inicio, Fecha_Fin) * Dia
    
    total = cantdias + canthoras
    TotDias = Int(total / Dia)
    tothoras = Int((total Mod Dia) / Hora)
    TotMin = (total Mod Hora)
End Sub


Public Function Existe_Justificacion_ParcialFijaOLD(ByVal Fecha As Date, ByVal Tercero As Long, ByRef FDesde As Date, ByRef HDesde As String, ByRef FHasta As Date, ByRef HHasta As String) As Boolean
Dim rs As New ADODB.Recordset
Dim HayJustificacion As Boolean
Dim NoTrabaja As Boolean
Dim Justificacion_Tipo As Long

    HayJustificacion = False
    FDesde = Fecha
    HDesde = "00:00"
    FHasta = Fecha
    HHasta = "00:00"
    
    
    'Busco la justificacion
    StrSql = ""
    Select Case TipoBD
    Case 4:
        StrSql = "SELECT * FROM ("
    End Select
    StrSql = StrSql & "(SELECT gti_justificacion.jusdiacompleto,gti_justificacion.juseltipo, jusdesde, jushoradesde, jushasta, jushorahasta FROM gti_justificacion "
    StrSql = StrSql & " INNER JOIN emp_lic ON gti_justificacion.juscodext = emp_lic.emp_licnro "
    StrSql = StrSql & " WHERE (ternro = " & Tercero & ") "
    StrSql = StrSql & " AND (jusdesde <= " & ConvFecha(Fecha) & ")"
    StrSql = StrSql & " AND (" & ConvFecha(Fecha) & " <= jushasta)"
    StrSql = StrSql & " AND emp_lic.licestnro = 2"
    StrSql = StrSql & " AND jussigla = 'LIC'"
    StrSql = StrSql & " AND (emp_lic.ft = 0 OR (emp_lic.ft = -1 AND emp_lic.ftap = -1))"
    StrSql = StrSql & " )UNION ("
    StrSql = StrSql & " SELECT gti_justificacion.jusdiacompleto,gti_justificacion.juseltipo, jusdesde, jushoradesde, jushasta, jushorahasta FROM gti_justificacion "
    StrSql = StrSql & " INNER JOIN gti_novedad ON gti_justificacion.juscodext = gti_novedad.gnovnro "
    StrSql = StrSql & " WHERE (Ternro = " & Tercero & ")"
    StrSql = StrSql & " AND (jusdesde <= " & ConvFecha(Fecha) & ")"
    StrSql = StrSql & " AND (" & ConvFecha(Fecha) & " <= jushasta)"
    StrSql = StrSql & " AND jussigla = 'NOV'"
    StrSql = StrSql & " AND jussigla <> 'ALM'"
    StrSql = StrSql & " AND (gti_novedad.ft = 0 OR (gti_novedad.ft = -1 AND gti_novedad.ftap = -1))"
    StrSql = StrSql & " )UNION ("
    StrSql = StrSql & " SELECT gti_justificacion.jusdiacompleto,gti_justificacion.juseltipo, jusdesde, jushoradesde, jushasta, jushorahasta FROM gti_justificacion "
    StrSql = StrSql & " WHERE (Ternro = " & Tercero & ")"
    StrSql = StrSql & " AND (jusdesde <= " & ConvFecha(Fecha) & ")"
    StrSql = StrSql & " AND (" & ConvFecha(Fecha) & " <= jushasta)"
    StrSql = StrSql & " AND jussigla <> 'LIC'"
    StrSql = StrSql & " AND jussigla <> 'NOV'"
    StrSql = StrSql & " AND jussigla <> 'ALM'"
    StrSql = StrSql & ")"
    Select Case TipoBD
    Case 4:
        StrSql = StrSql & ")"
    End Select
    StrSql = StrSql & " ORDER BY juseltipo "
    OpenRecordset StrSql, rs

    If Not rs.EOF Then
        HayJustificacion = CBool(rs!jusdiacompleto)
        
        'Siempre las justificaciones estan cargadas como de dia completo ==>
        'segun el tipo las pongo como de dia completo o no
        Select Case rs!juseltipo
        Case 1:
            HayJustificacion = False
        Case 2:
            HayJustificacion = True
            FDesde = rs!jusdesde
            HDesde = rs!jushoradesde
            FHasta = rs!jushasta
            HHasta = rs!jushorahasta
        Case 3:
            HayJustificacion = False
        Case Else
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Tipo de justificacion desconocido: " & rs!juseltipo
            End If
        End Select
        
        Justificacion_Tipo = rs!juseltipo
        If rs!juseltipo = 1 Then 'No trabaja en todo el dia
            NoTrabaja = True
        Else
            NoTrabaja = False
        End If
    End If
    Existe_Justificacion_ParcialFijaOLD = HayJustificacion
End Function




Public Function Tiempo_de_Lunch(ByVal LunhFecha As Date) As Long
' --------------------------------------------------------------
' Descripcion: Política de almuerzo variable. Custom Sykes
' Autor: FGZ - 26/05/2011
' --------------------------------------------------------------
Dim Lunch_Teorico As Long
Dim rs As New ADODB.Recordset


    StrSql = "SELECT fecdesde,fechasta FROM WC_MOV_HORARIOS "
    StrSql = StrSql & " WHERE ternro = " & Empleado.Ternro
    StrSql = StrSql & " AND fecdesde <= " & ConvFecha(LunhFecha) & " AND fechasta >= " & ConvFecha(LunhFecha)
    StrSql = StrSql & " ORDER BY fecdesde desc, fechasta desc"
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
    
        'si existe ==> busco el dia en esa vigencia
        StrSql = "SELECT desmin FROM WC_MOV_HORARIOS WHERE fechor = " & ConvFecha(LunhFecha)
        StrSql = StrSql & " AND ternro = " & Empleado.Ternro
        StrSql = StrSql & " AND fecdesde = " & ConvFecha(rs!fecdesde) & " AND fechasta = " & ConvFecha(rs!fechasta)
        StrSql = StrSql & " ORDER BY fecdesde desc, fechasta desc"
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            Lunch_Teorico = rs!desmin
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  ==> Lunch Teorico: " & Lunch_Teorico
            End If
        Else
            'No hay parte para el dia con lo cual supongo que es franco. No hay que hacer nada.
            Lunch_Teorico = 0
            If depurar Then
                Flog.writeline Espacios(Tabulador * 3) & "  ==> No hay parte para el dia. Lunch Teorico: " & Lunch_Teorico
            End If
        End If
    Else
        'No hay parte para el dia con lo cual supongo que es franco. No hay que hacer nada.
        Lunch_Teorico = 0
        If depurar Then
            Flog.writeline Espacios(Tabulador * 3) & "  ==> No hay parte para el dia. Lunch Teorico: " & Lunch_Teorico
        End If
    End If

    Tiempo_de_Lunch = Lunch_Teorico

End Function



Private Sub Marcar_Registraciones(ByVal Marca As String, ByVal Ternro As Long, ByVal fecha_desde As Date, ByVal fecha_hasta As Date, ByVal hora_desde As String, ByVal hora_hasta As String)
' --------------------------------------------------------------
' Descripcion: Setea todas las registraciones en el rango de fecha pasado por parametro con la marca que se pase por parametros en la variable "Marca"
' Autor: Margiotta, Emanuel
' Ultima modificacion:
' --------------------------------------------------------------
            
    Flog.writeline Espacios(Tabulador * 2) & " Se marcan las resgistraciones entre las fechas " & fecha_desde & " Hora: " & hora_desde & " y " & fecha_desde & " hora " & hora_hasta & " con marco la marca " & Marca
    
    StrSql = "UPDATE gti_registracion SET regestado = '" & Marca & "'" & _
             " WHERE ternro= " & Ternro & " AND ((regestado = 'I') OR (regestado = 'S'))" & _
            " AND ( (regfecha > " & ConvFecha(fecha_desde) & ") OR (regfecha = " & ConvFecha(fecha_desde) & _
            " AND reghora >= '" & hora_desde & "') ) AND ( (regfecha < " & ConvFecha(fecha_hasta) & _
            ") OR (regfecha = " & ConvFecha(fecha_hasta) & " AND reghora <= '" & hora_hasta & "') )" & _
            " AND ( regllamada = 0 OR regllamada is null )"
    objConn.Execute StrSql, , adExecuteNoRecords
        
    
End Sub


Public Sub Desglose_MovilidadV3(ByVal NroTer As Long, ByVal Fecha As Date)
' ------------------------------------------------------------------
' Descripcion: EAM (v5.37)Procedimiento que genera los desgloces de horas a partir del desgloce del HC (Tabla -> gti_desgloce_HC). Esta versión genera desgloce de multiples estructuras.
' Autor: EAM - 18/05/2013
' Ultima modificacion:
' ------------------------------------------------------------------
Dim rs_dHC As New ADODB.Recordset


    'Borro la tabla de desgloce diario para reprocesar
    StrSql = "DELETE FROM gti_desgldiario WHERE ternro = " & NroTer & _
            " AND fecha = " & ConvFecha(Fecha) & " AND manual = 0"
    objConn.Execute StrSql, , adExecuteNoRecords
        
    StrSql = "SELECT thnro,te1,estrnro1,te2,estrnro2,te3,estrnro3,te4,estrnro4,te5,estrnro5, SUM(canthoras) canthoras FROM gti_desgloce_hc " & _
            " WHERE fecha= " & ConvFecha(Fecha) & " AND ternro= " & NroTer & " GROUP BY thnro,te1,estrnro1,te2,estrnro2,te3,estrnro3,te4,estrnro4,te5,estrnro5"
    OpenRecordset StrSql, rs_dHC

    If depurar Then
        If rs_dHC.RecordCount > 0 Then
            Flog.writeline Espacios(Tabulador * 2) & "  ==> Canitdad de tipo de Horas con desgloce: " & rs_dHC.RecordCount
        Else
            Flog.writeline Espacios(Tabulador * 2) & "  ==> No se encontraron Horas con desgloce."
        End If
    End If

    'Recorro el desglose
    Do While Not rs_dHC.EOF
        StrSql = "INSERT INTO gti_desgldiario (ternro, fecha, thnro, canthoras, horas, manual, valido "
        If Not EsNulo(rs_dHC!te1) Then StrSql = StrSql & ",te1"
        If Not EsNulo(rs_dHC!estrnro1) Then StrSql = StrSql & ",estrnro1"
        If Not EsNulo(rs_dHC!te2) Then StrSql = StrSql & ",te2"
        If Not EsNulo(rs_dHC!estrnro2) Then StrSql = StrSql & ",estrnro2"
        If Not EsNulo(rs_dHC!te3) Then StrSql = StrSql & ",te3"
        If Not EsNulo(rs_dHC!estrnro3) Then StrSql = StrSql & ",estrnro3"
        If Not EsNulo(rs_dHC!te4) Then StrSql = StrSql & ",te4"
        If Not EsNulo(rs_dHC!estrnro4) Then StrSql = StrSql & ",estrnro4"
        If Not EsNulo(rs_dHC!te5) Then StrSql = StrSql & ",te5"
        If Not EsNulo(rs_dHC!estrnro5) Then StrSql = StrSql & ",estrnro5"
        StrSql = StrSql & ")"
        
        StrSql = StrSql & " VALUES (" & NroTer & "," & ConvFecha(Fecha) & "," & rs_dHC!thnro & "," & rs_dHC!canthoras & ",'" & CHorasSF(rs_dHC!canthoras, 60) & "',0,-1"
    
        If Not EsNulo(rs_dHC!te1) Then StrSql = StrSql & "," & rs_dHC!te1
        If Not EsNulo(rs_dHC!estrnro1) Then StrSql = StrSql & "," & rs_dHC!estrnro1
        If Not EsNulo(rs_dHC!te2) Then StrSql = StrSql & "," & rs_dHC!te2
        If Not EsNulo(rs_dHC!estrnro2) Then StrSql = StrSql & "," & rs_dHC!estrnro2
        If Not EsNulo(rs_dHC!te3) Then StrSql = StrSql & "," & rs_dHC!te3
        If Not EsNulo(rs_dHC!estrnro3) Then StrSql = StrSql & "," & rs_dHC!estrnro3
        If Not EsNulo(rs_dHC!te4) Then StrSql = StrSql & "," & rs_dHC!te4
        If Not EsNulo(rs_dHC!estrnro4) Then StrSql = StrSql & "," & rs_dHC!estrnro4
        If Not EsNulo(rs_dHC!te5) Then StrSql = StrSql & "," & rs_dHC!te5
        If Not EsNulo(rs_dHC!estrnro5) Then StrSql = StrSql & "," & rs_dHC!estrnro5
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
    
        rs_dHC.MoveNext
    Loop

    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "  ==> Se generaron los desgloces Correctamente. "
    End If

 
'Cierro y libero
If rs_dHC.State = adStateOpen Then rs_dHC.Close
Set rs_dHC = Nothing

End Sub

Public Sub Desglose_MovilidadV4(ByVal NroTer As Long, ByVal Fecha As Date)
' ------------------------------------------------------------------
' Descripcion: EAM (v5.37)Procedimiento que genera los desgloces de horas a partir del desgloce del HC (Tabla -> gti_desgloce_HC). Esta versión genera desgloce de multiples estructuras.
' Autor: EAM - 18/05/2013
' Ultima modificacion:
' ------------------------------------------------------------------
Dim rs_dHC As New ADODB.Recordset


    'Borro la tabla de desgloce diario para reprocesar
    StrSql = "DELETE FROM gti_desgldiario WHERE ternro = " & NroTer & _
            " AND fecha = " & ConvFecha(Fecha) & " AND manual = 0"
    objConn.Execute StrSql, , adExecuteNoRecords
        
    StrSql = "SELECT thnro,te1,estrnro1,te2,estrnro2,te3,estrnro3,te4,estrnro4,te5,estrnro5, SUM(canthoras) canthoras FROM gti_desgloce_hc " & _
            " WHERE fecha= " & ConvFecha(Fecha) & " AND ternro= " & NroTer & " GROUP BY thnro,te1,estrnro1,te2,estrnro2,te3,estrnro3,te4,estrnro4,te5,estrnro5"
    OpenRecordset StrSql, rs_dHC

    If depurar Then
        If rs_dHC.RecordCount > 0 Then
            Flog.writeline Espacios(Tabulador * 2) & "  ==> Canitdad de tipo de Horas con desgloce: " & rs_dHC.RecordCount
        Else
            Flog.writeline Espacios(Tabulador * 2) & "  ==> No se encontraron Horas con desgloce."
        End If
    End If

    'Recorro el desglose
    Do While Not rs_dHC.EOF
        StrSql = "INSERT INTO gti_desgldiario (ternro, fecha, thnro, canthoras, horas, manual, valido "
        If Not EsNulo(rs_dHC!te1) Then StrSql = StrSql & ",te1"
        If Not EsNulo(rs_dHC!estrnro1) Then StrSql = StrSql & ",estrnro1"
        If Not EsNulo(rs_dHC!te2) Then StrSql = StrSql & ",te2"
        If Not EsNulo(rs_dHC!estrnro2) Then StrSql = StrSql & ",estrnro2"
        If Not EsNulo(rs_dHC!te3) Then StrSql = StrSql & ",te3"
        If Not EsNulo(rs_dHC!estrnro3) Then StrSql = StrSql & ",estrnro3"
        If Not EsNulo(rs_dHC!te4) Then StrSql = StrSql & ",te4"
        If Not EsNulo(rs_dHC!estrnro4) Then StrSql = StrSql & ",estrnro4"
        If Not EsNulo(rs_dHC!te5) Then StrSql = StrSql & ",te5"
        If Not EsNulo(rs_dHC!estrnro5) Then StrSql = StrSql & ",estrnro5"
        StrSql = StrSql & ")"
        
        StrSql = StrSql & " VALUES (" & NroTer & "," & ConvFecha(Fecha) & "," & rs_dHC!thnro & "," & rs_dHC!canthoras & ",'" & CHorasSF(rs_dHC!canthoras, 60) & "',0,-1"
    
        If Not EsNulo(rs_dHC!te1) Then StrSql = StrSql & "," & rs_dHC!te1
        If Not EsNulo(rs_dHC!estrnro1) Then StrSql = StrSql & "," & rs_dHC!estrnro1
        If Not EsNulo(rs_dHC!te2) Then StrSql = StrSql & "," & rs_dHC!te2
        If Not EsNulo(rs_dHC!estrnro2) Then StrSql = StrSql & "," & rs_dHC!estrnro2
        If Not EsNulo(rs_dHC!te3) Then StrSql = StrSql & "," & rs_dHC!te3
        If Not EsNulo(rs_dHC!estrnro3) Then StrSql = StrSql & "," & rs_dHC!estrnro3
        If Not EsNulo(rs_dHC!te4) Then StrSql = StrSql & "," & rs_dHC!te4
        If Not EsNulo(rs_dHC!estrnro4) Then StrSql = StrSql & "," & rs_dHC!estrnro4
        If Not EsNulo(rs_dHC!te5) Then StrSql = StrSql & "," & rs_dHC!te5
        If Not EsNulo(rs_dHC!estrnro5) Then StrSql = StrSql & "," & rs_dHC!estrnro5
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
    
        rs_dHC.MoveNext
    Loop

    If depurar Then
        Flog.writeline Espacios(Tabulador * 2) & "  ==> Se generaron los desgloces Correctamente. "
    End If

 
'Cierro y libero
If rs_dHC.State = adStateOpen Then rs_dHC.Close
Set rs_dHC = Nothing

End Sub


Public Sub Desglose_RelevosV2(ByVal NroTer As Long, ByVal Fecha As Date)
' ------------------------------------------------------------------
' Descripcion: Procedimiento que genera los desgloces de horas de los partes de relevos de estructura. Esta versión genera desgloce de multiples estructuras a diferencia de la versión 1
' Autor: EAM - 14/05/2013
' Ultima modificacion:
' ------------------------------------------------------------------
Dim i As Long
Dim Z As Long
Dim Aux_Relnro As Long
Dim TipoEstructura As Long
Dim TotalHS As Single

Dim rs_AD As New ADODB.Recordset
Dim rs_Estr As New ADODB.Recordset
Dim rs_Rel As New ADODB.Recordset
Dim rs_RelDet As New ADODB.Recordset

'Borro la tabla de desgloce diario para reprocesar
StrSql = "DELETE FROM gti_desgldiario WHERE ternro = " & NroTer & _
        " AND fecha = " & ConvFecha(Fecha) & " AND manual = 0"
objConn.Execute StrSql, , adExecuteNoRecords


'Busco el total de horas producción del día
StrSql = "SELECT * FROM gti_acumdiario " & _
        " INNER JOIN tiphora ON gti_acumdiario.thnro = tiphora.thnro AND tiphora.thprod = -1" & _
        " WHERE (ternro = " & NroTer & ") AND (adfecha = " & ConvFecha(Fecha) & ")"
OpenRecordset StrSql, rs_AD

If rs_AD.EOF Then
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "No hay Horas produccion para desglosar."
    End If
Else
    'EAM (v5.32)- Busco si hay partes de relevos
    StrSql = "SELECT distinct gti_relevo_estruc.relestnro,gti_relevo_estruc.estrnro,gti_relevo_estruc.tenro FROM gti_relevo_estruc " & _
            " INNER JOIN gti_relevo_estruc_det ON gti_relevo_estruc.relestnro = gti_relevo_estruc_det.relestnro " & _
            " WHERE gti_relevo_estruc.ternro = " & NroTer & _
            " AND (gti_relevo_estruc.relestfecdesde <= " & ConvFecha(Fecha) & " AND gti_relevo_estruc.relestfechasta >= " & ConvFecha(Fecha) & ")" & _
            " AND gti_relevo_estruc_det.fecha = " & ConvFecha(Fecha) & " ORDER BY gti_relevo_estruc.tenro"
    OpenRecordset StrSql, rs_Rel
    If Not rs_Rel.EOF Then
    Do While Not rs_Rel.EOF
        Aux_Relnro = rs_Rel!relestnro
        TipoEstructura = rs_Rel!Tenro
        'Estructura activa del empleado
        
        Do While Not rs_AD.EOF
            TotalHS = 0
            
            'EAM (v5.32)- Busco el detalle de horas desglozadas
            StrSql = "SELECT canths,gti_relevo_estruc_det_hs.estrnro FROM gti_relevo_estruc_det " & _
                    " INNER JOIN  gti_relevo_estruc_det_hs ON gti_relevo_estruc_det_hs.relestdetnro = gti_relevo_estruc_det.relestdetnro " & _
                    " WHERE gti_relevo_estruc_det.fecha=" & ConvFecha(Fecha) & " AND gti_relevo_estruc_det_hs.thnro= " & rs_AD!thnro & _
                    " AND gti_relevo_estruc_det.relestnro = " & rs_Rel!relestnro
            OpenRecordset StrSql, rs_RelDet
        
                Do While Not rs_RelDet.EOF
                    'EAM (v5.32) - Inserto el desglose
                    StrSql = "INSERT INTO gti_desgldiario " & _
                            " (ternro, fecha, thnro, canthoras, horas, manual, valido, te1, estrnro1, te2, estrnro2) " & _
                            " VALUES ( " & NroTer & "," & ConvFecha(Fecha) & "," & rs_AD!thnro & "," & (CDbl(rs_RelDet!canths)) & _
                            "," & CHoras(rs_RelDet!canths, 60) & ",0" & ",-1," & rs_Rel!Tenro & "," & rs_Rel!estrnro & "," & rs_Rel!Tenro & "," & rs_RelDet!estrnro & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    TotalHS = CDbl(TotalHS) + CDbl(rs_RelDet!canths)
                    rs_RelDet.MoveNext
                Loop
        
            If (CDbl(rs_AD!adcanthoras) > CDbl(TotalHS)) Then
                StrSql = "INSERT INTO gti_desgldiario " & _
                        " (ternro, fecha, thnro, canthoras, horas, manual, valido, te1, estrnro1, te2, estrnro2) " & _
                        " VALUES ( " & NroTer & "," & ConvFecha(Fecha) & "," & rs_AD!thnro & "," & (CDbl(rs_AD!adcanthoras) - CDbl(TotalHS)) & _
                        "," & CHoras(CDbl(rs_AD!adcanthoras) - CDbl(TotalHS), 60) & ",0" & ",-1," & rs_Rel!Tenro & "," & rs_Rel!estrnro & "," & rs_Rel!Tenro & "," & rs_Rel!estrnro & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
            Else
                Flog.writeline Espacios(Tabulador * 3) & "La cantidad de horas de relevos de estructuras es mayor al total de horas."
            End If
                                
            rs_AD.MoveNext
        Loop
        rs_Rel.MoveNext
    Loop
    Else
        Flog.writeline Espacios(Tabulador * 3) & "No existen partes de relevos."
    End If

End If



        

        
'Cierro y libero
If rs_AD.State = adStateOpen Then rs_AD.Close
Set rs_AD = Nothing

If rs_Estr.State = adStateOpen Then rs_Estr.Close
Set rs_Estr = Nothing

If rs_Rel.State = adStateOpen Then rs_Rel.Close
Set rs_Rel = Nothing



End Sub

Public Sub Desglose_Relevos(ByVal NroTer As Long, ByVal Fecha As Date)
' ------------------------------------------------------------------
' Descripcion: Procedimiento que genera los desgloces a partir de
'               los partes diarios de relevos.
' Autor: FGZ - 07/10/2010
' Ultima modificacion:
' ------------------------------------------------------------------
'gti_desgldiario(
'    desgnro int IDENTITY(1,1) NOT NULL,
'    canthoras decimal (5, 2) NULL,
'    fecha datetime NOT NULL,
'    manual smallint NOT NULL,
'    valido smallint NOT NULL,
'    ternro int NOT NULL,
'    thnro int NOT NULL,
'    horas varchar(10) NULL,
'    te1 int NOT NULL DEFAULT 0,
'    estrnro1 int NOT NULL DEFAULT 0,
'    te2 int NOT NULL DEFAULT 0,
'    estrnro2 int NOT NULL DEFAULT 0,
'    te3 int NOT NULL DEFAULT 0,
'    estrnro3 int NOT NULL DEFAULT 0,
'    te4 int NOT NULL DEFAULT 0,
'    estrnro4 int NOT NULL DEFAULT 0,
'    te5 int NOT NULL DEFAULT 0,
'    estrnro5 int NOT NULL DEFAULT 0
')
' ------------------------------------------------------------------
Dim i As Long
Dim Z As Long
Dim Aux_Relnro As Long

Dim rs_AD As New ADODB.Recordset
Dim rs_Estr As New ADODB.Recordset
Dim rs_Rel As New ADODB.Recordset
Dim rs_RelDet As New ADODB.Recordset

Dim Estr_Def(1 To 5) As TEstr
Dim Estr_Ind(1 To 5) As Long
Dim Lista_TE As Collection

'Borro para reprocesar
StrSql = "DELETE FROM gti_desgldiario WHERE ternro = " & NroTer
StrSql = StrSql & " AND fecha = " & ConvFecha(Fecha)
StrSql = StrSql & " AND manual = 0"
objConn.Execute StrSql, , adExecuteNoRecords



'Busco el total de horas producción del día
StrSql = "SELECT * FROM gti_acumdiario "
StrSql = StrSql & " INNER JOIN tiphora ON gti_acumdiario.thnro = tiphora.thnro AND tiphora.thprod = -1"
StrSql = StrSql & " WHERE (ternro = " & NroTer & ") AND "
StrSql = StrSql & " (adfecha = " & ConvFecha(Fecha) & ")"
OpenRecordset StrSql, rs_AD
If rs_AD.EOF Then
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "No hay Horas produccion para desglosar."
    End If
Else
    'Busco las estrucutras default (asignadas por historico de estr) para los tipos de estructuras con alcance
    StrSql = "SELECT * FROM his_estructura "
    StrSql = StrSql & " INNER JOIN alcance_testr ON his_estructura.tenro = alcance_testr.tenro AND alcance_testr.tanro = 22"
    StrSql = StrSql & " WHERE ternro = " & NroTer
    StrSql = StrSql & " AND (his_estructura.htetdesde <= " & ConvFecha(Fecha) & ")"
    StrSql = StrSql & " AND ((" & ConvFecha(Fecha) & " <= his_estructura.htethasta) OR (his_estructura.htethasta IS NULL))"
    StrSql = StrSql & " ORDER BY alcance_testr.alteorden, his_estructura.tenro"
    OpenRecordset StrSql, rs_Estr
    i = 1
    Do While Not rs_Estr.EOF And i <= 5
        Estr_Def(i).Tenro = rs_Estr!Tenro
        Estr_Def(i).estrnro = rs_Estr!estrnro
        Estr_Def(i).rel = rs_Estr!estrnro
        Estr_Def(i).relCantHs = 0
        Estr_Ind(i) = rs_Estr!Tenro
        
        i = i + 1
        rs_Estr.MoveNext
    Loop
        
    'Busco si hay partes de relevos ----------------------------------------------
    'gti_relevos(
    'relnro int IDENTITY(1,1) NOT NULL,
    'gcpnro int NOT NULL,
    'relfecdesde datetime NULL,
    'relfechasta datetime NULL,
    'ternro int NOT NULL,
    'tenro int NOT NULL,
    'estrnro int NOT NULL
    ')
    '
    'gti_relevos_det(
    'reldetnro int IDENTITY(1,1) NOT NULL,
    'relnro int NOT NULL,
    'fecha datetime NULL
    ')

    StrSql = "SELECT * FROM gti_relevos "
    StrSql = StrSql & " INNER JOIN gti_relevos_det ON gti_relevos.relnro = gti_relevos_det.relnro "
    StrSql = StrSql & " WHERE gti_relevos.ternro = " & NroTer
    StrSql = StrSql & " AND (gti_relevos.relfecdesde <= " & ConvFecha(Fecha) & " AND gti_relevos.relfechasta >= " & ConvFecha(Fecha) & ")"
    StrSql = StrSql & " AND gti_relevos_det.fecha = " & ConvFecha(Fecha)
    StrSql = StrSql & " ORDER BY gti_relevos.tenro"
    OpenRecordset StrSql, rs_Rel
    Do While Not rs_Rel.EOF
        Aux_Relnro = rs_Rel!relnro
        Z = IndiceTE(rs_Rel!Tenro, Estr_Ind)
        If Z > 0 Then
            Estr_Def(Z).rel = rs_Rel!estrnro
        End If

        rs_Rel.MoveNext
    Loop
    
    'Inserto el detalle
    Do While Not rs_AD.EOF
        

        StrSql = "SELECT canths FROM gti_relevos_det " & _
                "INNER JOIN  gti_relevos_det_hs on gti_relevos_det_hs.reldetnro= gti_relevos_det.reldetnro " & _
                "WHERE gti_relevos_det.fecha=" & ConvFecha(Fecha) & " AND gti_relevos_det_hs.thnro= " & rs_AD!thnro & _
                " AND gti_relevos_det.relnro = " & Aux_Relnro
        OpenRecordset StrSql, rs_RelDet
        
        
        
        If rs_RelDet.EOF Then
            'INSERT
            StrSql = "INSERT INTO gti_desgldiario "
            StrSql = StrSql & "(ternro, fecha, thnro, canthoras, horas, manual, valido"
            For i = 1 To 5
                If Estr_Def(i).Tenro <> 0 Then
                    StrSql = StrSql & ", te" & i & ", estrnro" & i
                End If
            Next i
            StrSql = StrSql & ") VALUES ("
            StrSql = StrSql & NroTer
            StrSql = StrSql & "," & ConvFecha(Fecha)
            StrSql = StrSql & "," & rs_AD!thnro
            StrSql = StrSql & "," & rs_AD!adcanthoras
            StrSql = StrSql & ",'" & rs_AD!Horas & "'"
            StrSql = StrSql & ",0"
            StrSql = StrSql & ",-1"
            For i = 1 To 5
                If Estr_Def(i).Tenro <> 0 Then
                    StrSql = StrSql & "," & Estr_Def(i).Tenro
                    StrSql = StrSql & "," & Estr_Def(i).rel
                End If
            Next i
            StrSql = StrSql & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
        Else
            'INSERT
            StrSql = "INSERT INTO gti_desgldiario "
            StrSql = StrSql & "(ternro, fecha, thnro, canthoras, horas, manual, valido"
            For i = 1 To 5
                If Estr_Def(i).Tenro <> 0 Then
                    StrSql = StrSql & ", te" & i & ", estrnro" & i
                End If
            Next i
            StrSql = StrSql & ") VALUES ("
            StrSql = StrSql & NroTer
            StrSql = StrSql & "," & ConvFecha(Fecha)
            StrSql = StrSql & "," & rs_AD!thnro
            StrSql = StrSql & "," & (CDbl(rs_AD!adcanthoras) - CDbl(rs_RelDet!canths))
            StrSql = StrSql & ",'" & rs_AD!Horas & "'"
            StrSql = StrSql & ",0"
            StrSql = StrSql & ",-1"
            For i = 1 To 5
                If Estr_Def(i).Tenro <> 0 Then
                    StrSql = StrSql & "," & Estr_Def(i).Tenro
                    StrSql = StrSql & "," & Estr_Def(i).estrnro
                End If
            Next i
            StrSql = StrSql & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            
            If rs_RelDet!canths > 0 Then
                'INSERT
                StrSql = "INSERT INTO gti_desgldiario "
                StrSql = StrSql & "(ternro, fecha, thnro, canthoras, horas, manual, valido"
                For i = 1 To 5
                    If Estr_Def(i).Tenro <> 0 Then
                        StrSql = StrSql & ", te" & i & ", estrnro" & i
                    End If
                Next i
                StrSql = StrSql & ") VALUES ("
                StrSql = StrSql & NroTer
                StrSql = StrSql & "," & ConvFecha(Fecha)
                StrSql = StrSql & "," & rs_AD!thnro
                StrSql = StrSql & "," & rs_RelDet!canths
                StrSql = StrSql & ",'" & rs_AD!Horas & "'"
                StrSql = StrSql & ",0"
                StrSql = StrSql & ",-1"
                For i = 1 To 5
                    If Estr_Def(i).Tenro <> 0 Then
                        StrSql = StrSql & "," & Estr_Def(i).Tenro
                        StrSql = StrSql & "," & Estr_Def(i).rel
                    End If
                Next i
                StrSql = StrSql & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
        End If
    
        rs_AD.MoveNext
    Loop
End If



        

        
'Cierro y libero
If rs_AD.State = adStateOpen Then rs_AD.Close
Set rs_AD = Nothing

If rs_Estr.State = adStateOpen Then rs_Estr.Close
Set rs_Estr = Nothing

If rs_Rel.State = adStateOpen Then rs_Rel.Close
Set rs_Rel = Nothing



End Sub



Public Function IndiceTE(ByVal TE As Long, ByVal Estr_Ind) As Long
Dim j As Long
Dim Encontro As Boolean

j = 1
Encontro = False
While j <= 5 And Not Encontro
    If Estr_Ind(j) = TE Then
        Encontro = True
    Else
        j = j + 1
    End If
Wend
If Not Encontro Then
    IndiceTE = 0
Else
    IndiceTE = j
End If
End Function


Public Sub GenerarJustificacionesAutomaticas2(ByVal NroTer As Long, ByVal p_fecha As Date)
' ---------------------------------------------------------------------------------------------
' Descripcion: Generacion de justificaciones parciales variables Automaticas
' Autor: FGZ
' Fecha:
' ----------------------------------------------------------------------------------------------
Dim Aux_Tipohora As Long
Dim Aux_Hora As Long
Dim Hora As String
Dim fecres As Date
Dim horres As String
Dim ok As Boolean
Dim VHora  As String
Dim VFecha As Date
Dim VCant  As Single
Dim Sigue As Boolean
Dim Aux_NroJustif As Long

Dim Jus_Hor_Desde As String
Dim Jus_Hor_Hasta As String
Dim Jus_Fec_Desde As Date
Dim Jus_Fec_Hasta As Date
Dim Cant_Int As Double
Dim Cant_HC1 As Double
Dim Cant_HC2 As Double
Dim Caso As String

Dim wf_Hcp As New ADODB.Recordset
Dim wf_Hcp2 As New ADODB.Recordset
Dim Rs_Justif As New ADODB.Recordset
Dim rs As New ADODB.Recordset

Dim TotHorHHMM As String

'Comienzo del codigo
Call CreateTempTable(TTempWFJustif)

StrSql = "SELECT * FROM GTI_JUSTIFICACION WHERE ternro = " & NroTer
StrSql = StrSql & " AND juseltipo = 4 AND jusdesde <= " & ConvFecha(p_fecha)
StrSql = StrSql & " AND jushasta >= " & ConvFecha(p_fecha)
StrSql = StrSql & " ORDER BY juselorden "
OpenRecordset StrSql, Rs_Justif
Do While Not Rs_Justif.EOF
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & " Justificacion: NOV Automatica de Almuerzo"
        End If
        
        StrSql = " SELECT gti_tiponovedad.thnro FROM gti_novedad "
        StrSql = StrSql & " INNER JOIN gti_tiponovedad ON gti_tiponovedad.gtnovnro = gti_novedad.gtnovnro "
        StrSql = StrSql & " WHERE gti_novedad.gnovotoa = " & NroTer
        StrSql = StrSql & " AND gti_novedad.gnovnro = " & Rs_Justif!juscodext
        'FGZ - 19/05/2010 ------------ Control FT -------------
        StrSql = StrSql & " AND (gti_novedad.ft = 0 OR (gti_novedad.ft = -1 AND gti_novedad.ftap = -1))"
        'FGZ - 19/05/2010 ------------ Control FT -------------
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Hay problemas con la Novedad"
            End If
            GoTo CierroTodo
        Else
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Tipo de Hora: " & Aux_Tipohora
            End If
            Aux_Tipohora = rs!thnro
        End If

        StrSql = "INSERT INTO " & TTempWFJustif & " (codext,desde,hasta,maxhoras,orden,"
        StrSql = StrSql & " nro,sigla,ternro,tjusnro,horadesde,horahasta,thnro)"
        StrSql = StrSql & " VALUES( "
        StrSql = StrSql & Rs_Justif!juscodext
        StrSql = StrSql & "," & ConvFecha(Rs_Justif!jusdesde)
        StrSql = StrSql & "," & ConvFecha(Rs_Justif!jushasta)
        StrSql = StrSql & "," & Rs_Justif!juselMaxHoras
        StrSql = StrSql & "," & Rs_Justif!juselorden
        StrSql = StrSql & "," & Rs_Justif!jusnro
        StrSql = StrSql & ",'" & Rs_Justif!jussigla & "'"
        StrSql = StrSql & "," & Rs_Justif!Ternro
        StrSql = StrSql & "," & Rs_Justif!tjusnro
        StrSql = StrSql & ",'" & Rs_Justif!jushoradesde & "'"
        StrSql = StrSql & ",'" & Rs_Justif!jushorahasta & "'"
        StrSql = StrSql & "," & Aux_Tipohora
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "Insertó en WF_Justif "
        End If
    
    Rs_Justif.MoveNext
Loop

StrSql = "SELECT * FROM gti_horcumplido WHERE ternro = " & NroTer
StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
StrSql = StrSql & " AND (normnro IS NOT NULL)"
StrSql = StrSql & " AND (normnro2 IS NOT NULL)"
StrSql = StrSql & " AND (jusnro IS NULL)"
StrSql = StrSql & " AND (jusnro2 IS NULL)"
StrSql = StrSql & " ORDER BY horhoradesde, horhorahasta, thnro "
OpenRecordset StrSql, rs
'Sigue = True
'If Not rs.EOF Then
Do While Not rs.EOF
    StrSql = "SELECT * FROM " & TTempWFJustif
    StrSql = StrSql & " ORDER BY orden"
    If Rs_Justif.State = adStateOpen Then Rs_Justif.Close
    OpenRecordset StrSql, Rs_Justif
    
    Sigue = True
    'Miemtras tenga horas para justificar y tenga Justificaciones
    Do While Not Rs_Justif.EOF And Not rs.EOF And Sigue
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "justificacion Tipo de Hora : " & Rs_Justif!thnro
        End If
        
        If Rs_Justif!thnro <> 0 Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "rs.Horcant: " & rs!horcant & " y rs_justif!maxhoras: " & Rs_Justif!MaxHoras
            End If
            
            Total_Hs_Justificadas = Rs_Justif!MaxHoras

            'Reviso la cantidad de horas que se intersectan entre la anormalidad del HC y la justificacion
            'FGZ - 24/05/2013 --------------------------------------
            'Call CalcularInterseccionHoras(rs!hordesde, rs!horhoradesde, rs!horhasta, rs!horhorahasta, Rs_Justif!Desde, Rs_Justif!HoraDesde, Rs_Justif!Hasta, Rs_Justif!HoraHasta, Rs_Justif!MaxHoras, Cant_Int, Jus_Fec_Desde, Jus_Hor_Desde, Jus_Fec_Hasta, Jus_Hor_Hasta, Caso, Cant_HC1, Cant_HC2)
            Call CalcularInterseccionHoras2(rs!hordesde, rs!horhoradesde, rs!horhasta, rs!horhorahasta, Rs_Justif!Desde, Rs_Justif!HoraDesde, Rs_Justif!Hasta, Rs_Justif!HoraHasta, Rs_Justif!MaxHoras, Cant_Int, Jus_Fec_Desde, Jus_Hor_Desde, Jus_Fec_Hasta, Jus_Hor_Hasta, Caso, Cant_HC1, Cant_HC2)
            'FGZ - 24/05/2013 --------------------------------------
            If Cant_Int < rs!horcant Then
                'Estamos ante alguno de estos 4 casos
                'A)
                '-----D1------H1---------
                '---------D2------H2-----
                    'Debe quedar ---D2-----H1------
                
                'B)
                '-----D1----------H1-----
                '---------D2---H2--------
                    'Debe quedar ---D2-----H2----
                
                'C)
                '--------D1------H1---------
                '-----D2------H2------------
                    'Debe quedar ---D1-----H2------

                'D)
                '--------D1------H1---------
                '-----D2-----------H2-------
                    'Debe quedar ---D1-----H1------
                    
                If Cant_Int <> 0 Then
                    Select Case Caso
                    Case "A":
                        '-----D1------H1---------
                        '---------D2------H2-----
                            'Debe quedar ---D2-----H1------
                        
                        'Debo dejar el registro de HC cambiandole la cantidad de horas y acortando la fecha hasta
                        ' Ademas si la cantidad justificada es menor que Total_Hs_Justificadas debo insertar en el HC el resto
                        
                        StrSql = "SELECT * FROM GTI_HORCUMPLIDO WHERE hornro = " & rs!hornro
                        OpenRecordset StrSql, wf_Hcp
                        If Not wf_Hcp.EOF Then
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 2) & "wf_hcp!horcant= " & wf_Hcp!horcant
                                Flog.writeline Espacios(Tabulador * 2) & "rs_justif!maxhoras= " & Cant_Int
                            End If
                            
                            VCant = CSng("0" & wf_Hcp!horcant) - Cant_Int
                            
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 2) & "wf_hcp!horcant - rs_justif!maxhoras = " & VCant
                            End If
                            
                            'Actualizo el resto
                            If Round(Cant_HC1, Presicion_HC) <> 0 Then
                                TotHorHHMM = CHoras(Cant_HC1, 60)
                            
                                StrSql = "UPDATE gti_horcumplido SET horcant = " & Round(Cant_HC1, Presicion_HC)
                                StrSql = StrSql & ", horas = " & TotHorHHMM
                                StrSql = StrSql & ", horhorahasta = '" & Jus_Hor_Desde & "'"
                                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, adExecuteNoRecords
                            Else
                                StrSql = "DELETE FROM gti_horcumplido WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, , adExecuteNoRecords
                                
                                If depurar Then
                                    Flog.writeline Espacios(Tabulador * 2) & "Borra de gti_horcumplido tipo de hora: " & rs!hornro
                                End If
                            End If
                            
                            'Inserto un registro como el anterior pero por lo que falta
                            If Round(Cant_HC2, Presicion_HC) <> 0 Then
                                TotHorHHMM = CHoras(Cant_HC2, 60)
                            
                                StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                                "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
                                "normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Round(Cant_HC2, Presicion_HC) & "," & _
                                ConvFecha(rs!hordesde) & "," & ConvFecha(rs!horhasta) & "," & "0,-1," & _
                                rs!Ternro & "," & rs!thnro & "," & rs!turnro & "," & rs!empleg & "," & _
                                ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",'" & Jus_Hor_Hasta & "','" & rs!horhorahasta & "'," & rs!normnro & "," & rs!normnro2 & ",' ')"
                                objConn.Execute StrSql, , adExecuteNoRecords
                            End If
                            
                            'Actualizo el rs
                            Flog.writeline Espacios(Tabulador * 2) & "Actualizó gti_horcumplido " & Round(VCant, Presicion_HC)
                            StrSql = "SELECT * FROM gti_horcumplido WHERE ternro = " & NroTer
                            StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
                            StrSql = StrSql & " AND (normnro IS NOT NULL)"
                            StrSql = StrSql & " AND (normnro2 IS NOT NULL)"
                            OpenRecordset StrSql, rs
                            If Not rs.EOF Then
                                rs.MoveFirst
                            End If
                        End If
                        
                        TotHorHHMM = CHoras(Cant_Int, 60)
                        If Rs_Justif!Orden = 1 Then
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                            StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                            StrSql = StrSql & "horfecrep,horfecgen,normnro,normnro2,horestado) VALUES ("
                            StrSql = StrSql & TotHorHHMM
                            StrSql = StrSql & "," & Round(Cant_Int, Presicion_HC)
                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                            StrSql = StrSql & ",'" & Jus_Hor_Desde & "'"
                            StrSql = StrSql & ",'" & Jus_Hor_Hasta & "'"
                            StrSql = StrSql & ",0,-1"
                            StrSql = StrSql & "," & Empleado.Ternro
                            StrSql = StrSql & "," & Rs_Justif!thnro
                            StrSql = StrSql & "," & Empleado.Legajo
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & ",12,12"
                            StrSql = StrSql & ",' '"
                            StrSql = StrSql & ")"
                        Else
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                            StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                            StrSql = StrSql & "horfecrep,horfecgen,horestado) VALUES ("
                            StrSql = StrSql & TotHorHHMM
                            StrSql = StrSql & "," & Round(Cant_Int, Presicion_HC)
                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                            StrSql = StrSql & ",'" & Jus_Hor_Desde & "'"
                            StrSql = StrSql & ",'" & Jus_Hor_Hasta & "'"
                            StrSql = StrSql & ",0,-1"
                            StrSql = StrSql & "," & Empleado.Ternro
                            StrSql = StrSql & "," & Rs_Justif!thnro
                            StrSql = StrSql & "," & Empleado.Legajo
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & ",' '"
                            StrSql = StrSql & ")"
                        End If
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 2) & "SQL " & StrSql
                        End If
                        objConn.Execute StrSql, , adExecuteNoRecords
                        
                        StrSql = "DELETE FROM " & TTempWFJustif & " WHERE nro = " & Rs_Justif!nro
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 2) & "Borra de WF_Justif"
                        End If
                    Case "B":
                        '-----D1----------H1-----
                        '---------D2---H2--------
                            'Debe quedar ---D2-----H2----
                
                        'Debo cortar el registro de HC cambiandole la cantidad de horas y acortando la fecha hasta, es decir, de ese registro hacer 2
                        '   ---[------------]------
                        '   ---[----]--[----]------
                        ' y el intervalo en el medio es lo que se justifica
                        
                        StrSql = "SELECT * FROM GTI_HORCUMPLIDO WHERE hornro = " & rs!hornro
                        OpenRecordset StrSql, wf_Hcp
                        If Not wf_Hcp.EOF Then
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 2) & "wf_hcp!horcant= " & wf_Hcp!horcant
                                Flog.writeline Espacios(Tabulador * 2) & "rs_justif!maxhoras= " & Cant_Int
                            End If
                            
                            'Actualizo el resto
                            If Round(Cant_HC1, Presicion_HC) <> 0 Then
                                TotHorHHMM = CHoras(Cant_HC1, 60)
                                StrSql = "UPDATE gti_horcumplido SET horcant = " & Round(Cant_HC1, Presicion_HC)
                                'StrSql = StrSql & ", horhoradesde = '" & Jus_Hor_Hasta & "'"
                                StrSql = StrSql & ", horas = " & TotHorHHMM
                                StrSql = StrSql & ", horhorahasta = '" & Jus_Hor_Desde & "'"
                                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, adExecuteNoRecords
                            Else
                                StrSql = "DELETE FROM gti_horcumplido WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, , adExecuteNoRecords
                                
                                If depurar Then
                                    Flog.writeline Espacios(Tabulador * 2) & "Borra de gti_horcumplido tipo de hora: " & rs!hornro
                                End If
                            End If
                            
                            'Inserto un registro como el anterior pero por lo que falta
                            If Round(Cant_HC2, Presicion_HC) <> 0 Then
                                TotHorHHMM = CHoras(Cant_HC2, 60)
                            
                                StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                                "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
                                "normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Round(Cant_HC2, Presicion_HC) & "," & _
                                ConvFecha(rs!hordesde) & "," & ConvFecha(rs!horhasta) & "," & "0,-1," & _
                                rs!Ternro & "," & rs!thnro & "," & rs!turnro & "," & rs!empleg & "," & _
                                ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",'" & Jus_Hor_Hasta & "','" & rs!horhorahasta & "'," & rs!normnro & "," & rs!normnro2 & ",' ')"
                                objConn.Execute StrSql, , adExecuteNoRecords
                            End If
                            
                            'Actualizo el rs
                            Flog.writeline Espacios(Tabulador * 2) & "Actualizó gti_horcumplido " & Round(VCant, Presicion_HC)
                            StrSql = "SELECT * FROM gti_horcumplido WHERE ternro = " & NroTer
                            StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
                            StrSql = StrSql & " AND (normnro IS NOT NULL)"
                            StrSql = StrSql & " AND (normnro2 IS NOT NULL)"
                            OpenRecordset StrSql, rs
                            If Not rs.EOF Then
                                rs.MoveFirst
                            End If
                        End If
                        
                        TotHorHHMM = CHoras(Cant_Int, 60)
                        If Rs_Justif!Orden = 1 Then
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                            StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                            StrSql = StrSql & "horfecrep,horfecgen,normnro,normnro2,horestado) VALUES ("
                            StrSql = StrSql & TotHorHHMM
                            StrSql = StrSql & "," & Round(Cant_Int, Presicion_HC)
                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                            StrSql = StrSql & ",'" & Jus_Hor_Desde & "'"
                            StrSql = StrSql & ",'" & Jus_Hor_Hasta & "'"
                            StrSql = StrSql & ",0,-1"
                            StrSql = StrSql & "," & Empleado.Ternro
                            StrSql = StrSql & "," & Rs_Justif!thnro
                            StrSql = StrSql & "," & Empleado.Legajo
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & ",12,12"
                            StrSql = StrSql & ",' '"
                            StrSql = StrSql & ")"
                        Else
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                            StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                            StrSql = StrSql & "horfecrep,horfecgen,horestado) VALUES ("
                            StrSql = StrSql & TotHorHHMM
                            StrSql = StrSql & "," & Round(Cant_Int, Presicion_HC)
                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                            StrSql = StrSql & ",'" & Jus_Hor_Desde & "'"
                            StrSql = StrSql & ",'" & Jus_Hor_Hasta & "'"
                            StrSql = StrSql & ",0,-1"
                            StrSql = StrSql & "," & Empleado.Ternro
                            StrSql = StrSql & "," & Rs_Justif!thnro
                            StrSql = StrSql & "," & Empleado.Legajo
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & ",' '"
                            StrSql = StrSql & ")"
                        End If
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 2) & "SQL " & StrSql
                        End If
                        objConn.Execute StrSql, , adExecuteNoRecords
                        
                        StrSql = "DELETE FROM " & TTempWFJustif & " WHERE nro = " & Rs_Justif!nro
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 2) & "Borra de WF_Justif"
                        End If
                    Case "C":
                        '--------D1------H1---------
                        '-----D2------H2------------
                            'Debe quedar ---D1-----H2------
                        
                        'Debo dejar el registro de HC cambiandole la cantidad de horas y acortando la fecha hasta
                        
                        StrSql = "SELECT * FROM GTI_HORCUMPLIDO WHERE hornro = " & rs!hornro
                        OpenRecordset StrSql, wf_Hcp
                        If Not wf_Hcp.EOF Then
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 2) & "wf_hcp!horcant= " & wf_Hcp!horcant
                                Flog.writeline Espacios(Tabulador * 2) & "rs_justif!maxhoras= " & Cant_Int
                            End If
                            
                            VCant = CSng("0" & wf_Hcp!horcant) - Cant_Int
                            
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 2) & "wf_hcp!horcant - rs_justif!maxhoras = " & VCant
                            End If
                            
                            TotHorHHMM = CHoras(VCant, 60)
                            
                            StrSql = "UPDATE gti_horcumplido SET horcant = " & Round(VCant, Presicion_HC)
                            StrSql = StrSql & ", horas = " & TotHorHHMM
                            StrSql = StrSql & ", horhoradesde = '" & Jus_Hor_Hasta & "'"
                            StrSql = StrSql & " WHERE hornro = " & rs!hornro
                            objConn.Execute StrSql, adExecuteNoRecords
                            
                            'Actualizo el rs
                            Flog.writeline Espacios(Tabulador * 2) & "Actualizó gti_horcumplido " & Round(VCant, Presicion_HC)
                            StrSql = "SELECT * FROM gti_horcumplido WHERE ternro = " & NroTer
                            StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
                            StrSql = StrSql & " AND (normnro IS NOT NULL)"
                            StrSql = StrSql & " AND (normnro2 IS NOT NULL)"
                            OpenRecordset StrSql, rs
                            If Not rs.EOF Then
                                rs.MoveFirst
                            End If
                        End If
                        
                        TotHorHHMM = CHoras(Cant_Int, 60)
                        If Rs_Justif!Orden = 1 Then
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                            StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                            StrSql = StrSql & "horfecrep,horfecgen,normnro,normnro2,horestado) VALUES ("
                            StrSql = StrSql & TotHorHHMM
                            StrSql = StrSql & "," & Round(Cant_Int, Presicion_HC)
                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                            StrSql = StrSql & ",'" & Jus_Hor_Desde & "'"
                            StrSql = StrSql & ",'" & Jus_Hor_Hasta & "'"
                            StrSql = StrSql & ",0,-1"
                            StrSql = StrSql & "," & Empleado.Ternro
                            StrSql = StrSql & "," & Rs_Justif!thnro
                            StrSql = StrSql & "," & Empleado.Legajo
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & ",12,12"
                            StrSql = StrSql & ",' '"
                            StrSql = StrSql & ")"
                        Else
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                            StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                            StrSql = StrSql & "horfecrep,horfecgen,horestado) VALUES ("
                            StrSql = StrSql & TotHorHHMM
                            StrSql = StrSql & "," & Round(Cant_Int, Presicion_HC)
                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                            StrSql = StrSql & ",'" & Jus_Hor_Desde & "'"
                            StrSql = StrSql & ",'" & Jus_Hor_Hasta & "'"
                            StrSql = StrSql & ",0,-1"
                            StrSql = StrSql & "," & Empleado.Ternro
                            StrSql = StrSql & "," & Rs_Justif!thnro
                            StrSql = StrSql & "," & Empleado.Legajo
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & ",' '"
                            StrSql = StrSql & ")"
                        End If
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 2) & "SQL " & StrSql
                        End If
                        objConn.Execute StrSql, , adExecuteNoRecords
                        
                        StrSql = "DELETE FROM " & TTempWFJustif & " WHERE nro = " & Rs_Justif!nro
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 2) & "Borra de WF_Justif"
                        End If
                    Case "D":
                        '--------D1------H1---------
                        '-----D2-----------H2-------
                            'Debe quedar ---D1-----H1------
                        
                        'Debo dejar el registro de HC cambiandole la cantidad de horas y acortando la fecha hasta
                                                
                        StrSql = "SELECT * FROM GTI_HORCUMPLIDO WHERE hornro = " & rs!hornro
                        OpenRecordset StrSql, wf_Hcp
                        If Not wf_Hcp.EOF Then
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 2) & "wf_hcp!horcant= " & wf_Hcp!horcant
                                Flog.writeline Espacios(Tabulador * 2) & "rs_justif!maxhoras= " & Cant_Int
                            End If
                            
                            'Actualizo el resto
                            If Round(Cant_HC1, Presicion_HC) <> 0 Then
                                TotHorHHMM = CHoras(Cant_HC1, 60)
                                
                                StrSql = "UPDATE gti_horcumplido SET horcant = " & Round(Cant_HC1, Presicion_HC)
                                StrSql = StrSql & ", horhoradesde = '" & Jus_Hor_Hasta & "'"
                                StrSql = StrSql & ", horas = " & TotHorHHMM
                                StrSql = StrSql & " WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, adExecuteNoRecords
                            Else
                                StrSql = "DELETE FROM gti_horcumplido WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, , adExecuteNoRecords
                                
                                If depurar Then
                                    Flog.writeline Espacios(Tabulador * 2) & "Borra de gti_horcumplido tipo de hora: " & rs!hornro
                                End If
                            End If
                            
                            'Inserto un registro como el anterior pero por lo que falta
                            If Round(Cant_HC2, Presicion_HC) <> 0 Then
                                TotHorHHMM = CHoras(Cant_HC2, 60)
                            
                                StrSql = "INSERT INTO gti_horcumplido (horas, horcant,hordesde,horhasta,hormanual," & _
                                "horvalido,ternro,thnro,turnro,empleg,horfecrep,horfecgen,horhoradesde,horhorahasta," & _
                                "normnro,normnro2,horestado) VALUES (" & TotHorHHMM & "," & Round(Cant_HC2, Presicion_HC) & "," & _
                                ConvFecha(rs!hordesde) & "," & ConvFecha(rs!horhasta) & "," & "0,-1," & _
                                rs!Ternro & "," & rs!thnro & "," & rs!turnro & "," & rs!empleg & "," & _
                                ConvFecha(p_fecha) & "," & ConvFecha(p_fecha) & ",'" & Jus_Hor_Hasta & "','" & rs!horhorahasta & "'," & rs!normnro & "," & rs!normnro2 & ",' ')"
                                objConn.Execute StrSql, , adExecuteNoRecords
                            End If
                            
                            
                            'Actualizo el rs
                            Flog.writeline Espacios(Tabulador * 2) & "Actualizó gti_horcumplido " & Round(VCant, Presicion_HC)
                            StrSql = "SELECT * FROM gti_horcumplido WHERE ternro = " & NroTer
                            StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
                            StrSql = StrSql & " AND (normnro IS NOT NULL)"
                            StrSql = StrSql & " AND (normnro2 IS NOT NULL)"
                            OpenRecordset StrSql, rs
                            If Not rs.EOF Then
                                rs.MoveFirst
                            End If
                        End If
                        
                        TotHorHHMM = CHoras(Cant_Int, 60)
                        
                        If Rs_Justif!Orden = 1 Then
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                            StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                            StrSql = StrSql & "horfecrep,horfecgen,normnro,normnro2,horestado) VALUES ("
                            StrSql = StrSql & TotHorHHMM
                            StrSql = StrSql & "," & Round(Cant_Int, Presicion_HC)
                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                            StrSql = StrSql & ",'" & Jus_Hor_Desde & "'"
                            StrSql = StrSql & ",'" & Jus_Hor_Hasta & "'"
                            StrSql = StrSql & ",0,-1"
                            StrSql = StrSql & "," & Empleado.Ternro
                            StrSql = StrSql & "," & Rs_Justif!thnro
                            StrSql = StrSql & "," & Empleado.Legajo
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & ",12,12"
                            StrSql = StrSql & ",' '"
                            StrSql = StrSql & ")"
                        Else
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                            StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                            StrSql = StrSql & "horfecrep,horfecgen,horestado) VALUES ("
                            StrSql = StrSql & TotHorHHMM
                            StrSql = StrSql & "," & Round(Cant_Int, Presicion_HC)
                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                            StrSql = StrSql & ",'" & Jus_Hor_Desde & "'"
                            StrSql = StrSql & ",'" & Jus_Hor_Hasta & "'"
                            StrSql = StrSql & ",0,-1"
                            StrSql = StrSql & "," & Empleado.Ternro
                            StrSql = StrSql & "," & Rs_Justif!thnro
                            StrSql = StrSql & "," & Empleado.Legajo
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & ",' '"
                            StrSql = StrSql & ")"
                        End If
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 2) & "SQL " & StrSql
                        End If
                        objConn.Execute StrSql, , adExecuteNoRecords
                        
                        StrSql = "DELETE FROM " & TTempWFJustif & " WHERE nro = " & Rs_Justif!nro
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 2) & "Borra de WF_Justif"
                        End If
                        
                        
                        ''FGZ - 10/05/2013 --------------------------------------------------------------------------------
                        'If Cant_Int < Total_Hs_Justificadas Then
                        '        StrSql = "UPDATE " & TTempWFJustif & " SET maxhoras = " & Total_Hs_Justificadas - Cant_Int
                        '        StrSql = StrSql & " WHERE nro = " & Rs_Justif!nro
                        '        objConn.Execute StrSql, , adExecuteNoRecords
                        '        If depurar Then
                        '            Flog.writeline Espacios(Tabulador * 2) & "Actualizó WF_Justif"
                        '        End If
                        '
                        '        'debo actualizar el WF_Justif -------------
                        '        Aux_NroJustif = Rs_Justif!nro
                        '        StrSql = "SELECT * FROM " & TTempWFJustif
                        '        StrSql = StrSql & " ORDER BY orden"
                        '        OpenRecordset StrSql, Rs_Justif
                        '        If Not Rs_Justif.EOF Then
                        '            'Ciclar hasta encontrar el registro en que estaba
                        '            Do Until Rs_Justif!nro = Aux_NroJustif
                        '                Rs_Justif.MoveNext
                        '            Loop
                        '        End If
                        '        'debo actualizar el WF_Justif -------------
                        'Else
                        '    StrSql = "DELETE FROM " & TTempWFJustif & " WHERE nro = " & Rs_Justif!nro
                        '    objConn.Execute StrSql, , adExecuteNoRecords
                        '    If depurar Then
                        '        Flog.writeline Espacios(Tabulador * 2) & "Borra de WF_Justif"
                        '    End If
                        'End If
                        ''FGZ - 10/05/2013 --------------------------------------------------------------------------------
                    Case Else
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 3) & "No Justifica"
                        End If
                    End Select
                Else
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 3) & "No Justifica."
                    End If
                End If
                'Avanzo el wfJustif porque Eliminé de wf_Justif
                If Not Rs_Justif.EOF Then
                    Rs_Justif.MoveNext
                End If
            Else
                'caso 1: Justificacion Menor que las Horas generadas
                If rs!horcant > Rs_Justif!MaxHoras Then
    
                    StrSql = "SELECT * FROM GTI_HORCUMPLIDO WHERE hornro = " & rs!hornro
                    If wf_Hcp.State = adStateOpen Then wf_Hcp.Close
                    OpenRecordset StrSql, wf_Hcp
                    'wf_Hcp.Open StrSql, objConn
                    If Not wf_Hcp.EOF Then
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 2) & "wf_hcp!horcant= " & wf_Hcp!horcant
                            Flog.writeline Espacios(Tabulador * 2) & "rs_justif!maxhoras= " & Rs_Justif!MaxHoras
                        End If
                        
                        VCant = CSng("0" & wf_Hcp!horcant) - Rs_Justif!MaxHoras
                        
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 2) & "wf_hcp!horcant - rs_justif!maxhoras = " & VCant
                        End If
                        
                        Call Calcula_Hora(VCant, wf_Hcp!hordesde, VHora, VFecha)
                        If Not EsNulo(wf_Hcp!horhorahasta) Then
                            Call objFechasHoras.RestaXHoras(wf_Hcp!horfecrep, wf_Hcp!horhorahasta, VHora, fecres, horres)
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 2) & "ValidarHora(horres): " & horres
                            End If
                            ok = objFechasHoras.ValidarHora(horres)
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 2) & "OK: " & ok
                            End If
                        End If
                        
                        'calculo la hora desde y hasta de la justificacion a insertar
                        Jus_Fec_Hasta = fecres
                        Jus_Hor_Hasta = horres
                        Call objFechasHoras.RestaXHoras(wf_Hcp!horfecrep, Jus_Hor_Hasta, Total_Hs_Justificadas, Jus_Fec_Desde, Jus_Hor_Desde)
                        ok = objFechasHoras.ValidarHora(Jus_Hor_Desde)
                        'calculo la hora desde y hasta de la justificacion a insertar
                        
                        TotHorHHMM = CHoras(VCant, 60)
                        StrSql = "UPDATE gti_horcumplido SET horcant = " & Round(VCant, Presicion_HC)
                        StrSql = StrSql & ", horas = " & TotHorHHMM
                        StrSql = StrSql & ", horhoradesde = '" & horres & "'"
                        StrSql = StrSql & " WHERE hornro = " & rs!hornro
                        objConn.Execute StrSql, adExecuteNoRecords
                        
                        
                        'Actualizo el rs
                        Flog.writeline Espacios(Tabulador * 2) & "Actualizó gti_horcumplido " & Round(VCant, Presicion_HC)
                        StrSql = "SELECT * FROM gti_horcumplido WHERE ternro = " & NroTer
                        StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
                        StrSql = StrSql & " AND (normnro IS NOT NULL)"
                        StrSql = StrSql & " AND (normnro2 IS NOT NULL)"
                        If rs.State = adStateOpen Then rs.Close
                        OpenRecordset StrSql, rs
                        If Not rs.EOF Then
                            rs.MoveFirst
                        End If
                    End If
                    'wf_hcp.UpdateBatch
                    If wf_Hcp.State = adStateOpen Then wf_Hcp.Close
                    
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 2) & "INSERT"
                        End If
                        
                        TotHorHHMM = CHoras(Rs_Justif!MaxHoras, 60)
                        
                        If Trim(Rs_Justif!sigla) = "ALM" Then
                            If Rs_Justif!Orden = 1 Then
                                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                                StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                                StrSql = StrSql & "horfecrep,horfecgen,normnro,normnro2,horestado) VALUES ("
                                StrSql = StrSql & TotHorHHMM
                                StrSql = StrSql & "," & Round(Rs_Justif!MaxHoras, Presicion_HC)
                                StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                                StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                                StrSql = StrSql & ",'" & Jus_Hor_Desde & "'"
                                StrSql = StrSql & ",'" & Jus_Hor_Hasta & "'"
                                StrSql = StrSql & ",0,-1"
                                StrSql = StrSql & "," & Empleado.Ternro
                                StrSql = StrSql & "," & Rs_Justif!thnro
                                StrSql = StrSql & "," & Empleado.Legajo
                                StrSql = StrSql & "," & ConvFecha(p_fecha)
                                StrSql = StrSql & "," & ConvFecha(p_fecha)
                                StrSql = StrSql & ",12,12"
                                StrSql = StrSql & ",' '"
                                StrSql = StrSql & ")"
                            Else
                                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                                StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                                StrSql = StrSql & "horfecrep,horfecgen,horestado) VALUES ("
                                StrSql = StrSql & TotHorHHMM
                                StrSql = StrSql & "," & Round(Rs_Justif!MaxHoras, Presicion_HC)
                                StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                                StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                                StrSql = StrSql & ",'" & Jus_Hor_Desde & "'"
                                StrSql = StrSql & ",'" & Jus_Hor_Hasta & "'"
                                StrSql = StrSql & ",0,-1"
                                StrSql = StrSql & "," & Empleado.Ternro
                                StrSql = StrSql & "," & Rs_Justif!thnro
                                StrSql = StrSql & "," & Empleado.Legajo
                                StrSql = StrSql & "," & ConvFecha(p_fecha)
                                StrSql = StrSql & "," & ConvFecha(p_fecha)
                                StrSql = StrSql & ",' '"
                                StrSql = StrSql & ")"
                            End If
                        Else
                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                            StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                            StrSql = StrSql & "horfecrep,horfecgen,horestado) VALUES ("
                            StrSql = StrSql & TotHorHHMM
                            StrSql = StrSql & "," & Round(Rs_Justif!MaxHoras, Presicion_HC)
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & ",'" & Rs_Justif!HoraDesde & "'"
                            StrSql = StrSql & ",'" & Rs_Justif!HoraHasta & "'"
                            StrSql = StrSql & ",0,-1"
                            StrSql = StrSql & "," & Empleado.Ternro
                            StrSql = StrSql & "," & Rs_Justif!thnro
                            StrSql = StrSql & "," & Empleado.Legajo
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                            StrSql = StrSql & ",' '"
                            StrSql = StrSql & ")"
                        End If
                    
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "SQL " & StrSql
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Ejecutó bien "
                    End If
                    
                    'Grabo y cierro el recordset
                    If wf_Hcp2.State = adStateOpen Then wf_Hcp2.Close
                    
                    StrSql = "DELETE FROM " & TTempWFJustif & " WHERE nro = " & Rs_Justif!nro
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "Borra de WF_Justif"
                    End If
                    
                    ' Avanzo el wfJustif porque Eliminé de wf_Justif
                    If Not Rs_Justif.EOF Then
                        Rs_Justif.MoveNext
                    End If
                    
                Else 'If rs!horcant > rs_justif!maxhoras Then
                    ' 2_ Justificacion = que las Horas generadas
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 2) & "rs!horcant no es > rs_justif!maxhoras"
                    End If
                    
                    Jus_Fec_Desde = rs!hordesde
                    Jus_Hor_Desde = rs!horhoradesde
                    Jus_Fec_Hasta = rs!horhasta
                    Jus_Hor_Hasta = rs!horhorahasta
                    
                    If rs!horcant = Rs_Justif!MaxHoras Then
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 2) & "rs!horcant = rs_justif!maxhoras"
                        End If
                        StrSql = "SELECT * FROM gti_horcumplido WHERE hornro = " & rs!hornro
                        If wf_Hcp.State = adStateOpen Then wf_Hcp.Close
                        OpenRecordset StrSql, wf_Hcp
                        
                        StrSql = "DELETE FROM gti_horcumplido WHERE hornro = " & rs!hornro
                        objConn.Execute StrSql, , adExecuteNoRecords
                        
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 2) & "Borra de gti_horcumplido tipo de hora: " & rs!hornro
                        End If
                        
                        'FGZ - 24/05/2013 ---------------------------------------------------------------------------------
                        
'                        StrSql = "SELECT * FROM gti_horcumplido "
'                        StrSql = StrSql & " WHERE ternro = " & NroTer
'                        StrSql = StrSql & " AND horfecrep = " & ConvFecha(p_fecha)
'                        StrSql = StrSql & " AND thnro = " & Rs_Justif!thnro
'                        If wf_Hcp2.State = adStateOpen Then wf_Hcp2.Close
'                        OpenRecordset StrSql, wf_Hcp2
'                        'wf_Hcp2.Open StrSql, objConn
'
'                        ' Si no hay uno que cumpla con las condiciones lo creo
'                        If wf_Hcp2.EOF Then
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 2) & "Inserta "
                            End If
                            
                            TotHorHHMM = CHoras(Rs_Justif!MaxHoras, 60)
                            
                            If Trim(Rs_Justif!sigla) = "ALM" Then
                                If Rs_Justif!Orden = 1 Then
                                    'Exceso de Almuerzo ==> genero anormalidad
                                    StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                                    StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                                    StrSql = StrSql & "horfecrep,horfecgen,normnro,normnro2,horestado) VALUES ("
                                    StrSql = StrSql & TotHorHHMM
                                    StrSql = StrSql & "," & Round(Rs_Justif!MaxHoras, Presicion_HC)
                                    StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                                    StrSql = StrSql & "," & ConvFecha(Jus_Fec_Hasta)
                                    StrSql = StrSql & ",'" & Jus_Hor_Desde & "'"
                                    StrSql = StrSql & ",'" & Jus_Hor_Hasta & "'"
                                    StrSql = StrSql & ",0,-1"
                                    StrSql = StrSql & "," & Empleado.Ternro
                                    StrSql = StrSql & "," & Rs_Justif!thnro
                                    StrSql = StrSql & "," & Empleado.Legajo
                                    StrSql = StrSql & "," & ConvFecha(p_fecha)
                                    StrSql = StrSql & "," & ConvFecha(p_fecha)
                                    StrSql = StrSql & ",12,12"
                                    StrSql = StrSql & ",' '"
                                    StrSql = StrSql & ")"
                                Else
                                    StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                                    StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                                    StrSql = StrSql & "horfecrep,horfecgen,horestado) VALUES ("
                                    StrSql = StrSql & TotHorHHMM
                                    StrSql = StrSql & "," & Round(Rs_Justif!MaxHoras, Presicion_HC)
                                    StrSql = StrSql & "," & ConvFecha(p_fecha)
                                    StrSql = StrSql & "," & ConvFecha(p_fecha)
                                    'FGZ - 24/05/2013 ---------------------------------------------------------------------------------
                                    'StrSql = StrSql & ",'" & Rs_Justif!HoraDesde & "'"
                                    'StrSql = StrSql & ",'" & Rs_Justif!HoraHasta & "'"
                                    StrSql = StrSql & ",'" & Jus_Hor_Desde & "'"
                                    StrSql = StrSql & ",'" & Jus_Hor_Hasta & "'"
                                    'FGZ - 24/05/2013 ---------------------------------------------------------------------------------
                                    StrSql = StrSql & ",0,-1"
                                    StrSql = StrSql & "," & Empleado.Ternro
                                    StrSql = StrSql & "," & Rs_Justif!thnro
                                    StrSql = StrSql & "," & Empleado.Legajo
                                    StrSql = StrSql & "," & ConvFecha(p_fecha)
                                    StrSql = StrSql & "," & ConvFecha(p_fecha)
                                    StrSql = StrSql & ",' '"
                                    StrSql = StrSql & ")"
                                End If
                            Else
                                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                                StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                                StrSql = StrSql & "horfecrep,horfecgen,horestado) VALUES ("
                                StrSql = StrSql & TotHorHHMM
                                StrSql = StrSql & "," & Round(Rs_Justif!MaxHoras, Presicion_HC)
                                StrSql = StrSql & "," & ConvFecha(p_fecha)
                                StrSql = StrSql & "," & ConvFecha(p_fecha)
                                StrSql = StrSql & ",'" & Rs_Justif!HoraDesde & "'"
                                StrSql = StrSql & ",'" & Rs_Justif!HoraHasta & "'"
                                StrSql = StrSql & ",0,-1"
                                StrSql = StrSql & "," & Empleado.Ternro
                                StrSql = StrSql & "," & Rs_Justif!thnro
                                StrSql = StrSql & "," & Empleado.Legajo
                                StrSql = StrSql & "," & ConvFecha(p_fecha)
                                StrSql = StrSql & "," & ConvFecha(p_fecha)
                                StrSql = StrSql & ",' '"
                                StrSql = StrSql & ")"
                            End If
'                        Else
'                            If depurar Then
'                                Flog.writeline Espacios(Tabulador * 2) & "Actualiza"
'                            End If
'
'                            TotHorHHMM = CHoras(CSng("0" & wf_Hcp2!horcant) + Rs_Justif!MaxHoras, 60)
'
'                            StrSql = "UPDATE gti_horcumplido SET horcant = " & Round(CSng("0" & wf_Hcp2!horcant) + Rs_Justif!MaxHoras, Presicion_HC)
'                            StrSql = StrSql & ",horas = " & TotHorHHMM
'                            StrSql = StrSql & ",hordesde = " & ConvFecha(p_fecha)
'                            StrSql = StrSql & ",horhasta = " & ConvFecha(p_fecha)
'                            StrSql = StrSql & ",horhoradesde='" & Rs_Justif!HoraDesde & "'"
'                            StrSql = StrSql & ",horhorahasta='" & Rs_Justif!HoraHasta & "'"
'                            StrSql = StrSql & ",hormanual = 0"
'                            StrSql = StrSql & ",horvalido = -1"
'                            StrSql = StrSql & ",ternro = " & Empleado.Ternro
'                            StrSql = StrSql & ",thnro = " & Rs_Justif!thnro
'                            StrSql = StrSql & ",empleg = " & Empleado.Legajo
'                            StrSql = StrSql & ",horfecrep = " & ConvFecha(p_fecha)
'                            StrSql = StrSql & ",horfecgen = " & ConvFecha(p_fecha)
'                            StrSql = StrSql & ",horestado=' '"
'                            StrSql = StrSql & " WHERE hornro = " & wf_Hcp2!hornro
'                        End If
                        
                        'FGZ - 24/05/2013 ---------------------------------------------------------------------------------
                        
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 2) & "SQL:" & StrSql
                        End If
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 2) & "Ejecuto bien"
                        End If
                        
                        'FGZ - 24/05/2013 ---------------------------------------------------------------------------------
                        'wf_Hcp2.Close
                        If wf_Hcp2.State = adStateOpen Then wf_Hcp2.Close
                        'FGZ - 24/05/2013 ---------------------------------------------------------------------------------
                        
                        StrSql = "DELETE FROM " & TTempWFJustif & " where nro = " & Rs_Justif!nro
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 2) & "Borra de WF_justif"
                        End If
                        
                        'Avanzo el rs porque eliminé el registro de GTI_HORCUMPLIDO
                        If Not rs.EOF Then
                            rs.MoveNext
                        End If
                        
                        ' Avanzo el wfJustif porque Eliminé de wf_Justif
                        If Not Rs_Justif.EOF Then
                            Rs_Justif.MoveNext
                        End If
                    Else ' If rs!horcant = rs_justif!maxhoras Then
                        ' 3_ Justificacion Mayor que las Horas generadas
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 2) & "rs!horcant no es = rs_justif!maxhoras"
                        End If
                        If rs!horcant < Rs_Justif!MaxHoras Then
                                If depurar Then
                                    Flog.writeline Espacios(Tabulador * 2) & "rs!horcant < rs_justif!maxhoras"
                                End If
    '                            ' Si no hay uno que cumpla con las condiciones lo creo
                                    If depurar Then
                                        Flog.writeline Espacios(Tabulador * 2) & "Inserta"
                                    End If
                                    
                                    TotHorHHMM = CHoras(rs!horcant, 60)
                                    
                                    If Trim(Rs_Justif!sigla) = "ALM" Then
                                        If Rs_Justif!Orden = 1 Then
                                            'Exceso de Almuerzo ==> genero anormalidad
                                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                                            StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                                            StrSql = StrSql & "horfecrep,horfecgen,normnro,normnro2,horestado) VALUES ("
                                            StrSql = StrSql & TotHorHHMM
                                            StrSql = StrSql & "," & Round(rs!horcant, Presicion_HC)
                                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Hasta)
                                            StrSql = StrSql & ",'" & Jus_Hor_Desde & "'"
                                            StrSql = StrSql & ",'" & Jus_Hor_Hasta & "'"
                                            StrSql = StrSql & ",0,-1"
                                            StrSql = StrSql & "," & Empleado.Ternro
                                            StrSql = StrSql & "," & Rs_Justif!thnro
                                            StrSql = StrSql & "," & Empleado.Legajo
                                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                                            StrSql = StrSql & ",12,12"
                                            StrSql = StrSql & ",' '"
                                            StrSql = StrSql & ")"
                                        Else
                                            StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                                            StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                                            StrSql = StrSql & "horfecrep,horfecgen,horestado) VALUES ("
                                            StrSql = StrSql & TotHorHHMM
                                            StrSql = StrSql & "," & Round(rs!horcant, Presicion_HC)
                                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Desde)
                                            StrSql = StrSql & "," & ConvFecha(Jus_Fec_Hasta)
                                            StrSql = StrSql & ",'" & Jus_Hor_Desde & "'"
                                            StrSql = StrSql & ",'" & Jus_Hor_Hasta & "'"
                                            StrSql = StrSql & ",0,-1"
                                            StrSql = StrSql & "," & Empleado.Ternro
                                            StrSql = StrSql & "," & Rs_Justif!thnro
                                            StrSql = StrSql & "," & Empleado.Legajo
                                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                                            StrSql = StrSql & "," & ConvFecha(p_fecha)
                                            StrSql = StrSql & ",' '"
                                            StrSql = StrSql & ")"
                                        End If
                                    Else
                                        StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horhasta,"
                                        StrSql = StrSql & "horhoradesde,horhorahasta,hormanual,horvalido,ternro,thnro,empleg,"
                                        StrSql = StrSql & "horfecrep,horfecgen,horestado) VALUES ("
                                        StrSql = StrSql & TotHorHHMM
                                        StrSql = StrSql & "," & Round(rs!horcant, Presicion_HC)
                                        StrSql = StrSql & "," & ConvFecha(p_fecha)
                                        StrSql = StrSql & "," & ConvFecha(p_fecha)
                                        StrSql = StrSql & ",'" & Rs_Justif!HoraDesde & "'"
                                        StrSql = StrSql & ",'" & Rs_Justif!HoraHasta & "'"
                                        StrSql = StrSql & ",0,-1"
                                        StrSql = StrSql & "," & Empleado.Ternro
                                        StrSql = StrSql & "," & Rs_Justif!thnro
                                        StrSql = StrSql & "," & Empleado.Legajo
                                        StrSql = StrSql & "," & ConvFecha(p_fecha)
                                        StrSql = StrSql & "," & ConvFecha(p_fecha)
                                        StrSql = StrSql & ",' '"
                                        StrSql = StrSql & ")"
                                    End If
                                 'FGZ - 17/08/2006 -------Siempre inserto -----------------------
                                 If depurar Then
                                    Flog.writeline Espacios(Tabulador * 2) & "SQL: " & StrSql
                                 End If
                                objConn.Execute StrSql, , adExecuteNoRecords
                                If depurar Then
                                    Flog.writeline Espacios(Tabulador * 2) & "Ejecutó Bien"
                                End If
                                
                                StrSql = "UPDATE " & TTempWFJustif & " SET maxhoras = " & Rs_Justif!MaxHoras - rs!horcant
                                StrSql = StrSql & " WHERE nro = " & Rs_Justif!nro
                                objConn.Execute StrSql, , adExecuteNoRecords
                                If depurar Then
                                    Flog.writeline Espacios(Tabulador * 2) & "Actualizó WF_Justif"
                                End If
                                
                                'debo actualizar el WF_Justif -------------
                                Aux_NroJustif = Rs_Justif!nro
                                StrSql = "SELECT * FROM " & TTempWFJustif
                                StrSql = StrSql & " ORDER BY orden"
                                OpenRecordset StrSql, Rs_Justif
                                If Not Rs_Justif.EOF Then
                                    'Ciclar hasta encontrar el registro en que estaba
                                    Do Until Rs_Justif!nro = Aux_NroJustif
                                        Rs_Justif.MoveNext
                                    Loop
                                End If
                                'debo actualizar el WF_Justif -------------
                                
                                StrSql = "DELETE FROM gti_horcumplido WHERE hornro = " & rs!hornro
                                objConn.Execute StrSql, , adExecuteNoRecords
                                If depurar Then
                                    Flog.writeline Espacios(Tabulador * 2) & "Borro de gti_horcumplido"
                                End If
                                
                                'Avanzo el rs porque eliminé el registro de GTI_HORCUMPLIDO
                                If Not rs.EOF Then
                                    rs.MoveNext
                                End If
                        End If ' If rs!horcant < rs_justif!maxhoras Then
                    End If ' If rs!horcant = rs_justif!maxhoras Then
                End If 'If rs!horcant > rs_justif!maxhoras Then
            End If
        Else 'If rs_justif!thnro <> 0 Then
            Rs_Justif.MoveNext
        End If
    
        ' Si no tengo mas Justificaciones o No tengo mas horas a Justificar ==> NO Continuo
        If rs.EOF Or Rs_Justif.EOF Then
            Sigue = False
        End If
    
    Loop 'wfJustif
    
    If Not rs.EOF Then
        rs.MoveNext
    End If
Loop 'rs (GTI_HORCUMPLIDO)


CierroTodo:
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
    
    If Rs_Justif.State = adStateOpen Then Rs_Justif.Close
    Set Rs_Justif = Nothing
    
    Call BorrarTempTable(TTempWFJustif)
End Sub



Public Function CantidadHsJustificadas(ByVal NroTer As Long, ByVal p_fecha As Date) As Single
' ---------------------------------------------------------------------------------------------
' Descripcion: Calcula la cantidad de hs justificadas (parciales variables y parciales fijas)
' Autor: FGZ
' Fecha: 21/11/2013
' Ultima Mod.:
' ----------------------------------------------------------------------------------------------
Dim Rs_Justif As New ADODB.Recordset
Dim rs As New ADODB.Recordset
Dim Nov_Firmada As Boolean
Dim TotalHsJustificadas  As Single
Dim AuxHorasJus  As Single

Dim HDesde As String
Dim HHasta As String
Dim hora_desde As String
Dim hora_hasta As String
Dim frac_desde As Integer
Dim frac_hasta As Integer

TotalHsJustificadas = 0
AuxHorasJus = 0

StrSql = "SELECT * FROM GTI_JUSTIFICACION WHERE ternro = " & NroTer
StrSql = StrSql & " AND (juseltipo = 3 or juseltipo = 2 ) AND jusdesde <= " & ConvFecha(p_fecha)
StrSql = StrSql & " AND jushasta >= " & ConvFecha(p_fecha)
StrSql = StrSql & " ORDER BY juselorden "
OpenRecordset StrSql, Rs_Justif
Do While Not Rs_Justif.EOF
    Select Case Rs_Justif!jussigla
    Case "NOV":
        If Firma_Novedades Then
            StrSql = "SELECT * FROM cysfirmas "
            StrSql = StrSql & " WHERE cysfirfin = -1"
            StrSql = StrSql & " AND cysfircodext = '" & Rs_Justif!juscodext & "' "
            StrSql = StrSql & " AND cystipnro = 7"
            OpenRecordset StrSql, rs
            If rs.EOF Then
                Nov_Firmada = False
            Else
                Nov_Firmada = True
            End If
        Else
            Nov_Firmada = True
        End If
        
        If Nov_Firmada Then
            If Rs_Justif!juseltipo = 2 Then 'Parcial fija
                HDesde = Rs_Justif!jushoradesde
                HHasta = Rs_Justif!jushorahasta
                If Not objFechasHoras.ValidarHora(HDesde) And Not objFechasHoras.ValidarHora(HHasta) Then
                    AuxHorasJus = 0
                Else
                    hora_desde = objFechasHoras.FraccionaHs(Rs_Justif!jushoradesde, frac_desde)
                    hora_hasta = objFechasHoras.FraccionaHs(Rs_Justif!jushorahasta, frac_hasta)
                    objFechasHoras.RestaHs p_fecha, hora_desde, p_fecha, hora_hasta, Tdias, Thoras, Tmin
                    AuxHorasJus = (Tdias * 24) + (Thoras + (Tmin / 60))
                End If
            Else
                AuxHorasJus = Rs_Justif!juselMaxHoras
            End If
            TotalHsJustificadas = TotalHsJustificadas + AuxHorasJus
        End If
    Case "LIC"
        StrSql = "SELECT tipdia.thnro FROM emp_lic "
        StrSql = StrSql & " INNER JOIN tipdia ON emp_lic.tdnro = tipdia.tdnro "
        StrSql = StrSql & " WHERE emp_lic.empleado = " & NroTer
        StrSql = StrSql & " AND emp_lic.emp_licnro = " & Rs_Justif!juscodext
        StrSql = StrSql & " AND (emp_lic.licestnro = 2)" 'Autorizada
        'FGZ - 19/05/2010 ------------ Control FT -------------
        StrSql = StrSql & " AND (emp_lic.ft = 0 OR (emp_lic.ft = -1 AND emp_lic.ftap = -1))"
        'FGZ - 19/05/2010 ------------ Control FT -------------
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
            If depurar Then
                Flog.writeline "Hay problemas con la Licencia"
            End If
        Else
            If Rs_Justif!juseltipo = 2 Then 'Parcial fija
                HDesde = Rs_Justif!jushoradesde
                HHasta = Rs_Justif!jushorahasta
                If Not objFechasHoras.ValidarHora(HDesde) And Not objFechasHoras.ValidarHora(HHasta) Then
                    AuxHorasJus = 0
                Else
                    hora_desde = objFechasHoras.FraccionaHs(Rs_Justif!jushoradesde, frac_desde)
                    hora_hasta = objFechasHoras.FraccionaHs(Rs_Justif!jushorahasta, frac_hasta)
                    objFechasHoras.RestaHs p_fecha, hora_desde, p_fecha, hora_hasta, Tdias, Thoras, Tmin
                    AuxHorasJus = (Tdias * 24) + (Thoras + (Tmin / 60))
                End If
            Else
                AuxHorasJus = Rs_Justif!juselMaxHoras
            End If
            TotalHsJustificadas = TotalHsJustificadas + AuxHorasJus
        End If
    Case "ALM":
        
        StrSql = " SELECT gti_tiponovedad.thnro FROM gti_novedad "
        StrSql = StrSql & " INNER JOIN gti_tiponovedad ON gti_tiponovedad.gtnovnro = gti_novedad.gtnovnro "
        StrSql = StrSql & " WHERE gti_novedad.gnovotoa = " & NroTer
        StrSql = StrSql & " AND gti_novedad.gnovnro = " & Rs_Justif!juscodext
        'FGZ - 19/05/2010 ------------ Control FT -------------
        StrSql = StrSql & " AND (gti_novedad.ft = 0 OR (gti_novedad.ft = -1 AND gti_novedad.ftap = -1))"
        'FGZ - 19/05/2010 ------------ Control FT -------------
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "Hay problemas con la Novedad"
            End If
        Else
            If Rs_Justif!juseltipo = 2 Then 'Parcial fija
                HDesde = Rs_Justif!jushoradesde
                HHasta = Rs_Justif!jushorahasta
                If Not objFechasHoras.ValidarHora(HDesde) And Not objFechasHoras.ValidarHora(HHasta) Then
                    AuxHorasJus = 0
                Else
                    hora_desde = objFechasHoras.FraccionaHs(Rs_Justif!jushoradesde, frac_desde)
                    hora_hasta = objFechasHoras.FraccionaHs(Rs_Justif!jushorahasta, frac_hasta)
                    objFechasHoras.RestaHs p_fecha, hora_desde, p_fecha, hora_hasta, Tdias, Thoras, Tmin
                    AuxHorasJus = (Tdias * 24) + (Thoras + (Tmin / 60))
                End If
            Else
                AuxHorasJus = Rs_Justif!juselMaxHoras
            End If
            TotalHsJustificadas = TotalHsJustificadas + AuxHorasJus
        End If
    Case Else
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "La justificacion no es ni NOV ni LIC : " & Rs_Justif!jussigla
        End If
    End Select
    
    Rs_Justif.MoveNext
Loop


    CantidadHsJustificadas = TotalHsJustificadas
    
End Function


Public Sub Politica730v1(ByVal NroTer As Long, ByVal Fecha As Date)
' --------------------------------------------------------------
' Descripcion: Genera el desgloce del HC segun el parte de movilidad (partemovilidad)
' Autor: EAM -
' Ultima modificacion:
' --------------------------------------------------------------
Dim l_rsHC As New ADODB.Recordset
Dim l_rsPM As New ADODB.Recordset


On Error GoTo ce
'Call SetearParametrosPolitica(Detalle, ok)
    
    
    StrSql = "SELECT DISTINCT hc.hornro,hc.horcant,hc.horfecgen,hc.hormanual,hc.ternro, hc.thnro, hc.horas, hc.regsal, hc.regent" & _
            " FROM gti_horcumplido hc " & _
            " WHERE (hc.regent in (SELECT distinct pmregnro2 FROM partemovilidad) OR hc.regsal IN (SELECT distinct pmregnro2 FROM partemovilidad))" & _
            " AND hc.horfecgen = " & ConvFecha(Fecha) & " And hc.Ternro = " & NroTer
    Flog.writeline Espacios(Tabulador * 2) & "  ==> Sql ejecutada: " & StrSql
    OpenRecordset StrSql, l_rsHC
        
    If depurar Then
        If Not l_rsHC.EOF Then
            If l_rsHC.RecordCount > 0 Then
                Flog.writeline Espacios(Tabulador * 2) & "  ==> Canitdad de tipo de Horas con desgloce: " & l_rsHC.RecordCount
            Else
                Flog.writeline Espacios(Tabulador * 2) & "  ==> No se encontraron Horas con desgloce."
            End If
        Else
            Flog.writeline Espacios(Tabulador * 2) & "  ==> No se encontraron Horas con desgloce."
        End If
    End If
        
        
    'EAM- (v5.48)Analizo todos las horas que tienen parte de desgloce y genero los desgloce
    Do While Not l_rsHC.EOF
        StrSql = "SELECT pmtenro1,pmesnro1,pmtenro2,pmesnro2,pmtenro3,pmesnro3,pmtenro4,pmesnro4,pmtenro5,pmesnro5 FROM partemovilidad " & _
                " WHERE pmregnro2 = " & l_rsHC!regsal & " Or pmregnro2 = " & l_rsHC!regent & " And Ternro = " & NroTer
        OpenRecordset StrSql, l_rsPM
        
        If Not l_rsPM.EOF Then
                                    
            StrSql = "INSERT INTO gti_desgloce_hc (canthoras,fecha,manual,ternro,thnro,horas"
            
            If Not EsNulo(l_rsPM!pmtenro1) Then StrSql = StrSql & ",te1"
            If Not EsNulo(l_rsPM!pmesnro1) Then StrSql = StrSql & ",estrnro1"
            If Not EsNulo(l_rsPM!pmtenro2) Then StrSql = StrSql & ",te2"
            If Not EsNulo(l_rsPM!pmesnro2) Then StrSql = StrSql & ",estrnro2"
            If Not EsNulo(l_rsPM!pmtenro3) Then StrSql = StrSql & ",te3"
            If Not EsNulo(l_rsPM!pmesnro3) Then StrSql = StrSql & ",estrnro3"
            If Not EsNulo(l_rsPM!pmtenro4) Then StrSql = StrSql & ",te4"
            If Not EsNulo(l_rsPM!pmesnro4) Then StrSql = StrSql & ",estrnro4"
            If Not EsNulo(l_rsPM!pmtenro5) Then StrSql = StrSql & ",te5"
            If Not EsNulo(l_rsPM!pmesnro5) Then StrSql = StrSql & ",estrnro5"
            StrSql = StrSql & ")"
            
            StrSql = StrSql & " VALUES (" & l_rsHC!horcant & "," & ConvFecha(l_rsHC!horfecgen) & "," & l_rsHC!hormanual & "," & l_rsHC!Ternro & "," & l_rsHC!thnro & ",'" & l_rsHC!Horas & "'"

            If Not EsNulo(l_rsPM!pmtenro1) Then StrSql = StrSql & "," & l_rsPM!pmtenro1
            If Not EsNulo(l_rsPM!pmesnro1) Then StrSql = StrSql & "," & l_rsPM!pmesnro1
            If Not EsNulo(l_rsPM!pmtenro2) Then StrSql = StrSql & "," & l_rsPM!pmtenro2
            If Not EsNulo(l_rsPM!pmesnro2) Then StrSql = StrSql & "," & l_rsPM!pmesnro2
            If Not EsNulo(l_rsPM!pmtenro3) Then StrSql = StrSql & "," & l_rsPM!pmtenro3
            If Not EsNulo(l_rsPM!pmesnro3) Then StrSql = StrSql & "," & l_rsPM!pmesnro3
            If Not EsNulo(l_rsPM!pmtenro4) Then StrSql = StrSql & "," & l_rsPM!pmtenro4
            If Not EsNulo(l_rsPM!pmesnro4) Then StrSql = StrSql & "," & l_rsPM!pmesnro4
            If Not EsNulo(l_rsPM!pmtenro5) Then StrSql = StrSql & "," & l_rsPM!pmtenro5
            If Not EsNulo(l_rsPM!pmesnro5) Then StrSql = StrSql & "," & l_rsPM!pmesnro5
            StrSql = StrSql & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
        
        

            l_rsHC.MoveNext
        Loop
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "  ==> Se generaron los desgloces Correctamente: "
        End If
        GoTo datosOK

datosOK:
    Exit Sub
ce:
    Flog.writeline " ------------------------------"
    Flog.writeline Espacios(Tabulador * 2) & "  ==> Error al generar el desgloce."
    Flog.writeline Err.Description
End Sub

Public Sub Politica730v2(ByVal NroTer As Long, ByVal Fecha As Date)
' --------------------------------------------------------------
' Descripcion: Genera el desgloce del HC segun el parte de cambio de turno
' Autor: Carmen Quintero -
' Ultima modificacion:
' --------------------------------------------------------------
Dim l_rsCT As New ADODB.Recordset
Dim l_rsHC As New ADODB.Recordset
Dim l_rsDC As New ADODB.Recordset

Dim l_inserto As Boolean

l_inserto = False

On Error GoTo ce
'Call SetearParametrosPolitica(Detalle, ok)
                
    StrSql = "SELECT * FROM gti_reldtur " & _
            " WHERE grtddesde >= " & ConvFecha(Fecha) & "  AND grtdhasta <= " & ConvFecha(Fecha) & _
            "  AND ternro = " & NroTer
    OpenRecordset StrSql, l_rsCT
        
    If depurar Then
        If Not l_rsCT.EOF Then
            If l_rsCT.RecordCount > 0 Then
                Flog.writeline Espacios(Tabulador * 2) & "  ==> Se encontró el parte de cambio de turno: " & l_rsCT!GCPNRO
            Else
                Flog.writeline Espacios(Tabulador * 2) & "  ==> No se encontraron partes de cambios de turno."
            End If
        Else
            Flog.writeline Espacios(Tabulador * 2) & "  ==> No se encontraron partes de cambios de turno."
        End If
    End If
        
        
    'Analizo todos los partes de cambio de turno del empleado
    Do While Not l_rsCT.EOF
        StrSql = "SELECT * FROM gti_horcumplido " & _
                " WHERE horfecgen = " & ConvFecha(Fecha) & "  AND ternro = " & NroTer
        OpenRecordset StrSql, l_rsHC
        
        If Not l_rsHC.EOF Then
            
            'busco en la tabla distribucion
            StrSql = "SELECT * FROM gti_dist_parte " & _
                    " WHERE gtrnro = " & l_rsCT!gtrnro & " AND masinro > 0"
            OpenRecordset StrSql, l_rsDC
            If Not l_rsDC.EOF Then
            
                l_inserto = True
                
                StrSql = "INSERT INTO gti_desgloce_hc (canthoras,fecha,manual,ternro,thnro,horas"
                
                If Not EsNulo(l_rsDC!tenro1) Then StrSql = StrSql & ",te1"
                If Not EsNulo(l_rsDC!estrnro1) Then StrSql = StrSql & ",estrnro1"
                If Not EsNulo(l_rsDC!tenro2) Then StrSql = StrSql & ",te2"
                If Not EsNulo(l_rsDC!estrnro2) Then StrSql = StrSql & ",estrnro2"
                If Not EsNulo(l_rsDC!tenro3) Then StrSql = StrSql & ",te3"
                If Not EsNulo(l_rsDC!estrnro3) Then StrSql = StrSql & ",estrnro3"
                If Not EsNulo(l_rsDC!tenro4) Then StrSql = StrSql & ",te4"
                If Not EsNulo(l_rsDC!estrnro4) Then StrSql = StrSql & ",estrnro4"
                If Not EsNulo(l_rsDC!tenro5) Then StrSql = StrSql & ",te5"
                If Not EsNulo(l_rsDC!estrnro5) Then StrSql = StrSql & ",estrnro5"
                StrSql = StrSql & ")"
                
                StrSql = StrSql & " VALUES (" & l_rsHC!horcant & _
                        "," & ConvFecha(l_rsHC!horfecgen) & _
                        "," & l_rsHC!hormanual & _
                        "," & l_rsHC!Ternro & _
                        "," & l_rsHC!thnro & ",'" & l_rsHC!Horas & "'"
    
                If Not EsNulo(l_rsDC!tenro1) Then StrSql = StrSql & "," & l_rsDC!tenro1
                If Not EsNulo(l_rsDC!estrnro1) Then StrSql = StrSql & "," & l_rsDC!estrnro1
                If Not EsNulo(l_rsDC!tenro2) Then StrSql = StrSql & "," & l_rsDC!tenro2
                If Not EsNulo(l_rsDC!estrnro2) Then StrSql = StrSql & "," & l_rsDC!estrnro2
                If Not EsNulo(l_rsDC!tenro3) Then StrSql = StrSql & "," & l_rsDC!tenro3
                If Not EsNulo(l_rsDC!estrnro3) Then StrSql = StrSql & "," & l_rsDC!estrnro3
                If Not EsNulo(l_rsDC!tenro4) Then StrSql = StrSql & "," & l_rsDC!tenro4
                If Not EsNulo(l_rsDC!estrnro4) Then StrSql = StrSql & "," & l_rsDC!estrnro4
                If Not EsNulo(l_rsDC!tenro5) Then StrSql = StrSql & "," & l_rsDC!tenro5
                If Not EsNulo(l_rsDC!estrnro5) Then StrSql = StrSql & "," & l_rsDC!estrnro5
                StrSql = StrSql & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                
            End If
            
        End If
        l_rsCT.MoveNext
    Loop
    
    If depurar Then
        If l_inserto Then
            Flog.writeline Espacios(Tabulador * 2) & "  ==> Se generó la distribucion Correctamente. "
        Else
            Flog.writeline Espacios(Tabulador * 2) & "  ==> No se inserto ninguna distribucion. "
        End If
    End If
    GoTo datosOK

datosOK:
    Exit Sub
ce:
    Flog.writeline " ------------------------------"
    Flog.writeline Espacios(Tabulador * 2) & "  ==> Error al generar la distribucion."
    Flog.writeline Err.Description
End Sub


Public Sub Politica2000ArchivoTXTV2(ByVal NroProceso As Long)
' --------------------------------------------------------------
' Descripcion: Exportación de Novedades de gti a texto (cargil).
' Autor: LED - 09/12/2013
' Ultima modificacion:
' --------------------------------------------------------------
'Compañía
'Trabajador: legajo del empleado
'Código de incidencia: columna concepto
'Tiempo: columna valor
'Importe: fijo 0
'Fecha de incidencia: tomar la fecha de finalización del período a exportar
' --------------------------------------------------------------
Dim nroModelo As Long
Dim Directorio As String
Dim Carpeta
Dim Nombre_Arch As String
Dim FS1
Dim ArchExp

Dim fecha_desde As Date
Dim fecha_hasta As Date
Dim Numero
Dim Parte_Entera
Dim Parte_Decimal

'Dim GLiq As String
'Dim Sucursal As String
Dim separador As String
Dim separadorDecimal As String
Dim Existe As Boolean
Dim Copia As Long
'Dim Proceso As Long
Dim strlinea As String

Dim rs_Modelo As New ADODB.Recordset
Dim rs_Nov As New ADODB.Recordset
Dim rs_Pro As New ADODB.Recordset
Dim rs As New ADODB.Recordset

    On Error GoTo ME_Local
    nroModelo = 391
    
    'Directorio de exportacion
    StrSql = "SELECT sis_dirsalidas FROM sistema WHERE sisnro = 1 "
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        Directorio = Trim(rs!sis_dirsalidas)
    End If
     
    StrSql = "SELECT * FROM modelo WHERE modnro = " & nroModelo
    OpenRecordset StrSql, rs_Modelo
    If Not rs_Modelo.EOF Then
        If Not IsNull(rs_Modelo!modarchdefault) Then
            Directorio = Directorio & Trim(rs_Modelo!modarchdefault)
        Else
            Flog.writeline Espacios(Tabulador * 1) & "El modelo no tiene configurada la carpeta desteino. El archivo será generado en el directorio default"
        End If
        separador = rs_Modelo!modseparador
        separadorDecimal = rs_Modelo!modsepdec
    Else
        Flog.writeline Espacios(Tabulador * 1) & "No se encontró el modelo " & nroModelo & ". El archivo será generado en el directorio default"
    End If
    Flog.writeline
    '------------------------------------------------------------------------------------------------------------------------
    
    
    'Creo el archivo txt
    StrSql = " SELECT gpadesde,gpahasta,Batch_Procacum.gpanro "
    StrSql = StrSql & " FROM batch_proceso "
    StrSql = StrSql & " INNER JOIN Batch_Procacum ON Batch_Procacum.bpronro = batch_proceso.bpronro "
    StrSql = StrSql & " INNER JOIN gti_Procacum ON Batch_Procacum.gpanro = gti_Procacum.gpanro "
    StrSql = StrSql & " WHERE batch_proceso.bpronro = " & NroProceso
    OpenRecordset StrSql, rs_Pro
    If rs_Pro.EOF Then
        Flog.writeline Espacios(Tabulador * 1) & "No se encontró ningun proceso para exportar"
        Exit Sub
    Else
        fecha_desde = rs_Pro!gpadesde
        fecha_hasta = rs_Pro!gpahasta
    End If
   

    Nombre_Arch = Directorio & "\export_nov_liq_" & Replace(Date, "/", "") & "_" & Replace(Time, ":", "") & ".csv"
    Existe = True
    Copia = 0
    Do While Existe
        If fs.FileExists(Nombre_Arch) Then
            Copia = Copia + 1
            Nombre_Arch = Directorio & "\export_nov_liq_" & Replace(Date, "/", "") & "_" & Replace(Time, ":", "") & "-" & Copia & ".csv"
        Else
            Existe = False
        End If
    Loop
    Flog.writeline Espacios(Tabulador * 1) & "Se crea el archivo: " & Nombre_Arch
    
    Set fs = CreateObject("Scripting.FileSystemObject")
    On Error Resume Next
    Set ArchExp = fs.CreateTextFile(Nombre_Arch, True)
    If Err.Number <> 0 Then
        Flog.writeline Espacios(Tabulador * 1) & "La carpeta Destino no existe. Se creará."
        
        Err.Number = 0
        Set FS1 = CreateObject("Scripting.FileSystemObject")
        Set Carpeta = FS1.CreateFolder(Directorio)
        Set ArchExp = fs.CreateTextFile(Nombre_Arch, True)
        If Err.Number <> 0 Then
            Flog.writeline Espacios(Tabulador * 1) & "No se pudo crear el archivo"
            Flog.writeline Espacios(Tabulador * 1) & Err.Description
            Exit Sub
        End If
    End If
    'Exporto los datos
    On Error GoTo ME_Local
    Flog.writeline
        
    StrSql = " SELECT gpadesde,gpahasta,Batch_Procacum.gpanro,batch_proceso.bpronro, gpadesabr, batch_empleado.ternro "
    StrSql = StrSql & " FROM batch_proceso "
    StrSql = StrSql & " INNER JOIN Batch_Procacum ON Batch_Procacum.bpronro = batch_proceso.bpronro "
    StrSql = StrSql & " INNER JOIN gti_Procacum ON Batch_Procacum.gpanro = gti_Procacum.gpanro "
    StrSql = StrSql & " INNER JOIN batch_empleado ON batch_empleado.bpronro = batch_proceso.bpronro "
    StrSql = StrSql & " WHERE batch_proceso.bpronro = " & NroProceso
    OpenRecordset StrSql, rs_Pro
    If rs_Pro.EOF Then
        Flog.writeline Espacios(Tabulador * 1) & "No se encontró ningun proceso para exportar"
    End If
    Do While Not rs_Pro.EOF
   
        'Fechas del proceso
        fecha_desde = rs_Pro!gpadesde
        fecha_hasta = rs_Pro!gpahasta
   
        StrSql = " SELECT concepto.ConcCod,concepto.tconnro,concepto.concnro,empleado.ternro,empleado.empleg,gti_acunov.acnovvalor,gti_acunov.gpanro "
        StrSql = StrSql & " ,gti_acunov.acnovfecaprob, gti_acunov.tpanro, gti_per.pgtihasta "
        StrSql = StrSql & " FROM gti_procacum"
        StrSql = StrSql & " INNER JOIN gti_acunov ON gti_acunov.gpanro = gti_procacum.gpanro "
        StrSql = StrSql & " INNER JOIN gti_per ON gti_per.pgtinro = gti_Procacum.pgtinro "
        StrSql = StrSql & " INNER JOIN empleado ON empleado.ternro = gti_acunov.ternro "
        StrSql = StrSql & " INNER JOIN Concepto ON Concepto.concnro = gti_acunov.concnro"
        StrSql = StrSql & " WHERE (gti_acunov.gpanro = " & rs_Pro!gpanro & " AND gti_acunov.ternro = " & rs_Pro!Ternro & ")"
        StrSql = StrSql & " ORDER BY empleg, concepto.conccod"
        OpenRecordset StrSql, rs_Nov
        If rs_Nov.EOF Then
            Flog.writeline Espacios(Tabulador * 2) & "No se encontraron novedades para el proceso." & rs_Pro!gpanro
            Flog.writeline Espacios(Tabulador * 2) & "SQL: " & StrSql
        End If
        Do While Not rs_Nov.EOF
            
            'compania
            strlinea = "CARG" & separador
            'Call imprimirTextoConCeros("1", ArchExp, 6, False)
            
            'Legajo
            strlinea = strlinea & rs_Nov!empleg & separador
            
            'Codigo de incidencia
            strlinea = strlinea & rs_Nov!conccod & separador
            
            'valor
            Numero = Split(CStr(rs_Nov!acnovvalor), ".")
            Parte_Entera = Numero(0)
            If UBound(Numero) > 0 Then
                'Hay parte decimal
                Parte_Decimal = Numero(1)
                If Len(Parte_Decimal) < 2 Then
                    Parte_Decimal = Parte_Decimal & "0"
                End If
            Else
                Parte_Decimal = "00"
            End If
            
            strlinea = strlinea & Left(Parte_Entera & separadorDecimal & Parte_Decimal, 15) & separador
            
            'importe
            strlinea = strlinea & "0" & separador
            
            'Fecha Hasta
            strlinea = strlinea & rs_Nov!pgtihasta
                
            ArchExp.writeline strlinea
            
            rs_Nov.MoveNext
        Loop

        rs_Pro.MoveNext
    Loop

    ArchExp.Close
    Flog.writeline Espacios(Tabulador * 1) & "Se Terminaron de Procesar los datos"

Exit Sub

ME_Local:
    Flog.writeline " ------------------------------"
    Flog.writeline Err.Description
    Flog.writeline
    Flog.writeline "Ultimo SQL: " & StrSql
    Flog.writeline

    
End Sub

Public Sub Politica2000ArchivoCTM(ByVal NroProceso As Long)
' --------------------------------------------------------------
' Descripcion: Exportación de Novedades de gti a CSV (CTM).
' Autor      : Stremel Sebastian - CAS-28352 - Salto Grande - GTI  Pasaje de Novedades
' Fecha      : 06/04/2015
' Ultima modificacion:
' --------------------------------------------------------------
'Año : formato AAAA
'mes : formato MM
'Concepto sueldo
'Legajo
'cantidad horas
'Ambiente contable
'Centro de costo
' correlativo secuencial
' --------------------------------------------------------------
Dim nroModelo As Long
Dim Directorio As String
Dim Carpeta
Dim Nombre_Arch As String
Dim FS1
Dim ArchExp

Dim fecha_desde As Date
Dim fecha_hasta As Date
Dim Numero
Dim Parte_Entera
Dim Parte_Decimal

Dim separador As String
Dim separadorDecimal As String
Dim Existe As Boolean
Dim Copia As Long

Dim strlinea As String
Dim ambientecontable As Double
Dim centrocosto As Double

Dim estrAmbContable As String
Dim estrCentroCosto As String
Dim nroLinea As Integer

Dim teAmbContable As Integer
Dim teCentroCosto As Integer

Dim rs_Modelo As New ADODB.Recordset
Dim rs_Nov As New ADODB.Recordset
Dim rs_Pro As New ADODB.Recordset
Dim rs As New ADODB.Recordset
Dim rs_Estructura As New ADODB.Recordset

Dim rs_doc As New ADODB.Recordset
Dim paisnro As Integer
Dim nroDoc As String

    On Error GoTo ME_Local
    nroModelo = 399
    nroLinea = 0
    'inicializo las variables del confrep
    teAmbContable = 0
    teCentroCosto = 0
    
    'Directorio de exportacion
    StrSql = "SELECT sis_dirsalidas FROM sistema WHERE sisnro = 1 "
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        Directorio = Trim(rs!sis_dirsalidas)
    End If
     
    StrSql = "SELECT * FROM modelo WHERE modnro = " & nroModelo
    OpenRecordset StrSql, rs_Modelo
    If Not rs_Modelo.EOF Then
        If Not IsNull(rs_Modelo!modarchdefault) Then
            Directorio = Directorio & Trim(rs_Modelo!modarchdefault)
        Else
            Flog.writeline Espacios(Tabulador * 1) & "El modelo no tiene configurada la carpeta destino. El archivo será generado en el directorio default"
        End If
        separador = rs_Modelo!modseparador
        separadorDecimal = rs_Modelo!modsepdec
    Else
        Flog.writeline Espacios(Tabulador * 1) & "No se encontró el modelo " & nroModelo & ". El archivo será generado en el directorio default"
    End If
    Flog.writeline
    '------------------------------------------------------------------------------------------------------------------------
    
    '---------------------LEVANTO EL CONFREP---------------------------------
    StrSql = " SELECT * FROM confrep "
    StrSql = StrSql & " WHERE repnro=477"
    OpenRecordset StrSql, rs_Estructura
    If Not rs_Estructura.EOF Then
        Do While Not rs_Estructura.EOF
            Select Case rs_Estructura!confnrocol
                Case 1
                    teAmbContable = rs_Estructura!confval
                Case 2
                    teCentroCosto = rs_Estructura!confval
            End Select
        rs_Estructura.MoveNext
        Loop
    Else
        Flog.writeline "El confrep no esta configurado"
    End If
    rs_Estructura.Close
    '-----------------------HASTA ACA----------------------------------------
    
    
    'Creo el archivo csv
    StrSql = " SELECT gpadesde,gpahasta,Batch_Procacum.gpanro "
    StrSql = StrSql & " FROM batch_proceso "
    StrSql = StrSql & " INNER JOIN Batch_Procacum ON Batch_Procacum.bpronro = batch_proceso.bpronro "
    StrSql = StrSql & " INNER JOIN gti_Procacum ON Batch_Procacum.gpanro = gti_Procacum.gpanro "
    StrSql = StrSql & " WHERE batch_proceso.bpronro = " & NroProceso
    OpenRecordset StrSql, rs_Pro
    If rs_Pro.EOF Then
        Flog.writeline Espacios(Tabulador * 1) & "No se encontró ningun proceso para exportar"
        Exit Sub
    Else
        fecha_desde = rs_Pro!gpadesde
        fecha_hasta = rs_Pro!gpahasta
    End If
   

    Nombre_Arch = Directorio & "\CTM_nov_liq_" & Replace(Date, "/", "") & "_" & Replace(Time, ":", "") & ".csv"
    Existe = True
    Copia = 0
    Do While Existe
        If fs.FileExists(Nombre_Arch) Then
            Copia = Copia + 1
            Nombre_Arch = Directorio & "\CTM_nov_liq_" & Replace(Date, "/", "") & "_" & Replace(Time, ":", "") & "-" & Copia & ".csv"
        Else
            Existe = False
        End If
    Loop
    Flog.writeline Espacios(Tabulador * 1) & "Se crea el archivo: " & Nombre_Arch
    
    Set fs = CreateObject("Scripting.FileSystemObject")
    On Error Resume Next
    Set ArchExp = fs.CreateTextFile(Nombre_Arch, True)
    If Err.Number <> 0 Then
        Flog.writeline Espacios(Tabulador * 1) & "La carpeta Destino no existe. Se creará."
        
        Err.Number = 0
        Set FS1 = CreateObject("Scripting.FileSystemObject")
        Set Carpeta = FS1.CreateFolder(Directorio)
        Set ArchExp = fs.CreateTextFile(Nombre_Arch, True)
        If Err.Number <> 0 Then
            Flog.writeline Espacios(Tabulador * 1) & "No se pudo crear el archivo"
            Flog.writeline Espacios(Tabulador * 1) & Err.Description
            Exit Sub
        End If
    End If
    'Exporto los datos
    On Error GoTo ME_Local
    Flog.writeline
        
    StrSql = " SELECT gpadesde,gpahasta,Batch_Procacum.gpanro,batch_proceso.bpronro, gpadesabr, batch_empleado.ternro "
    StrSql = StrSql & " FROM batch_proceso "
    StrSql = StrSql & " INNER JOIN Batch_Procacum ON Batch_Procacum.bpronro = batch_proceso.bpronro "
    StrSql = StrSql & " INNER JOIN gti_Procacum ON Batch_Procacum.gpanro = gti_Procacum.gpanro "
    StrSql = StrSql & " INNER JOIN batch_empleado ON batch_empleado.bpronro = batch_proceso.bpronro "
    StrSql = StrSql & " WHERE batch_proceso.bpronro = " & NroProceso
    OpenRecordset StrSql, rs_Pro
    If rs_Pro.EOF Then
        Flog.writeline Espacios(Tabulador * 1) & "No se encontró ningun proceso para exportar"
    End If
    Do While Not rs_Pro.EOF
   
        'Fechas del proceso
        fecha_desde = rs_Pro!gpadesde
        fecha_hasta = rs_Pro!gpahasta
   
        StrSql = " SELECT concepto.ConcCod,concepto.tconnro,concepto.concnro,empleado.ternro,empleado.empleg,gti_acunov.acnovvalor,gti_acunov.gpanro "
        StrSql = StrSql & " ,gti_acunov.acnovfecaprob, gti_acunov.tpanro, gti_per.pgtihasta, tercero.docpais "
        StrSql = StrSql & " FROM gti_procacum"
        StrSql = StrSql & " INNER JOIN gti_acunov ON gti_acunov.gpanro = gti_procacum.gpanro "
        StrSql = StrSql & " INNER JOIN gti_per ON gti_per.pgtinro = gti_Procacum.pgtinro "
        StrSql = StrSql & " INNER JOIN empleado ON empleado.ternro = gti_acunov.ternro "
        StrSql = StrSql & " INNER JOIN tercero ON tercero.ternro = empleado.ternro "
        StrSql = StrSql & " INNER JOIN Concepto ON Concepto.concnro = gti_acunov.concnro"
        StrSql = StrSql & " WHERE (gti_acunov.gpanro = " & rs_Pro!gpanro & " AND gti_acunov.ternro = " & rs_Pro!Ternro & ")"
        StrSql = StrSql & " ORDER BY empleg, concepto.conccod"
        OpenRecordset StrSql, rs_Nov
        If rs_Nov.EOF Then
            Flog.writeline Espacios(Tabulador * 2) & "No se encontraron novedades para el proceso." & rs_Pro!gpanro
            Flog.writeline Espacios(Tabulador * 2) & "SQL: " & StrSql
        End If
        Do While Not rs_Nov.EOF
            'año
            strlinea = Year(fecha_hasta) & separador
            
            'mes
            strlinea = strlinea & Right("00" & Month(fecha_hasta), 2) & separador
            
            'Concepto
            strlinea = strlinea & rs_Nov!conccod & separador
            
            'Legajo
            strlinea = strlinea & rs_Nov!empleg & separador
            
            'Se reemplaza legajo por documento principal
            If EsNulo(rs_Nov!docpais) Then
                paisnro = 0
            Else
                paisnro = rs_Nov!docpais
            End If
            
            StrSql = " SELECT TOP(1) nrodoc FROM ter_doc t "
            StrSql = StrSql & " INNER JOIN tipodocu_pais p ON p.tidcod = t.tidnro and p.paisnro =" & paisnro
            StrSql = StrSql & " AND T.Ternro = " & rs_Pro!Ternro
            StrSql = StrSql & " ORDER BY t.tidnro ASC "
            OpenRecordset StrSql, rs_doc
            If Not rs_doc.EOF Then
                If EsNulo(rs_doc!nroDoc) Then
                    nroDoc = ""
                Else
                    nroDoc = rs_doc!nroDoc
                End If
            Else
                nroDoc = ""
            End If
            
            
            strlinea = strlinea & rs_doc!nroDoc & separador
            rs_doc.Close
            'Cantidad horas
            Numero = Split(CStr(rs_Nov!acnovvalor), ".")
            Parte_Entera = Numero(0)
            If UBound(Numero) > 0 Then
                'Hay parte decimal
                Parte_Decimal = Numero(1)
                If Len(Parte_Decimal) < 2 Then
                    Parte_Decimal = Parte_Decimal & "0"
                End If
            Else
                Parte_Decimal = "00"
            End If
            
            strlinea = strlinea & Left(Parte_Entera & separadorDecimal & Parte_Decimal, 15) & separador
           
           ' Estructura  ambiente contable
            StrSql = " SELECT his_estructura.estrnro "
            StrSql = StrSql & " From Empleado "
            StrSql = StrSql & " INNER JOIN his_estructura ON empleado.ternro = his_estructura.ternro AND his_estructura.tenro = " & teAmbContable
            StrSql = StrSql & " AND ("
            StrSql = StrSql & " (his_estructura.htetdesde <= " & ConvFecha(fecha_desde) & " AND (his_estructura.htethasta is null or his_estructura.htethasta >= " & ConvFecha(fecha_hasta) & ""
            StrSql = StrSql & " or his_estructura.htethasta >= " & ConvFecha(fecha_desde) & ")) OR"
            StrSql = StrSql & " (his_estructura.htetdesde >= " & ConvFecha(fecha_desde) & " AND (his_estructura.htetdesde <= " & ConvFecha(fecha_hasta) & "))"
            StrSql = StrSql & " )"
            StrSql = StrSql & " Where Empleado.Ternro =" & rs_Nov!Ternro
            OpenRecordset StrSql, rs_Estructura
            If Not rs_Estructura.EOF Then
                estrAmbContable = rs_Estructura!estrnro
            Else
                estrAmbContable = ""
                Flog.writeline "No se encontro la estructura ambiente contable para el legajo: " & rs_Nov!empleg
            End If
            rs_Estructura.Close
            strlinea = strlinea & estrAmbContable & separador
           
           
           ' Estructura centro de costo
            StrSql = " SELECT his_estructura.estrnro "
            StrSql = StrSql & " From Empleado "
            StrSql = StrSql & " INNER JOIN his_estructura ON empleado.ternro = his_estructura.ternro AND his_estructura.tenro = " & teCentroCosto
            StrSql = StrSql & " AND ("
            StrSql = StrSql & " (his_estructura.htetdesde <= " & ConvFecha(fecha_desde) & " AND (his_estructura.htethasta is null or his_estructura.htethasta >= " & ConvFecha(fecha_hasta) & ""
            StrSql = StrSql & " or his_estructura.htethasta >= " & ConvFecha(fecha_desde) & ")) OR"
            StrSql = StrSql & " (his_estructura.htetdesde >= " & ConvFecha(fecha_desde) & " AND (his_estructura.htetdesde <= " & ConvFecha(fecha_hasta) & "))"
            StrSql = StrSql & " )"
            StrSql = StrSql & " Where Empleado.Ternro =" & rs_Nov!Ternro
            OpenRecordset StrSql, rs_Estructura
            If Not rs_Estructura.EOF Then
                estrCentroCosto = rs_Estructura!estrnro
            Else
                estrCentroCosto = ""
                Flog.writeline "No se encontro la estructura centro de costo para el legajo: " & rs_Nov!empleg
            End If
            rs_Estructura.Close
            strlinea = strlinea & estrCentroCosto & separador
                
            'Nro de linea
            nroLinea = nroLinea + 1
            strlinea = strlinea & nroLinea
            
            'ESCRIBO LA LINEA
            ArchExp.writeline strlinea
            
            rs_Nov.MoveNext
        Loop

        rs_Pro.MoveNext
    Loop

    ArchExp.Close
    Flog.writeline Espacios(Tabulador * 1) & "Se Terminaron de Procesar los datos"

Exit Sub

ME_Local:
    Flog.writeline " ------------------------------"
    Flog.writeline Err.Description
    Flog.writeline
    Flog.writeline "Ultimo SQL: " & StrSql
    Flog.writeline

    
End Sub


Function autofirma(ByVal bpronro As String, ByVal cystipnro As String)
Dim salida As Boolean
Dim rs As New ADODB.Recordset
Dim rs2 As New ADODB.Recordset
Dim procesos As String
Dim empleados As String
Dim conceptos As String

    salida = False
    
    StrSql = " SELECT cyslfirmantes_det.cyslfirmnro, cyscomp.cyscomtipnro FROM cystipo " & _
             " INNER JOIN cyslfirmantes_det ON cystipo.cyslfirmnro = cyslfirmantes_det.cyslfirmnro and tipoorigen = 5 " & _
             " LEFT JOIN cyscomp ON cyscomp.cystipnro = cystipo.cystipnro " & _
             " WHERE cystipo.cystipnro = " & cystipnro
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        'recupero los empleados
        StrSql = " SELECT ternro FROM batch_empleado WHERE bpronro = " & NroProceso
        OpenRecordset StrSql, rs2
        empleados = "0"
        OpenRecordset StrSql, rs2
        Do While Not rs2.EOF
            empleados = empleados & "," & rs2!Ternro
            rs2.MoveNext
        Loop
        
        'recupero todos los procesos
        StrSql = " SELECT gpanro FROM Batch_Procacum WHERE bpronro = " & NroProceso
        OpenRecordset StrSql, rs2
        procesos = "0"
        Do While Not rs2.EOF
            procesos = procesos & "," & rs2!gpanro
            rs2.MoveNext
        Loop
        
        'Busco los concepto de los procesos cargadas como novedades
        StrSql = " SELECT conccod FROM gti_procacum " & _
                 " INNER JOIN gti_acunov ON gti_acunov.gpanro = gti_procacum.gpanro " & _
                 " INNER JOIN empleado ON empleado.ternro = gti_acunov.ternro " & _
                 " INNER JOIN Concepto ON Concepto.concnro = gti_acunov.concnro " & _
                 " WHERE gti_acunov.gpanro in (" & procesos & ") AND empleado.ternro in (" & empleados & ") " & _
                 " ORDER BY concepto.conccod "
        OpenRecordset StrSql, rs2
        conceptos = "'0'"
        Do While Not rs2.EOF
            conceptos = conceptos & ",'" & rs2!conccod & "'"
            rs2.MoveNext
        Loop

        'controlo si al menos un concepto que no es de firma automatica
        StrSql = " SELECT distinct cyscomp.cyscomnro FROM cyscomp " & _
                 " INNER JOIN cyscompdet ON cyscompdet.cyscomnro = cyscomp.cyscomnro AND cyscompdet.cyscomdetdesc in (" & conceptos & ") " & _
                 " INNER JOIN cyslfirmantes_det on cyslfirmantes_det.cyslfirmnro = cyscompdet.cyslfirmnro and cyslfirmantes_det.tipoorigen <> 5 " & _
                 " WHERE cystipnro = " & cystipnro
        OpenRecordset StrSql, rs2
        'si no hay resultados quiere decir que todos los conceptos son autofirmantes
        If rs2.EOF Then
            salida = True
        End If
    End If
    
    autofirma = salida

    If rs.State = adStateOpen Then rs.Close
    If rs2.State = adStateOpen Then rs2.Close
End Function

Function checkFirmaAutomatica(ByVal conccod As String, ByVal cystipnro As String)
Dim salida As Boolean
Dim rs As New ADODB.Recordset
    salida = False
    StrSql = " SELECT distinct cyscomp.cyscomnro FROM cyscomp " & _
             " INNER JOIN cyscompdet ON cyscompdet.cyscomnro = cyscomp.cyscomnro AND cyscompdet.cyscomdetdesc = " & conccod & _
             " INNER JOIN cyslfirmantes_det on cyslfirmantes_det.cyslfirmnro = cyscompdet.cyslfirmnro and cyslfirmantes_det.tipoorigen = 5 " & _
             " WHERE cystipnro = " & cystipnro
    OpenRecordset StrSql, rs
   
    If Not rs.EOF Then
        salida = True
    End If
    checkFirmaAutomatica = salida
    If rs.State = adStateOpen Then rs.Close

End Function




Public Sub Politica2000StandarR4(ByVal NroProceso As Long, ByVal TipoMotivo As Long)
' --------------------------------------------------------------
' Descripcion: Exportación de Novedades de Liq a RHProX2 (pisa novedades si ya existen).
' Fecha: 30/09/2014
' Autor: FGZ
' Ultima modificacion:
' --------------------------------------------------------------
Dim FechaDesde As Date
Dim FechaHasta As Date
Dim objrs_pro As New ADODB.Recordset
Dim objRs As New ADODB.Recordset
Dim objCon As New ADODB.Recordset
Dim rs As New ADODB.Recordset
Dim Gnovnro As Long
Dim inserto As Boolean
Dim Operacion As Long
Dim Motivo As String

Dim Cant_Procesos As Long
Dim Progreso As Single
Dim IncPorc As Single
Dim Actualiza_Por_Proceso As Boolean
Dim AccionNovedad As Long
Dim finFirmaAuto As Boolean

    If TipoMotivo = 0 Then
        TipoMotivo = 4  'GTI. Pasaje de Novedades
    End If

    StrSql = " SELECT gpadesde,gpahasta,Batch_Procacum.gpanro,batch_proceso.bpronro, gti_Procacum.gpadesabr " & _
             " From batch_proceso " & _
             " INNER JOIN Batch_Procacum ON Batch_Procacum.bpronro = batch_proceso.bpronro " & _
             " INNER JOIN gti_Procacum ON Batch_Procacum.gpanro = gti_Procacum.gpanro " & _
             " Where batch_proceso.bpronro = " & NroProceso
    OpenRecordset StrSql, objrs_pro
    If Not objrs_pro.EOF Then
        'FechaDesde = objrs_pro!gpadesde
        FechaDesde = objrs_pro!gpahasta
        FechaHasta = objrs_pro!gpahasta
        
        'cystipnro = 5
        'If FIN_Firma_NovLiq Then
        '    cysfirusuario = User_Proceso
        '    cysfirautoriza = User_Proceso
        '    cysfirdestino = Firma_User_Destino
        '    cysfirfin = -1
        '    cysfiryaaut = -1
        '    cysfirrecha = 0
        'Else
        '    cysfirusuario = User_Proceso
        '    cysfirautoriza = User_Proceso
        '    cysfirdestino = Firma_User_Destino
        '    cysfirfin = 0
        '    cysfiryaaut = 0
        '    cysfirrecha = 0
        'End If
        
        cystipnro = 5
        finFirmaAuto = False
        finFirmaAuto = autofirma(NroProceso, cystipnro)
        If FIN_Firma_NovLiq Then
            cysfirusuario = User_Proceso
            cysfirautoriza = User_Proceso
            'si la firma es automatica no hay destino
            If Not finFirmaAuto Then
                cysfirdestino = Firma_User_Destino
            Else
                cysfirdestino = ""
            End If
            cysfirfin = -1
            cysfiryaaut = -1
            cysfirrecha = 0
        Else
            If finFirmaAuto Then
                cysfirusuario = User_Proceso
                cysfirautoriza = User_Proceso
                'si la firma es automatica no hay destino
                cysfirdestino = ""
                cysfirfin = -1
                cysfiryaaut = -1
                cysfirrecha = 0
            Else
                cysfirusuario = User_Proceso
                cysfirautoriza = User_Proceso
                cysfirdestino = Firma_User_Destino
                cysfirfin = 0
                cysfiryaaut = 0
                cysfirrecha = 0
            End If
        End If
    End If
    
    'Seteo los valores de progreso
    Cant_Procesos = objrs_pro.RecordCount 'Cantidad de procesos
    If Cant_Procesos = 1 Then
        Actualiza_Por_Proceso = False
    Else
        Actualiza_Por_Proceso = True
    End If
    If Cant_Procesos = 0 Then Cant_Procesos = 1
    
    If Actualiza_Por_Proceso Then
        IncPorc = (95 / Cant_Procesos)
    End If
    Progreso = 0
    
    MyBeginTrans
    Do While Not objrs_pro.EOF
   
    StrSql = " SELECT concepto.ConcCod,concepto.tconnro,concepto.concnro,empleado.ternro,empleado.empleg,gti_acunov.acnovvalor,gti_acunov.gpanro,gti_acunov.acnovfecaprob, gti_acunov.tpanro " & _
         " FROM gti_procacum " & _
             " INNER JOIN gti_acunov ON gti_acunov.gpanro = gti_procacum.gpanro " & _
             " INNER JOIN empleado ON empleado.ternro = gti_acunov.ternro " & _
             " INNER JOIN Concepto ON Concepto.concnro = gti_acunov.concnro " & _
             " WHERE (gti_acunov.gpanro = " & objrs_pro!gpanro & " )" & _
             " ORDER BY concepto.conccod "
    OpenRecordset StrSql, objRs
   
   'Redefinicion del incremento del progreso
    If Not Actualiza_Por_Proceso Then
        Cant_Procesos = objRs.RecordCount
        If Cant_Procesos = 0 Then Cant_Procesos = 1
        IncPorc = (95 / Cant_Procesos)
    End If
   
    Do While Not objRs.EOF
    
'        StrSql = " SELECT * FROM novemp WHERE novemp.empleado = " & objRs!Ternro & " AND "
'        StrSql = StrSql & " novemp.concnro = " & objRs!concnro & " AND novemp.tpanro = " & objRs!Tpanro
'        OpenRecordset StrSql, objCon
'
'        If objCon.EOF Then
'            StrSql = " INSERT INTO novemp (concnro,tpanro, empleado, nevalor, nevigencia)"
'            StrSql = StrSql & " VALUES (" & objRs!concnro & "," & objRs!Tpanro & "," & objRs!Ternro & ","
'            StrSql = StrSql & objRs!acnovvalor & ",0)"
'            objConn.Execute StrSql, , adExecuteNoRecords
'            Inserto = True
'            gnovnro = getLastIdentity(objConn, "novemp")
'        Else
'            StrSql = " UPDATE  novemp "
'            StrSql = StrSql & " SET nevalor = " & objRs!acnovvalor
'            StrSql = StrSql & " WHERE novemp.empleado = " & objRs!Ternro & " AND "
'            StrSql = StrSql & " novemp.concnro = " & objRs!concnro & " AND novemp.tpanro = " & objRs!Tpanro
'            objConn.Execute StrSql, , adExecuteNoRecords
'            Inserto = False
'            gnovnro = objCon!nenro
'        End If
        
        'Operacion: 0 - Error de validacion, 1 - Insertó, 2 - Actualizó
        'AccionNovedad = -1:Pisa Novedades; 0: Mantiene las Novedades; 1: Suma Las novedades
        TipoMotivo = 1
        Motivo = "GTI"
        AccionNovedad = -1
        'TipoMotivo = 4  'GTI. Pasaje de Novedades
        Motivo = objrs_pro!gpanro & " - " & objrs_pro!gpadesabr
        'InsertarNovedadconVigencia(ByVal Tercero As Long, ByVal Concnro As Long, ByVal Tpanro As Long, ByVal FechaDesde As Date, ByVal FechaHasta As Date,Byval Monto as double, ByVal AccionNovedad As Long, ByRef Operacion As Long, ByRef Gnovnro As Long)
        Call InsertarNovedadconVigencia(objRs!Ternro, objRs!Concnro, objRs!Tpanro, FechaDesde, FechaHasta, objRs!acnovvalor, TipoMotivo, Motivo, AccionNovedad, Operacion, Gnovnro)
        
            If Gnovnro <> 0 Then 'actualizo la firma solo si insertó o actualizó la novedad
                finFirmaAuto = checkFirmaAutomatica(objRs!conccod, cystipnro)
                If Firma_NovLiq Then
                    If finFirmaAuto Then
                        'Borro la firma solo si la novedad ya existia
                        If Operacion = 2 Then
                            StrSql = "DELETE cysfirmas WHERE cystipnro = " & cystipnro
                            StrSql = StrSql & " AND cysfircodext = " & Gnovnro
                            'StrSql = StrSql & " AND cysfirsecuencia = 1"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If

                        StrSql = "INSERT INTO cysfirmas ("
                        StrSql = StrSql & "cysfirautoriza,cysfirfecaut,cysfirmhora,cysfirusuario,"
                        StrSql = StrSql & "cysfirdestino,cystipnro,cystipnroft,cysfircodext,cysfirsecuencia,cysfirdes"
                        StrSql = StrSql & ",cysfirfin,cysfiryaaut,cysfirrecha"
                        StrSql = StrSql & ")"
                        StrSql = StrSql & "VALUES("
                        StrSql = StrSql & "'" & cysfirautoriza & "'," & ConvFecha(Date) & ",'" & FormatDateTime(Now(), vbShortTime) & "'"
                        'StrSql = StrSql & ",'" & cysfirusuario & "','" & cysfirdestino & "'," & cystipnro & "," & gnovnro & ",1,'Pasaje de Novedad desde GTI'"
                        StrSql = StrSql & ",'" & cysfirusuario & "',''," & cystipnro & "," & cystipnro & "," & Gnovnro & ",1,'Pasaje de Novedad desde GTI'"
                        StrSql = StrSql & ",-1,-1," & cysfirrecha
                        StrSql = StrSql & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        If FIN_Firma_NovLiq Then
                        
                            'Borro la firma solo si la novedad ya existia
                            If Operacion = 2 Then
                                StrSql = "DELETE cysfirmas WHERE cystipnro = " & cystipnro
                                StrSql = StrSql & " AND cysfircodext = " & Gnovnro
                                'StrSql = StrSql & " AND cysfirsecuencia = 1"
                                objConn.Execute StrSql, , adExecuteNoRecords
                            End If
                        
                            StrSql = "INSERT INTO cysfirmas ("
                            StrSql = StrSql & "cysfirautoriza,cysfirfecaut,cysfirmhora,cysfirusuario,"
                            StrSql = StrSql & "cysfirdestino,cystipnro,cystipnroft,cysfircodext,cysfirsecuencia,cysfirdes"
                            StrSql = StrSql & ",cysfirfin,cysfiryaaut,cysfirrecha"
                            StrSql = StrSql & ")"
                            StrSql = StrSql & "VALUES("
                            StrSql = StrSql & "'" & cysfirautoriza & "'," & ConvFecha(Date) & ",'" & FormatDateTime(Now(), vbShortTime) & "'"
                            StrSql = StrSql & ",'" & cysfirusuario & "','" & cysfirdestino & "'," & cystipnro & "," & cystipnro & "," & Gnovnro & ",1,'Pasaje de Novedad desde GTI'"
                            StrSql = StrSql & ",-1,-1," & cysfirrecha
                            StrSql = StrSql & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        Else
                            If Not EsNulo(Firma_User_Destino) Then
                            
                                'Borro la firma solo si la novedad ya existia
                                If Operacion = 2 Then
                                    StrSql = "DELETE cysfirmas WHERE cystipnro = " & cystipnro
                                    StrSql = StrSql & " AND cysfircodext = " & Gnovnro
                                    'StrSql = StrSql & " AND cysfirsecuencia = 1"
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                End If
                            
                                'Inserto firma autorizado pendiente
                                StrSql = "INSERT INTO cysfirmas ("
                                StrSql = StrSql & "cysfirautoriza,cysfirfecaut,cysfirmhora,cysfirusuario,"
                                StrSql = StrSql & "cysfirdestino,cystipnro,cystipnroft,cysfircodext,cysfirsecuencia,cysfirdes"
                                StrSql = StrSql & ",cysfirfin,cysfiryaaut,cysfirrecha"
                                StrSql = StrSql & ")"
                                StrSql = StrSql & "VALUES("
                                StrSql = StrSql & "'" & cysfirautoriza & "'," & ConvFecha(Date) & ",'" & FormatDateTime(Now(), vbShortTime) & "'"
                                StrSql = StrSql & ",'" & cysfirusuario & "','" & cysfirdestino & "'," & cystipnro & "," & cystipnro & "," & Gnovnro & ",1,'Pasaje de Novedad desde GTI'"
                                StrSql = StrSql & "," & cysfirfin & "," & cysfiryaaut & "," & cysfirrecha
                                StrSql = StrSql & ")"
                                objConn.Execute StrSql, , adExecuteNoRecords
                            Else
                                'Error no se puede insertar
                                Flog.writeline Espacios(Tabulador * 2) & "No se puede pasar la novedad, el usuario destino de firma es nulo. "
                            End If
                        End If
                    End If
                End If
            End If
        
        
        'Progreso
        If Not Actualiza_Por_Proceso Then
            Progreso = Progreso + IncPorc
            If depurar Then
                Flog.writeline Espacios(Tabulador * 2) & "---> Actualizo progreso del proceso " & Now
            End If
            StrSql = "UPDATE batch_proceso SET bprcprogreso = " & Progreso & " WHERE bpronro = " & NroProceso
            objConnProgreso.Execute StrSql, , adExecuteNoRecords
        End If
        
        objRs.MoveNext
    Loop
    
    If Actualiza_Por_Proceso Then
        Progreso = Progreso + IncPorc
        If depurar Then
            Flog.writeline Espacios(Tabulador * 2) & "---> Actualizo progreso del proceso " & Now
        End If
        StrSql = "UPDATE batch_proceso SET bprcprogreso = " & Progreso & " WHERE bpronro = " & NroProceso
        objConnProgreso.Execute StrSql, , adExecuteNoRecords
    End If
    
    objrs_pro.MoveNext
Loop

Final:
    MyCommitTrans
    If objrs_pro.State = adStateOpen Then objrs_pro.Close
    If objCon.State = adStateOpen Then objCon.Close
    If objRs.State = adStateOpen Then objRs.Close
    If rs.State = adStateOpen Then rs.Close
        
    Set objrs_pro = Nothing
    Set objRs = Nothing
    Set objCon = Nothing
    Set rs = Nothing
End Sub





Public Sub InsertarNovedadconVigencia(ByVal Tercero As Long, ByVal Concnro As Long, ByVal Tpanro As Long, ByVal FechaDesde As Date, ByVal FechaHasta As Date, ByVal Monto As Double, ByVal TipoMotivo As Long, ByVal Motivo As String, ByVal AccionNovedad As Long, ByRef Operacion As Long, ByRef Gnovnro As Long)
' --------------------------------------------------------------
' Descripcion: inserta las novedades de empleado.
' Autor: FGZ - 30/09/2014
' Ultima modificacion:
' --------------------------------------------------------------
Dim ExisteNovedad As Boolean
Dim rs_NovEmp As New ADODB.Recordset
Dim rs_NovEmp2 As New ADODB.Recordset

Dim InsertoNovedad As Boolean
Dim StrSqlAux
Dim FechaDesdeAux As Date
Dim FechaHastaAux As Date
Dim EsRetroactivo As Boolean
Dim PeriodoDesde As Long
Dim PeriodoHasta As Long
Dim Texto As String

    EsRetroactivo = False
    ExisteNovedad = False
    
    Gnovnro = 0
    '*******************************************
    'VER QUE PASA CUANDO TENGO MAS DE 1 CARGADA
    '*******************************************
    StrSql = "SELECT * FROM novemp WHERE "
    StrSql = StrSql & " concnro = " & Concnro
    StrSql = StrSql & " AND tpanro = " & Tpanro
    StrSql = StrSql & " AND empleado = " & Tercero
    StrSql = StrSql & " AND ("
    If EsNulo(FechaHasta) = False Then
        StrSql = StrSql & "((nedesde <= " & ConvFecha(FechaDesde) & " AND nedesde <= " & ConvFecha(FechaHasta) & " AND (nehasta >= " & ConvFecha(FechaDesde) & " OR nehasta IS NULL )) )"
        StrSql = StrSql & " OR ((nedesde >= " & ConvFecha(FechaDesde) & " AND nedesde <= " & ConvFecha(FechaHasta) & " AND (nehasta >= " & ConvFecha(FechaDesde) & " OR nehasta IS NULL)))"
    Else
        StrSql = StrSql & "((nedesde <= " & ConvFecha(FechaDesde) & " AND nedesde <= " & ConvFecha(FechaDesde) & " AND (nehasta >= " & ConvFecha(FechaDesde) & " OR nehasta IS NULL )) )"
        StrSql = StrSql & " OR ((nedesde >= " & ConvFecha(FechaDesde) & " AND nedesde <= " & ConvFecha(FechaDesde) & " AND (nehasta >= " & ConvFecha(FechaDesde) & " OR nehasta IS NULL)))"
    End If
    StrSql = StrSql & ")"
    StrSql = StrSql & " ORDER BY nehasta ASC "
    OpenRecordset StrSql, rs_NovEmp2
    
    '1
    If Not rs_NovEmp2.EOF Then
        ExisteNovedad = True
        Do While Not rs_NovEmp2.EOF
            InsertoNovedad = False
            StrSqlAux = ""
            '***********************************************
            '***********************************************
            '  |__________#
            '  |__________|
            If EsNulo(rs_NovEmp2!nehasta) = True And EsNulo(FechaHasta) = False Then
            'Si la FechaHastaAux es nulo, debo cerrar vigencia
                 If CDate(rs_NovEmp2!nedesde) = CDate(FechaDesde) Then
                     'Actualizo novedad, y cierro vigencia.
                     StrSqlAux = ", nehasta=" & ConvFecha(FechaHasta)
                     Exit Do
                 End If
            End If
            '***********************************************
            '***********************************************
            If EsNulo(rs_NovEmp2!nehasta) = False Then
                If CDate(rs_NovEmp2!nehasta) < CDate(FechaDesde) Then
                    '  |__________|
                    '              |__________|
                    'Inserto nuevo registro.
                    ExisteNovedad = False
                    InsertoNovedad = True
                    Operacion = 0
                    Exit Do
                End If
            End If
            '***********************************************
            '***********************************************
            If EsNulo(rs_NovEmp2!nehasta) = True Then
                rs_NovEmp2.MoveNext
                'If Not rs_NovEmp2.EOF Then
                If Not rs_NovEmp2.EOF And EsNulo(FechaHasta) = False Then
                    If CDate(rs_NovEmp2!nehasta) > CDate(FechaHasta) Then
                        '            |__________|
                        '|__________|
                        'Inserto nuevo registro.
                        ExisteNovedad = False
                        InsertoNovedad = True
                        Exit Do
                    End If
                    'rs_NovEmp2.MovePrevious
                ElseIf EsNulo(FechaHasta) = False Then
                    rs_NovEmp2.MovePrevious
                    'Y ahora que hago?
                    If CDate(rs_NovEmp2!nedesde) > CDate(FechaHasta) Then
                        '            |__________|
                        '|__________|
                        'Inserto nuevo registro.
                        ExisteNovedad = False
                        InsertoNovedad = True
                        Exit Do
                    End If
                Else
                    rs_NovEmp2.MovePrevious
                End If
            End If
            '***********************************************
            '***********************************************
            rs_NovEmp2.MoveNext
        Loop
        If Not rs_NovEmp2.EOF Then
            FechaDesdeAux = rs_NovEmp2!nedesde
            If EsNulo(rs_NovEmp2!nehasta) Then
                FechaHastaAux = ""
            Else
                FechaHastaAux = rs_NovEmp2!nehasta
            End If
        Else
            FechaDesdeAux = FechaDesde
            FechaHastaAux = FechaHasta
        End If
        '-------------------------------------------
    Else
        FechaDesdeAux = FechaDesde
        FechaHastaAux = FechaHasta
    End If
   '/1
   
   
    'Reviso que no se pise
    StrSql = "SELECT * FROM novemp WHERE "
    StrSql = StrSql & " concnro = " & Concnro
    StrSql = StrSql & " AND tpanro = " & Tpanro
    StrSql = StrSql & " AND empleado = " & Tercero
    StrSql = StrSql & " AND nevigencia = -1 "
    If Not EsNulo(FechaHastaAux) Then
        StrSql = StrSql & " AND nedesde = " & ConvFecha(FechaDesdeAux)
        StrSql = StrSql & " AND nehasta = " & ConvFecha(FechaHastaAux)
    Else
        StrSql = StrSql & " AND nedesde = " & ConvFecha(FechaDesdeAux)
        StrSql = StrSql & " AND nehasta is null"
    End If
    If rs_NovEmp.State = adStateOpen Then rs_NovEmp.Close
    OpenRecordset StrSql, rs_NovEmp
    '1
    If Not rs_NovEmp.EOF And InsertoNovedad = False Then
        'Existe/n novedad/es con vigencia ==>
        Select Case CInt(AccionNovedad)
            Case -1: 'Actualizo la Novedad
                If Not EsRetroactivo Then
                    StrSql = "UPDATE novemp SET nevalor = " & Monto
                    StrSql = StrSql & " , tipmotnro =  " & TipoMotivo
                    StrSql = StrSql & " , motivo =  '" & Motivo & "'"
                    StrSql = StrSql & StrSqlAux
                    StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                Else
                    StrSql = "UPDATE novemp SET nevalor = " & Monto & _
                             " , nepliqdesde =  " & PeriodoDesde & _
                             " , nepliqhasta =  " & PeriodoHasta
                    StrSql = StrSql & " , tipmotnro =  " & TipoMotivo & _
                    " , motivo =  '" & Motivo & "'"
                    StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                End If
                objConn.Execute StrSql, , adExecuteNoRecords
                Gnovnro = rs_NovEmp!nenro
                
                Texto = "Novedad Actualizada "
                Flog.writeline Espacios(Tabulador * 3) & Texto
            Case 0: 'Mantiene Novedades
                Texto = "No se insertó la novedad. Ya existe y no se pisa."
                Flog.writeline Espacios(Tabulador * 3) & Texto
            Case 1: 'Suma Novedades
                If Not EsRetroactivo Then
                    StrSql = "UPDATE novemp SET nevalor = nevalor + " & Monto
                    StrSql = StrSql & " , tipmotnro =  " & TipoMotivo
                    StrSql = StrSql & " , motivo =  '" & Motivo & "'"
                    StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                Else
                    StrSql = "UPDATE novemp SET nevalor = nevalor + " & Monto & _
                             " , nepliqdesde =  " & PeriodoDesde & _
                             " , nepliqhasta =  " & PeriodoHasta
                    StrSql = StrSql & " , tipmotnro =  " & TipoMotivo & _
                    " , motivo =  '" & Motivo & "'"
                    StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                End If
                objConn.Execute StrSql, , adExecuteNoRecords
                Gnovnro = rs_NovEmp!nenro
                Texto = "Novedad Sumada "
                Flog.writeline Espacios(Tabulador * 3) & Texto
        End Select
    Else
        '2
        If ExisteNovedad = True Then
            Texto = "No se insertó la novedad. Ya existe y no se pisa."
            Flog.writeline Espacios(Tabulador * 3) & Texto
        Else
            '3
            If Not EsRetroactivo Then
                StrSql = "INSERT INTO novemp ("
                StrSql = StrSql & "empleado,concnro,tpanro,nevalor,nevigencia,nedesde"
                If Not EsNulo(FechaHasta) Then
                    StrSql = StrSql & ",nehasta"
                End If
                StrSql = StrSql & ",tipmotnro,motivo"
                StrSql = StrSql & ") VALUES (" & Tercero
                StrSql = StrSql & "," & Concnro
                StrSql = StrSql & "," & Tpanro
                StrSql = StrSql & "," & Monto
                StrSql = StrSql & ",-1"
                StrSql = StrSql & "," & ConvFecha(FechaDesde)
                If Not EsNulo(FechaHasta) Then
                    StrSql = StrSql & "," & ConvFecha(FechaHasta)
                End If
                StrSql = StrSql & "," & TipoMotivo & _
                ",'" & Motivo & "'"
                StrSql = StrSql & " )"
            Else
                StrSql = "INSERT INTO novemp ("
                StrSql = StrSql & "empleado,concnro,tpanro,nevalor,nevigencia,nedesde"
                If Not EsNulo(FechaHasta) Then
                    StrSql = StrSql & ",nehasta"
                End If
                StrSql = StrSql & ",nepliqdesde,nepliqhasta"
                StrSql = StrSql & ",tipmotnro,motivo"
                StrSql = StrSql & ") VALUES (" & Tercero
                StrSql = StrSql & "," & Concnro
                StrSql = StrSql & "," & Tpanro
                StrSql = StrSql & "," & Monto
                StrSql = StrSql & ",-1"
                StrSql = StrSql & "," & ConvFecha(FechaDesde)
                If Not EsNulo(FechaHasta) Then
                    StrSql = StrSql & "," & ConvFecha(FechaHasta)
                End If
                StrSql = StrSql & "," & PeriodoDesde
                StrSql = StrSql & "," & PeriodoHasta
                StrSql = StrSql & "," & TipoMotivo & _
                ",'" & Motivo & "'"
                StrSql = StrSql & " )"
            End If
            '/3
            objConn.Execute StrSql, , adExecuteNoRecords
            Gnovnro = getLastIdentity(objConn, "novemp")
            
            Texto = "Novedad insertada "
            Flog.writeline Espacios(Tabulador * 3) & Texto
        End If
        '/2
  End If
  '/1
End Sub



Private Sub Politica579(ByVal p_ternro As Long, ByVal Detalle As Long)
' --------------------------------------------------------------
' Descripcion: Topea horas Acumulado Diario.
'   Revisa los tope diarios configurados para cada tipo de hora y genera los desbordes correspondientes
'   Si hay tope configurado y no se configura el desborde ==> se pierde el desborde
' Autor: FGZ
' Fecha: 08/10/2014
' Ultima modificacion:
' --------------------------------------------------------------
Dim Opcion          As Integer
Dim TipoEstructura  As Long
Dim TopeDiario      As Single
Dim Desborde        As Single
Dim ThDesborde      As Long

Dim rs_Topes As New ADODB.Recordset
Dim rs_AD As New ADODB.Recordset
Dim rs_AD2 As New ADODB.Recordset

    Call SetearParametrosPolitica(Detalle, ok)
    If ok Then
        Opcion = st_Opcion  'Version de la politica
        TipoEstructura = st_TipoEstructura  'Version de la politica
    Else
        Flog.writeline Espacios(Tabulador * 3) & "Parametros NO configurados"
        Exit Sub
    End If
    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Version " & "única" 'Opcion
        Flog.writeline Espacios(Tabulador * 3) & "Tipo de Estructura que configura el tope: " & TipoEstructura
    End If
    If TipoEstructura = 0 Then
        Flog.writeline Espacios(Tabulador * 3) & "Tipo de Estructura que configura el tope sin configurar. FIN"
        Exit Sub
    Else
        'Por cada tipo de hora generado en Acumulado Diario, reviso si tiene tope
        StrSql = " SELECT thnro, thestrlimdia, thestrexcdia FROM tiphora_estr"
        StrSql = StrSql & " INNER JOIN his_estructura ON tiphora_estr.estrnro = his_estructura.estrnro"
        StrSql = StrSql & " WHERE his_estructura.Tenro = " & TipoEstructura & " AND his_estructura.Ternro = " & p_ternro
        StrSql = StrSql & " AND (his_estructura.htetdesde <= " & ConvFecha(p_fecha) & ") AND (" & ConvFecha(p_fecha) & " <= his_estructura.htethasta or his_estructura.htethasta is null)"
        StrSql = StrSql & "ORDER BY thnro"
        OpenRecordset StrSql, rs_Topes
        Do While Not rs_Topes.EOF
            TopeDiario = IIf(EsNulo(rs_Topes!thestrlimdia), 0, rs_Topes!thestrlimdia)
            ThDesborde = IIf(EsNulo(rs_Topes!thestrexcdia), 0, rs_Topes!thestrexcdia)
            
            'Si tiene limite diario y tipo de hora para el desborde
            If TopeDiario <> 0 Then
                'Busco si hay hs generadas del tipo
                StrSql = "SELECT thnro, adcanthoras FROM gti_acumdiario WHERE ternro = " & p_ternro & " AND thnro = " & rs_Topes!thnro & " AND adfecha = " & ConvFecha(p_fecha)
                OpenRecordset StrSql, rs_AD
                If Not rs_AD.EOF Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 4) & " Tipo Hora: " & rs_AD!thnro & " Cantidad: " & rs_AD!adcanthoras & " Tope:" & TopeDiario & " Desborde a tipo de Hora: " & ThDesborde
                        If ThDesborde = rs_AD!thnro Then
                            Flog.writeline Espacios(Tabulador * 4) & " Warning!! El Tipo Hora de desborde es el mismo que el tipo de hora topeado"
                        End If
                    End If
                    If TopeDiario < rs_AD!adcanthoras Then
                        Desborde = Abs(TopeDiario - rs_AD!adcanthoras)
                        Flog.writeline Espacios(Tabulador * 5) & Desborde & " hs de desborde"
                        
                        'Actualizo las hs hasta el tope
                        StrSql = " UPDATE gti_acumdiario SET adcanthoras = " & Round(TopeDiario, 3) & " ,horas = '" & CHorasSF(TopeDiario, 60) & "'"
                        StrSql = StrSql & " WHERE thnro = " & rs_Topes!thnro & " AND ternro = " & p_ternro & " AND adfecha = " & ConvFecha(p_fecha)
                        objConn.Execute StrSql, , adExecuteNoRecords
                        
                        If ThDesborde <> 0 Then
                            'Inserto desborde
                            StrSql = " SELECT adcanthoras FROM gti_acumdiario WHERE thnro = " & ThDesborde & " AND ternro = " & p_ternro & " AND adfecha = " & ConvFecha(p_fecha)
                            OpenRecordset StrSql, rs_AD2
                            If Not rs_AD2.EOF Then
                                StrSql = " UPDATE gti_acumdiario SET adcanthoras = " & Round(rs_AD2!adcanthoras + Desborde, 3) & " ,Horas ='" & CHorasSF(Round(rs_AD2!adcanthoras + Desborde, 3), 60) & "'"
                                StrSql = StrSql & " WHERE thnro = " & ThDesborde & " AND ternro = " & p_ternro & " AND adfecha = " & ConvFecha(p_fecha)
                                objConn.Execute StrSql, , adExecuteNoRecords
                            Else
                                StrSql = " INSERT INTO gti_acumdiario(adfecha,ternro,thnro,adcanthoras,horas,admanual,advalido) " & _
                                         " VALUES (" & ConvFecha(p_fecha) & "," & p_ternro & "," & ThDesborde & "," & Round(Desborde, 3) & ",'" & CHorasSF(Round(Desborde, 3), 60) & "'," & _
                                         CInt(False) & "," & CInt(True) & ")"
                                objConn.Execute StrSql, , adExecuteNoRecords
                            End If
                        Else
                            If depurar Then
                                Flog.writeline Espacios(Tabulador * 4) & " No hay tipo de hora para el desborde configurado. "
                            End If
                        End If
                    End If
                End If
            End If
        
            rs_Topes.MoveNext
        Loop
    End If
   
  
'Cierro y libero
    If rs_AD.State = adStateOpen Then rs_AD.Close
    Set rs_AD = Nothing
    
    If rs_AD2.State = adStateOpen Then rs_AD2.Close
    Set rs_AD2 = Nothing
    
    If rs_Topes.State = adStateOpen Then rs_Topes.Close
    Set rs_Topes = Nothing
    
    
End Sub




Private Sub Generar_Horario_Libre_Noc_CambiaTipDia()
' ---------------------------------------------------------------------------------------------
' Descripcion: Procedimiento que genera el Horario Libre del dia. Especial para turnos nocturnos.
' Autor      : FGZ
' Fecha      : 12/06/2015
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim redondeo As Integer
Dim TipoHora As Integer
Dim Cant_Reg As Integer
Dim CantR As Integer
Dim Cant_Pares As Integer
Dim i As Integer
Dim R As Integer
Dim par1 As String
Dim par2 As String
Dim HDesde As String
Dim HHasta As String
Dim fecpar1 As Date
Dim fecha_hc_desde As Date
Dim fecha_hc_hasta As Date
Dim fecpar2 As Date
Dim anor1 As Integer
Dim anor2 As Integer
Dim Reg_Ent As Long
Dim Reg_Sal As Long
Dim otroDia As Boolean
Dim j As Integer
Dim Weekdia As Byte
Dim objrsDesgl As New ADODB.Recordset
Dim TotHor As Single
Dim TotHor2 As Single
Dim TotHorHHMM As String
Dim nro_desg As Long
Dim hora_desde_desg As String
Dim hora_hasta_desg As String
Dim Hora_a_Red As String
Dim fecha_desde_desg As Date
Dim fecha_hasta_desg As Date
Dim HCDesde As String
Dim HCHasta As String
Dim cant_aux As Single
Dim CantH_Acum As Single
Dim cant_parcial As Single
Dim horas_max As Single
Dim horas_min As Single
Dim Registro As Long
Dim rs As New ADODB.Recordset
Dim tipofracc As Integer
Dim segunda As Boolean
Dim CubrioElMinimo As Boolean
Dim CantidadDeHorasACubrir As Single
Dim RestoDeHorasCubiertas As Single
Dim SefuedeRango As Boolean
Dim Recalcular As Boolean

'FGZ - 12/04/2006 - Arreglo de registraciones leidas y a marcar como procesadas
Dim reg(1 To 100) As TRegistracionesProcesadas
Dim NoHayMas As Boolean

Dim HCFDesde As Date
Dim HCFHasta As Date
Dim Cambio_dia As Boolean
Dim EsFeriado2 As Boolean
Dim objFeriado2 As New Feriado
Dim p_fecha_aux As Date
Dim Cambie_p_fecha As Boolean

Dim HCHDesde As String
Dim HCHHasta As String
Dim horres As String
Dim fecres As Date

Dim p_fecha_Original As Date

diatipo = 0 'Dia laborable
Cant_Reg = 0
CantR = 1
Cambie_p_fecha = False


    'FGZ - 04/01/2011
    p_fecha_Original = p_fecha

    If depurar Then
        Flog.writeline Espacios(Tabulador * 3) & "Version Nocturnos Flexibles Según Tipo de Día"
    End If
    
    If esFeriado And Dia_Libre Then
      Call Politica(380)
    ElseIf Dia_Libre Then diatipo = 1
      ElseIf esFeriado Then diatipo = 2
    End If
    ' Marco los pares
    StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 ORDER BY Fecha,hora"
    rs.Open StrSql, objConn
    i = 1
    Do While Not rs.EOF
        Registro = rs!Regnro
        StrSql = "update " & TTempWFTurno & " set par = " & i & " where regnro = " & Registro
        objConn.Execute StrSql, , adExecuteNoRecords
        If CantR Mod 2 = 0 Then i = i + 1
        CantR = CantR + 1
        Cant_Reg = Cant_Reg + 1
        rs.MoveNext
    
    Loop
        
    Cant_Pares = Int(Cant_Reg / 2)
    If Cant_Reg = 1 Then
        Call Politica(40)
        objConn.Execute "DELETE FROM " & TTempWFDiaLaboral, , adExecuteNoRecords
        Exit Sub
    End If
    
    p_fecha_aux = p_fecha
    
    Call buscar_horas_turno(Horas_Oblig, horas_max, horas_min)
    
    'Cambiado
    For i = 1 To Cant_Pares
        StrSql = "SELECT * FROM " & TTempWFTurno & " WHERE evenro = 2 AND par =" & i
        OpenRecordset StrSql, objRs
        If objRs.EOF Then GoTo ProximoPar
        par1 = objRs!Hora
        fecpar1 = objRs!Fecha
        fecha_hc_desde = fecpar1
        Reg_Ent = objRs!Regnro
               
        
        'FGZ - 12/04/2006 - ojo !!! - si el desgloce es por cantidad de horas hay que guardar los pares anteriores porque acumula antes de guardar
        ' y se pisan los nro de las registraciones a marcar como procesadas
        reg(i).Reg_Ent = objRs!Regnro
        
        'Cambiado
        anor1 = 0 & objRs!anornro
        
        StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & objRs!Regnro & " AND regestado <> 'P'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        objRs.MoveNext
        If objRs.EOF Then GoTo ProximoPar
        
        par2 = objRs!Hora
        fecpar2 = objRs!Fecha
        fecha_hc_hasta = fecpar2
        Reg_Sal = objRs!Regnro
        
        'FGZ - 12/04/2006 - ojo !!! - si el desgloce es por cantidad de horas hay que guardar los pares anteriores porque acumula antes de guardar
        ' y se pisan los nro de las registraciones a marcar como procesadas
        reg(i).Reg_Sal = objRs!Regnro
        
        anor2 = 0 & objRs!anornro
        
        StrSql = "UPDATE gti_registracion SET regestado = 'L',fechaproc = " & ConvFecha(p_fecha) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & objRs!Regnro & " AND regestado <> 'P'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        If fecpar1 = fecpar2 Then
            HDesde = par1
            HHasta = par2
            otroDia = False
        Else
            HDesde = par1    ' Como las fechas son distintas el desgloce es distinto por cada día */
            HHasta = "2400" ' Genero dos HC uno de par1 hasta 24:00 y el otro de 00:00 a par2 */
            otroDia = True
        End If
        
        'Cambio_dia = False
        '------------------------------------------
        Cambio_dia = (p_fecha_Original <> fecpar1)
        Cambie_p_fecha = Cambio_dia
        Weekdia = Weekday(fecpar1)
        '------------------------------------------
        For j = 1 To 2 'En el peor de los casos lo hara 2 veces, una por cada día
            '--------------------------------------------------------------------
            Cambio_dia = (p_fecha_Original <> fecpar1)
                    
            If Cambio_dia Then
                Weekdia = Weekday(fecpar1)
                p_fecha = fecpar1
                Cambie_p_fecha = True
                EsFeriado2 = objFeriado2.Feriado(fecpar1, Empleado.Ternro, depurar)
                If EsFeriado2 Then
                    Weekdia = Weekday(fecpar1)
                    diatipo = 2
                Else
                    If Not Dia_Libre Then
                        Weekdia = Weekday(p_fecha_Original)
                        diatipo = 0 'Laborable
                    Else
                        diatipo = 1 'Franco
                    End If
                    'If Subturno_Genera <> 1 Then
                    '    Weekdia = Weekday(fecpar1)
                    'End If
                End If
            End If
            '--------------------------------------------------------------------
            
            
            
            StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
                     "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
            OpenRecordset StrSql, objrsDesgl
            If objrsDesgl.EOF Then
                If depurar Then
                    GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
                    Flog.writeline Espacios(Tabulador * 4) & "No existe el desglose del Día."
                End If
                Exit Sub
            End If
            
            StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 2 "
            StrSql = StrSql & " ORDER BY desghorfijo,desghoradesde"
            OpenRecordset StrSql, objrsDesgl
            Do While Not objrsDesgl.EOF
                p_fecha = fecpar1
                
                '1 Horario Fijo ,2 Horario Variable, 3 Horario Fijo/Variable
                Tipo_de_Desgloce = objrsDesgl!desghorfijo
            
                TotHor = 0
                hora_desde = HDesde
                hora_hasta = HHasta
                nro_desg = objrsDesgl!desghnro
    
                If Cambie_p_fecha Then
                    p_fecha = DateAdd("d", -1, p_fecha)
                End If
                
                If diatipo = 0 Then
                    Call Cambiar_Horas_Desde(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_dia)
                    Call Cambiar_Horas_hasta(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_dia)
                Else
                    Call Cambiar_Horas_Desde2(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_dia, fecpar1)
                    Call Cambiar_Horas_hasta2(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_dia, fecpar1)
                End If
                
                If Cambie_p_fecha Then
                    p_fecha = DateAdd("d", 1, p_fecha)
                End If
                 
'                Call Cambiar_Horas_Desde(nro_desg, hora_desde_desg, fecha_desde_desg, Cambio_dia)
'                Call Cambiar_Horas_hasta(nro_desg, hora_hasta_desg, fecha_hasta_desg, Cambio_dia)
                
                'FGZ - 10/01/2006
                'OJO !! cuando la FP es relativa y va de posterior a la salida y anterior a la entrada
                ' tiene problemas con los turnos nocturnos ya que la salida pasa de dia ==>
                'hay que hacer el control desde afuera y pasar de dia al calculo de la fecha hasta
                If objFechasHoras.Menor_Hora(fecha_hasta_desg, hora_hasta_desg, fecha_desde_desg, hora_desde_desg) Then
                    fecha_hasta_desg = DateAdd("d", 1, fecha_hasta_desg)
                End If
                
                Call fraccionar_horas(fecpar1, hora_desde, hora_hasta, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, hora_desde, hora_hasta)
    
                'Desgloce   [---------------]
                'Horario          (----------------)
                If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                    objFechasHoras.RestaHs fecpar1, hora_desde, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                    HCDesde = hora_desde
                    HCHasta = hora_hasta_desg
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
                'Desgloce       [---------------]
                'Horario    (----------------)
                If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                    objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                    HCDesde = hora_desde_desg
                    HCHasta = hora_hasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
                
                'Desgloce       [---------------]
                'Horario    (-----------------------)
                If objFechasHoras.Mayor_Igual_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_hasta) And objFechasHoras.Menor_Igual_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_desde) Then
                    objFechasHoras.RestaHs fecha_desde_desg, hora_desde_desg, fecha_hasta_desg, hora_hasta_desg, Tdias, Thoras, Tmin
                    HCDesde = hora_desde_desg
                    HCHasta = hora_hasta_desg
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
    
                'Desgloce   [---------------]
                'Horario        (--------)
                If objFechasHoras.Menor_Hora(fecha_desde_desg, hora_desde_desg, fecpar1, hora_desde) And objFechasHoras.Mayor_Hora(fecha_hasta_desg, hora_hasta_desg, fecpar1, hora_hasta) Then
                'If (hora_desde_desg < hora_desde And hora_hasta_desg > hora_hasta) Then
                    objFechasHoras.RestaHs fecpar1, hora_desde, fecpar1, hora_hasta, Tdias, Thoras, Tmin
                    HCDesde = hora_desde
                    HCHasta = hora_hasta
                    TotHor = (Tdias * 24) + (Thoras + (Tmin / 60))
                    If TotHor = 0 Or (TotHor < objrsDesgl!desghoffset) Then GoTo Continuar
                End If
                'FGZ - 08/04/2009 ---------------------------------------------------------------------
                 
                 If (TotHor = 0) Then GoTo Continuar
                 
                 If (objrsDesgl!desghplus = 1) Then
                    'Hora Plus
                    TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
                    If (objrsDesgl!desghminplus <> 0) Or (objrsDesgl!desghmaxplus <> 0) Then
                        If (TotHor < objrsDesgl!desghminplus) Then TotHor = objrsDesgl!desghminplus
                        If (objrsDesgl!desghmaxplus < TotHor) Then TotHor = objrsDesgl!desghmaxplus
                    End If
                 End If
                 
                '/* Redondeo del total de horas */
                'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
                'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
                'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
                TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
                Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
                TotHorHHMM = "'" & TotHorHHMM & "'"
                
                
                Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
                Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
                
                
                If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
                
                p_fecha = p_fecha_aux
                
                Call Politica(540)
                
                If TotHor = 0 Then GoTo Continuar
                'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
                
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                Fecha_Generacion = CalcularFechadeGeneracion(Nro_Subturno, p_fecha, fecpar1, fecpar2, Cambio_dia)
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                
                
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                         "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                         "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                         TotHorHHMM & "," & TotHor & "," & ConvFecha(fecpar1) & ",' '," & ConvFecha(fecpar1) & ",'" & HCDesde & "','" & _
                         HCHasta & "'," & CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                         ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                         Reg_Ent & ",'" & IIf(j = 1, par1, "0000") & "'," & Reg_Sal & ",'" & _
                         IIf((j = 2) Or (j = 1 And Not otroDia), par2, "2400") & "'," & Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
                End If
                    
                    
                ' Marcar las registraciones involucradas con el Horario generado
                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Ent
                objConn.Execute StrSql, , adExecuteNoRecords
                    
                StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & Reg_Sal
                objConn.Execute StrSql, , adExecuteNoRecords

Continuar:
                objrsDesgl.MoveNext
            Loop
            
            
            If fecpar1 = fecpar2 Then
                Exit For
            Else
                hora_desde = "0000"
                HDesde = hora_desde
                hora_hasta = par2
                HHasta = hora_hasta
                fecpar1 = fecpar2
                Cambio_dia = True
            End If
            
        Next j

ProximoPar:
    Next i


    '===============================================================================================================
    'Genero los registros del HC, cuando se trata de desglose como cantidad de horas
    If depurar Then
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 3) & "  Genero los registros del HC, cuando se trata de desglose como cantidad de horas"
    End If
    Weekdia = Weekday(p_fecha)
    StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
             "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
    OpenRecordset StrSql, objrsDesgl
    If objrsDesgl.EOF Then
        If depurar Then
            GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
        End If
        Exit Sub
    End If
    ' Cambiada
    StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 1 " & _
                     " ORDER BY desgdnro,desghoradesde"
    OpenRecordset StrSql, objrsDesgl
    Do While Not objrsDesgl.EOF
        cant_aux = Sumarizar_Horas2(Cant_Pares, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, HCFDesde, HCHDesde, HCFHasta, HCHHasta)
        'cant_aux = sumarizar_horas(Cant_Pares, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta)

        'If ((cant_aux > 0) And (cant_aux < objrsDesgl!desghoffset)) Then TotHor = 0
        If (cant_aux < objrsDesgl!desgcantmin) Then TotHor = 0
        If ((cant_aux >= objrsDesgl!desgcantmin) And (cant_aux < objrsDesgl!desgcantmax)) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = cant_aux - objrsDesgl!desgcantmin
               
               'FGZ - 06/10/2010 ----------------------------------------------------------
               'aca deberia recalcular fdesde y hdesde. hasta - cantidad de horas de tothor
               If cant_aux > objrsDesgl!desgcantmin Then
                    TotHorHHMM = CHorasSF(objrsDesgl!desgcantmin, 60)
                    Call objFechasHoras.SumoHoras(HCFDesde, HCHDesde, TotHorHHMM, fecres, horres)
                    If Not objFechasHoras.ValidarHora(horres) Then
                        If depurar Then
                            Flog.writeline Espacios(Tabulador * 4) & "Hora Invalida " & horres
                        End If
                    End If
                    HCFDesde = fecres
                    HCHDesde = horres
               
               End If
               'FGZ - 06/10/2010 ----------------------------------------------------------
            Else
               TotHor = 0
            End If
        End If
        If (cant_aux >= objrsDesgl!desgcantmax) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = objrsDesgl!desgcantmax - objrsDesgl!desgcantmin
               
               'FGZ - 06/10/2010 ----------------------------------------------------------
               'aca deberia recalcular fhasta y hhasta. desde + cantidad de horas de tothor
               TotHorHHMM = CHorasSF(TotHor, 60)
                Call objFechasHoras.SumoHoras(HCFDesde, HCHDesde, TotHorHHMM, fecres, horres)
                If Not objFechasHoras.ValidarHora(horres) Then
                    If depurar Then
                        Flog.writeline Espacios(Tabulador * 4) & "Hora Invalida " & horres
                    End If
                End If
                HCFHasta = fecres
                HCHHasta = horres
               'FGZ - 06/10/2010 ----------------------------------------------------------
            Else
               TotHor = 0
            End If
        End If
        'FGZ - 29/07/2008 ----
        If ((TotHor > 0) And (TotHor < objrsDesgl!desghoffset)) Then TotHor = 0
        'FGZ - 29/07/2008 ----
        
        ' Chequea si las horas trabajadas estan entre en maximo plus y minimo plus o
        ' si el maximo y minimo son 0, paga el total de horas
        If (objrsDesgl!desghplus = 1) And (objrsDesgl!desghmaxplus = 0 And objrsDesgl!desghminplus = 0) Then
           If (TotHor < objrsDesgl!desghminplus) Then
                 GoTo Continuar
              Else
                 If (TotHor > objrsDesgl!desghmaxplus) Then TotHor = TotHor - objrsDesgl!desghmaxplus
            End If
        End If
        
        If TotHor > 0 Then
            ' Si es plus, se calcula la duración de la hora */
            If (objrsDesgl!desghplus = 1) Then
                TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
            End If
            ' Redondeo del total de horas
            'objFechasHoras.Convertir_A_Hora TotHor * 60, Hora_a_Red
            'objFechasHoras.Redondeo_Horas_Tipo Hora_a_Red, objrsDesgl!desghredtipo, TotHor
            'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
            TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
            Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
            TotHorHHMM = "'" & TotHorHHMM & "'"
            
            Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
            Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
            
            If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
            
            'Call ValidarTipoDeHora(objrsDesgl!thnro, nro_turno, tipo_hora)
            
            'FGZ - 22/03/2011--
            If TotHor > 0 Then
            
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                Fecha_Generacion = p_fecha
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                          "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                          "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                          TotHorHHMM & "," & TotHor & "," & ConvFecha(HCFDesde) & ",' '," & ConvFecha(HCFHasta) & ",'" & HCHDesde & "','" & HCHHasta & "'," & _
                          CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                          ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                          Reg_Ent & ",''," & Reg_Sal & ",''," & _
                          Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
                End If
                
                'FGZ - 12/04/2006 No estaba esto
                'Marcar las registraciones involucradas con el Horario generado
                i = 1
                NoHayMas = False
                Do While i <= UBound(reg) And Not NoHayMas
                    If reg(i).Reg_Ent <> 0 Then
                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        NoHayMas = True
                    End If
                    
                    If reg(i).Reg_Sal <> 0 Then
                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        NoHayMas = True
                    End If
                            
                    i = i + 1
                Loop
            End If
        End If
        
        objrsDesgl.MoveNext
    Loop
    '===============================================================================================================
    
    
    '===============================================================================================================
    'Nueva version de Pago por Cantidad y Franja (AMBAS)
    '-------------------------------------------------------------------
    'Genero los registros del HC, cuando se trata de desglose como Cantidad de Horas y Franja Horaria
    If depurar Then
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 3) & "  Genero los registros del HC, cuando se trata de desglose como Cantidad de Horas y Franja Horaria"
    End If
    Weekdia = Weekday(p_fecha)
    StrSql = "SELECT * FROM gti_desgdia WHERE (desgdnrodia = " & Weekdia & " AND fpgonro =" & Nro_fpgo & ") AND " & _
             "(subturnro = " & Nro_Subturno & ") AND (desgdtipo = " & diatipo & ")"
    OpenRecordset StrSql, objrsDesgl
    If objrsDesgl.EOF Then
        If depurar Then
            GeneraTraza Empleado.Ternro, p_fecha, "No existe el desglose del Día."
        End If
        Exit Sub
    End If
    StrSql = "SELECT * FROM gti_desghora WHERE desgdnro = " & objrsDesgl!desgdnro & " AND  desgcant = 3 "
    StrSql = StrSql & " ORDER BY desghoradesde,desghplus"
    OpenRecordset StrSql, objrsDesgl
    Do While Not objrsDesgl.EOF
        HCFDesde = p_fecha
        HCFHasta = p_fecha
        
        cant_aux = Sumarizar_Horas_Franja(Cant_Pares, objrsDesgl!desghfractpdesde, objrsDesgl!desghfractphasta, objrsDesgl!desghoradesde, objrsDesgl!desghorahasta, HCDesde, HCHasta)
        If (cant_aux < objrsDesgl!desgcantmin) Then TotHor = 0
        If ((cant_aux >= objrsDesgl!desgcantmin) And (cant_aux < objrsDesgl!desgcantmax)) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
                TotHor = cant_aux - objrsDesgl!desgcantmin
                Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFDesde, HCDesde, objrsDesgl!desgcantmin, "+")
                Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFHasta, HCHasta, TotHor, "+")
            Else
               TotHor = 0
            End If
        End If
        If (cant_aux >= objrsDesgl!desgcantmax) Then
            If (cant_aux > objrsDesgl!desghoffset) Or (objrsDesgl!desghoffset = 0) Then
               TotHor = objrsDesgl!desgcantmax - objrsDesgl!desgcantmin
               Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFHasta, HCHasta, TotHor, "+")
            Else
               TotHor = 0
            End If
        End If
        If ((TotHor > 0) And (TotHor < objrsDesgl!desghoffset)) Then TotHor = 0
        
        'Si es plus, se calcula la duraci¢n de la hora
        If (objrsDesgl!desghplus = 1) Then
           'Hora Plus
           TotHor = Duracion_Hora(TotHor, objrsDesgl!desghdurhora)
            If (objrsDesgl!desghminplus <> 0) Or (objrsDesgl!desghmaxplus <> 0) Then
                If (TotHor < objrsDesgl!desghminplus) Then
                    TotHor = objrsDesgl!desghminplus
                    Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFHasta, HCHasta, TotHor, "+")
                End If
                If (objrsDesgl!desghmaxplus < TotHor) Then
                    TotHor = objrsDesgl!desghmaxplus
                    Call CalcularHC_DesdeyHasta(HCFDesde, HCDesde, HCFHasta, HCHasta, TotHor, "+")
                End If
           End If
        End If

        
        If TotHor > 0 Then
            ' Redondeo del total de horas
            'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
            TotHorHHMM = CHorasSF(TotHor, objrsDesgl!desghdurhora)
            Call Redondeo_enHorasMinutos(TotHorHHMM, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHorHHMM)
            TotHorHHMM = "'" & TotHorHHMM & "'"
            
            Call objFechasHoras.Convertir_A_Hora_cDuracion(TotHor, objrsDesgl!desghdurhora, Hora_a_Red)
            Call objFechasHoras.Redondeo_Horas_Tipo2(Hora_a_Red, objrsDesgl!desghredtipo, objrsDesgl!desghdurhora, TotHor)
            
            If (objrsDesgl!desghplus = 0) Then CantH_Acum = CantH_Acum + TotHor
            
            
            'FGZ - 22/03/2011--
            If TotHor > 0 Then
            
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                Fecha_Generacion = p_fecha
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                          "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                          "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                          TotHorHHMM & "," & TotHor & "," & ConvFecha(HCFDesde) & ",' '," & ConvFecha(HCFHasta) & ",'" & HCDesde & "','" & HCHasta & "'," & _
                          CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                          ValorNulo & "," & Empleado.Ternro & "," & objrsDesgl!thnro & "," & Nro_Turno & "," & _
                          Reg_Ent & ",''," & Reg_Sal & ",''," & _
                          Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & objrsDesgl!thnro & "- Cantidad: " & TotHor & " hs."
                End If
                
                
                'Marcar las registraciones involucradas con el Horario generado
                i = 1
                NoHayMas = False
                Do While i <= UBound(reg) And Not NoHayMas
                    If reg(i).Reg_Ent <> 0 Then
                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        NoHayMas = True
                    End If
                    
                    If reg(i).Reg_Sal <> 0 Then
                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        NoHayMas = True
                    End If
                            
                    i = i + 1
                Loop
            End If
        End If
        
        objrsDesgl.MoveNext
    Loop
    '-------------------------------------------------------------------
    

' FGZ - 12/3/2003. Hasta acá modificó Winsy
' ----------------------------------------------------
If depurar Then
    Flog.writeline
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 3) & "Cuando la sumatoria de las horas trabajadas entre las registraciones del empleado es menor a la cantidad de horas"
    Flog.writeline Espacios(Tabulador * 3) & "mínimas, configuradas en el turno, en el HC, debemos generar una anormalidad (faltar horas obligatorias)"
    Flog.writeline Espacios(Tabulador * 3) & "y una entrada en el HC mostrando esto"
    Flog.writeline
End If
'   Cuando la sumatoria de las horas trabajadas entre las registraciones del empleado es menor a la cantidad de horas
'   mínimas, configuradas en el turno, en el HC, debemos generar una anormalidad (faltar horas obligatorias)
'   y una entrada en el HC mostrando esto

'FGZ - 30/07/2007 - Le agregué este control
If Tipo_Turno = 3 Then  'Libre
    If UsaFeriadoConControl And esFeriado Then
       'No debe generar las ausencias
       Exit Sub
    End If
End If
'FGZ - 30/07/2007 - Le agregué este control

   cant_aux = 0
    
    ' AIB - Cambiada el 13/03
   StrSql = "SELECT * FROM gti_config_tur_hor WHERE turnro =" & Nro_Turno & " AND conhornro = 2 "
   'StrSql = "SELECT * FROM gti_config_tur_hor WHERE turnro =" & nro_turno & " AND conhornro = 10 "
   
   
   OpenRecordset StrSql, objRs
    
   If Not objRs.EOF Then
        'cambiado
        'redondeo = objRs!conhredondeo
        redondeo = IIf(Not EsNulo(objRs!conhredondeo), objRs!conhredondeo, 0)
        TipoHora = objRs!thnro
        tipofracc = 0 & objRs!conhfractipo
        cant_aux = sumarizar_horas(Cant_Pares, tipofracc, tipofracc)
        
        If (Tipo_Turno = 3) And (Horas_Oblig > (cant_aux + Total_Hs_Justificadas)) Then
            'TotHor = horas_oblig - cant_aux
            'FGZ - 19/04/2006
            TotHor = Horas_Oblig - (cant_aux + Total_Hs_Justificadas)
            
            'FGZ - 03/11/2008 - redefiní los 2 procedimientos porque no estaban teniendo en cuenta la durecion de la hora
            TotHorHHMM = CHorasSF(TotHor, 60)
            Call Redondeo_enHorasMinutos(TotHorHHMM, redondeo, 60, TotHorHHMM)
            TotHorHHMM = "'" & TotHorHHMM & "'"
            
            objFechasHoras.Convertir_A_Hora_cDuracion TotHor, 60, Hora_a_Red
            objFechasHoras.Redondeo_Horas_Tipo2 Hora_a_Red, redondeo, 60, TotHor
            
            'FGZ - 22/03/2011--
            If TotHor > 0 Then
            
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                Fecha_Generacion = p_fecha
                'FGZ - 27/07/2009  ------------------------------------------------------------------------------------------------
                
                StrSql = "INSERT INTO gti_horcumplido(horas, horcant,hordesde,horestado,horhasta,horhoradesde," & _
                "horhorahasta,hormanual,horvalido,jusnro,jusnro2,normnro,normnro2,Ternro," & _
                "thnro,turnro,regent,horrealent,regsal,horrealsal,Empleg,horfecrep,horfecgen) VALUES (" & _
                TotHorHHMM & "," & TotHor & "," & ConvFecha(p_fecha) & ",' '," & ConvFecha(p_fecha) & ",'',''," & _
                CInt(False) & "," & CInt(True) & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & ValorNulo & "," & _
                Empleado.Ternro & "," & TipoHora & "," & Nro_Turno & "," & _
                ValorNulo & ",''," & ValorNulo & ",''," & _
                Empleado.Legajo & "," & ConvFecha(Fecha_Generacion) & "," & ConvFecha(p_fecha) & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                If depurar Then
                    Flog.writeline Espacios(Tabulador * 3) & "  ==> Insertó: Tipo de Hora: " & TipoHora & "- Cantidad: " & TotHor & " hs."
                End If
                
                'FGZ - 12/04/2006 No estaba esto
                'Marcar las registraciones involucradas con el Horario generado
                i = 1
                NoHayMas = False
                Do While i <= UBound(reg) And Not NoHayMas
                    If reg(i).Reg_Ent <> 0 Then
                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Ent
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        NoHayMas = True
                    End If
                    
                    If reg(i).Reg_Sal <> 0 Then
                        StrSql = "UPDATE gti_registracion SET regestado = 'P',fechaproc = " & ConvFecha(Fecha_Generacion) & ",fechagen = " & ConvFecha(p_fecha) & " WHERE regnro = " & reg(i).Reg_Sal
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        NoHayMas = True
                    End If
                            
                    i = i + 1
                Loop
            End If
        End If
   End If

    'FGZ - 04/01/2011
    p_fecha = p_fecha_Original
End Sub
