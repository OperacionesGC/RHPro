Attribute VB_Name = "MdlInterfacesEstandar"
Option Explicit

Public Type TR_CBU_Bloque_1 'longitud total = 8 posiciones
    '   Codigo entidad:  "011"  - long 3
        Codigo_Entidad As String
    '   Codigo Sucursal: "BCRA" - long 4
        Codigo_Sucursal As String
    '   Digito Verif. Bloque 1  - long 1
        Digito_Verificador As String
End Type

Public Type TR_CBU_Bloque_2 'longitud total = 14 posiciones
    '   Tipo de Cuenta:         - long 1  (2 = CC, 3 = CA y 4 = CCE)
        Cuenta_Tipo As String
    '   Moneda de la cuenta:    - long 1  (0 = Pesos, 1 = Dolares y 3 = Lecop)
        Moneda As String
    '   Nro de la cuenta        - long 11
        Cuenta_Nro As String
    '   Digito Verif. Bloque 2  - long 1
        Digito_Verificador As String
End Type

Public Type TR_CBU 'longitud total = 22 posiciones
    Bloque1 As String 'longitud total = 8 posiciones
    Bloque2 As String 'longitud total = 14 posiciones
End Type

Public Type TR_Datos_Bancarios 'longitud total = 130 posiciones
    Proceso As String               'String   long 2  - Valor Fijo "AH"
    Servicio As String              'String   long 4  -
    Sucursal As String              'Numerico long 4  - Valor Fijo 0002
    Legajo As String                'Numerico long 20 -
    Moneda As String                'String   long 1  - Valor Fijo "P"
    Titularidad As String           'String   long 2  - Valor Fijo "SF"
    CBU As String                   'Numerico long 22 -
                                    'Bloque 1
                                    '       Codigo entidad:  "011"  - long 3
                                    '       Codigo Sucursal: "BCRA" - long 4
                                    '       Digito Verif. Bloque 1  - long 1
                                    'Bloque 2
                                    '       Tipo de Cuenta:         - long 1  (2 = CC, 3 = CA y 4 = CCE)
                                    '       Moneda de la cuenta:    - long 1  (0 = Pesos, 1 = Dolares y 3 = Lecop)
                                    '       Nro de la cuenta        - long 11
                                    '       Digito Verif. Bloque 2  - long 1
    Cuenta_Electronica As String    'Numerico long 19 - (nro de tarjeta de debito)
    Tarjeta_1er_Titular As String   'Numerico long 19 -
    Tarjeta_2do_Titular As String   'Numerico long 19 -
    Doc_Tipo As String              'String   long 2  -
    Doc_Nro As String               'Numerico long 11 -
    Filler As String                'String   long 5  -
End Type



Public Sub Insertar_Linea_Segun_Modelo_Estandar(ByVal Linea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Procedimiento llamador de acurdo al modelo
' Autor      : FGZ
' Fecha      : 30/07/2004
' Descripcion:
' Ultima Mod.: 26/04/2011 - Goznalez Nicolás - Se agregó LineaModelo285()
' ---------------------------------------------------------------------------------------------
MyBeginTrans
    Flog.writeline Espacios(Tabulador * 1) & "Comienza Transaccion"

    HuboError = False
    NroColumna = 0
    
    Select Case NroModelo
    Case 211: 'Novedades
        Call LineaModelo_211(Linea)
'    Case 212: 'GTI - Mega Alarmas
'        Call LineaModelo_212(Linea)
    Case 213: 'GTI - Acumulado Diario
        Call LineaModelo_213(Linea)
    Case 214: 'Tickets
        Call LineaModelo_214(Linea)
    Case 215: 'Acumuladores de Agencia
        Call LineaModelo_215(Linea)
'    Case 216: 'Acumuladores de Agencia para Citrusvil
'        Call LineaModelo_216(Linea)
    Case 217: 'Vales
        Call LineaModelo_217(Linea)
'    Case 226: 'Postulantes - Deloitte - Ahora es custom
'        Call LineaModelo_226(Linea)
    Case 227: '
        Call LineaModelo_227(Linea)
    Case 228: '
        'Call LineaModelo_228(Linea)
        'Modelo reservado para el reporte de Declaracion Jurada
    Case 229: 'Prestamos
        Call LineaModelo_229(Linea)
    Case 230: 'Interface de Dias Pedidos de Vacaciones
        Call LineaModelo_230(Linea)
    Case 231: 'Interface Cta Banco Nacion
        Call LineaModelo_231(Linea)
    Case 232: 'Interface Postulantes Bumerang
        'Reservado en otro proceso
    Case 233: 'Interface Licencias
        Call LineaModelo_233(Linea)
    Case 234: 'Exportacion JDE
        'Reservado en otro proceso
    Case 235: 'Interface de Estadisticas de Accidentes
        Call LineaModelo_235(Linea)
    Case 236: 'IMPORTACION DE Totales de Cantidad de BULTOS  a  RH Pro
        Call LineaModelo_236(Linea)
    Case 237: 'IMPORTACION DE Detalle de Cantidad de BULTOS  a  RH Pro
        Call LineaModelo_237(Linea)
    Case 243: 'Interface Cuentas Corrientes Estandar
        Call LineaModelo_243(Linea)
    Case 244: 'Borrador Detallado
        'Reservado en otro proceso
    Case 245: 'Novedades de Ajuste
        Call LineaModelo_245(Linea)
    Case 246: 'Escala
        Call LineaModelo_246(Linea)
    Case 247: 'Interfase Acumulado de Horas TELEPERFORMANCE
        'esta en el modulo de customizaciones
    Case 248: 'infotipos Deloitte
        'Reservado en otro proceso
    Case 249: 'Interfase de Mapeos para Infotipos
        'Reservado en otro proceso
    Case 250: 'Interfase de Acumuladores del Mes (acu_mes)
        Call LineaModelo_250(Linea)
    Case 251: 'Exportación Roche v10
        'Reservado en otro proceso
    Case 252: 'Exportación Indura
        'Reservado en otro proceso
    Case 253: 'Interfase de Importación de Embargos
        Call LineaModelo_253(Linea)
    Case 254: 'Exp. Excel Comp. Ac.
        'Reservado en otro proceso
    Case 255: 'Exportación BPS
        'Reservado en otro proceso
    Case 256: 'Importacion de Engagements
        Call LineaModelo_256(Linea)
    Case 257: 'Interface TTI
        'Reservado en otro proceso
    Case 258: 'Exportación de SIJP
        'Reservado en otro proceso
    Case 259: 'Exportación de SICORE
        'Reservado en otro proceso
    Case 260: 'Exportación de Libro Ley
        'Reservado en otro proceso
    Case 261: 'Importacion de Empresas
        Call LineaModelo_261(Linea)
    Case 262: 'Importación Dias Correspondientes
        Call LineaModelo_262(Linea)
    Case 263: 'POstulantes CARSA
        'Reservado CUSTOM
    Case 264: 'Interface REDEPA
        'Reservado en otro proceso
    Case 265: 'Importación de Documentos
        Call LineaModelo_265(Linea)
    Case 275: 'Postulantes - Estandar
        Call LineaModelo_275(Linea)
    Case 280: 'Interfaz de Bandas Salariales. Version Estandar
        Call LineaModelo_280(Linea)
    Case 281: 'Alta de Remuneraciones
        Call LineaModelo_281(Linea)
    Case 282: 'Complemento de las remuneraciones
        Call LineaModelo_282(Linea)
    Case 285: 'Francos Compensatorios
        Call LineaModelo_285(Linea)
    Case 286: 'Postulantes - Estandar - R3
        Call LineaModelo_286(Linea)
    Case 287: 'Importancion de tarjetas spec
        Call LineaModelo_287(Linea)
    Case 288: 'Novedades del empleado - Distribucion de costos - CAS 22808
        Call LineaModelo_288(Linea)
    Case 289: 'Novedades de ajuste - Distribucion de costos - CAS 22808
        Call LineaModelo_289(Linea)
    Case 290: 'Importación de Diccionario de Competencias
        Call LineaModelo_290(Linea)
    Case 291: 'Importación de los Estudios Formales del Empleado
        Call LineaModelo_291(Linea)
    Case 293: 'Novedades - Periodods por Mes Año
        Call LineaModelo_293(Linea)
    Case 294: 'Importacion de Instituciones (ABM Plano)
        Call LineaModelo_294(Linea)
    Case 295: 'Importacion de Carreras (ABM Plano)
        Call LineaModelo_295(Linea)
    Case 296: 'Importacion de t-registro
        Call LineaModelo_296(Linea)
    Case 297: 'Importacion de estudios formales de los empleados
        Call LineaModelo_297(Linea)
    Case 298: 'Licencias de vacaciones R4
        Call LineaModelo_298(Linea)
    Case 299: 'Importación de Familiares (SIN DOMICILIOS)
        Call LineaModelo_299(Linea, OK)
    Case 312: 'Importacion de Tarjetas
        Call LineaModelo_312(Linea)
    Case 322: 'Dependencia de Estructura
        Call LineaModelo_322(Linea)
    Case 346: 'Novedades Simulación
        Call LineaModelo_346(Linea)
    Case 347: 'Novedades de Ajuste Simulación
        Call LineaModelo_347(Linea)
    Case 354: 'Novedades - Control de Vigencia
        Call LineaModelo_354(Linea)
    Case 355: 'Inserta Manual en WC_MOV_HORARIOS
        Call LineaModelo_355(Linea)
    Case 357: 'Distribucion Contable
        Call LineaModelo_357(Linea)
    Case 359: 'Distribucion Contable
        Call LineaModelo_359(Linea)
    Case 387: 'Importación de Documentos MultiPais
        Call LineaModelo_387(Linea)
    Case 667: 'Importación de Novedades Globales con Vigencia Diaria
        Call LineaModelo_667(Linea)
    Case 669: 'Interface Estudios informales
        Call LineaModelo_669(Linea)
    Case 671: 'Interface Cta Cte (Peru nacionalizaciones)
        Call LineaModelo_671(Linea)
    Case 921: 'Importacion de Postulantes Peru
        Call LineaModelo_921(Linea)
    Case 2000: 'Importacion de Indicadores Individuales
        Call LineaModelo_2000(Linea)
    Case 2001: 'Importacion de Planilla Horaria
        Call LineaModelo_2001(Linea, OK)
    Case 2002: 'Importacion de Horario Cumplido
        Call LineaModelo_2002(Linea)
    Case 2003: 'Interface Licencias con control de días habiles
        Call LineaModelo_2003(Linea)
    Case 2004: 'CAS-31503 - RH Pro (Producto) - Interfase de dias correspondientes R4 (saldo de días correspondientes, periodos aniversario GIV R4)
        Call LineaModelo_2004(Linea)
    Case 2005: 'CAS-28350 - Salto Grande - Custom ADP - Importación masiva de archivos
        Call LineaModelo_2005(Linea)
    Case 2007: 'CAS 32670 - Recibo Digital Uruguay
        Call LineaModelo_2007(Linea)
    Case 2009: 'LED - CAS-28226 - Raffo - CAS-28226 - Raffo - Interface Jefe y Jefe del Jefe (Roles de Evaluación)
        Call LineaModelo_2009(Linea)
    
    Case Else:
        Texto = ": " & "No se encontro el Numero de modelo Estandar, revisar configuracion"
        Call Escribir_Log("flog", 1, 1, Texto, Tabs, Linea)
    End Select
   Flog.writeline Espacios(Tabulador * 1) & "Termina la Transaccion"
MyCommitTrans
If Not HuboError Then
    'MyCommitTrans
    'Flog.Writeline Espacios(Tabulador * 1) & "Transaccion Cometida"
    'Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, Linea)
    Texto = ": " & "Linea Procesada"
    Call Escribir_Log("flog", 1, 1, Texto, Tabs, Linea)
    
Else
    'MyRollbackTrans
    'Flog.Writeline Espacios(Tabulador * 1) & "Transaccion Abortada"
    'Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, Linea)
    Texto = ": " & "Linea Abortada"
    Call Escribir_Log("flog", 1, 1, Texto, Tabs, Linea)
End If
End Sub




Public Sub LineaModelo_211_OLD(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Inserta Novedad segun formato
' Autor      : FGZ
'              El formato es:
'                   Formato 1
'                       Legajo; conccod; tpanro; monto
'                   ó
'                   Formato 2.1
'                       Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta
'                   Formato 2.2
'                       Legajo; conccod; tpanro; monto; FechaDesde
'                   ó
'                   Formato 3
'                       Legajo; conccod; tpanro; monto; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro)

'                   ó
'                   Formato 4
'                       Legajo; conccod; tpanro; monto; tipo motivo; motivo

'                   ó
'                   Formato 5
'                       Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta; tipo motivo; motivo

'                   ó
'                   Formato 6
'                       Legajo; conccod; tpanro; monto; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro); tipo motivo; motivo

'                   ó
'                   Formato 7
'                       Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro); tipo motivo; motivo

' Fecha      : 29/07/2004
' Ultima Mod.: 14/06/2007.Gustavo Ring, se verifica que el usuario tenga permiso
'              en el concepto que se va a ingresar como novedad.
' Ultima Mod.: 07/09/2007. FGZ, Se sacó esto porque no es para el estandar.
'           se verifica que el usuario tenga permiso en el concepto que se va a ingresar como novedad.
' Ultima Mod.: 26/03/2009. Diego Nuñez, Se agregaron los formatos del 4 al 7. Compatibilidad con tipo de motivo y motivo.
' Ultima Mod.: 23/07/2009. Martin Ferraro, PisarNovedad (bool) se cambio por AccionNovedad (int) que permite:
'                                                                                                       -1 Reemplazar Novedades
'                                                                                                       0 Mantiene Novedades
'                                                                                                       1 Sumar Novedades

' ---------------------------------------------------------------------------------------------
Dim pos1 As Long
Dim pos2 As Long
    
Dim Tercero As Long
Dim NroLegajo As Long

Dim ConcNro As Long
Dim ConcCod As String
Dim fornro As Long

Dim tpanro As Long
Dim Aux_Monto As String
Dim Monto As Single
Dim FechaDesde As String
Dim FechaHasta As String

Dim PeriodoDesde
Dim PeriodoHasta
Dim TieneVigencia As Boolean
Dim EsRetroactivo As Boolean

Dim TipoMotivo As String
Dim Motivo As String

Dim Aux As String
Dim Encontro As Boolean

Dim perfsegcon As Integer
Dim tienePermiso As Integer

Dim rs_Empleado As New ADODB.Recordset
Dim rs_Concepto As New ADODB.Recordset
Dim rs_TipoPar As New ADODB.Recordset
Dim rs_NovEmp As New ADODB.Recordset
Dim rs_Periodo As New ADODB.Recordset
Dim rs_con_for_tpa As New ADODB.Recordset
Dim rs_seguridad As New ADODB.Recordset
Dim rs_TipoMotivo As New ADODB.Recordset
Dim rs_cft_resumen As New ADODB.Recordset

' El formato es:
' Formato 1
' Legajo; conccod; tpanro; monto
' ó
' Formato 2.1
' Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta
' ó
' Formato 2.2
' Legajo; conccod; tpanro; monto; FechaDesde
' ó
' Formato 3
' Legajo; conccod; tpanro; monto; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro)
' ó
' Formato 4
' Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro)
    
    On Error GoTo Manejador_De_Error
    Tabs = 1
    
    TieneVigencia = False
    EsRetroactivo = False

    Texto = "Procesando linea " & strLinea
    Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    
    NroColumna = NroColumna + 1
    'Nro de Legajo
    pos1 = 1
    pos2 = InStr(pos1, strLinea, separador)
    If IsNumeric(Mid$(strLinea, pos1, pos2 - pos1)) Then
        NroLegajo = Mid$(strLinea, pos1, pos2 - pos1)
    Else
        Texto = ": " & "El legajo no es numerico "
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call InsertaError(1, 8)
        HuboError = True
        Exit Sub
    End If
    
   
    NroColumna = NroColumna + 1
    'Concepto
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    ConcCod = Mid(strLinea, pos1, pos2 - pos1)

    
    NroColumna = NroColumna + 1
    'Tipo de Parametro
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    tpanro = Mid(strLinea, pos1, pos2 - pos1)
    

    NroColumna = NroColumna + 1
    'Monto
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    If pos2 = 0 Then
        pos2 = Len(strLinea)
        Aux_Monto = Mid(strLinea, pos1, pos2)
        Monto = CSng(Replace(CStr(Aux_Monto), SeparadorDecimal, "."))
    Else
        Aux_Monto = Mid(strLinea, pos1, pos2 - pos1)
        Monto = CSng(Replace(CStr(Aux_Monto), SeparadorDecimal, "."))
        
        'Puede veniar Fecha Desde; fecha Hasta ó Retroactivo, Periodo desde , Periodo Hasta
        pos1 = pos2 + 1
        pos2 = InStr(pos1 + 1, strLinea, separador)
        
        If pos2 > 0 Then
            NroColumna = NroColumna + 1
            Aux = Mid(strLinea, pos1, pos2 - pos1)
            
            If IsDate(Aux) Then
                TieneVigencia = True
                'Fecha desde
                FechaDesde = Mid(strLinea, pos1, pos2 - pos1)
            
                NroColumna = NroColumna + 1
                'Fecha Hasta
                pos1 = pos2 + 1
                pos2 = InStr(pos1, strLinea, separador)
                
                If pos2 > 0 Then
                    FechaHasta = Mid(strLinea, pos1, pos2 - pos1)
                    If IsDate(FechaHasta) Then
                        FechaHasta = CDate(FechaHasta)
                    Else
                        If Not EsNulo(FechaHasta) Then
                            Texto = ": Fecha no valida "
                            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                            Call InsertaError(1, 4)
                            HuboError = True
                            Exit Sub
                        End If
                    End If
                    NroColumna = NroColumna + 1
                    'Marca de Retroactividad
                    pos1 = pos2 + 1
                    pos2 = InStr(pos1 + 1, strLinea, separador)
                    Aux = Mid(strLinea, pos1, pos2 - pos1)
                    If UCase(Aux) = "SI" Then
                        EsRetroactivo = True
                    Else
                        EsRetroactivo = False
                    End If
                    If EsRetroactivo Then
                        'Periodo desde
                        pos1 = pos2 + 1
                        pos2 = InStr(pos1 + 1, strLinea, separador)
                        PeriodoDesde = Mid(strLinea, pos1, pos2 - pos1)
                        'Periodo hasta
                        pos1 = pos2 + 1
                        pos2 = InStr(pos1 + 1, strLinea, separador)
                        If pos2 > 0 Then 'Se especifican tipo de motivo y motivo
                            PeriodoHasta = Mid(strLinea, pos1, pos2 - pos1)
                            'Tipo de motivo
                            pos1 = pos2 + 1
                            pos2 = InStr(pos1 + 1, strLinea, separador)
                            If pos2 > 0 Then
                                TipoMotivo = Mid(strLinea, pos1, pos2 - pos1)
                                pos1 = pos2 + 1
                                pos2 = InStr(pos1 + 1, strLinea, separador)
                                If pos2 > 0 Then
                                    'Motivo
                                    Motivo = Mid(strLinea, pos1, pos2 - pos1)
                                Else
                                    'Motivo
                                    pos2 = Len(strLinea)
                                    Motivo = Mid(strLinea, pos1, pos2)
                                End If
                            Else
                                pos2 = Len(strLinea)
                                TipoMotivo = Mid(strLinea, pos1, pos2)
                                'Motivo
                                Motivo = ""
                            End If
                        Else
                            pos2 = Len(strLinea)
                            PeriodoHasta = Mid(strLinea, pos1, pos2)
                        End If
                    Else 'el siguiente dato es el tipo de motivo
                        TipoMotivo = Aux
                        pos1 = pos2 + 1
                        pos2 = InStr(pos1 + 1, strLinea, separador)
                        If pos2 > 0 Then 'Se especifican tipo de motivo y motivo
                            'Motivo
                            Motivo = Mid(strLinea, pos1, pos2 - pos1)
                        Else
                            pos2 = Len(strLinea)
                            Motivo = Mid(strLinea, pos1, pos2)
                        End If
                    End If
                    
                Else
                    pos2 = Len(strLinea)
                    FechaHasta = Mid(strLinea, pos1, pos2)
                    TieneVigencia = True
                End If
            Else
                If UCase(Aux) = "SI" Then
                    EsRetroactivo = True
                Else
                    EsRetroactivo = False
                End If
                If EsRetroactivo Then
                    'Periodo desde
                    pos1 = pos2 + 1
                    pos2 = InStr(pos1 + 1, strLinea, separador)
                    PeriodoDesde = Mid(strLinea, pos1, pos2 - pos1)
                    'Periodo hasta
                    pos1 = pos2 + 1
                    pos2 = InStr(pos1 + 1, strLinea, separador)
                    If pos2 > 0 Then 'Se especifican tipo de motivo y motivo
                        PeriodoHasta = Mid(strLinea, pos1, pos2 - pos1)
                        'Tipo de motivo
                        pos1 = pos2 + 1
                        pos2 = InStr(pos1 + 1, strLinea, separador)
                        If pos2 > 0 Then
                            TipoMotivo = Mid(strLinea, pos1, pos2 - pos1)
                            pos1 = pos2 + 1
                            pos2 = InStr(pos1 + 1, strLinea, separador)
                            If pos2 > 0 Then
                                'Motivo
                                Motivo = Mid(strLinea, pos1, pos2 - pos1)
                            Else
                                'Motivo
                                pos2 = Len(strLinea)
                                Motivo = Mid(strLinea, pos1, pos2)
                            End If
                        Else
                            pos2 = Len(strLinea)
                            TipoMotivo = Mid(strLinea, pos1, pos2)
                            'Motivo
                            Motivo = ""
                        End If
                    Else
                        pos2 = Len(strLinea)
                        PeriodoHasta = Mid(strLinea, pos1, pos2)
                    End If
                Else 'el siguiente dato es el tipo de motivo
                    TipoMotivo = Aux
                    pos1 = pos2 + 1
                    pos2 = InStr(pos1 + 1, strLinea, separador)
                    If pos2 > 0 Then 'Se especifican tipo de motivo y motivo
                        'Motivo
                        Motivo = Mid(strLinea, pos1, pos2 - pos1)
                    Else
                        pos2 = Len(strLinea)
                        Motivo = Mid(strLinea, pos1, pos2)
                    End If
                End If
            End If
        Else
            If Not pos1 >= Len(strLinea) Then
                'Viene Vigencia con fecha desde y sin fecha hasta
                pos2 = Len(strLinea)
                FechaDesde = Mid(strLinea, pos1, pos2)
                TieneVigencia = True
                FechaHasta = ""
            End If
        End If
    End If



' ====================================================================
'   Validar los parametros Levantados



'Que exista el legajo
StrSql = "SELECT * FROM empleado where empleg = " & NroLegajo
OpenRecordset StrSql, rs_Empleado
If rs_Empleado.EOF Then
    Texto = ": " & "No se encontro el legajo " & NroLegajo
    NroColumna = 1
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(1, 8)
    HuboError = True
    Exit Sub
Else
    Tercero = rs_Empleado!Ternro
End If


'Que exista el concepto
StrSql = "SELECT * FROM concepto WHERE conccod = '" & ConcCod & "'"
'StrSql = StrSql & " OR conccod = '" & Conccod & "'"
OpenRecordset StrSql, rs_Concepto
If rs_Concepto.EOF Then
    Texto = ": " & "No se encontro el Concepto " & ConcCod
    NroColumna = 2
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(2, 10)
    HuboError = True
    Exit Sub
Else
    ConcNro = rs_Concepto!ConcNro
    fornro = rs_Concepto!fornro
End If

'Que exista el tipo de Parametro
StrSql = "SELECT * FROM tipopar WHERE tpanro = " & tpanro
OpenRecordset StrSql, rs_TipoPar

If rs_TipoPar.EOF Then
    Texto = ": " & "No se encontro el Tipo de Parametro " & tpanro
    NroColumna = 3
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(3, 11)
    HuboError = True
    Exit Sub
End If


'FGZ - 27/01/2004
'Faltaria revisar que el par concepto-parametro se resuelva por novedad
StrSql = "SELECT * FROM con_for_tpa "
StrSql = StrSql & " WHERE concnro = " & ConcNro
StrSql = StrSql & " AND fornro =" & fornro
StrSql = StrSql & " AND tpanro =" & tpanro
OpenRecordset StrSql, rs_con_for_tpa

If rs_con_for_tpa.EOF Then
    Texto = ": " & "El parametro " & tpanro & " no esta asociado a la formula del concepto " & ConcCod
    NroColumna = 3
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(3, 11)
    HuboError = True
    Exit Sub
Else
    Encontro = False
    Do While Not Encontro And Not rs_con_for_tpa.EOF
        If Not CBool(rs_con_for_tpa!cftauto) Then
            Encontro = True
        End If
        rs_con_for_tpa.MoveNext
    Loop
    If Not Encontro Then
        Texto = ": " & "El parametro " & tpanro & " del concepto " & ConcCod & " no se resuelve por novedad "
        NroColumna = 3
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call InsertaError(3, 11)
        HuboError = True
        Exit Sub
    End If
End If


If EsRetroactivo Then
  'Chequeo que los periodos sean validos
  'Chequeo Periodo Desde
  
  StrSql = "SELECT * FROM periodo WHERE pliqnro = " & PeriodoDesde
  If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
  OpenRecordset StrSql, rs_Periodo
  If rs_Periodo.EOF Then
      Texto = ": " & "Periodo Desde Invalido " & PeriodoDesde
      NroColumna = 6
      Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
      Call InsertaError(6, 36)
      HuboError = True
      Exit Sub
  End If
  
  'Chequeo Periodo Hasta
  StrSql = "SELECT * FROM periodo WHERE pliqnro = " & PeriodoHasta
  If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
  OpenRecordset StrSql, rs_Periodo
  If rs_Periodo.EOF Then
      Texto = ": " & "Periodo Hasta Invalido " & PeriodoHasta
      NroColumna = 7
      Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
      Call InsertaError(7, 36)
      HuboError = True
      Exit Sub
  End If
End If

'=============================================================
'Si viene el tipo de motivo cargo ese y valido que exista sino viene, busco si hay un default
If Len(TipoMotivo) = 0 Or (TipoMotivo = "N/A") Then
    'Verifico si hay un default
    StrSql = "SELECT tipmotnro, motivo FROM cft_resumen where concnro = " & ConcNro
    StrSql = StrSql & " AND tpanro = " & tpanro
    OpenRecordset StrSql, rs_cft_resumen
    If Not rs_cft_resumen.EOF Then
        TipoMotivo = IIf(IsNull(rs_cft_resumen!tipmotnro), "0", rs_cft_resumen!tipmotnro)
    End If
    rs_cft_resumen.Close
Else
    'Valido contra BD que exista el motivo
    StrSql = "SELECT * FROM tipomotivo where tipmotnro = " & TipoMotivo
    OpenRecordset StrSql, rs_TipoMotivo
    If rs_TipoMotivo.EOF Then
        Texto = ": " & "No se encontro el tipo de motivo " & TipoMotivo
        NroColumna = 13
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call InsertaError(13, 116)
        HuboError = True
        Exit Sub
    End If
    rs_TipoMotivo.Close
End If

'Si viene motivo cargo ese, sino viene, busco si hay un default
If Len(Motivo) = 0 Or (Motivo = "N/A") Then
    'Verifico si hay un default
    StrSql = "SELECT tipmotnro, motivo FROM cft_resumen where concnro = " & ConcNro
    StrSql = StrSql & " AND tpanro = " & tpanro
    OpenRecordset StrSql, rs_cft_resumen
    If Not rs_cft_resumen.EOF Then
        Motivo = IIf(IsNull(rs_cft_resumen!Motivo), "", rs_cft_resumen!Motivo)
    End If
    rs_cft_resumen.Close
End If

If Len(TipoMotivo) = 0 Then TipoMotivo = "null"
If TipoMotivo = "N/A" Then TipoMotivo = "null"
If TipoMotivo = "0" Then TipoMotivo = "null"
If Motivo = "N/A" Then Motivo = ""

'=============================================================
'Busco si existe la Novedad

  If Not TieneVigencia Then
    StrSql = "SELECT * FROM novemp WHERE "
    StrSql = StrSql & " concnro = " & ConcNro
    StrSql = StrSql & " AND tpanro = " & tpanro
    StrSql = StrSql & " AND empleado = " & Tercero
    StrSql = StrSql & " AND (nevigencia = -1 OR nevigencia = 0) "
    StrSql = StrSql & " ORDER BY nevigencia "
    If rs_NovEmp.State = adStateOpen Then rs_NovEmp.Close
    OpenRecordset StrSql, rs_NovEmp
    If Not rs_NovEmp.EOF Then
        If CBool(rs_NovEmp!nevigencia) Then
            Texto = ": " & "No se puede insertar la novedad porque ya existe una con Vigencia"
            NroColumna = 1
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            Call InsertaError(1, 94)
            HuboError = True
            Exit Sub
        Else
            'Existe una novedad pero sin vigencia ==> Actualizo
            
            Select Case CInt(AccionNovedad)
                Case -1: 'Actualizo la Novedad
                    If Not EsRetroactivo Then
                        StrSql = "UPDATE novemp SET nevalor = " & Monto
                            StrSql = StrSql & " , tipmotnro =  " & TipoMotivo & _
                            " , motivo =  '" & Motivo & "'"
                        StrSql = StrSql & " WHERE concnro = " & ConcNro & _
                                 " AND tpanro = " & tpanro & _
                                 " AND empleado = " & Tercero
                    Else
                        StrSql = "UPDATE novemp SET nevalor = " & Monto & _
                                 " , nepliqdesde =  " & PeriodoDesde & _
                                 " , nepliqhasta =  " & PeriodoHasta & _
                                 " , tipmotnro =  " & TipoMotivo & _
                                 " , motivo =  '" & Motivo & "'"
                        StrSql = StrSql & " WHERE concnro = " & ConcNro & _
                                 " AND tpanro = " & tpanro & _
                                 " AND empleado = " & Tercero
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = "Novedad Actualizada "
                    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                    'Flog.Writeline Espacios(Tabulador * 1) & "Novedad Actualizada "
                Case 0:
                    'Mantiene Novedades
                    Texto = "No se insertó la novedad. Ya existe y no se pisa."
                    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                Case 1:
                    'Suma Novedades
                    If Not EsRetroactivo Then
                        StrSql = "UPDATE novemp SET nevalor = nevalor + " & Monto
                        StrSql = StrSql & " , tipmotnro =  " & TipoMotivo
                        StrSql = StrSql & " , motivo =  '" & Motivo & "'"
                        StrSql = StrSql & " WHERE concnro = " & ConcNro & _
                                 " AND tpanro = " & tpanro & _
                                 " AND empleado = " & Tercero
                    Else
                        StrSql = "UPDATE novemp SET nevalor = nevalor + " & Monto & _
                                 " , nepliqdesde =  " & PeriodoDesde & _
                                 " , nepliqhasta =  " & PeriodoHasta
                        StrSql = StrSql & " , tipmotnro =  " & TipoMotivo & _
                        " , motivo =  '" & Motivo & "'"
                        StrSql = StrSql & " WHERE concnro = " & ConcNro & _
                                 " AND tpanro = " & tpanro & _
                                 " AND empleado = " & Tercero
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = "Novedad Sumada "
                    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
            End Select

        End If
      Else
        'Inserto
        If Not EsRetroactivo Then
            StrSql = "INSERT INTO novemp (" & _
                     "empleado,concnro,tpanro,nevalor,nevigencia"
            StrSql = StrSql & ",tipmotnro,motivo"
            StrSql = StrSql & ") VALUES (" & Tercero & _
                     "," & ConcNro & _
                     "," & tpanro & _
                     "," & Monto & _
                     ",0"
            StrSql = StrSql & "," & TipoMotivo & _
            ",'" & Motivo & "'"
            StrSql = StrSql & " )"
        Else
            StrSql = "INSERT INTO novemp (" & _
                     "empleado,concnro,tpanro,nevalor,nevigencia,nepliqdesde,nepliqhasta "
            StrSql = StrSql & ",tipmotnro,motivo"
            StrSql = StrSql & ") VALUES (" & Tercero & _
                     "," & ConcNro & _
                     "," & tpanro & _
                     "," & Monto & _
                     "," & CLng(TieneVigencia) & _
                     "," & PeriodoDesde & _
                     "," & PeriodoHasta
            StrSql = StrSql & "," & TipoMotivo & _
            ",'" & Motivo & "'"
            StrSql = StrSql & " )"
        End If
        objConn.Execute StrSql, , adExecuteNoRecords
        'Flog.Writeline Espacios(Tabulador * 1) & "Novedad insertada "
        Texto = "Novedad insertada "
        Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
    End If
  Else 'Tiene Vigencia
    'Reviso que no se pise
    StrSql = "SELECT * FROM novemp WHERE "
    StrSql = StrSql & " concnro = " & ConcNro
    StrSql = StrSql & " AND tpanro = " & tpanro
    StrSql = StrSql & " AND empleado = " & Tercero
    StrSql = StrSql & " AND (nevigencia = 0 "
    StrSql = StrSql & " OR (nevigencia = -1 "
    If Not EsNulo(FechaHasta) Then
        StrSql = StrSql & " AND (nedesde <= " & ConvFecha(FechaHasta)
        StrSql = StrSql & " AND nehasta >= " & ConvFecha(FechaDesde) & ")"
        StrSql = StrSql & " OR  (nedesde <= " & ConvFecha(FechaHasta)
        StrSql = StrSql & " AND nehasta is null )))"
    Else
        StrSql = StrSql & " AND nehasta is null OR nehasta >= " & ConvFecha(FechaDesde) & "))"
    End If
    If rs_NovEmp.State = adStateOpen Then rs_NovEmp.Close
    OpenRecordset StrSql, rs_NovEmp
    
    If Not rs_NovEmp.EOF Then
        If CBool(rs_NovEmp!nevigencia) Then
            
            'Existe/n novedad/es con vigencia ==>
            If PisaNovedad Then 'Borro las que haya e ingreso la nueva novedades
                Do Until rs_NovEmp.EOF
                    StrSql = "DELETE FROM novemp WHERE nenro = " & rs_NovEmp!nenro
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    rs_NovEmp.MoveNext
                Loop
                
                If Not EsRetroactivo Then
                    StrSql = "INSERT INTO novemp ("
                    StrSql = StrSql & "empleado,concnro,tpanro,nevalor,nevigencia,nedesde"
                    If Not EsNulo(FechaHasta) Then
                        StrSql = StrSql & ",nehasta"
                    End If
                    StrSql = StrSql & ",tipmotnro,motivo"
                    StrSql = StrSql & ") VALUES (" & Tercero
                    StrSql = StrSql & "," & ConcNro
                    StrSql = StrSql & "," & tpanro
                    StrSql = StrSql & "," & Monto
                    StrSql = StrSql & ",-1"
                    StrSql = StrSql & "," & ConvFecha(FechaDesde)
                    If Not EsNulo(FechaHasta) Then
                        StrSql = StrSql & "," & ConvFecha(FechaHasta)
                    End If
                    StrSql = StrSql & "," & TipoMotivo & _
                    ",'" & Motivo & "'"
                    StrSql = StrSql & " )"
                Else
                    StrSql = "INSERT INTO novemp ("
                    StrSql = StrSql & "empleado,concnro,tpanro,nevalor,nevigencia,nedesde"
                    If Not EsNulo(FechaHasta) Then
                        StrSql = StrSql & ",nehasta"
                    End If
                    StrSql = StrSql & ",nepliqdesde,nepliqhasta"
                    StrSql = StrSql & ",tipmotnro,motivo"
                    StrSql = StrSql & ") VALUES (" & Tercero
                    StrSql = StrSql & "," & ConcNro
                    StrSql = StrSql & "," & tpanro
                    StrSql = StrSql & "," & Monto
                    StrSql = StrSql & ",-1"
                    StrSql = StrSql & "," & ConvFecha(FechaDesde)
                    If Not EsNulo(FechaHasta) Then
                        StrSql = StrSql & "," & ConvFecha(FechaHasta)
                    End If
                    StrSql = StrSql & "," & PeriodoDesde
                    StrSql = StrSql & "," & PeriodoHasta
                    StrSql = StrSql & "," & TipoMotivo & _
                    ",'" & Motivo & "'"
                    StrSql = StrSql & " )"
                End If
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = "Novedad Actualizada "
                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
            Else
                Texto = ": " & "No se puede insertar la novedad, las vigencias se superponen"
                NroColumna = 1
                Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                InsertaError 1, 95
                HuboError = True
                Exit Sub
            End If
        Else
            Texto = ": " & "No se puede insertar la novedad porque ya existe una sin Vigencia"
            NroColumna = 1
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            Call InsertaError(1, 95)
            HuboError = True
            Exit Sub
        End If
    Else
        If Not EsRetroactivo Then
            StrSql = "INSERT INTO novemp ("
            StrSql = StrSql & "empleado,concnro,tpanro,nevalor,nevigencia,nedesde"
            If Not EsNulo(FechaHasta) Then
                StrSql = StrSql & ",nehasta"
            End If
            StrSql = StrSql & ",tipmotnro,motivo"
            StrSql = StrSql & ") VALUES (" & Tercero
            StrSql = StrSql & "," & ConcNro
            StrSql = StrSql & "," & tpanro
            StrSql = StrSql & "," & Monto
            StrSql = StrSql & ",-1"
            StrSql = StrSql & "," & ConvFecha(FechaDesde)
            If Not EsNulo(FechaHasta) Then
                StrSql = StrSql & "," & ConvFecha(FechaHasta)
            End If
            StrSql = StrSql & "," & TipoMotivo & _
            ",'" & Motivo & "'"
            StrSql = StrSql & " )"
        Else
            StrSql = "INSERT INTO novemp ("
            StrSql = StrSql & "empleado,concnro,tpanro,nevalor,nevigencia,nedesde"
            If Not EsNulo(FechaHasta) Then
                StrSql = StrSql & ",nehasta"
            End If
            StrSql = StrSql & ",nepliqdesde,nepliqhasta"
            StrSql = StrSql & ",tipmotnro,motivo"
            StrSql = StrSql & ") VALUES (" & Tercero
            StrSql = StrSql & "," & ConcNro
            StrSql = StrSql & "," & tpanro
            StrSql = StrSql & "," & Monto
            StrSql = StrSql & ",-1"
            StrSql = StrSql & "," & ConvFecha(FechaDesde)
            If Not EsNulo(FechaHasta) Then
                StrSql = StrSql & "," & ConvFecha(FechaHasta)
            End If
            StrSql = StrSql & "," & PeriodoDesde
            StrSql = StrSql & "," & PeriodoHasta
            StrSql = StrSql & "," & TipoMotivo & _
            ",'" & Motivo & "'"
            StrSql = StrSql & " )"
        End If
        objConn.Execute StrSql, , adExecuteNoRecords
        'Flog.Writeline Espacios(Tabulador * 1) & "Novedad insertada "
        Texto = "Novedad insertada "
        Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
    End If
  End If







Fin:
'Cierro todo y libero
If rs_NovEmp.State = adStateOpen Then rs_NovEmp.Close
If rs_Empleado.State = adStateOpen Then rs_Empleado.Close
If rs_Concepto.State = adStateOpen Then rs_Concepto.Close
If rs_TipoPar.State = adStateOpen Then rs_TipoPar.Close
If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
If rs_con_for_tpa.State = adStateOpen Then rs_con_for_tpa.Close

Set rs_NovEmp = Nothing
Set rs_Empleado = Nothing
Set rs_Concepto = Nothing
Set rs_TipoPar = Nothing
Set rs_Periodo = Nothing
Set rs_con_for_tpa = Nothing
Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    Texto = Err.Description
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(1, 7)
    GoTo Fin
End Sub

Public Sub LineaModelo_2004(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Interface de Dias Correspondientes de Vacaciones Periodo Aniversario GIV R4
' Autor      : LED
' Ultima Mod.:
' ---------------------------------------------------------------------------------------------
' Formato:
'   Legajo; Año; Modelo de Vacaciones; Cantidad de dias
'      1  ;2009;        1            ;       3
' ---------------------------------------------------------------------------------------------

Dim pos1            As Long
Dim pos2            As Long

Dim empleg As Long
Dim Anio As Long
Dim modvacnro As Long
Dim fecDesde As String
Dim fecHasta As String
Dim campos
Dim I As Integer

Dim TipoVac As Long
Dim vacnro As Long
Dim vdetnro As Long
Dim Tercero As Long
Dim Dias_Correspondientes As Double
Dim vdiacornro As Long
Dim tipoPeriodo As Integer

Dim rs_datos As New ADODB.Recordset
Dim rs_Empleado As New ADODB.Recordset
Dim rs_Periodos_Vac As New ADODB.Recordset


'Actio el Manejador de Errores Local
On Error GoTo Manejador_De_Error

    campos = Split(strLinea, separador)
    
    For I = 0 To UBound(campos)
        Select Case CLng(I)
            Case 0: 'Nro de Legajo
                If Trim(campos(I)) <> "" And Trim(campos(I)) <> "N/A" Then
                    If IsNumeric(campos(I)) Then
                        empleg = campos(I)
                    Else
                        Texto = "El legajo debe ser numerico, legajo leido: " & campos(I)
                        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                        InsertaError 1, 8
                        HuboError = True
                        Exit Sub
                    End If
                Else
                    Texto = "Empleado no informado, campo obligatorio"
                    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                    InsertaError 1, 8
                    HuboError = True
                    Exit Sub
                End If
                
            Case 1: 'año
                If Trim(campos(I)) <> "" And Trim(campos(I)) <> "N/A" Then
                    If IsNumeric(campos(I)) Then
                        Anio = campos(I)
                    Else
                        Texto = "El año debe ser numerico, año leido: " & campos(I)
                        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                        InsertaError 2, 44
                        HuboError = True
                        Exit Sub
                    End If
                Else
                    Texto = "Año no informado, campo obligatorio"
                    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                    InsertaError 2, 44
                    HuboError = True
                    Exit Sub
                End If
            
            Case 2: 'Modelo de vacaciones
                If Trim(campos(I)) <> "" And Trim(campos(I)) <> "N/A" Then
                    If IsNumeric(campos(I)) Then
                        modvacnro = campos(I)
                    Else
                        Texto = "El modelo de vacaciones debe ser numerico, modelo leido: " & campos(I)
                        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                        InsertaError 3, 3
                        HuboError = True
                        Exit Sub
                    End If
                Else
                    Texto = "Modelo de Vacaciones no informado, campo obligatorio"
                    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                    InsertaError 3, 25
                    HuboError = True
                    Exit Sub
                End If
                
            Case 3: 'Cantidad de Dias
                If Trim(campos(I)) <> "" And Trim(campos(I)) <> "N/A" Then
                    If IsNumeric(campos(I)) Then
                        Dias_Correspondientes = CDbl(Replace(CStr(campos(I)), SeparadorDecimal, "."))
                    Else
                        Texto = "La cantidad de dias debe ser numerica, dato leido: " & campos(I)
                        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                        InsertaError 4, 3
                        HuboError = True
                        Exit Sub
                    End If
                Else
                    Texto = "Cantidad de dias no informada, campo obligatorio"
                    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                    InsertaError 4, 25
                    HuboError = True
                    Exit Sub
                End If
            
            Case 4: 'Fecha desde - solo para periodos calendario
                fecDesde = campos(I)
            Case 5: 'Fecha hasta - solo para periodos calendario
                fecHasta = campos(I)
        End Select
        
    Next
    

    '-----------------------------------------------------------------------------------------------
    'Validaciones
    
    'Que exista el legajo
    StrSql = "SELECT ternro FROM empleado where empleg = " & empleg
    OpenRecordset StrSql, rs_Empleado
    If Not rs_Empleado.EOF Then
        Tercero = rs_Empleado!Ternro
    Else
        Flog.writeline Espacios(Tabulador * 2) & "No se encontró el legajo: " & empleg
        InsertaError 1, 8
        HuboError = True
        Exit Sub
    End If
    
        'Busco si el modelo de vacaciones es aniversario o calendario y valido que exista
    StrSql = " SELECT modvactipoperiodo FROM vac_modelos WHERE modvacnro = " & modvacnro
    OpenRecordset StrSql, rs_datos
    If Not rs_datos.EOF Then
        tipoPeriodo = rs_datos!modvactipoperiodo
    Else
        Texto = "No se encontró el modelo de vacaciones, tipo: " & modvacnro
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        InsertaError 3, 108
        HuboError = True
        Exit Sub
    End If
    
    If CLng(tipoPeriodo) = 1 Then
        If Trim(fecDesde) = "" Or Trim(fecHasta) = "" Then
            Texto = "El modelo esta configurado con periodo calendario se deben informar fecha desde y hasta."
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            InsertaError 4, 41
            HuboError = True
            Exit Sub
        Else
            If Not IsDate(fecDesde) Then
                Texto = "Fecha desde incorrecta."
                Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                InsertaError 4, 4
                HuboError = True
                Exit Sub
            
            End If
            
            If Not IsDate(fecHasta) Then
                Texto = "Fecha hasta incorrecta."
                Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                InsertaError 5, 4
                HuboError = True
                Exit Sub
            
            End If
            
            If CDate(fecDesde) > CDate(fecHasta) Then
                Texto = "Fecha desde no puede ser mayor a la fecha hasta."
                Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                InsertaError 4, 47
                HuboError = True
                Exit Sub
            End If
        End If
        
    End If
    
    If CLng(tipoPeriodo) = 2 Then
        'Busco la fase del empleado para armar las fechas del periodo de Vacaciones
        fecDesde = "01/01/" & Anio
        fecHasta = "31/12/" & Anio
        StrSql = " SELECT altfec FROM fases WHERE empleado = " & Tercero & _
                 " AND ((altfec <= " & ConvFecha(fecDesde) & " AND (bajfec>= " & ConvFecha(fecHasta) & _
                 " OR bajfec >= " & ConvFecha(fecDesde) & " OR bajfec is null)) " & _
                 " OR (altfec >= " & ConvFecha(fecDesde) & " AND (altfec <= " & ConvFecha(fecHasta) & "))) " & _
                 " ORDER BY altfec DESC "
        OpenRecordset StrSql, rs_datos
        If Not rs_datos.EOF Then
            fecDesde = Right("00" & Day(rs_datos!altfec), 2) & "/" & Right("00" & Month(rs_datos!altfec), 2) & "/" & Anio
            fecHasta = DateAdd("d", -1, DateAdd("yyyy", 1, fecDesde))
        End If
    End If
    
    'Busco el tipo de vacacion del empleado
    StrSql = " SELECT gti_pol_det_param.polparamvalor FROM dbo.gti_cabpolitica " & _
             " INNER JOIN dbo.gti_alcanpolitica ON dbo.gti_cabpolitica.cabpolnro = dbo.gti_alcanpolitica.cabpolnro " & _
             " INNER JOIN dbo.gti_detpolitica ON dbo.gti_alcanpolitica.detpolnro = dbo.gti_detpolitica.detpolnro " & _
             " INNER JOIN gti_pol_det_param ON gti_pol_det_param.detpolnro = gti_detpolitica.detpolnro and gti_pol_det_param.polparamnro = 10 " & _
             " WHERE dbo.gti_cabpolitica.cabpolnivel = 1501 And dbo.gti_alcanpolitica.alcpolnivel = 3 And dbo.gti_alcanpolitica.alcpolorigen = " & Tercero & _
             " AND dbo.gti_cabpolitica.cabpolestado = -1 AND dbo.gti_alcanpolitica.alcpolestado = -1 "
    OpenRecordset StrSql, rs_datos
    If rs_datos.EOF Then
        StrSql = " SELECT gti_pol_det_param.polparamvalor FROM gti_cabpolitica " & _
                 " INNER JOIN gti_alcanpolitica ON gti_cabpolitica.cabpolnro = gti_alcanpolitica.cabpolnro " & _
                 " INNER JOIN gti_detpolitica ON gti_alcanpolitica.detpolnro = gti_detpolitica.detpolnro " & _
                 " INNER JOIN gti_pol_det_param ON gti_pol_det_param.detpolnro = gti_detpolitica.detpolnro and gti_pol_det_param.polparamnro = 10 " & _
                 " INNER JOIN his_estructura ON gti_alcanpolitica.alcpolorigen = his_estructura.estrnro " & _
                 " INNER JOIN alcance_tEstr ON his_estructura.tenro = alcance_tEstr.tenro " & _
                 " INNER JOIN empleado ON empleado.ternro = his_estructura.ternro " & _
                 " Where gti_cabpolitica.cabpolnivel = 1501 " & _
                 " AND gti_alcanpolitica.alcpolnivel = 2 AND gti_cabpolitica.cabpolestado = -1 " & _
                 " AND gti_alcanpolitica.alcpolestado = -1 AND alcance_testr.tanro = 1 " & _
                 " AND empleado.ternro = " & Tercero & " And (his_estructura.htetdesde <= " & ConvFecha(fecHasta) & ") " & _
                 " AND ((" & ConvFecha(fecHasta) & " <= his_estructura.htethasta) or (his_estructura.htethasta is null)) " & _
                 " ORDER BY alcance_testr.AlteOrden Asc "
        OpenRecordset StrSql, rs_datos
        If rs_datos.EOF Then
            StrSql = " SELECT gti_pol_det_param.polparamvalor FROM gti_cabpolitica " & _
                     " INNER JOIN gti_alcanpolitica ON gti_cabpolitica.cabpolnro = gti_alcanpolitica.cabpolnro " & _
                     " INNER JOIN gti_detpolitica ON gti_alcanpolitica.detpolnro = gti_detpolitica.detpolnro " & _
                     " INNER JOIN gti_pol_det_param ON gti_pol_det_param.detpolnro = gti_detpolitica.detpolnro and gti_pol_det_param.polparamnro = 10 " & _
                     " WHERE gti_cabpolitica.cabpolnivel = 1501 And gti_alcanpolitica.alcpolnivel = 1 " & _
                     " AND gti_cabpolitica.cabpolestado = -1 And gti_alcanpolitica.alcpolestado = -1 "
            OpenRecordset StrSql, rs_datos
            If Not rs_datos.EOF Then
                TipoVac = rs_datos!polparamvalor
            Else
                Flog.writeline Espacios(Tabulador * 2) & "No se encontró la configuracion de tipo de vacaciones en la politica 1501 "
            End If
        Else
            TipoVac = rs_datos!polparamvalor
        End If
    Else
        TipoVac = rs_datos!polparamvalor
    End If
    
    'Que exista el tipo de vacaciones
    StrSql = "SELECT tipvacnro FROM tipovacac where tipvacnro = " & TipoVac
    OpenRecordset StrSql, rs_datos
    If rs_datos.EOF Then
        Flog.writeline Espacios(Tabulador * 2) & "No se encontró el tipo de vacaciones " & TipoVac
        InsertaError 3, 108
        HuboError = True
        Exit Sub
    End If
    

    
    'Verifico si existe el periodos de vacacion para el año y modelo
    StrSql = " SELECT vacnro FROM vacacion WHERE vacanio = " & Anio & " AND vacmodelo = " & modvacnro
    OpenRecordset StrSql, rs_datos
    If rs_datos.EOF Then
        
        'El modelo no exite lo creamos
        StrSql = " INSERT INTO vacacion (vacdesc,vacsist,vacanio,empnro,vacestado,alcannivel,vacmodelo,vactipo) VALUES " & _
                 " ('" & Year(fecDesde) & " - " & Year(fecHasta) & "',0," & Anio & ",0,-1,3," & modvacnro & ",2) "
        objConn.Execute StrSql, , adExecuteNoRecords
        vacnro = getLastIdentity(objConn, "vacacion")
        
        Flog.writeline Espacios(Tabulador * 2) & "Periodo de vacaciones creado, año: " & Anio
    Else
        vacnro = rs_datos!vacnro
    End If
    
    If CLng(tipoPeriodo) = 1 Then 'tipo periodo calendario
        'controlo que no exista detalle de vacaciones
        StrSql = " SELECT vdetnro FROM vacacion_detalle WHERE vacnro = " & vacnro
        OpenRecordset StrSql, rs_datos
        Do While Not rs_datos.EOF
            StrSql = " DELETE FROM vacacion_detalle WHERE vdetnro = " & rs_datos!vdetnro
            objConn.Execute StrSql, , adExecuteNoRecords
            rs_datos.MoveNext
        Loop
        
        'inserto en vacacion detalle
        StrSql = " INSERT INTO vacacion_detalle (vacnro,vdetfdesde,vdetfhasta,ternro) VALUES " & _
                 " (" & vacnro & "," & ConvFecha(fecDesde) & "," & ConvFecha(fecHasta) & ",0) "
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline Espacios(Tabulador * 2) & "Detalle del periodo de vacaciones creado, año: " & Anio
        vdetnro = getLastIdentity(objConn, "vacacion_detalle")
    End If
    
    If CLng(tipoPeriodo) = 2 Then 'tipo periodo aniversario
        'controlo que no exista detalle de vacaciones
        StrSql = " SELECT vdetnro FROM vacacion_detalle WHERE vacnro = " & vacnro & " AND ternro = " & Tercero
        OpenRecordset StrSql, rs_datos
        Do While Not rs_datos.EOF
            StrSql = " DELETE FROM vacacion_detalle WHERE vdetnro = " & rs_datos!vdetnro
            objConn.Execute StrSql, , adExecuteNoRecords
            rs_datos.MoveNext
        Loop
        
        'inserto en vacacion detalle
        StrSql = " INSERT INTO vacacion_detalle (vacnro,vdetfdesde,vdetfhasta,ternro) VALUES " & _
                 " (" & vacnro & "," & ConvFecha(fecDesde) & "," & ConvFecha(fecHasta) & "," & Tercero & ") "
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline Espacios(Tabulador * 2) & "Detalle del periodo de vacaciones creado, año: " & Anio
        vdetnro = getLastIdentity(objConn, "vacacion_detalle")
    
    End If
        
    'Busco los dias correspondientes
    StrSql = " SELECT vdiacornro FROM vacdiascor WHERE vacdiascor.vacnro = " & vacnro & _
             " AND vacdiascor.ternro = " & Tercero
    OpenRecordset StrSql, rs_Periodos_Vac
        
    If Not rs_Periodos_Vac.EOF Then
        StrSql = " DELETE FROM vacdiascor_detalle WHERE vdiascornro = " & rs_Periodos_Vac!vdiacornro & _
                 " AND ternro = " & Tercero & " AND vacnro = " & vacnro & " AND venc = 0 "
        objConn.Execute StrSql, , adExecuteNoRecords
        
        'Elimino la vacación existente
        StrSql = "DELETE FROM vacdiascor WHERE vacdiascor.vacnro = " & vacnro & " AND vacdiascor.ternro = " & Tercero
        objConn.Execute StrSql, , adExecuteNoRecords
    End If
        
    'Busco los dias correspondientes tabla detalle
    StrSql = " INSERT INTO vacdiascor (vacnro,ternro,vdiascorcant,vdiapednro,vdiascormanual,tipvacnro,vdiasfechasta) VALUES " & _
             " ( " & vacnro & "," & Tercero & "," & Dias_Correspondientes & ",0,-1," & TipoVac & "," & ConvFecha(fecHasta) & ")"
    objConn.Execute StrSql, , adExecuteNoRecords
    vdiacornro = getLastIdentity(objConn, "vacdiascor")
    Flog.writeline Espacios(Tabulador * 2) & "Dias correspondientes insertado"
    
    StrSql = " INSERT INTO vacdiascor_detalle (ternro,vacnro,vdetnro,vdiascorcant,vdiascorcantcorr,venc) VALUES " & _
             " ( " & Tercero & "," & vacnro & "," & vdetnro & "," & Dias_Correspondientes & "," & Dias_Correspondientes & ",0)"
    objConn.Execute StrSql, , adExecuteNoRecords
    Flog.writeline Espacios(Tabulador * 2) & "Dias correspondientes detalle insertado"
        
    
        
Fin:

'Desactivo el manejador de Errores Local
On Error GoTo 0

Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    If InStr(1, Err.Description, "ODBC") > 0 Then
        'Fue error de Consulta de SQL
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
        Flog.writeline
    End If
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    GoTo Fin
End Sub

Public Sub LineaModelo_2005(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Interface de archivos masivos
' Autor      : LED
' Ultima Mod.:
' ---------------------------------------------------------------------------------------------
' Formato:
'   Directotio
'   d:\instalacion\in-out\carpetaTemporal
' ---------------------------------------------------------------------------------------------


'Dim empleg As Long
Dim I As Integer

Dim TipoVac As Long
Dim vacnro As Long
Dim vdetnro As Long
Dim Tercero As Long
Dim Dias_Correspondientes As Double
Dim vdiacornro As Long
Dim tipoPeriodo As Integer

Dim rs_datos As New ADODB.Recordset


Dim fs
Dim directorio As String
Dim CArchivos
Dim archivo

Dim Folder
Dim CFolder
Dim FolderEmp
Dim CFolderEmp
Dim FolderTipoDocu
Dim empleg As Long
Dim Ternro As Long
Dim tiparchnro As Long
'Dim folderNameOld As String
'Dim folderNameNew As String
Dim folderNameDestino As String
Dim folderNameDestinoBack As String
Dim tipoArchivo As String

'Activo el Manejador de Errores Local
On Error GoTo Manejador_De_Error

        StrSql = " SELECT sis_direntradas,sis_dirarch, sis_dirimag FROM sistema WHERE sisnro = 1 "
        OpenRecordset StrSql, rs_datos
        If Not rs_datos.EOF Then
            folderNameDestino = Left(UCase(rs_datos!sis_direntradas), InStr(UCase(rs_datos!sis_direntradas), "IN-OUT") - 1) & Right(Replace(rs_datos!sis_dirarch, "/", "\"), Len(rs_datos!sis_dirarch) - 9)
            folderNameDestinoBack = folderNameDestino
            directorio = strLinea
        Else
            Texto = "No se encuentra configurado el directorio de salida para los archivos del empleado"
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, "")
            HuboError = True
            Exit Sub
        End If
        
        Set fs = CreateObject("Scripting.FileSystemObject")
        
        'Set FolderOrigen = fs.GetFolder(rs_datos("sis_dirimag"))
        
        Set Folder = fs.GetFolder(directorio)
        
        'Set CArchivos = Folder.Files
        Set CFolder = Folder.SubFolders
        
        If CFolder.Count = 0 Then
            IncPorc = 99
        Else
            IncPorc = FormatNumber((99 / CFolder.Count), 14)
        End If
        
        
        For Each Folder In CFolder
            'busco que la carpeta sea para actualizar, si con tienen solo un nro ya no es necesario
            'folderNameOld = directorio
            'folderNameNew = ""
            folderNameDestino = folderNameDestinoBack
            If InStr(Folder.Name, "-") > 0 Then
                                        
                empleg = Left(Split(Folder.Name, "-")(0), Len(Split(Folder.Name, "-")(0)) - 1)
                Flog.writeline Espacios(Tabulador * 1) & "carpetas " & Folder.Name & " legajo " & empleg
                
                'busco que exista el empleado
                StrSql = " SELECT ternro FROM empleado WHERE empleg  = " & empleg
                OpenRecordset StrSql, rs_datos
                If Not rs_datos.EOF Then
                    Ternro = rs_datos!Ternro
                    Flog.writeline Espacios(Tabulador * 1) & "Empleado encontrado, legajo: " & empleg
                    'renombro la carpeta por el numero de tercero del empleado
                    
                    If Right(folderNameDestino, 1) <> "\" Then
                        folderNameDestino = folderNameDestino & "\" & CStr(Ternro)
                    Else
                        folderNameDestino = folderNameDestino & CStr(Ternro)
                    End If

                    Set FolderEmp = fs.GetFolder(directorio & "\" & Folder.Name)
                    Set CFolderEmp = FolderEmp.SubFolders
                    
                    For Each FolderEmp In CFolderEmp
                        Flog.writeline Espacios(Tabulador * 2) & "carpetas " & FolderEmp.Name
                        
                        If Not fs.FolderExists(folderNameDestino) Then
                            fs.CreateFolder (folderNameDestino)
                        End If


                        
                        'busco si existe el tipo de archivo
                        StrSql = " SELECT tiparchdesabr, tiparchnro FROM tipoarchivo WHERE upper(tiparchdir) = '" & UCase(FolderEmp.Name) & "'"
                        OpenRecordset StrSql, rs_datos
                        If rs_datos.EOF Then
                            'inserto el tipo de archivo si no existe
                            StrSql = " INSERT INTO tipoarchivo (tiparchdesabr,tiparchess,tiparchsigla,tiparchdir) " & _
                                     " VALUES ('" & FolderEmp.Name & "',0,'','" & FolderEmp.Name & "') "
                            objConn.Execute StrSql, , adExecuteNoRecords
                            Flog.writeline Espacios(Tabulador * 1) & "Tipo de Archivo insertado: " & FolderEmp.Name
                            tiparchnro = getLastIdentity(objConn, "tipoarchivo")
                            tipoArchivo = FolderEmp.Name
                        Else
                            tiparchnro = rs_datos!tiparchnro
                            tipoArchivo = rs_datos!tiparchdesabr
                        End If
                        
                        If Not fs.FolderExists(folderNameDestino & "\" & tipoArchivo) Then
                            fs.CreateFolder (folderNameDestino & "\" & tipoArchivo)
                        End If
                        
                        Set FolderTipoDocu = fs.GetFolder(directorio & "\" & Folder.Name & "\" & FolderEmp.Name)
                        Set CArchivos = FolderTipoDocu.Files
                        Dim archAux
                        For Each archivo In CArchivos
                            
                            If UCase(archivo.Name) <> UCase("Thumbs.db") Then
                                'controlo si no existe el archivo
                                If Not fs.FileExists(folderNameDestino & "\" & FolderEmp.Name & "\" & Replace(archivo.Name, "'", "")) Then
                                    
                                    Flog.writeline Espacios(Tabulador * 3) & "Archivos " & archivo.Name
                                    StrSql = " INSERT INTO ter_arch (ternro,terarcnom,tiparchnro,terarchdesabr) " & _
                                             " VALUES (" & Ternro & ",'" & Replace(archivo.Name, "'", "") & "'," & tiparchnro & ",'" & Left(Replace(Left(archivo.Name, InStrRev(archivo.Name, ".") - 1), "'", ""), 100) & "') "
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                    Flog.writeline Espacios(Tabulador * 1) & "Archivo insertado: " & Replace(archivo.Name, "'", "") & " para el tercero: " & Ternro
                                    
                                    If InStr(archivo.Name, "'") > 0 Then
                                        fs.MoveFile directorio & "\" & Folder.Name & "\" & FolderEmp.Name & "\" & archivo.Name, folderNameDestino & "\" & tipoArchivo & "\" & Replace(archivo.Name, "'", "")
                                    Else
                                        fs.MoveFile directorio & "\" & Folder.Name & "\" & FolderEmp.Name & "\" & archivo.Name, folderNameDestino & "\" & tipoArchivo & "\"
                                    End If
                                Else
                                    Flog.writeline Espacios(Tabulador * 1) & "El Archivo ya existe no se movera"
                                End If
                            End If
                        Next
                    Next

                Else
                    FlogE.writeline Espacios(Tabulador * 1) & "El empleado con legajo: " & empleg & ". No existe"
                End If
                
            Else
                Flog.writeline Espacios(Tabulador * 1) & "La carpeta no tiene formato 'legajo - Nombre', no se lee. Carpeta leida: " & Folder.Name
            End If
            
            Call BorrarArchivo(directorio & "\" & Folder.Name)
                    
            Progreso = Progreso + IncPorc
            Flog.writeline Espacios(Tabulador * 0) & EscribeLogMI("Progreso") & " = " & CLng(Progreso) & " (" & EscribeLogMI("Incremento") & " = " & IncPorc & ")"
            StrSql = "UPDATE batch_proceso SET bprctiempo ='" & CStr((TiempoAcumulado - TiempoInicialProceso)) & "', bprcprogreso = " & CLng(Progreso) & " WHERE bpronro = " & NroProcesoBatch
            objconnProgreso.Execute StrSql, , adExecuteNoRecords
            Flog.writeline Espacios(Tabulador * 0) & EscribeLogMI("Progreso actualizado")
            
            
        Next

        
    If rs_datos.State = adStateOpen Then rs_datos.Close
    Set rs_datos = Nothing

        
Fin:

'Desactivo el manejador de Errores Local
On Error GoTo 0

Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable"
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    If InStr(1, Err.Description, "ODBC") > 0 Then
        'Fue error de Consulta de SQL
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
        Flog.writeline
    End If
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    GoTo Fin
End Sub

Sub BorrarArchivo(ByVal directorio As String)
'se crea la funcion para poder manejar errores de permisos y que la interfaz 2005 pueda continuar
Dim fs

Set fs = CreateObject("Scripting.FileSystemObject")

On Error GoTo error

            fs.deleteFolder directorio

error:
    Flog.writeline Espacios(Tabulador * 0) & "error al borrar directorio: " & Err.Description & ". Directorio: " & directorio

End Sub



Public Sub LineaModelo_211(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Inserta Novedad segun formato
' Autor      : FGZ
'              El formato es:
'                   Formato 1
'                       Legajo; conccod; tpanro; monto
'                   ó
'                   Formato 2.1
'                       Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta
'                   Formato 2.2
'                       Legajo; conccod; tpanro; monto; FechaDesde
'                   ó
'                   Formato 3
'                       Legajo; conccod; tpanro; monto; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro)

'                   ó
'                   Formato 4
'                       Legajo; conccod; tpanro; monto; tipo motivo; motivo

'                   ó
'                   Formato 5
'                       Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta; tipo motivo; motivo

'                   ó
'                   Formato 6
'                       Legajo; conccod; tpanro; monto; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro); tipo motivo; motivo

'                   ó
'                   Formato 7
'                       Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro); tipo motivo; motivo

' Fecha      : 29/07/2004
' Ultima Mod.: 14/06/2007.Gustavo Ring, se verifica que el usuario tenga permiso
'              en el concepto que se va a ingresar como novedad.
' Ultima Mod.: 07/09/2007. FGZ, Se sacó esto porque no es para el estandar.
'           se verifica que el usuario tenga permiso en el concepto que se va a ingresar como novedad.
' Ultima Mod.: 26/03/2009. Diego Nuñez, Se agregaron los formatos del 4 al 7. Compatibilidad con tipo de motivo y motivo.
' Ultima Mod.: 23/07/2009. Martin Ferraro, PisarNovedad (bool) se cambio por AccionNovedad (int) que permite:
'                                                                                                       -1 Reemplazar Novedades
'                                                                                                       0 Mantiene Novedades
'                                                                                                       1 Sumar Novedades
'              06-12-2010 - Leticia A. - elimina caracteres invalidos de diferentes campos.
'              24-10-2011 - Margiotta, Emanuel - Se agrego la vista de empleado.
'              18-04-2012 - Zamarbide Juan - Se cambió el tipo de dato de la variablo Monto de Single a Double
'                           CAS-15590 - NORTHGATEARINSO - Error en campos interface novedades
'              21/11/2012  Gonzalez Nicolás - CAS-17567 - No se permite insertar una novedad con Vigencia cuando ya hay una existente con mismo CO y PAR.
'              24/06/2013 - MDZ - CAS-15590 - Se modifico la seccion de lectura de parametros para que tenga en cuenta todos formatos indicados para el modelo
'              16/07/2014 - Carmen Quintero - CAS-26028 - modelo 211: Se agregó función listaConceptosPermitidos()
' ---------------------------------------------------------------------------------------------

Dim pos1 As Long
Dim pos2 As Long
    
Dim Tercero As Long
Dim NroLegajo As Long

Dim ConcNro As Long
Dim ConcCod As String
Dim fornro As Long

Dim tpanro As Long
Dim Aux_Monto As String
Dim Monto As Double
Dim FechaDesde As String
Dim FechaHasta As String

Dim PeriodoDesde
Dim PeriodoHasta
Dim TieneVigencia As Boolean
Dim EsRetroactivo As Boolean

Dim TipoMotivo As String
Dim Motivo As String

Dim Aux As String
Dim Encontro As Boolean

Dim perfsegcon As Integer
'Dim tienePermiso As Integer
Dim tienePermiso As Boolean


Dim sinVig As Boolean

Dim ExisteNovedad As Boolean

Dim rs_Empleado As New ADODB.Recordset
Dim rs_Concepto As New ADODB.Recordset
Dim rs_TipoPar As New ADODB.Recordset
Dim rs_NovEmp As New ADODB.Recordset
Dim rs_NovEmp2 As New ADODB.Recordset
Dim rs_Periodo As New ADODB.Recordset
Dim rs_con_for_tpa As New ADODB.Recordset
Dim rs_seguridad As New ADODB.Recordset
Dim rs_TipoMotivo As New ADODB.Recordset
Dim rs_cft_resumen As New ADODB.Recordset

    
    On Error GoTo Manejador_De_Error
    Tabs = 1
    
    TieneVigencia = False
    EsRetroactivo = False

    Texto = "Procesando linea " & strLinea
    Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    
    
    '24/06/2013 - MDZ - CAS-15590 - Se modifico la siguiente seccion de código para levantar correctamente todos los parametros,
    '                               teniendo en cuenta todos formatos indicados para el modelo
    
    
    ' ====================================================================
    '   Lee todos los parametros desde la linea leida del archivo de importacion
    
    Dim p As Integer
    Dim c As Integer
    c = 0
    p = 0
    
    Do
        p = InStr(p + 1, strLinea, separador)
        c = c + 1
    Loop While InStr(p + 1, strLinea, separador) > 0
    
    Dim columna() As String
    ReDim columna(c + 1)
    
    columna = Split(strLinea, separador)
    
    
    'Nro de Legajo
    If IsNumeric(Trim(columna(0))) Then
        NroLegajo = Trim(columna(0))
    Else
        Texto = ": " & "El legajo no es numerico "
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call InsertaError(1, 8)
        HuboError = True
        Exit Sub
    End If
    
    'Concepto
    ConcCod = EliminarCHInvalidosII(Trim(columna(1)), 1, "")
    
    '------------------------------------------------
    'VALIDA QUE EL USUARIO TENGA ACTIVO EL CONCEPTO
    '16/07/2014
    If listaConceptosPermitidos(ConcCod) = True Then
        tienePermiso = True
    Else
        tienePermiso = False
    End If
     
    If tienePermiso = False Then
      Texto = ": El usuario:" & usuario & " no tiene autorización sobre el concepto:" & ConcCod
      Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
      HuboError = True
    End If
    'fin
    '------------------------------------------------
    
    'Tipo de Parametro
    tpanro = Trim(columna(2))
    
     'Monto
    Monto = CDbl(Replace(CStr(columna(3)), SeparadorDecimal, ".")) 'Modificado ver 4.15
    
    
    Select Case (c + 1)
    
        Case 4
        '########################### Formato 1 ##################################################
        
        
        
        
        Case 5
        '########################### Formato 2.2 ##################################################
                'Fecha desde
                FechaDesde = columna(4)
                TieneVigencia = True
        
        Case 6 '
                
                If IsDate(columna(4)) Or IsDate(columna(5)) Then
                '########################### Formato 2.1 ##################################################
                
                    'Fecha desde
                    FechaDesde = columna(4)
                    TieneVigencia = True
                    
                    'Fecha hasta
                    If IsDate(columna(5)) Then
                        FechaHasta = CDate(columna(5))
                        
                    Else
                        If Not EsNulo(columna(5)) Then
                            Texto = ": Fecha no valida "
                            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                            Call InsertaError(5, 4)
                            HuboError = True
                            Exit Sub
                        End If
                    End If
                    
                Else
                '########################### Formato 4 ##################################################
                    
                    'Tipo de motivo
                    If IsNumeric(columna(4)) Then
                        TipoMotivo = columna(4)
                    ElseIf Len(Trim(columna(4))) > 0 Then
                        Texto = ": Tipo de motivo NO Válido, se debe indicar valor numérico."
                        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                        Call InsertaError(4, 4)
                        HuboError = True
                        Exit Sub
                    End If
                
                    'Motivo
                    Motivo = EliminarCHInvalidosII(columna(5), 1, "")
                End If
                
        Case 7
        '########################### Formato 3 ##################################################
            'Marca de Retroactividad
            If UCase(columna(4)) = "SI" Then
                EsRetroactivo = True
                
                'Periodo desde
                PeriodoDesde = columna(5)
            
                'Periodo hasta
                PeriodoHasta = columna(6)
            
            Else
                EsRetroactivo = False
            End If
        
            
            
        
        Case 8
        '########################### Formato 5 ##################################################
            'Fecha desde
             FechaDesde = columna(4)
             TieneVigencia = True
             
             'Fecha hasta
             If IsDate(columna(5)) Then
                 FechaHasta = CDate(columna(5))
                 
             Else
                 If Not EsNulo(columna(5)) Then
                     Texto = ": Fecha no valida "
                     Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                     Call InsertaError(1, 4)
                     HuboError = True
                     Exit Sub
                 End If
             End If
        
            'Tipo de motivo
            If IsNumeric(columna(6)) Then
                        TipoMotivo = columna(6)
            ElseIf Len(Trim(columna(6))) > 0 Then
                  Texto = ": Tipo de motivo NO Válido, se debe indicar valor numérico."
                  Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                  Call InsertaError(6, 4)
                  HuboError = True
                  Exit Sub
            End If
            
            'Motivo
            Motivo = EliminarCHInvalidosII(columna(7), 1, "")
            
        Case 9
        '########################### Formato 6 ##################################################
            
             'Marca de Retroactividad
            If UCase(columna(4)) = "SI" Then
                EsRetroactivo = True
                
                'Periodo desde
                PeriodoDesde = columna(5)
            
                'Periodo hasta
                PeriodoHasta = columna(6)
            
            Else
                EsRetroactivo = False
            End If
        
            
            'Tipo de motivo
            If IsNumeric(columna(7)) Then
                        TipoMotivo = columna(7)
            ElseIf Len(Trim(columna(7))) > 0 Then
                  Texto = ": Tipo de motivo NO Válido, se debe indicar valor numérico."
                  Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                  Call InsertaError(7, 4)
                  HuboError = True
                  Exit Sub
            End If
            
            'Motivo
            Motivo = EliminarCHInvalidosII(columna(8), 1, "")
        
        Case 11
        '########################### Formato 7 ##################################################
            'Fecha desde
            FechaDesde = columna(4)
            TieneVigencia = True
            
            'Fecha hasta
             If IsDate(columna(5)) Then
                 FechaHasta = CDate(columna(5))
                 
             Else
                 If Not EsNulo(columna(5)) Then
                     Texto = ": Fecha no valida "
                     Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                     Call InsertaError(1, 4)
                     HuboError = True
                     Exit Sub
                 End If
             End If
             
            'Marca de Retroactividad
            If UCase(columna(6)) = "SI" Then
                EsRetroactivo = True
                
                'Periodo desde
                PeriodoDesde = columna(7)
            
                'Periodo hasta
                PeriodoHasta = columna(8)
            Else
                EsRetroactivo = False
            End If
            
            
            
            'Tipo de motivo
            If IsNumeric(columna(9)) Then
                        TipoMotivo = columna(9)
            ElseIf Len(Trim(columna(9))) > 0 Then
                  Texto = ": Tipo de motivo NO Válido, se debe indicar valor numérico."
                  Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                  Call InsertaError(9, 4)
                  HuboError = True
                  Exit Sub
            End If
            
            'Motivo
            Motivo = EliminarCHInvalidosII(columna(10), 1, "")
            
        Case Else
            Texto = "Los datos leidos no corresponden a ninguno de los Formatos Válidos"
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
     
    End Select
    

' ====================================================================
'   Validar los parametros Levantados



'EAM- Verifica que exista el legajo para la vista de empleado
'StrSql = "SELECT * FROM v_empleadoproc where empleg = " & NroLegajo
StrSql = "SELECT * FROM empleado where empleg = " & NroLegajo
OpenRecordset StrSql, rs_Empleado
If rs_Empleado.EOF Then
    Texto = ": " & "No se encontro el legajo " & NroLegajo
    NroColumna = 1
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(1, 8)
    HuboError = True
    Exit Sub
Else
    Tercero = rs_Empleado!Ternro
End If


'Que exista el concepto
StrSql = "SELECT * FROM concepto WHERE conccod = '" & ConcCod & "'"
'StrSql = StrSql & " OR conccod = '" & Conccod & "'"
OpenRecordset StrSql, rs_Concepto
If rs_Concepto.EOF Then
    Texto = ": " & "No se encontro el Concepto " & ConcCod
    NroColumna = 2
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(2, 10)
    HuboError = True
    Exit Sub
Else
    ConcNro = rs_Concepto!ConcNro
    fornro = rs_Concepto!fornro
End If

'Que exista el tipo de Parametro
StrSql = "SELECT * FROM tipopar WHERE tpanro = " & tpanro
OpenRecordset StrSql, rs_TipoPar

If rs_TipoPar.EOF Then
    Texto = ": " & "No se encontro el Tipo de Parametro " & tpanro
    NroColumna = 3
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(3, 11)
    HuboError = True
    Exit Sub
End If


'FGZ - 27/01/2004
'Faltaria revisar que el par concepto-parametro se resuelva por novedad
StrSql = "SELECT * FROM con_for_tpa "
StrSql = StrSql & " WHERE concnro = " & ConcNro
StrSql = StrSql & " AND fornro =" & fornro
StrSql = StrSql & " AND tpanro =" & tpanro
OpenRecordset StrSql, rs_con_for_tpa

If rs_con_for_tpa.EOF Then
    Texto = ": " & "El parametro " & tpanro & " no esta asociado a la formula del concepto " & ConcCod
    NroColumna = 3
    Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, "")
    Call InsertaError(3, 11)
    HuboError = True
    Exit Sub
Else
    Encontro = False
    Do While Not Encontro And Not rs_con_for_tpa.EOF
        If Not CBool(rs_con_for_tpa!cftauto) Then
            Encontro = True
        End If
        rs_con_for_tpa.MoveNext
    Loop
    If Not Encontro Then
        Texto = ": " & "El parametro " & tpanro & " del concepto " & ConcCod & " no se resuelve por novedad "
        NroColumna = 3
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call InsertaError(3, 11)
        HuboError = True
        Exit Sub
    End If
End If


If EsRetroactivo Then
  'Chequeo que los periodos sean validos
  'Chequeo Periodo Desde
  
  StrSql = "SELECT * FROM periodo WHERE pliqnro = " & PeriodoDesde
  If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
  OpenRecordset StrSql, rs_Periodo
  If rs_Periodo.EOF Then
      Texto = ": " & "Periodo Desde Invalido " & PeriodoDesde
      NroColumna = 6
      Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
      Call InsertaError(6, 36)
      HuboError = True
      Exit Sub
  End If
  
  'Chequeo Periodo Hasta
  StrSql = "SELECT * FROM periodo WHERE pliqnro = " & PeriodoHasta
  If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
  OpenRecordset StrSql, rs_Periodo
  If rs_Periodo.EOF Then
      Texto = ": " & "Periodo Hasta Invalido " & PeriodoHasta
      NroColumna = 7
      Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
      Call InsertaError(7, 36)
      HuboError = True
      Exit Sub
  End If
End If

'=============================================================
'Si viene el tipo de motivo cargo ese y valido que exista sino viene, busco si hay un default
If Len(TipoMotivo) = 0 Or (TipoMotivo = "N/A") Then
    'Verifico si hay un default
    StrSql = "SELECT tipmotnro, motivo FROM cft_resumen where concnro = " & ConcNro
    StrSql = StrSql & " AND tpanro = " & tpanro
    OpenRecordset StrSql, rs_cft_resumen
    If Not rs_cft_resumen.EOF Then
        TipoMotivo = IIf(IsNull(rs_cft_resumen!tipmotnro), "0", rs_cft_resumen!tipmotnro)
    End If
    rs_cft_resumen.Close
Else
    'Valido contra BD que exista el motivo
    StrSql = "SELECT * FROM tipomotivo where tipmotnro = " & TipoMotivo
    OpenRecordset StrSql, rs_TipoMotivo
    If rs_TipoMotivo.EOF Then
        Texto = ": " & "No se encontro el tipo de motivo " & TipoMotivo
        NroColumna = 13
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call InsertaError(13, 116)
        HuboError = True
        Exit Sub
    End If
    rs_TipoMotivo.Close
End If

'Si viene motivo cargo ese, sino viene, busco si hay un default
If Len(Motivo) = 0 Or (Motivo = "N/A") Then
    'Verifico si hay un default
    StrSql = "SELECT tipmotnro, motivo FROM cft_resumen where concnro = " & ConcNro
    StrSql = StrSql & " AND tpanro = " & tpanro
    OpenRecordset StrSql, rs_cft_resumen
    If Not rs_cft_resumen.EOF Then
        Motivo = IIf(IsNull(rs_cft_resumen!Motivo), "", rs_cft_resumen!Motivo)
    End If
    rs_cft_resumen.Close
End If

If Len(TipoMotivo) = 0 Then TipoMotivo = "null"
If TipoMotivo = "N/A" Then TipoMotivo = "null"
If TipoMotivo = "0" Then TipoMotivo = "null"
If Motivo = "N/A" Then Motivo = ""

'=============================================================
'Busco si existe la Novedad

  If Not TieneVigencia Then
    StrSql = "SELECT * FROM novemp WHERE "
    StrSql = StrSql & " concnro = " & ConcNro
    StrSql = StrSql & " AND tpanro = " & tpanro
    StrSql = StrSql & " AND empleado = " & Tercero
    StrSql = StrSql & " AND (nevigencia = -1 OR nevigencia = 0) "
    StrSql = StrSql & " ORDER BY nevigencia "
    If rs_NovEmp.State = adStateOpen Then rs_NovEmp.Close
    OpenRecordset StrSql, rs_NovEmp
    
    If Not rs_NovEmp.EOF Then
    
        'Busco si existe una novedad sin vigencia
        sinVig = False
        Do While Not rs_NovEmp.EOF
            If Not CBool(rs_NovEmp!nevigencia) Then
                sinVig = True
                Exit Do 'Para que quede posicionado en la nov a modificar
            End If
            rs_NovEmp.MoveNext
        Loop
        
            'A partir de la V4.50
            'Busco si existe una misma novedad s/vigencia o c/vigencia diferente
            ExisteNovedad = False
            StrSql = "SELECT * FROM novemp WHERE "
            StrSql = StrSql & " concnro = " & ConcNro
            StrSql = StrSql & " AND tpanro = " & tpanro
            StrSql = StrSql & " AND empleado = " & Tercero
            OpenRecordset StrSql, rs_NovEmp2
            If Not rs_NovEmp2.EOF Then
                Flog.writeline "Existe una novedad"
                ExisteNovedad = True
            End If
            rs_NovEmp2.Close
'            -------------------------------------------------
    
            If Not sinVig Then ' No encontre con licencia
                If ExisteNovedad = True Then 'V4.50
                    Texto = "No se insertó la novedad. Ya existe y no se pisa."
                    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                Else
                'Inserto---------------------------------------------------------
                    If Not EsRetroactivo Then
                        StrSql = "INSERT INTO novemp (" & _
                                 "empleado,concnro,tpanro,nevalor,nevigencia"
                        StrSql = StrSql & ",tipmotnro,motivo"
                        StrSql = StrSql & ") VALUES (" & Tercero & _
                                 "," & ConcNro & _
                                 "," & tpanro & _
                                 "," & Monto & _
                                 ",0"
                        StrSql = StrSql & "," & TipoMotivo & _
                        ",'" & Motivo & "'"
                        StrSql = StrSql & " )"
                    Else
                        StrSql = "INSERT INTO novemp (" & _
                                 "empleado,concnro,tpanro,nevalor,nevigencia,nepliqdesde,nepliqhasta "
                        StrSql = StrSql & ",tipmotnro,motivo"
                        StrSql = StrSql & ") VALUES (" & Tercero & _
                                 "," & ConcNro & _
                                 "," & tpanro & _
                                 "," & Monto & _
                                 "," & CLng(TieneVigencia) & _
                                 "," & PeriodoDesde & _
                                 "," & PeriodoHasta
                        StrSql = StrSql & "," & TipoMotivo & _
                        ",'" & Motivo & "'"
                        StrSql = StrSql & " )"
                    End If
                    
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = "Novedad Insertada "
                    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                End If
            '-----------------------------------------------------------------
        Else
            'Existe una novedad pero sin vigencia ==> Actualizo
            
            Select Case CInt(AccionNovedad)
                Case -1: 'Actualizo la Novedad
                    If Not EsRetroactivo Then
                        StrSql = "UPDATE novemp SET nevalor = " & Monto
                            StrSql = StrSql & " , tipmotnro =  " & TipoMotivo & _
                            " , motivo =  '" & Motivo & "'"
                        StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                    Else
                        StrSql = "UPDATE novemp SET nevalor = " & Monto & _
                                 " , nepliqdesde =  " & PeriodoDesde & _
                                 " , nepliqhasta =  " & PeriodoHasta & _
                                 " , tipmotnro =  " & TipoMotivo & _
                                 " , motivo =  '" & Motivo & "'"
                        StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = "Novedad Actualizada "
                    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                    'Flog.Writeline Espacios(Tabulador * 1) & "Novedad Actualizada "
                Case 0: 'Mantiene Novedades
                    Texto = "No se insertó la novedad. Ya existe y no se pisa."
                    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                Case 1: 'Suma Novedades
                    If Not EsRetroactivo Then
                        StrSql = "UPDATE novemp SET nevalor = nevalor + " & Monto
                        StrSql = StrSql & " , tipmotnro =  " & TipoMotivo
                        StrSql = StrSql & " , motivo =  '" & Motivo & "'"
                        StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                    Else
                        StrSql = "UPDATE novemp SET nevalor = nevalor + " & Monto & _
                                 " , nepliqdesde =  " & PeriodoDesde & _
                                 " , nepliqhasta =  " & PeriodoHasta
                        StrSql = StrSql & " , tipmotnro =  " & TipoMotivo & _
                        " , motivo =  '" & Motivo & "'"
                        StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = "Novedad Sumada "
                    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
            End Select

        End If
    Else 'No encontre novedad alguna para el conc y param
        If ExisteNovedad = True Then 'V4.50
            Texto = "No se insertó la novedad. Ya existe y no se pisa."
            Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
        Else
            'Inserto
            If Not EsRetroactivo Then
                StrSql = "INSERT INTO novemp (" & _
                         "empleado,concnro,tpanro,nevalor,nevigencia"
                StrSql = StrSql & ",tipmotnro,motivo"
                StrSql = StrSql & ") VALUES (" & Tercero & _
                         "," & ConcNro & _
                         "," & tpanro & _
                         "," & Monto & _
                         ",0"
                StrSql = StrSql & "," & TipoMotivo & _
                ",'" & Motivo & "'"
                StrSql = StrSql & " )"
            Else
                StrSql = "INSERT INTO novemp (" & _
                         "empleado,concnro,tpanro,nevalor,nevigencia,nepliqdesde,nepliqhasta "
                StrSql = StrSql & ",tipmotnro,motivo"
                StrSql = StrSql & ") VALUES (" & Tercero & _
                         "," & ConcNro & _
                         "," & tpanro & _
                         "," & Monto & _
                         "," & CLng(TieneVigencia) & _
                         "," & PeriodoDesde & _
                         "," & PeriodoHasta
                StrSql = StrSql & "," & TipoMotivo & _
                ",'" & Motivo & "'"
                StrSql = StrSql & " )"
            End If
            objConn.Execute StrSql, , adExecuteNoRecords
            'Flog.Writeline Espacios(Tabulador * 1) & "Novedad insertada "
            Texto = "Novedad insertada "
            Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
        End If
    End If
  Else 'Tiene Vigencia
    'A partir de la V4.50
    'Busco si existe una misma novedad s/vigencia o c/vigencia diferente
    ExisteNovedad = False
    StrSql = "SELECT * FROM novemp WHERE "
    StrSql = StrSql & " concnro = " & ConcNro
    StrSql = StrSql & " AND tpanro = " & tpanro
    StrSql = StrSql & " AND empleado = " & Tercero
    OpenRecordset StrSql, rs_NovEmp2
    If Not rs_NovEmp2.EOF Then
        'Flog.WRITELINE "Existe una novedad"
        ExisteNovedad = True
    End If
    rs_NovEmp2.Close
    '-------------------------------------------------
   
   '_______________________________________________________________________
    'Reviso que no se pise
    StrSql = "SELECT * FROM novemp WHERE "
    StrSql = StrSql & " concnro = " & ConcNro
    StrSql = StrSql & " AND tpanro = " & tpanro
    StrSql = StrSql & " AND empleado = " & Tercero
    'StrSql = StrSql & " AND (nevigencia = 0 "
    StrSql = StrSql & " AND nevigencia = -1 "
    If Not EsNulo(FechaHasta) Then
'        StrSql = StrSql & " AND (nedesde <= " & ConvFecha(FechaHasta)
'        StrSql = StrSql & " AND nehasta >= " & ConvFecha(FechaDesde) & ")"
'        StrSql = StrSql & " OR  (nedesde <= " & ConvFecha(FechaHasta)
'        StrSql = StrSql & " AND nehasta is null )))"
        StrSql = StrSql & " AND nedesde = " & ConvFecha(FechaDesde)
        StrSql = StrSql & " AND nehasta = " & ConvFecha(FechaHasta)
    Else
        StrSql = StrSql & " AND nedesde = " & ConvFecha(FechaDesde)
        StrSql = StrSql & " AND nehasta is null"
    End If
    If rs_NovEmp.State = adStateOpen Then rs_NovEmp.Close
    OpenRecordset StrSql, rs_NovEmp
    
    If Not rs_NovEmp.EOF Then
    
        'Existe/n novedad/es con vigencia ==>
        Select Case CInt(AccionNovedad)
            Case -1: 'Actualizo la Novedad
                If Not EsRetroactivo Then
                    StrSql = "UPDATE novemp SET nevalor = " & Monto
                    StrSql = StrSql & " , tipmotnro =  " & TipoMotivo
                    StrSql = StrSql & " , motivo =  '" & Motivo & "'"
                    StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                Else
                    StrSql = "UPDATE novemp SET nevalor = " & Monto & _
                             " , nepliqdesde =  " & PeriodoDesde & _
                             " , nepliqhasta =  " & PeriodoHasta
                    StrSql = StrSql & " , tipmotnro =  " & TipoMotivo & _
                    " , motivo =  '" & Motivo & "'"
                    StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                End If
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = "Novedad Actualizada "
                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
            Case 0: 'Mantiene Novedades
                Texto = "No se insertó la novedad. Ya existe y no se pisa."
                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
            Case 1: 'Suma Novedades
                If Not EsRetroactivo Then
                    StrSql = "UPDATE novemp SET nevalor = nevalor + " & Monto
                    StrSql = StrSql & " , tipmotnro =  " & TipoMotivo
                    StrSql = StrSql & " , motivo =  '" & Motivo & "'"
                    StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                Else
                    StrSql = "UPDATE novemp SET nevalor = nevalor + " & Monto & _
                             " , nepliqdesde =  " & PeriodoDesde & _
                             " , nepliqhasta =  " & PeriodoHasta
                    StrSql = StrSql & " , tipmotnro =  " & TipoMotivo & _
                    " , motivo =  '" & Motivo & "'"
                    StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                End If
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = "Novedad Sumada "
                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
        End Select
        
    Else
        
        If ExisteNovedad = True Then 'V4.50
                Texto = "No se insertó la novedad. Ya existe y no se pisa."
                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
        Else
                If Not EsRetroactivo Then
                    StrSql = "INSERT INTO novemp ("
                    StrSql = StrSql & "empleado,concnro,tpanro,nevalor,nevigencia,nedesde"
                    If Not EsNulo(FechaHasta) Then
                        StrSql = StrSql & ",nehasta"
                    End If
                    StrSql = StrSql & ",tipmotnro,motivo"
                    StrSql = StrSql & ") VALUES (" & Tercero
                    StrSql = StrSql & "," & ConcNro
                    StrSql = StrSql & "," & tpanro
                    StrSql = StrSql & "," & Monto
                    StrSql = StrSql & ",-1"
                    StrSql = StrSql & "," & ConvFecha(FechaDesde)
                    If Not EsNulo(FechaHasta) Then
                        StrSql = StrSql & "," & ConvFecha(FechaHasta)
                    End If
                    StrSql = StrSql & "," & TipoMotivo & _
                    ",'" & Motivo & "'"
                    StrSql = StrSql & " )"
                Else
                    StrSql = "INSERT INTO novemp ("
                    StrSql = StrSql & "empleado,concnro,tpanro,nevalor,nevigencia,nedesde"
                    If Not EsNulo(FechaHasta) Then
                        StrSql = StrSql & ",nehasta"
                    End If
                    StrSql = StrSql & ",nepliqdesde,nepliqhasta"
                    StrSql = StrSql & ",tipmotnro,motivo"
                    StrSql = StrSql & ") VALUES (" & Tercero
                    StrSql = StrSql & "," & ConcNro
                    StrSql = StrSql & "," & tpanro
                    StrSql = StrSql & "," & Monto
                    StrSql = StrSql & ",-1"
                    StrSql = StrSql & "," & ConvFecha(FechaDesde)
                    If Not EsNulo(FechaHasta) Then
                        StrSql = StrSql & "," & ConvFecha(FechaHasta)
                    End If
                    StrSql = StrSql & "," & PeriodoDesde
                    StrSql = StrSql & "," & PeriodoHasta
                    StrSql = StrSql & "," & TipoMotivo & _
                    ",'" & Motivo & "'"
                    StrSql = StrSql & " )"
                End If
                objConn.Execute StrSql, , adExecuteNoRecords
                'Flog.Writeline Espacios(Tabulador * 1) & "Novedad insertada "
                Texto = "Novedad insertada "
                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
            End If
        
        
        End If
    
    

  End If







Fin:
'Cierro todo y libero
If rs_NovEmp.State = adStateOpen Then rs_NovEmp.Close
If rs_Empleado.State = adStateOpen Then rs_Empleado.Close
If rs_Concepto.State = adStateOpen Then rs_Concepto.Close
If rs_TipoPar.State = adStateOpen Then rs_TipoPar.Close
If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
If rs_con_for_tpa.State = adStateOpen Then rs_con_for_tpa.Close

Set rs_NovEmp = Nothing
Set rs_Empleado = Nothing
Set rs_Concepto = Nothing
Set rs_TipoPar = Nothing
Set rs_Periodo = Nothing
Set rs_con_for_tpa = Nothing
Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    Texto = Err.Description
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(1, 7)
    GoTo Fin
End Sub

Public Sub LineaModelo_211_OLD2(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Inserta Novedad segun formato
' Autor      : FGZ
'              El formato es:
'                   Formato 1
'                       Legajo; conccod; tpanro; monto
'                   ó
'                   Formato 2.1
'                       Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta
'                   Formato 2.2
'                       Legajo; conccod; tpanro; monto; FechaDesde
'                   ó
'                   Formato 3
'                       Legajo; conccod; tpanro; monto; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro)

'                   ó
'                   Formato 4
'                       Legajo; conccod; tpanro; monto; tipo motivo; motivo

'                   ó
'                   Formato 5
'                       Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta; tipo motivo; motivo

'                   ó
'                   Formato 6
'                       Legajo; conccod; tpanro; monto; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro); tipo motivo; motivo

'                   ó
'                   Formato 7
'                       Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro); tipo motivo; motivo

' Fecha      : 29/07/2004
' Ultima Mod.: 14/06/2007.Gustavo Ring, se verifica que el usuario tenga permiso
'              en el concepto que se va a ingresar como novedad.
' Ultima Mod.: 07/09/2007. FGZ, Se sacó esto porque no es para el estandar.
'           se verifica que el usuario tenga permiso en el concepto que se va a ingresar como novedad.
' Ultima Mod.: 26/03/2009. Diego Nuñez, Se agregaron los formatos del 4 al 7. Compatibilidad con tipo de motivo y motivo.
' Ultima Mod.: 23/07/2009. Martin Ferraro, PisarNovedad (bool) se cambio por AccionNovedad (int) que permite:
'                                                                                                       -1 Reemplazar Novedades
'                                                                                                       0 Mantiene Novedades
'                                                                                                       1 Sumar Novedades
'              06-12-2010 - Leticia A. - elimina caracteres invalidos de diferentes campos.
'              24-10-2011 - Margiotta, Emanuel - Se agrego la vista de empleado.
'              18-04-2012 - Zamarbide Juan - Se cambió el tipo de dato de la variablo Monto de Single a Double
'                           CAS-15590 - NORTHGATEARINSO - Error en campos interface novedades
'              21/11/2012  Gonzalez Nicolás - CAS-17567 - No se permite insertar una novedad con Vigencia cuando ya hay una existente con mismo CO y PAR.
' ---------------------------------------------------------------------------------------------

Dim pos1 As Long
Dim pos2 As Long
    
Dim Tercero As Long
Dim NroLegajo As Long

Dim ConcNro As Long
Dim ConcCod As String
Dim fornro As Long

Dim tpanro As Long
Dim Aux_Monto As String
Dim Monto As Double
Dim FechaDesde As String
Dim FechaHasta As String

Dim PeriodoDesde
Dim PeriodoHasta
Dim TieneVigencia As Boolean
Dim EsRetroactivo As Boolean

Dim TipoMotivo As String
Dim Motivo As String

Dim Aux As String
Dim Encontro As Boolean

Dim perfsegcon As Integer
Dim tienePermiso As Integer

Dim sinVig As Boolean

Dim ExisteNovedad As Boolean

Dim rs_Empleado As New ADODB.Recordset
Dim rs_Concepto As New ADODB.Recordset
Dim rs_TipoPar As New ADODB.Recordset
Dim rs_NovEmp As New ADODB.Recordset
Dim rs_NovEmp2 As New ADODB.Recordset
Dim rs_Periodo As New ADODB.Recordset
Dim rs_con_for_tpa As New ADODB.Recordset
Dim rs_seguridad As New ADODB.Recordset
Dim rs_TipoMotivo As New ADODB.Recordset
Dim rs_cft_resumen As New ADODB.Recordset

' El formato es:
' Formato 1
' Legajo; conccod; tpanro; monto
' ó
' Formato 2.1
' Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta
' ó
' Formato 2.2
' Legajo; conccod; tpanro; monto; FechaDesde
' ó
' Formato 3
' Legajo; conccod; tpanro; monto; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro)
' ó
' Formato 4
' Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro)
    
    On Error GoTo Manejador_De_Error
    Tabs = 1
    
    TieneVigencia = False
    EsRetroactivo = False

    Texto = "Procesando linea " & strLinea
    Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    
    NroColumna = NroColumna + 1
    'Nro de Legajo
    pos1 = 1
    pos2 = InStr(pos1, strLinea, separador)
    If IsNumeric(Mid$(strLinea, pos1, pos2 - pos1)) Then
        NroLegajo = Mid$(strLinea, pos1, pos2 - pos1)
    Else
        Texto = ": " & "El legajo no es numerico "
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call InsertaError(1, 8)
        HuboError = True
        Exit Sub
    End If
    
   
    NroColumna = NroColumna + 1
    'Concepto
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    ConcCod = Mid(strLinea, pos1, pos2 - pos1)
    ConcCod = EliminarCHInvalidosII(ConcCod, 1, "")
    
    
    NroColumna = NroColumna + 1
    'Tipo de Parametro
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    tpanro = Mid(strLinea, pos1, pos2 - pos1)
    

    NroColumna = NroColumna + 1
    'Monto
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    If pos2 = 0 Then
        pos2 = Len(strLinea)
        Aux_Monto = Mid(strLinea, pos1, pos2)
        Monto = CDbl(Replace(CStr(Aux_Monto), SeparadorDecimal, ".")) 'Modificado ver 4.15
    Else
        Aux_Monto = Mid(strLinea, pos1, pos2 - pos1)
        Monto = CDbl(Replace(CStr(Aux_Monto), SeparadorDecimal, ".")) 'Modificado ver 4.15
        
        'Puede veniar Fecha Desde; fecha Hasta ó Retroactivo, Periodo desde , Periodo Hasta
        pos1 = pos2 + 1
        pos2 = InStr(pos1 + 1, strLinea, separador)
        
        If pos2 > 0 Then
            NroColumna = NroColumna + 1
            Aux = Mid(strLinea, pos1, pos2 - pos1)
            
            If IsDate(Aux) Then
                TieneVigencia = True
                'Fecha desde
                FechaDesde = Mid(strLinea, pos1, pos2 - pos1)
            
                NroColumna = NroColumna + 1
                'Fecha Hasta
                pos1 = pos2 + 1
                pos2 = InStr(pos1, strLinea, separador)
                
                If pos2 > 0 Then
                    FechaHasta = Mid(strLinea, pos1, pos2 - pos1)
                    If IsDate(FechaHasta) Then
                        FechaHasta = CDate(FechaHasta)
                    Else
                        If Not EsNulo(FechaHasta) Then
                            Texto = ": Fecha no valida "
                            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                            Call InsertaError(1, 4)
                            HuboError = True
                            Exit Sub
                        End If
                    End If
                    NroColumna = NroColumna + 1
                    'Marca de Retroactividad
                    pos1 = pos2 + 1
                    pos2 = InStr(pos1 + 1, strLinea, separador)
                    Aux = Mid(strLinea, pos1, pos2 - pos1)
                    If UCase(Aux) = "SI" Then
                        EsRetroactivo = True
                    Else
                        EsRetroactivo = False
                    End If
                    If EsRetroactivo Then
                        'Periodo desde
                        pos1 = pos2 + 1
                        pos2 = InStr(pos1 + 1, strLinea, separador)
                        PeriodoDesde = Mid(strLinea, pos1, pos2 - pos1)
                        'Periodo hasta
                        pos1 = pos2 + 1
                        pos2 = InStr(pos1 + 1, strLinea, separador)
                        If pos2 > 0 Then 'Se especifican tipo de motivo y motivo
                            PeriodoHasta = Mid(strLinea, pos1, pos2 - pos1)
                            'Tipo de motivo
                            pos1 = pos2 + 1
                            pos2 = InStr(pos1 + 1, strLinea, separador)
                            If pos2 > 0 Then
                                TipoMotivo = Mid(strLinea, pos1, pos2 - pos1)
                                pos1 = pos2 + 1
                                pos2 = InStr(pos1 + 1, strLinea, separador)
                                If pos2 > 0 Then
                                    'Motivo
                                    Motivo = Mid(strLinea, pos1, pos2 - pos1)
                                    Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                                Else
                                    'Motivo
                                    pos2 = Len(strLinea)
                                    Motivo = Mid(strLinea, pos1, pos2)
                                    Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                                End If
                            Else
                                pos2 = Len(strLinea)
                                TipoMotivo = Mid(strLinea, pos1, pos2)
                                'Motivo
                                Motivo = ""
                            End If
                        Else
                            pos2 = Len(strLinea)
                            PeriodoHasta = Mid(strLinea, pos1, pos2)
                        End If
                    Else 'el siguiente dato es el tipo de motivo
                        TipoMotivo = Aux
                        pos1 = pos2 + 1
                        pos2 = InStr(pos1 + 1, strLinea, separador)
                        If pos2 > 0 Then 'Se especifican tipo de motivo y motivo
                            'Motivo
                            Motivo = Mid(strLinea, pos1, pos2 - pos1)
                            Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                        Else
                            pos2 = Len(strLinea)
                            Motivo = Mid(strLinea, pos1, pos2)
                            Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                        End If
                    End If
                    
                Else
                    pos2 = Len(strLinea)
                    FechaHasta = Mid(strLinea, pos1, pos2)
                    TieneVigencia = True
                End If
            Else
                If UCase(Aux) = "SI" Then
                    EsRetroactivo = True
                Else
                    EsRetroactivo = False
                End If
                If EsRetroactivo Then
                    'Periodo desde
                    pos1 = pos2 + 1
                    pos2 = InStr(pos1 + 1, strLinea, separador)
                    PeriodoDesde = Mid(strLinea, pos1, pos2 - pos1)
                    'Periodo hasta
                    pos1 = pos2 + 1
                    pos2 = InStr(pos1 + 1, strLinea, separador)
                    If pos2 > 0 Then 'Se especifican tipo de motivo y motivo
                        PeriodoHasta = Mid(strLinea, pos1, pos2 - pos1)
                        'Tipo de motivo
                        pos1 = pos2 + 1
                        pos2 = InStr(pos1 + 1, strLinea, separador)
                        If pos2 > 0 Then
                            TipoMotivo = Mid(strLinea, pos1, pos2 - pos1)
                            pos1 = pos2 + 1
                            pos2 = InStr(pos1 + 1, strLinea, separador)
                            If pos2 > 0 Then
                                'Motivo
                                Motivo = Mid(strLinea, pos1, pos2 - pos1)
                                Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                            Else
                                'Motivo
                                pos2 = Len(strLinea)
                                Motivo = Mid(strLinea, pos1, pos2)
                                Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                            End If
                        Else
                            pos2 = Len(strLinea)
                            TipoMotivo = Mid(strLinea, pos1, pos2)
                            'Motivo
                            Motivo = ""
                        End If
                    Else
                        pos2 = Len(strLinea)
                        PeriodoHasta = Mid(strLinea, pos1, pos2)
                    End If
                Else 'el siguiente dato es el tipo de motivo
                    TipoMotivo = Aux
                    pos1 = pos2 + 1
                    pos2 = InStr(pos1 + 1, strLinea, separador)
                    If pos2 > 0 Then 'Se especifican tipo de motivo y motivo
                        'Motivo
                        Motivo = Mid(strLinea, pos1, pos2 - pos1)
                        Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                    Else
                        pos2 = Len(strLinea)
                        Motivo = Mid(strLinea, pos1, pos2)
                        Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                    End If
                End If
            End If
        Else
            If Not pos1 >= Len(strLinea) Then
                'Viene Vigencia con fecha desde y sin fecha hasta
                pos2 = Len(strLinea)
                FechaDesde = Mid(strLinea, pos1, pos2)
                TieneVigencia = True
                FechaHasta = ""
            End If
        End If
    End If



' ====================================================================
'   Validar los parametros Levantados



'EAM- Verifica que exista el legajo para la vista de empleado
'StrSql = "SELECT * FROM v_empleadoproc where empleg = " & NroLegajo
StrSql = "SELECT * FROM empleado where empleg = " & NroLegajo
OpenRecordset StrSql, rs_Empleado
If rs_Empleado.EOF Then
    Texto = ": " & "No se encontro el legajo " & NroLegajo
    NroColumna = 1
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(1, 8)
    HuboError = True
    Exit Sub
Else
    Tercero = rs_Empleado!Ternro
End If


'Que exista el concepto
StrSql = "SELECT * FROM concepto WHERE conccod = '" & ConcCod & "'"
'StrSql = StrSql & " OR conccod = '" & Conccod & "'"
OpenRecordset StrSql, rs_Concepto
If rs_Concepto.EOF Then
    Texto = ": " & "No se encontro el Concepto " & ConcCod
    NroColumna = 2
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(2, 10)
    HuboError = True
    Exit Sub
Else
    ConcNro = rs_Concepto!ConcNro
    fornro = rs_Concepto!fornro
End If

'Que exista el tipo de Parametro
StrSql = "SELECT * FROM tipopar WHERE tpanro = " & tpanro
OpenRecordset StrSql, rs_TipoPar

If rs_TipoPar.EOF Then
    Texto = ": " & "No se encontro el Tipo de Parametro " & tpanro
    NroColumna = 3
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(3, 11)
    HuboError = True
    Exit Sub
End If


'FGZ - 27/01/2004
'Faltaria revisar que el par concepto-parametro se resuelva por novedad
StrSql = "SELECT * FROM con_for_tpa "
StrSql = StrSql & " WHERE concnro = " & ConcNro
StrSql = StrSql & " AND fornro =" & fornro
StrSql = StrSql & " AND tpanro =" & tpanro
OpenRecordset StrSql, rs_con_for_tpa

If rs_con_for_tpa.EOF Then
    Texto = ": " & "El parametro " & tpanro & " no esta asociado a la formula del concepto " & ConcCod
    NroColumna = 3
    Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, "")
    Call InsertaError(3, 11)
    HuboError = True
    Exit Sub
Else
    Encontro = False
    Do While Not Encontro And Not rs_con_for_tpa.EOF
        If Not CBool(rs_con_for_tpa!cftauto) Then
            Encontro = True
        End If
        rs_con_for_tpa.MoveNext
    Loop
    If Not Encontro Then
        Texto = ": " & "El parametro " & tpanro & " del concepto " & ConcCod & " no se resuelve por novedad "
        NroColumna = 3
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call InsertaError(3, 11)
        HuboError = True
        Exit Sub
    End If
End If


If EsRetroactivo Then
  'Chequeo que los periodos sean validos
  'Chequeo Periodo Desde
  
  StrSql = "SELECT * FROM periodo WHERE pliqnro = " & PeriodoDesde
  If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
  OpenRecordset StrSql, rs_Periodo
  If rs_Periodo.EOF Then
      Texto = ": " & "Periodo Desde Invalido " & PeriodoDesde
      NroColumna = 6
      Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
      Call InsertaError(6, 36)
      HuboError = True
      Exit Sub
  End If
  
  'Chequeo Periodo Hasta
  StrSql = "SELECT * FROM periodo WHERE pliqnro = " & PeriodoHasta
  If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
  OpenRecordset StrSql, rs_Periodo
  If rs_Periodo.EOF Then
      Texto = ": " & "Periodo Hasta Invalido " & PeriodoHasta
      NroColumna = 7
      Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
      Call InsertaError(7, 36)
      HuboError = True
      Exit Sub
  End If
End If

'=============================================================
'Si viene el tipo de motivo cargo ese y valido que exista sino viene, busco si hay un default
If Len(TipoMotivo) = 0 Or (TipoMotivo = "N/A") Then
    'Verifico si hay un default
    StrSql = "SELECT tipmotnro, motivo FROM cft_resumen where concnro = " & ConcNro
    StrSql = StrSql & " AND tpanro = " & tpanro
    OpenRecordset StrSql, rs_cft_resumen
    If Not rs_cft_resumen.EOF Then
        TipoMotivo = IIf(IsNull(rs_cft_resumen!tipmotnro), "0", rs_cft_resumen!tipmotnro)
    End If
    rs_cft_resumen.Close
Else
    'Valido contra BD que exista el motivo
    StrSql = "SELECT * FROM tipomotivo where tipmotnro = " & TipoMotivo
    OpenRecordset StrSql, rs_TipoMotivo
    If rs_TipoMotivo.EOF Then
        Texto = ": " & "No se encontro el tipo de motivo " & TipoMotivo
        NroColumna = 13
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call InsertaError(13, 116)
        HuboError = True
        Exit Sub
    End If
    rs_TipoMotivo.Close
End If

'Si viene motivo cargo ese, sino viene, busco si hay un default
If Len(Motivo) = 0 Or (Motivo = "N/A") Then
    'Verifico si hay un default
    StrSql = "SELECT tipmotnro, motivo FROM cft_resumen where concnro = " & ConcNro
    StrSql = StrSql & " AND tpanro = " & tpanro
    OpenRecordset StrSql, rs_cft_resumen
    If Not rs_cft_resumen.EOF Then
        Motivo = IIf(IsNull(rs_cft_resumen!Motivo), "", rs_cft_resumen!Motivo)
    End If
    rs_cft_resumen.Close
End If

If Len(TipoMotivo) = 0 Then TipoMotivo = "null"
If TipoMotivo = "N/A" Then TipoMotivo = "null"
If TipoMotivo = "0" Then TipoMotivo = "null"
If Motivo = "N/A" Then Motivo = ""

'=============================================================
'Busco si existe la Novedad

  If Not TieneVigencia Then
    StrSql = "SELECT * FROM novemp WHERE "
    StrSql = StrSql & " concnro = " & ConcNro
    StrSql = StrSql & " AND tpanro = " & tpanro
    StrSql = StrSql & " AND empleado = " & Tercero
    StrSql = StrSql & " AND (nevigencia = -1 OR nevigencia = 0) "
    StrSql = StrSql & " ORDER BY nevigencia "
    If rs_NovEmp.State = adStateOpen Then rs_NovEmp.Close
    OpenRecordset StrSql, rs_NovEmp
    
    If Not rs_NovEmp.EOF Then
    
        'Busco si existe una novedad sin vigencia
        sinVig = False
        Do While Not rs_NovEmp.EOF
            If Not CBool(rs_NovEmp!nevigencia) Then
                sinVig = True
                Exit Do 'Para que quede posicionado en la nov a modificar
            End If
            rs_NovEmp.MoveNext
        Loop
        
            'A partir de la V4.50
            'Busco si existe una misma novedad s/vigencia o c/vigencia diferente
            ExisteNovedad = False
            StrSql = "SELECT * FROM novemp WHERE "
            StrSql = StrSql & " concnro = " & ConcNro
            StrSql = StrSql & " AND tpanro = " & tpanro
            StrSql = StrSql & " AND empleado = " & Tercero
            OpenRecordset StrSql, rs_NovEmp2
            If Not rs_NovEmp2.EOF Then
                Flog.writeline "Existe una novedad"
                ExisteNovedad = True
            End If
            rs_NovEmp2.Close
'            -------------------------------------------------
    
            If Not sinVig Then ' No encontre con licencia
                If ExisteNovedad = True Then 'V4.50
                    Texto = "No se insertó la novedad. Ya existe y no se pisa."
                    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                Else
                'Inserto---------------------------------------------------------
                    If Not EsRetroactivo Then
                        StrSql = "INSERT INTO novemp (" & _
                                 "empleado,concnro,tpanro,nevalor,nevigencia"
                        StrSql = StrSql & ",tipmotnro,motivo"
                        StrSql = StrSql & ") VALUES (" & Tercero & _
                                 "," & ConcNro & _
                                 "," & tpanro & _
                                 "," & Monto & _
                                 ",0"
                        StrSql = StrSql & "," & TipoMotivo & _
                        ",'" & Motivo & "'"
                        StrSql = StrSql & " )"
                    Else
                        StrSql = "INSERT INTO novemp (" & _
                                 "empleado,concnro,tpanro,nevalor,nevigencia,nepliqdesde,nepliqhasta "
                        StrSql = StrSql & ",tipmotnro,motivo"
                        StrSql = StrSql & ") VALUES (" & Tercero & _
                                 "," & ConcNro & _
                                 "," & tpanro & _
                                 "," & Monto & _
                                 "," & CLng(TieneVigencia) & _
                                 "," & PeriodoDesde & _
                                 "," & PeriodoHasta
                        StrSql = StrSql & "," & TipoMotivo & _
                        ",'" & Motivo & "'"
                        StrSql = StrSql & " )"
                    End If
                    
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = "Novedad Insertada "
                    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                End If
            '-----------------------------------------------------------------
        Else
            'Existe una novedad pero sin vigencia ==> Actualizo
            
            Select Case CInt(AccionNovedad)
                Case -1: 'Actualizo la Novedad
                    If Not EsRetroactivo Then
                        StrSql = "UPDATE novemp SET nevalor = " & Monto
                            StrSql = StrSql & " , tipmotnro =  " & TipoMotivo & _
                            " , motivo =  '" & Motivo & "'"
                        StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                    Else
                        StrSql = "UPDATE novemp SET nevalor = " & Monto & _
                                 " , nepliqdesde =  " & PeriodoDesde & _
                                 " , nepliqhasta =  " & PeriodoHasta & _
                                 " , tipmotnro =  " & TipoMotivo & _
                                 " , motivo =  '" & Motivo & "'"
                        StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = "Novedad Actualizada "
                    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                    'Flog.Writeline Espacios(Tabulador * 1) & "Novedad Actualizada "
                Case 0: 'Mantiene Novedades
                    Texto = "No se insertó la novedad. Ya existe y no se pisa."
                    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                Case 1: 'Suma Novedades
                    If Not EsRetroactivo Then
                        StrSql = "UPDATE novemp SET nevalor = nevalor + " & Monto
                        StrSql = StrSql & " , tipmotnro =  " & TipoMotivo
                        StrSql = StrSql & " , motivo =  '" & Motivo & "'"
                        StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                    Else
                        StrSql = "UPDATE novemp SET nevalor = nevalor + " & Monto & _
                                 " , nepliqdesde =  " & PeriodoDesde & _
                                 " , nepliqhasta =  " & PeriodoHasta
                        StrSql = StrSql & " , tipmotnro =  " & TipoMotivo & _
                        " , motivo =  '" & Motivo & "'"
                        StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = "Novedad Sumada "
                    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
            End Select

        End If
    Else 'No encontre novedad alguna para el conc y param
        If ExisteNovedad = True Then 'V4.50
            Texto = "No se insertó la novedad. Ya existe y no se pisa."
            Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
        Else
            'Inserto
            If Not EsRetroactivo Then
                StrSql = "INSERT INTO novemp (" & _
                         "empleado,concnro,tpanro,nevalor,nevigencia"
                StrSql = StrSql & ",tipmotnro,motivo"
                StrSql = StrSql & ") VALUES (" & Tercero & _
                         "," & ConcNro & _
                         "," & tpanro & _
                         "," & Monto & _
                         ",0"
                StrSql = StrSql & "," & TipoMotivo & _
                ",'" & Motivo & "'"
                StrSql = StrSql & " )"
            Else
                StrSql = "INSERT INTO novemp (" & _
                         "empleado,concnro,tpanro,nevalor,nevigencia,nepliqdesde,nepliqhasta "
                StrSql = StrSql & ",tipmotnro,motivo"
                StrSql = StrSql & ") VALUES (" & Tercero & _
                         "," & ConcNro & _
                         "," & tpanro & _
                         "," & Monto & _
                         "," & CLng(TieneVigencia) & _
                         "," & PeriodoDesde & _
                         "," & PeriodoHasta
                StrSql = StrSql & "," & TipoMotivo & _
                ",'" & Motivo & "'"
                StrSql = StrSql & " )"
            End If
            objConn.Execute StrSql, , adExecuteNoRecords
            'Flog.Writeline Espacios(Tabulador * 1) & "Novedad insertada "
            Texto = "Novedad insertada "
            Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
        End If
    End If
  Else 'Tiene Vigencia
    'A partir de la V4.50
    'Busco si existe una misma novedad s/vigencia o c/vigencia diferente
    ExisteNovedad = False
    StrSql = "SELECT * FROM novemp WHERE "
    StrSql = StrSql & " concnro = " & ConcNro
    StrSql = StrSql & " AND tpanro = " & tpanro
    StrSql = StrSql & " AND empleado = " & Tercero
    OpenRecordset StrSql, rs_NovEmp2
    If Not rs_NovEmp2.EOF Then
        'Flog.WRITELINE "Existe una novedad"
        ExisteNovedad = True
    End If
    rs_NovEmp2.Close
    '-------------------------------------------------
   
   '_______________________________________________________________________
    'Reviso que no se pise
    StrSql = "SELECT * FROM novemp WHERE "
    StrSql = StrSql & " concnro = " & ConcNro
    StrSql = StrSql & " AND tpanro = " & tpanro
    StrSql = StrSql & " AND empleado = " & Tercero
    'StrSql = StrSql & " AND (nevigencia = 0 "
    StrSql = StrSql & " AND nevigencia = -1 "
    If Not EsNulo(FechaHasta) Then
'        StrSql = StrSql & " AND (nedesde <= " & ConvFecha(FechaHasta)
'        StrSql = StrSql & " AND nehasta >= " & ConvFecha(FechaDesde) & ")"
'        StrSql = StrSql & " OR  (nedesde <= " & ConvFecha(FechaHasta)
'        StrSql = StrSql & " AND nehasta is null )))"
        StrSql = StrSql & " AND nedesde = " & ConvFecha(FechaDesde)
        StrSql = StrSql & " AND nehasta = " & ConvFecha(FechaHasta)
    Else
        StrSql = StrSql & " AND nedesde = " & ConvFecha(FechaDesde)
        StrSql = StrSql & " AND nehasta is null"
    End If
    If rs_NovEmp.State = adStateOpen Then rs_NovEmp.Close
    OpenRecordset StrSql, rs_NovEmp
    
    If Not rs_NovEmp.EOF Then
    
        'Existe/n novedad/es con vigencia ==>
        Select Case CInt(AccionNovedad)
            Case -1: 'Actualizo la Novedad
                If Not EsRetroactivo Then
                    StrSql = "UPDATE novemp SET nevalor = " & Monto
                    StrSql = StrSql & " , tipmotnro =  " & TipoMotivo
                    StrSql = StrSql & " , motivo =  '" & Motivo & "'"
                    StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                Else
                    StrSql = "UPDATE novemp SET nevalor = " & Monto & _
                             " , nepliqdesde =  " & PeriodoDesde & _
                             " , nepliqhasta =  " & PeriodoHasta
                    StrSql = StrSql & " , tipmotnro =  " & TipoMotivo & _
                    " , motivo =  '" & Motivo & "'"
                    StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                End If
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = "Novedad Actualizada "
                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
            Case 0: 'Mantiene Novedades
                Texto = "No se insertó la novedad. Ya existe y no se pisa."
                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
            Case 1: 'Suma Novedades
                If Not EsRetroactivo Then
                    StrSql = "UPDATE novemp SET nevalor = nevalor + " & Monto
                    StrSql = StrSql & " , tipmotnro =  " & TipoMotivo
                    StrSql = StrSql & " , motivo =  '" & Motivo & "'"
                    StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                Else
                    StrSql = "UPDATE novemp SET nevalor = nevalor + " & Monto & _
                             " , nepliqdesde =  " & PeriodoDesde & _
                             " , nepliqhasta =  " & PeriodoHasta
                    StrSql = StrSql & " , tipmotnro =  " & TipoMotivo & _
                    " , motivo =  '" & Motivo & "'"
                    StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                End If
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = "Novedad Sumada "
                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
        End Select
        
    Else
        
        If ExisteNovedad = True Then 'V4.50
                Texto = "No se insertó la novedad. Ya existe y no se pisa."
                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
        Else
                If Not EsRetroactivo Then
                    StrSql = "INSERT INTO novemp ("
                    StrSql = StrSql & "empleado,concnro,tpanro,nevalor,nevigencia,nedesde"
                    If Not EsNulo(FechaHasta) Then
                        StrSql = StrSql & ",nehasta"
                    End If
                    StrSql = StrSql & ",tipmotnro,motivo"
                    StrSql = StrSql & ") VALUES (" & Tercero
                    StrSql = StrSql & "," & ConcNro
                    StrSql = StrSql & "," & tpanro
                    StrSql = StrSql & "," & Monto
                    StrSql = StrSql & ",-1"
                    StrSql = StrSql & "," & ConvFecha(FechaDesde)
                    If Not EsNulo(FechaHasta) Then
                        StrSql = StrSql & "," & ConvFecha(FechaHasta)
                    End If
                    StrSql = StrSql & "," & TipoMotivo & _
                    ",'" & Motivo & "'"
                    StrSql = StrSql & " )"
                Else
                    StrSql = "INSERT INTO novemp ("
                    StrSql = StrSql & "empleado,concnro,tpanro,nevalor,nevigencia,nedesde"
                    If Not EsNulo(FechaHasta) Then
                        StrSql = StrSql & ",nehasta"
                    End If
                    StrSql = StrSql & ",nepliqdesde,nepliqhasta"
                    StrSql = StrSql & ",tipmotnro,motivo"
                    StrSql = StrSql & ") VALUES (" & Tercero
                    StrSql = StrSql & "," & ConcNro
                    StrSql = StrSql & "," & tpanro
                    StrSql = StrSql & "," & Monto
                    StrSql = StrSql & ",-1"
                    StrSql = StrSql & "," & ConvFecha(FechaDesde)
                    If Not EsNulo(FechaHasta) Then
                        StrSql = StrSql & "," & ConvFecha(FechaHasta)
                    End If
                    StrSql = StrSql & "," & PeriodoDesde
                    StrSql = StrSql & "," & PeriodoHasta
                    StrSql = StrSql & "," & TipoMotivo & _
                    ",'" & Motivo & "'"
                    StrSql = StrSql & " )"
                End If
                objConn.Execute StrSql, , adExecuteNoRecords
                'Flog.Writeline Espacios(Tabulador * 1) & "Novedad insertada "
                Texto = "Novedad insertada "
                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
            End If
        
        
        End If
    
    

  End If







Fin:
'Cierro todo y libero
If rs_NovEmp.State = adStateOpen Then rs_NovEmp.Close
If rs_Empleado.State = adStateOpen Then rs_Empleado.Close
If rs_Concepto.State = adStateOpen Then rs_Concepto.Close
If rs_TipoPar.State = adStateOpen Then rs_TipoPar.Close
If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
If rs_con_for_tpa.State = adStateOpen Then rs_con_for_tpa.Close

Set rs_NovEmp = Nothing
Set rs_Empleado = Nothing
Set rs_Concepto = Nothing
Set rs_TipoPar = Nothing
Set rs_Periodo = Nothing
Set rs_con_for_tpa = Nothing
Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    Texto = Err.Description
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(1, 7)
    GoTo Fin
End Sub

Public Sub LineaModelo_346(ByVal strLinea As String)

' ---------------------------------------------------------------------------------------------
' Descripcion: Inserta Novedad segun formato para Simulación
' Autor      : Manterola Maria Magdalena
'              El formato es:
'                   Formato 1
'                       Legajo; conccod; tpanro; monto
'                   ó
'                   Formato 2.1
'                       Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta
'                   Formato 2.2
'                       Legajo; conccod; tpanro; monto; FechaDesde
'                   ó
'                   Formato 3
'                       Legajo; conccod; tpanro; monto; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro)

'                   ó
'                   Formato 4
'                       Legajo; conccod; tpanro; monto; tipo motivo; motivo

'                   ó
'                   Formato 5
'                       Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta; tipo motivo; motivo

'                   ó
'                   Formato 6
'                       Legajo; conccod; tpanro; monto; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro); tipo motivo; motivo

'                   ó
'                   Formato 7
'                       Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro); tipo motivo; motivo

' Fecha      : 09/11/2011
' ---------------------------------------------------------------------------------------------

Dim pos1 As Long
Dim pos2 As Long
    
Dim Tercero As Long
Dim NroLegajo As Long

Dim ConcNro As Long
Dim ConcCod As String
Dim fornro As Long

Dim tpanro As Long
Dim Aux_Monto As String
Dim Monto As Single
Dim FechaDesde As String
Dim FechaHasta As String

Dim PeriodoDesde
Dim PeriodoHasta
Dim TieneVigencia As Boolean
Dim EsRetroactivo As Boolean

Dim TipoMotivo As String
Dim Motivo As String

Dim Aux As String
Dim Encontro As Boolean

Dim perfsegcon As Integer
Dim tienePermiso As Integer

Dim sinVig As Boolean

Dim rs_Empleado As New ADODB.Recordset
Dim rs_Concepto As New ADODB.Recordset
Dim rs_TipoPar As New ADODB.Recordset
Dim rs_NovEmp As New ADODB.Recordset
Dim rs_Periodo As New ADODB.Recordset
Dim rs_con_for_tpa As New ADODB.Recordset
Dim rs_seguridad As New ADODB.Recordset
Dim rs_TipoMotivo As New ADODB.Recordset
Dim rs_cft_resumen As New ADODB.Recordset

' El formato es:
' Formato 1
' Legajo; conccod; tpanro; monto
' ó
' Formato 2.1
' Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta
' ó
' Formato 2.2
' Legajo; conccod; tpanro; monto; FechaDesde
' ó
' Formato 3
' Legajo; conccod; tpanro; monto; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro)
' ó
' Formato 4
' Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro)
    
    On Error GoTo Manejador_De_Error
    Tabs = 1
    
    TieneVigencia = False
    EsRetroactivo = False

    Texto = "Procesando linea " & strLinea
    Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    
    NroColumna = NroColumna + 1
    'Nro de Legajo
    pos1 = 1
    pos2 = InStr(pos1, strLinea, separador)
    If IsNumeric(Mid$(strLinea, pos1, pos2 - pos1)) Then
        NroLegajo = Mid$(strLinea, pos1, pos2 - pos1)
    Else
        Texto = ": " & "El legajo no es numerico "
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call InsertaError(1, 8)
        HuboError = True
        Exit Sub
    End If
    
   
    NroColumna = NroColumna + 1
    'Concepto
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    ConcCod = Mid(strLinea, pos1, pos2 - pos1)
    ConcCod = EliminarCHInvalidosII(ConcCod, 1, "")
    
    
    NroColumna = NroColumna + 1
    'Tipo de Parametro
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    tpanro = Mid(strLinea, pos1, pos2 - pos1)
    

    NroColumna = NroColumna + 1
    'Monto
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    If pos2 = 0 Then
        pos2 = Len(strLinea)
        Aux_Monto = Mid(strLinea, pos1, pos2)
        Monto = CSng(Replace(CStr(Aux_Monto), SeparadorDecimal, "."))
    Else
        Aux_Monto = Mid(strLinea, pos1, pos2 - pos1)
        Monto = CSng(Replace(CStr(Aux_Monto), SeparadorDecimal, "."))
        
        'Puede veniar Fecha Desde; fecha Hasta ó Retroactivo, Periodo desde , Periodo Hasta
        pos1 = pos2 + 1
        pos2 = InStr(pos1 + 1, strLinea, separador)
        
        If pos2 > 0 Then
            NroColumna = NroColumna + 1
            Aux = Mid(strLinea, pos1, pos2 - pos1)
            
            If IsDate(Aux) Then
                TieneVigencia = True
                'Fecha desde
                FechaDesde = Mid(strLinea, pos1, pos2 - pos1)
            
                NroColumna = NroColumna + 1
                'Fecha Hasta
                pos1 = pos2 + 1
                pos2 = InStr(pos1, strLinea, separador)
                
                If pos2 > 0 Then
                    FechaHasta = Mid(strLinea, pos1, pos2 - pos1)
                    If IsDate(FechaHasta) Then
                        FechaHasta = CDate(FechaHasta)
                    Else
                        If Not EsNulo(FechaHasta) Then
                            Texto = ": Fecha no valida "
                            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                            Call InsertaError(1, 4)
                            HuboError = True
                            Exit Sub
                        End If
                    End If
                    NroColumna = NroColumna + 1
                    'Marca de Retroactividad
                    pos1 = pos2 + 1
                    pos2 = InStr(pos1 + 1, strLinea, separador)
                    Aux = Mid(strLinea, pos1, pos2 - pos1)
                    If UCase(Aux) = "SI" Then
                        EsRetroactivo = True
                    Else
                        EsRetroactivo = False
                    End If
                    If EsRetroactivo Then
                        'Periodo desde
                        pos1 = pos2 + 1
                        pos2 = InStr(pos1 + 1, strLinea, separador)
                        PeriodoDesde = Mid(strLinea, pos1, pos2 - pos1)
                        'Periodo hasta
                        pos1 = pos2 + 1
                        pos2 = InStr(pos1 + 1, strLinea, separador)
                        If pos2 > 0 Then 'Se especifican tipo de motivo y motivo
                            PeriodoHasta = Mid(strLinea, pos1, pos2 - pos1)
                            'Tipo de motivo
                            pos1 = pos2 + 1
                            pos2 = InStr(pos1 + 1, strLinea, separador)
                            If pos2 > 0 Then
                                TipoMotivo = Mid(strLinea, pos1, pos2 - pos1)
                                pos1 = pos2 + 1
                                pos2 = InStr(pos1 + 1, strLinea, separador)
                                If pos2 > 0 Then
                                    'Motivo
                                    Motivo = Mid(strLinea, pos1, pos2 - pos1)
                                    Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                                Else
                                    'Motivo
                                    pos2 = Len(strLinea)
                                    Motivo = Mid(strLinea, pos1, pos2)
                                    Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                                End If
                            Else
                                pos2 = Len(strLinea)
                                TipoMotivo = Mid(strLinea, pos1, pos2)
                                'Motivo
                                Motivo = ""
                            End If
                        Else
                            pos2 = Len(strLinea)
                            PeriodoHasta = Mid(strLinea, pos1, pos2)
                        End If
                    Else 'el siguiente dato es el tipo de motivo
                        TipoMotivo = Aux
                        pos1 = pos2 + 1
                        pos2 = InStr(pos1 + 1, strLinea, separador)
                        If pos2 > 0 Then 'Se especifican tipo de motivo y motivo
                            'Motivo
                            Motivo = Mid(strLinea, pos1, pos2 - pos1)
                            Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                        Else
                            pos2 = Len(strLinea)
                            Motivo = Mid(strLinea, pos1, pos2)
                            Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                        End If
                    End If
                    
                Else
                    pos2 = Len(strLinea)
                    FechaHasta = Mid(strLinea, pos1, pos2)
                    TieneVigencia = True
                End If
            Else
                If UCase(Aux) = "SI" Then
                    EsRetroactivo = True
                Else
                    EsRetroactivo = False
                End If
                If EsRetroactivo Then
                    'Periodo desde
                    pos1 = pos2 + 1
                    pos2 = InStr(pos1 + 1, strLinea, separador)
                    PeriodoDesde = Mid(strLinea, pos1, pos2 - pos1)
                    'Periodo hasta
                    pos1 = pos2 + 1
                    pos2 = InStr(pos1 + 1, strLinea, separador)
                    If pos2 > 0 Then 'Se especifican tipo de motivo y motivo
                        PeriodoHasta = Mid(strLinea, pos1, pos2 - pos1)
                        'Tipo de motivo
                        pos1 = pos2 + 1
                        pos2 = InStr(pos1 + 1, strLinea, separador)
                        If pos2 > 0 Then
                            TipoMotivo = Mid(strLinea, pos1, pos2 - pos1)
                            pos1 = pos2 + 1
                            pos2 = InStr(pos1 + 1, strLinea, separador)
                            If pos2 > 0 Then
                                'Motivo
                                Motivo = Mid(strLinea, pos1, pos2 - pos1)
                                Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                            Else
                                'Motivo
                                pos2 = Len(strLinea)
                                Motivo = Mid(strLinea, pos1, pos2)
                                Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                            End If
                        Else
                            pos2 = Len(strLinea)
                            TipoMotivo = Mid(strLinea, pos1, pos2)
                            'Motivo
                            Motivo = ""
                        End If
                    Else
                        pos2 = Len(strLinea)
                        PeriodoHasta = Mid(strLinea, pos1, pos2)
                    End If
                Else 'el siguiente dato es el tipo de motivo
                    TipoMotivo = Aux
                    pos1 = pos2 + 1
                    pos2 = InStr(pos1 + 1, strLinea, separador)
                    If pos2 > 0 Then 'Se especifican tipo de motivo y motivo
                        'Motivo
                        Motivo = Mid(strLinea, pos1, pos2 - pos1)
                        Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                    Else
                        pos2 = Len(strLinea)
                        Motivo = Mid(strLinea, pos1, pos2)
                        Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                    End If
                End If
            End If
        Else
            If Not pos1 >= Len(strLinea) Then
                'Viene Vigencia con fecha desde y sin fecha hasta
                pos2 = Len(strLinea)
                FechaDesde = Mid(strLinea, pos1, pos2)
                TieneVigencia = True
                FechaHasta = ""
            End If
        End If
    End If



' ====================================================================
'   Validar los parametros Levantados



'Verifica que exista el legajo para la vista de empleado
StrSql = "SELECT * FROM sim_empleado where empleg = " & NroLegajo
OpenRecordset StrSql, rs_Empleado
If rs_Empleado.EOF Then
    Texto = ": " & "No se encontro el legajo " & NroLegajo
    NroColumna = 1
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(1, 8)
    HuboError = True
    Exit Sub
Else
    Tercero = rs_Empleado!Ternro
End If


'Que exista el concepto
StrSql = "SELECT * FROM concepto WHERE conccod = '" & ConcCod & "'"
'StrSql = "SELECT * FROM concepto WHERE conccod = " & Conccod
'StrSql = StrSql & " OR conccod = '" & Conccod & "'"
OpenRecordset StrSql, rs_Concepto
If rs_Concepto.EOF Then
    Texto = ": " & "No se encontro el Concepto " & ConcCod
    NroColumna = 2
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(2, 10)
    HuboError = True
    Exit Sub
Else
    ConcNro = rs_Concepto!ConcNro
    fornro = rs_Concepto!fornro
End If

'Que exista el tipo de Parametro
StrSql = "SELECT * FROM tipopar WHERE tpanro = " & tpanro
OpenRecordset StrSql, rs_TipoPar

If rs_TipoPar.EOF Then
    Texto = ": " & "No se encontro el Tipo de Parametro " & tpanro
    NroColumna = 3
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(3, 11)
    HuboError = True
    Exit Sub
End If


'FGZ - 27/01/2004
'Faltaria revisar que el par concepto-parametro se resuelva por novedad
StrSql = "SELECT * FROM con_for_tpa "
StrSql = StrSql & " WHERE concnro = " & ConcNro
StrSql = StrSql & " AND fornro =" & fornro
StrSql = StrSql & " AND tpanro =" & tpanro
OpenRecordset StrSql, rs_con_for_tpa

If rs_con_for_tpa.EOF Then
    Texto = ": " & "El parametro " & tpanro & " no esta asociado a la formula del concepto " & ConcCod
    NroColumna = 3
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(3, 11)
    HuboError = True
    Exit Sub
Else
    Encontro = False
    Do While Not Encontro And Not rs_con_for_tpa.EOF
        If Not CBool(rs_con_for_tpa!cftauto) Then
            Encontro = True
        End If
        rs_con_for_tpa.MoveNext
    Loop
    If Not Encontro Then
        Texto = ": " & "El parametro " & tpanro & " del concepto " & ConcCod & " no se resuelve por novedad "
        NroColumna = 3
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call InsertaError(3, 11)
        HuboError = True
        Exit Sub
    End If
End If


If EsRetroactivo Then
  'Chequeo que los periodos sean validos
  'Chequeo Periodo Desde
  
  StrSql = "SELECT * FROM periodo WHERE pliqnro = " & PeriodoDesde
  If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
  OpenRecordset StrSql, rs_Periodo
  If rs_Periodo.EOF Then
      Texto = ": " & "Periodo Desde Invalido " & PeriodoDesde
      NroColumna = 6
      Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
      Call InsertaError(6, 36)
      HuboError = True
      Exit Sub
  End If
  
  'Chequeo Periodo Hasta
  StrSql = "SELECT * FROM periodo WHERE pliqnro = " & PeriodoHasta
  If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
  OpenRecordset StrSql, rs_Periodo
  If rs_Periodo.EOF Then
      Texto = ": " & "Periodo Hasta Invalido " & PeriodoHasta
      NroColumna = 7
      Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
      Call InsertaError(7, 36)
      HuboError = True
      Exit Sub
  End If
End If

'=============================================================
'Si viene el tipo de motivo cargo ese y valido que exista sino viene, busco si hay un default
If Len(TipoMotivo) = 0 Or (TipoMotivo = "N/A") Then
    'Verifico si hay un default
    StrSql = "SELECT tipmotnro, motivo FROM cft_resumen where concnro = " & ConcNro
    StrSql = StrSql & " AND tpanro = " & tpanro
    OpenRecordset StrSql, rs_cft_resumen
    If Not rs_cft_resumen.EOF Then
        TipoMotivo = IIf(IsNull(rs_cft_resumen!tipmotnro), "0", rs_cft_resumen!tipmotnro)
    End If
    rs_cft_resumen.Close
Else
    'Valido contra BD que exista el motivo
    StrSql = "SELECT * FROM tipomotivo where tipmotnro = " & TipoMotivo
    OpenRecordset StrSql, rs_TipoMotivo
    If rs_TipoMotivo.EOF Then
        Texto = ": " & "No se encontro el tipo de motivo " & TipoMotivo
        NroColumna = 13
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call InsertaError(13, 116)
        HuboError = True
        Exit Sub
    End If
    rs_TipoMotivo.Close
End If

'Si viene motivo cargo ese, sino viene, busco si hay un default
If Len(Motivo) = 0 Or (Motivo = "N/A") Then
    'Verifico si hay un default
    StrSql = "SELECT tipmotnro, motivo FROM cft_resumen where concnro = " & ConcNro
    StrSql = StrSql & " AND tpanro = " & tpanro
    OpenRecordset StrSql, rs_cft_resumen
    If Not rs_cft_resumen.EOF Then
        Motivo = IIf(IsNull(rs_cft_resumen!Motivo), "", rs_cft_resumen!Motivo)
    End If
    rs_cft_resumen.Close
End If

If Len(TipoMotivo) = 0 Then TipoMotivo = "null"
If TipoMotivo = "N/A" Then TipoMotivo = "null"
If TipoMotivo = "0" Then TipoMotivo = "null"
If Motivo = "N/A" Then Motivo = ""

'=============================================================
'Busco si existe la Novedad

  If Not TieneVigencia Then
    StrSql = "SELECT * FROM sim_novemp WHERE "
    StrSql = StrSql & " concnro = " & ConcNro
    StrSql = StrSql & " AND tpanro = " & tpanro
    StrSql = StrSql & " AND empleado = " & Tercero
    StrSql = StrSql & " AND (nevigencia = -1 OR nevigencia = 0) "
    StrSql = StrSql & " ORDER BY nevigencia "
    If rs_NovEmp.State = adStateOpen Then rs_NovEmp.Close
    OpenRecordset StrSql, rs_NovEmp
    
    If Not rs_NovEmp.EOF Then
    
        'Busco si existe una novedad sin vigencia
        sinVig = False
        Do While Not rs_NovEmp.EOF
            If Not CBool(rs_NovEmp!nevigencia) Then
                sinVig = True
                Exit Do 'Para que quede posicionado en la nov a modificar
            End If
            rs_NovEmp.MoveNext
        Loop
    
        If Not sinVig Then ' No encontre con licencia
            'Inserto---------------------------------------------------------
            If Not EsRetroactivo Then
                StrSql = "INSERT INTO sim_novemp (" & _
                         "empleado,concnro,tpanro,nevalor,nevigencia"
                StrSql = StrSql & ",tipmotnro,motivo"
                StrSql = StrSql & ") VALUES (" & Tercero & _
                         "," & ConcNro & _
                         "," & tpanro & _
                         "," & Monto & _
                         ",0"
                StrSql = StrSql & "," & TipoMotivo & _
                ",'" & Motivo & "'"
                StrSql = StrSql & " )"
            Else
                StrSql = "INSERT INTO sim_novemp (" & _
                         "empleado,concnro,tpanro,nevalor,nevigencia,nepliqdesde,nepliqhasta "
                StrSql = StrSql & ",tipmotnro,motivo"
                StrSql = StrSql & ") VALUES (" & Tercero & _
                         "," & ConcNro & _
                         "," & tpanro & _
                         "," & Monto & _
                         "," & CLng(TieneVigencia) & _
                         "," & PeriodoDesde & _
                         "," & PeriodoHasta
                StrSql = StrSql & "," & TipoMotivo & _
                ",'" & Motivo & "'"
                StrSql = StrSql & " )"
            End If
            
            objConn.Execute StrSql, , adExecuteNoRecords
            Texto = "Novedad Insertada "
            Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)

            '-----------------------------------------------------------------
        Else
            'Existe una novedad pero sin vigencia ==> Actualizo
            
            Select Case CInt(AccionNovedad)
                Case -1: 'Actualizo la Novedad
                    If Not EsRetroactivo Then
                        StrSql = "UPDATE sim_novemp SET nevalor = " & Monto
                            StrSql = StrSql & " , tipmotnro =  " & TipoMotivo & _
                            " , motivo =  '" & Motivo & "'"
                        StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                    Else
                        StrSql = "UPDATE sim_novemp SET nevalor = " & Monto & _
                                 " , nepliqdesde =  " & PeriodoDesde & _
                                 " , nepliqhasta =  " & PeriodoHasta & _
                                 " , tipmotnro =  " & TipoMotivo & _
                                 " , motivo =  '" & Motivo & "'"
                        StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = "Novedad Actualizada "
                    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                    'Flog.Writeline Espacios(Tabulador * 1) & "Novedad Actualizada "
                Case 0: 'Mantiene Novedades
                    Texto = "No se insertó la novedad. Ya existe y no se pisa."
                    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                Case 1: 'Suma Novedades
                    If Not EsRetroactivo Then
                        StrSql = "UPDATE sim_novemp SET nevalor = nevalor + " & Monto
                        StrSql = StrSql & " , tipmotnro =  " & TipoMotivo
                        StrSql = StrSql & " , motivo =  '" & Motivo & "'"
                        StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                    Else
                        StrSql = "UPDATE sim_novemp SET nevalor = nevalor + " & Monto & _
                                 " , nepliqdesde =  " & PeriodoDesde & _
                                 " , nepliqhasta =  " & PeriodoHasta
                        StrSql = StrSql & " , tipmotnro =  " & TipoMotivo & _
                        " , motivo =  '" & Motivo & "'"
                        StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = "Novedad Sumada "
                    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
            End Select

        End If
    Else 'No encontre novedad alguna para el conc y param
        'Inserto
        If Not EsRetroactivo Then
            StrSql = "INSERT INTO sim_novemp (" & _
                     "empleado,concnro,tpanro,nevalor,nevigencia"
            StrSql = StrSql & ",tipmotnro,motivo"
            StrSql = StrSql & ") VALUES (" & Tercero & _
                     "," & ConcNro & _
                     "," & tpanro & _
                     "," & Monto & _
                     ",0"
            StrSql = StrSql & "," & TipoMotivo & _
            ",'" & Motivo & "'"
            StrSql = StrSql & " )"
        Else
            StrSql = "INSERT INTO sim_novemp (" & _
                     "empleado,concnro,tpanro,nevalor,nevigencia,nepliqdesde,nepliqhasta "
            StrSql = StrSql & ",tipmotnro,motivo"
            StrSql = StrSql & ") VALUES (" & Tercero & _
                     "," & ConcNro & _
                     "," & tpanro & _
                     "," & Monto & _
                     "," & CLng(TieneVigencia) & _
                     "," & PeriodoDesde & _
                     "," & PeriodoHasta
            StrSql = StrSql & "," & TipoMotivo & _
            ",'" & Motivo & "'"
            StrSql = StrSql & " )"
        End If
        objConn.Execute StrSql, , adExecuteNoRecords
        'Flog.Writeline Espacios(Tabulador * 1) & "Novedad insertada "
        Texto = "Novedad insertada "
        Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
    End If
  Else 'Tiene Vigencia
    'Reviso que no se pise
    StrSql = "SELECT * FROM sim_novemp WHERE "
    StrSql = StrSql & " concnro = " & ConcNro
    StrSql = StrSql & " AND tpanro = " & tpanro
    StrSql = StrSql & " AND empleado = " & Tercero
    'StrSql = StrSql & " AND (nevigencia = 0 "
    StrSql = StrSql & " AND nevigencia = -1 "
    If Not EsNulo(FechaHasta) Then
'        StrSql = StrSql & " AND (nedesde <= " & ConvFecha(FechaHasta)
'        StrSql = StrSql & " AND nehasta >= " & ConvFecha(FechaDesde) & ")"
'        StrSql = StrSql & " OR  (nedesde <= " & ConvFecha(FechaHasta)
'        StrSql = StrSql & " AND nehasta is null )))"
        StrSql = StrSql & " AND nedesde = " & ConvFecha(FechaDesde)
        StrSql = StrSql & " AND nehasta = " & ConvFecha(FechaHasta)
    Else
        StrSql = StrSql & " AND nedesde = " & ConvFecha(FechaDesde)
        StrSql = StrSql & " AND nehasta is null"
    End If
    If rs_NovEmp.State = adStateOpen Then rs_NovEmp.Close
    OpenRecordset StrSql, rs_NovEmp
    
    If Not rs_NovEmp.EOF Then
    
        'Existe/n novedad/es con vigencia ==>
        Select Case CInt(AccionNovedad)
            Case -1: 'Actualizo la Novedad
                If Not EsRetroactivo Then
                    StrSql = "UPDATE sim_novemp SET nevalor = " & Monto
                    StrSql = StrSql & " , tipmotnro =  " & TipoMotivo
                    StrSql = StrSql & " , motivo =  '" & Motivo & "'"
                    StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                Else
                    StrSql = "UPDATE sim_novemp SET nevalor = " & Monto & _
                             " , nepliqdesde =  " & PeriodoDesde & _
                             " , nepliqhasta =  " & PeriodoHasta
                    StrSql = StrSql & " , tipmotnro =  " & TipoMotivo & _
                    " , motivo =  '" & Motivo & "'"
                    StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                End If
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = "Novedad Actualizada "
                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
            Case 0: 'Mantiene Novedades
                Texto = "No se insertó la novedad. Ya existe y no se pisa."
                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
            Case 1: 'Suma Novedades
                If Not EsRetroactivo Then
                    StrSql = "UPDATE sim_novemp SET nevalor = nevalor + " & Monto
                    StrSql = StrSql & " , tipmotnro =  " & TipoMotivo
                    StrSql = StrSql & " , motivo =  '" & Motivo & "'"
                    StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                Else
                    StrSql = "UPDATE sim_novemp SET nevalor = nevalor + " & Monto & _
                             " , nepliqdesde =  " & PeriodoDesde & _
                             " , nepliqhasta =  " & PeriodoHasta
                    StrSql = StrSql & " , tipmotnro =  " & TipoMotivo & _
                    " , motivo =  '" & Motivo & "'"
                    StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                End If
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = "Novedad Sumada "
                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
        End Select
        
    Else
        If Not EsRetroactivo Then
            StrSql = "INSERT INTO sim_novemp ("
            StrSql = StrSql & "empleado,concnro,tpanro,nevalor,nevigencia,nedesde"
            If Not EsNulo(FechaHasta) Then
                StrSql = StrSql & ",nehasta"
            End If
            StrSql = StrSql & ",tipmotnro,motivo"
            StrSql = StrSql & ") VALUES (" & Tercero
            StrSql = StrSql & "," & ConcNro
            StrSql = StrSql & "," & tpanro
            StrSql = StrSql & "," & Monto
            StrSql = StrSql & ",-1"
            StrSql = StrSql & "," & ConvFecha(FechaDesde)
            If Not EsNulo(FechaHasta) Then
                StrSql = StrSql & "," & ConvFecha(FechaHasta)
            End If
            StrSql = StrSql & "," & TipoMotivo & _
            ",'" & Motivo & "'"
            StrSql = StrSql & " )"
        Else
            StrSql = "INSERT INTO sim_novemp ("
            StrSql = StrSql & "empleado,concnro,tpanro,nevalor,nevigencia,nedesde"
            If Not EsNulo(FechaHasta) Then
                StrSql = StrSql & ",nehasta"
            End If
            StrSql = StrSql & ",nepliqdesde,nepliqhasta"
            StrSql = StrSql & ",tipmotnro,motivo"
            StrSql = StrSql & ") VALUES (" & Tercero
            StrSql = StrSql & "," & ConcNro
            StrSql = StrSql & "," & tpanro
            StrSql = StrSql & "," & Monto
            StrSql = StrSql & ",-1"
            StrSql = StrSql & "," & ConvFecha(FechaDesde)
            If Not EsNulo(FechaHasta) Then
                StrSql = StrSql & "," & ConvFecha(FechaHasta)
            End If
            StrSql = StrSql & "," & PeriodoDesde
            StrSql = StrSql & "," & PeriodoHasta
            StrSql = StrSql & "," & TipoMotivo & _
            ",'" & Motivo & "'"
            StrSql = StrSql & " )"
        End If
        objConn.Execute StrSql, , adExecuteNoRecords
        'Flog.Writeline Espacios(Tabulador * 1) & "Novedad insertada "
        Texto = "Novedad insertada "
        Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
    End If
  End If







Fin:
'Cierro todo y libero
If rs_NovEmp.State = adStateOpen Then rs_NovEmp.Close
If rs_Empleado.State = adStateOpen Then rs_Empleado.Close
If rs_Concepto.State = adStateOpen Then rs_Concepto.Close
If rs_TipoPar.State = adStateOpen Then rs_TipoPar.Close
If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
If rs_con_for_tpa.State = adStateOpen Then rs_con_for_tpa.Close

Set rs_NovEmp = Nothing
Set rs_Empleado = Nothing
Set rs_Concepto = Nothing
Set rs_TipoPar = Nothing
Set rs_Periodo = Nothing
Set rs_con_for_tpa = Nothing
Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    Texto = Err.Description
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(1, 7)
    GoTo Fin
End Sub

Public Sub LineaModelo_213(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Inserta Acumulados Diarios segun formato
' Autor      : FAF
'              El formato es:
'               Legajo; Fecha; Thnro; cantidad
' Fecha      : 14/09/2006
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim pos1 As Integer
Dim pos2 As Integer
    
Dim Tercero As Long
Dim NroLegajo As Long
Dim thnro As Long
Dim Cantidad As Double
Dim FechaAD As Date
Dim FechaAD_aux As String
Dim Cantidad_aux As String

Dim rs_Empleado As New ADODB.Recordset
Dim rs_TipHora As New ADODB.Recordset
Dim rs_GTI_AcumDiario As New ADODB.Recordset


    On Error GoTo Manejador_De_Error
    
    Tabs = 1
    
    'Nro de Legajo
    pos1 = 1
    pos2 = InStr(pos1, strLinea, separador)
    If IsNumeric(Mid$(strLinea, pos1, pos2 - pos1)) Then
        NroLegajo = Mid$(strLinea, pos1, pos2 - pos1)
    Else
        InsertaError 1, 8
        GoTo Fin
    End If
    
    'Fecha
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    FechaAD_aux = Mid(strLinea, pos1, pos2 - pos1)

    'Tipo de Hora
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    thnro = Mid(strLinea, pos1, pos2 - pos1)

    'Cantidad
    pos1 = pos2 + 1
    pos2 = Len(strLinea)
    Cantidad_aux = Mid(strLinea, pos1, pos2)

'====================================================================
' Validar los parametros Levantados

    'Que exista el legajo
    StrSql = "SELECT * FROM empleado where empleg = " & NroLegajo
    OpenRecordset StrSql, rs_Empleado
    If rs_Empleado.EOF Then
        NroColumna = 1
        Texto = "No se encontro el legajo --> " & NroLegajo
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        InsertaError 1, 8
        GoTo Fin
    Else
        Tercero = rs_Empleado!Ternro
    End If
    
    'Que la fecha sea valida
    If Not IsDate(FechaAD_aux) Then
        NroColumna = 2
        Texto = "Fecha no válida --> " & FechaAD_aux
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        InsertaError 2, 4
        GoTo Fin
    Else
        FechaAD = CDate(FechaAD_aux)
    End If
    
    'Que exista el tipo de hora
    StrSql = "SELECT * FROM tiphora WHERE thnro = " & thnro
    OpenRecordset StrSql, rs_TipHora
    If rs_TipHora.EOF Then
        NroColumna = 3
        Texto = "No se encontro el tipo de hora --> " & thnro
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        InsertaError 3, 37
        GoTo Fin
    End If
    
    'Que sea numerico la cantidad
    If Not IsNumeric(Cantidad_aux) Then
        NroColumna = 4
        Texto = "La cantidad no es numérica --> " & Cantidad_aux
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        InsertaError 4, 38
        GoTo Fin
    Else
        Cantidad = CDbl(Cantidad_aux)
    End If
    
'=============================================================
'Busco si existe
    StrSql = "SELECT * FROM gti_acumdiario WHERE " & _
             " thnro = " & thnro & _
             " AND ternro = " & Tercero & _
             " AND adfecha = " & ConvFecha(FechaAD)
    OpenRecordset StrSql, rs_GTI_AcumDiario
    
    If rs_GTI_AcumDiario.EOF Then
            StrSql = "INSERT INTO gti_acumdiario (" & _
                     "ternro,thnro,adfecha,adcanthoras,admanual,advalido,adestado" & _
                     ") VALUES (" & Tercero & _
                     "," & thnro & _
                     "," & ConvFecha(FechaAD) & _
                     "," & Cantidad & _
                     ",0,0,'L'" & _
                     " )"
        objConn.Execute StrSql, , adExecuteNoRecords
        Texto = "Acum Diario insertado "
        Call Escribir_Log("flogp", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Else
        StrSql = "SELECT * FROM gti_acumdiario WHERE " & _
                 " thnro = " & thnro & _
                 " AND ternro = " & Tercero & _
                 " AND admanual = 0 AND adValido = 0 AND adestado = 'L'"
        If rs_GTI_AcumDiario.State = adStateOpen Then rs_GTI_AcumDiario.Close
        OpenRecordset StrSql, rs_GTI_AcumDiario
        
        If Not rs_GTI_AcumDiario.EOF Then
                StrSql = "UPDATE gti_acumdiario SET adcanthoras = " & Cantidad & _
                         " WHERE thnro = " & thnro & _
                         " AND ternro = " & Tercero & _
                         " AND admanual = 0 AND adValido = 0 AND adestado = 'L'"
            objConn.Execute StrSql, , adExecuteNoRecords
            Texto = "Acum Diario Actualizado."
            Call Escribir_Log("flogp", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Else
            Texto = "El Acum Diario ya existe."
            Call Escribir_Log("flogp", NroLinea, NroColumna, Texto, Tabs, strLinea)
            InsertaError 1, 54
        End If
    End If

If rs_Empleado.State = adStateOpen Then rs_Empleado.Close
If rs_TipHora.State = adStateOpen Then rs_TipHora.Close
If rs_GTI_AcumDiario.State = adStateOpen Then rs_GTI_AcumDiario.Close

Set rs_Empleado = Nothing
Set rs_TipHora = Nothing
Set rs_GTI_AcumDiario = Nothing

Fin:
Exit Sub

Manejador_De_Error:
    HuboError = True
'Resume Next
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    Texto = Err.Description
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(1, 7)
    GoTo Fin
End Sub


Public Sub LineaModelo_214(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Inserta en emp_ticket y posiblemente en emptikdist (si es que hay distribucion).
' Autor      : FGZ
'              El formato es:
'                   Legajo; sigla; Monto; [catidad1; Valor1 ...[catidad5; Valor5]]
' Fecha      : '29/07/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim pos1 As Long
Dim pos2 As Long
Dim I As Long

Dim Tercero As Long
Dim NroLegajo As Long

Dim Sigla As String
Dim Monto As Single

Dim cant(5) As Long
Dim Valor(5) As Single
Dim TikValnro(5) As Long
Dim MontoCorrecto As Boolean
Dim TickNro As Long
Dim EtikNro As Long

Dim Cantidades As Long '0-5 Dice la cantidad de pares (cant,valor)

Dim rs_Empleado As New ADODB.Recordset
Dim rs_Ticket As New ADODB.Recordset
Dim rs_EMP_Ticket As New ADODB.Recordset
Dim rs_EMP_TikDist As New ADODB.Recordset
Dim rs_Ticket_Valor As New ADODB.Recordset
Dim rs_TikValor As New ADODB.Recordset

On Error GoTo Manejador_De_Error

Cantidades = 0
Tabs = 1
' El formato es:
' Legajo; sigla; Monto; [catidad1; Valor1 ...[catidad5; Valor5]]

    NroColumna = NroColumna + 1
    'Nro de Legajo
    pos1 = 1
    pos2 = InStr(pos1, strLinea, separador)
    If IsNumeric(Mid$(strLinea, pos1, pos2 - pos1)) Then
        NroLegajo = Mid$(strLinea, pos1, pos2 - pos1)
    Else
        InsertaError 1, 8
        HuboError = True
        Exit Sub
    End If
    
    NroColumna = NroColumna + 1
    'Sigla
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    Sigla = Mid(strLinea, pos1, pos2 - pos1)

    NroColumna = NroColumna + 1
    'Monto
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    If pos2 = 0 Then
        pos2 = Len(strLinea)
        Monto = Mid(strLinea, pos1, pos2)
    Else
        Monto = Mid(strLinea, pos1, pos2 - pos1)
               
        Cantidades = Cantidades + 1
        NroColumna = NroColumna + 1
        'Cantidad 1
        pos1 = pos2 + 1
        pos2 = InStr(pos1 + 1, strLinea, separador)
        cant(Cantidades) = Mid(strLinea, pos1, pos2 - pos1)
        
        'Valor1
        NroColumna = NroColumna + 1
        pos1 = pos2 + 1
        pos2 = InStr(pos1 + 1, strLinea, separador)
        If pos2 = 0 Then
           pos2 = Len(strLinea)
           Valor(Cantidades) = Mid(strLinea, pos1, pos2)
        Else
           Valor(Cantidades) = Mid(strLinea, pos1, pos2 - pos1)
                
            Cantidades = Cantidades + 1
            NroColumna = NroColumna + 1
           'Cantidad 2
           pos1 = pos2 + 1
           pos2 = InStr(pos1 + 1, strLinea, separador)
           cant(Cantidades) = Mid(strLinea, pos1, pos2 - pos1)
                
           'Valor2
            NroColumna = NroColumna + 1
            pos1 = pos2 + 1
            pos2 = InStr(pos1 + 1, strLinea, separador)
            If pos2 = 0 Then
                pos2 = Len(strLinea)
                Valor(Cantidades) = Mid(strLinea, pos1, pos2)
            Else
                Valor(Cantidades) = Mid(strLinea, pos1, pos2 - pos1)
                        
                Cantidades = Cantidades + 1
                NroColumna = NroColumna + 1
                'Cantidad 3
                pos1 = pos2 + 1
                pos2 = InStr(pos1 + 1, strLinea, separador)
                cant(Cantidades) = Mid(strLinea, pos1, pos2 - pos1)
                     
                NroColumna = NroColumna + 1
                'Valor3
                 pos1 = pos2 + 1
                 pos2 = InStr(pos1 + 1, strLinea, separador)
                 If pos2 = 0 Then
                     pos2 = Len(strLinea)
                     Valor(Cantidades) = Mid(strLinea, pos1, pos2)
                 Else
                     Valor(Cantidades) = Mid(strLinea, pos1, pos2 - pos1)
                     
                     Cantidades = Cantidades + 1
                     
                     NroColumna = NroColumna + 1
                    'Cantidad 4
                    pos1 = pos2 + 1
                    pos2 = InStr(pos1 + 1, strLinea, separador)
                    cant(Cantidades) = Mid(strLinea, pos1, pos2 - pos1)
                    
                    NroColumna = NroColumna + 1
                    'Valor4
                     pos1 = pos2 + 1
                     pos2 = InStr(pos1 + 1, strLinea, separador)
                     If pos2 = 0 Then
                         pos2 = Len(strLinea)
                         Valor(Cantidades) = Mid(strLinea, pos1, pos2)
                     Else
                         Valor(Cantidades) = Mid(strLinea, pos1, pos2 - pos1)
                         
                         Cantidades = Cantidades + 1
                         NroColumna = NroColumna + 1
                        'Cantidad 5
                        pos1 = pos2 + 1
                        pos2 = InStr(pos1 + 1, strLinea, separador)
                        cant(Cantidades) = Mid(strLinea, pos1, pos2 - pos1)
                        
                        NroColumna = NroColumna + 1
                        'Valor5
                         pos1 = pos2 + 1
                         pos2 = Len(strLinea)
                         Valor(Cantidades) = Mid(strLinea, pos1, pos2)
                     End If
                 End If
            End If
        End If
    End If

' ====================================================================
'   Validar los parametros Levantados

'Que exista el legajo
StrSql = "SELECT * FROM empleado where empleg = " & NroLegajo
OpenRecordset StrSql, rs_Empleado
If rs_Empleado.EOF Then
    NroColumna = 1
    Texto = ": " & "No se encontro el legajo " & NroLegajo
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    InsertaError 1, 8
    HuboError = True
    Exit Sub
Else
    Tercero = rs_Empleado!Ternro
End If

'Con la sigla busco el TICKET.tiknro
StrSql = "SELECT * FROM ticket WHERE tiksigla = '" & Sigla & "'"
OpenRecordset StrSql, rs_Ticket
If rs_Ticket.EOF Then
    NroColumna = 2
    Texto = ": " & "Codigo de Ticket " & Sigla & " desconocido"
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    InsertaError 2, 35
    HuboError = True
    Exit Sub
Else
    TickNro = rs_Ticket!Tiknro
End If

'Que el monto
MontoCorrecto = True
If Not IsNumeric(Monto) Then
    NroColumna = 3
    Texto = ": " & "El monto no es numerico " & Monto
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    InsertaError 3, 5
    HuboError = True
    Exit Sub
Else
    Select Case Cantidades
    Case 0:
        MontoCorrecto = True
    Case 1:
        If Monto <> (cant(1) * Valor(1)) Then
            MontoCorrecto = False
        End If
    Case 2:
        If Monto <> (cant(1) * Valor(1) + cant(2) * Valor(2)) Then
            MontoCorrecto = False
        End If
    Case 3:
        If Monto <> (cant(1) * Valor(1) + cant(2) * Valor(2) + cant(3) * Valor(3)) Then
            MontoCorrecto = False
        End If
    Case 4:
        If Monto <> (cant(1) * Valor(1) + cant(2) * Valor(2) + cant(3) * Valor(3) + cant(4) * Valor(4)) Then
            MontoCorrecto = False
        End If
    Case 5:
        If Monto <> (cant(1) * Valor(1) + cant(2) * Valor(2) + cant(3) * Valor(3) + cant(4) * Valor(4) + cant(5) * Valor(5)) Then
            MontoCorrecto = False
        End If
    End Select
End If
If Not MontoCorrecto Then
    NroColumna = 3
    Texto = ": " & "La suma de los detalles no coincide con el monto " & Monto
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    InsertaError 3, 92
    HuboError = True
    Exit Sub
End If

'=============================================================
'Busco si existe el EMP_TICKET
StrSql = "SELECT * FROM emp_ticket WHERE " & _
         " tikpednro = " & TikPedNro & _
         " AND tiknro = " & TickNro & _
         " AND empleado = " & Tercero
OpenRecordset StrSql, rs_EMP_Ticket

If rs_EMP_Ticket.EOF Then
        For I = 1 To Cantidades
            'Busco el TikValnro
            StrSql = "SELECT * FROM tikvalor WHERE "
            StrSql = StrSql & " tvalmonto = " & Valor(I)
            OpenRecordset StrSql, rs_TikValor
        
            If Not rs_TikValor.EOF Then
                StrSql = "SELECT * FROM ticket_valor WHERE "
                StrSql = StrSql & " tiknro = " & TickNro
                StrSql = StrSql & " AND tvalnro =" & rs_TikValor!tvalnro
                OpenRecordset StrSql, rs_Ticket_Valor
                
                If Not rs_Ticket_Valor.EOF Then
                    TikValnro(I) = rs_Ticket_Valor!TikValnro
                Else
                    NroColumna = 3 + Cantidades
                    Texto = ": " & "Valor no encontrado en Ticket_Valor " & rs_TikValor!tvalnro & " para el ticket " & TickNro
                    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                    InsertaError 3 + Cantidades, 64
                    HuboError = True
                    Exit Sub
                End If
            Else
                NroColumna = 3 + Cantidades
                Texto = ": " & "Valor no encontrado en TIKVALOR " & Valor(I)
                Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                InsertaError 3 + Cantidades, 64
                HuboError = True
                Exit Sub
            End If
        Next I
            
        StrSql = "INSERT INTO emp_ticket ("
        StrSql = StrSql & "empleado,tiknro,tikpednro,etikfecha,etikmonto,etikcant,etikmanual"
        StrSql = StrSql & ") VALUES (" & Tercero
        StrSql = StrSql & "," & TickNro
        StrSql = StrSql & "," & TikPedNro
        StrSql = StrSql & "," & ConvFecha(Date)
        StrSql = StrSql & "," & Monto
        StrSql = StrSql & ",0,0"
        StrSql = StrSql & " )"
        objConn.Execute StrSql, , adExecuteNoRecords
    
        EtikNro = getLastIdentity(objConn, "emp_ticket")
        
        If Cantidades <> 0 Then
            'inserto los EMP_TIKDIST
            For I = 1 To Cantidades
                StrSql = "INSERT INTO emp_tikdist ("
                StrSql = StrSql & "etiknro,tikvalnro,tiknro,etikdmonto,etikdmontouni,etikdcant"
                StrSql = StrSql & ") VALUES (" & EtikNro
                StrSql = StrSql & "," & TikValnro(I)
                StrSql = StrSql & "," & TickNro
                StrSql = StrSql & "," & Valor(I) * cant(I)
                StrSql = StrSql & "," & Valor(I)
                StrSql = StrSql & "," & cant(I)
                StrSql = StrSql & " )"
                objConn.Execute StrSql, , adExecuteNoRecords
            Next I
        End If
        Texto = ": " & "Ticket insertado "
        Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
Else
    If Not CBool(rs_EMP_Ticket!etikmanual) And IsNull(rs_EMP_Ticket!pronro) Then
        For I = 1 To Cantidades
            'Busco el TikValnro
            StrSql = "SELECT * FROM tikvalor WHERE "
            StrSql = StrSql & " tvalmonto = " & Valor(I)
            OpenRecordset StrSql, rs_TikValor
        
            If Not rs_TikValor.EOF Then
                StrSql = "SELECT * FROM ticket_valor WHERE "
                StrSql = StrSql & " tiknro = " & TickNro
                StrSql = StrSql & " AND tvalnro =" & rs_TikValor!tvalnro
                OpenRecordset StrSql, rs_Ticket_Valor
                
                If Not rs_Ticket_Valor.EOF Then
                    TikValnro(I) = rs_Ticket_Valor!TikValnro
                Else
                    NroColumna = 3 + Cantidades
                    Texto = ": " & "Valor no encontrado en Ticket_Valor " & rs_TikValor!tvalnro & " para el ticket " & TickNro
                    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                    InsertaError 3 + Cantidades, 64
                    HuboError = True
                    Exit Sub
                End If
            Else
                NroColumna = 3 + Cantidades
                Texto = ": " & "Valor no encontrado en TIKVALOR " & Valor(I)
                Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                InsertaError 3 + Cantidades, 64
                HuboError = True
                Exit Sub
            End If
        Next I
    
        'Borro los EMP_TIKDIST
        StrSql = "DELETE FROM emp_tikdist WHERE etiknro =" & rs_EMP_Ticket!EtikNro
        objConn.Execute StrSql, , adExecuteNoRecords
        
        'Piso los datos del ticket
        StrSql = "UPDATE emp_ticket SET etikmonto = " & Monto
        StrSql = StrSql & " , etikfecha = " & ConvFecha(Date)
        StrSql = StrSql & " , etikcant = 0 "
        StrSql = StrSql & " WHERE tikpednro = " & TikPedNro
        StrSql = StrSql & " AND tiknro = " & TickNro
        StrSql = StrSql & " AND empleado = " & Tercero
        objConn.Execute StrSql, , adExecuteNoRecords
            
        'inserto los EMP_TIKDIST
        For I = 1 To Cantidades
            StrSql = "INSERT INTO emp_tikdist ("
            StrSql = StrSql & "etiknro,tikvalnro,tiknro,etikdmonto,etikdmontouni,etikdcant"
            StrSql = StrSql & ") VALUES (" & rs_EMP_Ticket!EtikNro
            StrSql = StrSql & "," & TikValnro(I)
            StrSql = StrSql & "," & TickNro
            StrSql = StrSql & "," & Valor(I) * cant(I)
            StrSql = StrSql & "," & Valor(I)
            StrSql = StrSql & "," & cant(I)
            StrSql = StrSql & " )"
            objConn.Execute StrSql, , adExecuteNoRecords
        Next I
        Texto = ": " & "Ticket Actualizado "
        Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
    Else
        Texto = ": " & "Ticket no actualizado porque es manual o fué liquidado "
        Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
    End If
End If


Fin:
'cierro y libero
If rs_Ticket.State = adStateOpen Then rs_Ticket.Close
If rs_Empleado.State = adStateOpen Then rs_Empleado.Close
If rs_EMP_Ticket.State = adStateOpen Then rs_EMP_Ticket.Close
If rs_EMP_TikDist.State = adStateOpen Then rs_EMP_TikDist.Close
If rs_Ticket_Valor.State = adStateOpen Then rs_Ticket_Valor.Close
If rs_TikValor.State = adStateOpen Then rs_TikValor.Close

Set rs_Ticket = Nothing
Set rs_Empleado = Nothing
Set rs_EMP_Ticket = Nothing
Set rs_EMP_TikDist = Nothing
Set rs_Ticket_Valor = Nothing
Set rs_TikValor = Nothing

Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    If InStr(1, Err.Description, "ODBC") > 0 Then
        'Fue error de Consulta de SQL
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
        Flog.writeline
    End If
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    GoTo Fin

End Sub


Public Sub LineaModelo_215(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Inserta en Acu_age.
' Autor      : FGZ
'              El formato es:
'                   Legajo; Acunro; Monto; catidad; año,mes
' Fecha      : 29/07/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim pos1 As Long
Dim pos2 As Long
Dim I As Long

Dim Tercero As Long
Dim NroLegajo As Long
Dim acuNro As Long
Dim Monto As Single
Dim Cantidad As Single
Dim Anio As Long
Dim Mes As Long
Dim Pliqnro As Long

Dim rs_Empleado As New ADODB.Recordset
Dim rs_Acumulador As New ADODB.Recordset
Dim rs_Acu_Age As New ADODB.Recordset
Dim rs_Periodo As New ADODB.Recordset

On Error GoTo Manejador_De_Error

' El formato es:
' Legajo; Acunro; Monto; catidad; año,mes

    'Nro de Legajo
    pos1 = 1
    pos2 = InStr(pos1, strLinea, separador)
    If IsNumeric(Mid$(strLinea, pos1, pos2 - pos1)) Then
        NroLegajo = Mid$(strLinea, pos1, pos2 - pos1)
    Else
        InsertaError 1, 8
        HuboError = True
        Exit Sub
    End If
    
    'Acumulador
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    acuNro = Mid(strLinea, pos1, pos2 - pos1)

    'Monto
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    Monto = Mid(strLinea, pos1, pos2 - pos1)
               
    'Cantidad
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    Cantidad = Mid(strLinea, pos1, pos2 - pos1)
        
    'Año
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    Anio = Mid(strLinea, pos1, pos2 - pos1)
        
    'Mes
    pos1 = pos2 + 1
    pos2 = Len(strLinea)
    Mes = Mid(strLinea, pos1, pos2)

' ====================================================================
'   Validar los parametros Levantados

'Que exista el legajo
StrSql = "SELECT * FROM empleado where empleg = " & NroLegajo
OpenRecordset StrSql, rs_Empleado
If rs_Empleado.EOF Then
    Flog.writeline "No se encontro el legajo " & NroLegajo
    InsertaError 1, 8
    HuboError = True
    Exit Sub
Else
    Tercero = rs_Empleado!Ternro
End If

'Valido el acumulador
StrSql = "SELECT * FROM acumulador WHERE acunro = " & acuNro
OpenRecordset StrSql, rs_Acumulador
If rs_Acumulador.EOF Then
    Flog.writeline "El Acumulador no existe " & acuNro
    InsertaError 2, 52
    HuboError = True
    Exit Sub
End If

'Que el monto sea valido
If Not IsNumeric(Monto) Then
    Flog.writeline "El monto no es numerico " & Monto
    InsertaError 3, 5
    HuboError = True
    Exit Sub
End If

'Que la cantidad sea valida
If Not IsNumeric(Cantidad) Then
    Flog.writeline "La cantidad no es numerico " & Cantidad
    InsertaError 4, 5
    HuboError = True
    Exit Sub
End If

'Que el año sea valido
If Not IsNumeric(Anio) Then
    Flog.writeline "El año no es numerico " & Anio
    InsertaError 5, 5
    HuboError = True
    Exit Sub
End If

'Que el mes sea valido
If Not IsNumeric(Mes) Then
    Flog.writeline "El mes no es numerico " & Anio
    InsertaError 6, 5
    HuboError = True
    Exit Sub
End If

'Busco el pliqnro correspondiente a ese año y mes
StrSql = "SELECT * FROM PERIODO WHERE pliqmes =" & Mes
StrSql = StrSql & " AND pliqanio =" & Anio
OpenRecordset StrSql, rs_Periodo
If rs_Periodo.EOF Then
    Flog.writeline "No existe periodo correspondiente al año " & Anio & " y mes  " & Mes
    InsertaError 6, 5
    HuboError = True
    Exit Sub
Else
    Pliqnro = rs_Periodo!Pliqnro
End If

'=============================================================
'Busco si existe el acu_age
StrSql = "SELECT * FROM acu_age " & _
         " WHERE acunro = " & acuNro & _
         " AND pliqnro = " & Pliqnro & _
         " AND empage = " & Tercero
OpenRecordset StrSql, rs_Acu_Age

If rs_Acu_Age.EOF Then
        StrSql = "INSERT INTO acu_age ("
        StrSql = StrSql & "acunro,acagmonto,acagcant,empage,pliqnro"
        StrSql = StrSql & ") VALUES (" & acuNro
        StrSql = StrSql & "," & Monto
        StrSql = StrSql & "," & Cantidad
        StrSql = StrSql & "," & Tercero
        StrSql = StrSql & "," & Pliqnro
        StrSql = StrSql & " )"
        objConn.Execute StrSql, , adExecuteNoRecords
    
        Flog.writeline "Acumulador insertado "
Else
        'Piso los datos del ticket
        StrSql = "UPDATE acu_age SET acagmonto = " & Monto
        StrSql = StrSql & " , acagcant = " & Cantidad
        StrSql = StrSql & " WHERE acunro = " & acuNro
        StrSql = StrSql & " AND pliqnro = " & Pliqnro
        StrSql = StrSql & " AND empage = " & Tercero
        objConn.Execute StrSql, , adExecuteNoRecords
            
        Flog.writeline "Acumulador Actualizado "
End If

Fin:
'cierro y libero
If rs_Empleado.State = adStateOpen Then rs_Empleado.Close
If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
If rs_Acu_Age.State = adStateOpen Then rs_Acu_Age.Close
If rs_Acumulador.State = adStateOpen Then rs_Acumulador.Close

Set rs_Empleado = Nothing
Set rs_Periodo = Nothing
Set rs_Acu_Age = Nothing
Set rs_Acumulador = Nothing
Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    If InStr(1, Err.Description, "ODBC") > 0 Then
        'Fue error de Consulta de SQL
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
        Flog.writeline
    End If
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    GoTo Fin

End Sub

Public Sub LineaModelo_217(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion : Inserta en vales.
'              El formato es:
'                   Legajo; Monto; Fecha ; Tipo
' Autor       : FGZ
' Fecha       : 29/07/2004
' Ultima Mod. : FGZ - 10/12/2009
' Descripcion : Se agregaron 2 campos al modelo ("revisado" y "autorizado")
' Modificacion: Sebastian Stremel - 17/09/2013 - Se recibe un parametro mas opcional con la descripcion del vale, si esta parametro no viene
               'la descripcion del vale se completa como antes.
' ---------------------------------------------------------------------------------------------
Dim pos1 As Long
Dim pos2 As Long
Dim I As Long

Dim Tercero As Long
Dim NroLegajo As Long
Dim TipoVale As String
Dim Monto As Single
Dim FechaVale As Date
Dim DescripcionVale As String
Dim Pliqnro As Long
Dim Pliqdto As Long
Dim Moneda As Integer
Dim Revisado As Boolean
Dim Autorizado As Boolean
Dim Aux As String

Dim MontoCorrecto As Boolean

Dim rs_Empleado As New ADODB.Recordset
Dim rs_TipoVale As New ADODB.Recordset
Dim rs_Periodo As New ADODB.Recordset
Dim rs_Moneda As New ADODB.Recordset
Dim campos

On Error GoTo Manejador_De_Error

' El formato es:
' Legajo; Monto; Fecha ; Tipo

'    'Nro de Legajo
'    pos1 = 1
'    pos2 = InStr(pos1, strLinea, separador)
'    If IsNumeric(Mid$(strLinea, pos1, pos2 - pos1)) Then
'        NroLegajo = Mid$(strLinea, pos1, pos2 - pos1)
'    Else
'        InsertaError 1, 8
'        HuboError = True
'        Exit Sub
'    End If
'
'    'Monto
'    pos1 = pos2 + 1
'    pos2 = InStr(pos1 + 1, strLinea, separador)
'    Monto = Mid(strLinea, pos1, pos2 - pos1)
'
'    'Fecha
'    pos1 = pos2 + 1
'    pos2 = InStr(pos1 + 1, strLinea, separador)
'    FechaVale = CDate(Mid(strLinea, pos1, pos2 - pos1))
'
'    'Tipo Vale
'    pos1 = pos2 + 1
'    pos2 = InStr(pos1 + 1, strLinea, separador)
'    TipoVale = Mid(strLinea, pos1, pos2 - pos1)
'
'    'Moneda
'    pos1 = pos2 + 1
'    pos2 = Len(strLinea)
'    Moneda = CInt(Mid(strLinea, pos1, pos2))
    
    
' FGZ -10/12/2009
' El nuevo formato es:
' Legajo; Monto; Fecha; PeriodoDto ; Tipo Vale; Moneda; Revisado; Autorizado
    
    campos = Split(strLinea, separador, -1)
   
    'Nro de Legajo
    If IsNumeric(campos(0)) Then
        NroLegajo = campos(0)
    Else
        InsertaError 1, 8
        HuboError = True
        Exit Sub
    End If
    
    'Monto
    If IsNumeric(campos(1)) Then
        Monto = campos(1)
        MontoCorrecto = True
    Else
        MontoCorrecto = False
        Flog.writeline "El monto no es numerico " & campos(1)
        InsertaError 2, 5
        HuboError = True
        Exit Sub
    End If
               
    'Fecha
    If IsDate(campos(2)) Then
        FechaVale = CDate(campos(2))
    Else
        Flog.writeline "Formato de fecha Incorrecto " & campos(2)
        InsertaError 2, 5
        HuboError = True
        Exit Sub
    End If
    
    'Periodo de Descuento
    If Not EsNulo(campos(3)) Then
        If IsNumeric(campos(3)) Then
            Pliqdto = campos(3)
        Else
            Flog.writeline "El periodo de Descuento debe ser numerico " & campos(3)
            InsertaError 1, 8
            HuboError = True
            Exit Sub
        End If
    Else
        Pliqdto = 0
    End If
    
    'Tipo Vale
    TipoVale = campos(4)

    'Moneda
    Moneda = CInt(campos(5))
   
    If UBound(campos) > 5 Then
        If UCase(Trim(campos(6))) = "SI" Or UCase(Trim(campos(6))) = "S" Then
            Revisado = True
        Else
            Revisado = False
        End If
    Else
        Revisado = False
    End If

    If UBound(campos) > 6 Then
        If UCase(Trim(campos(7))) = "SI" Or UCase(Trim(campos(7))) = "S" Then
            Autorizado = True
        Else
            Autorizado = False
        End If
    Else
        Autorizado = False
    End If

    'descripcion del vale
    If UBound(campos) > 7 Then
        DescripcionVale = campos(8)
    End If
    
' ====================================================================
'   Validar los parametros Levantados

'Que exista el legajo
StrSql = "SELECT * FROM empleado where empleg = " & NroLegajo
OpenRecordset StrSql, rs_Empleado
If rs_Empleado.EOF Then
    Flog.writeline "No se encontro el legajo " & NroLegajo
    InsertaError 1, 8
    HuboError = True
    Exit Sub
Else
    Tercero = rs_Empleado!Ternro
End If

'Busco el periodo
StrSql = "SELECT * FROM periodo WHERE pliqmes = " & Month(FechaVale)
StrSql = StrSql & " AND pliqanio =" & Year(FechaVale)
OpenRecordset StrSql, rs_Periodo
If rs_Periodo.EOF Then
    Flog.writeline "No se encontro el Periodo para el mes " & Month(FechaVale)
    InsertaError 3, 50
    HuboError = True
    Exit Sub
Else
    Pliqnro = rs_Periodo!Pliqnro
End If

'Busco el periodo de Descuento
If Pliqdto <> 0 Then
    StrSql = "SELECT * FROM periodo WHERE pliqnro = " & Pliqdto
    OpenRecordset StrSql, rs_Periodo
    If rs_Periodo.EOF Then
        Flog.writeline "No se encontro el Periodo de descuento" & Pliqdto
        InsertaError 3, 50
        HuboError = True
        Exit Sub
    End If
Else
    Flog.writeline "Periodo de Descuento no especificado. Se utilizará el periodo correspondiente a la fecha del vale."
    Pliqdto = Pliqnro
End If

''Que el monto
'MontoCorrecto = True
'If Not IsNumeric(Monto) Then
'    Flog.writeline "El monto no es numerico " & Monto
'    InsertaError 2, 5
'    HuboError = True
'    Exit Sub
'Else
'    MontoCorrecto = True
'End If

'Tipo de Vale
StrSql = "SELECT * FROM tipovale WHERE tvalenro = " & CLng(TipoVale)
OpenRecordset StrSql, rs_TipoVale
If rs_TipoVale.EOF Then
    Flog.writeline "No se encontro el tipo de vale " & TipoVale
    InsertaError 2, 76
    HuboError = True
    Exit Sub
Else
    If EsNulo(DescripcionVale) Or UCase(DescripcionVale) = "N/A" Then
        'DescripcionVale = CStr(rs_TipoVale!tvalenro) & " " & NroLegajo & " " & FechaVale
        DescripcionVale = Left(rs_TipoVale!tvaledesabr & " " & NroLegajo & " " & FechaVale, 30)
    Else
        Flog.writeline "La descripcion del vale la tomo del archivo cargado"
    End If
End If

'Moneda
StrSql = "SELECT * FROM moneda WHERE monnro = " & CInt(Moneda)
OpenRecordset StrSql, rs_Moneda
If rs_Moneda.EOF Then
    Flog.writeline "No se encontro la Moneda " & Moneda
    InsertaError 5, 3
    HuboError = True
    Exit Sub
End If


'=============================================================
'Inserto el vale
StrSql = "INSERT INTO vales ("
StrSql = StrSql & "empleado,valmonto,valfecped,valfecPrev,pliqnro,pliqdto,valdesc,tvalenro,valrevis,valautoriz,monnro "
StrSql = StrSql & ") VALUES (" & Tercero
StrSql = StrSql & "," & Monto
StrSql = StrSql & "," & ConvFecha(FechaVale)
StrSql = StrSql & "," & ConvFecha(FechaVale)
StrSql = StrSql & "," & Pliqnro
StrSql = StrSql & "," & Pliqdto
StrSql = StrSql & ",'" & DescripcionVale & "'"
StrSql = StrSql & "," & TipoVale
'StrSql = StrSql & ",0,0"
StrSql = StrSql & "," & CInt(Revisado)
StrSql = StrSql & "," & CInt(Autorizado)
StrSql = StrSql & "," & Moneda
StrSql = StrSql & " )"
Flog.writeline StrSql  'mdf
objConn.Execute StrSql, , adExecuteNoRecords
Flog.writeline "El ultimo id insertado es: " & getLastIdentity(objConn, "vales") 'mdf
Flog.writeline " Vale insertado "

Fin:
'cierro y libero
If rs_TipoVale.State = adStateOpen Then rs_TipoVale.Close
If rs_Empleado.State = adStateOpen Then rs_Empleado.Close
If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
If rs_Moneda.State = adStateOpen Then rs_Moneda.Close

Set rs_TipoVale = Nothing
Set rs_Empleado = Nothing
Set rs_Periodo = Nothing
Set rs_Moneda = Nothing

Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    If InStr(1, Err.Description, "ODBC") > 0 Then
        'Fue error de Consulta de SQL
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
        Flog.writeline
    End If
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    GoTo Fin

End Sub




'Esta version estaba comentariada
'reemplazada ( 226= al 239)
'Public Sub LineaModelo_226(ByVal strReg As String)
'' ---------------------------------------------------------------------------------------------
'' Descripcion: Interface de Postulantes
'' Autor      : FGZ
'' Fecha      : 09/08/2004
'' Ultima Mod.: 12/10/2004 - Lisandro Moro
''   Descripcion:  Se actualiza y agregan campos al estandar.
''   INCLUYE:    TraerCodTipoDocumento()
''               TraerCodLocalidad()
''               TraerCodProvincia()
''               TraerCodZona()
''               TraerCodPais()
''               TraerCodTitulo()
'' ---------------------------------------------------------------------------------------------
'Dim pos1            as long
'Dim pos2            as long
'Dim aux             As String
'
''-------------------------------
''El formato de los campos es:
''TITULO(Majusculas)
'    'campos
''-------------------------------
''POSTULANTE
'    '(01)Tipo Doc
'    '(02)nro Doc
'    '(03)nombre 1
'    '(04)nombre 2
'    '(05)Apellido 1
'    '(06)Apellido 2
''TELEFONOS
'    '(07)Telefono Personal
'    '(08)Telefono para mensajes
''POSTULANTE
'    '(09)Email
''DOMICILIO
'    '(10)Dir: Calle
'    '(11)Dir: nro
'    '(12)Dir: Piso
'    '(13)Dir: Dpto
'    '(14)C.P
'    '(15)Localidad
'    '(16)Provincia
'    '(17)Partido
'    '(18)Zona
'    '(19)Pais
''POSTULANTE
'    '(20)Naciemiento
'    '(21)Sexo
''ESTUDIOS FORMALES 1
'    '(22)Nivel
'    '(23)Completo
'    '(24)Titulo
'    '(25)Institucion
''ESTUDIOS FORMALES1 2
'    '(26)Posgrado
'    '(27)Postitulo
'    '(28)Institucion
''EXPERIENCIA LABORAL 1
'    '(29)Cargo anterior
'    '(30)Empresa
'    '(31)Tarea Desempeñada
'    '(32)Fec Desde
'    '(33)Fec Hasta
''EXPERIENCIA LABORAL 2
'    '(34)Cargo anterior 2
'    '(35)Empresa
'    '(36)Tarea Desempeñada
'    '(37)Fec Desde
'    '(38)Fec Hasta
''IDIOMAS
'    '(39)Idioma 1
'    '(40)Lee: Nivel
'    '(41)Habla: Nivel
'    '(42)Escribe: Nivel
'    '(43)Idioma 2
'    '(44)Lee: Nivel
'    '(45)Habla: Nivel
'    '(46)Escribe: Nivel
'    '(47)Idioma 3
'    '(48)Lee: Nivel
'    '(49)Habla: Nivel
'    '(50)Escribe: Nivel
''OTROS CURSOS 1
'    '(51)desc.Curso
'    '(52)Tipo Curso
'    '(53)Fec Curso
'    '(54)Institucion
''OTROS CURSOS 2
'    '(55)desc.Curso
'    '(56)Tipo Curso
'    '(57)Fec Curso
'    '(58)Institucion
'
'' El Formato era
'                'NroDoc,
'                'Nombre,
'                'Apellido,
'                'Nro Telefono(Default),
'                'Celular,
'                'Email,
'                'Direccion,
'                'CP,
'                'Localidad,
'                'Provincia,
'                'Fecha Nac,
'                'Sexo,
'                'Nivel Estudio,
'                'Estudio Completo,
'                'Titulo,
'                'Institucion,
'                'Postgrado,
'                'Postitulo,
'                'Cargo,
'' por ahora no                        'Cargo Ejecutivo,
'' por ahora no                        'Experiencia,
'' por ahora no                        'Años,
'' por ahora no                        'Datos, ...
'
'
''POSTULANTE
'    Dim tidnro as long       '(01)Tipo Doc
'    Dim nrodoc As String        '(02)nro Doc
'    Dim ternom As String        '(03)nombre 1
'    Dim ternom2 As String       '(04)nombre 2
'    Dim terape As String        '(05)Apellido 1
'    Dim terape2 As String       '(06)Apellido 2
''TELEFONOS
'    Dim telnro As String        '(07)Telefono Personal
'    Dim telnro2 As String       '(08)Telefono para mensajes
''POSTULANTE
'    Dim teremail As String      '(09)Email
''DOMICILIO
'    Dim calle As String         '(10)Dir: Calle
'    Dim nro As String           '(11)Dir: nro
'    Dim piso As String          '(12)Dir: Piso
'    Dim oficdepto As String     '(13)Dir: Dpto
'    Dim codigipostal As String  '(14)C.P
'    Dim locnro as long       '(15)Localidad
'    Dim provnro as long      '(16)Provincia
'    Dim partnro as long      '(17)Partido
'    Dim zonanro as long      '(18)Zona
'    Dim paisnro as long      '(19)Pais
''POSTULANTE
'    Dim terfecnac As Date       '(20)Naciemiento
'    Dim tersex As Boolean       '(21)Sexo
''ESTUDIOS FORMALES 1
'    Dim Nivnro as long       '(22)Nivel
'    Dim capcomp As Boolean      '(23)Completo
'    Dim titnro as long       '(24)Titulo
'    Dim instnro as long      '(25)Institucion
''ESTUDIOS FORMALES1 2
'    Dim nivnro2 as long      '(26)Posgrado
'    Dim titnro2 as long      '(27)Postitulo
'    Dim instnro2 as long     '(28)Institucion
''EXPERIENCIA LABORAL 1
'    Dim carnro as long       '(29)Cargo anterior
'    Dim lempnro as long      '(30)Empresa
'    Dim empatareas As String    '(31)Tarea Desempeñada
'    Dim empaini As Date         '(32)Fec Desde
'    Dim empafin As Date         '(33)Fec Hasta
''EXPERIENCIA LABORAL 2
'    Dim carnro2 as long      '(34)Cargo anterior 2
'    Dim lempnro2 as long     '(35)Empresa
'    Dim empatareas2 As String   '(36)Tarea Desempeñada
'    Dim empaini2 As Date        '(37)Fec Desde
'    Dim empafin2 As Date        '(38)Fec Hasta
''IDIOMAS
'    Dim idinro1 as long      '(39)Idioma 1
'    Dim emidlee1 as long     '(40)Lee: Nivel
'    Dim empidhabla1 as long  '(41)Habla: Nivel
'    Dim empidescr1 as long   '(42)Escribe: Nivel
'    Dim idinro2 as long      '(43)Idioma 2
'    Dim emidlee2 as long     '(44)Lee: Nivel
'    Dim empidhabla2 as long  '(45)Habla: Nivel
'    Dim empidescr2 as long   '(46)Escribe: Nivel
'    Dim idinro3 as long      '(47)Idioma 3
'    Dim emidlee3 as long     '(48)Lee: Nivel
'    Dim empidhabla3 as long  '(49)Habla: Nivel
'    Dim empidescr3 as long   '(50)Escribe: Nivel
''OTROS CURSOS 1
'    Dim estinfdesabr As String  '(51)desc.Curso
'    Dim tipcurnro as long    '(52)Tipo Curso
'    Dim estinffecha As Date     '(53)Fec Curso
'    Dim instnro3 as long     '(54)Institucion
''OTROS CURSOS 2
'    Dim estinfdesabr2 As String '(55)desc.Curso
'    Dim tipcurnro2 as long   '(56)Tipo Curso
'    Dim estinffecha2 As Date    '(57)Fec Curso
'    'Dim instnro3 as long     '(58)Institucion
'
'    Dim ternro as long
'    'Dim ArrStr
'    'ArrStr =
'
'Dim Ter_Apellido        As String
'Dim Ter_Nombre          As String
'Dim Fecha_Nacimiento    As String
'Dim Sexo                As String
'Dim NivEst              As String
'Dim Docu_Nro            As String
'Dim Docu_Tipo           As String
'Dim Dir_Calle           As String
'Dim Dir_Nro             As String
'Dim Dir_Piso            As String
'Dim Dir_OficDepto       As String
'Dim Dir_Sector          As String
'Dim Dir_Torre           As String
'Dim Dir_Manzana         As String
'Dim Dir_CP              As String
'Dim Dir_Localidad       As String
'Dim Localidad_Nro       As String
'Dim Dir_Provincia       As String
'Dim Provincia_Nro       As String
'Dim Dir_Pais            As String
'Dim Pais_Nro            As String
'Dim Tel_Default         As String
'Dim Tel_Celular         As String
'Dim Email               As String
'Dim NroTercero          as long
'
'Dim Ne_Descripcion          As String
'Dim Ne_Nro                  As String
'Dim Ne_Completo             As Boolean
'Dim Titulo_Descripcion      As String
'Dim Titulo_Nro              As String
'Dim Institucion_Descripcion As String
'Dim Institucion_Nro         As String
'Dim PosTitulo_Descripcion   As String
'Dim PosTitulo_Nro           As String
'Dim tiene_postgrado         As Boolean
'Dim Cargo_Descripcion       As String
'Dim Cargo_Nro               As String
'
'Dim NroDom                  As Long
'Dim ArrStr
'
'Dim rs As New ADODB.Recordset
'Dim rs_sql As New ADODB.Recordset
'
'
'    'Cargo los datos le la fila en un arreglo
'    ArrStr = Split(strReg, Separador)
'
'    'MsgBox (ArrStr(5))
'    'Recupero los Valores del Archivo
'
'    'Columna 0 - Tipo de Documento
'    If Not EsNulo(ArrStr(0)) Then
'        'por defecto tomo DNI si el valor es vacio
'        tidnro = 1
'    Else
'        tidnro = TraerCodTipoDocumento(Trim(ArrStr(0)))
'    End If
'
'    'Columna 1 - Nro de documento
'    If Not EsNulo(ArrStr(1)) Or IsNumeric(clng(ArrStr(1))) Then
'        nrodoc = Left(Trim(ArrStr(1)), 30)
'    Else
'        nrodoc = ""
'    End If
'
'    'Columna 2 - Apellido(terape)
'    If Not EsNulo(ArrStr(2)) Then
'        terape = Left(Trim(ArrStr(2)), 25)
'    Else
'        terape = ""
'    End If
'
'    'Columna 3 - Apellido(terape2)
'    If Not EsNulo(ArrStr(3)) Then
'        terape2 = Left(Trim(ArrStr(3)), 25)
'    Else
'        terape2 = ""
'    End If
'
'    'Columna 4 - Apellido(ternom)
'    If Not EsNulo(ArrStr(4)) Then
'        ternom = Left(Trim(ArrStr(4)), 25)
'    Else
'        ternom = ""
'    End If
'
'    'Columna 5 - Apellido(terape2)
'    If Not EsNulo(ArrStr(5)) Then
'        ternom2 = Left(Trim(ArrStr(5)), 25)
'    Else
'        ternom2 = "Null"
'    End If
'
'    'Columna 6 - Telefono Personal
'    If Not EsNulo(ArrStr(6)) Then
'        telnro = Left(Trim(ArrStr(6)), 20)
'    Else
'        telnro = "Null"
'    End If
'
'    'Columna 7 - Telefono Mensaje
'    If Not EsNulo(ArrStr(7)) Then
'        telnro2 = Left(Trim(ArrStr(7)), 20)
'    Else
'        telnro2 = "Null"
'    End If
'
'    'Columna 8 - eMail
'    If Not EsNulo(ArrStr(8)) Then
'        teremail = Left(Trim(ArrStr(8)), 20)
'    Else
'        teremail = "Null"
'    End If
'
'    'Columna  9 - Direccion(calle)
'    If Not EsNulo(ArrStr(9)) Then
'        calle = Left(Trim(ArrStr(9)), 30)
'    Else
'        calle = "Null"
'    End If
'
'    'Columna  10 - Direccion(nro)
'    If Not EsNulo(ArrStr(10)) Then
'        nro = Left(Trim(ArrStr(10)), 8)
'    Else
'        nro = "Null"
'    End If
'
'    'Columna  11 - Direccion(Piso)
'    If Not EsNulo(ArrStr(11)) Then
'        piso = Left(Trim(ArrStr(11)), 8)
'    Else
'        piso = "Null"
'    End If
'
'    'Columna  12 - Direccion(Piso)
'    If Not EsNulo(ArrStr(12)) Then
'        oficdepto = Left(Trim(ArrStr(12)), 8)
'    Else
'        oficdepto = "Null"
'    End If
'
'    'Columna  13 - Direccion(C.P.)
'    If Not EsNulo(ArrStr(13)) Then
'        codigopostal = Left(Trim(ArrStr(13)), 12)
'    Else
'        codigopostal = "Null"
'    End If
'
'    'Columna  14 - Direccion(localidad)
'    If Not EsNulo(ArrStr(14)) Then
'        locnro = clng(TraerCodLocalidad(Left(Trim(ArrStr(14)), 30)))
'    Else
'        locnro = 1 'No Informada
'    End If
'
'    'Columna  15 - Direccion(Provincia)
'    If Not EsNulo(ArrStr(15)) Then
'        locnro = clng(TraerCodProvincia(Left(Trim(ArrStr(15)), 20)))
'    Else
'        locnro = 1 'No Informada
'    End If
'
'    'Columna  16 - Direccion(Partido)
'    If Not EsNulo(ArrStr(16)) Then
'        partnro = clng(TraerCodPartido(Left(Trim(ArrStr(16)), 20)))
'    Else
'        partnro = 1 'Sin datos
'    End If
'
'    'Columna  17 - Direccion(Zona)
'    If Not EsNulo(ArrStr(17)) Then
'        zonanro = clng(TraerCodZona(Left(Trim(ArrStr(17)), 20)))
'    Else
'        zonanro = 1 'Capital
'    End If
'
'    'Columna  18 - Direccion(Pais)
'    If Not EsNulo(ArrStr(18)) Then
'        zonanro = clng(TraerCodPais(Left(Trim(ArrStr(18)), 20)))
'    Else
'        zonanro = 1 'No informado
'    End If
'
'    'Columna 19 - Fecha Nacimiento
'    ArrStr(19) = Left(Trim(ArrStr(19)), 20)
'    If UCase(ArrStr(19)) = "NULL" Then
'       terfecnac = "Null" 'No informado
'    Else
'        If IsDate(ArrStr(19)) Then
'            terfecnac = ConvFecha(ArrStr(19))
'        Else
'            Flog.Writeline "Fecha de Nacimiento invalida " & ArrStr(19)
'            InsertaError 11, 4
'            terfecnac = "Null" 'No informado
'        End If
'    End If
'
'
'    'Columna 20 - Sexo
'    ArrStr(20) = UCase(Trim(ArrStr(19)))
'    If (ArrStr(20) = "MUJER") Or (ArrStr(20) = "M") Or (ArrStr(20) = "F") Or (ArrStr(20) = "FEMENINO") Then
'        tersex = False
'    Else
'        tersex = True
'    End If
'
'    'Columna 21 - Nivel de estudio.(Descripcion nivel)
'    If Not EsNulo(ArrStr(21)) Then
'        Nivnro = clng(TraerCodNivelEstudio(Left(Trim(ArrStr(21)), 40)))
'    Else
'        Nivnro = 5 'Sin datos
'    End If
'
'    'Columna 22 - Nivel de estudio.(Completo)
'    ArrStr(22) = UCase(Trim(ArrStr(22)))
'    If (ArrStr(22) = "SI") Or (ArrStr(22) = "TRUE") Or (ArrStr(22) = "-1") Or (ArrStr(22) = "COMPLETO") Then
'        capcomp = True
'    Else
'        capcomp = False
'    End If
'
'    'Columna 23 - Nivel de estudio.(Titulo)
'    If Not EsNulo(ArrStr(23)) Then
'        titnro = clng(TraerCodTitulo(Left(Trim(ArrStr(23)), 40), Nivnro))
'    Else
'        titnro = 0 'Sin datos
'    End If
'
'    'Columna 24 - Nivel de estudio.(Institucion)
'    If Not EsNulo(ArrStr(24)) Then
'        instnro = clng(TraerCodInstitucion(Left(Trim(ArrStr(24)), 200)))
'    Else
'        instnro = 7 'No informada
'    End If
'
'    'Columna 25 - Nivel de estudio.(Posgrados Nivel)
'    If Not EsNulo(ArrStr(25)) Then
'        nivnro2 = clng(TraerCodNivelEstudio(Left(Trim(ArrStr(25)), 40)))
'    Else
'        nivnro2 = 5 'Sin datos
'    End If
'
'    'Columna 26 - Nivel de estudio.(Posgrado Titulo)
'    If Not EsNulo(ArrStr(26)) Then
'        titnro2 = clng(TraerCodTitulo(Left(Trim(ArrStr(26)), 40), Nivnro))
'    Else
'        titnro2 = 0 'Sin datos
'    End If
'
'    'Columna 27 - Nivel de estudio.(Posgrado Institucion)
'    If Not EsNulo(ArrStr(27)) Then
'        instnro2 = clng(TraerCodInstitucion(Left(Trim(ArrStr(27)), 200)))
'    Else
'        instnro2 = 7 'No informada
'    End If
'
'    'Columna 28 - Experiencia laboral(Cargo)
'    carnro = clng(TraerCodCargo(Left(Trim(ArrStr(28)), 50)))
'
'    'Columna 29 - Experiencia laboral(Empresa)(60)
'
'    lempnro = a
'    If Left(Trim(ArrStr(28)), 50) <> "N/A" Then
'
'            Call ValidaEstructuraCodExt(10, Empresa, nro_empresa, Inserto_estr)
'
'    Else
'        nro_empresa = 0
'    End If
'
'
'
'
'
'    If Not IsNull(Institucion_Descripcion) Then
'        'Valido que exista la institucion. Si no existe lo creo
'        StrSql = " SELECT * FROM institucion "
'        StrSql = StrSql & " WHERE instdes = '" & Institucion_Descripcion & "'"
'        If rs_sql.State = adStateOpen Then rs_sql.Close
'        OpenRecordset StrSql, rs_sql
'        If rs_sql.EOF Then
'            'Lo creo
'            StrSql = " INSERT INTO institucion (instdes,instnro,instabre) VALUES ("
'            StrSql = StrSql & "'" & Titulo_Descripcion & "'"
'            StrSql = StrSql & ",'" & Left(Titulo_Descripcion, 30) & "'"
'            StrSql = StrSql & ")"
'            objConn.Execute StrSql, , adExecuteNoRecords
'
'            Institucion_Nro = getLastIdentity(objConn, "institucion")
'        Else
'            Institucion_Nro = rs_sql!instnro
'        End If
'    Else
'        'Valido que exista un registro N\A. Si no existe lo creo
'        StrSql = " SELECT * FROM institucion "
'        StrSql = StrSql & " WHERE instdes = 'Sin Datos'"
'        If rs_sql.State = adStateOpen Then rs_sql.Close
'        OpenRecordset StrSql, rs_sql
'        If rs_sql.EOF Then
'            'Lo creo
'            StrSql = " INSERT INTO institucion (instdes,instnro,instabre) VALUES ("
'            StrSql = StrSql & "'Sin Datos'"
'            StrSql = StrSql & ",'Sin Datos'"
'            StrSql = StrSql & ")"
'            objConn.Execute StrSql, , adExecuteNoRecords
'
'            Institucion_Nro = getLastIdentity(objConn, "institucion")
'        Else
'            Institucion_Nro = rs_sql!instnro
'        End If
'    End If
'
'    If Not IsNull(Titulo_Descripcion) Then
'        'Valido que exista el titulo. Si no existe lo creo
'        StrSql = " SELECT * FROM titulo "
'        StrSql = StrSql & " WHERE titdesabr = '" & Titulo_Descripcion & "'"
'        StrSql = StrSql & " AND instnro =" & Institucion_Nro
'        StrSql = StrSql & " AND nivnro =" & Ne_Nro
'        If rs_sql.State = adStateOpen Then rs_sql.Close
'        OpenRecordset StrSql, rs_sql
'        If rs_sql.EOF Then
'            'Lo creo
'            StrSql = " INSERT INTO titulo (titdesabr,instnro,nivnro) VALUES ("
'            StrSql = StrSql & "'" & Titulo_Descripcion & "'"
'            StrSql = StrSql & "," & Institucion_Nro
'            StrSql = StrSql & "," & Ne_Nro
'            StrSql = StrSql & ")"
'            objConn.Execute StrSql, , adExecuteNoRecords
'
'            Titulo_Nro = getLastIdentity(objConn, "titulo")
'        Else
'            Titulo_Nro = rs_sql!titnro
'        End If
'    Else
'        'Valido que exista el titulo. Si no existe lo creo
'        StrSql = " SELECT * FROM titulo "
'        StrSql = StrSql & " WHERE titdesabr = 'Sin Datos'"
'        StrSql = StrSql & " AND instnro =" & Institucion_Nro
'        StrSql = StrSql & " AND nivnro =" & Ne_Nro
'        If rs_sql.State = adStateOpen Then rs_sql.Close
'        OpenRecordset StrSql, rs_sql
'        If rs_sql.EOF Then
'            'Lo creo
'            StrSql = " INSERT INTO titulo (titdesabr,instnro,nivnro) VALUES ("
'            StrSql = StrSql & "'Sin Datos'"
'            StrSql = StrSql & "," & Institucion_Nro
'            StrSql = StrSql & "," & Ne_Nro
'            StrSql = StrSql & ")"
'            objConn.Execute StrSql, , adExecuteNoRecords
'
'            Titulo_Nro = getLastIdentity(objConn, "titulo")
'        Else
'            Titulo_Nro = rs_sql!titnro
'        End If
'    End If
'
'
'    'Columna 17 - Postgrado. Si / No
'    pos1 = pos2 + 1
'    pos2 = InStr(pos1 + 1, strReg, Separador)
'    tiene_postgrado = IIf(UCase(Mid(strReg, pos1, pos2 - pos1)) = "SI", True, False)
'
'    If tiene_postgrado Then
'        'Columna 18 - Descripcion del Postitulo
'        pos1 = pos2 + 1
'        pos2 = InStr(pos1 + 1, strReg, Separador)
'        PosTitulo_Descripcion = Mid(strReg, pos1, pos2 - pos1)
'        Call AcotarStr(PosTitulo_Descripcion, 40, False)
'
'        If Not IsNull(PosTitulo_Descripcion) Then
'            'Valido que exista el postitulo. Si no existe lo creo
'            StrSql = " SELECT * FROM titulo "
'            StrSql = StrSql & " WHERE titdesabr = '" & PosTitulo_Descripcion & "'"
'            StrSql = StrSql & " AND instnro =" & Institucion_Nro
'            StrSql = StrSql & " AND nivnro =" & Ne_Nro
'            If rs_sql.State = adStateOpen Then rs_sql.Close
'            OpenRecordset StrSql, rs_sql
'            If rs_sql.EOF Then
'                'Lo creo
'                StrSql = " INSERT INTO titulo (titdesabr,instnro,nivnro) VALUES ("
'                StrSql = StrSql & "'" & PosTitulo_Descripcion & "'"
'                StrSql = StrSql & "," & Institucion_Nro
'                StrSql = StrSql & "," & Ne_Nro
'                StrSql = StrSql & ")"
'                objConn.Execute StrSql, , adExecuteNoRecords
'
'                PosTitulo_Nro = getLastIdentity(objConn, "titulo")
'            Else
'                PosTitulo_Nro = rs_sql!titnro
'            End If
'        Else
'            'Valido que exista el titulo. Si no existe lo creo
'            StrSql = " SELECT * FROM titulo "
'            StrSql = StrSql & " WHERE titdesabr = 'Sin Datos'"
'            StrSql = StrSql & " AND instnro =" & Institucion_Nro
'            StrSql = StrSql & " AND nivnro =" & Ne_Nro
'            If rs_sql.State = adStateOpen Then rs_sql.Close
'            OpenRecordset StrSql, rs_sql
'            If rs_sql.EOF Then
'                'Lo creo
'                StrSql = " INSERT INTO titulo (titdesabr,instnro,nivnro) VALUES ("
'                StrSql = StrSql & "'Sin Datos'"
'                StrSql = StrSql & "," & Institucion_Nro
'                StrSql = StrSql & "," & Ne_Nro
'                StrSql = StrSql & ")"
'                objConn.Execute StrSql, , adExecuteNoRecords
'
'                PosTitulo_Nro = getLastIdentity(objConn, "titulo")
'            Else
'                PosTitulo_Nro = rs_sql!titnro
'            End If
'        End If
'    End If
'
'    'Columna 19 - Cargo
'    pos1 = pos2 + 1
'    pos2 = InStr(pos1 + 1, strReg, Separador)
'    Cargo_Descripcion = Mid(strReg, pos1, pos2 - pos1)
'    Call AcotarStr(Cargo_Descripcion, 40, False)
'
'    If Not IsNull(Cargo_Descripcion) Then
'        'Valido que exista el postitulo. Si no existe lo creo
'        StrSql = " SELECT * FROM cargo "
'        StrSql = StrSql & " WHERE cardesabr = '" & Cargo_Descripcion & "'"
'        If rs_sql.State = adStateOpen Then rs_sql.Close
'        OpenRecordset StrSql, rs_sql
'        If rs_sql.EOF Then
'            'Lo creo
'            StrSql = " INSERT INTO cargo (cardesabr) VALUES ("
'            StrSql = StrSql & "'" & Cargo_Descripcion & "'"
'            StrSql = StrSql & ")"
'            objConn.Execute StrSql, , adExecuteNoRecords
'
'            Cargo_Nro = getLastIdentity(objConn, "cargo")
'        Else
'            Cargo_Nro = rs_sql!carnro
'        End If
'    Else
'        'Valido que exista el titulo. Si no existe lo creo
'        StrSql = " SELECT * FROM cargo "
'        StrSql = StrSql & " WHERE titdesabr = 'Sin Datos'"
'        If rs_sql.State = adStateOpen Then rs_sql.Close
'        OpenRecordset StrSql, rs_sql
'        If rs_sql.EOF Then
'            'Lo creo
'            StrSql = " INSERT INTO titulo (cardesabr) VALUES ("
'            StrSql = StrSql & "'Sin Datos'"
'            StrSql = StrSql & ")"
'            objConn.Execute StrSql, , adExecuteNoRecords
'
'            Cargo_Nro = getLastIdentity(objConn, "cargo")
'        Else
'            Cargo_Nro = rs_sql!carnro
'        End If
'    End If
'
'
''''    'Busco la Provincia
''''    StrSql = " SELECT * FROM provincia "
''''    StrSql = StrSql & " WHERE provdesc = '" & Dir_Provincia & "'"
''''    If rs_sql.State = adStateOpen Then rs_sql.Close
''''    OpenRecordset StrSql, rs_sql
''''    If rs_sql.EOF Then
''''        Provincia_Nro = rs_sql!provnro
''''        Pais_Nro = rs_sql!paisnro
''''    Else
''''        Provincia_Nro = 1   'No informada
''''        Pais_Nro = 3        'Argentina
''''    End If
''''
''''    'Busco la localidad
''''    StrSql = " SELECT * FROM localidad "
''''    StrSql = StrSql & " WHERE locdesc = '" & Dir_Localidad & "'"
''''    StrSql = StrSql & " AND provnro = " & Provincia_Nro
''''    If rs_sql.State = adStateOpen Then rs_sql.Close
''''    OpenRecordset StrSql, rs_sql
''''    If rs_sql.EOF Then
''''        Localidad_Nro = rs_sql!locnro
''''    Else
''''        Localidad_Nro = 1   'No Informada
''''    End If
'
''''    Ne_Descripcion = Mid(strReg, pos1, pos2 - pos1)
''''    Call AcotarStr(Ne_Descripcion, 40, False)
''''    If Not IsNull(Ne_Descripcion) Then
''''        'Valido que exista. Si no existe lo creo
''''        StrSql = " SELECT * FROM nivest "
''''        StrSql = StrSql & " WHERE nivdesc = '" & Ne_Descripcion & "'"
''''        If rs_sql.State = adStateOpen Then rs_sql.Close
''''        OpenRecordset StrSql, rs_sql
''''        If rs_sql.EOF Then
''''            'Lo creo
''''            StrSql = " INSERT INTO nivest (nivdesc,nivsist,nivobligatorio,nivestfli) VALUES ("
''''            StrSql = StrSql & "'" & Ne_Descripcion & "'"
''''            StrSql = StrSql & ",0,0,0"
''''            StrSql = StrSql & ")"
''''            objConn.Execute StrSql, , adExecuteNoRecords
''''
''''            Ne_Nro = getLastIdentity(objConn, "nivest")
''''        Else
''''            Ne_Nro = rs_sql!Nivnro
''''        End If
''''    Else
''''        'Valido que exista un registro N\A. Si no existe lo creo
''''        StrSql = " SELECT * FROM nivest "
''''        StrSql = StrSql & " WHERE nivdesc = 'N\A'"
''''        If rs_sql.State = adStateOpen Then rs_sql.Close
''''        OpenRecordset StrSql, rs_sql
''''        If rs_sql.EOF Then
''''            'Lo creo
''''            StrSql = " INSERT INTO nivest (nivdesc,nivsist,nivobligatorio,nivestfli) VALUES ("
''''            StrSql = StrSql & "'N\A'"
''''            StrSql = StrSql & ",0,0,0"
''''            StrSql = StrSql & ")"
''''            objConn.Execute StrSql, , adExecuteNoRecords
''''
''''            Ne_Nro = getLastIdentity(objConn, "nivest")
''''    End If
'
'
'' --------------------------------------------------------------------------------*
'' Inserto
'
'    'Inserto el Tercero
'    StrSql = " INSERT INTO tercero (ternom,terape,terfecnac,tersex,teremail) VALUES ("
'    StrSql = StrSql & "'" & Ter_Nombre & "'"
'    StrSql = StrSql & ",'" & Ter_Apellido & "'"
'    StrSql = StrSql & "," & ConvFecha(Fecha_Nacimiento)
'    StrSql = StrSql & "," & Sexo
'    StrSql = StrSql & ",'" & Email & "'"
'    StrSql = StrSql & ")"
'    objConn.Execute StrSql, , adExecuteNoRecords
'
'    NroTercero = getLastIdentity(objConn, "tercero")
'    Flog.Writeline "Codigo de Tercero = " & NroTercero
'
'    'Inserto en postulantes
'    StrSql = " INSERT INTO pos_postulante(ternro,posfecpres) VALUES("
'    StrSql = StrSql & NroTercero
'    StrSql = StrSql & "," & ConvFecha(Date)
'    StrSql = StrSql & ")"
'    objConn.Execute StrSql, , adExecuteNoRecords
'    Flog.Writeline "Inserte el Postulante - " & Ter_Apellido & " - " & Ter_Nombre
'
'    ' Inserto el Registro correspondiente en ter_tip
'    StrSql = " INSERT INTO ter_tip(ternro,tipnro) VALUES(" & NroTercero & ",16)"
'    objConn.Execute StrSql, , adExecuteNoRecords
'
'    ' Inserto el Documento
'    If Docu_Nro <> 0 Then
'        StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
'        StrSql = StrSql & " VALUES(" & NroTercero & "," & Docu_Tipo & ",'" & Docu_Nro & "')"
'        objConn.Execute StrSql, , adExecuteNoRecords
'        Flog.Writeline "Inserte el Documento"
'    End If
'
'    ' Inserto el Domicilio
'      StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
'      StrSql = StrSql & " VALUES(1," & NroTercero & ",-1,2)"
'      objConn.Execute StrSql, , adExecuteNoRecords
'
'      NroDom = getLastIdentity(objConn, "cabdom")
'
'      StrSql = " INSERT INTO detdom(domnro,calle,nro,piso,oficdepto,torre,manzana,codigopostal,"
'      StrSql = StrSql & "locnro,provnro,paisnro) "
'      StrSql = StrSql & " VALUES ("
'      StrSql = StrSql & NroDom
'      StrSql = StrSql & ",'" & Dir_Calle & "'"
'      StrSql = StrSql & ",'" & Dir_Nro & "'"
'      StrSql = StrSql & ",'" & Dir_Piso & "'"
'      StrSql = StrSql & ",'" & Dir_OficDepto & "'"
'      StrSql = StrSql & ",'" & Dir_Torre & "'"
'      StrSql = StrSql & ",'" & Dir_Manzana & "'"
'      StrSql = StrSql & ",'" & Dir_CP & "'"
'      StrSql = StrSql & "," & Localidad_Nro
'      StrSql = StrSql & "," & Provincia_Nro
'      StrSql = StrSql & "," & Pais_Nro
'      StrSql = StrSql & ")"
'      objConn.Execute StrSql, , adExecuteNoRecords
'      Flog.Writeline "Inserte el Domicilio "
'
'      If Not IsNull(Tel_Default) Then
'        StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular) "
'        StrSql = StrSql & " VALUES(" & NroDom & ",'" & Tel_Default & "',0,-1,0)"
'        objConn.Execute StrSql, , adExecuteNoRecords
'        Flog.Writeline "Inserte el Telefono Default"
'      End If
'
'      If Not IsNull(Tel_Celular) Then
'        StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular) "
'        StrSql = StrSql & " VALUES(" & NroDom & ",'" & Tel_Celular & "',0,0,-1)"
'        objConn.Execute StrSql, , adExecuteNoRecords
'        Flog.Writeline "Inserte el Telefono Celular "
'      End If
'  End If
'
'    'Inserto los estudios formales
'      StrSql = " INSERT INTO cap_estformal(ternro,nivnro,titnro,instnro,capcomp,capactual)"
'      StrSql = StrSql & " VALUES ("
'      StrSql = StrSql & NroTercero
'      StrSql = StrSql & "," & Ne_Nro
'      StrSql = StrSql & "," & Titulo_Nro
'      StrSql = StrSql & "," & Institucion_Nro
'      StrSql = StrSql & "," & clng(Ne_Completo)
'      StrSql = StrSql & "," & IIf(tiene_postgrado, 0, -1)
'      StrSql = StrSql & ")"
'      objConn.Execute StrSql, , adExecuteNoRecords
'      Flog.Writeline "Inserte el Nivel de estudio "
'
'    'Postgrados
'    If tiene_postgrado Then
'      StrSql = " INSERT INTO cap_estformal(ternro,nivnro,titnro,instnro,capcomp,capactual)"
'      StrSql = StrSql & " VALUES ("
'      StrSql = StrSql & NroTercero
'      StrSql = StrSql & "," & Ne_Nro
'      StrSql = StrSql & "," & PosTitulo_Nro
'      StrSql = StrSql & "," & Institucion_Nro
'      StrSql = StrSql & "," & clng(Ne_Completo)
'      StrSql = StrSql & "," & IIf(tiene_postgrado, 0, -1)
'      StrSql = StrSql & ")"
'      objConn.Execute StrSql, , adExecuteNoRecords
'      Flog.Writeline "Inserte el Nivel de estudio - Postgrado"
'    End If
'
'    'Empleos anteriores
'    If Not IsNull(Cargo_Descripcion) Then
'
'    End If
'
'  If rs.State = adStateOpen Then rs.Close
'  If rs_sql.State = adStateOpen Then rs_sql.Close
'
'  Set rs = Nothing
'  Set rs_sql = Nothing
'End Sub


Public Sub LineaModelo_227(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de
' Autor      : FGZ
' Fecha      : 30/07/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim pos1            As Long
Dim pos2            As Long

On Error GoTo Manejador_De_Error




Fin:
Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    If InStr(1, Err.Description, "ODBC") > 0 Then
        'Fue error de Consulta de SQL
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
        Flog.writeline
    End If
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    GoTo Fin
End Sub

Public Sub LineaModelo_228(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de
' Autor      : FGZ
' Fecha      : 30/07/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
    'FGZ -  22/09/2004
    'No USAR. este modelo se usó en el reporte de Declaracion Jurada de la estrella.
    
On Error GoTo Manejador_De_Error
    
Fin:
Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    If InStr(1, Err.Description, "ODBC") > 0 Then
        'Fue error de Consulta de SQL
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
        Flog.writeline
    End If
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    GoTo Fin
    
End Sub

Public Sub LineaModelo_229(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Interface de Prestamos
' Autor      : FGZ
' Fecha      : 27/09/2004
' Ultima Mod.: 04/12/2009 - Stankunas Cesar
' Descripcion: Se cambio el tipo de dato de "numero de comprobante" (Nro_Comprobante) a string para que acepte caracteres alfanumericos.
' ---------------------------------------------------------------------------------------------
Dim pos1            As Long
Dim pos2            As Long

Dim Nro_Legajo As Long
Dim Lin_Prestamo As Long
Dim Descripcion As String
Dim Sucursal As Long
Dim Nro_Comprobante As String
Dim Cant_Cuotas As Long
Dim Monto_Total As Double
Dim Anio As Long
Dim Mes As Long
Dim Fecha_Otorg As Date

Dim quincenastr As String 'mdf
Dim quincenalstr As String 'mdf
Dim quincena As Integer 'mdf
Dim quincenal As Integer 'mdf

Dim Tercero As Long
Dim TipoPrestamo As Long
Dim lnprenro As Long
Dim Moneda As Long
Dim Pliqnro As Long
Dim Encontro As Boolean
Dim EstNro As Long

Dim rs_Empleado As New ADODB.Recordset
Dim rs_TipoPrestamo As New ADODB.Recordset
Dim rs_Sucursal As New ADODB.Recordset
Dim rs_Monedas As New ADODB.Recordset
Dim rs_Periodo As New ADODB.Recordset
Dim rs_estado As New ADODB.Recordset
Dim rs_pre_linea  As New ADODB.Recordset
Dim rs_Estructura  As New ADODB.Recordset


On Error GoTo Manejador_De_Error

' El formato es:
'   Legajo; Linea de Prestamo; Descripcion; Sucursal; Nro Comprobante; Cant. de Cuotas;
    'Monto Total; Año; Mes; Fecha Otorg.

    'Nro de Legajo
    pos1 = 1
    pos2 = InStr(pos1, strLinea, separador)
    If IsNumeric(Mid$(strLinea, pos1, pos2 - pos1)) Then
        Nro_Legajo = Mid$(strLinea, pos1, pos2 - pos1)
    Else
        Flog.writeline Espacios(Tabulador * 1) & "El legajo no es numerico"
        FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": El legajo no es numerico"
        InsertaError 1, 8
        HuboError = True
        Exit Sub
    End If
    
    'Linea de Prestamo
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    Lin_Prestamo = Mid(strLinea, pos1, pos2 - pos1)

    'Descripcion
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    Descripcion = Mid(strLinea, pos1, pos2 - pos1)

    'Sucursal
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    Sucursal = Mid(strLinea, pos1, pos2 - pos1)

    'Nro Comprobante
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    Nro_Comprobante = Mid(strLinea, pos1, pos2 - pos1)

    'Cantidad de Cuotas
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    Cant_Cuotas = Mid(strLinea, pos1, pos2 - pos1)

    'Monto Total
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    Monto_Total = Mid(strLinea, pos1, pos2 - pos1)
    Monto_Total = Replace(Monto_Total, SeparadorDecimal, ".")
    
    'Año
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    Anio = Mid(strLinea, pos1, pos2 - pos1)

    'Mes
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    Mes = Mid(strLinea, pos1, pos2 - pos1)

    'Fecha de Otorgamiento
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    ' pos2 = Len(strLinea)
    'Fecha_Otorg = Mid(strLinea, pos1, pos2)
    Fecha_Otorg = Mid(strLinea, pos1, pos2 - pos1)
    
    'quincenal mdf
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    If pos2 - pos1 < 0 Then
     quincenalstr = ""
    Else
      quincenalstr = Mid(strLinea, pos1, pos2 - pos1)
    End If
    'quincena mdf
    pos1 = pos2 + 1
    pos2 = Len(strLinea)
    quincenastr = Mid(strLinea, pos1, pos2)
    
' ----------------------------------
'Validaciones

'Que exista el legajo
StrSql = "SELECT * FROM empleado where empleg = " & Nro_Legajo
OpenRecordset StrSql, rs_Empleado
If rs_Empleado.EOF Then
    Flog.writeline Espacios(Tabulador * 1) & "No se encontro el legajo " & Nro_Legajo
    FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": No se encontro el legajo " & Nro_Legajo
    InsertaError 1, 8
    HuboError = True
    Exit Sub
Else
    Tercero = rs_Empleado!Ternro
End If

'que exista la sucursal
StrSql = "SELECT * FROM sucursal where estrnro = " & Sucursal
OpenRecordset StrSql, rs_Sucursal
If rs_Sucursal.EOF Then
    'Sucursal = 0
    Flog.writeline Espacios(Tabulador * 1) & "No se encontro la sucursal " & Sucursal
    Flog.writeline Espacios(Tabulador * 1) & "Busco la sucursal actual"
    'FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": No se encontro la sucursal " & Sucursal
    
    'buscar la Sucursal del Empleado
    StrSql = " SELECT estrnro FROM his_estructura " & _
             " WHERE ternro = " & Tercero & " AND " & _
             " tenro = 1 AND " & _
             " (htetdesde <= " & ConvFecha(Fecha_Otorg) & ") AND " & _
             " ((" & ConvFecha(Fecha_Otorg) & " <= htethasta) or (htethasta is null))"
    If rs_Estructura.State = adStateOpen Then rs_Estructura.Close
    OpenRecordset StrSql, rs_Estructura
    
    If Not rs_Estructura.EOF Then
        Sucursal = rs_Estructura!Estrnro
    Else
        Flog.writeline Espacios(Tabulador * 1) & "El empleado no tiene ninguna sucursal a la fecha"
        FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": El empleado no tiene ninguna sucursal a la fecha"
        InsertaError 4, 56
        HuboError = True
        Exit Sub
    End If
End If

'Que el monto sea numerico
If Not IsNumeric(Monto_Total) Then
    Flog.writeline Espacios(Tabulador * 1) & "El monto no es numerico " & Monto_Total
    FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": El monto no es numerico " & Monto_Total
    InsertaError 7, 5
    HuboError = True
    Exit Sub
End If

'que el mes sea valido
If IsNumeric(Mes) Then
    If Mes > 12 Or Mes < 1 Then
        Flog.writeline Espacios(Tabulador * 1) & "El mes es incorrecto " & Mes
        FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": El mes es incorrecto " & Mes
        InsertaError 9, 42
        HuboError = True
        Exit Sub
    End If
Else
    Flog.writeline Espacios(Tabulador * 1) & "El mes es incorrecto " & Mes
    FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": El mes es incorrecto " & Mes
    InsertaError 9, 42
    HuboError = True
    Exit Sub
End If

'que el año sea valido
If Not IsNumeric(Anio) Then
    Flog.writeline Espacios(Tabulador * 1) & "El año es incorrecto " & Anio
    FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": El año es incorrecto " & Anio
    InsertaError 8, 3
    HuboError = True
    Exit Sub
End If

'que la fecha de otorgamiento sea una fecha
If Not IsDate(Fecha_Otorg) Then
    Flog.writeline Espacios(Tabulador * 1) & "La fecha es incorrecta " & Fecha_Otorg
    FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": La fecha es incorrecta " & Fecha_Otorg
    InsertaError 10, 4
    HuboError = True
    Exit Sub
End If

'Busco el Estado de prestamos (Nuevo)
StrSql = "SELECT * FROM estadopre ORDER BY estnro "
OpenRecordset StrSql, rs_estado
If rs_estado.EOF Then
    Flog.writeline Espacios(Tabulador * 1) & "No se encontro el estado Pendiente para los prestamos "
    FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": No se encontro el estado Pendiente para los prestamos "
    EstNro = 0
Else
    EstNro = rs_estado!EstNro
End If

'Busco la primer moneda
StrSql = "SELECT * FROM moneda"
OpenRecordset StrSql, rs_Monedas
If rs_Monedas.EOF Then
    Flog.writeline Espacios(Tabulador * 1) & "No se encontro ninguna Moneda. Moneda Default 0"
    FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": No se encontro ninguna Moneda. Moneda Default 0"
    'InsertaError 4, 56
    'Exit Sub
    Moneda = 0
Else
    Moneda = rs_Monedas!monnro
End If

'Busco el periodo de liquidacion al que le corresponde
StrSql = "SELECT * FROM periodo"
StrSql = StrSql & " WHERE pliqmes = " & Mes
StrSql = StrSql & " AND pliqanio = " & Anio
OpenRecordset StrSql, rs_Periodo
If rs_Periodo.EOF Then
    Flog.writeline Espacios(Tabulador * 1) & "No se encontro periodo de liquidacion asociado"
    FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": No se encontro periodo de liquidacion asociado"
    'InsertaError 4, 56
    'Exit Sub
    Pliqnro = 0
Else
    Pliqnro = rs_Periodo!Pliqnro
End If


'Busco la linea de prestamo
StrSql = "SELECT * FROM pre_linea WHERE lnprenro =" & Lin_Prestamo
OpenRecordset StrSql, rs_pre_linea
If rs_pre_linea.EOF Then
    Flog.writeline Espacios(Tabulador * 1) & "No se encontro la linea de Prestamo"
    FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": No se encontro la linea de Prestamo"
    InsertaError 2, 96
    HuboError = True
    Exit Sub
Else
    lnprenro = rs_pre_linea!lnprenro
End If


'verifico valores correctos de quincena y quincenal

If LCase(quincenalstr) = "si" Then
  If quincenastr <> "2" And quincenastr <> "1" Then
    Flog.writeline "Error: quincena debe ir entre 1 y 2"
    HuboError = True
    Exit Sub
  Else
     quincenal = -1
     quincena = CInt(quincenastr)
  End If
Else
   If LCase(quincenalstr) <> "no" And quincenalstr <> "" And quincenalstr <> " " And LCase(quincenalstr) <> "n/a" Then
     Flog.writeline "Error: quincenal debe tener valores (si, no , n/a o dejarlo en blanco)"
     HuboError = True
     Exit Sub
   Else
     quincenal = 0
     quincena = 0
     Flog.writeline "quincena sera ignorado"
   End If
End If
' ---------------------------------------------
'Inserto

'inserto en prestamo
StrSql = "INSERT INTO prestamo ("
StrSql = StrSql & "predesc,preimp,precantcuo,ternro,quincenal,premes,preanio,monnro,estnro"
StrSql = StrSql & ",lnprenro,iduser,prefecotor,sucursal,pliqnro,precompr"
StrSql = StrSql & ",prequin,pretna,preiva,preotrosgas,prediavto "
StrSql = StrSql & ") VALUES ("
StrSql = StrSql & "'" & Left(Descripcion, 60) & "'"
StrSql = StrSql & "," & Monto_Total
StrSql = StrSql & "," & Cant_Cuotas
StrSql = StrSql & "," & Tercero
StrSql = StrSql & "," & quincenal
StrSql = StrSql & "," & Mes
StrSql = StrSql & "," & Anio
StrSql = StrSql & "," & Moneda
StrSql = StrSql & "," & EstNro

StrSql = StrSql & "," & lnprenro
StrSql = StrSql & ",0"
StrSql = StrSql & "," & ConvFecha(Fecha_Otorg)
StrSql = StrSql & "," & Sucursal
StrSql = StrSql & "," & Pliqnro
StrSql = StrSql & ",'" & Nro_Comprobante & "'"
StrSql = StrSql & "," & quincena & ",0,0,0,1 "
StrSql = StrSql & " )"
objConn.Execute StrSql, , adExecuteNoRecords

Flog.writeline Espacios(Tabulador * 1) & "Prestamo Insertado"

Fin:
'Cierro y libero
If rs_Empleado.State = adStateOpen Then rs_Empleado.Close
If rs_TipoPrestamo.State = adStateOpen Then rs_TipoPrestamo.Close
If rs_Sucursal.State = adStateOpen Then rs_Sucursal.Close
If rs_Monedas.State = adStateOpen Then rs_Monedas.Close
If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
If rs_estado.State = adStateOpen Then rs_estado.Close
If rs_pre_linea.State = adStateOpen Then rs_pre_linea.Close
If rs_Estructura.State = adStateOpen Then rs_Estructura.Close

Set rs_Empleado = Nothing
Set rs_TipoPrestamo = Nothing
Set rs_Sucursal = Nothing
Set rs_Monedas = Nothing
Set rs_Periodo = Nothing
Set rs_estado = Nothing
Set rs_pre_linea = Nothing
Set rs_Estructura = Nothing
Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    If InStr(1, Err.Description, "ODBC") > 0 Then
        'Fue error de Consulta de SQL
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
        Flog.writeline
    End If
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    GoTo Fin

End Sub


'Public Sub LineaModelo_230_old(ByVal strLinea As String)
'' ---------------------------------------------------------------------------------------------
'' Descripcion: Interface de Dias Pedidos de Vacaciones
'' Autor      : FGZ
'' Fecha      : 04/10/2004
'' Ultima Mod.: Pedió vigencia el 21/12/2004
'' Descripcion: cambio de formato
'' ---------------------------------------------------------------------------------------------
'' El formato es:
''   Legajo; Nombre y Apellido; Antiguedad Años; Antiguedad Meses; Dias Pendientes; Dias Correspondientes;
''   Total Dias; Fecha Desde; Fecha Hasta
'' ---------------------------------------------------------------------------------------------
'Dim pos1            as long
'Dim pos2            as long
'
'Dim Nro_Legajo As Long
'Dim Nombre_Apellido As String
'Dim Ant_Anios as long
'Dim Ant_Meses as long
'Dim Aux_Dias_Pendientes as long
'Dim Aux_Dias_Correspondientes as long
'Dim Aux_TipoVacacion As String
'Dim Total_Dias as long
'Dim Fecha_Desde As Date
'Dim Fecha_Hasta As Date
'Dim Tercero As Long
'
'Dim Aux_Fecha_Desde As Date
'
'Dim rs_tipovacac As New ADODB.Recordset
'Dim rs_vacdiascor As New ADODB.Recordset
'Dim rsDias As New ADODB.Recordset
'Dim rsVac As New ADODB.Recordset
'
'Dim diascoract as long
'Dim diastom as long
'Dim diascorant as long
'Dim diasdebe as long
'Dim diastot as long
'Dim diasyaped as long
'Dim diaspend as long
'
'Dim nroTipvac As Long
'Dim Hasta As Date
'Dim totferiados as long
'Dim tothabiles as long
'Dim totNohabiles as long
'Dim NroVac As Long
'
'Dim rs_Empleado As New ADODB.Recordset
'Dim rs_Periodos_Vac As New ADODB.Recordset
'
'
''Actio el Manejador de Errores Local
'On Error GoTo Manejador_De_Error
'
'    'Nro de Legajo
'    pos1 = 1
'    pos2 = InStr(pos1, strLinea, Separador)
'    If IsNumeric(Mid$(strLinea, pos1, pos2 - pos1)) Then
'        Nro_Legajo = Mid$(strLinea, pos1, pos2 - pos1)
'    Else
'        InsertaError 1, 8
'        HuboError = True
'        Exit Sub
'    End If
'
'    'Nombre y Apellido
'    pos1 = pos2 + 1
'    pos2 = InStr(pos1 + 1, strLinea, Separador)
'    Nombre_Apellido = Mid(strLinea, pos1, pos2 - pos1)
'
'    'Antiguedad Años
'    pos1 = pos2 + 1
'    pos2 = InStr(pos1 + 1, strLinea, Separador)
'    Ant_Anios = Mid(strLinea, pos1, pos2 - pos1)
'
'    'Antiguedad Mese
'    pos1 = pos2 + 1
'    pos2 = InStr(pos1 + 1, strLinea, Separador)
'    Ant_Meses = Mid(strLinea, pos1, pos2 - pos1)
'
'    'Tipo de Vacaciones
'    pos1 = pos2 + 1
'    pos2 = InStr(pos1 + 1, strLinea, Separador)
'    Aux_TipoVacacion = Mid(strLinea, pos1, pos2 - pos1)
'
'    'Dias_Pendientes
'    pos1 = pos2 + 1
'    pos2 = InStr(pos1 + 1, strLinea, Separador)
'    Aux_Dias_Pendientes = Mid(strLinea, pos1, pos2 - pos1)
'
'    'Dias Correspondientes
'    pos1 = pos2 + 1
'    pos2 = InStr(pos1 + 1, strLinea, Separador)
'    Aux_Dias_Correspondientes = Mid(strLinea, pos1, pos2 - pos1)
'
'    'Total de Dias
'    pos1 = pos2 + 1
'    pos2 = InStr(pos1 + 1, strLinea, Separador)
'    Total_Dias = Mid(strLinea, pos1, pos2 - pos1)
'
'    'Fecha Desde
'    pos1 = pos2 + 1
'    pos2 = InStr(pos1 + 1, strLinea, Separador)
'    Fecha_Desde = Mid(strLinea, pos1, pos2 - pos1)
'
'    'Fecha Hasta
'    pos1 = pos2 + 1
'    pos2 = Len(strLinea)
'    Fecha_Hasta = Mid(strLinea, pos1, pos2)
'
'    ' ----------------------------------
'    'Validaciones
'
'    'Que exista el legajo
'    StrSql = "SELECT * FROM empleado where empleg = " & Nro_Legajo
'    OpenRecordset StrSql, rs_Empleado
'    If rs_Empleado.EOF Then
'        Flog.writeline "No se encontro el legajo " & Nro_Legajo
'        InsertaError 1, 8
'        HuboError = True
'        Exit Sub
'    Else
'        Tercero = rs_Empleado!Ternro
'    End If
'
'    Aux_Fecha_Desde = Fecha_Desde
'
'    'Busco todos los Periodos Involucrados entre las Fechas
'    StrSql = "SELECT * FROM vacacion "
'    StrSql = StrSql & " WHERE vacfecdesde <= " & ConvFecha(Fecha_Hasta)
'    StrSql = StrSql & " AND  vacfechasta >= " & ConvFecha(Fecha_Desde)
'    StrSql = StrSql & " ORDER BY vacnro"
'    OpenRecordset StrSql, rs_Periodos_Vac
'
'    Do While Not rs_Periodos_Vac.EOF And Aux_Fecha_Desde < Fecha_Hasta
'        'si le fecha en la que se va a generar los dias pedidos estan fuera del rengo de fechas del periodo
'        ' no se procesan
'        If Aux_Fecha_Desde >= rs_Periodos_Vac!vacfecdesde And Aux_Fecha_Desde <= rs_Periodos_Vac!vacfechasta Then
'            diascoract = 0
'            diastom = 0
'            diascorant = 0
'            diasdebe = 0
'            diastot = 0
'            diasyaped = 0
'            diaspend = 0
'
'            Flog.writeline "Periodo de Vacaciones:" & rs_Periodos_Vac!vacnro & " " & rs_Periodos_Vac!vacdesc
'
'            NroVac = rs_Periodos_Vac!vacnro
'
'            StrSql = "SELECT * FROM vacdiascor WHERE ternro = " & Tercero & " AND vacnro = " & NroVac
'            OpenRecordset StrSql, rs_vacdiascor
'            If Not rs_vacdiascor.EOF Then
'
'                StrSql = "SELECT * FROM tipovacac WHERE tipvacnro = " & rs_vacdiascor!tipvacnro
'                OpenRecordset StrSql, rs_tipovacac
'                If Not rs_tipovacac.EOF Then
'                    nroTipvac = rs_tipovacac!tipvacnro
'                End If
'
'                diascoract = rs_vacdiascor!vdiascorcant ' dias corresp al periodo actual
'
'                StrSql = "SELECT * FROM vacacion WHERE vacnro <> " & NroVac & " and vacfechasta < " & ConvFecha(Fecha_Desde)
'                OpenRecordset StrSql, rsVac
'                Do While Not rsVac.EOF
'
'                    diastom = 0
'
'                    StrSql = "SELECT * FROM lic_vacacion " & _
'                             " INNER JOIN emp_lic ON emp_lic.emp_licnro = lic_vacacion.emp_licnro " & _
'                             " WHERE lic_vacacion.vacnro = " & rsVac!vacnro & " AND emp_lic.empleado = " & Tercero
'                    OpenRecordset StrSql, rsDias
'                    Do While Not rsDias.EOF
'                        diastom = diastom + rsDias!elcantdias
'                        rsDias.MoveNext
'                    Loop
'                    diascorant = 0
'                    StrSql = "SELECT * FROM vacdiascor WHERE ternro = " & Tercero & " AND vacnro = " & rsVac!vacnro
'                    OpenRecordset StrSql, rs
'                    If Not rs.EOF Then diascorant = rs!vdiascorcant
'                    diasdebe = diasdebe + (diascorant - diastom)
'
'                    rsVac.MoveNext
'                Loop
'
'                diastot = diascoract + diasdebe
'            End If
'
'
'            ' Busco los pedidos de ese periodo
'            StrSql = "SELECT * FROM vacdiasped WHERE ternro = " & Tercero & " AND vacnro = " & NroVac
'            OpenRecordset StrSql, objRs
'            Do While Not objRs.EOF
'                'diasyaped = diasyaped + objRs!vdiapedcant
'                diasyaped = diasyaped + objRs!vdiaspedhabiles
'                objRs.MoveNext
'            Loop
'
'            diaspend = diastot - diasyaped
'            If diaspend > 0 Then
'
'                Call DiasPedidos(NroVac, nroTipvac, Aux_Fecha_Desde, Fecha_Hasta, Hasta, Tercero, diaspend, tothabiles, totNohabiles, totferiados)
'
'                StrSql = "INSERT INTO vacdiasped (vdiapedhasta,vdiaspedferiados,vdiaspedhabiles,vdiaspednohabiles,ternro,vacnro,vdiapedcant,vdiapeddesde,vdiaspedestado) VALUES (" & _
'                          ConvFecha(Hasta) & "," & totferiados & "," & tothabiles & "," & totNohabiles & "," & Tercero & "," & NroVac & "," & (totferiados + tothabiles + totNohabiles) & "," & ConvFecha(Aux_Fecha_Desde) & ",-1)"
'                objConn.Execute StrSql, , adExecuteNoRecords
'
'                Aux_Fecha_Desde = Hasta + 1
'            End If
'        Else
'            Flog.writeline "La fecha en la que se va a generar los dias pedidos estan fuera del rengo de fechas del periodo " & Aux_Fecha_Desde
'        End If
'
'        rs_Periodos_Vac.MoveNext
'    Loop
'
'    If Aux_Fecha_Desde < Fecha_Hasta Then
'        Flog.writeline "Quedaron " & DateDiff("d", Fecha_Hasta, Aux_Fecha_Desde) + 1 & " días sin generar "
'    End If
'
'fin:
'
''Desactivo el manejador de Errores Local
'On Error GoTo 0
'
'Exit Sub
'
'Manejador_De_Error:
'    HuboError = True
'
'    Flog.writeline
'    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
'    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
'    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
'    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
'    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
'    Flog.writeline
'    If InStr(1, Err.Description, "ODBC") > 0 Then
'        'Fue error de Consulta de SQL
'        Flog.writeline
'        Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
'        Flog.writeline
'    End If
'    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
'    Flog.writeline
'    GoTo fin
'End Sub

Public Sub LineaModelo_230_OLD(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Interface de Dias Pedidos de Vacaciones
' Autor      : FGZ
' Fecha      : 04/10/2004
' Ultima Mod.:
' Descripcion: cambio de formato - 21/12/2004
' Modificacion: 28/04/2008 - Lisandro Moro - Se corrigio la funcio ya que calculaba un dia de mas cuando pasaba de periodo
'              24-10-2011 - Margiotta, Emanuel - Se agrego la vista de empleado.
' ---------------------------------------------------------------------------------------------
' El formato es:
'   Legajo; ; Fecha Desde; Cantidad de dias
' ---------------------------------------------------------------------------------------------
Dim pos1            As Long
Dim pos2            As Long

Dim Nro_Legajo As Long
Dim Nombre_Apellido As String
Dim Ant_Anios As Long
Dim Ant_Meses As Long
Dim Aux_Dias_Pendientes As Long
Dim Aux_Dias_Correspondientes As Long
Dim Aux_TipoVacacion As String
Dim Total_Dias As Long
Dim Fecha_Desde As Date
Dim Fecha_Hasta As Date
Dim Tercero As Long

Dim Aux_Fecha_Desde As Date
Dim Aux_Dias As Long

Dim rs_tipovacac As New ADODB.Recordset
Dim rs_vacdiascor As New ADODB.Recordset
Dim rsDias As New ADODB.Recordset
Dim rsVac As New ADODB.Recordset

Dim diascoract As Long
Dim diastom As Long
Dim diascorant As Long
Dim diasdebe As Long
Dim diastot As Long
Dim diasyaped As Long
Dim DiasPend As Long

Dim NroTipVac As Long
Dim Hasta As Date
Dim TotFeriados As Long
Dim TotHabiles As Long
Dim TotNoHabiles As Long
Dim NroVac As Long

Dim rs_Empleado As New ADODB.Recordset
Dim rs_Periodos_Vac As New ADODB.Recordset
Dim listavacnro 'mdf
'Dim diaspedenper

'Actio el Manejador de Errores Local
On Error GoTo Manejador_De_Error

    'Nro de Legajo
    pos1 = 1
    pos2 = InStr(pos1, strLinea, separador)
    If IsNumeric(Mid$(strLinea, pos1, pos2 - pos1)) Then
        Nro_Legajo = Mid$(strLinea, pos1, pos2 - pos1)
    Else
        InsertaError 1, 8
        HuboError = True
        Exit Sub
    End If
    
    'Fecha Desde
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    Fecha_Desde = Mid(strLinea, pos1, pos2 - pos1)
    Fecha_Desde = CDate(Fecha_Desde)
    Flog.writeline "la fecha desde es:" & Fecha_Desde
    
    'Total de dias Pedidos
    pos1 = pos2 + 1
    pos2 = Len(strLinea)
    Total_Dias = Mid(strLinea, pos1, pos2 - pos1 + 1)
    
    
    ' ----------------------------------
    'Validaciones
    
    'EAM- Verifica que exista el legajo para la vista de empleado
    'StrSql = "SELECT * FROM v_empleadoproc where empleg = " & Nro_Legajo
    StrSql = "SELECT * FROM empleado where empleg = " & Nro_Legajo
    OpenRecordset StrSql, rs_Empleado
    If rs_Empleado.EOF Then
        Flog.writeline Espacios(Tabulador * 2) & "No se encontro el legajo " & Nro_Legajo
        InsertaError 1, 8
        HuboError = True
        Exit Sub
    Else
        Tercero = rs_Empleado!Ternro
    End If
    
    Aux_Fecha_Desde = Fecha_Desde
    Aux_Dias = Total_Dias


    
    'FGZ - 08/04/2010 -------------------------------------------------------
'    'Busco todos los Periodos Involucrados entre las Fechas
'    StrSql = "SELECT * FROM vacacion "
'    'StrSql = StrSql & " WHERE vacfecdesde <= " & ConvFecha(fecha_hasta)
'    'StrSql = StrSql & " AND  vacfechasta >= " & ConvFecha(fecha_desde)
'    'StrSql = StrSql & " ORDER BY vacnro"
'    StrSql = StrSql & " ORDER BY vacfecdesde"
'    OpenRecordset StrSql, rs_Periodos_Vac
    
    
    'Ahora los periodos de vacaciones pueden tener alcance por estructura
    
    StrSql = "SELECT * FROM alcance_testr WHERE tanro= 21"
    OpenRecordset StrSql, rs_Periodos_Vac
    If rs_Periodos_Vac.EOF Then
        'Busco todos los Periodos Involucrados entre las Fechas
        StrSql = "SELECT * FROM vacacion "
        StrSql = StrSql & " ORDER BY vacfecdesde"
    Else
        'Busco todos los Periodos Involucrados entre las Fechas
        StrSql = "SELECT * FROM vacacion "
        StrSql = StrSql & " INNER JOIN vac_estr ON vacacion.vacnro= vac_estr.vacnro "
        StrSql = StrSql & " INNER JOIN his_estructura ON vac_estr.estrnro = his_estructura.estrnro "
        StrSql = StrSql & " WHERE  his_estructura.ternro= " & Tercero
        'StrSql = StrSql & " AND (htetdesde <= " & ConvFecha(Fecha_Desde) & " AND (htethasta >= " & ConvFecha(Fecha_Desde) & " OR htethasta IS NULL)"
        StrSql = StrSql & " ORDER BY vacfecdesde"
    End If
    OpenRecordset StrSql, rs_Periodos_Vac
    'FGZ - 08/04/2010 -------------------------------------------------------
    'listavacnro = "0" 'mdf
    Flog.writeline "Periodos a controlar:" & StrSql
    Do While Not rs_Periodos_Vac.EOF And Aux_Dias > 0 'And Aux_Fecha_Desde < fecha_hasta
        'si le fecha en la que se va a generar los dias pedidos estan fuera del rango de fechas del periodo
        ' no se procesan
        
        Flog.writeline "Antes del if: Periodo = " & rs_Periodos_Vac!vacdesc & "y fecha desde del periodo = " & rs_Periodos_Vac!vacfecdesde
        Flog.writeline " fecha hasta del periodo" & rs_Periodos_Vac!vacfechasta & " aux fecha desde =" & Aux_Fecha_Desde
        
        If Aux_Fecha_Desde >= rs_Periodos_Vac!vacfecdesde Then ' And Aux_Fecha_Desde <= rs_Periodos_Vac!vacfechasta Then
            Flog.writeline "Entre al if " & Aux_Fecha_Desde & ">=" & rs_Periodos_Vac!vacfecdesde
            diascoract = 0
            diastom = 0
            diascorant = 0
            diasdebe = 0
            diastot = 0
            diasyaped = 0
            DiasPend = 0
            
            Flog.writeline Espacios(Tabulador * 2) & "Periodo de Vacaciones:" & rs_Periodos_Vac!vacnro & " " & rs_Periodos_Vac!vacdesc
            
            NroVac = rs_Periodos_Vac!vacnro
            'listavacnro = listavacnro & "," & NroVac 'mdf
            StrSql = "SELECT * FROM vacdiascor WHERE ternro = " & Tercero & " AND vacnro = " & NroVac
            OpenRecordset StrSql, rs_vacdiascor
            Flog.writeline "dias correspondientes= " & StrSql
            
            If Not rs_vacdiascor.EOF Then
                 Flog.writeline " entro al if Not rs_vacdiascor.EOF "
                StrSql = "SELECT * FROM tipovacac WHERE tipvacnro = " & rs_vacdiascor!tipvacnro
                OpenRecordset StrSql, rs_tipovacac
                If Not rs_tipovacac.EOF Then
                    NroTipVac = rs_tipovacac!tipvacnro
                End If
                
                diascoract = rs_vacdiascor!vdiascorcant ' dias corresp al periodo actual
                
                StrSql = "SELECT * FROM vacacion WHERE vacnro <> " & NroVac & " and vacfechasta < " & ConvFecha(Fecha_Desde)
                'StrSql = "SELECT * FROM vacacion WHERE vacnro not in  (" & listavacnro & ") and vacfechasta < " & ConvFecha(Fecha_Desde)
                Flog.writeline "vemos periodos distintos del q analizo:" & StrSql
                OpenRecordset StrSql, rsVac
                Do While Not rsVac.EOF
                   'listavacnro = listavacnro & rsVac!vacnro 'mdf
                    Flog.writeline "--" & rsVac!vacnro & rsVac!vacfecdesde & "-" & rsVac!vacfecdesde & "-----"
                    diastom = 0
                    
                    StrSql = "SELECT * FROM lic_vacacion " & _
                             " INNER JOIN emp_lic ON emp_lic.emp_licnro = lic_vacacion.emp_licnro " & _
                             " WHERE lic_vacacion.vacnro = " & rsVac!vacnro & " AND emp_lic.empleado = " & Tercero
                    OpenRecordset StrSql, rsDias
                    Do While Not rsDias.EOF
                        diastom = diastom + rsDias!elcantdias
                        rsDias.MoveNext
                    Loop
                    Flog.writeline "En ese periodo se tomo: " & diastom
                    diascorant = 0
                    StrSql = "SELECT * FROM vacdiascor WHERE ternro = " & Tercero & " AND vacnro = " & rsVac!vacnro
                    OpenRecordset StrSql, rs
                    If Not rs.EOF Then
                    diascorant = rs!vdiascorcant
                    Flog.writeline "le correspondian para ese periodo: " & rs!vdiascorcant
                    End If
                   
                    diasdebe = diasdebe + (diascorant - diastom)
                    Flog.writeline "debe " & diasdebe
                    rsVac.MoveNext
                Loop
                
                diastot = diascoract + diasdebe
            End If
            
            
            ' Busco los pedidos de ese periodo
            StrSql = "SELECT * FROM vacdiasped WHERE ternro = " & Tercero & " AND vacnro = " & NroVac
            OpenRecordset StrSql, objRs
            Flog.writeline StrSql
            Do While Not objRs.EOF
                'diasyaped = diasyaped + objRs!vdiapedcant
                diasyaped = diasyaped + objRs!vdiaspedhabiles
                objRs.MoveNext
            Loop
            Flog.writeline "dias ya pedidos:" & diasyaped
            DiasPend = diastot - diasyaped
            Flog.writeline "dias pendientes:" & DiasPend
            If DiasPend > 0 Then
                'Call DiasPedidos(NroVac, nroTipvac, Aux_Fecha_Desde, Fecha_Hasta, Hasta, Tercero, diaspend, tothabiles, totNohabiles, totferiados)
                If DiasPend > Aux_Dias Then
                    DiasPend = Aux_Dias
                End If
                Call diaspedidos(NroVac, NroTipVac, Aux_Fecha_Desde, Hasta, Tercero, DiasPend, TotHabiles, TotNoHabiles, TotFeriados)
                If Not (superposicion(Aux_Fecha_Desde, Hasta, Tercero)) Then 'mdf
                  StrSql = "INSERT INTO vacdiasped (vdiapedhasta,vdiaspedferiados,vdiaspedhabiles,vdiaspednohabiles,ternro,vacnro,vdiapedcant,vdiapeddesde,vdiaspedestado) VALUES (" & _
                            ConvFecha(Hasta) & "," & TotFeriados & "," & TotHabiles & "," & TotNoHabiles & "," & Tercero & "," & NroVac & "," & (TotFeriados + TotHabiles + TotNoHabiles) & "," & ConvFecha(Aux_Fecha_Desde) & ",-1)"
                  objConn.Execute StrSql, , adExecuteNoRecords
                  Flog.writeline StrSql
                  Aux_Dias = Aux_Dias - TotHabiles
                  Aux_Fecha_Desde = Hasta + 1
                  Flog.writeline "Aux_Fecha_Desde" & Aux_Fecha_Desde
                Else
                 Flog.writeline "------------------------------------------------------"
                 Flog.writeline " ERROR: El pedido no se inserto porque hay superposicion de dias en el pedido"
                 Flog.writeline "------------------------------------------------------"
                 FlogE.writeline "------------------------------------------------------"
                 FlogE.writeline " ERROR: El pedido no se inserto porque hay superposicion de dias en el pedido"
                 FlogE.writeline "------------------------------------------------------"
                 Call InsertaError(2, 147)
                 Exit Sub
                End If
            End If
        Else
            Flog.writeline Espacios(Tabulador * 2) & "La fecha en la que se va a generar los dias pedidos estan fuera del rango de fechas del periodo " & Aux_Fecha_Desde
        End If
            
        rs_Periodos_Vac.MoveNext
    Loop
    
    'If Aux_Fecha_Desde < Fecha_Hasta Then
    If Aux_Dias > 0 Then
        Flog.writeline Espacios(Tabulador * 2) & "Quedaron " & Aux_Dias & " días sin generar "
    End If

Fin:

'Desactivo el manejador de Errores Local
On Error GoTo 0

Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    If InStr(1, Err.Description, "ODBC") > 0 Then
        'Fue error de Consulta de SQL
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
        Flog.writeline
    End If
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    GoTo Fin
End Sub

Public Sub LineaModelo_230(ByVal strLinea As String)

'Creado: 23/09/2014 - Fernandez, Matias
'rediseño
Dim pos1            As Long
Dim pos2            As Long

Dim Nro_Legajo As Long
Dim Nombre_Apellido As String
Dim Ant_Anios As Long
Dim Ant_Meses As Long
Dim Aux_Dias_Pendientes As Long
Dim Aux_Dias_Correspondientes As Long
Dim Aux_TipoVacacion As String
Dim Total_Dias As Long
Dim Fecha_Desde As Date
Dim Fecha_Hasta As Date
Dim Tercero As Long

Dim Aux_Fecha_Desde As Date
Dim Aux_Dias As Long

Dim rs_tipovacac As New ADODB.Recordset
Dim rs_vacdiascor As New ADODB.Recordset
Dim rsDias As New ADODB.Recordset
Dim rsVac As New ADODB.Recordset

Dim diascoract As Long
Dim diastom As Long
Dim diascorant As Long
Dim diasdebe As Long
Dim diastot As Long
Dim diasyaped As Long
Dim DiasPend As Long

Dim NroTipVac As Long
Dim Hasta As Date
Dim TotFeriados As Long
Dim TotHabiles As Long
Dim TotNoHabiles As Long
Dim NroVac As Long

Dim rs_Empleado As New ADODB.Recordset
Dim rs_Periodos_Vac As New ADODB.Recordset


Dim listavacnro 'mdf
Dim continuar   'mdf
Dim Diferencia 'mdf

'Actio el Manejador de Errores Local
On Error GoTo Manejador_De_Error

    'Nro de Legajo
    pos1 = 1
    pos2 = InStr(pos1, strLinea, separador)
    If IsNumeric(Mid$(strLinea, pos1, pos2 - pos1)) Then
        Nro_Legajo = Mid$(strLinea, pos1, pos2 - pos1)
    Else
        InsertaError 1, 8
        HuboError = True
        Exit Sub
    End If
    
    'Fecha Desde
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    Fecha_Desde = Mid(strLinea, pos1, pos2 - pos1)
    Fecha_Desde = CDate(Fecha_Desde)
    Flog.writeline "la fecha desde es:" & Fecha_Desde
    
    'Total de dias Pedidos
    pos1 = pos2 + 1
    pos2 = Len(strLinea)
    Total_Dias = Mid(strLinea, pos1, pos2 - pos1 + 1)
    
    
    ' ----------------------------------
    'Validaciones
    
    'EAM- Verifica que exista el legajo para la vista de empleado
    'StrSql = "SELECT * FROM v_empleadoproc where empleg = " & Nro_Legajo
    StrSql = "SELECT * FROM empleado where empleg = " & Nro_Legajo
    OpenRecordset StrSql, rs_Empleado
    If rs_Empleado.EOF Then
        Flog.writeline Espacios(Tabulador * 2) & "No se encontro el legajo " & Nro_Legajo
        InsertaError 1, 8
        HuboError = True
        Exit Sub
    Else
        Tercero = rs_Empleado!Ternro
    End If
    
    Aux_Fecha_Desde = Fecha_Desde
    Aux_Dias = Total_Dias


    

    
    StrSql = "SELECT * FROM alcance_testr WHERE tanro= 21"
    OpenRecordset StrSql, rs_Periodos_Vac
    If rs_Periodos_Vac.EOF Then
        'Busco todos los Periodos Involucrados entre las Fechas
        StrSql = "SELECT * FROM vacacion where vacestado = -1 "
        StrSql = StrSql & " ORDER BY vacfecdesde"
    Else
        'Busco todos los Periodos Involucrados entre las Fechas
        StrSql = "SELECT * FROM vacacion "
        StrSql = StrSql & " INNER JOIN vac_estr ON vacacion.vacnro= vac_estr.vacnro "
        StrSql = StrSql & " INNER JOIN his_estructura ON vac_estr.estrnro = his_estructura.estrnro "
        StrSql = StrSql & " WHERE  his_estructura.ternro= " & Tercero & " and vacacion.vacestado = -1 "
        'StrSql = StrSql & " AND (htetdesde <= " & ConvFecha(Fecha_Desde) & " AND (htethasta >= " & ConvFecha(Fecha_Desde) & " OR htethasta IS NULL))"
        StrSql = StrSql & " ORDER BY vacfecdesde"
    End If
    OpenRecordset StrSql, rs_Periodos_Vac
    'FGZ - 08/04/2010 -------------------------------------------------------
    'listavacnro = "0" 'mdf
    Flog.writeline "Periodos a controlar:" & StrSql
    
    
    continuar = True
    Flog.writeline "Solo se analizan periodos abiertos donde la fecha desde sea  menor a la fecha en la cual hago el pedido"
    Do While Not rs_Periodos_Vac.EOF And continuar 'voy a ciclar por cada periodo
        
        If Aux_Fecha_Desde >= rs_Periodos_Vac!vacfecdesde Then
        
            'diascoract = 0
            'diastom = 0
            'diascorant = 0
            'diasdebe = 0
            'diastot = 0
            'diasyaped = 0
            'diaspend = 0
            NroVac = rs_Periodos_Vac!vacnro
            Flog.writeline "Periodo numero: " & NroVac
            StrSql = "SELECT * FROM vacdiascor WHERE ternro = " & Tercero & " AND vacnro = " & NroVac
            OpenRecordset StrSql, rs_vacdiascor
            Flog.writeline "consulta dias correspondientes = " & StrSql
           If Not rs_vacdiascor.EOF Then ' si hay dias correspondientes hay q hacer varios chequeos
                       
                StrSql = "SELECT * FROM tipovacac WHERE tipvacnro = " & rs_vacdiascor!tipvacnro
                OpenRecordset StrSql, rs_tipovacac
                If Not rs_tipovacac.EOF Then
                    NroTipVac = rs_tipovacac!tipvacnro
                End If
           
           
           
           
                diascoract = rs_vacdiascor!vdiascorcant
                Flog.writeline "Le corresponden: " & rs_vacdiascor!vdiascorcant
                diastom = 0
                StrSql = "SELECT * FROM lic_vacacion " & _
                         " INNER JOIN emp_lic ON emp_lic.emp_licnro = lic_vacacion.emp_licnro " & _
                         " WHERE lic_vacacion.vacnro = " & NroVac & " AND emp_lic.empleado = " & Tercero
                OpenRecordset StrSql, rsDias
                Do While Not rsDias.EOF 'miro los dias que se tomo
                    diastom = diastom + rsDias!elcantdias
                    rsDias.MoveNext
                Loop
                 
                  'vamos a ver los dias pedidos
                StrSql = "SELECT * FROM vacdiasped WHERE ternro = " & Tercero & " AND vacnro = " & NroVac
                OpenRecordset StrSql, objRs
                Flog.writeline StrSql
                diasyaped = 0
                Do While Not objRs.EOF
                    diasyaped = diasyaped + objRs!vdiaspedhabiles
                    objRs.MoveNext
                Loop
              ' a esta altura tengo dias correspondientes, pedidos y tomados.
                If (diasyaped = diascoract) Then
                   Diferencia = 0
                Else
                  Diferencia = sup_ped_lic(Tercero, NroVac, diascoract) 'aca determino la cantidad de dias a corresponder en el periodo analizado
                End If
                
                If (Diferencia >= Aux_Dias) And (Diferencia <> 0) Then
                     Call diaspedidos(NroVac, NroTipVac, Aux_Fecha_Desde, Hasta, Tercero, Aux_Dias, TotHabiles, TotNoHabiles, TotFeriados)
                     If Not (superposicion(Aux_Fecha_Desde, Hasta, Tercero)) Then 'mdf
                        StrSql = "INSERT INTO vacdiasped (vdiapedhasta,vdiaspedferiados,vdiaspedhabiles,vdiaspednohabiles,ternro,vacnro,vdiapedcant,vdiapeddesde,vdiaspedestado) VALUES (" & _
                              ConvFecha(Hasta) & "," & TotFeriados & "," & TotHabiles & "," & TotNoHabiles & "," & Tercero & "," & NroVac & "," & (TotFeriados + TotHabiles + TotNoHabiles) & "," & ConvFecha(Aux_Fecha_Desde) & ",-1)"
                              objConn.Execute StrSql, , adExecuteNoRecords
                        Flog.writeline StrSql
                        continuar = False
                     Else
                        Flog.writeline "------------------------------------------------------"
                        Flog.writeline " ERROR: El pedido no se inserto porque hay superposicion de dias en el pedido"
                        Flog.writeline "------------------------------------------------------"
                        FlogE.writeline "------------------------------------------------------"
                        FlogE.writeline " ERROR: El pedido no se inserto porque hay superposicion de dias en el pedido"
                        FlogE.writeline "------------------------------------------------------"
                        Call InsertaError(2, 147)
                        Exit Sub
                     
                     End If
                 Else
                     If (Diferencia < Aux_Dias) And (Diferencia <> 0) Then
                        Aux_Dias = Aux_Dias - Diferencia
                        Call diaspedidos(NroVac, NroTipVac, Aux_Fecha_Desde, Hasta, Tercero, Diferencia, TotHabiles, TotNoHabiles, TotFeriados)
                           If Not (superposicion(Aux_Fecha_Desde, Hasta, Tercero)) Then 'mdf
                              StrSql = "INSERT INTO vacdiasped (vdiapedhasta,vdiaspedferiados,vdiaspedhabiles,vdiaspednohabiles,ternro,vacnro,vdiapedcant,vdiapeddesde,vdiaspedestado) VALUES (" & _
                                    ConvFecha(Hasta) & "," & TotFeriados & "," & TotHabiles & "," & TotNoHabiles & "," & Tercero & "," & NroVac & "," & (TotFeriados + TotHabiles + TotNoHabiles) & "," & ConvFecha(Aux_Fecha_Desde) & ",-1)"
                                    objConn.Execute StrSql, , adExecuteNoRecords
                              Aux_Fecha_Desde = Hasta + 1
                            Else
                              Flog.writeline "------------------------------------------------------"
                              Flog.writeline " ERROR: El pedido no se inserto porque hay superposicion de dias en el pedido"
                              Flog.writeline "------------------------------------------------------"
                              FlogE.writeline "------------------------------------------------------"
                              FlogE.writeline " ERROR: El pedido no se inserto porque hay superposicion de dias en el pedido"
                              FlogE.writeline "------------------------------------------------------"
                              Call InsertaError(2, 147)
                              Exit Sub
                           
                           End If
                       Else
                         Flog.writeline "No se puede insertar el pedido en este periodo...."
                     End If
                 End If
                
           End If
        End If
   rs_Periodos_Vac.MoveNext
  Loop
  
  If Aux_Dias > 0 Then
   Flog.writeline "quedaron " & Aux_Dias & " Sin asignar a ningun periodo."
  End If
  
Fin:
  
On Error GoTo 0

Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    If InStr(1, Err.Description, "ODBC") > 0 Then
        'Fue error de Consulta de SQL
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
        Flog.writeline
    End If
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    GoTo Fin
  
  
  
End Sub

Private Function sup_ped_lic(ByVal Tercero As String, ByVal NroVac As String, ByVal diascor As String) As Integer 'mdf

'Creado: 23/09/2014 - Fernandez, Matias
' Esta funcion se encarga de obtener cuantos dias correspondientes puedo insertar en un periodo determinado
'pueden darse situaciones donde tengo licencias sin dias pedidos, o pedidos sin licencias
Dim StrSql As String
Dim rs_Lic As New ADODB.Recordset
Dim rs_pedido As New ADODB.Recordset
Dim diaspedidos As String 'arreglo con dias pedidos
Dim diastomados  As String 'arreglo con dias tomados
Dim diasadescontar As Integer
Dim pedidoanterior As Integer 'MDF 19/01/2016
    Flog.writeline "-----------entre a sup_ped_lic-----------------"
    diaspedidos = "0"
    diastomados = "0"
    diasadescontar = 0
'    StrSql = "select emp_lic.emp_licnro Numero ,* from vacdiasped inner join lic_vacacion on vacdiasped.vacnro= lic_vacacion.vacnro"
'    StrSql = StrSql & " inner join emp_lic on lic_vacacion.emp_licnro= emp_lic.emp_licnro "
'    StrSql = StrSql & " where vdiapeddesde =  elfechadesde  and vdiapedhasta=elfechahasta and vacdiasped.ternro= " & Tercero
'    StrSql = StrSql & "  and vacdiasped.vacnro = " & NroVac
'   Carmen Quintero 22/01/2015
    StrSql = "select emp_lic.emp_licnro Numero, vdiapednro, vdiaspedhabiles from vacdiasped inner join lic_vacacion on vacdiasped.vacnro= lic_vacacion.vacnro"
    StrSql = StrSql & " inner join emp_lic on lic_vacacion.emp_licnro= emp_lic.emp_licnro "
    StrSql = StrSql & " where (vdiapeddesde =  elfechadesde or vdiapedhasta=elfechahasta) and vacdiasped.ternro= " & Tercero
    'StrSql = StrSql & " where (vdiapeddesde =  elfechadesde  and vdiapedhasta=elfechahasta) and vacdiasped.ternro= " & Tercero
    StrSql = StrSql & "  and vacdiasped.vacnro = " & NroVac
'fin
    OpenRecordset StrSql, rs_pedido 'pedidos con licencias
    If Not rs_pedido.EOF Then
        pedidoanterior = 0
        Do While Not rs_pedido.EOF
          If (CInt(rs_pedido!vdiapednro) <> pedidoanterior) Then
            diaspedidos = diaspedidos & "," & rs_pedido!vdiapednro
            diastomados = diastomados & "," & rs_pedido!Numero
            diasadescontar = diasadescontar + rs_pedido!vdiaspedhabiles 'guarda aca MDF
            pedidoanterior = rs_pedido!vdiapednro
            Flog.writeline "Pedido --->" & pedidoanterior
          End If
          rs_pedido.MoveNext
        Loop
    End If 'pedidos con su correspondiente licencia
    Flog.writeline " Lista de dias pedidos con su respectiva licencia = " & diaspedidos
    Flog.writeline "Lista de dias tomados con su respectivo pedido = " & diastomados
    'ahora reccorro pedido sin licencia y licencia sin pedido
    StrSql = "select Sum(elcantdias) tot from emp_lic inner join lic_vacacion on emp_lic.emp_licnro = lic_vacacion.emp_licnro "
    StrSql = StrSql & " where lic_vacacion.vacnro= " & NroVac & " and empleado= " & Tercero
    StrSql = StrSql & " and lic_vacacion.emp_licnro not in (" & diastomados & ")"
    OpenRecordset StrSql, rs_Lic 'licencia sin pedido
    If Not rs_Lic.EOF And Not IsNull(rs_Lic!tot) Then
      Flog.writeline "hay licencias sin pedidos"
      diasadescontar = diasadescontar + rs_Lic!tot
    End If
    
    StrSql = "select Sum(vdiaspedhabiles) tot from vacdiasped where ternro= " & Tercero
    StrSql = StrSql & " and vacnro= " & NroVac & " and vdiapednro not in (" & diaspedidos & ")"
    OpenRecordset StrSql, rs_pedido 'pedido sin licencia
    If Not rs_pedido.EOF And Not IsNull(rs_pedido!tot) Then
      diasadescontar = diasadescontar + rs_pedido!tot
      Flog.writeline " hay pedidos sin licencia "
    End If
    sup_ped_lic = diascor - diasadescontar
    Flog.writeline "----------- salgo de sup_ped_lic -----------------"
End Function


Private Function superposicion(ByVal FechaInicial As Date, ByVal FechaFinal As Date, ByVal Tercero As String) As Boolean
 
 Dim I As Date
 Dim objRs As New ADODB.Recordset
 Dim StrSql As String
 I = FechaInicial
 superposicion = False
    Do While I <= FechaFinal
      
       StrSql = "SELECT * FROM vacdiasped WHERE ternro = " & Tercero & " and (vdiapeddesde = " & ConvFecha(I) & " Or vdiapedhasta = " & ConvFecha(I) & ")"
       OpenRecordset StrSql, objRs
       If Not objRs.EOF Then
         superposicion = True
         I = DateAdd("d", 1, FechaFinal)
       Else
        I = DateAdd("d", 1, I)
       End If
    
    Loop
   objRs.Close
   
End Function
'NroVac,nroTipvac, Aux_Fecha_Desde, Fecha_Hasta, Hasta, Tercero, diaspend, tothabiles, totNohabiles, totferiados)
Private Sub diaspedidos(ByVal NroVac As Long, ByVal TipoVac As Long, ByVal FechaInicial As Date, ByRef Fecha As Date, ByVal Ternro As Long, ByVal cant As Long, ByRef CHabiles As Long, ByRef cNoHabiles As Long, ByRef cFeriados As Long)
'Calcula la fecha hasta a partir de la fecha desde, la cantidad de dias pedidos y el tipo
'de vacacion asociado a los dias correspòndientes, para el período

Dim I As Long
Dim j As Long
Dim objFeriado As New Feriado
Dim DHabiles(1 To 7) As Boolean
Dim EsFeriado As Boolean
Dim objRs As New ADODB.Recordset
Dim ExcluyeFeriados As Boolean

    StrSql = "SELECT * FROM tipovacac WHERE tipvacnro = " & TipoVac
    OpenRecordset StrSql, objRs
    If Not objRs.EOF Then
        DHabiles(1) = objRs!tpvhabiles__1
        DHabiles(2) = objRs!tpvhabiles__2
        DHabiles(3) = objRs!tpvhabiles__3
        DHabiles(4) = objRs!tpvhabiles__4
        DHabiles(5) = objRs!tpvhabiles__5
        DHabiles(6) = objRs!tpvhabiles__6
        DHabiles(7) = objRs!tpvhabiles__7
    
        ExcluyeFeriados = CBool(objRs!tpvferiado)
    Else
        Flog.writeline Espacios(Tabulador * 2) & "No se encontro el tipo de Vacacion " & TipoVac
        Exit Sub
    End If
    
    
    Set objFeriado.Conexion = objConn
    Set objFeriado.ConexionTraza = objConn
    
    I = 0
    j = 0
    CHabiles = 0
    cNoHabiles = 0
    cFeriados = 0
    
    Fecha = FechaInicial
    
    Do While I <= cant
    
        EsFeriado = objFeriado.Feriado(Fecha, Ternro, False)
        
        If (EsFeriado) And Not ExcluyeFeriados Then
            cFeriados = cFeriados + 1
        Else
            If DHabiles(Weekday(Fecha)) Or (EsFeriado And ExcluyeFeriados) Then
                I = I + 1
                If DHabiles(Weekday(Fecha)) Then
                    CHabiles = CHabiles + 1
                End If
            Else
                cNoHabiles = cNoHabiles + 1
            End If
'            If DHabiles(Weekday(Fecha)) Or ((esFeriado) And ExcluyeFeriados) Then
'                i = i + 1
'            Else
'                cHabiles = cHabiles + 1
'            End If
        End If
        If I < cant Then
            Fecha = DateAdd("d", 1, Fecha)
        Else
            I = I + 1
        End If
    Loop
    
    Set objFeriado = Nothing

End Sub


Private Sub DiasPedidos_old(ByVal NroVac As Long, ByVal TipoVac As Long, ByVal FechaInicial As Date, ByVal FechaFinal As Date, ByRef Fecha As Date, ByVal Ternro As Long, ByRef cant As Long, ByRef CHabiles As Long, ByRef cNoHabiles As Long, ByRef cFeriados As Long)
'calcula la cantidad de dias y la fecha hasta correspondiente al periodo
'de acuerdo al tipo de vacacion

Dim I As Long
Dim j As Long
Dim objFeriado As New Feriado
Dim DHabiles(1 To 7) As Boolean
Dim EsFeriado As Boolean
Dim objRs As New ADODB.Recordset
Dim ExcluyeFeriados As Boolean

    StrSql = "SELECT * FROM tipovacac WHERE tipvacnro = " & TipoVac
    OpenRecordset StrSql, objRs
    If Not objRs.EOF Then
        DHabiles(1) = objRs!tpvhabiles__1
        DHabiles(2) = objRs!tpvhabiles__2
        DHabiles(3) = objRs!tpvhabiles__3
        DHabiles(4) = objRs!tpvhabiles__4
        DHabiles(5) = objRs!tpvhabiles__5
        DHabiles(6) = objRs!tpvhabiles__6
        DHabiles(7) = objRs!tpvhabiles__7
    
        ExcluyeFeriados = CBool(objRs!tpvferiado)
    Else
        Flog.writeline "No se encontro el tipo de Vacacion " & TipoVac
        Exit Sub
    End If
    
    
    Set objFeriado.Conexion = objConn
    Set objFeriado.ConexionTraza = objConn
    
    I = 0
    j = 0
    CHabiles = 0
    cNoHabiles = 0
    cFeriados = 0
    
    Fecha = FechaInicial
    
    Do While Fecha <= FechaFinal
        EsFeriado = objFeriado.Feriado(Fecha, Ternro, False)
        
        If (EsFeriado) And Not ExcluyeFeriados Then
            cFeriados = cFeriados + 1
        Else
            If DHabiles(Weekday(Fecha)) Or (EsFeriado And ExcluyeFeriados) Then
                I = I + 1
                If DHabiles(Weekday(Fecha)) Then
                    CHabiles = CHabiles + 1
                End If
            Else
                cNoHabiles = cNoHabiles + 1
            End If
        End If
        Fecha = DateAdd("d", 1, Fecha)
    Loop
    Fecha = DateAdd("d", -1, Fecha)
    
    cant = CHabiles '+ cNoHabiles + cFeriados
    Set objFeriado = Nothing
End Sub

Public Function ConvertiTipoVac(ByVal TipoVac As Long, ByVal FechaInicial As Date, ByVal FechaFinal As Date, ByVal Ternro As Long)

Dim I As Long
Dim j As Long
Dim objFeriado As New Feriado
Dim DHabiles(1 To 7) As Boolean
Dim EsFeriado As Boolean
Dim objRs As New ADODB.Recordset
Dim ExcluyeFeriados As Boolean
Dim CHabiles As Long
Dim cNoHabiles As Long
Dim cFeriados As Long
Dim Fecha As Date

    StrSql = "SELECT * FROM tipovacac WHERE tipvacnro = " & TipoVac
    OpenRecordset StrSql, objRs
    If Not objRs.EOF Then
        DHabiles(1) = objRs!tpvhabiles__1
        DHabiles(2) = objRs!tpvhabiles__2
        DHabiles(3) = objRs!tpvhabiles__3
        DHabiles(4) = objRs!tpvhabiles__4
        DHabiles(5) = objRs!tpvhabiles__5
        DHabiles(6) = objRs!tpvhabiles__6
        DHabiles(7) = objRs!tpvhabiles__7
    
        ExcluyeFeriados = CBool(objRs!tpvferiado)
    Else
        Flog.writeline "No se encontro el tipo de Vacacion " & TipoVac
        Exit Function
    End If
    
    
    Set objFeriado.Conexion = objConn
    Set objFeriado.ConexionTraza = objConn
    
    I = 0
    j = 0
    CHabiles = 0
    cNoHabiles = 0
    cFeriados = 0
    
    Fecha = FechaInicial
    
    Do While Fecha <= FechaFinal
        EsFeriado = objFeriado.Feriado(Fecha, Ternro, False)
        
        If (EsFeriado) And Not ExcluyeFeriados Then
            cFeriados = cFeriados + 1
        Else
            If DHabiles(Weekday(Fecha)) Or (EsFeriado And ExcluyeFeriados) Then
                I = I + 1
                If DHabiles(Weekday(Fecha)) Then
                    CHabiles = CHabiles + 1
                End If
            Else
                cNoHabiles = cNoHabiles + 1
            End If
        End If
        Fecha = DateAdd("d", 1, Fecha)
    Loop
    Fecha = DateAdd("d", -1, Fecha)
    
    ConvertiTipoVac = CHabiles '+ cNoHabiles + cFeriados
    Flog.writeline "fecha desde " & FechaInicial & " hasta " & FechaFinal & "  cantidad dias=" & CHabiles
    
    Set objFeriado = Nothing
End Function

Private Sub Calcular_Hasta(ByVal Ternro As Long, ByVal TipoVac As Long, ByVal Fecha_Desde As Date, ByVal Dias As Long, ByRef Fecha_Hasta As Date)
' ---------------------------------------------------------------------------------------------
' Descripcion: Calcula la Fecha hasta teniendo en cuenta la fecha desde, la cantidad de dias
'               y el tipo de vacaciones (Dias Corridos o Dias Habiles)
' Autor      : FGZ
' Fecha      : 21/12/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------



End Sub


Public Sub LineaModelo_231(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Interface de Banco Nacion. Levanta y crea las cuentas para los empleados.
' Autor      : FGZ
' Fecha      : 14/10/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Registro As TR_Datos_Bancarios
Dim CBU As TR_CBU
Dim CBU_Bloque1 As TR_CBU_Bloque_1
Dim CBU_Bloque2 As TR_CBU_Bloque_2

Dim pos1 As Long
Dim pos2 As Long
    
Dim Tercero As Long
Dim FechaDesde As String
Dim FechaHasta As String
Dim Tipo_Cuenta As Long
Dim Aux_Tipo_Cuenta As Long
Dim Nro_Reporte As Long

Dim rs_Empleado As New ADODB.Recordset
Dim rs_CtaBancaria As New ADODB.Recordset
Dim rs_FormaPago As New ADODB.Recordset
Dim rs_Confrep As New ADODB.Recordset

On Error GoTo Manejador_De_Error

' El formato es: segun formato del tipo de datos TR_Datos_Bancarios
        
    'Proceso        long 2
    pos1 = 1
    pos2 = 2 + 1
    Registro.Proceso = Mid$(strLinea, pos1, pos2 - pos1)
    
    'Servicio       long 4
    pos1 = 3
    pos2 = 6 + 1
    Registro.Servicio = Mid$(strLinea, pos1, pos2 - pos1)
    
   'Sucursal       long 4
    pos1 = 7
    pos2 = 10 + 1
    Registro.Sucursal = Mid$(strLinea, pos1, pos2 - pos1)
    
    'Legajo         long 20
    pos1 = 11
    pos2 = 30 + 1
    Registro.Legajo = Mid$(strLinea, pos1, pos2 - pos1)
    
    'Moneda         long 1
    pos1 = 31
    pos2 = 31 + 1
    Registro.Moneda = Mid$(strLinea, pos1, pos2 - pos1)
    
    'Titularidad    long 2
    pos1 = 32
    pos2 = 33 + 1
    Registro.Titularidad = Mid$(strLinea, pos1, pos2 - pos1)
    
    'CBU long 22 -
        'Bloque 1
        '       Codigo entidad:  "011"  - long 3
                pos1 = 34
                pos2 = 36 + 1
                CBU_Bloque1.Codigo_Entidad = Mid$(strLinea, pos1, pos2 - pos1)
        '       Codigo Sucursal: "BCRA" - long 4
                pos1 = 37
                pos2 = 40 + 1
                CBU_Bloque1.Codigo_Sucursal = Mid$(strLinea, pos1, pos2 - pos1)
        '       Digito Verif. Bloque 1  - long 1
                pos1 = 41
                pos2 = 41 + 1
                CBU_Bloque1.Digito_Verificador = Mid$(strLinea, pos1, pos2 - pos1)
    
        'Bloque 2
        '       Tipo de Cuenta:         - long 1  (2 = CC, 3 = CA y 4 = CCE)
                pos1 = 42
                pos2 = 42 + 1
                CBU_Bloque2.Cuenta_Tipo = Mid$(strLinea, pos1, pos2 - pos1)
        '       Moneda de la cuenta:    - long 1  (0 = Pesos, 1 = Dolares y 3 = Lecop)
                pos1 = 43
                pos2 = 43 + 1
                CBU_Bloque2.Moneda = Mid$(strLinea, pos1, pos2 - pos1)
        '       Nro de la cuenta        - long 11
                pos1 = 45
                pos2 = 54 + 1
                CBU_Bloque2.Cuenta_Nro = Mid$(strLinea, pos1, pos2 - pos1)
        '       Digito Verif. Bloque 2  - long 1
                pos1 = 55
                pos2 = 55 + 1
                CBU_Bloque2.Digito_Verificador = Mid$(strLinea, pos1, pos2 - pos1)
    CBU.Bloque1 = CBU_Bloque1.Codigo_Entidad & CBU_Bloque1.Codigo_Sucursal & CBU_Bloque1.Digito_Verificador
    CBU.Bloque2 = CBU_Bloque2.Cuenta_Tipo & CBU_Bloque2.Moneda & CBU_Bloque2.Cuenta_Nro & CBU_Bloque2.Digito_Verificador
    Registro.CBU = CBU.Bloque1 & CBU.Bloque2
    
    'Cuenta_Electronica     long 19 - (nro de tarjeta de debito)
    pos1 = 56
    pos2 = 74 + 1
    Registro.Cuenta_Electronica = Mid$(strLinea, pos1, pos2 - pos1)
    'Tarjeta_1er_Titular    long 19 -
    pos1 = 75
    pos2 = 93 + 1
    Registro.Tarjeta_1er_Titular = Mid$(strLinea, pos1, pos2 - pos1)
    'Tarjeta_2do_Titular    long 19 -
    pos1 = 94
    pos2 = 112 + 1
    Registro.Tarjeta_2do_Titular = Mid$(strLinea, pos1, pos2 - pos1)
    'Doc_Tipo As String     long 2  -
    pos1 = 113
    pos2 = 114 + 1
    Registro.Doc_Tipo = Mid$(strLinea, pos1, pos2 - pos1)
    'Doc_Nro                long 11 -
    pos1 = 115
    pos2 = 125 + 1
    Registro.Doc_Nro = Mid$(strLinea, pos1, pos2 - pos1)
    'Filler                 long 5  -
    pos1 = 126
    pos2 = 130 + 1
    Registro.Filler = Mid$(strLinea, pos1, pos2 - pos1)
    
' ====================================================================
'   Validar los parametros Levantados
If EsNulo(Registro.Legajo) Then
    Flog.writeline Espacios(Tabulador * 2) & "No se encontro el legajo " & Registro.Legajo
    InsertaError 1, 8
    HuboError = True
    Exit Sub
End If
'Que exista el legajo
StrSql = "SELECT * FROM empleado where empleg = " & Registro.Legajo
OpenRecordset StrSql, rs_Empleado
If rs_Empleado.EOF Then
    Flog.writeline Espacios(Tabulador * 2) & "No se encontro el legajo " & Registro.Legajo
    InsertaError 1, 8
    HuboError = True
    Exit Sub
Else
    Tercero = rs_Empleado!Ternro
End If

'Configuracion del Reporte
If Primera_Vez Then
    Nro_Reporte = 112
    StrSql = "SELECT * FROM confrep WHERE confnrocol = 3 AND repnro = " & Nro_Reporte
    OpenRecordset StrSql, rs_Confrep
    If rs_Confrep.EOF Then
        Flog.writeline Espacios(Tabulador * 2) & "CONFREP " & Nro_Reporte & " No se encontró la configuración del Banco"
        InsertaError 0, 60
        HuboError = True
        Exit Sub
    Else
        Banco = rs_Confrep!Confval
        Primera_Vez = False
    End If
End If

'Busco el tipo de cuenta
Select Case CBU_Bloque2.Cuenta_Tipo
Case 2:
    Aux_Tipo_Cuenta = 11
Case 3:
    Aux_Tipo_Cuenta = 10
Case 4:
    Aux_Tipo_Cuenta = 11
Case Else
    Aux_Tipo_Cuenta = 11
End Select

StrSql = "SELECT * FROM formapago WHERE fpagbanc = -1 "
StrSql = StrSql & " AND fpagnro = " & Aux_Tipo_Cuenta
If rs_FormaPago.State = adStateOpen Then rs_FormaPago.Close
OpenRecordset StrSql, rs_FormaPago
If rs_FormaPago.EOF Then
    Flog.writeline Espacios(Tabulador * 2) & "No se encontro el tipo de cuenta " & CBU_Bloque2.Cuenta_Tipo
    InsertaError 7, 8
    HuboError = True
    Exit Sub
Else
    Tipo_Cuenta = rs_FormaPago!fpagnro
End If


'=============================================================
'Busco si existe una cuenta para ese legajo para el mismo banco del mismo tipo de cuenta y activa
StrSql = "SELECT * FROM ctabancaria"
StrSql = StrSql & " WHERE ctabancaria.ternro =" & Tercero
StrSql = StrSql & " AND ctabestado = -1 "
StrSql = StrSql & " AND banco =" & Banco
StrSql = StrSql & " AND fpagnro =" & Tipo_Cuenta
If rs_CtaBancaria.State = adStateOpen Then rs_CtaBancaria.Close
OpenRecordset StrSql, rs_CtaBancaria
If Not rs_CtaBancaria.EOF Then
    Flog.writeline Espacios(Tabulador * 2) & "No se puede crear la cuenta. Ya existe un cuenta del mismo tipo para el mismo banco activa"
    InsertaError 1, 97
    HuboError = True
Else
    StrSql = "INSERT INTO ctabancaria (" & _
             " ternro,fpagnro,banco,ctabestado, ctabnro, ctabcbu, ctabporc" & _
             ") VALUES (" & Tercero & _
             "," & Tipo_Cuenta & _
             "," & Banco & _
             ",-1" & _
             ",'" & CBU_Bloque2.Cuenta_Nro & "'" & _
             ",'" & Registro.CBU & "'" & _
             ",100" & _
             " )"
    objConn.Execute StrSql, , adExecuteNoRecords
    Flog.writeline Espacios(Tabulador * 2) & "Cuenta Creada"
End If
    
Fin:
'Cierro todo y libero
If rs_Empleado.State = adStateOpen Then rs_Empleado.Close
If rs_CtaBancaria.State = adStateOpen Then rs_CtaBancaria.Close
If rs_FormaPago.State = adStateOpen Then rs_FormaPago.Close
If rs_Confrep.State = adStateOpen Then rs_Confrep.Close

Set rs_CtaBancaria = Nothing
Set rs_Empleado = Nothing
Set rs_FormaPago = Nothing
Set rs_Confrep = Nothing
Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    If InStr(1, Err.Description, "ODBC") > 0 Then
        'Fue error de Consulta de SQL
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
        Flog.writeline
    End If
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    GoTo Fin


End Sub



Public Sub LineaModelo_233(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Inserta Licencia segun formato
' Autor      : FGZ
'              El formato es: Legajo,
'                             tipo de licencia (Char de 25 buscar con descripcion de tipo de dia),
'                             fecha desde,
'                             fecha hasta,
'                             dia completo (si/no),
'                             hora desde,
'                             hora hasta,
'                             cant de horas,
'                             estado (Char de 100 buscar con descripcion de tipo de estado).
'                             Período de Vacaciones
' Fecha      : 22/10/2004
' Ultima Mod.: 02/09/2005 - Fapitalle N.
' Descripcion: Agregado el ultimo campo: Estado
'              04-11-2010 - Amadio L. - cambiar la Situación de Revista asociada a la licencia
'              11-11-2010 - Amadio L - si la linea a procesar da error escribir en el Log de errores
'              06-12-2010 - Leticia A. - elimina caracteres invalidos de diferentes campos.
'              26/05/2011 - Gonzalez Nicolás - Se agregó columna Período de Vacaciones(Opcional) - Inserta complemento
'              15/06/2011 - Gonzalez Nicolás - Se cambio validación de 'SUMO DIAS TOMADOS EN PERIODO
'                                              vacnro = PeriodoVac en lugar de la fecha del período
'              11/08/2011 - Zamarbide Juan - Se agregó al comienzo de la validación del período de vacaciones, la verificación del valor de la variable PeriodoVac
'                                            para que la misma permita o no realizar la misma.
'              24-10-2011 - Margiotta, Emanuel - Se agrego la vista de empleado.
'              02/11/2012 - sebastian stremel - se agrego el campo observaciones, si tiene mas de 1500 caracteres lo corta.
'              20/01/2014 - Gonzalez Nicolás - Si la licencia es de tipo 3 no controlo que tenga creadas para esas fechas las del mismo tipo
'              29/07/2014 - FGZ - Se le agrega un nuevo parametro para la fecha de certificado. (si es nulo o n/a ==> se considera sin certificado sino se marca con certificado y en la fecha informada.
'              13/08/2014 - FGZ - Se le cambió la forma en que lee los campos para facilitar los controles por si dejan campos sin completar.
' ---------------------------------------------------------------------------------------------
Dim pos1 As Long
Dim pos2 As Long
    
Dim objHoras As New FechasHoras

Dim Tercero As Long
Dim NroLegajo As Long
Dim Licencia_Descripcion As String
Dim TDNro As Long
Dim DiaCompleto As Boolean
Dim FechaDesde As Date
Dim FechaHasta As Date
Dim HoraDesde As String
Dim HoraHasta As String
Dim CantidadHoras As Single
Dim Estado As String
Dim PeriodoVac As Long
Dim LicEstNro As Long
Dim emp_licnro As Long
Dim LicTipo As Long

Dim vacfecdesde As Date
Dim vacfechasta As Date
Dim vdiascorcant As Long
Dim dias_vac As Long
Dim dias_tomados As Long
Dim inserto_complemento As Boolean
Dim Aux As String
Dim Estrnro_SitRev

Dim textoError As String
Dim Observaciones As String

Dim rs_Empleado As New ADODB.Recordset
Dim rs_Lic As New ADODB.Recordset
Dim rs_TipDia As New ADODB.Recordset
Dim rs_estado As New ADODB.Recordset
Dim rs As New ADODB.Recordset
Dim rs_Est As New ADODB.Recordset
Dim rs_Vacacion As New ADODB.Recordset
Dim Fecha_Certif As Date
Dim ConCertificado As Boolean

Dim campos
Dim I As Long

ConCertificado = False
inserto_complemento = False
PeriodoVac = 0

'Formato
' ------------------------------------------------------------------------------------------
'Campo              Columna Tipo de Dato    Formato         Ejemplo             Obligatorio
' ------------------------------------------------------------------------------------------
'Legajo                 1   Entero              9(6)        1
'Tipo de Licencia       2   Carácter            X(25)       Licencia por Examen
'Fecha Desde            3   Fecha           DD/MM/AAAA      01/01/2004
'Fecha Hasta            4   Fecha           DD/MM/AAAA      14/01/2004
'Día Completo           5   Logico              Si/No       Si
'Hora Desde             6   Carácter            X(5)        00:00
'Hora Hasta             7   Carácter            X(5)        23:59
'Cantidad de Horas      8   Decimal          9(15).999      8.5
'Estado                 9   Carácter           X(100)       Pendiente
'Período de vacaciones  10  Entero              9(6)        12                    (OPCIONAL)
'observaciones          11  caracter            1500        licencia de prueba    (OPCIONAL) el campo de arriba pasa a oblig.
'Fecha Certificado      12  Fecha            DD/MM/AAAA      14/01/2004           (OPCIONAL) el campo de arriba pasa a oblig.
' ------------------------------------------------------------------------------------------
On Error GoTo Manejador_De_Error

    'FGZ - 13/08/2014 -------------------------
    campos = Split(strLinea, separador)
    
    'Nro de Legajo
    I = 0
    If IsNumeric(campos(I)) Then
        NroLegajo = campos(I)
    Else
        FlogE.writeline
        FlogE.writeline Espacios(Tabulador * 1) & "PROCESANDO LEGAJO "
        FlogE.writeline Espacios(Tabulador * 1) & "-------------------------------------"
        FlogE.writeline Espacios(Tabulador * 2) & "Linea " & NroLinea & ": El número de legajo no es numerico. " & Licencia_Descripcion
        InsertaError 1, 8
        HuboError = True
        Exit Sub
    End If
    
    'Tipo de Licencia
    I = 1
    Licencia_Descripcion = UCase(campos(I))
    Licencia_Descripcion = EliminarCHInvalidosII(Licencia_Descripcion, 1, "")

    'Fecha desde
    I = 2
    FechaDesde = campos(I)
            
    'Fecha Hasta
    I = 3
    FechaHasta = campos(I)
                
    'Dia Completo
    I = 4
    Aux = campos(I)
    If UCase(Aux) = "SI" Or UCase(Aux) = "S" Then
        DiaCompleto = True
        LicTipo = 1
    Else
        DiaCompleto = False
    End If
    
    'Hora desde
    I = 5
    HoraDesde = campos(I)
    HoraDesde = Replace(HoraDesde, ":", "")
    
    'Hora hasta
    I = 6
    HoraHasta = campos(I)
    HoraHasta = Replace(HoraHasta, ":", "")
    
    'Cantidad de Horas
    I = 7
    If campos(I) = "" Or campos(I) = "NA" Then
        CantidadHoras = 0
    Else
        CantidadHoras = CSng(campos(I))
    End If

    'Estado
    I = 8
    Estado = UCase(campos(I))
    Estado = EliminarCHInvalidosII(Estado, 1, "")
    
    'Período de vacaciones
    I = 9
    If UCase(campos(I)) = "NA" Or UCase(campos(I)) = "" Then
        PeriodoVac = 0
    Else
        If EsNulo(campos(I)) Then
            PeriodoVac = 0
        Else
            If IsNumeric(campos(I)) Then
                PeriodoVac = UCase(campos(I))
                PeriodoVac = EliminarCHInvalidosII(PeriodoVac, 1, "")
            Else
                PeriodoVac = 0
                FlogE.writeline Espacios(Tabulador * 2) & "Linea " & NroLinea & ": formato incorrecto para Periodo de vacaciones. " & Licencia_Descripcion
            End If
        End If
    End If
        
        
    'Observaciones
    I = 10
    If UBound(campos) >= I Then
        Observaciones = UCase(campos(I))
        Observaciones = EliminarCHInvalidosII(Observaciones, 1, "")
        If (Len(Observaciones) > 1500) Then
            Observaciones = Left(Observaciones, 1500)
        End If
    End If
    
    'Fecha Certificado
    I = 11
    If UBound(campos) >= I Then
        Aux = Trim(UCase(campos(I)))
        If IsDate(Aux) Then
            Fecha_Certif = CDate(Aux)
            ConCertificado = True
        Else
            If (Aux = "NA") Or (Aux = "N/A") Or (Aux = "") Then
                ConCertificado = False
            Else
                Flog.writeline Espacios(Tabulador * 2) & "formato de Fecha incorrecto. Se esperaba Fecha de Certtificado. Se asume SIN CERTIFICADO."
                ConCertificado = False
            End If
        End If
    End If
    'FGZ - 13/08/2014 ---------------------------
    '--------------------------------------------------------------------------
    
    
'    'Nro de Legajo
'    pos1 = 1
'    pos2 = InStr(pos1, strLinea, separador)
'    If IsNumeric(Mid$(strLinea, pos1, pos2 - pos1)) Then
'        NroLegajo = Mid$(strLinea, pos1, pos2 - pos1)
'    Else
'
'        FlogE.writeline
'        FlogE.writeline Espacios(Tabulador * 1) & "PROCESANDO LEGAJO "
'        FlogE.writeline Espacios(Tabulador * 1) & "-------------------------------------"
'        FlogE.writeline Espacios(Tabulador * 2) & "Linea " & NroLinea & ": El número de legajo no es numerico. " & Licencia_Descripcion
'
'        InsertaError 1, 8
'        HuboError = True
'        Exit Sub
'    End If
'
'    'Tipo de Licencia
'    pos1 = pos2 + 1
'    pos2 = InStr(pos1 + 1, strLinea, separador)
'    Licencia_Descripcion = UCase(Mid(strLinea, pos1, pos2 - pos1))
'    Licencia_Descripcion = EliminarCHInvalidosII(Licencia_Descripcion, 1, "")
'
'    'Fecha desde
'    pos1 = pos2 + 1
'    pos2 = InStr(pos1 + 1, strLinea, separador)
'    FechaDesde = Mid(strLinea, pos1, pos2 - pos1)
'
'    'Fecha Hasta
'    pos1 = pos2 + 1
'    pos2 = InStr(pos1 + 1, strLinea, separador)
'    FechaHasta = Mid(strLinea, pos1, pos2 - pos1)
'
'    'Dia Completo
'    pos1 = pos2 + 1
'    pos2 = InStr(pos1 + 1, strLinea, separador)
'    If pos2 > 0 Then
'        Aux = Mid(strLinea, pos1, pos2 - pos1)
'        If UCase(Aux) = "SI" Then
'            DiaCompleto = True
'            LicTipo = 1
'        Else
'            DiaCompleto = False
'        End If
'    Else
'        pos2 = Len(strLinea)
'        Aux = CBool(Mid(strLinea, pos1, pos2 - pos1))
'        If UCase(Aux) = "S" Then
'            DiaCompleto = True
'            LicTipo = 1
'        Else
'            DiaCompleto = False
'        End If
'    End If
'
'    'Hora desde
'    pos1 = pos2 + 1
'    pos2 = InStr(pos1, strLinea, separador)
'    HoraDesde = Mid(strLinea, pos1, pos2 - pos1)
'    HoraDesde = Replace(HoraDesde, ":", "")
'
'    'Hora hasta
'    pos1 = pos2 + 1
'    pos2 = InStr(pos1, strLinea, separador)
'    HoraHasta = Mid(strLinea, pos1, pos2 - pos1)
'    HoraHasta = Replace(HoraHasta, ":", "")
'    'Cantidad de Horas
'    pos1 = pos2 + 1
'    pos2 = InStr(pos1, strLinea, separador)
'    If Mid(strLinea, pos1, pos2 - pos1) = separador Or Mid(strLinea, pos1, pos2 - pos1) = "" Or Mid(strLinea, pos1, pos2 - pos1) = "NA" Then
'        CantidadHoras = 0
'    Else
'
'        CantidadHoras = CSng(Mid(strLinea, pos1, pos2 - pos1))
'    End If
'
'    'Estado
'    pos1 = pos2 + 1
'    'pos2 = Len(strLinea) + 1
'    pos2 = InStr(pos1 + 1, strLinea, separador)
'
'    If pos2 = 0 Or Len(strLinea) = pos2 Then
'        pos2 = Len(strLinea) + 1
'        Estado = UCase(Mid(strLinea, pos1, pos2 - pos1))
'        Estado = EliminarCHInvalidosII(Replace(Estado, separador, ""), 1, "")
'    Else
'       Estado = UCase(Mid(strLinea, pos1, pos2 - pos1))
'       Estado = EliminarCHInvalidosII(Estado, 1, "")
'    End If
'
'   'FGZ - 29/07/2014 ------------------------------------------------------------------------
'    'pos1 = pos2 + 1
'    'pos2 = InStr(pos1 + 1, strLinea, separador)
'    ''Período de vacaciones
'    'If pos2 = 0 Then 'Or Len(strLinea) = pos2 Then
'    '    pos2 = Len(strLinea) + 1
'    'Else
'    '    If (UCase(Mid(strLinea, pos1, pos2 - pos1)) = "NA" Or (UCase(Mid(strLinea, pos1, pos2 - pos1)) = "")) Then
'    '        PeriodoVac = 0
'    '    Else
'    '        PeriodoVac = UCase(Mid(strLinea, pos1, pos2 - pos1))
'    '        PeriodoVac = EliminarCHInvalidosII(PeriodoVac, 1, "")
'    '    End If
'    '
'    '    'agrego observaciones sebastian stremel
'    '    pos1 = pos2 + 1
'    '    pos2 = Len(strLinea) + 1
'    '    If (pos1 >= pos2) Then
'    '        ' no hay observaciones
'    '        observaciones = ""
'    '    Else
'    '        observaciones = UCase(Mid(strLinea, pos1, pos2 - pos1))
'    '        observaciones = EliminarCHInvalidosII(observaciones, 1, "")
'    '        If (Len(observaciones) > 1500) Then
'    '            observaciones = Left(observaciones, 1500)
'    '        End If
'    '    End If
'    'End If
'
'
'    pos1 = pos2 + 1
'    'pos2 = InStr(pos1 + 1, strLinea, separador)
'    pos2 = InStr(pos1, strLinea, separador)
'    'Período de vacaciones
'    If pos2 = 0 Then 'Or Len(strLinea) = pos2 Then
'        pos2 = Len(strLinea) + 1
'    Else
'        If (UCase(Mid(strLinea, pos1, pos2 - pos1)) = "NA" Or (UCase(Mid(strLinea, pos1, pos2 - pos1)) = "")) Then
'            PeriodoVac = 0
'        Else
'            If EsNulo(Mid(strLinea, pos1, pos2 - pos1)) Then
'                PeriodoVac = 0
'            Else
'                PeriodoVac = UCase(Mid(strLinea, pos1, pos2 - pos1))
'                PeriodoVac = EliminarCHInvalidosII(PeriodoVac, 1, "")
'            End If
'        End If
'
'        'agrego observaciones sebastian stremel
'        pos1 = pos2 + 1
'        pos2 = InStr(pos1 + 1, strLinea, separador)
'        If pos2 = 0 Then 'Or Len(strLinea) = pos2 Then
'            pos2 = Len(strLinea) + 1
'            If (pos1 >= pos2) Then ' no hay observaciones
'                observaciones = ""
'            Else
'                observaciones = UCase(Mid(strLinea, pos1, pos2 - pos1))
'                observaciones = EliminarCHInvalidosII(observaciones, 1, "")
'                If (Len(observaciones) > 1500) Then
'                    observaciones = Left(observaciones, 1500)
'                End If
'            End If
'        Else
'            observaciones = UCase(Mid(strLinea, pos1, pos2 - pos1))
'            observaciones = EliminarCHInvalidosII(observaciones, 1, "")
'            If (Len(observaciones) > 1500) Then
'                observaciones = Left(observaciones, 1500)
'            End If
'
'            'Fecha Certificado
'            pos1 = pos2 + 1
'            pos2 = InStr(pos1 + 1, strLinea, separador)
'            If pos2 = 0 Then
'                pos2 = Len(strLinea) + 1
'            End If
'            Aux = Trim(UCase(Mid(strLinea, pos1, pos2 - pos1)))
'            If IsDate(Aux) Then
'                Fecha_Certif = CDate(Aux)
'                ConCertificado = True
'            Else
'                If (Aux = "NA") Or (Aux = "N/A") Or (Aux = "") Then
'                    ConCertificado = False
'                Else
'                    Flog.writeline Espacios(Tabulador * 2) & "formato de Fecha incorrecto. Se esperaba Fecha de Certtificado. Se asume SIN CERTIFICADO."
'                    ConCertificado = False
'                End If
'            End If
'        End If
'    End If
'    'FGZ - 29/07/2014 ------------------------------------------------------------------------

    
    
' ====================================================================
'   Validar los parametros Levantados

Flog.writeline
Flog.writeline
Flog.writeline Espacios(Tabulador * 1) & "PROCESANDO LEGAJO: " & NroLegajo
Flog.writeline Espacios(Tabulador * 1) & "-------------------------------------------------------"

'EAM- Verifica que exista el legajo para la vista de empleado
'StrSql = "SELECT * FROM v_empleadoproc where empleg = " & NroLegajo
StrSql = "SELECT * FROM empleado where empleg = " & NroLegajo
OpenRecordset StrSql, rs_Empleado

If rs_Empleado.EOF Then
    Flog.writeline Espacios(Tabulador * 2) & "No se encontro el legajo " & NroLegajo
    
    FlogE.writeline
    FlogE.writeline Espacios(Tabulador * 1) & "PROCESANDO LEGAJO: " & NroLegajo
    FlogE.writeline Espacios(Tabulador * 1) & "-------------------------------------"
    FlogE.writeline Espacios(Tabulador * 2) & "Linea " & NroLinea & ": No se encontro el legajo " & NroLegajo
    
    InsertaError 1, 8
    HuboError = True
    Exit Sub
Else
    Tercero = rs_Empleado!Ternro
End If

'Que exista el Tipo de Licencia
StrSql = "SELECT * FROM tipdia WHERE upper(tddesc) = '" & Licencia_Descripcion & "'"
OpenRecordset StrSql, rs_TipDia
If rs_TipDia.EOF Then
    Flog.writeline Espacios(Tabulador * 2) & "No se encontro el Tipo de Licencia " & Licencia_Descripcion
    
    FlogE.writeline
    FlogE.writeline Espacios(Tabulador * 1) & "PROCESANDO LEGAJO: " & NroLegajo
    FlogE.writeline Espacios(Tabulador * 1) & "-------------------------------------"
    FlogE.writeline Espacios(Tabulador * 2) & "Linea " & NroLinea & ": No se encontro el Tipo de Licencia " & Licencia_Descripcion
    
    InsertaError 2, 84
    HuboError = True
    Exit Sub
Else
    TDNro = rs_TipDia!TDNro
End If

If Not DiaCompleto Then
    ' Es tipo 2 si las horas son validas
    ' Es tipo 3 si la cant de horas es valida
    ' Es tipo 2 si todos los param son validos, tomo las horas
    
    LicTipo = 0
    'Valido la cantidad de Horas
    If CantidadHoras <> 0 Then 'el parametro es valido, puede ser tipo 3
        LicTipo = 3
    End If
    
    'Validar Horas
    If objHoras.ValidarHora(HoraDesde) And objHoras.ValidarHora(HoraHasta) Then
        LicTipo = 2
    Else 'puede que sea tipo 3
        If LicTipo = 0 Then 'no, no es tipo 3
            If Not objHoras.ValidarHora(HoraDesde) Then
                Flog.writeline Espacios(Tabulador * 2) & "formato de Hora Desde incorrecto " & HoraDesde
                        
                FlogE.writeline
                FlogE.writeline Espacios(Tabulador * 1) & "PROCESANDO LEGAJO: " & NroLegajo
                FlogE.writeline Espacios(Tabulador * 1) & "-------------------------------------"
                FlogE.writeline Espacios(Tabulador * 2) & "Linea " & NroLinea & ": formato de Hora Desde incorrecto " & HoraDesde
                
                InsertaError 6, 98
                HuboError = True
                Exit Sub
            End If
            If Not objHoras.ValidarHora(HoraHasta) Then
                Flog.writeline Espacios(Tabulador * 2) & "formato de Hora Hasta incorrecto " & HoraHasta
                
                FlogE.writeline
                FlogE.writeline Espacios(Tabulador * 1) & "PROCESANDO LEGAJO: " & NroLegajo
                FlogE.writeline Espacios(Tabulador * 1) & "-------------------------------------"
                FlogE.writeline Espacios(Tabulador * 2) & "Linea " & NroLinea & ": formato de Hora Hasta incorrecto " & HoraHasta
                
                InsertaError 7, 98
                HuboError = True
                Exit Sub
            End If
        End If
    End If
    If LicTipo = 3 And CantidadHoras > rs_TipDia!tdcanthoras Then ' si era tipo 3 que no exceda el limite
        Flog.writeline Espacios(Tabulador * 2) & "La cantidad de Horas " & CantidadHoras & " excede el maximo " & rs_TipDia!tdcanthoras
        CantidadHoras = rs_TipDia!tdcanthoras
    End If
End If

'Que exista el Tipo de Estado
StrSql = "SELECT * FROM lic_estado WHERE upper(licestdesabr) = '" & Estado & "'"
OpenRecordset StrSql, rs_estado
If rs_estado.EOF Then
    Flog.writeline Espacios(Tabulador * 2) & "No se encontro el Tipo de Estado " & Estado
    
    FlogE.writeline
    FlogE.writeline Espacios(Tabulador * 1) & "PROCESANDO LEGAJO: " & NroLegajo
    FlogE.writeline Espacios(Tabulador * 1) & "-------------------------------------"
    FlogE.writeline Espacios(Tabulador * 2) & "Linea " & NroLinea & ": No se encontro el Tipo de Estado " & Estado
    
    InsertaError 9, 97
    HuboError = True
    Exit Sub
Else
    LicEstNro = rs_estado!LicEstNro
End If


'¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬
'SI ES DE TIPO VACACION
'¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬
'Valido que existe período de vacaciones
If TDNro = 2 And CInt(PeriodoVac) > 0 Then 'valida la variable, si es mayor que 0, tiene periodo de vacaiones
    StrSql = "SELECT vacfecdesde,vacfechasta,vacestado FROM vacacion"
    StrSql = StrSql & " WHERE vacnro = " & PeriodoVac & " And vacestado = -1"
    OpenRecordset StrSql, rs_Vacacion
    If rs_Vacacion.EOF Then
        FlogE.writeline Espacios(Tabulador * 2) & "No existe el período de tipo " & PeriodoVac & " o esta cerrado"
        InsertaError 1, 50
        HuboError = True
        Exit Sub
    Else
        vacfecdesde = rs_Vacacion!vacfecdesde
        vacfechasta = rs_Vacacion!vacfechasta
    End If
    rs_Vacacion.Close
    '_______________________________
    'Verifico que tenga dias de vacaciones
    StrSql = "SELECT vacdiascor.vdiascorcant,vacdiascor.tipvacnro FROM vacdiascor"
    StrSql = StrSql & " WHERE vacdiascor.vacnro = " & PeriodoVac & " AND ternro = " & Tercero
    OpenRecordset StrSql, rs_Vacacion
    If rs_Vacacion.EOF Then
        FlogE.writeline Espacios(Tabulador * 2) & "El empleado no tiene días disponibles para el período " & PeriodoVac
        InsertaError 1, 50
        HuboError = True
        Exit Sub
    Else
        vdiascorcant = rs_Vacacion!vdiascorcant
    End If
    rs_Vacacion.Close

    'Valida que las fechas esten dentro del período seleccionado
    StrSql = "SELECT vacfecdesde,vacfechasta,vacestado FROM vacacion"
    StrSql = StrSql & " WHERE vacnro = " & PeriodoVac & " And vacestado = -1"
    StrSql = StrSql & " AND vacfecdesde <= " & ConvFecha(FechaDesde) & " AND vacfechasta >= " & ConvFecha(FechaHasta)
    OpenRecordset StrSql, rs_Vacacion
    If rs_Vacacion.EOF Then
        FlogE.writeline Espacios(Tabulador * 2) & "Las fechas de la licencia no estan contenidas en el período " & PeriodoVac
        InsertaError 1, 49
        HuboError = True
        Exit Sub
    Else
        dias_vac = DateDiff("d", FechaDesde, FechaHasta) + 1
    End If
    rs_Vacacion.Close
    
    'SUMO DIAS TOMADOS EN PERIODO
    StrSql = "SELECT SUM(elcantdias) total FROM emp_lic"
    StrSql = StrSql & " INNER JOIN lic_vacacion ON lic_vacacion.emp_licnro = emp_lic.emp_licnro "
    StrSql = StrSql & " WHERE Empleado = " & Tercero & " And tdnro = " & TDNro
    StrSql = StrSql & " AND lic_vacacion.vacnro = " & PeriodoVac
    'StrSql = StrSql & " AND elfechadesde >= " & ConvFecha(vacfecdesde) & " and elfechahasta <= " & ConvFecha(vacfechasta)
    OpenRecordset StrSql, rs_Vacacion
    If Not rs_Vacacion.EOF Then
        If IsNull(rs_Vacacion!total) Then
            dias_tomados = 0
        Else
            dias_tomados = rs_Vacacion!total
        End If
    Else
        dias_tomados = 0
    End If
    rs_Vacacion.Close
    
    'Valido que tenga dias disponibles
    If (vdiascorcant - dias_tomados) >= dias_vac Then
        inserto_complemento = True
    Else
        inserto_complemento = False
        FlogE.writeline Espacios(Tabulador * 2) & "El empleado no tiene días disponibles para el período " & PeriodoVac
        InsertaError 1, 50
        HuboError = True
        Exit Sub
    End If
    
End If
'¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬


'=============================================================
'Busco si existe la Licencia
StrSql = "SELECT * FROM emp_lic " & _
         " WHERE (empleado = " & Tercero & " )" & _
         " AND elfechadesde <=" & ConvFecha(FechaHasta) & _
         " AND elfechahasta >= " & ConvFecha(FechaDesde)
If LicTipo = 3 Then
    'NG - 20/01/2013- si es parcial variable permito insertar.
    StrSql = StrSql & " and eltipo <> 3"
End If
OpenRecordset StrSql, rs_Lic

    If Not rs_Lic.EOF Then
            Flog.writeline Espacios(Tabulador * 2) & "No se puede insertar la Licencia porque se superpone con otra ya existente"
            Flog.writeline Espacios(Tabulador * 2) & "(" & rs_Lic!emp_licnro & ") desde " & rs_Lic!elfechadesde & " hasta " & rs_Lic!elfechahasta & " de tipo " & rs_Lic!TDNro
            
            FlogE.writeline
            FlogE.writeline Espacios(Tabulador * 1) & "PROCESANDO LEGAJO: " & NroLegajo
            FlogE.writeline Espacios(Tabulador * 1) & "-------------------------------------"
            FlogE.writeline Espacios(Tabulador * 2) & "Linea " & NroLinea & ": No se puede insertar la Licencia porque se superpone con otra ya existente"
            FlogE.writeline Espacios(Tabulador * 2) & "         (" & rs_Lic!emp_licnro & ") desde " & rs_Lic!elfechadesde & " hasta " & rs_Lic!elfechahasta & " de tipo " & rs_Lic!TDNro
            
            InsertaError 1, 99
            HuboError = True
            Exit Sub
    Else
            'Inserto la Licencia
            StrSql = "INSERT INTO emp_lic ("
            StrSql = StrSql & "empleado,elfechadesde,elfechahasta,tdnro,eldiacompleto,eltipo"
            If LicTipo = 2 Then
                StrSql = StrSql & ",elhoradesde,elhorahasta"
            End If
            If LicTipo = 3 Then
                'StrSql = StrSql & ",elcanthrs"
                StrSql = StrSql & ",elmaxhoras,elcanthrs"
            End If
            StrSql = StrSql & ",elcantdias,licestnro"
            StrSql = StrSql & ",elobs" 'sebastian stremel 09/10/2012
            'FGZ - 29/07/2014 ---------------------------------------------
            If ConCertificado Then
                StrSql = StrSql & ",elfechacert"
            End If
            'FGZ - 29/07/2014 ---------------------------------------------
            
            StrSql = StrSql & ") VALUES ("
            StrSql = StrSql & Tercero
            StrSql = StrSql & "," & ConvFecha(FechaDesde)
            StrSql = StrSql & "," & ConvFecha(FechaHasta)
            StrSql = StrSql & "," & TDNro
            StrSql = StrSql & "," & CLng(DiaCompleto)
            StrSql = StrSql & "," & LicTipo ' 1 = Dia Completo
            
            If LicTipo = 2 Then ' Parcial Fija
                StrSql = StrSql & ",'" & HoraDesde & "'"
                StrSql = StrSql & ",'" & HoraHasta & "'"
            End If
            If LicTipo = 3 Then ' Parcial Variable
                StrSql = StrSql & "," & CantidadHoras
                StrSql = StrSql & "," & CantidadHoras
            End If
            
            StrSql = StrSql & "," & (DateDiff("d", FechaDesde, FechaHasta) + 1)
            StrSql = StrSql & "," & LicEstNro
            StrSql = StrSql & ",'" & Observaciones & "'"
            'FGZ - 29/07/2014 ---------------------------------------------
            If ConCertificado Then
                StrSql = StrSql & "," & ConvFecha(Fecha_Certif)
            End If
            'FGZ - 29/07/2014 ---------------------------------------------
            StrSql = StrSql & " )"
            objConn.Execute StrSql, , adExecuteNoRecords
            Flog.writeline Espacios(Tabulador * 2) & "Licencia insertada "
                
            emp_licnro = getLastIdentity(objConn, "emp_lic")
            

            '__________________________________
            'INSERTO COMPLEMENTOS
            '----------------------------------
            If inserto_complemento = True Then
                Select Case TDNro
                    Case 2:
                        'Inserto Complemento de vacaciones
                        If (CInt(PeriodoVac) > 0) Then 'valida la variable, si es mayor que cero inserta los datos
                            StrSql = "INSERT INTO lic_vacacion  (emp_licnro,vacnro,vacnotifnro,licvacmanual) "
                            StrSql = StrSql & " VALUES ("
                            StrSql = StrSql & emp_licnro & "," & PeriodoVac & ",NULL,-1"
                            StrSql = StrSql & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                            Flog.writeline Espacios(Tabulador * 2) & "Complemento de Vacaciones Insertado "
                        End If
                        '------------------------------------
                End Select
            End If
            
            
            'Genero la Justificacion
             StrSql = " INSERT INTO gti_justificacion ( jusanterior,juscodext,jusdesde,jusdiacompleto,jushasta,jussigla,jussistema,ternro,tjusnro,turnro,jushoradesde,jushorahasta,juseltipo,juselmaxhoras ) VALUES ("
             StrSql = StrSql & "-1"
             StrSql = StrSql & "," & emp_licnro
             StrSql = StrSql & "," & ConvFecha(FechaDesde)
             StrSql = StrSql & ",-1"
             StrSql = StrSql & "," & ConvFecha(FechaHasta)
             StrSql = StrSql & ",'LIC'"
             StrSql = StrSql & ",-1"
             StrSql = StrSql & "," & Tercero
             StrSql = StrSql & ",1"
             StrSql = StrSql & ",0"
             StrSql = StrSql & ",'" & HoraDesde & "'"
             StrSql = StrSql & ",'" & HoraHasta & "'"
             'FGZ - 17/06/2011 -----------------
             'StrSql = StrSql & "," & TDNro
             StrSql = StrSql & "," & LicTipo
             StrSql = StrSql & "," & CantidadHoras
             StrSql = StrSql & ")"
             objConn.Execute StrSql, , adExecuteNoRecords
             Flog.writeline Espacios(Tabulador * 2) & "Justificacion insertada "
             
             
            ' Codigo de Sit. Revista
            ' ___________________________________________________________
             Flog.writeline Espacios(Tabulador * 2) & "Situacion de revista"
            
            
            StrSql = "SELECT estrnro, tdnro FROM csijp_srtd "
            StrSql = StrSql & " WHERE tdnro =" & TDNro
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                Estrnro_SitRev = rs!Estrnro
            End If
            If rs.State = adStateOpen Then rs.Close
            
            
            If Trim(Estrnro_SitRev) <> "" Then
                
                    'Busco el tipo de la situacion de revista anterior
                    StrSql = "SELECT * FROM his_estructura "
                    StrSql = StrSql & " WHERE tenro = 30 "
                    StrSql = StrSql & " AND ternro = " & Tercero
                    StrSql = StrSql & " AND htetdesde <= " & ConvFecha(FechaDesde)
                    StrSql = StrSql & " AND ( htethasta >= " & ConvFecha(FechaDesde) & " OR htethasta IS Null )"
                    If rs_Est.State = adStateOpen Then rs_Est.Close
                    OpenRecordset StrSql, rs_Est
                    
                    If Not rs_Est.EOF Then
                        'la cierro un dia antes
                        If EsNulo(rs_Est!htethasta) Then
                            If Not (rs_Est!htetdesde = FechaDesde) Then
                                StrSql = " UPDATE his_estructura SET "
                                StrSql = StrSql & " htethasta = " & ConvFecha(CDate(FechaDesde - 1))
                                StrSql = StrSql & " WHERE tenro   = 30 "
                                StrSql = StrSql & " AND   estrnro  = " & rs_Est!Estrnro
                                StrSql = StrSql & " AND   ternro  = " & Tercero
                                StrSql = StrSql & " AND   htetdesde = " & ConvFecha(rs_Est!htetdesde)
                                StrSql = StrSql & " AND   htethasta  is null "
                                objConn.Execute StrSql, , adExecuteNoRecords
                            Else
                                'la borro porque se va superponer con la licencia
                                StrSql = " DELETE his_estructura "
                                StrSql = StrSql & " WHERE tenro   = 30 "
                                StrSql = StrSql & " AND   estrnro  = " & rs_Est!Estrnro
                                StrSql = StrSql & " AND   ternro =" & Tercero
                                StrSql = StrSql & " AND   htetdesde = " & ConvFecha(rs_Est!htetdesde)
                                StrSql = StrSql & " AND   htethasta  is null "
                                objConn.Execute StrSql, , adExecuteNoRecords
                            End If
                            
                            'Inserto la misma situacion despues de la nueva situacion (la de la licencia)
                            StrSql = "INSERT INTO his_estructura(tenro, ternro, estrnro, htetdesde)"
                            StrSql = StrSql & " VALUES (30, " & Tercero & ", " & rs_Est!Estrnro & ", "
                            StrSql = StrSql & ConvFecha(CDate(FechaHasta + 1)) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                            
                        Else
                            If rs_Est!htethasta > FechaHasta Then
                                If rs_Est!htetdesde > FechaDesde Then
                                    StrSql = " UPDATE his_estructura SET "
                                    StrSql = StrSql & " htethasta = " & ConvFecha(CDate(FechaDesde - 1))
                                    StrSql = StrSql & " WHERE tenro   = 30 "
                                    StrSql = StrSql & " AND   ternro  = " & Tercero
                                    StrSql = StrSql & " AND   htetdesde = " & ConvFecha(rs_Est!htetdesde)
                                    StrSql = StrSql & " AND   htethasta  = " & ConvFecha(rs_Est!htethasta)
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                Else
                                    'la borro porque se va superponer con la licencia
                                    StrSql = " DELETE his_estructura "
                                    StrSql = StrSql & " WHERE tenro = 30 "
                                    StrSql = StrSql & " AND   estrnro = " & rs_Est!Estrnro
                                    StrSql = StrSql & " AND   ternro  = " & Tercero
                                    StrSql = StrSql & " AND   htetdesde = " & ConvFecha(rs_Est!htetdesde)
                                    StrSql = StrSql & " AND   htethasta  = " & ConvFecha(rs_Est!htethasta)
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                End If
                                
                                'Inserto la misma situacion despues de la nueva situacion (la de la licencia)
                                StrSql = "INSERT INTO his_estructura "
                                StrSql = StrSql & " (tenro, ternro, estrnro, htetdesde,htethasta) "
                                StrSql = StrSql & " VALUES (30, " & Tercero & ", " & rs_Est!Estrnro & ", "
                                StrSql = StrSql & ConvFecha(CDate(FechaHasta + 1)) & ", " & ConvFecha(rs_Est!htethasta) & ")"
                                objConn.Execute StrSql, , adExecuteNoRecords
                                
                            Else
                                If rs_Est!htetdesde > FechaDesde Then
                                    StrSql = " UPDATE his_estructura SET "
                                    StrSql = StrSql & " htethasta = " & ConvFecha(CDate(FechaDesde - 1))
                                    StrSql = StrSql & " WHERE tenro   = 30 "
                                    StrSql = StrSql & " AND   ternro  = " & Tercero
                                    StrSql = StrSql & " AND   htetdesde = " & ConvFecha(rs_Est!htetdesde)
                                    StrSql = StrSql & " AND   htethasta  is null "
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                Else
                                    'la borro porque se va superponer con la licencia
                                    StrSql = " DELETE his_estructura "
                                    StrSql = StrSql & " WHERE tenro = 30 "
                                    StrSql = StrSql & "     AND estrnro  = " & rs_Est!Estrnro
                                    StrSql = StrSql & "     AND ternro  = " & Tercero
                                    StrSql = StrSql & "     AND htetdesde = " & ConvFecha(rs_Est!htetdesde)
                                    StrSql = StrSql & "     AND htethasta  = " & ConvFecha(rs_Est!htethasta)
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                End If
                            End If
                        End If
                    End If
                
                    StrSql = "INSERT INTO his_estructura(tenro, ternro, estrnro, htetdesde,htethasta) "
                    StrSql = StrSql & " VALUES (30, " & Tercero & ", " & Estrnro_SitRev & ", "
                    StrSql = StrSql & ConvFecha(FechaDesde) & ", " & ConvFecha(FechaHasta) & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                Else
                    Flog.writeline Espacios(Tabulador * 2) & "La Licencia no tienen Situacion de Revista asociado"
                End If
                
                
        
            
    End If

Fin:
'Cierro todo y libero
If rs_Lic.State = adStateOpen Then rs_Lic.Close
If rs_Empleado.State = adStateOpen Then rs_Empleado.Close
If rs_TipDia.State = adStateOpen Then rs_TipDia.Close
If rs_estado.State = adStateOpen Then rs_estado.Close
If rs_Est.State = adStateOpen Then rs_Est.Close
'If rs_Vacacion = adStateOpen Then rs_Vacacion.Close

Set rs_Lic = Nothing
Set rs_Empleado = Nothing
Set rs_TipDia = Nothing
Set rs_estado = Nothing
Set rs_Est = Nothing
Set rs_Vacacion = Nothing
Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    
    FlogE.writeline
    FlogE.writeline Espacios(Tabulador * 1) & "***************************************************"
    FlogE.writeline Espacios(Tabulador * 1) & "Error insalvable en la Linea " & NroLinea
    FlogE.writeline Espacios(Tabulador * 1) & "   " & strLinea
    FlogE.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    FlogE.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    FlogE.writeline Espacios(Tabulador * 1) & "***************************************************"
    FlogE.writeline
    
    
    GoTo Fin

End Sub


Public Sub LineaModelo_235(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Inserta en gti_rep_estad_accid_his.
' Autor      : FGZ
'              El formato es: estrnro,
'                             Periodo de GTI,
'                             cantidad de empleados,
'                             Dias trabajados,
'                             cant de horas extras.
' Fecha      : 03/11/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim pos1 As Long
Dim pos2 As Long
    
Dim estructura As Long
Dim Periodo_GTI As Long
Dim Cantidad_Empleados As Long
Dim Cantidad_Horas_Extras As Long
Dim Dias_Trabajados As Long


Dim rs_Gti_Rep_Estad_Accid_His As New ADODB.Recordset
Dim rs_Estructura  As New ADODB.Recordset
Dim rs_Periodo_GTI  As New ADODB.Recordset

On Error GoTo Manejador_De_Error

    'Estructura
    pos1 = 1
    pos2 = InStr(pos1, strLinea, separador)
    If IsNumeric(Mid$(strLinea, pos1, pos2 - pos1)) Then
        estructura = CLng(Mid$(strLinea, pos1, pos2 - pos1))
    Else
        InsertaError 1, 8
        HuboError = True
        Exit Sub
    End If
    
    'Periodo GTI
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    Periodo_GTI = CLng(Mid(strLinea, pos1, pos2 - pos1))

    'Cantidad de Empleados
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    Cantidad_Empleados = CLng(Mid(strLinea, pos1, pos2 - pos1))
        
    'Cantidad de dias
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    Dias_Trabajados = CLng(Mid(strLinea, pos1, pos2 - pos1))
        
    'Cantidad de Horas
    pos1 = pos2 + 1
    pos2 = Len(strLinea) + 1
    Cantidad_Horas_Extras = CLng(Mid(strLinea, pos1, pos2 - pos1))

' ====================================================================
'   Validar los parametros Levantados
'Periodo
StrSql = "SELECT * FROM gti_per "
StrSql = StrSql & " WHERE pgtinro = " & Periodo_GTI
OpenRecordset StrSql, rs_Periodo_GTI

If rs_Periodo_GTI.EOF Then
    InsertaError 2, 50
    Flog.writeline Espacios(Tabulador * 2) & "No existe ese periodo de GTI" & Periodo_GTI
    HuboError = True
    Exit Sub
End If

'Estructura
StrSql = "SELECT * FROM estructura "
StrSql = StrSql & " WHERE estrnro = " & estructura
OpenRecordset StrSql, rs_Estructura

If rs_Estructura.EOF Then
    Flog.writeline Espacios(Tabulador * 2) & "No existe esa estructura" & estructura
    InsertaError 1, 100
    HuboError = True
    Exit Sub
End If


'=============================================================

'Busco si existe la Licencia
StrSql = "SELECT * FROM gti_rep_estad_accid_his "
StrSql = StrSql & " WHERE estrnro = " & estructura
StrSql = StrSql & " AND pgtinro = " & Periodo_GTI
OpenRecordset StrSql, rs_Gti_Rep_Estad_Accid_His

    If Not rs_Gti_Rep_Estad_Accid_His.EOF Then
            Flog.writeline Espacios(Tabulador * 2) & "No se puede insertar. Ya existenten datos para esa estructura en ese periodo de GTI"
            InsertaError 1, 103
            HuboError = True
            Exit Sub
        Else
            'Inserto la Licencia
            StrSql = "INSERT INTO gti_rep_estad_accid_his ("
            StrSql = StrSql & "estrnro,pgtinro,em,dt,hextras"
            StrSql = StrSql & ") VALUES ("
            StrSql = StrSql & estructura
            StrSql = StrSql & "," & Periodo_GTI
            StrSql = StrSql & "," & Cantidad_Empleados
            StrSql = StrSql & "," & Dias_Trabajados
            StrSql = StrSql & "," & Cantidad_Horas_Extras
            StrSql = StrSql & " )"
            objConn.Execute StrSql, , adExecuteNoRecords
            Flog.writeline Espacios(Tabulador * 2) & "linea insertada "
        End If
Fin:
'Cierro todo y libero
If rs_Gti_Rep_Estad_Accid_His.State = adStateOpen Then rs_Gti_Rep_Estad_Accid_His.Close
If rs_Estructura.State = adStateOpen Then rs_Estructura.Close
If rs_Periodo_GTI.State = adStateOpen Then rs_Periodo_GTI.Close

Set rs_Gti_Rep_Estad_Accid_His = Nothing
Set rs_Estructura = Nothing
Set rs_Periodo_GTI = Nothing

Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    If InStr(1, Err.Description, "ODBC") > 0 Then
        'Fue error de Consulta de SQL
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
        Flog.writeline
    End If
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    GoTo Fin

End Sub


Public Sub LineaModelo_236(ByVal strLinea As String)
Dim pos1 As Long
Dim pos2 As Long
    
'Configuración de conceptos para las novedades
Dim id_concepto_pera As Long
Dim id_concepto_manzana As Long
Dim id_concepto_carozo As Long
Dim concepto_pera As String
Dim concepto_manzana As String
Dim concepto_carozo As String

Dim id_th_bultos As Long '        AS INT INITIAL 51  . /* THora de BULTOS */.

Dim cant_bultos_txt As String
Dim monto_bultos_txt As String
Dim cant_bultos   As Single
Dim monto_bultos As Single
Dim primera_parte As String
Dim empaque As Long
Dim Legajo As Long
Dim Fecha_Desde As String
Dim Fecha_Hasta As String
Dim producto_txt As String
Dim producto As Long
Dim fecha_prod As Date

Dim rs_Empleado As New ADODB.Recordset
Dim rs_Estructura As New ADODB.Recordset
Dim rs_Sucursal As New ADODB.Recordset
Dim rs_Gti_Achdiario As New ADODB.Recordset

Dim fs1
Dim Flog1
Dim txtArchivoNov


On Error GoTo Manejador_De_Error

'Conccod de productos
concepto_pera = "pr050"
concepto_manzana = "pr120"
concepto_carozo = "pr140"

'Obtengo el código del concepto pera
StrSql = "SELECT * FROM concepto WHERE " & _
" conccod = '" & concepto_pera & "'"
OpenRecordset StrSql, rs_Gti_Achdiario
If Not rs_Gti_Achdiario.EOF Then
    id_concepto_pera = rs_Gti_Achdiario!ConcNro
Else
    Flog.writeline Espacios(Tabulador * 1) & "No se encontro el Concepto para la Pera " & concepto_pera
    FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": No se encontro el Concepto " & concepto_pera
    InsertaError 2, 10
    HuboError = True
    Exit Sub
End If

'Obtengo el código del concepto manzana
StrSql = "SELECT * FROM concepto WHERE " & _
" conccod = '" & concepto_manzana & "'"
OpenRecordset StrSql, rs_Gti_Achdiario
If Not rs_Gti_Achdiario.EOF Then
    id_concepto_manzana = rs_Gti_Achdiario!ConcNro
Else
    Flog.writeline Espacios(Tabulador * 1) & "No se encontro el Concepto para la Manzana " & concepto_manzana
    FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": No se encontro el Concepto " & concepto_manzana
    InsertaError 2, 10
    HuboError = True
    Exit Sub
End If

'Obtengo el código del concepto carozo
StrSql = "SELECT * FROM concepto WHERE " & _
" conccod = '" & concepto_carozo & "'"
OpenRecordset StrSql, rs_Gti_Achdiario
If Not rs_Gti_Achdiario.EOF Then
    id_concepto_carozo = rs_Gti_Achdiario!ConcNro
Else
    Flog.writeline Espacios(Tabulador * 1) & "No se encontro el Concepto para el Carozo " & concepto_carozo
    FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": No se encontro el Concepto " & concepto_carozo
    InsertaError 2, 10
    HuboError = True
    Exit Sub
End If


'-----------------------------------------------------
'borrado de novedades

'Primero hago un backup de las novedades que voy a borrar
Set fs1 = CreateObject("Scripting.FileSystemObject")
txtArchivoNov = PathFLog & "novemp" & CStr(Format(Date, "yyyymmdd")) & Format(Time, "hhmm") & ".txt"
Set Flog1 = fs.CreateTextFile(txtArchivoNov, True)

StrSql = "SELECT *  FROM novemp WHERE " & _
" concnro = " & id_concepto_manzana & _
" OR concnro = " & id_concepto_pera & _
" OR concnro = " & id_concepto_carozo
OpenRecordset StrSql, rs_Gti_Achdiario
Do While Not rs_Gti_Achdiario.EOF
    Flog1.Write rs_Gti_Achdiario!ConcNro & "," & rs_Gti_Achdiario!tpanro & ","
    Flog1.Write rs_Gti_Achdiario!Empleado & "," & rs_Gti_Achdiario!nevalor & ","
    Flog1.Write rs_Gti_Achdiario!nevigencia & "," & rs_Gti_Achdiario!nedesde & ","
    Flog1.Write rs_Gti_Achdiario!nehasta & "," & rs_Gti_Achdiario!neretro & ","
    Flog1.Write rs_Gti_Achdiario!nepliqdesde & "," & rs_Gti_Achdiario!nepliqhasta & ","
    Flog1.Write rs_Gti_Achdiario!pronro & "," & rs_Gti_Achdiario!nenro & ","
    Flog1.writeline
       
    rs_Gti_Achdiario.MoveNext
Loop

'Borro las novedades de peras, manzanas o carozo
StrSql = "DELETE FROM novemp WHERE " & _
" concnro = " & id_concepto_manzana & _
" OR concnro = " & id_concepto_pera & _
" OR concnro = " & id_concepto_carozo
objConn.Execute StrSql, , adExecuteNoRecords



'---------------------------------------------------------


'Levanto los datos que vienen en la linea
'strLinea1
empaque = CLng(Mid(strLinea, 1, 1))
Legajo = CLng(Mid(strLinea, 2, 6))
Fecha_Desde = Mid(strLinea, 8, 10)
Fecha_Hasta = Mid(strLinea, 18, 10)
producto_txt = Trim(Mid(strLinea, 28, 10))

If empaque = 1 Then
    empaque = 236
Else
    empaque = 237
End If

'strLinea2
'fecha_prod = CDate(Mid(strLinea, 1, 10))

'strLinea3
cant_bultos = CSng(Mid(strLinea, 38, 5))
'If Len(strLinea) > 0 Then
'    cant_bultos = cant_bultos + clng(Mid(strLinea, Len(strLinea) - 1, 2) / 100)
'Else
'    cant_bultos = cant_bultos + clng(Mid(strLinea, Len(strLinea) - 1, 2) / 100)
'End If

'strLinea4
monto_bultos = CSng(Mid(strLinea, 43, 7))
'If Len(strLinea) > 0 Then
'    monto_bultos = monto_bultos + clng(Mid(strLinea, Len(strLinea) - 1, 2) / 100)
'Else
'    monto_bultos = monto_bultos + clng(Mid(strLinea, Len(strLinea) - 1, 2) / 100)
'End If


' ====================================================================
' control de errores
    StrSql = "SELECT * FROM empleado where empleg = " & Legajo
    OpenRecordset StrSql, rs_Empleado
    If rs_Empleado.EOF Then
        Flog.writeline "Empleado Inexistente: " & Legajo
        HuboError = True
        Exit Sub
    End If
    
   
    Select Case producto_txt
    Case "PERAS":
        producto = 1 'id-th-bultos = id-th-bultos-pera
    Case "MANZANAS":
        producto = 2 'id-th-bultos = id-th-bultos-manzana
    Case "DURAZNOS":
        producto = 3 'id-th-bultos = id-th-bultos-carozo
    Case "PELONES":
        producto = 3 'id-th-bultos = id-th-bultos-carozo
    Case "CIRUELAS":
        producto = 3 'id-th-bultos = id-th-bultos-carozo
    End Select

'   Hasta aquí el código anterior
'=============================================================

If empaque = 236 Then
    Select Case producto
    Case 1:      'PERAS
        'Busco la novedad. Si no existe la creo
        StrSql = "SELECT * FROM novemp WHERE " & _
         " concnro = " & id_concepto_pera & _
         " AND empleado = " & rs_Empleado!Ternro & _
         " AND tpanro = 51"
        OpenRecordset StrSql, rs_Gti_Achdiario
        If rs_Gti_Achdiario.EOF Then
            StrSql = "INSERT INTO novemp (" & _
             "empleado,concnro,nevalor,tpanro" & _
             ") VALUES (" & rs_Empleado!Ternro & _
             "," & id_concepto_pera & _
             "," & cant_bultos & _
             ", 51" & _
             " )"
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
    Case 2:          'MANZANAS
        'Busco la novedad. Si no existe la creo
        StrSql = "SELECT * FROM novemp WHERE " & _
         " concnro = " & id_concepto_manzana & _
         " AND empleado = " & rs_Empleado!Ternro & _
         " AND tpanro = 163"
        OpenRecordset StrSql, rs_Gti_Achdiario
        If rs_Gti_Achdiario.EOF Then
            StrSql = "INSERT INTO novemp (" & _
             "empleado,concnro,nevalor,tpanro" & _
             ") VALUES (" & rs_Empleado!Ternro & _
             "," & id_concepto_manzana & _
             "," & cant_bultos & _
             ", 163" & _
             " )"
            objConn.Execute StrSql, , adExecuteNoRecords
        End If

        'Busco la novedad. Si no existe la creo
        StrSql = "SELECT * FROM novemp WHERE " & _
         " concnro = " & id_concepto_manzana & _
         " AND empleado = " & rs_Empleado!Ternro & _
         " AND tpanro = 51"
        OpenRecordset StrSql, rs_Gti_Achdiario
        If rs_Gti_Achdiario.EOF Then
            StrSql = "INSERT INTO novemp (" & _
             "empleado,concnro,nevalor,tpanro" & _
             ") VALUES (" & rs_Empleado!Ternro & _
             "," & id_concepto_manzana & _
             "," & cant_bultos & _
             ", 51" & _
             " )"
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
    
    Case 3:          'CAROZO
        'Busco la novedad. Si no existe la creo
        StrSql = "SELECT * FROM novemp WHERE " & _
         " concnro = " & id_concepto_carozo & _
         " AND empleado = " & rs_Empleado!Ternro & _
         " AND tpanro = 163"
        OpenRecordset StrSql, rs_Gti_Achdiario
        If rs_Gti_Achdiario.EOF Then
            StrSql = "INSERT INTO novemp (" & _
             "empleado,concnro,nevalor,tpanro" & _
             ") VALUES (" & rs_Empleado!Ternro & _
             "," & id_concepto_carozo & _
             "," & cant_bultos & _
             ", 163" & _
             " )"
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
        'Busco la novedad. Si no existe la creo
        StrSql = "SELECT * FROM novemp WHERE " & _
         " concnro = " & id_concepto_carozo & _
         " AND empleado = " & rs_Empleado!Ternro & _
         " AND tpanro = 51"
        OpenRecordset StrSql, rs_Gti_Achdiario
        If rs_Gti_Achdiario.EOF Then
            StrSql = "INSERT INTO novemp (" & _
             "empleado,concnro,nevalor,tpanro" & _
             ") VALUES (" & rs_Empleado!Ternro & _
             "," & id_concepto_carozo & _
             "," & cant_bultos & _
             ", 51" & _
             " )"
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
    End Select
End If

Fin:
Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    If InStr(1, Err.Description, "ODBC") > 0 Then
        'Fue error de Consulta de SQL
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
        Flog.writeline
    End If
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    GoTo Fin



End Sub


Public Sub LineaModelo_237(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: IMPORTACION DE Detalle de Cantidad de BULTOS  a  RH Pro
'              IDEA : importado un desglose de Acumulado Diario de GTI para un T.Hora espec¡fico.
'              Luego lee el archivo y crea los Desglose AD de GTI, siempre pisa (asumen un reg. x empleado x convinatoria)
'              Genera un log de error en el mismo TMP
'              configuraci¢n de CTTES para la IMPORTACION
' Autor      : FGZ
' Fecha      : 10/02/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim pos1 As Long
Dim pos2 As Long
    
Dim id_producto_peras As Long '   AS INT INITIAL 1.
Dim id_producto_manzana As Long 'AS INT INITIAL 2.
Dim id_producto_carozo As Long 'AS INT INITIAL 3.  /* incluye: CIRUELA, DURAZNO Y PELONES */
Dim id_th_bultos As Long '        AS INT INITIAL 51  . /* THora de BULTOS */.

Dim cant_bultos_txt As String
Dim monto_bultos_txt As String
Dim cant_bultos   As Single
Dim monto_bultos As Single
Dim primera_parte As String
Dim empaque As Long
Dim Legajo As Long
Dim Fecha_Desde As String
Dim Fecha_Hasta As String
Dim producto_txt As String
Dim producto As Long
Dim fecha_prod As Date

Dim rs_Empleado As New ADODB.Recordset
Dim rs_Estructura As New ADODB.Recordset
Dim rs_Sucursal As New ADODB.Recordset
Dim rs_Gti_Achdiario As New ADODB.Recordset
Dim rs_gti_achdiario_Estr As New ADODB.Recordset

Dim achdnro As Long
Dim TipoEstr_Producto As Long
Dim TipoEstr_Sucursal As Long
Dim TipoEstr_Categoria As Long
Dim TipoEstr_RegimenHorario As Long

id_producto_peras = 1
id_producto_manzana = 2
id_producto_carozo = 3
id_th_bultos = 51

TipoEstr_Producto = 38
TipoEstr_Sucursal = 1
TipoEstr_Categoria = 3
TipoEstr_RegimenHorario = 21

On Error GoTo Manejador_De_Error

'Levanto los datos que vienen en la linea
'strLinea1
empaque = CLng(Mid(strLinea, 1, 1))
Legajo = CLng(Mid(strLinea, 2, 6))
Fecha_Desde = Mid(strLinea, 8, 10)
Fecha_Hasta = Mid(strLinea, 18, 10)
producto_txt = Trim(Mid(strLinea, 28, 10))

If empaque = 1 Then
    empaque = 206
Else
    empaque = 207
End If

'strLinea2
'fecha_prod = CDate(Mid(strLinea, 1, 10))

'strLinea3
cant_bultos = CSng(Mid(strLinea, 38, 5))
'If Len(strLinea) > 0 Then
'    cant_bultos = cant_bultos + clng(Mid(strLinea, Len(strLinea) - 1, 2) / 100)
'Else
'    cant_bultos = cant_bultos + clng(Mid(strLinea, Len(strLinea) - 1, 2) / 100)
'End If

'strLinea4
'monto_bultos = CSng(Mid(strLinea, 44, 7))


' FGZ - 23/03/2009 ------------------
cant_bultos = CSng(Mid(strLinea, 38, 6))
cant_bultos = cant_bultos / 100

If Not EsNulo(Trim(Mid(strLinea, 45, 6))) Then
    monto_bultos = CSng(Mid(strLinea, 45, 6))
    monto_bultos = monto_bultos / 100
Else
    monto_bultos = 0
End If
' FGZ - 23/03/2009 ------------------




' ====================================================================
' control de errores
    StrSql = "SELECT * FROM empleado where empleg = " & Legajo
    OpenRecordset StrSql, rs_Empleado
    If rs_Empleado.EOF Then
        Flog.writeline "Empleado Inexistente: " & Legajo
        HuboError = True
        Exit Sub
    End If
    
   
    Select Case producto_txt
    Case "PERAS":
        producto = 1 'id-th-bultos = id-th-bultos-pera
    Case "MANZANAS":
        producto = 2 'id-th-bultos = id-th-bultos-manzana
    Case "DURAZNOS":
        producto = 3 'id-th-bultos = id-th-bultos-carozo
    Case "PELONES":
        producto = 3 'id-th-bultos = id-th-bultos-carozo
    Case "CIRUELAS":
        producto = 3 'id-th-bultos = id-th-bultos-carozo
    End Select

    'Busco la Sucursal
    StrSql = " SELECT estrnro FROM his_estructura " & _
             " WHERE ternro = " & rs_Empleado!Ternro & " AND " & _
             " tenro = 1 AND estrnro = " & empaque & " AND " & _
             " (htetdesde <= " & ConvFecha(Fecha_Hasta) & ") AND " & _
             " ((" & ConvFecha(Fecha_Hasta) & " <= htethasta) or (htethasta is null))"
    OpenRecordset StrSql, rs_Estructura

    If Not rs_Estructura.EOF Then
        StrSql = " SELECT * FROM sucursal " & _
                 " WHERE estrnro =" & rs_Estructura!Estrnro
        OpenRecordset StrSql, rs_Sucursal
        
        If rs_Sucursal.EOF Then
            Flog.writeline "Empaque Inexistente: " & empaque
            HuboError = True
            Exit Sub
        Else
        
        End If
    Else
        Flog.writeline "Empaque Inexistente: " & empaque
        HuboError = True
        Exit Sub
    End If


'=============================================================
' Inserto
StrSql = "SELECT * FROM gti_achdiario WHERE " & _
         " ternro = " & rs_Empleado!Ternro & _
         " AND thnro = " & id_th_bultos & _
         " AND achdfecha = " & ConvFecha(fecha_prod)
OpenRecordset StrSql, rs_Gti_Achdiario

If rs_Gti_Achdiario.EOF Then
    StrSql = "INSERT INTO gti_achdiario (" & _
             "ternro,thnro,achdfecha,achdcanthoras " & _
             ") VALUES (" & rs_Empleado!Ternro & _
             "," & id_th_bultos & _
             "," & ConvFecha(fecha_prod) & _
             "," & cant_bultos & _
             " )"
    objConn.Execute StrSql, , adExecuteNoRecords
    achdnro = getLastIdentity(objConn, "gti_achdiario")
    
    'Tengo que insertar 3 registros en gti_achdiario_estr(uno por cada estructura: Producto, Sucursal)
    
    'Estructura producto
    StrSql = "INSERT INTO gti_achdiario_estr "
    StrSql = StrSql & " ( achdnro, achdfecha, tenro, estrnro ) "
    StrSql = StrSql & " VALUES ("
    StrSql = StrSql & achdnro
    StrSql = StrSql & "," & ConvFecha(fecha_prod)
    StrSql = StrSql & "," & TipoEstr_Producto
    StrSql = StrSql & "," & producto
    StrSql = StrSql & ")"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    'Estructura Sucursal
    StrSql = "INSERT INTO gti_achdiario_estr "
    StrSql = StrSql & " ( achdnro, achdfecha, tenro, estrnro ) "
    StrSql = StrSql & " VALUES ("
    StrSql = StrSql & achdnro
    StrSql = StrSql & "," & ConvFecha(fecha_prod)
    StrSql = StrSql & "," & TipoEstr_Sucursal
    StrSql = StrSql & "," & empaque
    StrSql = StrSql & ")"
    objConn.Execute StrSql, , adExecuteNoRecords
Else
    'reviso que existan las estructuras
    'Producto
    StrSql = "SELECT * FROM gti_achdiario_estr WHERE "
    'FGZ - 25/03/2009 - estaba mal el nombre del campo---
    'StrSql = StrSql & " achnro = " & rs_Gti_Achdiario!achdnro
    StrSql = StrSql & " achdnro = " & rs_Gti_Achdiario!achdnro
    'FGZ - 25/03/2009 - estaba mal el nombre del campo---
    StrSql = StrSql & " AND achdfecha = " & ConvFecha(fecha_prod)
    StrSql = StrSql & " AND tenro = " & TipoEstr_Producto
    StrSql = StrSql & " AND estrnro = " & producto
    OpenRecordset StrSql, rs_gti_achdiario_Estr
    
    If rs_gti_achdiario_Estr.EOF Then
        StrSql = "INSERT INTO gti_achdiario_estr "
        StrSql = StrSql & " ( achdnro, achdfecha, tenro, estrnro ) "
        StrSql = StrSql & " VALUES ("
        StrSql = StrSql & rs_Gti_Achdiario!achdnro
        StrSql = StrSql & "," & ConvFecha(fecha_prod)
        StrSql = StrSql & "," & TipoEstr_Producto
        StrSql = StrSql & "," & producto
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
    End If

    'Sucursal
    StrSql = "SELECT * FROM gti_achdiario_estr WHERE "
    'FGZ - 25/03/2009 - estaba mal el nombre del campo---
    'StrSql = StrSql & " achnro = " & rs_Gti_Achdiario!achdnro
    StrSql = StrSql & " achdnro = " & rs_Gti_Achdiario!achdnro
    'FGZ - 25/03/2009 - estaba mal el nombre del campo---
    StrSql = StrSql & " AND achdfecha = " & ConvFecha(fecha_prod)
    StrSql = StrSql & " AND tenro = " & TipoEstr_Sucursal
    StrSql = StrSql & " AND estrnro = " & empaque
    OpenRecordset StrSql, rs_gti_achdiario_Estr
    
    If rs_gti_achdiario_Estr.EOF Then
        StrSql = "INSERT INTO gti_achdiario_estr "
        StrSql = StrSql & " ( achdnro, achdfecha, tenro, estrnro ) "
        StrSql = StrSql & " VALUES ("
        StrSql = StrSql & rs_Gti_Achdiario!achdnro
        StrSql = StrSql & "," & ConvFecha(fecha_prod)
        StrSql = StrSql & "," & TipoEstr_Sucursal
        StrSql = StrSql & "," & empaque
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
    End If
End If

Fin:
Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    GoTo Fin


End Sub

Public Sub LineaModelo_243(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Interface de cuentas Corrrientes para los empleados.
' Autor      : FGZ
' Fecha      : 02/12/2004
' Ultima Mod.: 09/01/2008
' Descripcion: Diego Rosso -  Cuando pisa la cuenta porque ya existe la misma no pisaba la forma de pago.
' ---------------------------------------------------------------------------------------------
Dim pos1 As Long
Dim pos2 As Long
    
Dim Legajo As Long
Dim Tipo_Doc As String
Dim Nro_Doc As String
Dim nro_cuenta As String
Dim forma_pago As Long
Dim Banco As Long
Dim Estado As Boolean
Dim Sucursal As String
Dim CtaAcred As String
    
Dim Tercero As Long
Dim FechaDesde As String
Dim FechaHasta As String
Dim Tercero_Banco As Long
Dim Cbnro As Long
Dim CtabSuc As String
Dim nro_cbu As String



Dim rs_Empleado As New ADODB.Recordset
Dim rs_CtaBancaria As New ADODB.Recordset
Dim rs_FormaPago As New ADODB.Recordset
Dim rs_Doc As New ADODB.Recordset
Dim rs_Banco As New ADODB.Recordset

On Error GoTo Manejador_De_Error

' El formato es:
'   Legajo;
'   Tipo_Doc;
'   Nro_Doc;
'   Nro_Cuenta;
'   Nro_Cbu;
'   Forma_Pago;
'   Banco(estrnro);
'   [ Sucursal;
'   Cta de Acreditacion ]

        
    'Legajo
    pos1 = 1
    pos2 = InStr(pos1, strLinea, separador)
    If pos1 < pos2 Then
        Legajo = Trim(Mid$(strLinea, pos1, pos2 - pos1))
    End If
    
    'Tipo de Doc
    pos1 = pos2 + 1
    pos2 = InStr(pos1, strLinea, separador)
    Tipo_Doc = Trim(Mid$(strLinea, pos1, pos2 - pos1))
    
    'Nro_DOC
    pos1 = pos2 + 1
    If EsNulo(Tipo_Doc) Then
        pos2 = InStr(pos1, strLinea, separador)
    Else
        pos2 = InStr(pos1 + 1, strLinea, separador)
    End If
    Nro_Doc = Trim(Mid$(strLinea, pos1, pos2 - pos1))
    
    'Nro_cuenta
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    nro_cuenta = Trim(Mid$(strLinea, pos1, pos2 - pos1))
    
    'Nro_cbu
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    nro_cbu = Trim(Mid$(strLinea, pos1, pos2 - pos1))
    
    If UCase(nro_cbu) = "N/A" Or EsNulo(nro_cbu) Then
          nro_cbu = "null"
    End If
    
    'Forma de Pago
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    forma_pago = Mid$(strLinea, pos1, pos2 - pos1)
    
    'Banco (estrnro)
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    If pos2 = 0 Then
        pos2 = Len(strLinea)
        Banco = Mid$(strLinea, pos1, pos2)
        Sucursal = ""
        CtaAcred = ""
     
    Else
        Banco = Mid$(strLinea, pos1, pos2 - pos1)
    
        'Sucursal
        pos1 = pos2 + 1
        pos2 = InStr(pos1 + 1, strLinea, separador)
        Sucursal = Mid$(strLinea, pos1, pos2 - pos1)
    
        'Cuenta de Acreditacion
        pos1 = pos2 + 1
        pos2 = Len(strLinea)
        CtaAcred = Mid$(strLinea, pos1, pos2)
    End If
   
   
' ====================================================================
'   Validar los parametros Levantados

'El estado es siempre activo
Estado = True

'Puede venir el legajo o el tipo y nro de documento
'Que exista el legajo
If Not Legajo = 0 Then
    StrSql = "SELECT * FROM empleado where empleg = " & Legajo
    OpenRecordset StrSql, rs_Empleado
    If rs_Empleado.EOF Then
        Flog.writeline Espacios(Tabulador * 2) & "No se encontro el legajo " & Legajo
        InsertaError 1, 8
        HuboError = True
        Exit Sub
    Else
        Tercero = rs_Empleado!Ternro
    End If
Else
    'Busco un empleado que tenga el mismo tipo y nro de doc
    StrSql = " SELECT ter_doc.nrodoc, tercero.ternro FROM tercero "
    StrSql = StrSql & " INNER JOIN ter_doc ON (tercero.ternro = ter_doc.ternro) "
    StrSql = StrSql & " INNER JOIN tipodocu ON (tipodocu.tidnro = ter_doc.tidnro AND tipodocu.tidsigla = '" & Tipo_Doc & "') "
    StrSql = StrSql & " WHERE nrodoc = '" & Nro_Doc & "'"
    If rs_Doc.State = adStateOpen Then rs_Doc.Close
    OpenRecordset StrSql, rs_Doc
    
    If Not rs_Doc.EOF Then
        Tercero = rs_Doc!Ternro
    Else
        Flog.writeline Espacios(Tabulador * 2) & "No se encontro el documento " & Tipo_Doc & " - " & Nro_Doc
        InsertaError 2, 31
        HuboError = True
        Exit Sub
    End If
End If

'Busco la forma de pago
StrSql = "SELECT * FROM formapago WHERE fpagbanc = -1 "
StrSql = StrSql & " AND fpagnro = " & forma_pago
If rs_FormaPago.State = adStateOpen Then rs_FormaPago.Close
OpenRecordset StrSql, rs_FormaPago
If rs_FormaPago.EOF Then
    Flog.writeline Espacios(Tabulador * 2) & "No se encontro la forma de Pago " & forma_pago
    InsertaError 5, 104
    HuboError = True
    Exit Sub
Else
    forma_pago = rs_FormaPago!fpagnro
End If


'Busco el Banco
StrSql = "SELECT * FROM Banco "
StrSql = StrSql & " WHERE estrnro = " & Banco
If rs_Banco.State = adStateOpen Then rs_Banco.Close
OpenRecordset StrSql, rs_Banco
If rs_Banco.EOF Then
    Flog.writeline Espacios(Tabulador * 2) & "No se encontro el Banco " & Banco
    InsertaError 6, 60
    HuboError = True
    Exit Sub
Else
    Tercero_Banco = rs_Banco!Ternro
End If

'Sucursal
CtabSuc = Left(Sucursal, 10)

'Ctabacred
StrSql = "SELECT * FROM ctabancaria"
StrSql = StrSql & " WHERE ctabnro = '" & CtaAcred & "'"
If rs_CtaBancaria.State = adStateOpen Then rs_CtaBancaria.Close
OpenRecordset StrSql, rs_CtaBancaria
If Not rs_CtaBancaria.EOF Then
    Cbnro = rs_CtaBancaria!Cbnro
Else
    Flog.writeline Espacios(Tabulador * 2) & "No se encontro el cbnro. Valor por default = 0 " & CtaAcred
    Cbnro = 0
End If
If rs_CtaBancaria.State = adStateOpen Then rs_CtaBancaria.Close

'=============================================================
'Busco si existe una cuenta para ese legajo para el mismo banco del mismo tipo de cuenta y activa
StrSql = "SELECT * FROM ctabancaria"
StrSql = StrSql & " WHERE ctabancaria.ternro =" & Tercero
StrSql = StrSql & " AND ctabestado = -1 "
'StrSql = StrSql & " AND banco =" & Tercero_Banco
'StrSql = StrSql & " AND fpagnro =" & Forma_Pago
If rs_CtaBancaria.State = adStateOpen Then rs_CtaBancaria.Close
OpenRecordset StrSql, rs_CtaBancaria
If Not rs_CtaBancaria.EOF Then
    If rs_CtaBancaria!ctabnro = nro_cuenta Then
        StrSql = "UPDATE ctabancaria SET "
        StrSql = StrSql & " ctabsuc = '" & CtabSuc & "'"
        StrSql = StrSql & ", ctabacred = " & Cbnro
        StrSql = StrSql & ", ctabporc = 100 "
        StrSql = StrSql & ", ctabnro = '" & nro_cuenta & "'"
        If nro_cbu = "null" Then
                StrSql = StrSql & ", ctabcbu = " & nro_cbu
        Else
                StrSql = StrSql & ", ctabcbu = '" & nro_cbu & "'"
        End If
        StrSql = StrSql & ", fpagnro = " & forma_pago

        StrSql = StrSql & " WHERE cbnro = " & rs_CtaBancaria!Cbnro
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline Espacios(Tabulador * 2) & "Ya existe un cuenta del mismo tipo para el mismo banco activa. Se actualizará la cuenta"
    Else
        'Desactivo la anterior
        StrSql = " UPDATE ctabancaria SET "
        StrSql = StrSql & " ctabestado = 0 "
        StrSql = StrSql & " WHERE cbnro = " & rs_CtaBancaria!Cbnro
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline Espacios(Tabulador * 2) & "Desactivo la cuenta anterior"
        
        StrSql = "INSERT INTO ctabancaria ("
        StrSql = StrSql & " ternro,fpagnro,banco,ctabestado, ctabnro, ctabcbu, ctabsuc, ctabacred,ctabporc"
  
        StrSql = StrSql & ") VALUES (" & Tercero
        StrSql = StrSql & "," & forma_pago
        StrSql = StrSql & "," & Tercero_Banco
        StrSql = StrSql & ",-1"
        StrSql = StrSql & ",'" & nro_cuenta & "'"
        If nro_cbu = "null" Then
                StrSql = StrSql & "," & nro_cbu
        Else
                StrSql = StrSql & ",'" & nro_cbu & "'"
        End If
        StrSql = StrSql & ",'" & CtabSuc & "'"
        StrSql = StrSql & "," & Cbnro
        StrSql = StrSql & ",100"

        StrSql = StrSql & " )"
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline Espacios(Tabulador * 2) & "Nueva Cuenta Creada"
    End If
Else
    StrSql = "INSERT INTO ctabancaria ("
    StrSql = StrSql & " ternro,fpagnro,banco,ctabestado, ctabnro, ctabcbu, ctabsuc, ctabacred,ctabporc"

    StrSql = StrSql & ") VALUES (" & Tercero
    StrSql = StrSql & "," & forma_pago
    StrSql = StrSql & "," & Tercero_Banco
    StrSql = StrSql & ",-1"
    StrSql = StrSql & ",'" & nro_cuenta & "'"
    If nro_cbu = "null" Then
        StrSql = StrSql & "," & nro_cbu
    Else
        StrSql = StrSql & ",'" & nro_cbu & "'"
    End If
    StrSql = StrSql & ",'" & CtabSuc & "'"
    StrSql = StrSql & "," & Cbnro
    StrSql = StrSql & ",100"

    StrSql = StrSql & " )"
    objConn.Execute StrSql, , adExecuteNoRecords
    Flog.writeline Espacios(Tabulador * 2) & "Cuenta Creada"
End If
    
Fin:
'Cierro todo y libero
If rs_Empleado.State = adStateOpen Then rs_Empleado.Close
If rs_CtaBancaria.State = adStateOpen Then rs_CtaBancaria.Close
If rs_FormaPago.State = adStateOpen Then rs_FormaPago.Close
If rs_Doc.State = adStateOpen Then rs_Doc.Close
If rs_Banco.State = adStateOpen Then rs_Banco.Close

Set rs_CtaBancaria = Nothing
Set rs_Empleado = Nothing
Set rs_FormaPago = Nothing
Set rs_Doc = Nothing
Set rs_Banco = Nothing
Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    If InStr(1, Err.Description, "ODBC") > 0 Then
        'Fue error de Consulta de SQL
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
        Flog.writeline
    End If
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    GoTo Fin


End Sub


Public Sub LineaModelo_245(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Inserta Novedad de ajuste segun formato
' Autor      : FGZ
'              El formato es:
'                   Formato 1
'                       Legajo; conccod; monto
'                   ó
'                   Formato 2.1
'                       Legajo; conccod; monto; FechaDesde; FechaHasta
'                   Formato 2.2
'                       Legajo; conccod; monto; FechaDesde
'                   ó
'                   Formato 3
'                       Legajo; conccod; monto; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro)
' Fecha      : 27/12/2004
' Ultima Mod.: 14/06/2007.Gustavo Ring, se verifica que el usuario tenga permiso
'              en el concepto que se va a ingresar como novedad.
' Descripcion: 12/08/2009 - FGZ - Estaba mal las puestos los controles sobre los permisos
'              19/05/2010 - Cesar Stankunas - Se cambió la lógica para guardar las novedades de ajustes según si se pisa, se deja como está o se suma.
'              24-10-2011 - Margiotta, Emanuel - Se agrego la vista de empleado.
'              18-04-2012 - Zamarbide Juan - Se cambió el tipo de dato de la variablo Monto de Single a Double
'                           CAS-15590 - NORTHGATEARINSO - Error en campos interface novedades
'              08/06/2015 - Borrelli Facundo - CAS-31286 - COMPAÑIA DE ALIMENTOS - Bug en interfaz 245
'                           Se corrigio error de Typemismatch al subir la interfaz con Formato 1, además se corrigieron
'                           los mensajes en el log, cuando se generan errores al importar datos.
' ---------------------------------------------------------------------------------------------
Dim pos1 As Long
Dim pos2 As Long
    
Dim Tercero As Long
Dim NroLegajo As Long

Dim ConcNro As Long
'Dim Conccod As Long
Dim ConcCod As String

Dim Monto As Double 'Modificado ver 4.15
Dim FechaDesde As String
Dim FechaHasta As String
Dim perfsegcon As Integer
Dim tienePermiso As Boolean
Dim PeriodoDesde As Long
Dim PeriodoHasta As Long
Dim TieneVigencia As Boolean
Dim EsRetroactivo As Boolean

Dim Aux As String

Dim rs_Empleado As New ADODB.Recordset
Dim rs_Concepto As New ADODB.Recordset
Dim rs_NovAju As New ADODB.Recordset
Dim rs_Periodo As New ADODB.Recordset
Dim rs_seguridad As New ADODB.Recordset

' El formato es:
' Formato 1
' Legajo; conccod; monto
' ó
' Formato 2.1
' Legajo; conccod; monto; FechaDesde; FechaHasta
' ó
' Formato 2.2
' Legajo; conccod; monto; FechaDesde
' ó
' Formato 3
' Legajo; conccod; monto; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro)
' ó
' Formato 4
' Legajo; conccod; monto; FechaDesde; FechaHasta; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro)
    
    On Error GoTo Manejador_De_Error
    
    TieneVigencia = False
    EsRetroactivo = False
    
    'FB
    Texto = "Procesando linea " & strLinea
    Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    NroColumna = NroColumna + 1
    'FB

    'Nro de Legajo
    pos1 = 1
    pos2 = InStr(pos1, strLinea, separador)
    If IsNumeric(Mid$(strLinea, pos1, pos2 - pos1)) Then
        NroLegajo = Mid$(strLinea, pos1, pos2 - pos1)
    Else
        'FB
        Texto = ": " & "El legajo no es numerico "
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call InsertaError(1, 8)
        'FB
        'FB Flog.Writeline Espacios(Tabulador * 1) & "El legajo no es numerico "
        'FB FlogE.Writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": El legajo no es numerico"
        'FB InsertaError 1, 8
        HuboError = True
        Exit Sub
    End If
    
    'FB
    NroColumna = NroColumna + 1
    'FB
    'Concepto
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    ConcCod = Mid(strLinea, pos1, pos2 - pos1)
    'FB
    ConcCod = EliminarCHInvalidosII(ConcCod, 1, "")
    'FB

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Verifico que el usuario tenga el nivel de seguridad para insertar la novedad '
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
 
 StrSql = "SELECT perf_usr.perfsegcon, user_per.iduser FROM user_per "
 StrSql = StrSql & "INNER JOIN perf_usr ON user_per.perfnro = perf_usr.perfnro "
 StrSql = StrSql & "WHERE user_per.iduser = '" & usuario & "'"
 OpenRecordset StrSql, rs_seguridad

 If rs_seguridad.EOF Then
        perfsegcon = 0
 Else
   If IsNull(rs_seguridad!perfsegcon) Then
        perfsegcon = 0
   Else
        perfsegcon = rs_seguridad!perfsegcon
   End If
 End If
        
 rs_seguridad.Close
 
 '--------------------------------------------------------------------------------------------------------------------
 ' Busco el nivel de seguridad del concepto
 '--------------------------------------------------------------------------------------------------------------------

    StrSql = "SELECT codseguridad FROM concepto "
    StrSql = StrSql & " WHERE concepto.conccod=" & ConcCod
    OpenRecordset StrSql, rs_seguridad
 
    If Not (IsNull(rs_seguridad!codseguridad)) Then
            If rs_seguridad!codseguridad <= CInt(perfsegcon) Then
                tienePermiso = True
            Else
                tienePermiso = False
            End If
    Else
            tienePermiso = True
    End If

    rs_seguridad.Close
    If Not tienePermiso Then
        Texto = ": El usuario:" & usuario & " No tiene autorización sobre el concepto:" & ConcCod
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        HuboError = True
        Exit Sub
    End If

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    'FB
    NroColumna = NroColumna + 1
    'FB
    'Monto
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    If pos2 = 0 Then
        pos2 = Len(strLinea)
        Monto = Mid(strLinea, pos1, pos2)
        Monto = CDbl(Replace(CStr(Monto), SeparadorDecimal, ".")) 'Modificado ver 4.15
    Else
        Monto = Mid(strLinea, pos1, pos2 - pos1)
        Monto = CDbl(Replace(CStr(Monto), SeparadorDecimal, ".")) 'Modificado ver 4.15
        
        'Puede veniar Fecha Desde; fecha Hasta ó Retroactivo, Periodo desde , Periodo Hasta
        pos1 = pos2 + 1
        pos2 = InStr(pos1 + 1, strLinea, separador)
        If pos2 > 0 Then
        'FB
        NroColumna = NroColumna + 1
        'FB
            Aux = Mid(strLinea, pos1, pos2 - pos1)
            If Aux <> separador Then
                If IsDate(Aux) Then
                    TieneVigencia = True
                    'Fecha desde
                    FechaDesde = Mid(strLinea, pos1, pos2 - pos1)
                
                    'FB
                    NroColumna = NroColumna + 1
                    'FB
                    'Fecha Hasta
                    pos1 = pos2 + 1
                    pos2 = InStr(pos1, strLinea, separador)
                    If pos2 > 0 Then
                        FechaHasta = Mid(strLinea, pos1, pos2 - pos1)
                        If IsDate(FechaHasta) Then
                            FechaHasta = CDate(FechaHasta)
                        Else
                            If Not EsNulo(FechaHasta) Then
                                'FB
                                Texto = ": Fecha no valida "
                                Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                                Call InsertaError(1, 4)
                                'FB
                                'FB Flog.Writeline Espacios(Tabulador * 1) & "Fecha no valida "
                                'FB FlogE.Writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": La fecha no es valida "
                                'FB InsertaError 1, 4
                                HuboError = True
                                Exit Sub
                            End If
                        End If
                        'FB
                        NroColumna = NroColumna + 1
                        'FB
                        'Marca de Retroactividad
                        pos1 = pos2 + 1
                        pos2 = InStr(pos1 + 1, strLinea, separador)
                        Aux = Mid(strLinea, pos1, pos2 - pos1)
                        If UCase(Aux) = "SI" Then
                            EsRetroactivo = True
                        Else
                            EsRetroactivo = False
                        End If
                    
                        'Periodo desde
                        pos1 = pos2 + 1
                        pos2 = InStr(pos1 + 1, strLinea, separador)
                        If pos2 <> 0 Then 'FB
                            PeriodoDesde = Mid(strLinea, pos1, pos2 - pos1)
                            'Periodo hasta
                            pos1 = pos2 + 1
                            pos2 = Len(strLinea)
                            PeriodoHasta = Mid(strLinea, pos1, pos2)
                        End If
                    Else
                        pos2 = Len(strLinea)
                        FechaHasta = Mid(strLinea, pos1, pos2)
                    
                        TieneVigencia = True
                    End If
                End If 'FB
                Else
                    If UCase(Aux) = "SI" Then
                        EsRetroactivo = True
                    Else
                        EsRetroactivo = False
                    End If
                 
                    'Periodo desde
                    pos1 = pos2 + 1
                    pos2 = InStr(pos1 + 1, strLinea, separador)
                    Aux = Mid(strLinea, pos1, pos2 - pos1)
                    If Aux <> separador Then 'FB
                        PeriodoDesde = Mid(strLinea, pos1, pos2 - pos1)
                    
                        'Periodo hasta
                        pos1 = pos2 + 1
                        pos2 = Len(strLinea)
                        Aux = Mid(strLinea, pos1, pos2 - pos1)
                        PeriodoHasta = Mid(strLinea, pos1, pos2)
                    End If
                End If
        Else
            'Viene Vigencia con fecha desde y sin fecha hasta
            pos2 = Len(strLinea)
            FechaDesde = Mid(strLinea, pos1, pos2)
            TieneVigencia = True
            FechaHasta = ""
        End If
    End If

' ====================================================================
'   Validar los parametros Levantados

'EAM- Verifica que exista el legajo para la vista de empleado
'StrSql = "SELECT * FROM v_empleadoproc where empleg = " & NroLegajo
StrSql = "SELECT * FROM empleado where empleg = " & NroLegajo
OpenRecordset StrSql, rs_Empleado
If rs_Empleado.EOF Then
    'FB Flog.Writeline Espacios(Tabulador * 1) & "No se encontro el legajo " & NroLegajo
    'FB FlogE.Writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": No se encontro el legajo " & NroLegajo
    'FB InsertaError 1, 8
    'FB
    Texto = ": " & "No se encontro el legajo " & NroLegajo
    NroColumna = 1
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(1, 8)
    'FB
    HuboError = True
    Exit Sub
Else
    Tercero = rs_Empleado!Ternro
End If

'Que exista el concepto
StrSql = "SELECT * FROM concepto WHERE conccod = '" & ConcCod & "'"
OpenRecordset StrSql, rs_Concepto
If rs_Concepto.EOF Then
    'FB Flog.Writeline Espacios(Tabulador * 1) & "No se encontro el Concepto " & ConcCod
    'FB FlogE.Writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": No se encontro el Concepto " & ConcCod
    'FB InsertaError 2, 10
    'FB
    Texto = ": " & "No se encontro el Concepto " & ConcCod
    NroColumna = 2
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(2, 10)
    'FB
    HuboError = True
    Exit Sub
Else
    ConcNro = rs_Concepto!ConcNro
End If



If EsRetroactivo Then
    'Chequeo que los periodos sean validos
    'Chequeo Periodo Desde
    StrSql = "SELECT * FROM periodo WHERE pliqnro = " & PeriodoDesde
    If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
    OpenRecordset StrSql, rs_Periodo
    
    If rs_Periodo.EOF Then
        'FB Flog.Writeline Espacios(Tabulador * 1) & "Periodo Desde Invalido " & PeriodoDesde
        'FB FlogE.Writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": Periodo Desde Invalido " & PeriodoDesde
        'FB InsertaError 6, 36
        'FB
        Texto = ": " & "Periodo Desde Invalido " & PeriodoDesde
        NroColumna = 6
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call InsertaError(6, 36)
        'FB
        HuboError = True
        Exit Sub
    End If
    
    'Chequeo Periodo Hasta
    StrSql = "SELECT * FROM periodo WHERE pliqnro = " & PeriodoHasta
    If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
    OpenRecordset StrSql, rs_Periodo
    
    If rs_Periodo.EOF Then
        'FB Flog.Writeline Espacios(Tabulador * 1) & "Periodo Hasta Invalido " & PeriodoHasta
        'FB FlogE.Writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": Periodo Hasta Invalido " & PeriodoHasta
        'FB InsertaError 7, 36
        'FB
        Texto = ": " & "Periodo Hasta Invalido " & PeriodoHasta
        NroColumna = 7
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call InsertaError(7, 36)
        'FB
        HuboError = True
        Exit Sub
    End If
End If

'=============================================================
'Busco si existe la Novedad
If Not TieneVigencia Then
    StrSql = "SELECT * FROM novaju WHERE "
    StrSql = StrSql & " concnro = " & ConcNro
    StrSql = StrSql & " AND empleado = " & Tercero
    StrSql = StrSql & " AND (navigencia = -1 OR navigencia = 0) "
    StrSql = StrSql & " ORDER BY navigencia "
    If rs_NovAju.State = adStateOpen Then rs_NovAju.Close
    OpenRecordset StrSql, rs_NovAju

    If Not rs_NovAju.EOF Then
        If CBool(rs_NovAju!navigencia) Then
            Select Case CInt(AccionNovedadAju)
                Case -1: 'Actualizo la Novedad
                    If Not EsRetroactivo Then
                        StrSql = "UPDATE novaju SET navalor = " & Monto
                        StrSql = StrSql & " WHERE nanro = " & rs_NovAju!nanro
                    Else
                        StrSql = "UPDATE novaju SET navalor = " & Monto
                        StrSql = StrSql & " , napliqdesde =  " & PeriodoDesde
                        StrSql = StrSql & " , napliqhasta =  " & PeriodoHasta
                        StrSql = StrSql & " WHERE nanro = " & rs_NovAju!nanro
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = "Novedad de Ajuste Actualizada "
                    Flog.writeline Espacios(Tabulador * 1) & Texto
                Case 0: 'Mantiene Novedades
                    Texto = "No se insertó la novedad de ajuste. Ya existe y no se pisa."
                    Flog.writeline Espacios(Tabulador * 1) & Texto
                Case 1: 'Suma Novedades
                    If Not EsRetroactivo Then
                        StrSql = "UPDATE novaju SET navalor = navalor + " & Monto
                        StrSql = StrSql & " WHERE nanro = " & rs_NovAju!nanro
                    Else
                        StrSql = "UPDATE novaju SET navalor = navalor + " & Monto
                        StrSql = StrSql & " , napliqdesde =  " & PeriodoDesde
                        StrSql = StrSql & " , napliqhasta =  " & PeriodoHasta
                        StrSql = StrSql & " WHERE nanro = " & rs_NovAju!nanro
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = "Novedad de Ajuste Sumada "
                    Flog.writeline Espacios(Tabulador * 1) & Texto
            End Select
        Else
            'Inserto
            If Not EsRetroactivo Then
                StrSql = "INSERT INTO novaju (" & _
                        "empleado,concnro,navalor,navigencia" & _
                        ") VALUES (" & Tercero & _
                        "," & ConcNro & _
                        "," & Monto & _
                        ",0" & _
                        " )"
            Else
                StrSql = "INSERT INTO novaju (" & _
                        "empleado,concnro,navalor,navigencia,napliqdesde,napliqhasta " & _
                        ") VALUES (" & Tercero & _
                        "," & ConcNro & _
                        "," & Monto & _
                        "," & CLng(TieneVigencia) & _
                        "," & PeriodoDesde & _
                        "," & PeriodoHasta & _
                        " )"
            End If
            objConn.Execute StrSql, , adExecuteNoRecords
            Flog.writeline Espacios(Tabulador * 1) & "Novedad insertada "
        End If
    Else
        'Inserto
        If Not EsRetroactivo Then
            StrSql = "INSERT INTO novaju (" & _
                     "empleado,concnro,navalor,navigencia" & _
                     ") VALUES (" & Tercero & _
                     "," & ConcNro & _
                     "," & Monto & _
                     ",0" & _
                     " )"
        Else
            StrSql = "INSERT INTO novaju (" & _
                     "empleado,concnro,navalor,navigencia,napliqdesde,napliqhasta " & _
                     ") VALUES (" & Tercero & _
                     "," & ConcNro & _
                     "," & Monto & _
                     "," & CLng(TieneVigencia) & _
                     "," & PeriodoDesde & _
                     "," & PeriodoHasta & _
                     " )"
        End If
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline Espacios(Tabulador * 1) & "Novedad insertada "
    End If
Else 'Tiene Vigencia
    'Reviso que no se pise
    StrSql = "SELECT * FROM novaju WHERE "
    StrSql = StrSql & " concnro = " & ConcNro
    StrSql = StrSql & " AND empleado = " & Tercero
    StrSql = StrSql & " AND (navigencia = 0 "
    StrSql = StrSql & " OR (navigencia = -1 "
    If Not EsNulo(FechaHasta) Then
        StrSql = StrSql & " AND (nadesde <= " & ConvFecha(FechaHasta)
        StrSql = StrSql & " AND nahasta >= " & ConvFecha(FechaDesde) & ")"
        StrSql = StrSql & " OR  (nadesde <= " & ConvFecha(FechaHasta)
        StrSql = StrSql & " AND nahasta is null )))"
    Else
        StrSql = StrSql & " AND nahasta is null OR nahasta >= " & ConvFecha(FechaDesde) & "))"
    End If
    If rs_NovAju.State = adStateOpen Then rs_NovAju.Close
    OpenRecordset StrSql, rs_NovAju

    If Not rs_NovAju.EOF Then
            Select Case CInt(AccionNovedadAju)
                Case -1: 'Actualizo la Novedad
                    If Not EsRetroactivo Then
                        StrSql = "UPDATE novaju SET navalor = " & Monto
                        StrSql = StrSql & " WHERE nanro = " & rs_NovAju!nanro
                    Else
                        StrSql = "UPDATE novaju SET navalor = " & Monto
                        StrSql = StrSql & " , napliqdesde =  " & PeriodoDesde
                        StrSql = StrSql & " , napliqhasta =  " & PeriodoHasta
                        StrSql = StrSql & " WHERE nanro = " & rs_NovAju!nanro
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = "Novedad de Ajuste Actualizada "
                    Flog.writeline Espacios(Tabulador * 1) & Texto
                Case 0: 'Mantiene Novedades
                    Texto = "No se insertó la novedad de ajuste. Ya existe y no se pisa."
                    Flog.writeline Espacios(Tabulador * 1) & Texto
                Case 1: 'Suma Novedades
                    If Not EsRetroactivo Then
                        StrSql = "UPDATE novaju SET navalor = navalor + " & Monto
                        StrSql = StrSql & " WHERE nanro = " & rs_NovAju!nanro
                    Else
                        StrSql = "UPDATE novaju SET navalor = navalor + " & Monto
                        StrSql = StrSql & " , napliqdesde =  " & PeriodoDesde
                        StrSql = StrSql & " , napliqhasta =  " & PeriodoHasta
                        StrSql = StrSql & " WHERE nanro = " & rs_NovAju!nanro
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = "Novedad de Ajuste Sumada "
                    Flog.writeline Espacios(Tabulador * 1) & Texto
            End Select
    Else
        If Not EsRetroactivo Then
            StrSql = "INSERT INTO novaju ("
            StrSql = StrSql & "empleado,concnro,navalor,navigencia,nadesde"
            If Not EsNulo(FechaHasta) Then
                StrSql = StrSql & ",nahasta"
            End If
            StrSql = StrSql & ") VALUES (" & Tercero
            StrSql = StrSql & "," & ConcNro
            StrSql = StrSql & "," & Monto
            StrSql = StrSql & ",-1"
            StrSql = StrSql & "," & ConvFecha(FechaDesde)
            If Not EsNulo(FechaHasta) Then
                StrSql = StrSql & "," & ConvFecha(FechaHasta)
            End If
            StrSql = StrSql & " )"
        Else
            StrSql = "INSERT INTO novaju ("
            StrSql = StrSql & "empleado,concnro,navalor,navigencia,nadesde"
            If Not EsNulo(FechaHasta) Then
                StrSql = StrSql & ",nahasta"
            End If
            StrSql = StrSql & ",napliqdesde,napliqhasta"
            StrSql = StrSql & ") VALUES (" & Tercero
            StrSql = StrSql & "," & ConcNro
            StrSql = StrSql & "," & Monto
            StrSql = StrSql & ",-1"
            StrSql = StrSql & "," & ConvFecha(FechaDesde)
            If Not EsNulo(FechaHasta) Then
                StrSql = StrSql & "," & ConvFecha(FechaHasta)
            End If
            StrSql = StrSql & "," & PeriodoDesde
            StrSql = StrSql & "," & PeriodoHasta
            StrSql = StrSql & " )"
        End If
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline Espacios(Tabulador * 1) & "Novedad insertada "
    End If
  End If


Fin:

'Cierro todo y libero
If rs_NovAju.State = adStateOpen Then rs_NovAju.Close
If rs_Empleado.State = adStateOpen Then rs_Empleado.Close
If rs_Concepto.State = adStateOpen Then rs_Concepto.Close
If rs_Periodo.State = adStateOpen Then rs_Periodo.Close

Set rs_NovAju = Nothing
Set rs_Empleado = Nothing
Set rs_Concepto = Nothing
Set rs_Periodo = Nothing
Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    If InStr(1, Err.Description, "ODBC") > 0 Then
        'Fue error de Consulta de SQL
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
        Flog.writeline
    End If
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    'FB
    Texto = Err.Description
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(1, 7)
    'FB
    GoTo Fin
End Sub

Public Sub LineaModelo_347(ByVal strLinea As String)

' ---------------------------------------------------------------------------------------------
' Descripcion: Inserta Novedad de ajuste segun formato en Simulación
' Autor      : Manterola Maria Magdalena
'              El formato es:
'                   Formato 1
'                       Legajo; conccod; monto
'                   ó
'                   Formato 2.1
'                       Legajo; conccod; monto; FechaDesde; FechaHasta
'                   Formato 2.2
'                       Legajo; conccod; monto; FechaDesde
'                   ó
'                   Formato 3
'                       Legajo; conccod; monto; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro)
' Fecha      : 09/11/2011
' ---------------------------------------------------------------------------------------------
Dim pos1 As Long
Dim pos2 As Long
    
Dim Tercero As Long
Dim NroLegajo As Long

Dim ConcNro As Long
'Dim Conccod As Long
Dim ConcCod As String

Dim Monto As Single
Dim FechaDesde As String
Dim FechaHasta As String
Dim perfsegcon As Integer
Dim tienePermiso As Boolean
Dim PeriodoDesde As Long
Dim PeriodoHasta As Long
Dim TieneVigencia As Boolean
Dim EsRetroactivo As Boolean

Dim Aux As String

Dim rs_Empleado As New ADODB.Recordset
Dim rs_Concepto As New ADODB.Recordset
Dim rs_NovAju As New ADODB.Recordset
Dim rs_Periodo As New ADODB.Recordset
Dim rs_seguridad As New ADODB.Recordset

' El formato es:
' Formato 1
' Legajo; conccod; monto
' ó
' Formato 2.1
' Legajo; conccod; monto; FechaDesde; FechaHasta
' ó
' Formato 2.2
' Legajo; conccod; monto; FechaDesde
' ó
' Formato 3
' Legajo; conccod; monto; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro)
' ó
' Formato 4
' Legajo; conccod; monto; FechaDesde; FechaHasta; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro)
    
    On Error GoTo Manejador_De_Error
    
    TieneVigencia = False
    EsRetroactivo = False

    'Nro de Legajo
    pos1 = 1
    pos2 = InStr(pos1, strLinea, separador)
    If IsNumeric(Mid$(strLinea, pos1, pos2 - pos1)) Then
        NroLegajo = Mid$(strLinea, pos1, pos2 - pos1)
    Else
        Flog.writeline Espacios(Tabulador * 1) & "El legajo no es numerico "
        FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": El legajo no es numerico"
        InsertaError 1, 8
        HuboError = True
        Exit Sub
    End If
    
    'Concepto
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    ConcCod = Mid(strLinea, pos1, pos2 - pos1)

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Verifico que el usuario tenga el nivel de seguridad para insertar la novedad '
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
 
 StrSql = "SELECT perf_usr.perfsegcon, user_per.iduser FROM user_per "
 StrSql = StrSql & "INNER JOIN perf_usr ON user_per.perfnro = perf_usr.perfnro "
 StrSql = StrSql & "WHERE user_per.iduser = '" & usuario & "'"
 OpenRecordset StrSql, rs_seguridad

 If rs_seguridad.EOF Then
        perfsegcon = 0
 Else
   If IsNull(rs_seguridad!perfsegcon) Then
        perfsegcon = 0
   Else
        perfsegcon = rs_seguridad!perfsegcon
   End If
 End If
        
 rs_seguridad.Close
 
 '--------------------------------------------------------------------------------------------------------------------
 ' Busco el nivel de seguridad del concepto
 '--------------------------------------------------------------------------------------------------------------------

    StrSql = "SELECT codseguridad FROM concepto "
    StrSql = StrSql & " WHERE concepto.conccod=" & ConcCod
    OpenRecordset StrSql, rs_seguridad
 
    If Not (IsNull(rs_seguridad!codseguridad)) Then
            If rs_seguridad!codseguridad <= CInt(perfsegcon) Then
                tienePermiso = True
            Else
                tienePermiso = False
            End If
    Else
            tienePermiso = True
    End If

    rs_seguridad.Close
    If Not tienePermiso Then
        Texto = ": El usuario:" & usuario & " No tiene autorización sobre el concepto:" & ConcCod
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        HuboError = True
        Exit Sub
    End If

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    'Monto
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    If pos2 = 0 Then
        pos2 = Len(strLinea)
        Monto = Mid(strLinea, pos1, pos2)
        Monto = CSng(Replace(CStr(Monto), SeparadorDecimal, "."))
    Else
        Monto = Mid(strLinea, pos1, pos2 - pos1)
        Monto = CSng(Replace(CStr(Monto), SeparadorDecimal, "."))
        
        'Puede veniar Fecha Desde; fecha Hasta ó Retroactivo, Periodo desde , Periodo Hasta
        pos1 = pos2 + 1
        pos2 = InStr(pos1 + 1, strLinea, separador)
        If pos2 > 0 Then
            Aux = Mid(strLinea, pos1, pos2 - pos1)
            If IsDate(Aux) Then
                TieneVigencia = True
                'Fecha desde
                FechaDesde = Mid(strLinea, pos1, pos2 - pos1)
            
                'Fecha Hasta
                pos1 = pos2 + 1
                pos2 = InStr(pos1, strLinea, separador)
                If pos2 > 0 Then
                    FechaHasta = Mid(strLinea, pos1, pos2 - pos1)
                    If IsDate(FechaHasta) Then
                        FechaHasta = CDate(FechaHasta)
                    Else
                        If Not EsNulo(FechaHasta) Then
                            Flog.writeline Espacios(Tabulador * 1) & "Fecha no valida "
                            FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": La fecha no es valida "
                            InsertaError 1, 4
                            HuboError = True
                            Exit Sub
                        End If
                    End If
                    'Marca de Retroactividad
                    pos1 = pos2 + 1
                    pos2 = InStr(pos1 + 1, strLinea, separador)
                    Aux = Mid(strLinea, pos1, pos2 - pos1)
                    If UCase(Aux) = "SI" Then
                        EsRetroactivo = True
                    Else
                        EsRetroactivo = False
                    End If
                
                    'Periodo desde
                    pos1 = pos2 + 1
                    pos2 = InStr(pos1 + 1, strLinea, separador)
                    PeriodoDesde = Mid(strLinea, pos1, pos2 - pos1)
                    
                    'Periodo hasta
                    pos1 = pos2 + 1
                    pos2 = Len(strLinea)
                    PeriodoHasta = Mid(strLinea, pos1, pos2)
                Else
                    pos2 = Len(strLinea)
                    FechaHasta = Mid(strLinea, pos1, pos2)
                
                    TieneVigencia = True
                End If
            Else
                If UCase(Aux) = "SI" Then
                    EsRetroactivo = True
                Else
                    EsRetroactivo = False
                End If
                
                'Periodo desde
                pos1 = pos2 + 1
                pos2 = InStr(pos1 + 1, strLinea, separador)
                PeriodoDesde = Mid(strLinea, pos1, pos2 - pos1)
                
                'Periodo hasta
                pos1 = pos2 + 1
                pos2 = Len(strLinea)
                PeriodoHasta = Mid(strLinea, pos1, pos2)
            End If
        Else
            'Viene Vigencia con fecha desde y sin fecha hasta
            pos2 = Len(strLinea)
            FechaDesde = Mid(strLinea, pos1, pos2)
            TieneVigencia = True
            FechaHasta = ""
        End If
    End If

' ====================================================================
'   Validar los parametros Levantados

'EAM- Verifica que exista el legajo para la vista de empleado
StrSql = "SELECT * FROM sim_empleado where empleg = " & NroLegajo
OpenRecordset StrSql, rs_Empleado
If rs_Empleado.EOF Then
    Flog.writeline Espacios(Tabulador * 1) & "No se encontro el legajo " & NroLegajo
    FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": No se encontro el legajo " & NroLegajo
    InsertaError 1, 8
    HuboError = True
    Exit Sub
Else
    Tercero = rs_Empleado!Ternro
End If

'Que exista el concepto
StrSql = "SELECT * FROM concepto WHERE conccod = '" & ConcCod & "'"
OpenRecordset StrSql, rs_Concepto
If rs_Concepto.EOF Then
    Flog.writeline Espacios(Tabulador * 1) & "No se encontro el Concepto " & ConcCod
    FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": No se encontro el Concepto " & ConcCod
    InsertaError 2, 10
    HuboError = True
    Exit Sub
Else
    ConcNro = rs_Concepto!ConcNro
End If



If EsRetroactivo Then
    'Chequeo que los periodos sean validos
    'Chequeo Periodo Desde
    StrSql = "SELECT * FROM periodo WHERE pliqnro = " & PeriodoDesde
    If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
    OpenRecordset StrSql, rs_Periodo
    
    If rs_Periodo.EOF Then
        Flog.writeline Espacios(Tabulador * 1) & "Periodo Desde Invalido " & PeriodoDesde
        FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": Periodo Desde Invalido " & PeriodoDesde
        InsertaError 6, 36
        HuboError = True
        Exit Sub
    End If
    
    'Chequeo Periodo Hasta
    StrSql = "SELECT * FROM periodo WHERE pliqnro = " & PeriodoHasta
    If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
    OpenRecordset StrSql, rs_Periodo
    
    If rs_Periodo.EOF Then
        Flog.writeline Espacios(Tabulador * 1) & "Periodo Hasta Invalido " & PeriodoHasta
        FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": Periodo Hasta Invalido " & PeriodoHasta
        InsertaError 7, 36
        HuboError = True
        Exit Sub
    End If
End If

'=============================================================
'Busco si existe la Novedad
If Not TieneVigencia Then
    StrSql = "SELECT * FROM sim_novaju WHERE "
    StrSql = StrSql & " concnro = " & ConcNro
    StrSql = StrSql & " AND empleado = " & Tercero
    StrSql = StrSql & " AND (navigencia = -1 OR navigencia = 0) "
    StrSql = StrSql & " ORDER BY navigencia "
    If rs_NovAju.State = adStateOpen Then rs_NovAju.Close
    OpenRecordset StrSql, rs_NovAju

    If Not rs_NovAju.EOF Then
        If CBool(rs_NovAju!navigencia) Then
            Select Case CInt(AccionNovedadAju)
                Case -1: 'Actualizo la Novedad
                    If Not EsRetroactivo Then
                        StrSql = "UPDATE sim_novaju SET navalor = " & Monto
                        StrSql = StrSql & " WHERE nanro = " & rs_NovAju!nanro
                    Else
                        StrSql = "UPDATE sim_novaju SET navalor = " & Monto
                        StrSql = StrSql & " , napliqdesde =  " & PeriodoDesde
                        StrSql = StrSql & " , napliqhasta =  " & PeriodoHasta
                        StrSql = StrSql & " WHERE nanro = " & rs_NovAju!nanro
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = "Novedad de Ajuste Actualizada "
                    Flog.writeline Espacios(Tabulador * 1) & Texto
                Case 0: 'Mantiene Novedades
                    Texto = "No se insertó la novedad de ajuste. Ya existe y no se pisa."
                    Flog.writeline Espacios(Tabulador * 1) & Texto
                Case 1: 'Suma Novedades
                    If Not EsRetroactivo Then
                        StrSql = "UPDATE sim_novaju SET navalor = navalor + " & Monto
                        StrSql = StrSql & " WHERE nanro = " & rs_NovAju!nanro
                    Else
                        StrSql = "UPDATE sim_novaju SET navalor = navalor + " & Monto
                        StrSql = StrSql & " , napliqdesde =  " & PeriodoDesde
                        StrSql = StrSql & " , napliqhasta =  " & PeriodoHasta
                        StrSql = StrSql & " WHERE nanro = " & rs_NovAju!nanro
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = "Novedad de Ajuste Sumada "
                    Flog.writeline Espacios(Tabulador * 1) & Texto
            End Select
        Else
            'Inserto
            If Not EsRetroactivo Then
                'StrSql = "INSERT INTO sim_novaju (" & _
                        '"empleado,concnro,navalor,navigencia" & _
                        '") VALUES (" & Tercero & _
                        '"," & ConcNro & _
                        '"," & Monto & _
                        '",0" & _
                        '" )"
                StrSql = "INSERT INTO sim_novaju (empleado,concnro,navalor,navigencia,"
                StrSql = StrSql & " naajuste,pronro,nanro,natexto,napliqdesde,napliqhasta) Values "
                StrSql = StrSql & "(" & Tercero & ", " & ConcNro & ", "
                StrSql = StrSql & Monto & ", "
                StrSql = StrSql & 0 & ", "
                
                If EsNulo(rs_NovAju!naajuste) Then
                    StrSql = StrSql & -1 & ", "
                Else
                    StrSql = StrSql & rs_NovAju!naajuste & ", "
                End If
                
                If EsNulo(rs_NovAju!pronro) Then
                    StrSql = StrSql & "NULL" & ", "
                Else
                    StrSql = StrSql & rs_NovAju!pronro & ", "
                End If
                
                StrSql = StrSql & rs_NovAju!nanro & ", "
                
                If EsNulo(rs_NovAju!natexto) Then
                    StrSql = StrSql & "NULL" & ","
                Else
                    StrSql = StrSql & rs_NovAju!natexto & ","
                End If
               
                If EsNulo(rs_NovAju!napliqdesde) Then
                    StrSql = StrSql & "NULL" & ", "
                Else
                    StrSql = StrSql & rs_NovAju!napliqdesde & ", "
                End If
                
                If EsNulo(rs_NovAju!napliqhasta) Then
                    StrSql = StrSql & "NULL" & ")"
                Else
                    StrSql = StrSql & rs_NovAju!napliqhasta & ")"
                End If

            Else
                'StrSql = "INSERT INTO sim_novaju (" & _
                '        "empleado,concnro,navalor,navigencia,napliqdesde,napliqhasta " & _
                '        ") VALUES (" & Tercero & _
                '        "," & ConcNro & _
                '        "," & Monto & _
                '        "," & CLng(TieneVigencia) & _
                '        "," & PeriodoDesde & _
                '        "," & PeriodoHasta & _
                '        " )"
                        
                StrSql = "INSERT INTO sim_novaju (empleado,concnro,navalor,navigencia,nadesde,nahasta,"
                StrSql = StrSql & " naretro,naajuste,pronro,nanro,natexto,napliqdesde,napliqhasta) Values "
                StrSql = StrSql & "(" & Tercero & ", " & ConcNro & ", "
                StrSql = StrSql & Monto & ", "
                StrSql = StrSql & CLng(TieneVigencia) & ", "
                
                If EsNulo(FechaDesde) Then
                    StrSql = StrSql & "NULL" & ", "
                Else
                    StrSql = StrSql & ConvFecha(FechaDesde) & ", "
                End If
                
                If EsNulo(FechaHasta) Then
                    StrSql = StrSql & "NULL" & ", "
                Else
                    StrSql = StrSql & ConvFecha(FechaHasta) & ", "
                End If
                
                If EsNulo(rs_NovAju!naretro) Then
                    StrSql = StrSql & "NULL" & ", "
                Else
                    StrSql = StrSql & rs_NovAju!naretro & ", "
                End If
                
                If EsNulo(rs_NovAju!naajuste) Then
                    StrSql = StrSql & -1 & ", "
                Else
                    StrSql = StrSql & rs_NovAju!naajuste & ", "
                End If
                
                If EsNulo(rs_NovAju!pronro) Then
                    StrSql = StrSql & "NULL" & ", "
                Else
                    StrSql = StrSql & rs_NovAju!pronro & ", "
                End If
                
                StrSql = StrSql & rs_NovAju!nanro & ", "
                
                If EsNulo(rs_NovAju!natexto) Then
                    StrSql = StrSql & "NULL" & ","
                Else
                    StrSql = StrSql & rs_NovAju!natexto & ","
                End If
               
                If EsNulo(PeriodoDesde) Then
                    StrSql = StrSql & "NULL" & ", "
                Else
                    StrSql = StrSql & PeriodoDesde & ", "
                End If
                
                If EsNulo(PeriodoHasta) Then
                    StrSql = StrSql & "NULL" & ")"
                Else
                    StrSql = StrSql & PeriodoHasta & ")"
                End If
                
            End If
            objConn.Execute StrSql, , adExecuteNoRecords
            Flog.writeline Espacios(Tabulador * 1) & "Novedad insertada "
        End If
    Else
        'Inserto
        If Not EsRetroactivo Then
        
            'StrSql = "INSERT INTO sim_novaju (" & _
            '         "empleado,concnro,navalor,navigencia" & _
            '         ") VALUES (" & Tercero & _
            '         "," & ConcNro & _
            '         "," & Monto & _
            '         ",0" & _
            '         " )"
            
            StrSql = "INSERT INTO sim_novaju (empleado,concnro,navalor,navigencia,"
            StrSql = StrSql & " naajuste) Values "
            StrSql = StrSql & "(" & Tercero & ", " & ConcNro & ", "
            StrSql = StrSql & Monto & ", "
            StrSql = StrSql & 0 & ", "
                
            'If EsNulo(rs_NovAju!naajuste) Then
                StrSql = StrSql & -1 & ")"
            'Else
            '    StrSql = StrSql & rs_NovAju!naajuste & ", "
            'End If
                
          
        Else
            'StrSql = "INSERT INTO sim_novaju (" & _
            '         "empleado,concnro,navalor,navigencia,napliqdesde,napliqhasta " & _
            '         ") VALUES (" & Tercero & _
            '         "," & ConcNro & _
            '         "," & Monto & _
            '         "," & CLng(TieneVigencia) & _
            '         "," & PeriodoDesde & _
            '         "," & PeriodoHasta & _
            '         " )"
            StrSql = "INSERT INTO sim_novaju (empleado,concnro,navalor,navigencia,napliqdesde,napliqhasta,"
            StrSql = StrSql & " naajuste) Values "
            StrSql = StrSql & "(" & Tercero & ", " & ConcNro & ", "
            StrSql = StrSql & Monto & ", "
            StrSql = StrSql & CLng(TieneVigencia) & ", "
                
            If EsNulo(PeriodoDesde) Then
                StrSql = StrSql & "NULL" & ", "
            Else
                StrSql = StrSql & PeriodoDesde & ", "
            End If
                
            If EsNulo(PeriodoHasta) Then
                StrSql = StrSql & "NULL" & ", "
            Else
                StrSql = StrSql & PeriodoHasta & ", "
            End If
                
            'If EsNulo(rs_NovAju!naajuste) Then
                StrSql = StrSql & -1 & ")"
            'Else
            '    StrSql = StrSql & rs_NovAju!naajuste & ", "
            'End If
                
        End If
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline Espacios(Tabulador * 1) & "Novedad insertada "
    End If
Else 'Tiene Vigencia
    'Reviso que no se pise
    StrSql = "SELECT * FROM sim_novaju WHERE "
    StrSql = StrSql & " concnro = " & ConcNro
    StrSql = StrSql & " AND empleado = " & Tercero
    StrSql = StrSql & " AND (navigencia = 0 "
    StrSql = StrSql & " OR (navigencia = -1 "
    If Not EsNulo(FechaHasta) Then
        StrSql = StrSql & " AND (nadesde <= " & ConvFecha(FechaHasta)
        StrSql = StrSql & " AND nahasta >= " & ConvFecha(FechaDesde) & ")"
        StrSql = StrSql & " OR  (nadesde <= " & ConvFecha(FechaHasta)
        StrSql = StrSql & " AND nahasta is null )))"
    Else
        StrSql = StrSql & " AND nahasta is null OR nahasta >= " & ConvFecha(FechaDesde) & "))"
    End If
    If rs_NovAju.State = adStateOpen Then rs_NovAju.Close
    OpenRecordset StrSql, rs_NovAju

    If Not rs_NovAju.EOF Then
            Select Case CInt(AccionNovedadAju)
                Case -1: 'Actualizo la Novedad
                    If Not EsRetroactivo Then
                        StrSql = "UPDATE sim_novaju SET navalor = " & Monto
                        StrSql = StrSql & " WHERE nanro = " & rs_NovAju!nanro
                    Else
                        StrSql = "UPDATE sim_novaju SET navalor = " & Monto
                        StrSql = StrSql & " , napliqdesde =  " & PeriodoDesde
                        StrSql = StrSql & " , napliqhasta =  " & PeriodoHasta
                        StrSql = StrSql & " WHERE nanro = " & rs_NovAju!nanro
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = "Novedad de Ajuste Actualizada "
                    Flog.writeline Espacios(Tabulador * 1) & Texto
                Case 0: 'Mantiene Novedades
                    Texto = "No se insertó la novedad de ajuste. Ya existe y no se pisa."
                    Flog.writeline Espacios(Tabulador * 1) & Texto
                Case 1: 'Suma Novedades
                    If Not EsRetroactivo Then
                        StrSql = "UPDATE sim_novaju SET navalor = navalor + " & Monto
                        StrSql = StrSql & " WHERE nanro = " & rs_NovAju!nanro
                    Else
                        StrSql = "UPDATE sim_novaju SET navalor = navalor + " & Monto
                        StrSql = StrSql & " , napliqdesde =  " & PeriodoDesde
                        StrSql = StrSql & " , napliqhasta =  " & PeriodoHasta
                        StrSql = StrSql & " WHERE nanro = " & rs_NovAju!nanro
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = "Novedad de Ajuste Sumada "
                    Flog.writeline Espacios(Tabulador * 1) & Texto
            End Select
    Else
        If Not EsRetroactivo Then
            StrSql = "INSERT INTO sim_novaju ("
            StrSql = StrSql & "empleado,concnro,navalor,navigencia,naajuste,nadesde"
            If Not EsNulo(FechaHasta) Then
                StrSql = StrSql & ",nahasta"
            End If
            StrSql = StrSql & ") VALUES (" & Tercero
            StrSql = StrSql & "," & ConcNro
            StrSql = StrSql & "," & Monto
            StrSql = StrSql & ",-1"
            StrSql = StrSql & ",-1"
            StrSql = StrSql & "," & ConvFecha(FechaDesde)
            If Not EsNulo(FechaHasta) Then
                StrSql = StrSql & "," & ConvFecha(FechaHasta)
            End If
            StrSql = StrSql & " )"
        Else
            StrSql = "INSERT INTO sim_novaju ("
            StrSql = StrSql & "empleado,concnro,navalor,naajuste,navigencia,nadesde"
            If Not EsNulo(FechaHasta) Then
                StrSql = StrSql & ",nahasta"
            End If
            StrSql = StrSql & ",napliqdesde,napliqhasta"
            StrSql = StrSql & ") VALUES (" & Tercero
            StrSql = StrSql & "," & ConcNro
            StrSql = StrSql & "," & Monto
            StrSql = StrSql & ",-1"
            StrSql = StrSql & ",-1"
            StrSql = StrSql & "," & ConvFecha(FechaDesde)
            If Not EsNulo(FechaHasta) Then
                StrSql = StrSql & "," & ConvFecha(FechaHasta)
            End If
            StrSql = StrSql & "," & PeriodoDesde
            StrSql = StrSql & "," & PeriodoHasta
            StrSql = StrSql & " )"
        End If
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline Espacios(Tabulador * 1) & "Novedad insertada "
    End If
  End If


Fin:

'Cierro todo y libero
If rs_NovAju.State = adStateOpen Then rs_NovAju.Close
If rs_Empleado.State = adStateOpen Then rs_Empleado.Close
If rs_Concepto.State = adStateOpen Then rs_Concepto.Close
If rs_Periodo.State = adStateOpen Then rs_Periodo.Close

Set rs_NovAju = Nothing
Set rs_Empleado = Nothing
Set rs_Concepto = Nothing
Set rs_Periodo = Nothing
Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    If InStr(1, Err.Description, "ODBC") > 0 Then
        'Fue error de Consulta de SQL
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
        Flog.writeline
    End If
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    GoTo Fin
End Sub

Public Sub LineaModelo_354(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Inserta Novedad segun formato
' Autor      : Gonzalez Nicolás
'              El formato es:
'                   Formato 1
'                       Legajo; conccod; tpanro; monto
'                   ó
'                   Formato 2.1
'                       Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta
'                   Formato 2.2
'                       Legajo; conccod; tpanro; monto; FechaDesdeo
'                   ó
'                   Formato 3
'                       Legajo; conccod; tpanro; monto; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro)

'                   ó
'                   Formato 4
'                       Legajo; conccod; tpanro; monto; tipo motivo; motivo

'                   ó
'                   Formato 5
'                       Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta; tipo motivo; motivo

'                   ó
'                   Formato 6
'                       Legajo; conccod; tpanro; monto; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro); tipo motivo; motivo

'                   ó
'                   Formato 7
'                       Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro); tipo motivo; motivo

' Fecha      : 29/07/2004
' Ultima Mod.: 14/06/2007.Gustavo Ring, se verifica que el usuario tenga permiso
'              en el concepto que se va a ingresar como novedad.
' Ultima Mod.: 07/09/2007. FGZ, Se sacó esto porque no es para el estandar.
'           se verifica que el usuario tenga permiso en el concepto que se va a ingresar como novedad.
' Ultima Mod.: 26/03/2009. Diego Nuñez, Se agregaron los formatos del 4 al 7. Compatibilidad con tipo de motivo y motivo.
' Ultima Mod.: 23/07/2009. Martin Ferraro, PisarNovedad (bool) se cambio por AccionNovedad (int) que permite:
'                                                                                                       -1 Reemplazar Novedades
'                                                                                                       0 Mantiene Novedades
'                                                                                                       1 Sumar Novedades
'              06-12-2010 - Leticia A. - elimina caracteres invalidos de diferentes campos.
'              24-10-2011 - Margiotta, Emanuel - Se agrego la vista de empleado.
'              18-04-2012 - Zamarbide Juan - Se cambió el tipo de dato de la variablo Monto de Single a Double
'                           CAS-15590 - NORTHGATEARINSO - Error en campos interface novedades
'              21/11/2012  Gonzalez Nicolás - CAS-17567 - No se permite insertar una novedad con Vigencia cuando ya hay una existente con mismo CO y PAR.


'             '13/12/2012 - Gonzalez Nicolás - Copia 211 + Control de vigencia al remplazar novedades.
'              16/07/2014 - Carmen Quintero - CAS-26028 - modelo 211: Se agregó función listaConceptosPermitidos()
'              13/04/2015 - Borrelli Facundo - CAS-21778 - Sykes El Salvador - QA  Bug Interface 354 - Se valida que la fecha hasta no sea menor a la fecha desde.
'              16/04/2015 - Borrelli Facundo - CAS-21778 - Sykes El Salvador - QA  Bug Interface 354 [Entrega 2] - Se modifica la validacion para que fecha desde sea menor a la fecha hasta.
'              22/04/2015 - Borrelli Facundo - CAS-21778 - Sykes El Salvador - QA  Bug Interface 354 [Entrega 3] - Se mueve de lugar la validacion de fechas, al final de las validaciones.
'              11/08/2015 - Borrelli Facundo - CAS-32386 - Telefax (Santander URU) - Bug Interface 354 - Se agrega la posibilidad de cargar la fecha hasta como N/A, para cuando no se sabe cuando finaliza la vigencia
'              28/09/2015 - Borrelli Facundo - CAS-32386 - Telefax (Santander URU) - Bug Interface 354 [Entrega 2](CAS-15298)- Se modifica la interfaz para los formatos 2 y 6.
' ---------------------------------------------------------------------------------------------

Dim pos1 As Long
Dim pos2 As Long
    
Dim Tercero As Long
Dim NroLegajo As Long

Dim ConcNro As Long
Dim ConcCod As String
Dim fornro As Long

Dim tpanro As Long
Dim Aux_Monto As String
Dim Monto As Double
Dim FechaDesde As String
Dim FechaHasta As String

Dim FechaDesdeAux As String 'V4.54
Dim FechaHastaAux As String 'V4.54

Dim PeriodoDesde
Dim PeriodoHasta
Dim TieneVigencia As Boolean
Dim EsRetroactivo As Boolean

Dim TipoMotivo As String
Dim Motivo As String

Dim Aux As String
Dim Encontro As Boolean

Dim perfsegcon As Integer
'Dim tienePermiso As Integer

Dim tienePermiso As Boolean

Dim sinVig As Boolean
Dim StrSqlAux As String ' 4.54
Dim ExisteNovedad As Boolean
Dim InsertoNovedad As Boolean ' 4.54

Dim rs_Empleado As New ADODB.Recordset
Dim rs_Concepto As New ADODB.Recordset
Dim rs_TipoPar As New ADODB.Recordset
Dim rs_NovEmp As New ADODB.Recordset
Dim rs_NovEmp2 As New ADODB.Recordset
Dim rs_Periodo As New ADODB.Recordset
Dim rs_con_for_tpa As New ADODB.Recordset
Dim rs_seguridad As New ADODB.Recordset
Dim rs_TipoMotivo As New ADODB.Recordset
Dim rs_cft_resumen As New ADODB.Recordset

' El formato es:
' Formato 1
' Legajo; conccod; tpanro; monto
' ó
' Formato 2.1
' Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta
' ó
' Formato 2.2
' Legajo; conccod; tpanro; monto; FechaDesde
' ó
' Formato 3
' Legajo; conccod; tpanro; monto; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro)
' ó
' Formato 4
' Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro)
    
    On Error GoTo Manejador_De_Error
    Tabs = 1
    
    TieneVigencia = False
    EsRetroactivo = False

    Texto = "Procesando linea " & strLinea
    Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    
    NroColumna = NroColumna + 1
    'Nro de Legajo
    pos1 = 1
    pos2 = InStr(pos1, strLinea, separador)
    If IsNumeric(Mid$(strLinea, pos1, pos2 - pos1)) Then
        NroLegajo = Mid$(strLinea, pos1, pos2 - pos1)
    Else
        Texto = ": " & "El legajo no es numerico "
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call InsertaError(1, 8)
        HuboError = True
        Exit Sub
    End If
    
   
    NroColumna = NroColumna + 1
    'Concepto
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    ConcCod = Mid(strLinea, pos1, pos2 - pos1)
    ConcCod = EliminarCHInvalidosII(ConcCod, 1, "")
    
    '------------------------------------------------
    'VALIDA QUE EL USUARIO TENGA ACTIVO EL CONCEPTO
    '16/07/2014
    If listaConceptosPermitidos(ConcCod) = True Then
        tienePermiso = True
    Else
        tienePermiso = False
    End If
     
    If tienePermiso = False Then
      Texto = ": El usuario:" & usuario & " no tiene autorización sobre el concepto:" & ConcCod
      Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
      HuboError = True
    End If
    'fin
    '------------------------------------------------
    
    
    NroColumna = NroColumna + 1
    'Tipo de Parametro
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    tpanro = Mid(strLinea, pos1, pos2 - pos1)
    

    NroColumna = NroColumna + 1
    'Monto
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    If pos2 = 0 Then
        pos2 = Len(strLinea)
        Aux_Monto = Mid(strLinea, pos1, pos2)
        Monto = CDbl(Replace(CStr(Aux_Monto), SeparadorDecimal, ".")) 'Modificado ver 4.15
    Else
        Aux_Monto = Mid(strLinea, pos1, pos2 - pos1)
        Monto = CDbl(Replace(CStr(Aux_Monto), SeparadorDecimal, ".")) 'Modificado ver 4.15
        
        'Puede veniar Fecha Desde; fecha Hasta ó Retroactivo, Periodo desde , Periodo Hasta
        pos1 = pos2 + 1
        pos2 = InStr(pos1 + 1, strLinea, separador)
        
        If pos2 > 0 Then
            NroColumna = NroColumna + 1
            Aux = Mid(strLinea, pos1, pos2 - pos1)
            
            If IsDate(Aux) Then
                TieneVigencia = True
                'Fecha desde
                FechaDesde = Mid(strLinea, pos1, pos2 - pos1)
            
                NroColumna = NroColumna + 1
                'Fecha Hasta
                pos1 = pos2 + 1
                pos2 = InStr(pos1, strLinea, separador)
                
                If pos2 > 0 Then
                    FechaHasta = Mid(strLinea, pos1, pos2 - pos1)
                    If IsDate(FechaHasta) Then
                        FechaHasta = CDate(FechaHasta)
                    Else
                        'FBSe agrega la posibilidad de cargar la fecha hasta como N/A
                        If (FechaHasta = "N/A") Then
                            FechaHasta = ""
                        Else
                        'FB
                            If Not EsNulo(FechaHasta) Then
                                Texto = ": Fecha no valida "
                                Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                                Call InsertaError(1, 4)
                                HuboError = True
                                Exit Sub
                            End If
                        'FB
                        End If
                        'FB
                    End If
                    'FB - 13/04/2015 VALIDA QUE LA FECHA HASTA NO SEA MENOR QUE LA FECHA DESDE
                        'If CDate(FechaHasta) < CDate(FechaDesde) Then
'                        If CDate(FechaDesde) >= CDate(FechaHasta) Then
'                            Texto = "La fecha Desde no puede mayor a la Fecha Hasta "
'                            NroColumna = 5
'                            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
'                            Call InsertaError(1, 12)
'                            HuboError = True
'                            Exit Sub
'                        End If
                    'FB
                    NroColumna = NroColumna + 1
                    'Marca de Retroactividad
                    pos1 = pos2 + 1
                    pos2 = InStr(pos1 + 1, strLinea, separador)
                    Aux = Mid(strLinea, pos1, pos2 - pos1)
                    If UCase(Aux) = "SI" Then
                        EsRetroactivo = True
                    Else
                        EsRetroactivo = False
                    End If
                    If EsRetroactivo Then
                        'Periodo desde
                        pos1 = pos2 + 1
                        pos2 = InStr(pos1 + 1, strLinea, separador)
                        PeriodoDesde = Mid(strLinea, pos1, pos2 - pos1)
                        'Periodo hasta
                        pos1 = pos2 + 1
                        pos2 = InStr(pos1 + 1, strLinea, separador)
                        If pos2 > 0 Then 'Se especifican tipo de motivo y motivo
                            PeriodoHasta = Mid(strLinea, pos1, pos2 - pos1)
                            'Tipo de motivo
                            pos1 = pos2 + 1
                            pos2 = InStr(pos1 + 1, strLinea, separador)
                            If pos2 > 0 Then
                                TipoMotivo = Mid(strLinea, pos1, pos2 - pos1)
                                pos1 = pos2 + 1
                                pos2 = InStr(pos1 + 1, strLinea, separador)
                                If pos2 > 0 Then
                                    'Motivo
                                    Motivo = Mid(strLinea, pos1, pos2 - pos1)
                                    Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                                Else
                                    'Motivo
                                    pos2 = Len(strLinea)
                                    Motivo = Mid(strLinea, pos1, pos2)
                                    Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                                End If
                            Else
                                pos2 = Len(strLinea)
                                TipoMotivo = Mid(strLinea, pos1, pos2)
                                'Motivo
                                Motivo = ""
                            End If
                        Else
                            pos2 = Len(strLinea)
                            PeriodoHasta = Mid(strLinea, pos1, pos2)
                        End If
                    Else 'el siguiente dato es el tipo de motivo
                        'FB - 11/08/2015
'                        NroColumna = NroColumna + 1 'Columna marca Retroactividad con N/A
'                        pos1 = pos2 + 1
'                        pos2 = InStr(pos1 + 1, strLinea, separador)
'                        NroColumna = NroColumna + 1 'Columna Periodo Desde con N/A
'                        pos1 = pos2 + 1
'                        pos2 = InStr(pos1 + 1, strLinea, separador)
'                        NroColumna = NroColumna + 1 'Columna periodo hasta con N/A
'                        pos1 = pos2 + 1
'                        pos2 = InStr(pos1 + 1, strLinea, separador)
                        'FB - 11/08/2015
                        TipoMotivo = Mid(strLinea, pos1, pos2 - pos1)
                        pos1 = pos2 + 1
                        pos2 = InStr(pos1 + 1, strLinea, separador)
                    
                        If pos2 > 0 Then 'Se especifican tipo de motivo y motivo
                            'Motivo
                            Motivo = Mid(strLinea, pos1, pos2 - pos1)
                            Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                        Else
                            pos2 = Len(strLinea)
                            Motivo = Mid(strLinea, pos1, pos2)
                            Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                        End If
                    End If
                    
                Else
                    pos2 = Len(strLinea)
                    FechaHasta = Mid(strLinea, pos1, pos2)
                    TieneVigencia = True
                End If
            Else
                If UCase(Aux) = "SI" Then
                    EsRetroactivo = True
                Else
                    EsRetroactivo = False
                End If
                If EsRetroactivo Then
                    'Periodo desde
                    pos1 = pos2 + 1
                    pos2 = InStr(pos1 + 1, strLinea, separador)
                    PeriodoDesde = Mid(strLinea, pos1, pos2 - pos1)
                    'Periodo hasta
                    pos1 = pos2 + 1
                    pos2 = InStr(pos1 + 1, strLinea, separador)
                    If pos2 > 0 Then 'Se especifican tipo de motivo y motivo
                        PeriodoHasta = Mid(strLinea, pos1, pos2 - pos1)
                        'Tipo de motivo
                        pos1 = pos2 + 1
                        pos2 = InStr(pos1 + 1, strLinea, separador)
                        If pos2 > 0 Then
                            TipoMotivo = Mid(strLinea, pos1, pos2 - pos1)
                            pos1 = pos2 + 1
                            pos2 = InStr(pos1 + 1, strLinea, separador)
                            If pos2 > 0 Then
                                'Motivo
                                Motivo = Mid(strLinea, pos1, pos2 - pos1)
                                Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                            Else
                                'Motivo
                                pos2 = Len(strLinea)
                                Motivo = Mid(strLinea, pos1, pos2)
                                Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                            End If
                        Else
                            pos2 = Len(strLinea)
                            TipoMotivo = Mid(strLinea, pos1, pos2)
                            'Motivo
                            Motivo = ""
                        End If
                    Else
                        pos2 = Len(strLinea)
                        PeriodoHasta = Mid(strLinea, pos1, pos2)
                    End If
                Else 'el siguiente dato es el tipo de motivo
                    TipoMotivo = Aux
                    pos1 = pos2 + 1
                    pos2 = InStr(pos1 + 1, strLinea, separador)
                    If pos2 > 0 Then 'Se especifican tipo de motivo y motivo
                        'Motivo
                        Motivo = Mid(strLinea, pos1, pos2 - pos1)
                        Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                    Else
                        pos2 = Len(strLinea)
                        Motivo = Mid(strLinea, pos1, pos2)
                        Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                    End If
                End If
            End If
        Else
            If Not pos1 >= Len(strLinea) Then
                'Viene Vigencia con fecha desde y sin fecha hasta
                pos2 = Len(strLinea)
                FechaDesde = Mid(strLinea, pos1, pos2)
                TieneVigencia = True
                FechaHasta = ""
            End If
        End If
    End If
    
    'FB - 22/04/2015 - Se realiza la validacion de las fechas.
    'FGZ - 02/06/2015 -----------------------------------------------
    'If CDate(FechaDesde) >= CDate(FechaHasta) Then
    'FB 30/07/2015
    If FechaHasta <> "" Then
        If CDate(FechaDesde) > CDate(FechaHasta) Then
            Texto = "La fecha Desde no puede mayor a la Fecha Hasta "
            NroColumna = 5
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            Call InsertaError(1, 12)
            HuboError = True
            Exit Sub
        End If
    End If
    'FB
' ====================================================================
'   Validar los parametros Levantados



'EAM- Verifica que exista el legajo para la vista de empleado
'StrSql = "SELECT * FROM v_empleadoproc where empleg = " & NroLegajo
StrSql = "SELECT * FROM empleado where empleg = " & NroLegajo
OpenRecordset StrSql, rs_Empleado
If rs_Empleado.EOF Then
    Texto = ": " & "No se encontro el legajo " & NroLegajo
    NroColumna = 1
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(1, 8)
    HuboError = True
    Exit Sub
Else
    Tercero = rs_Empleado!Ternro
End If


'Que exista el concepto
StrSql = "SELECT * FROM concepto WHERE conccod = '" & ConcCod & "'"
'StrSql = StrSql & " OR conccod = '" & Conccod & "'"
OpenRecordset StrSql, rs_Concepto
If rs_Concepto.EOF Then
    Texto = ": " & "No se encontro el Concepto " & ConcCod
    NroColumna = 2
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(2, 10)
    HuboError = True
    Exit Sub
Else
    ConcNro = rs_Concepto!ConcNro
    fornro = rs_Concepto!fornro
End If

'Que exista el tipo de Parametro
StrSql = "SELECT * FROM tipopar WHERE tpanro = " & tpanro
OpenRecordset StrSql, rs_TipoPar

If rs_TipoPar.EOF Then
    Texto = ": " & "No se encontro el Tipo de Parametro " & tpanro
    NroColumna = 3
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(3, 11)
    HuboError = True
    Exit Sub
End If


'FGZ - 27/01/2004
'Faltaria revisar que el par concepto-parametro se resuelva por novedad
StrSql = "SELECT * FROM con_for_tpa "
StrSql = StrSql & " WHERE concnro = " & ConcNro
StrSql = StrSql & " AND fornro =" & fornro
StrSql = StrSql & " AND tpanro =" & tpanro
OpenRecordset StrSql, rs_con_for_tpa

If rs_con_for_tpa.EOF Then
    Texto = ": " & "El parametro " & tpanro & " no esta asociado a la formula del concepto " & ConcCod
    NroColumna = 3
    Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, "")
    Call InsertaError(3, 11)
    HuboError = True
    Exit Sub
Else
    Encontro = False
    Do While Not Encontro And Not rs_con_for_tpa.EOF
        If Not CBool(rs_con_for_tpa!cftauto) Then
            Encontro = True
        End If
        rs_con_for_tpa.MoveNext
    Loop
    If Not Encontro Then
        Texto = ": " & "El parametro " & tpanro & " del concepto " & ConcCod & " no se resuelve por novedad "
        NroColumna = 3
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call InsertaError(3, 11)
        HuboError = True
        Exit Sub
    End If
End If


If EsRetroactivo Then
  'Chequeo que los periodos sean validos
  'Chequeo Periodo Desde
  
  StrSql = "SELECT * FROM periodo WHERE pliqnro = " & PeriodoDesde
  If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
  OpenRecordset StrSql, rs_Periodo
  If rs_Periodo.EOF Then
      Texto = ": " & "Periodo Desde Invalido " & PeriodoDesde
      NroColumna = 6
      Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
      Call InsertaError(6, 36)
      HuboError = True
      Exit Sub
  End If
  
  'Chequeo Periodo Hasta
  StrSql = "SELECT * FROM periodo WHERE pliqnro = " & PeriodoHasta
  If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
  OpenRecordset StrSql, rs_Periodo
  If rs_Periodo.EOF Then
      Texto = ": " & "Periodo Hasta Invalido " & PeriodoHasta
      NroColumna = 7
      Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
      Call InsertaError(7, 36)
      HuboError = True
      Exit Sub
  End If
End If

'=============================================================
'Si viene el tipo de motivo cargo ese y valido que exista sino viene, busco si hay un default
If Len(TipoMotivo) = 0 Or (TipoMotivo = "N/A") Then
    'Verifico si hay un default
    StrSql = "SELECT tipmotnro, motivo FROM cft_resumen where concnro = " & ConcNro
    StrSql = StrSql & " AND tpanro = " & tpanro
    OpenRecordset StrSql, rs_cft_resumen
    If Not rs_cft_resumen.EOF Then
        TipoMotivo = IIf(IsNull(rs_cft_resumen!tipmotnro), "0", rs_cft_resumen!tipmotnro)
    End If
    rs_cft_resumen.Close
Else
    'Valido contra BD que exista el motivo
    StrSql = "SELECT * FROM tipomotivo where tipmotnro = " & TipoMotivo
    OpenRecordset StrSql, rs_TipoMotivo
    If rs_TipoMotivo.EOF Then
        Texto = ": " & "No se encontro el tipo de motivo " & TipoMotivo
        NroColumna = 13
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call InsertaError(13, 116)
        HuboError = True
        Exit Sub
    End If
    rs_TipoMotivo.Close
End If

'Si viene motivo cargo ese, sino viene, busco si hay un default
If Len(Motivo) = 0 Or (Motivo = "N/A") Then
    'Verifico si hay un default
    StrSql = "SELECT tipmotnro, motivo FROM cft_resumen where concnro = " & ConcNro
    StrSql = StrSql & " AND tpanro = " & tpanro
    OpenRecordset StrSql, rs_cft_resumen
    If Not rs_cft_resumen.EOF Then
        Motivo = IIf(IsNull(rs_cft_resumen!Motivo), "", rs_cft_resumen!Motivo)
    End If
    rs_cft_resumen.Close
End If

If Len(TipoMotivo) = 0 Then TipoMotivo = "null"
If TipoMotivo = "N/A" Then TipoMotivo = "null"
If TipoMotivo = "0" Then TipoMotivo = "null"
If Motivo = "N/A" Then Motivo = ""

'=============================================================
'Busco si existe la Novedad

  If Not TieneVigencia Then
    StrSql = "SELECT * FROM novemp WHERE "
    StrSql = StrSql & " concnro = " & ConcNro
    StrSql = StrSql & " AND tpanro = " & tpanro
    StrSql = StrSql & " AND empleado = " & Tercero
    StrSql = StrSql & " AND (nevigencia = -1 OR nevigencia = 0) "
    StrSql = StrSql & " ORDER BY nevigencia "
    If rs_NovEmp.State = adStateOpen Then rs_NovEmp.Close
    OpenRecordset StrSql, rs_NovEmp
    
    If Not rs_NovEmp.EOF Then
    
        'Busco si existe una novedad sin vigencia
        sinVig = False
        Do While Not rs_NovEmp.EOF
            If Not CBool(rs_NovEmp!nevigencia) Then
                sinVig = True
                Exit Do 'Para que quede posicionado en la nov a modificar
            End If
            rs_NovEmp.MoveNext
        Loop
        
            'A partir de la V4.50
            'Busco si existe una misma novedad s/vigencia o c/vigencia diferente
            ExisteNovedad = False
            StrSql = "SELECT * FROM novemp WHERE "
            StrSql = StrSql & " concnro = " & ConcNro
            StrSql = StrSql & " AND tpanro = " & tpanro
            StrSql = StrSql & " AND empleado = " & Tercero
            OpenRecordset StrSql, rs_NovEmp2
            If Not rs_NovEmp2.EOF Then
                Flog.writeline "Existe una novedad"
                ExisteNovedad = True
            End If
            rs_NovEmp2.Close
'            -------------------------------------------------
    
            If Not sinVig Then ' No encontre con licencia
                If ExisteNovedad = True Then 'V4.50
                    Texto = "No se insertó la novedad. Ya existe y no se pisa."
                    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                Else
                'Inserto---------------------------------------------------------
                    If Not EsRetroactivo Then
                        StrSql = "INSERT INTO novemp (" & _
                                 "empleado,concnro,tpanro,nevalor,nevigencia"
                        StrSql = StrSql & ",tipmotnro,motivo"
                        StrSql = StrSql & ") VALUES (" & Tercero & _
                                 "," & ConcNro & _
                                 "," & tpanro & _
                                 "," & Monto & _
                                 ",0"
                        StrSql = StrSql & "," & TipoMotivo & _
                        ",'" & Motivo & "'"
                        StrSql = StrSql & " )"
                    Else
                        StrSql = "INSERT INTO novemp (" & _
                                 "empleado,concnro,tpanro,nevalor,nevigencia,nepliqdesde,nepliqhasta "
                        StrSql = StrSql & ",tipmotnro,motivo"
                        StrSql = StrSql & ") VALUES (" & Tercero & _
                                 "," & ConcNro & _
                                 "," & tpanro & _
                                 "," & Monto & _
                                 "," & CLng(TieneVigencia) & _
                                 "," & PeriodoDesde & _
                                 "," & PeriodoHasta
                        StrSql = StrSql & "," & TipoMotivo & _
                        ",'" & Motivo & "'"
                        StrSql = StrSql & " )"
                    End If
                    
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = "Novedad Insertada "
                    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                End If
            '-----------------------------------------------------------------
        Else
            'Existe una novedad pero sin vigencia ==> Actualizo
            
            Select Case CInt(AccionNovedad)
                Case -1: 'Actualizo la Novedad
                    If Not EsRetroactivo Then
                        StrSql = "UPDATE novemp SET nevalor = " & Monto
                            StrSql = StrSql & " , tipmotnro =  " & TipoMotivo & _
                            " , motivo =  '" & Motivo & "'"
                        StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                    Else
                        StrSql = "UPDATE novemp SET nevalor = " & Monto & _
                                 " , nepliqdesde =  " & PeriodoDesde & _
                                 " , nepliqhasta =  " & PeriodoHasta & _
                                 " , tipmotnro =  " & TipoMotivo & _
                                 " , motivo =  '" & Motivo & "'"
                        StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = "Novedad Actualizada "
                    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                    'Flog.Writeline Espacios(Tabulador * 1) & "Novedad Actualizada "
                Case 0: 'Mantiene Novedades
                    Texto = "No se insertó la novedad. Ya existe y no se pisa."
                    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                Case 1: 'Suma Novedades
                    If Not EsRetroactivo Then
                        StrSql = "UPDATE novemp SET nevalor = nevalor + " & Monto
                        StrSql = StrSql & " , tipmotnro =  " & TipoMotivo
                        StrSql = StrSql & " , motivo =  '" & Motivo & "'"
                        StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                    Else
                        StrSql = "UPDATE novemp SET nevalor = nevalor + " & Monto & _
                                 " , nepliqdesde =  " & PeriodoDesde & _
                                 " , nepliqhasta =  " & PeriodoHasta
                        StrSql = StrSql & " , tipmotnro =  " & TipoMotivo & _
                        " , motivo =  '" & Motivo & "'"
                        StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = "Novedad Sumada "
                    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
            End Select

        End If
    Else 'No encontre novedad alguna para el conc y param
        If ExisteNovedad = True Then 'V4.50
            Texto = "No se insertó la novedad. Ya existe y no se pisa."
            Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
        Else
            'Inserto
            If Not EsRetroactivo Then
                StrSql = "INSERT INTO novemp (" & _
                         "empleado,concnro,tpanro,nevalor,nevigencia"
                StrSql = StrSql & ",tipmotnro,motivo"
                StrSql = StrSql & ") VALUES (" & Tercero & _
                         "," & ConcNro & _
                         "," & tpanro & _
                         "," & Monto & _
                         ",0"
                StrSql = StrSql & "," & TipoMotivo & _
                ",'" & Motivo & "'"
                StrSql = StrSql & " )"
            Else
                StrSql = "INSERT INTO novemp (" & _
                         "empleado,concnro,tpanro,nevalor,nevigencia,nepliqdesde,nepliqhasta "
                StrSql = StrSql & ",tipmotnro,motivo"
                StrSql = StrSql & ") VALUES (" & Tercero & _
                         "," & ConcNro & _
                         "," & tpanro & _
                         "," & Monto & _
                         "," & CLng(TieneVigencia) & _
                         "," & PeriodoDesde & _
                         "," & PeriodoHasta
                StrSql = StrSql & "," & TipoMotivo & _
                ",'" & Motivo & "'"
                StrSql = StrSql & " )"
            End If
            objConn.Execute StrSql, , adExecuteNoRecords
            'Flog.Writeline Espacios(Tabulador * 1) & "Novedad insertada "
            Texto = "Novedad insertada "
            Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
        End If
    End If
  Else 'Tiene Vigencia
    'A partir de la V4.50
    'Busco si existe una misma novedad s/vigencia o c/vigencia diferente
    ExisteNovedad = False
    
    '*******************************************
    'VER QUE PASA CUANDO TENGO MAS DE 1 CARGADA
    '*******************************************
    StrSql = "SELECT * FROM novemp WHERE "
    StrSql = StrSql & " concnro = " & ConcNro
    StrSql = StrSql & " AND tpanro = " & tpanro
    StrSql = StrSql & " AND empleado = " & Tercero
    
    
    StrSql = StrSql & " AND ("
    If EsNulo(FechaHasta) = False Then
    
    StrSql = StrSql & "((nedesde <= " & ConvFecha(FechaDesde) & " AND nedesde <= " & ConvFecha(FechaHasta) & " AND (nehasta >= " & ConvFecha(FechaDesde) & " OR nehasta IS NULL )) )"
    StrSql = StrSql & " OR ((nedesde >= " & ConvFecha(FechaDesde) & " AND nedesde <= " & ConvFecha(FechaHasta) & " AND (nehasta >= " & ConvFecha(FechaDesde) & " OR nehasta IS NULL)))"
    
    '    StrSql = StrSql & " (nedesde <= " & ConvFecha(FechaHasta) & ")"
        'StrSql = StrSql & " AND (nehasta >= " & ConvFecha(FechaHasta)
        'StrSql = StrSql & " AND (nedesde <= " & ConvFecha(FechaDesde) & " AND nehasta is null))"
    Else
    StrSql = StrSql & "((nedesde <= " & ConvFecha(FechaDesde) & " AND nedesde <= " & ConvFecha(FechaDesde) & " AND (nehasta >= " & ConvFecha(FechaDesde) & " OR nehasta IS NULL )) )"
    StrSql = StrSql & " OR ((nedesde >= " & ConvFecha(FechaDesde) & " AND nedesde <= " & ConvFecha(FechaDesde) & " AND (nehasta >= " & ConvFecha(FechaDesde) & " OR nehasta IS NULL)))"
        'StrSql = StrSql & " AND (nedesde >= " & ConvFecha(FechaHasta) & " AND nehasta is null)"
    '    StrSql = StrSql & " AND (nedesde <= " & ConvFecha(FechaHasta) & ")"
    End If
    StrSql = StrSql & ")"
    StrSql = StrSql & " ORDER BY nehasta ASC "
    
    OpenRecordset StrSql, rs_NovEmp2
    If Not rs_NovEmp2.EOF Then
        'Flog.WRITELINE "Existe una novedad"
        ExisteNovedad = True
        Do While Not rs_NovEmp2.EOF
            InsertoNovedad = False
            StrSqlAux = ""
            '***********************************************
            '***********************************************
            '  |__________#
            '  |__________|
            If EsNulo(rs_NovEmp2!nehasta) = True And EsNulo(FechaHasta) = False Then
            'Si la FechaHastaAux es nulo, debo cerrar vigencia
                 If CDate(rs_NovEmp2!nedesde) = CDate(FechaDesde) Then
                     'Actualizo novedad, y cierro vigencia.
                     StrSqlAux = ", nehasta=" & ConvFecha(FechaHasta)
                     Exit Do
                 End If
            End If
            '***********************************************
            '***********************************************
            If EsNulo(rs_NovEmp2!nehasta) = False Then
                If CDate(rs_NovEmp2!nehasta) < CDate(FechaDesde) Then
                    '  |__________|
                    '              |__________|
                    'Inserto nuevo registro.
                    ExisteNovedad = False
                    InsertoNovedad = True
                    Exit Do
                End If
            End If
            '***********************************************
            '***********************************************
            If EsNulo(rs_NovEmp2!nehasta) = True Then
                rs_NovEmp2.MoveNext
                'If Not rs_NovEmp2.EOF Then
                If Not rs_NovEmp2.EOF And EsNulo(FechaHasta) = False Then
                    If CDate(rs_NovEmp2!nehasta) > CDate(FechaHasta) Then
                        '            |__________|
                        '|__________|
                        'Inserto nuevo registro.
                        ExisteNovedad = False
                        InsertoNovedad = True
                        Exit Do
                    End If
                    'rs_NovEmp2.MovePrevious
                ElseIf EsNulo(FechaHasta) = False Then
                    rs_NovEmp2.MovePrevious
                    'Y ahora que hago?
                    If CDate(rs_NovEmp2!nedesde) > CDate(FechaHasta) Then
                        '            |__________|
                        '|__________|
                        'Inserto nuevo registro.
                        ExisteNovedad = False
                        InsertoNovedad = True
                        Exit Do
                    End If
                Else
                    rs_NovEmp2.MovePrevious
                End If
            End If
            '***********************************************
            '***********************************************
            rs_NovEmp2.MoveNext
        Loop
        '-------------------------------------------
        'V4.54 | Guardo fechas aux. de la licencia existente
        '____________________________________________
        If Not rs_NovEmp2.EOF Then
            FechaDesdeAux = rs_NovEmp2!nedesde
            If EsNulo(rs_NovEmp2!nehasta) Then
                FechaHastaAux = ""
            Else
                FechaHastaAux = rs_NovEmp2!nehasta
            End If
        Else
            FechaDesdeAux = FechaDesde
            FechaHastaAux = FechaHasta
        End If
        '-------------------------------------------
    Else
        FechaDesdeAux = FechaDesde
        FechaHastaAux = FechaHasta
    End If
    rs_NovEmp2.Close
   '---------------------------------------------------------
   '---------------------------------------------------------
   '---------------------------------------------------------
   'VALIDO FECHAS | DECIDO DE QUE FORMA ACTUALIZO / INSERTO
'   InsertoNovedad = False
'   StrSqlAux = ""
''  |__________#
''  |__________|
'   If EsNulo(FechaHastaAux) = True And EsNulo(FechaHasta) = False Then
'   'Si la FechaHastaAux es nulo, debo cerrar vigencia
'        If CDate(FechaDesdeAux) = CDate(FechaDesde) Then
'            StrSqlAux = ", nehasta=" & ConvFecha(FechaHasta)
'            'Actualizo novedad, y cierro vigencia.
'        End If
'   End If
   

'   If EsNulo(FechaHastaAux) = False Then
'        If CDate(FechaHastaAux) < CDate(FechaDesde) Then
'            '  |__________|
'            '              |__________|
'            'Inserto nuevo registro.
'            ExisteNovedad = False
'            InsertoNovedad = True
'        End If
'        '***********************************************
'        'If CDate(FechaHastaAux) > CDate(FechaHasta) Then
'            '            |__________|
'            '|__________|
'            'Inserto nuevo registro.
'        'End If
'
'
'   End If
   
   '---------------------------------------------------------
   '---------------------------------------------------------
   '---------------------------------------------------------
   
   
   '_______________________________________________________________________
    'Reviso que no se pise
    StrSql = "SELECT * FROM novemp WHERE "
    StrSql = StrSql & " concnro = " & ConcNro
    StrSql = StrSql & " AND tpanro = " & tpanro
    StrSql = StrSql & " AND empleado = " & Tercero
    'StrSql = StrSql & " AND (nevigencia = 0 "
    StrSql = StrSql & " AND nevigencia = -1 "
    If Not EsNulo(FechaHastaAux) Then
        StrSql = StrSql & " AND nedesde = " & ConvFecha(FechaDesdeAux)
        StrSql = StrSql & " AND nehasta = " & ConvFecha(FechaHastaAux)
    Else
        StrSql = StrSql & " AND nedesde = " & ConvFecha(FechaDesdeAux)
        StrSql = StrSql & " AND nehasta is null"
    End If
    
    'Se comento con V4.54
'    If Not EsNulo(FechaHasta) Then
''        StrSql = StrSql & " AND (nedesde <= " & ConvFecha(FechaHasta)
''        StrSql = StrSql & " AND nehasta >= " & ConvFecha(FechaDesde) & ")"
''        StrSql = StrSql & " OR  (nedesde <= " & ConvFecha(FechaHasta)
''        StrSql = StrSql & " AND nehasta is null )))"
'        StrSql = StrSql & " AND nedesde = " & ConvFecha(FechaDesde)
'        StrSql = StrSql & " AND nehasta = " & ConvFecha(FechaHasta)
'    Else
'        StrSql = StrSql & " AND nedesde = " & ConvFecha(FechaDesde)
'        StrSql = StrSql & " AND nehasta is null"
'    End If
    If rs_NovEmp.State = adStateOpen Then rs_NovEmp.Close
    OpenRecordset StrSql, rs_NovEmp
    
    'If Not rs_NovEmp.EOF Then
    If Not rs_NovEmp.EOF And InsertoNovedad = False Then ' 4.54
    
        'Existe/n novedad/es con vigencia ==>
        Select Case CInt(AccionNovedad)
            Case -1: 'Actualizo la Novedad
                If Not EsRetroactivo Then
                    StrSql = "UPDATE novemp SET nevalor = " & Monto
                    StrSql = StrSql & " , tipmotnro =  " & TipoMotivo
                    StrSql = StrSql & " , motivo =  '" & Motivo & "'"
                    '4.54 ---
                    StrSql = StrSql & StrSqlAux
                    '-------
                    
                    StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                Else
                    StrSql = "UPDATE novemp SET nevalor = " & Monto & _
                             " , nepliqdesde =  " & PeriodoDesde & _
                             " , nepliqhasta =  " & PeriodoHasta
                    StrSql = StrSql & " , tipmotnro =  " & TipoMotivo & _
                    " , motivo =  '" & Motivo & "'"
                    StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                End If
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = "Novedad Actualizada "
                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
            Case 0: 'Mantiene Novedades
                Texto = "No se insertó la novedad. Ya existe y no se pisa."
                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
            Case 1: 'Suma Novedades
                If Not EsRetroactivo Then
                    StrSql = "UPDATE novemp SET nevalor = nevalor + " & Monto
                    StrSql = StrSql & " , tipmotnro =  " & TipoMotivo
                    StrSql = StrSql & " , motivo =  '" & Motivo & "'"
                    StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                Else
                    StrSql = "UPDATE novemp SET nevalor = nevalor + " & Monto & _
                             " , nepliqdesde =  " & PeriodoDesde & _
                             " , nepliqhasta =  " & PeriodoHasta
                    StrSql = StrSql & " , tipmotnro =  " & TipoMotivo & _
                    " , motivo =  '" & Motivo & "'"
                    StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                End If
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = "Novedad Sumada "
                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
        End Select
        
    Else
        
        If ExisteNovedad = True Then 'V4.50
                Texto = "No se insertó la novedad. Ya existe y no se pisa."
                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
        Else
                If Not EsRetroactivo Then
                    StrSql = "INSERT INTO novemp ("
                    StrSql = StrSql & "empleado,concnro,tpanro,nevalor,nevigencia,nedesde"
                    If Not EsNulo(FechaHasta) Then
                        StrSql = StrSql & ",nehasta"
                    End If
                    StrSql = StrSql & ",tipmotnro,motivo"
                    StrSql = StrSql & ") VALUES (" & Tercero
                    StrSql = StrSql & "," & ConcNro
                    StrSql = StrSql & "," & tpanro
                    StrSql = StrSql & "," & Monto
                    StrSql = StrSql & ",-1"
                    StrSql = StrSql & "," & ConvFecha(FechaDesde)
                    If Not EsNulo(FechaHasta) Then
                        StrSql = StrSql & "," & ConvFecha(FechaHasta)
                    End If
                    StrSql = StrSql & "," & TipoMotivo & _
                    ",'" & Motivo & "'"
                    StrSql = StrSql & " )"
                Else
                    StrSql = "INSERT INTO novemp ("
                    StrSql = StrSql & "empleado,concnro,tpanro,nevalor,nevigencia,nedesde"
                    If Not EsNulo(FechaHasta) Then
                        StrSql = StrSql & ",nehasta"
                    End If
                    StrSql = StrSql & ",nepliqdesde,nepliqhasta"
                    StrSql = StrSql & ",tipmotnro,motivo"
                    StrSql = StrSql & ") VALUES (" & Tercero
                    StrSql = StrSql & "," & ConcNro
                    StrSql = StrSql & "," & tpanro
                    StrSql = StrSql & "," & Monto
                    StrSql = StrSql & ",-1"
                    StrSql = StrSql & "," & ConvFecha(FechaDesde)
                    If Not EsNulo(FechaHasta) Then
                        StrSql = StrSql & "," & ConvFecha(FechaHasta)
                    End If
                    StrSql = StrSql & "," & PeriodoDesde
                    StrSql = StrSql & "," & PeriodoHasta
                    StrSql = StrSql & "," & TipoMotivo & _
                    ",'" & Motivo & "'"
                    StrSql = StrSql & " )"
                End If
                objConn.Execute StrSql, , adExecuteNoRecords
                'Flog.Writeline Espacios(Tabulador * 1) & "Novedad insertada "
                Texto = "Novedad insertada "
                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
            End If
        
        
        End If
    
    

  End If







Fin:
'Cierro todo y libero
If rs_NovEmp.State = adStateOpen Then rs_NovEmp.Close
If rs_Empleado.State = adStateOpen Then rs_Empleado.Close
If rs_Concepto.State = adStateOpen Then rs_Concepto.Close
If rs_TipoPar.State = adStateOpen Then rs_TipoPar.Close
If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
If rs_con_for_tpa.State = adStateOpen Then rs_con_for_tpa.Close

Set rs_NovEmp = Nothing
Set rs_Empleado = Nothing
Set rs_Concepto = Nothing
Set rs_TipoPar = Nothing
Set rs_Periodo = Nothing
Set rs_con_for_tpa = Nothing
Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    Texto = Err.Description
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(1, 7)
    GoTo Fin
End Sub


Public Sub LineaModelo_355(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Importacion de movimientos de asignación horaria
' Autor      : Margiotta, Emanuel
' Fecha      : 21/12/2012
' Ultima Mod.:
' ---------------------------------------------------------------------------------------------
Dim Texto As String
Dim Arr_Datos
Dim bpronro As Long

Dim Ternro As Integer
Dim fechor As Date
Dim fecinidia As Date
Dim fecfindia As Date
Dim horini As String
Dim horfin As String
Dim desmin As Long
Dim fecDesde As Date
Dim fecHasta As Date
Dim l_rs As New ADODB.Recordset


'Formato: Empleado | Fecha de trabajo | Fecha Inicio día | Fecha Fin día | hora Entrada | hora Salida | (Op)Horas de descanso | Fecha Desde | Fecha Hasta
On Error GoTo CE:
    Texto = "Procesando linea " & strLinea
    Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    NroColumna = NroColumna + 1
    Tabs = 1
    
    Arr_Datos = Split(strLinea, separador)
    
    'Valida si falta algun campo. Campos obligatorios 8, Opcional 1
    If UBound(Arr_Datos) < 8 Then
        Texto = "Error en formato de Archivo "
        Call Escribir_Log("FLOGE", NroLinea, 1, Texto, Tabs, strLinea)
        Call InsertaError(1, 2)
        GoTo CE
    Else
        bpronro = NroProcesoBatch
        
        If Not IsNumeric(Arr_Datos(0)) Then
            Texto = "El Formato de la fecha de trabajo es incorrecta"
            Call Escribir_Log("floge", NroLinea, 1, Texto, Tabs, strLinea)
            Call InsertaError(1, 4)
            GoTo CE
        Else
            StrSql = "SELECT ternro FROM empleado WHERE empleg= " & Arr_Datos(0)
            OpenRecordset StrSql, l_rs
            If Not l_rs.EOF Then
                Ternro = l_rs("ternro")
            Else
                Flog.writeline ("Nro. de Legajo no existe")
                GoTo CE
            End If
        End If
        
        If Not IsDate(Arr_Datos(1)) Then
            Texto = "El Formato de la fecha de trabajo es incorrecta"
            Call Escribir_Log("floge", NroLinea, 1, Texto, Tabs, strLinea)
            Call InsertaError(1, 4)
            GoTo CE
        Else
            fechor = Arr_Datos(1)
        End If

        If Not IsDate(Arr_Datos(2)) Then
            Texto = "El formato de la fecha de inicio del día es incorrecta"
            Call Escribir_Log("floge", NroLinea, 1, Texto, Tabs, strLinea)
            Call InsertaError(1, 4)
            GoTo CE
        Else
            fecinidia = Arr_Datos(2)
        End If

        If Not IsDate(Arr_Datos(3)) Then
            Texto = "El formato de la fecha de fin del día es incorrecta"
            Call Escribir_Log("floge", NroLinea, 1, Texto, Tabs, strLinea)
            Call InsertaError(1, 4)
            GoTo CE
        Else
            fecfindia = Arr_Datos(3)
        End If

        If Len(Arr_Datos(4)) <> 4 Then
            Texto = "El Formato de la hora de inicio es incorrecto"
            Call Escribir_Log("floge", NroLinea, 1, Texto, Tabs, strLinea)
            Call InsertaError(1, 1)
            GoTo CE
        Else
            horini = Arr_Datos(4)
        End If

        If Len(Arr_Datos(5)) <> 4 Then
            Texto = "El Formato de la hora de finalización es incorrecto"
            Call Escribir_Log("floge", NroLinea, 1, Texto, Tabs, strLinea)
            Call InsertaError(1, 1)
            GoTo CE
        Else
            horfin = Arr_Datos(5)
        End If

        If Arr_Datos(6) = "" Then
            desmin = 0
        Else
            If Not IsNumeric(Arr_Datos(6)) Then
                Texto = "El Formato de la hora de finalización es incorrecto"
                Call Escribir_Log("floge", NroLinea, 1, Texto, Tabs, strLinea)
                Call InsertaError(1, 3)
                GoTo CE
            Else
                desmin = Arr_Datos(6)
            End If
        End If

        If Not IsDate(Arr_Datos(7)) Then
            Texto = "El formato de la fecha desde es incorrecto"
            Call Escribir_Log("floge", NroLinea, 1, Texto, Tabs, strLinea)
            Call InsertaError(1, 4)
            GoTo CE
        Else
            fecDesde = Arr_Datos(7)
        End If

        If Not IsDate(Arr_Datos(8)) Then
            Texto = "El formato de la fecha hasta es incorrecto"
            Call Escribir_Log("floge", NroLinea, 1, Texto, Tabs, strLinea)
            Call InsertaError(1, 4)
            GoTo CE
        Else
            fecHasta = Arr_Datos(8)
        End If
        
        'Si recupero los datos, los Inserto en WC_MOV_HORARIOS
        StrSql = "INSERT INTO WC_MOV_HORARIOS (bpronro,idtarjeta,tiptarnro,ternro,fechor,fecinidia,fecfindia,horini,horfin,desmin,legautor,manual,fecdesde,fechasta)" & _
                " VALUES(" & bpronro & ",0,0," & Ternro & "," & ConvFecha(fechor) & "," & ConvFecha(fecinidia) & "," & ConvFecha(fecfindia) & _
                ",'" & horini & "','" & horfin & "'," & desmin & ",0,-1," & ConvFecha(fecDesde) & "," & ConvFecha(fecHasta) & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = "Línea N° " & NroLinea & " Insertada"
        Call Escribir_Log("flogp", NroLinea, NroColumna, Texto, Tabs, strLinea)

    End If
    GoTo DatosOk
CE:
    HuboError = True
    Exit Sub
DatosOk:

    
 
End Sub

Public Sub LineaModelo_357(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion:  Interface Distribución Contable
'               Inserta en la tabla imputaciones
' Autor      : Deluchi Ezequiel
'              El formato es:
'                   Formato 1
'                       Legajo; Cod Modelo Asiento; TE1; Estr1; TE2; Estr2; TE3; Estr3; Porcentaje; Fecha Desde; Fecha Hasta
'                       (Los TE y Estr son nombres)
' Fecha      : 18/02/2013
' Ultima Mod.:
' ---------------------------------------------------------------------------------------------

Dim pos1 As Long
Dim pos2 As Long

Dim Tercero As Long
Dim NroLegajo As Long
Dim Apellido As String
Dim nombre As String

Dim Aux As String

Dim Anio As Integer
Dim DiasTrab As Integer
Dim Ant_a As Integer
Dim Ant_d As Integer
Dim Porc As Double
Dim Tar As Long
Dim Tar_Ant As Long
Dim Diferencia As Long
Dim campos
Dim CodModelo As Long
Dim te1desc As String
Dim estr1desc As String
Dim te1 As Long
Dim estr1 As Long
Dim te2desc As String
Dim estr2desc As String
Dim te2 As Long
Dim estr2 As Long
Dim te3desc As String
Dim estr3desc As String
Dim te3 As Long
Dim estr3 As Long
Dim Porcent As Double
Dim errnro As Long
Dim Suma As Double
Dim Inserto_estr1 As Boolean
Dim Inserto_estr2 As Boolean
Dim Inserto_estr3 As Boolean
Dim MasinivTernro1 As Long
Dim MasinivTernro2 As Long
Dim MasinivTernro3 As Long
Dim FechaHasta As String
Dim FechaDesde As String
Dim periodoLiqDesde As Long
Dim periodoLiqHasta As Long

Dim rs_Empleado As New ADODB.Recordset
Dim rs As New ADODB.Recordset

' El formato es:
' Legajo; Cod Modelo Asiento; TE1; Estr1; TE2; Estr2; TE3; Estr3; Porcentaje
    
    On Error GoTo Manejador_De_Error
    Tabs = 1
    te1 = 0
    estr1 = 0
    te2 = 0
    estr2 = 0
    te3 = 0
    estr3 = 0
    MasinivTernro1 = 0
    MasinivTernro2 = 0
    MasinivTernro3 = 0
    
    Inserto_estr1 = False
    Inserto_estr2 = False
    Inserto_estr3 = False
    
    Texto = " "
    Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Texto = "Procesando linea " & strLinea
    Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    
    campos = Split(strLinea, separador)
    
    
    '==========================================================================================================
    'Nro de Legajo
    '==========================================================================================================
    NroColumna = NroColumna + 1
    Aux = campos(0)
    If IsNumeric(Aux) Then
        NroLegajo = Aux
    Else
        Texto = ": " & "El legajo no es numerico "
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Texto = " "
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        HuboError = True
        Exit Sub
    End If
    
    'Que exista el legajo
    StrSql = "SELECT ternro, empleg, terape, ternom FROM empleado where empleg = " & NroLegajo
    OpenRecordset StrSql, rs_Empleado
    If rs_Empleado.EOF Then
        Texto = ": " & "No se encontro el legajo " & NroLegajo
        NroColumna = 1
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        HuboError = True
        Exit Sub
    Else
        Tercero = rs_Empleado!Ternro
        Apellido = rs_Empleado!terape
        nombre = rs_Empleado!ternom
        Flog.writeline "Empleado encontrado."
    End If
    
    
    '==========================================================================================================
    'Codigo Modelo Asiento
    '==========================================================================================================
    NroColumna = NroColumna + 1
    Aux = campos(1)
    StrSql = " SELECT masinro, masidesc, masinivternro1 , masinivternro2, masinivternro3 " & _
            " FROM mod_asiento" & _
            " WHERE masinro = " & Aux & _
            " ORDER BY masidesc"
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        CodModelo = Aux
        MasinivTernro1 = IIf(EsNulo(rs!MasinivTernro1), 0, rs!MasinivTernro1)
        MasinivTernro2 = IIf(EsNulo(rs!MasinivTernro2), 0, rs!MasinivTernro2)
        MasinivTernro3 = IIf(EsNulo(rs!MasinivTernro3), 0, rs!MasinivTernro3)
        Flog.writeline "Modelo de Asiento encontrado."
    Else
        Texto = ": " & "El código de modelo de asiento " & Aux & " no existe en el sistema "
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        HuboError = True
        Exit Sub
    End If
    
    
    '==========================================================================================================
    'TE1
    '==========================================================================================================
    NroColumna = NroColumna + 1
    te1desc = campos(2)
    estr1desc = campos(3)
    Campoetiqueta = campos(3)
    te1desc = EliminarCHInvalidosII(te1desc, 1, "")
    estr1desc = EliminarCHInvalidosII(estr1desc, 1, "")
    
    ' Validacion y Creacion del Centro de Costo
    If te1desc <> "" Then
        
        'Validacion del tipo de estructura contra la base
        Call GetTipoEstrucNro(te1desc, te1)
        If te1 = 0 Then
            estr1 = 0
            Texto = ": " & "El tipo de estructura " & te1desc & " no existe en el sistema "
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            Exit Sub
        End If
        
        'Controlo que sea el mismo tipo de estructura que el configurado en el modelo
        If te1 <> MasinivTernro1 Then
            Texto = ": " & "El tipo de estructura " & te1desc & " no pertenece al modelo " & CodModelo
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            Exit Sub
        End If
        
        'Busqueda/Creacion de estructura
        Call ValidaEstructura(te1, estr1desc, estr1, Inserto_estr1)
        If Inserto_estr1 Then
            Texto = ": " & "Se creo la estructura '" & estr1desc & "'"
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        End If
        
    Else
        te1 = 0
        estr1 = 0
    End If
    
    
    '==========================================================================================================
    'TE2
    '==========================================================================================================
    NroColumna = NroColumna + 1
    te2desc = campos(4)
    estr2desc = campos(5)
    Campoetiqueta = campos(5)
    te2desc = EliminarCHInvalidosII(te2desc, 1, "")
    estr2desc = EliminarCHInvalidosII(estr2desc, 1, "")
    
    
    ' Validacion y Creacion del Centro de Costo
    If te2desc <> "" Then
        
        'Validacion del tipo de estructura contra la base
        Call GetTipoEstrucNro(te2desc, te2)
        If te2 = 0 Then
            estr2 = 0
            Texto = ": " & "El tipo de estructura " & te2desc & " no existe en el sistema "
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            Exit Sub
        End If
        
        'Controlo que sea el mismo tipo de estructura que el configurado en el modelo
        If te2 <> MasinivTernro2 Then
            Texto = ": " & "El tipo de estructura " & te2desc & " no pertenece al modelo " & CodModelo
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            Exit Sub
        End If
            
        'Busqueda/Creacion de estructura
        Call ValidaEstructura(te2, estr2desc, estr2, Inserto_estr2)
        If Inserto_estr2 Then
            Texto = ": " & "Se creo la estructura '" & estr2desc & "'"
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        End If
        
    Else
        te2 = 0
        estr2 = 0
    End If
    
    
    '==========================================================================================================
    'TE3
    '==========================================================================================================
    NroColumna = NroColumna + 1
    te3desc = campos(6)
    estr3desc = campos(7)
    Campoetiqueta = campos(7)
    te3desc = EliminarCHInvalidosII(te3desc, 1, "")
    estr3desc = EliminarCHInvalidosII(estr3desc, 1, "")
    
    ' Validacion y Creacion del Centro de Costo
    If te3desc <> "" Then
        
        'Validacion del tipo de estructura contra la base
        Call GetTipoEstrucNro(te3desc, te3)
        If te3 = 0 Then
            estr3 = 0
            Texto = ": " & "El tipo de estructura " & te3desc & " no existe en el sistema "
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            Exit Sub
        End If
        
        'Controlo que sea el mismo tipo de estructura que el configurado en el modelo
        If te3 <> MasinivTernro3 Then
            Texto = ": " & "El tipo de estructura " & te3desc & " no pertenece al modelo " & CodModelo
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            Exit Sub
        End If
            
        'Busqueda/Creacion de estructura
        Call ValidaEstructura(te3, estr3desc, estr3, Inserto_estr3)
        If Inserto_estr3 Then
            Texto = ": " & "Se creo la estructura '" & estr3desc & "'"
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        End If
        
    Else
        te3 = 0
        estr3 = 0
    End If
    
    If te1 = 0 And te2 = 0 And te3 = 0 Then
        Texto = ": " & "Ningun tipo de estructura es valido "
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        HuboError = True
        Exit Sub
    End If
    
    
    '==========================================================================================================
    'Porcentaje
    '==========================================================================================================
    NroColumna = NroColumna + 1
    Porcent = Replace(campos(8), ",", ".")
    If EsNulo(Porcent) Then
        Porcent = 0
    Else
        If Porcent < 0 Then
            Porcent = 0
        Else
            If Porcent > 100 Then
                Porcent = 100
            End If
        End If
    End If
    

    '==========================================================================================================
    'Fecha Desde
    '==========================================================================================================
    NroColumna = NroColumna + 1
    FechaDesde = campos(9)
    If FechaDesde = "" Or UCase(FechaDesde) = "N/A" Then
        Texto = ": Fecha Desde Obligatoria."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        HuboError = True
        Exit Sub
    End If
    
    '==========================================================================================================
    'Fecha Hasta
    '==========================================================================================================
    NroColumna = NroColumna + 1
    FechaHasta = campos(10)
    If FechaHasta = "" Or UCase(FechaHasta) = "N/A" Then
        FechaHasta = ""
    Else
        '==========================================================================================================
        'Valido que la las fechas de los periodos sea correcto
        '==========================================================================================================
        If CDate(FechaDesde) > CDate(FechaHasta) Then
            Texto = ": Periodo Desde es mayor que el Período Hasta."
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            HuboError = True
            Exit Sub
        End If
    End If
    
    '==========================================================================================================
    'Calculo el Porcentaje ya cargado por el proceso dentro de la vigencia
    '==========================================================================================================
    Suma = 0
    StrSql = " SELECT SUM(porcentaje) suma FROM imputacion " & _
             " INNER JOIN periodo desde ON  desde.pliqnro= imputacion.pliqdesde " & _
             " LEFT JOIN periodo hasta ON hasta.pliqnro = imputacion.pliqhasta " & _
             " WHERE ternro = " & Tercero & " AND masinro = " & CodModelo
    If FechaHasta <> "NULL" Then
        StrSql = StrSql & " AND ((desde.pliqdesde <= " & ConvFecha(FechaDesde) & " AND (hasta.pliqhasta is null or hasta.pliqhasta >= " & ConvFecha(FechaHasta) & _
                          " OR hasta.pliqhasta >= " & ConvFecha(FechaDesde) & ")) OR (desde.pliqdesde >= " & ConvFecha(FechaDesde) & " AND (desde.pliqdesde <= " & ConvFecha(FechaHasta) & ")) )"
    Else
        StrSql = StrSql & " AND (desde.pliqdesde <= " & ConvFecha(FechaDesde) & " AND (hasta.pliqhasta is null or hasta.pliqhasta >= " & ConvFecha(FechaDesde) & "))" & _
                          " OR (desde.pliqdesde >= " & ConvFecha(FechaDesde) & " AND (hasta.pliqhasta is null or hasta.pliqhasta >= " & ConvFecha(FechaDesde) & ")))"
    End If
    StrSql = StrSql & " AND bpronro = " & NroProcesoBatch
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        If Not EsNulo(rs!Suma) Then
            Suma = CDbl(rs!Suma)
        End If
    End If
    
    If (Suma + Porcent) > 100 Then
        Texto = ": " & " el porcentaje acumula mas de 100%"
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        HuboError = True
        Exit Sub
    End If
    
    '==========================================================================================================
    'Busco el periodo de liquidacion a partir de la fecha Desde
    '==========================================================================================================
    StrSql = " SELECT pliqnro FROM periodo " & _
             " WHERE pliqdesde <= " & ConvFecha(FechaDesde) & " AND pliqhasta >= " & ConvFecha(FechaDesde)
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        pliqdesde = rs!Pliqnro
    Else
        Texto = ": Periodo de liquidacion Desde no Existente."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        HuboError = True
        Exit Sub
    End If
    
    '==========================================================================================================
    'Busco el periodo de liquidacion a partir de la fecha Hasta
    '==========================================================================================================
    If FechaHasta <> "" Then
        StrSql = " SELECT pliqnro FROM periodo " & _
                 " WHERE pliqdesde <= " & ConvFecha(FechaHasta) & " AND pliqhasta >= " & ConvFecha(FechaHasta)
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            pliqhasta = rs!Pliqnro
        Else
            Texto = ": Periodo de liquidacion hasta no Existente."
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            HuboError = True
            Exit Sub
        End If
    Else
        FechaHasta = "NULL"
    End If
    
    '==========================================================================================================
    'Verifico si existe la imputacion y chequeo las vigencias
    '==========================================================================================================
    StrSql = " SELECT impnro, desde.pliqdesde, hasta.pliqhasta FROM imputacion " & _
             " INNER JOIN periodo desde ON  desde.pliqnro= imputacion.pliqdesde " & _
             " LEFT JOIN periodo hasta ON hasta.pliqnro = imputacion.pliqhasta " & _
             " WHERE Ternro = " & Tercero & " AND masinro = " & CodModelo & _
             " AND tenro = " & te1 & " AND estrnro = " & estr1 & _
             " AND tenro2 = " & te2 & " AND estrnro2 = " & estr2 & " AND tenro3 = " & te3 & " AND estrnro3 = " & estr3
             
    If FechaHasta <> "NULL" Then
        StrSql = StrSql & " AND ((desde.pliqdesde <= " & ConvFecha(FechaDesde) & " AND (hasta.pliqhasta is null or hasta.pliqhasta >= " & ConvFecha(FechaHasta) & _
                          " OR hasta.pliqhasta >= " & ConvFecha(FechaDesde) & ")) OR (desde.pliqdesde >= " & ConvFecha(FechaDesde) & " AND (desde.pliqdesde <= " & ConvFecha(FechaHasta) & ")) )"
    Else
        StrSql = StrSql & " AND (desde.pliqdesde <= " & ConvFecha(FechaDesde) & " AND (hasta.pliqhasta is null or hasta.pliqhasta >= " & ConvFecha(FechaDesde) & "))" & _
                          " OR (desde.pliqdesde >= " & ConvFecha(FechaDesde) & " AND (hasta.pliqhasta is null or hasta.pliqhasta >= " & ConvFecha(FechaDesde) & ")))"
    End If
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        '==========================================================================================================
        'Existe alguna imputacion con vigencia activa con la que se quiere cargar
        '==========================================================================================================
        Texto = ": Ya Existente una imputacion vigente para el modelo de asiento."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        HuboError = True
        Exit Sub
    Else
        '==========================================================================================================
        'Inserto la distribucion
        '==========================================================================================================
        StrSql = "INSERT INTO imputacion (ternro, masinro, porcentaje"
        StrSql = StrSql & " , tenro, estrnro"
        StrSql = StrSql & " , tenro2, estrnro2"
        StrSql = StrSql & " , tenro3, estrnro3, bpronro, imporinro, pliqdesde, pliqhasta"
        StrSql = StrSql & " ) VALUES (" & Tercero & "," & CodModelo & ", " & Porcent
        If te1 > 0 And estr1 > 0 Then
            StrSql = StrSql & " ," & te1 & "," & estr1
        Else
            StrSql = StrSql & " ,0,0"
        End If
        If te2 > 0 And estr2 > 0 Then
            StrSql = StrSql & " ," & te2 & "," & estr2
        Else
            StrSql = StrSql & " ,0,0"
        End If
        If te3 > 0 And estr3 > 0 Then
            StrSql = StrSql & " ," & te3 & "," & estr3
        Else
            StrSql = StrSql & " ,0,0"
        End If
        StrSql = StrSql & " ," & NroProcesoBatch & ",4," & pliqdesde & "," & pliqhasta & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = "Imputación Insertada "
        Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
    End If
    
Fin:
'Cierro todo y libero
If rs_Empleado.State = adStateOpen Then rs_Empleado.Close
If rs.State = adStateOpen Then rs.Close

Set rs_Empleado = Nothing
Set rs = Nothing
Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    Texto = Err.Description
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    GoTo Fin
End Sub
Public Sub LineaModelo_359(ByVal strLinea As String)
'===================================================
'Descripcion :
'Autor       :
'Fecha       :
'Formato     :

'===================================================
    Dim datos() As String
    Dim Ternro As Long
    Dim NroDom As Long
    Dim a As Long
    Dim Xconst As Long
    Dim ActPasos As Boolean
    Dim tempString As String
    Dim EstPosNro As Long
    
    Dim rs_Ter As New ADODB.Recordset
    Dim rs_Aux As New ADODB.Recordset
    Dim I As Long
    Dim Empresa
    
    Flog.writeline "procesando linea " & strLinea
    
    'Si ocurre un error antes de insertar el tercero se aborta el postulante
    On Error GoTo Manejador_De_Error:
    
    datos = Split("0" & separador & strLinea, separador)
    For I = 0 To UBound(datos)
        datos(I) = Trim(datos(I))
    Next I
    
    Flog.writeline datos(1)
    Flog.writeline datos(78)
    Empresa = datos(78)
    
    '--Documentos--
    datos(1) = TraerCodTipoDocumento(CStr(datos(1)))  'tipoDocumento
    datos(2) = StrToStr(CStr(datos(2)), 30) 'numeroDocumento
    datos(2) = Replace(datos(2), ".", "") 'elimino puntos y comas
    datos(2) = Replace(datos(2), ",", "")
    
    '--Tercero
    datos(3) = StrToStr(datos(3), 25) 'ternom
    datos(4) = StrToStr(datos(4), 25)  'ternom2
    datos(5) = StrToStr(datos(5), 25) 'terape
    datos(6) = StrToStr(datos(6), 25) 'terape2
    datos(7) = ConvFecha(CDate(datos(7))) 'terfecnac
    'If UCase(Datos(8)) = "MASCULINO" Then Datos(8) = -1 Else Datos(8) = 0 'tersex
    If (UCase(datos(8)) = "M") Or (UCase(datos(8)) = "-1") Or (UCase(datos(8)) = "MASCULINO") Then
        datos(8) = -1
    Else
        datos(8) = 0
    End If

    datos(23) = StrToStr(datos(23), 100) ' teremail
    datos(13) = TraerCodNacionalidad(CStr(datos(13))) ' nacionalnro
    datos(9) = StrToStr(TraerCodEstadoCivil(CStr(datos(9))), 8) 'estcivnro
    If datos(14) = "" Then
        datos(14) = "''"
    Else
        datos(14) = ConvFecha(CDate(datos(14))) 'fechaingresopais
    End If
    datos(11) = StrToStr(datos(11), 25) 'tercasape
    If datos(10) = "" Then
        datos(10) = "NULL"
    Else
        datos(10) = ConvFecha(CDate(datos(10))) 'terfecestciv
    End If
    datos(12) = TraerCodPais(CStr(datos(12))) 'paisnro


    'FGZ - 06/04/2005
    StrSql = "SELECT * FROM ter_doc  "
    StrSql = StrSql & " WHERE ter_doc.tidnro = " & datos(1)
    StrSql = StrSql & " AND nrodoc = '" & datos(2) & "'"
    OpenRecordset StrSql, rs_Ter

    If rs_Ter.EOF Then
        StrSql = " INSERT INTO tercero (ternom, ternom2, terape, terape2, terfecnac, tersex, teremail, nacionalnro, estcivnro, terfecing, tercasape,terfecestciv, paisnro ) VALUES ("
        StrSql = StrSql & "'" & datos(3) & "'"      'ternom
        StrSql = StrSql & ",'" & datos(4) & "'"     'ternom2
        StrSql = StrSql & ",'" & datos(5) & "'"      'terape
        StrSql = StrSql & ",'" & datos(6) & "'"     'terape2
        StrSql = StrSql & "," & datos(7)            'terfecnac
        StrSql = StrSql & "," & CLng(datos(8))      'tersex
        StrSql = StrSql & ",'" & datos(23) & "'"    'teremail
        StrSql = StrSql & "," & CLng(datos(13))     'nacionalnro
        StrSql = StrSql & ",'" & datos(9) & "'"     'estcivnro
        StrSql = StrSql & "," & datos(14)           'fechaingresopais
        StrSql = StrSql & ",'" & datos(11) & "'"    'tercasape
        StrSql = StrSql & "," & datos(10)           'terfecestciv
        StrSql = StrSql & "," & datos(12)           'paisnro
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline "Inserto en la tabla de tercero"
    
        '--Obtengo el ternro--
        Ternro = getLastIdentity(objConn, "tercero")
        Flog.writeline "-----------------------------------------------"
        Flog.writeline "Codigo de Tercero = " & Ternro
    
        '--Inserto el Registro correspondiente en ter_tip--
        StrSql = " INSERT INTO ter_tip(ternro,tipnro) VALUES(" & Ternro & ",14)"
        objConn.Execute StrSql, , adExecuteNoRecords
        'Flog.Writeline "Inserto el tipo de tercero 14 en ter_tip"
        
        'Desactivo el manejador de erorres
        On Error GoTo 0
        
        
        'Cualquier error que ocurra de aquí en adelante sigue adelante
        ' tratando de insertar la mayor cantidad de datos posible
        On Error Resume Next
        'HuboError = False
        
        StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
        StrSql = StrSql & " VALUES(" & Ternro & "," & datos(1) & ",'" & datos(2) & "')"
        objConn.Execute StrSql, , adExecuteNoRecords
    
        '--------------------------------------------------------------------------------
        '--Inserto el Domicilio--
        StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro,modnro) "
        StrSql = StrSql & " VALUES(1," & Ternro & ",-1,2,4)"
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline "inserto el Domicilio"
    
        '--Obtengo el numero de domicilio en la tabla--
        NroDom = CLng(getLastIdentity(objConn, "cabdom"))
    
        '--Si no tiene algun dato le agregamos unos ficticios--
        datos(24) = StrToStr(datos(24), 30) 'dirCalle
        datos(25) = StrToStr(datos(25), 8) 'dirNumero
        datos(26) = StrToStr(datos(26), 8) 'dirPiso
        datos(27) = StrToStr(datos(27), 8) 'dirDepto
        datos(28) = StrToStr(datos(28), 8) 'dirTorre
        datos(29) = StrToStr(datos(29), 8) 'dirManzana
        datos(30) = StrToStr(datos(30), 8) 'dirSector
        datos(31) = StrToStr(datos(31), 12) 'dirCP
        datos(32) = TraerCodLocalidad(CStr(datos(32))) 'dirLocalidad
        datos(33) = TraerCodProvincia(CStr(datos(33)))   'dirProvincia - 'en uruguay es departamento
        'datos(34) = TraerCodPartido(CStr(datos(34)))  'dirPartido
        datos(35) = TraerCodZona(CStr(datos(35)), CLng(datos(33)))  'dirZona
            If datos(35) = "" Then datos(35) = "NULL"
        datos(36) = TraerCodPais(CStr(datos(36))) 'dirPais
    
        StrSql = " INSERT INTO detdom (domnro,calle,nro,sector,torre,piso,oficdepto,manzana,codigopostal,"
        StrSql = StrSql & "locnro,provnro,paisnro, zonanro) "
        StrSql = StrSql & " VALUES ("
        StrSql = StrSql & NroDom
        StrSql = StrSql & ",'" & datos(24) & "'"
        StrSql = StrSql & ",'" & datos(25) & "'"
        StrSql = StrSql & ",'" & datos(30) & "'"
        StrSql = StrSql & ",'" & datos(28) & "'"
        StrSql = StrSql & ",'" & datos(26) & "'"
        StrSql = StrSql & ",'" & datos(27) & "'"
        StrSql = StrSql & ",'" & datos(29) & "'"
        StrSql = StrSql & ",'" & datos(31) & "'"
        StrSql = StrSql & "," & datos(32)
        StrSql = StrSql & "," & datos(33)
        StrSql = StrSql & "," & datos(36)
        StrSql = StrSql & "," & datos(35)
        
        'StrSql = StrSql & "," & datos(34)
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        If Err Then
            Err.Clear
        Else
            Flog.writeline "Inserte el domicilio "
        End If
       
        Flog.writeline "Inserto el Domicilio "
    
        '--Telefonos-Personal--
        datos(21) = validatelefono(StrToStr(datos(21), 20))
        If datos(21) <> "" Then
            StrSql = " INSERT INTO telefono "
            'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
            StrSql = StrSql & " (domnro, telnro, telfax, teldefault, telcelular,tipotel ) "
            StrSql = StrSql & " VALUES (" & NroDom & ", '" & datos(21) & "' ,0 , -1 ,0,1 ) "
            objConn.Execute StrSql, , adExecuteNoRecords
            If Err Then
                Err.Clear
            Else
                Flog.writeline "Inserte el telefono"
            End If
        End If
        
        '--Telefonos-Celular--
        'FGZ 11/04/2005 - quieren que lo cargue como telefono comun
        datos(22) = validatelefono(StrToStr(datos(22), 20))
        If datos(22) <> "" Then
            StrSql = " INSERT INTO telefono "
            'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
            StrSql = StrSql & " (domnro, telnro, telfax, teldefault, telcelular,tipotel ) "
            StrSql = StrSql & " VALUES (" & NroDom & ", '" & datos(22) & "' , 0, -1, 0,2 ) "
            objConn.Execute StrSql, , adExecuteNoRecords
            'Flog.Writeline " Inserto el telefono calular "
            'Flog.Writeline " Inserto el segundo telefono "
            If Err Then
                Err.Clear
            Else
                Flog.writeline "Inserte el telefono2 "
            End If
        End If
    
        '--Complemento--
        If datos(15) = "" Then
            datos(15) = 0
        Else
            datos(15) = CLng(StrToInt(datos(15))) 'cantidadHijos
        End If
        datos(16) = StrToStr(datos(16), 60) 'imagen
        If datos(17) = "" Then
            datos(17) = "NULL"
        Else
            datos(17) = ConvFecha(CDate(datos(17))) 'fechaIngresoCV
        End If
        datos(18) = StrToStr(datos(18), 250) 'referencias
        If datos(19) = "" Then
            datos(19) = TraerCodProcedencia("Web Deloitte") 'procedencia
        Else
            datos(19) = TraerCodProcedencia(CStr(datos(19))) 'procedencia
        End If
        If datos(20) = "" Then
            datos(20) = 0
        Else
            datos(20) = CDbl(StrToDbl(datos(20))) 'remuneracionPretendida
        End If
        
        'FGZ - 02/03/2006 Se agrego el estposnro = 4 (postulantre activo)
        StrSql = " INSERT INTO pos_postulante "
        StrSql = StrSql & " ( ternro, posrempre, poscanhijos, posfoto, posfecpres, posref, procnro,estposnro) "
        StrSql = StrSql & " VALUES (" & Ternro & " ," & CDbl(datos(20)) & ", " & CLng(datos(15)) & ", '" & datos(16) & "', " & datos(17) & ",'" & datos(18) & "', " & datos(19) & ",4) "
        objConn.Execute StrSql, , adExecuteNoRecords
        If Err Then
            Flog.writeline "Error al inserte el Complemento: " & Err.Description
            Flog.writeline "SQL ejecutada: " & StrSql
            Err.Clear
        Else
            Flog.writeline "Inserte el Complemento "
        End If
    
        
    
        '--Estudios-formales--(49)(50)
        Xconst = 0
        For a = 0 To 3
            If datos(Xconst + 37) <> "" Then
                datos(Xconst + 37) = TraerCodNivelEstudio(datos(Xconst + 37))   'EFnivel8
                'FGZ - 29/08/2005
                'If Datos(Xconst + 38) = "Graduado" Then Datos(Xconst + 38) = -1 Else Datos(Xconst + 38) = 0
                If datos(Xconst + 38) = -1 Then datos(Xconst + 38) = -1 Else datos(Xconst + 38) = 0
                    'Datos(Xconst + 38) = Datos(Xconst + 38)   'EFcompleto8
                datos(Xconst + 39) = TraerCodTitulo(CStr(datos(Xconst + 39)), CLng(datos(Xconst + 37)))   'EFtitulo8
                datos(Xconst + 40) = TraerCodInstitucionAbreviada(CStr(datos(Xconst + 40)))   'EFinstitucion8
                datos(Xconst + 41) = TraerCodCarrera(CStr(datos(Xconst + 41)))    'EFcarrera8
                If datos(Xconst + 42) <> "" Then
                    datos(Xconst + 42) = ConvFecha(CDate(datos(Xconst + 42)))   'EFfechaDesde8
                Else
                    datos(Xconst + 42) = "NULL"
                End If
                If datos(Xconst + 43) <> "" Then
                    datos(Xconst + 43) = ConvFecha(CDate(datos(Xconst + 43)))   'EFfechaHasta8
                Else
                    datos(Xconst + 43) = "NULL"
                End If
                datos(Xconst + 44) = StrToStr(datos(Xconst + 44), 30)   'EFpromedio8
                datos(Xconst + 45) = StrToStr(datos(Xconst + 45), 60)   'EFrango8
                If datos(Xconst + 46) <> "" And UCase(datos(Xconst + 46)) <> "NO" Then
                    datos(Xconst + 46) = -1  'EFestudiaActualmente8
                Else
                    datos(Xconst + 46) = 0  'EFestudiaActualmente8
                End If
        
                StrSql = " INSERT INTO cap_estformal "
                StrSql = StrSql & " ( nivnro, ternro, titnro, instnro, carredunro, capfecdes, capfechas, capcomp , capestact, caprango, capprom) "
                StrSql = StrSql & " VALUES (" & CLng(datos(Xconst + 37)) & ", " & Ternro & " ," & datos(Xconst + 39) & "," & datos(Xconst + 40) & "," & datos(Xconst + 41) & "," & datos(Xconst + 42) & " ," & datos(Xconst + 43) & "," & datos(Xconst + 38) & "," & datos(Xconst + 46) & ",'" & datos(Xconst + 45) & "','" & datos(Xconst + 44) & "' ) "
                'StrSql = StrSql & " Go "
                Err.Clear
                objConn.Execute StrSql, , adExecuteNoRecords
'                StrSql = " INSERT INTO cap_estformal "
'                StrSql = StrSql & " ( nivnro, ternro, titnro, instnro, carredunro, capfecdes, capfechas, capcomp , capestact, caprango, capprom) "
'                StrSql = StrSql & " VALUES ("
'                StrSql = StrSql & CLng(Datos(Xconst + 37))
'                StrSql = StrSql & ", " & ternro
'                StrSql = StrSql & " ," & Datos(Xconst + 39)
'                StrSql = StrSql & "," & Datos(Xconst + 40)
'                StrSql = StrSql & "," & Datos(Xconst + 41)
'                StrSql = StrSql & "," & Datos(Xconst + 42)
'                StrSql = StrSql & " ," & Datos(Xconst + 43)
'                StrSql = StrSql & "," & Datos(Xconst + 38)
'                StrSql = StrSql & "," & Datos(Xconst + 46)
'                StrSql = StrSql & ",'" & Datos(Xconst + 45)
'                StrSql = StrSql & "','" & Datos(Xconst + 44)
'                StrSql = StrSql & "' ) "
'                objConn.Execute StrSql, , adExecuteNoRecords
                
                If Err Then
                    Flog.writeline "Error al inserte el estudio formal: " & Err.Description
                    Flog.writeline "SQL ejecutada: " & StrSql
                    Err.Clear
                Else
                    Flog.writeline "Inserte el estudio formal " & datos(Xconst + 37)
                    ActPasos = True
                End If
            End If
            Xconst = Xconst + 10
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 50)
        End If
        ActPasos = False
        
        
        '--Experiencia-Laboral----Empleos Anteriores--57 (58)
        'reemplazos
        '117 x 77
        Xconst = 0
        For a = 0 To 3
            If datos(Xconst + 78) <> "" And datos(Xconst + 77) <> "" Then
                datos(Xconst + 77) = TraerCodCargo(CStr(datos(Xconst + 77)))    'ELcargoAnterior16
                datos(Xconst + 78) = TraerCodListaEmpresa(CStr(datos(Xconst + 78)))   'ELempresa16 lempnro
                datos(Xconst + 79) = StrToStr(datos(Xconst + 79), 200) 'ELtareaDesempenada16
                If datos(Xconst + 80) <> "" Then
                    datos(Xconst + 80) = ConvFecha(CDate(datos(Xconst + 80)))  'ELfechaDesde16
                Else
                    datos(Xconst + 80) = "NULL"
                End If
                If datos(Xconst + 81) <> "" Then
                    datos(Xconst + 81) = ConvFecha(CDate(datos(Xconst + 81)))  'ELfechaHasta16
                Else
                    datos(Xconst + 81) = "NULL"
                End If
                If datos(Xconst + 82) = "" Then
                    datos(Xconst + 82) = 0
                Else
                    datos(Xconst + 82) = StrToDbl(datos(Xconst + 82))   'ELremuneracion16
                End If
                If datos(Xconst + 83) <> "" Then
                    datos(Xconst + 83) = TraerCodCausa(CStr(datos(Xconst + 83)))   'ELcausaBaja16
                Else
                    datos(Xconst + 83) = "NULL"
                End If
            
                StrSql = " INSERT INTO empant "
                'FGZ - 29/08/2005
                'cambié los nombres de los campos donde inserta las fechas desde y hasta
                'StrSql = StrSql & " ( empleado, empatareas, lempnro, empadesde, emmpahasta, carnro, emparemu ) "
                StrSql = StrSql & " ( empleado, empatareas, lempnro, empaini, empafin, carnro, emparemu, caunro, empresa ) "
                StrSql = StrSql & " VALUES (" & Ternro & ", '" & datos(Xconst + 79) & "' ," & datos(Xconst + 78) & "," & datos(Xconst + 80) & "," & datos(Xconst + 81) & "," & datos(Xconst + 77) & "," & datos(Xconst + 82) & "," & datos(Xconst + 83) & ", '" & Empresa & "' ) "
                objConn.Execute StrSql, , adExecuteNoRecords
                If Err Then
                    Flog.writeline "Error al inserte el Empleo Anterior: " & Err.Description
                    Flog.writeline "SQL ejecutada: " & StrSql
                    Err.Clear
                Else
                    Flog.writeline "Inserto los datos del Empleo Anterior"
                    ActPasos = True
                End If
            End If
            Xconst = Xconst + 7
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 58)
        End If
        ActPasos = False
    
        '--Idiomas--53 (54)
        'reemplazos
        '229 x 105
        ActPasos = False
        Xconst = 0
        For a = 0 To 3
            If datos(Xconst + 105) <> "" Then
                If datos(Xconst + 106) <> "" Or datos(Xconst + 107) <> "" Or datos(Xconst + 108) <> "" Then
                    datos(Xconst + 105) = TraerCodIdioma(CStr(datos(Xconst + 105))) 'idioma1
                    datos(Xconst + 106) = TraerCodIdiNivel(CStr(datos(Xconst + 106))) 'idiomaLee1
                    datos(Xconst + 107) = TraerCodIdiNivel(CStr(datos(Xconst + 107))) 'idiomaHabla1
                    datos(Xconst + 108) = TraerCodIdiNivel(CStr(datos(Xconst + 108))) 'idiomaEscribe1
                    
                    If Not TieneIdioma(Ternro, CLng(datos(Xconst + 105))) Then
                        StrSql = " INSERT INTO emp_idi "
                        StrSql = StrSql & " (idinro, empleado, empidlee, empidhabla, empidescr) "
                        StrSql = StrSql & " VALUES (" & CLng(datos(Xconst + 105)) & ", " & Ternro & " ," & datos(Xconst + 106) & ", " & datos(Xconst + 107) & ", " & datos(Xconst + 108) & " ) "
                    Else
                        StrSql = " UPDATE emp_idi SET "
                        StrSql = StrSql & " empidlee = " & datos(Xconst + 106)
                        StrSql = StrSql & ", empidhabla = " & datos(Xconst + 107)
                        StrSql = StrSql & ", empidescr = " & datos(Xconst + 108)
                        StrSql = StrSql & " where empleado = " & Ternro & " and idinro = " & CLng(datos(Xconst + 105))
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If Err Then
                        Flog.writeline "Error al inserte el Idioma " & datos(Xconst + 105) & "-" & Err.Description
                        Flog.writeline "SQL ejecutada: " & StrSql
                        Err.Clear
                    Else
                        Flog.writeline "Inserte el Idioma " & datos(Xconst + 105)
                        ActPasos = True
                    End If
                End If
            End If
            Xconst = Xconst + 4
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 54)
        End If
        ActPasos = False
    
        
        '--Estudios-Informales--50 (51)
        'Reemplazos
        ' 249 x 121
        ActPasos = False
        ActPasos = False
        Xconst = 0
        For a = 0 To 3
            If datos(Xconst + 121) <> "" Then
                tempString = StrToStr(datos(121 + Xconst), 50) ''descCurso  estinfdesabr
                datos(121 + Xconst) = datos(121 + Xconst) ''descCurso  estinfdesabr
                datos(122 + Xconst) = TraerCodTipoCurso(StrToStr(datos(122 + Xconst), 50)) 'tipoCurso tipcurnro
                If datos(123 + Xconst) <> "" Then
                    datos(123 + Xconst) = ConvFecha(datos(123 + Xconst)) 'fechaCurso  estinffecha
                Else
                    datos(123 + Xconst) = ConvFecha(Date)
                End If
                datos(124 + Xconst) = TraerCodInstitucion(CStr(datos(124 + Xconst))) 'institucionCurso instnro
                If datos(121 + Xconst) = "" Or datos(122 + Xconst) = "" Or datos(124 + Xconst) = "" Then
                    Flog.writeline "Error al insertar el estudio informal por falta de datos "
                Else
                    StrSql = " INSERT INTO cap_estinformal "
                    StrSql = StrSql & " (ternro, estinfdesabr, estinffecha, tipcurnro, instnro) "
                    StrSql = StrSql & " VALUES (" & Ternro & " , '" & tempString & "'," & datos(123 + Xconst) & "," & CLng(datos(122 + Xconst)) & "," & CLng(datos(124 + Xconst)) & ")"
                    Err.Clear
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If Err Then
                        Flog.writeline "Error al insertar el estudio informal: " & Err.Description
                        Flog.writeline "SQL ejecutada: " & StrSql
                        Err.Clear
                    Else
                        Flog.writeline "Inserto los datos del estudio informal "
                        ActPasos = True
                    End If
                End If
            End If
            Xconst = Xconst + 4
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 51)
        End If
        ActPasos = False
        
        
        '--Especializaciones--51 (52)
        'reemplazos
        '253 x 137
        Xconst = 0
        ActPasos = False
        For a = 0 To 3
            If datos(Xconst + 139) <> "" Then
                datos(Xconst + 137) = TraerCodEspecializacion(CStr(datos(Xconst + 137))) 'tipo
                datos(Xconst + 138) = TraerCodEltoana(CStr(datos(Xconst + 138)), CLng(datos(Xconst + 137))) 'elemento
                datos(Xconst + 139) = TraerCodNivelEspecializacion(CStr(datos(Xconst + 139))) 'nivel
                
                StrSql = " INSERT INTO especemp "
                StrSql = StrSql & " (eltananro, ternro, espnivnro ) "
                StrSql = StrSql & " VALUES (" & datos(Xconst + 138) & ", " & Ternro & " ," & datos(Xconst + 139) & ") "
'                StrSql = StrSql & " VALUES (" & datosEltoAna(0, a) & ", " & ternro & " ," & Datos(Xconst + 139) & ") "
                Err.Clear
                objConn.Execute StrSql, , adExecuteNoRecords
                If Err Then
                    Flog.writeline "Error al insertar la especialidad: " & Err.Description
                    Flog.writeline "SQL ejecutada: " & StrSql
                    Err.Clear
                Else
                    Flog.writeline "Inserto los datos de la especialidad."
                    ActPasos = True
                End If
            Else
                Flog.writeline "Error al insertar la especialidad por falta de datos."
            End If
            Xconst = Xconst + 3
        Next a
        If ActPasos Then
           Flog.writeline "Inserto los datos de la especialidad"
           Call InsertarPaso(Ternro, 52)
           ActPasos = False
        End If
            

    Else
        Ternro = rs_Ter!Ternro
        Flog.writeline "-----------------------------------------------"
        Flog.writeline "Codigo de Tercero = " & Ternro
        
        'FGZ - 27/07/2005
        'si el tercereo existe pero es de tipo empleado ==> no se hace nada
        '1       Empleado
        '2       Empleado Agencia
        StrSql = " SELECT * FROM ter_tip"
        StrSql = StrSql & " WHERE ternro = " & Ternro
        StrSql = StrSql & " AND tipnro = 1"
        'StrSql = StrSql & " AND (tipnro = 1 OR tipnro = 2)"
        If rs_Aux.State = adStateOpen Then rs_Aux.Close
        OpenRecordset StrSql, rs_Aux
        If Not rs_Aux.EOF Then
            Flog.writeline "El Postulante ya es empleado." & datos(5) & " " & datos(3) & " " & datos(4) & "No se procesará."
            Exit Sub
        End If
        
        'Actualizar los datos
        StrSql = " UPDATE tercero SET "
        StrSql = StrSql & " ternom = " & "'" & datos(3) & "'"
        StrSql = StrSql & ", ternom2 = " & "'" & datos(4) & "'"
        StrSql = StrSql & ", terape = " & "'" & datos(5) & "'"
        StrSql = StrSql & ", terape2 = " & "'" & datos(6) & "'"
        StrSql = StrSql & ", terfecnac = " & datos(7)
        StrSql = StrSql & ", tersex = " & CLng(datos(8))
        StrSql = StrSql & ", teremail =" & "'" & datos(23) & "'"
        StrSql = StrSql & ", nacionalnro =" & CLng(datos(13))
        StrSql = StrSql & ", estcivnro =" & "'" & datos(9) & "'"
        StrSql = StrSql & ", terfecing =" & datos(14)
        StrSql = StrSql & ", tercasape =" & "'" & datos(11) & "'"
        StrSql = StrSql & ",terfecestciv =" & datos(10)
        StrSql = StrSql & ", paisnro =" & datos(12)
        StrSql = StrSql & " WHERE ternro = " & Ternro
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline "Tercero Actualizado"
    
        'Desactivo el manejador de erorres
        On Error GoTo 0
        
        'Cualquier error que ocurra de aquí en adelante sigue adelante
        ' tratando de insertar la mayor cantidad de datos posible
        On Error Resume Next
        
        StrSql = "SELECT * FROM ter_doc  "
        StrSql = StrSql & " WHERE ter_doc.tidnro = " & datos(1)
        StrSql = StrSql & " AND ternro = " & Ternro
        If rs_Aux.State = adStateOpen Then rs_Aux.Close
        OpenRecordset StrSql, rs_Aux
        If rs_Aux.EOF Then
            StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
            StrSql = StrSql & " VALUES(" & Ternro & "," & datos(1) & ",'" & datos(2) & "')"
        Else
            StrSql = "UPDATE ter_doc SET "
            StrSql = StrSql & " nrodoc = '" & datos(2) & "'"
            StrSql = StrSql & " WHERE ter_doc.tidnro = " & datos(1)
            StrSql = StrSql & " AND ternro = " & Ternro
        End If
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline "Documento Actualizado"
        
        
        '--------------------------------------------------------------------------------
        '--Inserto el Domicilio--
        StrSql = "SELECT * FROM cabdom  "
        StrSql = StrSql & " WHERE tipnro = 1"
        StrSql = StrSql & " AND ternro = " & Ternro
        If rs_Aux.State = adStateOpen Then rs_Aux.Close
        OpenRecordset StrSql, rs_Aux
        If rs_Aux.EOF Then
            StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro,domnro) "
            StrSql = StrSql & " VALUES(1," & Ternro & ",-1,2,4)"
            objConn.Execute StrSql, , adExecuteNoRecords
            Flog.writeline "inserto el Domicilio"
    
            '--Obtengo el numero de domicilio en la tabla--
            NroDom = CLng(getLastIdentity(objConn, "cabdom"))
        
            '--Si no tiene algun dato le agregamos unos ficticios--
            datos(24) = StrToStr(datos(24), 30) 'dirCalle
            datos(25) = StrToStr(datos(25), 8) 'dirNumero
            datos(26) = StrToStr(datos(26), 8) 'dirPiso
            datos(27) = StrToStr(datos(27), 8) 'dirDepto
            datos(28) = StrToStr(datos(28), 8) 'dirTorre
            datos(29) = StrToStr(datos(29), 8) 'dirManzana
            datos(30) = StrToStr(datos(30), 8) 'dirSector
            datos(31) = StrToStr(datos(31), 12) 'dirCP
            datos(32) = TraerCodLocalidad(CStr(datos(32))) 'dirLocalidad
            datos(33) = TraerCodProvincia(CStr(datos(33)))   'dirProvincia
            datos(34) = TraerCodPartido(CStr(datos(34)))  'dirPartido
            datos(35) = TraerCodZona(CStr(datos(35)), CLng(datos(33)))  'dirZona
                If datos(35) = "" Then datos(35) = "NULL"
            datos(36) = TraerCodPais(CStr(datos(36))) 'dirPais
        
            StrSql = " INSERT INTO detdom (domnro,calle,nro,sector,torre,piso,oficdepto,manzana,codigopostal,"
            StrSql = StrSql & "locnro,provnro,paisnro, zonanro, partnro) "
            StrSql = StrSql & " VALUES ("
            StrSql = StrSql & NroDom
            StrSql = StrSql & ",'" & datos(24) & "'"
            StrSql = StrSql & ",'" & datos(25) & "'"
            StrSql = StrSql & ",'" & datos(30) & "'"
            StrSql = StrSql & ",'" & datos(28) & "'"
            StrSql = StrSql & ",'" & datos(26) & "'"
            StrSql = StrSql & ",'" & datos(27) & "'"
            StrSql = StrSql & ",'" & datos(29) & "'"
            StrSql = StrSql & ",'" & datos(31) & "'"
            StrSql = StrSql & "," & datos(32)
            StrSql = StrSql & "," & datos(33)
            StrSql = StrSql & "," & datos(36)
            StrSql = StrSql & "," & datos(35)
            StrSql = StrSql & "," & datos(34)
            StrSql = StrSql & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            If Err Then
                Err.Clear
            Else
                Flog.writeline "Inserte el domicilio "
            End If
            Flog.writeline "Inserto el Domicilio "
        Else
            NroDom = rs_Aux!domnro
        
            '--Si no tiene algun dato le agregamos unos ficticios--
            datos(24) = StrToStr(datos(24), 30) 'dirCalle
            datos(25) = StrToStr(datos(25), 8) 'dirNumero
            datos(26) = StrToStr(datos(26), 8) 'dirPiso
            datos(27) = StrToStr(datos(27), 8) 'dirDepto
            datos(28) = StrToStr(datos(28), 8) 'dirTorre
            datos(29) = StrToStr(datos(29), 8) 'dirManzana
            datos(30) = StrToStr(datos(30), 8) 'dirSector
            datos(31) = StrToStr(datos(31), 12) 'dirCP
            datos(32) = TraerCodLocalidad(CStr(datos(32))) 'dirLocalidad
            datos(33) = TraerCodProvincia(CStr(datos(33)))   'dirProvincia
            datos(34) = TraerCodPartido(CStr(datos(34)))  'dirPartido
            datos(35) = TraerCodZona(CStr(datos(35)), CLng(datos(33)))  'dirZona
            If datos(35) = "" Then datos(35) = "NULL"
            datos(36) = TraerCodPais(CStr(datos(36))) 'dirPais
        
            StrSql = " UPDATE detdom SET "
            StrSql = StrSql & " calle =" & "'" & datos(24) & "'"
            StrSql = StrSql & ",nro =" & "'" & datos(25) & "'"
            StrSql = StrSql & ",sector =" & "'" & datos(30) & "'"
            StrSql = StrSql & ",torre =" & "'" & datos(28) & "'"
            StrSql = StrSql & ",piso =" & "'" & datos(26) & "'"
            StrSql = StrSql & ",oficdepto =" & "'" & datos(27) & "'"
            StrSql = StrSql & ",manzana =" & "'" & datos(29) & "'"
            StrSql = StrSql & ",codigopostal =" & "'" & datos(31) & "'"
            StrSql = StrSql & ",locnro =" & datos(32)
            StrSql = StrSql & ",provnro =" & datos(33)
            StrSql = StrSql & ",paisnro =" & datos(36)
            StrSql = StrSql & ", zonanro =" & datos(35)
            StrSql = StrSql & ", partnro = " & datos(34)
            StrSql = StrSql & " WHERE domnro = " & NroDom
            objConn.Execute StrSql, , adExecuteNoRecords
            If Err Then
                Err.Clear
                Flog.writeline "Domicilio NO actualizado"
                Flog.writeline "SQL ejecutada: " & StrSql
            Else
                Flog.writeline "Domicilio actualizado"
            End If
        End If
        
        
        '--Telefonos-Personal--
        datos(21) = validatelefono(StrToStr(datos(21), 20))
        If datos(21) <> "" Then
            StrSql = "SELECT * FROM telefono  "
            StrSql = StrSql & " WHERE domnro = " & NroDom
            StrSql = StrSql & " AND telnro = " & "'" & datos(21) & "'"
            If rs_Aux.State = adStateOpen Then rs_Aux.Close
            OpenRecordset StrSql, rs_Aux
            If rs_Aux.EOF Then
                StrSql = " INSERT INTO telefono "
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                StrSql = StrSql & " (domnro, telnro, telfax, teldefault, telcelular,tipotel ) "
                StrSql = StrSql & " VALUES (" & NroDom & ", '" & datos(21) & "' ,0 , -1 ,0,1 ) "
                objConn.Execute StrSql, , adExecuteNoRecords
                If Err Then
                    Err.Clear
                    Flog.writeline "Error Insertando el telefono " & datos(21)
                    Flog.writeline "SQL ejecutada: " & StrSql
                Else
                    Flog.writeline "Inserte el telefono"
                End If
            End If
        End If
        
        '--Telefonos-segundo--
        datos(22) = validatelefono(StrToStr(datos(22), 20))
        If datos(22) <> "" Then
            StrSql = "SELECT * FROM telefono  "
            StrSql = StrSql & " WHERE domnro = " & NroDom
            StrSql = StrSql & " AND telnro = " & "'" & datos(22) & "'"
            If rs_Aux.State = adStateOpen Then rs_Aux.Close
            OpenRecordset StrSql, rs_Aux
            If rs_Aux.EOF Then
                StrSql = " INSERT INTO telefono "
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                StrSql = StrSql & " (domnro, telnro, telfax, teldefault, telcelular,tipotel ) "
                StrSql = StrSql & " VALUES (" & NroDom & ", '" & datos(22) & "' , 0, -1, 0,2 ) "
                objConn.Execute StrSql, , adExecuteNoRecords
                If Err Then
                    Err.Clear
                    Flog.writeline "Error Insertando el telefono " & datos(22)
                    Flog.writeline "SQL ejecutada: " & StrSql
                Else
                    Flog.writeline "Inserte el telefono2 "
                End If
            End If
        End If
    
    
        '--Complemento--
        If datos(15) = "" Then
            datos(15) = 0
        Else
            datos(15) = CLng(StrToInt(datos(15))) 'cantidadHijos
        End If
        datos(16) = StrToStr(datos(16), 60) 'imagen
        If datos(17) = "" Then
            datos(17) = "NULL"
        Else
            datos(17) = ConvFecha(CDate(datos(17))) 'fechaIngresoCV
        End If
        datos(18) = StrToStr(datos(18), 250) 'referencias
        If datos(19) = "" Then
            datos(19) = TraerCodProcedencia("Web Deloitte") 'procedencia
        Else
            datos(19) = TraerCodProcedencia(CStr(datos(19))) 'procedencia
        End If
        If datos(20) = "" Then
            datos(20) = 0
        Else
            datos(20) = CDbl(StrToDbl(datos(20))) 'remuneracionPretendida
        End If
        
        'FGZ - 02/03/2006 Se agrego el estposnro = 4 (postulantre activo)
        StrSql = "SELECT * FROM pos_postulante  "
        StrSql = StrSql & " WHERE ternro = " & Ternro
        If rs_Aux.State = adStateOpen Then rs_Aux.Close
        OpenRecordset StrSql, rs_Aux
        If rs_Aux.EOF Then
            StrSql = " INSERT INTO pos_postulante "
            StrSql = StrSql & " ( ternro, posrempre, poscanhijos, posfoto, posfecpres, posref, procnro,estposnro) "
            StrSql = StrSql & " VALUES (" & Ternro & " ," & CDbl(datos(20)) & ", " & CLng(datos(15)) & ", '" & datos(16) & "', " & datos(17) & ",'" & datos(18) & "', " & datos(19) & ",4) "
            objConn.Execute StrSql, , adExecuteNoRecords
            If Err Then
                Flog.writeline "Error al inserte el Complemento: " & Err.Description
                Flog.writeline "SQL ejecutada: " & StrSql
                Err.Clear
            Else
                Flog.writeline "Inserte el Complemento "
            End If
        Else
            StrSql = "UPDATE pos_postulante SET "
            StrSql = StrSql & " posrempre = " & CDbl(datos(20))
            StrSql = StrSql & ", poscanhijos =" & CLng(datos(15))
            StrSql = StrSql & ", posfoto =" & "'" & datos(16) & "'"
            StrSql = StrSql & ", posfecpres =" & datos(17)
            StrSql = StrSql & ", posref =" & "'" & datos(18) & "'"
            StrSql = StrSql & ", procnro =" & datos(19)
            StrSql = StrSql & ", estposnro = 4"
            StrSql = StrSql & " WHERE ternro = " & Ternro
            objConn.Execute StrSql, , adExecuteNoRecords
            If Err Then
                Flog.writeline "Error al actualizar el Complemento: " & Err.Description
                Flog.writeline "SQL ejecutada: " & StrSql
                Err.Clear
            Else
                Flog.writeline "Complemento actualizado"
            End If
        End If
        
        '--Estudios-formales--(49) (50)
        Xconst = 0
        For a = 0 To 3
            If UBound(datos) > (Xconst + 37) Then
                If datos(Xconst + 37) <> "" Then
                    datos(Xconst + 37) = TraerCodNivelEstudio(datos(Xconst + 37))   'EFnivel8
                    'FGZ - 29/08/2005
                    'If Datos(Xconst + 38) = "Graduado" Then Datos(Xconst + 38) = -1 Else Datos(Xconst + 38) = 0
                    If datos(Xconst + 38) = -1 Then datos(Xconst + 38) = -1 Else datos(Xconst + 38) = 0
                        'Datos(Xconst + 38) = Datos(Xconst + 38)   'EFcompleto8
                    datos(Xconst + 39) = TraerCodTitulo(CStr(datos(Xconst + 39)), CLng(datos(Xconst + 37)))   'EFtitulo8
                    datos(Xconst + 40) = TraerCodInstitucionAbreviada(CStr(datos(Xconst + 40)))   'EFinstitucion8
                    datos(Xconst + 41) = TraerCodCarrera(CStr(datos(Xconst + 41)))    'EFcarrera8
                    If datos(Xconst + 42) <> "" Then
                        datos(Xconst + 42) = ConvFecha(CDate(datos(Xconst + 42)))   'EFfechaDesde8
                    Else
                        datos(Xconst + 42) = "NULL"
                    End If
                    If datos(Xconst + 43) <> "" Then
                        datos(Xconst + 43) = ConvFecha(CDate(datos(Xconst + 43)))   'EFfechaHasta8
                    Else
                        datos(Xconst + 43) = "NULL"
                    End If
                    datos(Xconst + 44) = StrToStr(datos(Xconst + 44), 30)   'EFpromedio8
                    datos(Xconst + 45) = StrToStr(datos(Xconst + 45), 60)   'EFrango8
                    If datos(Xconst + 46) <> "" And UCase(datos(Xconst + 46)) <> "NO" Then
                        datos(Xconst + 46) = -1  'EFestudiaActualmente8
                    Else
                        datos(Xconst + 46) = 0  'EFestudiaActualmente8
                    End If
            
                    'actualizo
                    StrSql = "SELECT * FROM cap_estformal  "
                    StrSql = StrSql & " WHERE nivnro = " & CLng(datos(Xconst + 37))
                    StrSql = StrSql & " AND ternro = " & Ternro
                    StrSql = StrSql & " AND titnro = " & datos(Xconst + 39)
                    StrSql = StrSql & " AND instnro = " & datos(Xconst + 40)
                    StrSql = StrSql & " AND carredunro = " & datos(Xconst + 41)
                    If rs_Aux.State = adStateOpen Then rs_Aux.Close
                    OpenRecordset StrSql, rs_Aux
                    If rs_Aux.EOF Then
                        StrSql = " INSERT INTO cap_estformal "
                        StrSql = StrSql & " ( nivnro, ternro, titnro, instnro, carredunro, capfecdes, capfechas, capcomp , capestact, caprango, capprom) "
                        StrSql = StrSql & " VALUES ("
                        StrSql = StrSql & CLng(datos(Xconst + 37))          'nivnro
                        StrSql = StrSql & "," & Ternro                      'ternro
                        StrSql = StrSql & "," & datos(Xconst + 39)          'titnro
                        StrSql = StrSql & "," & datos(Xconst + 40)          'instnro
                        StrSql = StrSql & "," & datos(Xconst + 41)          'carredunro
                        StrSql = StrSql & "," & datos(Xconst + 42)          'capfecdes
                        StrSql = StrSql & "," & datos(Xconst + 43)          'capfechas
                        StrSql = StrSql & "," & datos(Xconst + 38)          'capcomp
                        StrSql = StrSql & "," & datos(Xconst + 46)          'capestact
                        StrSql = StrSql & ",'" & datos(Xconst + 45) & "'"   'caprango
                        StrSql = StrSql & ",'" & datos(Xconst + 44) & "'"   'capprom
                        StrSql = StrSql & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If Err Then
                            Flog.writeline "Error al inserte el estudio formal: " & Err.Description
                            Flog.writeline "SQL ejecutada: " & StrSql
                            Err.Clear
                        Else
                            Flog.writeline "Inserte el estudio formal " & datos(Xconst + 37)
                            ActPasos = True
                        End If
                    Else
                        StrSql = "UPDATE  cap_estformal SET "
                        StrSql = StrSql & " capfecdes = " & datos(Xconst + 42)
                        StrSql = StrSql & ", capfechas =" & datos(Xconst + 43)
                        StrSql = StrSql & ", capcomp =" & datos(Xconst + 38)
                        StrSql = StrSql & ", capestact =" & datos(Xconst + 46)
                        StrSql = StrSql & ", caprango =" & "'" & datos(Xconst + 45) & "'"
                        StrSql = StrSql & ", capprom =" & "'" & datos(Xconst + 44) & "'"
                        StrSql = StrSql & " WHERE nivnro = " & CLng(datos(Xconst + 37))
                        StrSql = StrSql & " AND ternro = " & Ternro
                        StrSql = StrSql & " AND titnro = " & datos(Xconst + 39)
                        StrSql = StrSql & " AND instnro = " & datos(Xconst + 40)
                        StrSql = StrSql & " AND carredunro = " & datos(Xconst + 41)
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If Err Then
                            Flog.writeline "Error al inserte Al actualizar studio formal: " & Err.Description
                            Flog.writeline "SQL ejecutada: " & StrSql
                            Err.Clear
                        Else
                            Flog.writeline "Estudio formal " & datos(Xconst + 37) & " actualizado"
                            ActPasos = False
                        End If
                    End If
                End If
            Else
            End If
            Xconst = Xconst + 10
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 50)
        End If
        ActPasos = False
        
        
        '--Experiencia-Laboral----Empleos Anteriores--57 (58)
        Xconst = 0
        For a = 0 To 3
            If UBound(datos) > (Xconst + 77) Then
                If datos(Xconst + 78) <> "" And datos(Xconst + 77) <> "" Then
                    datos(Xconst + 77) = TraerCodCargo(CStr(datos(Xconst + 77)))    'ELcargoAnterior16
                    datos(Xconst + 78) = TraerCodListaEmpresa(CStr(datos(Xconst + 78)))   'ELempresa16 lempnro
                    datos(Xconst + 79) = StrToStr(datos(Xconst + 79), 200) 'ELtareaDesempenada16
                    If datos(Xconst + 80) <> "" Then
                        datos(Xconst + 80) = ConvFecha(CDate(datos(Xconst + 80)))  'ELfechaDesde16
                    Else
                        datos(Xconst + 80) = "NULL"
                    End If
                    If datos(Xconst + 81) <> "" Then
                        datos(Xconst + 81) = ConvFecha(CDate(datos(Xconst + 81)))  'ELfechaHasta16
                    Else
                        datos(Xconst + 81) = "NULL"
                    End If
                    If datos(Xconst + 82) = "" Then
                        datos(Xconst + 82) = 0
                    Else
                        datos(Xconst + 82) = StrToDbl(datos(Xconst + 82))   'ELremuneracion16
                    End If
                    If datos(Xconst + 83) <> "" Then
                        datos(Xconst + 83) = TraerCodCausa(CStr(datos(Xconst + 83)))   'ELcausaBaja16
                    Else
                        datos(Xconst + 83) = "NULL"
                    End If
                
                    StrSql = "SELECT * FROM empant  "
                    StrSql = StrSql & " WHERE empleado = " & Ternro
                    StrSql = StrSql & " AND empatareas = " & "'" & datos(Xconst + 79) & "'"
                    StrSql = StrSql & " AND lempnro = " & datos(Xconst + 78)
                    StrSql = StrSql & " AND carnro = " & datos(Xconst + 77)
                    If rs_Aux.State = adStateOpen Then rs_Aux.Close
                    OpenRecordset StrSql, rs_Aux
                    If rs_Aux.EOF Then
                        StrSql = " INSERT INTO empant "
                        'FGZ - 29/08/2005
                        'cambié los nombres de los campos donde inserta las fechas desde y hasta
                        'StrSql = StrSql & " ( empleado, empatareas, lempnro, empadesde, emmpahasta, carnro, emparemu ) "
                        StrSql = StrSql & " ( empleado, empatareas, lempnro, empaini, empafin, carnro, emparemu, caunro, empresa ) "
                        StrSql = StrSql & " VALUES (" & Ternro & ", '" & datos(Xconst + 79) & "' ," & datos(Xconst + 78) & "," & datos(Xconst + 80) & "," & datos(Xconst + 81) & "," & datos(Xconst + 77) & "," & datos(Xconst + 82) & "," & datos(Xconst + 83) & ", '" & Empresa & "'  ) "
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If Err Then
                            Flog.writeline "Error al inserte el Empleo Anterior: " & Err.Description
                            Flog.writeline "SQL ejecutada: " & StrSql
                            Err.Clear
                        Else
                            Flog.writeline "Inserto los datos del Empleo Anterior"
                            ActPasos = True
                        End If
                    Else
                        StrSql = "UPDATE empant SET "
                        'FGZ - 29/08/2005
'                        StrSql = StrSql & " empadesde =" & Datos(Xconst + 120)
'                        StrSql = StrSql & ", emmpahasta =" & (Datos(Xconst + 121))
                        StrSql = StrSql & " empaini =" & datos(Xconst + 80)
                        StrSql = StrSql & ", empafin =" & (datos(Xconst + 81))
                        StrSql = StrSql & ", emparemu = " & datos(Xconst + 82)
                        StrSql = StrSql & ", caunro = " & datos(Xconst + 83)
                        StrSql = StrSql & " WHERE empantnro = " & rs_Aux!Empantnro
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If Err Then
                            Flog.writeline "Error al actualizar el Empleo Anterior: " & Err.Description
                            Flog.writeline "SQL ejecutada: " & StrSql
                            Err.Clear
                        Else
                            Flog.writeline "Actualizo los datos del Empleo Anterior"
                            ActPasos = False
                        End If
                    End If
                Else
                End If
            End If
            Xconst = Xconst + 7
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 58)
        End If
        ActPasos = False
    
    
        '--Idiomas--53 (54)
        ActPasos = False
        Xconst = 0
        For a = 0 To 3
            If UBound(datos) > (Xconst + 105) Then
                If datos(Xconst + 105) <> "" Then
                    If datos(Xconst + 106) <> "" Or datos(Xconst + 107) <> "" Or datos(Xconst + 108) <> "" Then
                        datos(Xconst + 105) = TraerCodIdioma(CStr(datos(Xconst + 105))) 'idioma1
                        datos(Xconst + 106) = TraerCodIdiNivel(CStr(datos(Xconst + 106))) 'idiomaLee1
                        datos(Xconst + 107) = TraerCodIdiNivel(CStr(datos(Xconst + 107))) 'idiomaHabla1
                        datos(Xconst + 108) = TraerCodIdiNivel(CStr(datos(Xconst + 108))) 'idiomaEscribe1
                        
                        If Not TieneIdioma(Ternro, CLng(datos(Xconst + 105))) Then
                            StrSql = " INSERT INTO emp_idi "
                            StrSql = StrSql & " (idinro, empleado, empidlee, empidhabla, empidescr) "
                            StrSql = StrSql & " VALUES (" & CLng(datos(Xconst + 105)) & ", " & Ternro & " ," & datos(Xconst + 106) & ", " & datos(Xconst + 107) & ", " & datos(Xconst + 108) & " ) "
                        Else
                            StrSql = " UPDATE emp_idi SET "
                            StrSql = StrSql & " empidlee = " & datos(Xconst + 106)
                            StrSql = StrSql & ", empidhabla = " & datos(Xconst + 107)
                            StrSql = StrSql & ", empidescr = " & datos(Xconst + 108)
                            StrSql = StrSql & " where empleado = " & Ternro & " and idinro = " & CLng(datos(Xconst + 105))
                        End If
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If Err Then
                            Flog.writeline "Error al inserte el Idioma " & datos(Xconst + 105) & "-" & Err.Description
                            Flog.writeline "SQL ejecutada: " & StrSql
                            Err.Clear
                        Else
                            Flog.writeline "Inserte el Idioma " & datos(Xconst + 105)
                            ActPasos = True
                        End If
                    End If
                End If
            End If
            Xconst = Xconst + 4
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 54)
        End If
        ActPasos = False
    
        
        '--Estudios-Informales--50 (51)
        ActPasos = False
        Xconst = 0
        For a = 0 To 3
            tempString = StrToStr(datos(Xconst + 121), 50) ''descCurso  estinfdesabr
            datos(Xconst + 121) = datos(Xconst + 121) ''descCurso  estinfdesabr
            datos(Xconst + 122) = TraerCodTipoCurso(StrToStr(datos(Xconst + 122), 50)) 'tipoCurso tipcurnro
            If datos(Xconst + 123) <> "" Then
                datos(Xconst + 123) = ConvFecha(datos(Xconst + 123)) 'fechaCurso  estinffecha
            Else
                datos(Xconst + 123) = ConvFecha(Date)
            End If
            datos(Xconst + 124) = TraerCodInstitucion(CStr(datos(Xconst + 124))) 'institucionCurso instnro
            If datos(Xconst + 121) = "" Or datos(Xconst + 122) = "" Or datos(Xconst + 124) = "" Then
                Flog.writeline "Error al insertar el estudio informal por falta de datos "
            Else
                'Reviso
                StrSql = "SELECT * FROM cap_estinformal  "
                StrSql = StrSql & " WHERE tipcurnro = " & CLng(datos(Xconst + 122))
                StrSql = StrSql & " AND ternro = " & Ternro
                StrSql = StrSql & " AND instnro = " & CLng(datos(Xconst + 124))
                If rs_Aux.State = adStateOpen Then rs_Aux.Close
                OpenRecordset StrSql, rs_Aux
                If rs_Aux.EOF Then
                    StrSql = " INSERT INTO cap_estinformal "
                    StrSql = StrSql & " (ternro, estinfdesabr, estinffecha, tipcurnro, instnro) "
                    StrSql = StrSql & " VALUES (" & Ternro & " , '" & tempString & "'," & datos(Xconst + 123) & "," & CLng(datos(Xconst + 122)) & "," & CLng(datos(Xconst + 124)) & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If Err Then
                        Flog.writeline "Error al insertar el estudio informal: " & Err.Description
                        Flog.writeline "SQL ejecutada: " & StrSql
                        Err.Clear
                    Else
                        Flog.writeline "Inserto los datos del estudio informal "
                        ActPasos = True
                    End If
                Else
                    StrSql = "UPDATE cap_estinformal SET "
                    StrSql = StrSql & " estinfdesabr = '" & tempString & "'"
                    StrSql = StrSql & ", estinffecha =" & (datos(Xconst + 123))
                    StrSql = StrSql & " WHERE tipcurnro = " & CLng(datos(Xconst + 122))
                    StrSql = StrSql & " AND ternro = " & Ternro
                    StrSql = StrSql & " AND instnro = " & CLng(datos(Xconst + 124))
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If Err Then
                        Flog.writeline "Error al actualizar el estudio informal: " & Err.Description
                        Flog.writeline "SQL ejecutada: " & StrSql
                        Err.Clear
                    Else
                        Flog.writeline "Actualizo los datos del estudio informal "
                        ActPasos = False
                    End If
                End If
            End If
            Xconst = Xconst + 4
        Next a
        If ActPasos Then
           Call InsertarPaso(Ternro, 51)
           ActPasos = False
        End If
        
        '--Especializaciones--51 (52)
        Xconst = 0
        ActPasos = False
        For a = 0 To 3
            If datos(Xconst + 139) <> "" Then
                datos(Xconst + 137) = TraerCodEspecializacion(CStr(datos(Xconst + 137))) 'tipo
                datos(Xconst + 138) = TraerCodEltoana(CStr(datos(Xconst + 138)), CLng(datos(Xconst + 137))) 'elemento
                datos(Xconst + 139) = TraerCodNivelEspecializacion(CStr(datos(Xconst + 139))) 'nivel
                
                'REVISO
                StrSql = "SELECT * FROM especemp  "
                StrSql = StrSql & " WHERE espnivnro = " & datos(Xconst + 139)
                StrSql = StrSql & " AND ternro = " & Ternro
                StrSql = StrSql & " AND eltananro = " & datos(Xconst + 138)
                If rs_Aux.State = adStateOpen Then rs_Aux.Close
                OpenRecordset StrSql, rs_Aux
                If rs_Aux.EOF Then
                    StrSql = " INSERT INTO especemp "
                    StrSql = StrSql & " (eltananro, ternro, espnivnro ) "
                    StrSql = StrSql & " VALUES (" & datos(Xconst + 138) & ", " & Ternro & " ," & datos(Xconst + 139) & ") "
    '                StrSql = StrSql & " VALUES (" & datosEltoAna(0, a) & ", " & ternro & " ," & Datos(Xconst + 139) & ") "
                
                    Err.Clear
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If Err Then
                        Flog.writeline "Error al insertar la especialidad: " & Err.Description
                        Flog.writeline "SQL ejecutada: " & StrSql
                        Err.Clear
                    Else
                        Flog.writeline "Actualizo los datos de la especialidad."
                        ActPasos = True
                    End If
                End If
            Else
            End If
            Xconst = Xconst + 3
        Next a
        If ActPasos Then
           'Flog.Writeline "Inserto los datos de la especialidad"
           Call InsertarPaso(Ternro, 52)
           ActPasos = False
        End If
        

    End If
Fin:
Exit Sub

Manejador_De_Error:
    HuboError = True
    Flog.writeline "SQL ejecutada: " & StrSql
    Texto = ": " & Err.Description
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    'Fue error de Consulta de SQL
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    GoTo Fin
End Sub
Public Sub LineaModelo_667(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Inserta la Novedad Global con Vigencia Diaria
' Autor      : Carmen Quintero
'              El formato es:
'                       conccod; tpanro; monto; fecha
' Fecha      : 06/09/2012
' Ultima Mod.:
' ---------------------------------------------------------------------------------------------

Dim pos1 As Long
Dim pos2 As Long
    
Dim ConcNro As Long
Dim ConcCod As String

Dim tpanro As Long
Dim Aux_Monto As String
Dim Monto As Double
Dim FechaDesde As String
Dim FechaHasta As String

Dim rs_Concepto As New ADODB.Recordset
Dim rs_TipoPar As New ADODB.Recordset
Dim rs_con_for_tpa As New ADODB.Recordset
Dim rs_novgral As New ADODB.Recordset
Dim rs_cft_resumen As New ADODB.Recordset


On Error GoTo Manejador_De_Error
    Tabs = 1
    
    Texto = "Procesando linea " & strLinea
    Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    
    NroColumna = NroColumna + 1
    'Concepto
    pos1 = 1
    pos2 = InStr(pos1, strLinea, separador)
    ConcCod = Mid(strLinea, pos1, pos2 - pos1)
    ConcCod = EliminarCHInvalidosII(ConcCod, 1, "")
    If Len(ConcCod) = 4 Then
       ConcCod = "0" & Mid(strLinea, pos1, pos2 - pos1)
    End If
    
    NroColumna = NroColumna + 1
    'Tipo de Parametro
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    tpanro = Mid(strLinea, pos1, pos2 - pos1)
    
    
    NroColumna = NroColumna + 1
    'Monto
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    If pos2 = 0 Then
        pos2 = Len(strLinea)
        Aux_Monto = Mid(strLinea, pos1, pos2)
        Monto = CDbl(Replace(CStr(Aux_Monto), SeparadorDecimal, "."))
    Else
        Aux_Monto = Mid(strLinea, pos1, pos2 - pos1)
        Monto = CDbl(Replace(CStr(Aux_Monto), SeparadorDecimal, "."))
    End If
    
    
    NroColumna = NroColumna + 1
    'Fecha
    pos1 = pos2 + 1
    pos2 = Len(strLinea)
    FechaDesde = Mid(strLinea, pos1, pos2)
    If IsDate(FechaDesde) Then
        FechaDesde = CDate(FechaDesde)
        FechaHasta = CDate(FechaDesde)
    Else
        If Not EsNulo(FechaDesde) Then
            Texto = ": Fecha no valida "
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            Call InsertaError(1, 4)
            HuboError = True
            Exit Sub
        Else
            If Len(FechaDesde) = 0 Then
                Texto = ": La fecha no puede estar vacia "
                Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                Call InsertaError(1, 4)
                HuboError = True
                Exit Sub
            End If
        End If
    End If
    
    ' ====================================================================
    '   Validar los parametros Levantados
    ' ====================================================================
    
    'Que exista el concepto
    StrSql = "SELECT * FROM concepto WHERE conccod = '" & ConcCod & "'"
    OpenRecordset StrSql, rs_Concepto
    If rs_Concepto.EOF Then
        Texto = ": " & "No se encontro el Concepto " & ConcCod
        NroColumna = 1
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call InsertaError(1, 10)
        HuboError = True
        Exit Sub
    Else
        ConcNro = rs_Concepto!ConcNro
    End If
    
    'Que el concepto sea de carga general
    StrSql = "SELECT tipopar.tpanro, tipopar.tpadabr, unidad.unisigla "
    StrSql = StrSql & "FROM cft_resumen "
    StrSql = StrSql & "INNER JOIN tipopar ON cft_resumen.tpanro = tipopar.tpanro "
    StrSql = StrSql & "INNER JOIN unidad ON tipopar.uninro = unidad.uninro "
    StrSql = StrSql & "WHERE concnro = " & ConcNro & " AND cargl = -1"
    OpenRecordset StrSql, rs_cft_resumen
    If rs_cft_resumen.EOF Then
        Texto = ": " & "El concepto no es de carga general"
        NroColumna = 1
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call InsertaError(1, 142)
        HuboError = True
        Exit Sub
    End If
    
    'Que exista el tipo de Parametro
    StrSql = "SELECT tipopar.tpanro, tipopar.tpadabr, unidad.unisigla "
    StrSql = StrSql & "FROM tipopar INNER JOIN cft_resumen ON tipopar.tpanro = cft_resumen.tpanro "
    StrSql = StrSql & "INNER JOIN unidad ON tipopar.uninro = unidad.uninro "
    StrSql = StrSql & "WHERE cft_resumen.concnro = " & ConcNro & " AND cft_resumen.tpanro = " & tpanro & " AND cargl = -1"
    OpenRecordset StrSql, rs_TipoPar
    If rs_TipoPar.EOF Then
        Texto = ": " & "El Parámetro no pertenece al Concepto."
        NroColumna = 2
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call InsertaError(2, 18)
        HuboError = True
        Exit Sub
    End If
        
    'Controlo si existe una novedad igual
    StrSql = "SELECT * "
    StrSql = StrSql & " FROM novgral "
    StrSql = StrSql & " WHERE concnro = " & ConcNro & " AND tpanro = " & tpanro
    OpenRecordset StrSql, rs_novgral
    If Not rs_novgral.EOF Then
        Texto = ": " & "Ya existe novedad para el concepto y parámetro."
        NroColumna = 2
        Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, "")
        Call InsertaError(2, 54)
        HuboError = True
        Exit Sub
    End If
    rs_novgral.Close
    
    'Controlo si existe una novedad sin vigencia
    StrSql = "SELECT * "
    StrSql = StrSql & " FROM novgral "
    StrSql = StrSql & " WHERE concnro = " & ConcNro & " AND tpanro = " & tpanro
    StrSql = StrSql & " AND ngravigencia=0 "
    OpenRecordset StrSql, rs_novgral
    If Not rs_novgral.EOF Then
        Texto = ": " & "Ya existe una novedad sin vigencia para el concepto y parámetro."
        NroColumna = 2
        Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, "")
        Call InsertaError(2, 143)
        HuboError = True
        Exit Sub
    End If
    rs_novgral.Close
    
    'Controlo si existe una novedad con fecha hasta nulo y desde menor o igual al desde
    StrSql = "SELECT * "
    StrSql = StrSql & " FROM novgral "
    StrSql = StrSql & " WHERE concnro = " & ConcNro & " AND tpanro = " & tpanro
    StrSql = StrSql & " AND ngravigencia = -1 "
    StrSql = StrSql & " AND (ngradesde <= " & ConvFecha(FechaDesde)
    StrSql = StrSql & "  OR  ngradesde <= " & ConvFecha(FechaHasta) & ") "
    StrSql = StrSql & " AND  ngrahasta IS NULL "
    OpenRecordset StrSql, rs_novgral
    If Not rs_novgral.EOF Then
        Texto = ": " & "La vigencia de la novedad se superpone con otra."
        NroColumna = 2
        Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, "")
        Call InsertaError(2, 144)
        HuboError = True
        Exit Sub
    End If
    rs_novgral.Close
    
    'Controlo si existe una novedad sin vigencia
    StrSql = "SELECT * "
    StrSql = StrSql & " FROM novgral "
    StrSql = StrSql & " WHERE concnro = " & ConcNro & " AND tpanro = " & tpanro
    StrSql = StrSql & " AND ngravigencia = -1 "
    StrSql = StrSql & " AND ((ngradesde >=" & ConvFecha(FechaDesde)
    StrSql = StrSql & " AND ngrahasta <= " & ConvFecha(FechaHasta) & ") "
    StrSql = StrSql & " OR (ngradesde <  " & ConvFecha(FechaDesde)
    StrSql = StrSql & " AND ngrahasta <= " & ConvFecha(FechaHasta)
    StrSql = StrSql & " AND ngrahasta >= " & ConvFecha(FechaDesde) & ") "
    StrSql = StrSql & " OR (ngradesde >= " & ConvFecha(FechaDesde)
    StrSql = StrSql & " AND ngrahasta >  " & ConvFecha(FechaHasta)
    StrSql = StrSql & " AND ngradesde <= " & ConvFecha(FechaHasta) & ") "
    StrSql = StrSql & " OR (ngradesde <  " & ConvFecha(FechaDesde)
    StrSql = StrSql & " AND ngrahasta >  " & ConvFecha(FechaHasta) & ")) "
    OpenRecordset StrSql, rs_novgral
    If Not rs_novgral.EOF Then
        Texto = ": " & "La vigencia de la novedad se superpone con otra."
        NroColumna = 2
        Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, "")
        Call InsertaError(2, 144)
        HuboError = True
        Exit Sub
    End If
    
    StrSql = "INSERT INTO novgral ("
    StrSql = StrSql & "concnro,tpanro,ngravalor,ngravigencia,ngradesde,ngrahasta,ngraretro,pronro,empresa"
    StrSql = StrSql & ") VALUES (" & ConcNro
    StrSql = StrSql & "," & tpanro
    StrSql = StrSql & "," & Monto
    StrSql = StrSql & ",-1"
    StrSql = StrSql & "," & ConvFecha(FechaDesde)
    StrSql = StrSql & "," & ConvFecha(FechaHasta)
    StrSql = StrSql & ", NULL"
    StrSql = StrSql & ", NULL"
    StrSql = StrSql & ", NULL"
    StrSql = StrSql & " )"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    Texto = "Novedad Global insertada "
    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)

Fin:
'Cierro todo y libero
If rs_Concepto.State = adStateOpen Then rs_Concepto.Close
If rs_TipoPar.State = adStateOpen Then rs_TipoPar.Close
If rs_novgral.State = adStateOpen Then rs_novgral.Close
If rs_cft_resumen.State = adStateOpen Then rs_cft_resumen.Close
If rs_con_for_tpa.State = adStateOpen Then rs_con_for_tpa.Close

Set rs_Concepto = Nothing
Set rs_TipoPar = Nothing
Set rs_novgral = Nothing
Set rs_con_for_tpa = Nothing
Set rs_cft_resumen = Nothing
Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    Texto = Err.Description
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(1, 7)
    GoTo Fin
End Sub

Public Sub LineaModelo_669(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Estudios informales
' Autor      : LED
'              El formato es:
'              Tipo Doc; NroDoc; Descripción abreviada; [descripción extendida]; fecha desde; fecha Hasta; tipo curso; institución; [aprobado por RRHH]
'              descripcion extendida es obligatorio, en caso de no cargarlo viene "N/A"
'              si aprobado no existe, se asume 0
' Fecha      : 31/10/2012
' Ultima Mod.:
' ---------------------------------------------------------------------------------------------

Dim rs_tercero As New ADODB.Recordset

Dim index As Integer
Dim Ternro As Long
'tipo Documento                     'Posicion 1 - indice de arreglo 0
'Nro Documento                      'Posicion 2 - indice de arreglo 1
Dim descripcionAbreviada As String  'Posicion 3 - indice de arreglo 2
Dim descripcionExtendida As String  'Posicion 4 - indice de arreglo 3
Dim FechaDesde As String            'Posicion 5 - indice de arreglo 4
Dim FechaHasta As String            'Posicion 6 - indice de arreglo 5
Dim tipoCurso As Long               'Posicion 7 - indice de arreglo 6
Dim institucion As Long             'Posicion 8 - indice de arreglo 7
Dim aprobaboRRHH As Integer         'Posicion 9 - indice de arreglo 8
'------------------------------------------------------------------------------
    
    On Error GoTo Manejador_De_Error
    Tabs = 1
    
    Texto = "Procesando linea " & strLinea
    Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    
    NroColumna = NroColumna + 1
    
    ReDim valores(UBound(Split(strLinea, separador))) As String
    
    valores = Split(strLinea, separador)
    'Chequeo que contenga las columans minimas obligatorias
    If UBound(valores) < 7 Then
        Texto = "Hay menos columnas que las obligatorias cargadas."
        Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Exit Sub
    End If
    
    'Chequeo que el nro de documento sea numerico
    If IsNumeric(valores(1)) Then
        
        StrSql = " SELECT ternro " & _
                 " FROM ter_doc " & _
                 " INNER JOIN tipodocu ON tipodocu.tidnro = ter_doc.tidnro " & _
                 " WHERE nrodoc = '" & valores(1) & "' AND upper(tidsigla) = '" & UCase(valores(0)) & "'"
        OpenRecordset StrSql, rs_tercero
        If rs_tercero.EOF Then
            Texto = "No existe Tercero con el documento informado."
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            HuboError = True
            Exit Sub
        Else
            Ternro = rs_tercero!Ternro
            Texto = "Tercero encontrado: " & Ternro & "."
            Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, "")
                
            For index = 2 To UBound(valores)
                aprobaboRRHH = 0
                Select Case index
                Case 2 'Descripcion abreviada
                    descripcionAbreviada = valores(index)
                Case 3 '[descripción extendida]
                    If UCase(valores(index)) = "N/A" Then
                        descripcionExtendida = ""
                    Else
                        descripcionExtendida = valores(index)
                    End If
                Case 4 'fecha desde
                    FechaDesde = valores(index)
                Case 5 'fecha Hasta
                    FechaHasta = valores(index)
                Case 6 'tipo curso
                    tipoCurso = TraerCodTipoCurso(valores(index))
                Case 7 'institución
                    institucion = TraerCodInstitucion(valores(index))
                Case 8 'aprobado por RRHH
                    If UCase(valores(index)) = "SI" Or UCase(valores(index)) = "S" Then
                        aprobaboRRHH = -1
                    End If
                End Select
            Next
        End If
        
        'Inserto el estudio informal para el empleado
        Texto = "Grabando estudio informal para el Tercero: " & Ternro & "."
        Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, "")
        
        StrSql = " INSERT INTO cap_estinformal "
        StrSql = StrSql & " (ternro, estinfdesabr, estinfdesext, estinffecha, estinffechahasta, tipcurnro, instnro, estinfestrrhh) "
        StrSql = StrSql & " VALUES (" & Ternro & ",'" & descripcionAbreviada & "','" & descripcionExtendida & "'," & ConvFecha(FechaDesde) & "," & ConvFecha(FechaHasta) & "," & tipoCurso & "," & institucion & "," & aprobaboRRHH & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        Texto = "Estudio informal grabado con exito para el Tercero: " & Ternro & "."
        Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, "")
    Else
        Texto = "El documento no es numerico."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        HuboError = True
        Exit Sub
    End If
    
Fin:
'Cierro todo y libero
If rs_tercero.State = adStateOpen Then rs_tercero.Close

Set rs_tercero = Nothing

Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    Texto = Err.Description
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    GoTo Fin
End Sub

Public Sub LineaModelo_245_old(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Inserta Novedad de ajuste segun formato
' Autor      : FGZ
'              El formato es:
'                   Formato 1
'                       Legajo; conccod; monto
'                   ó
'                   Formato 2.1
'                       Legajo; conccod; monto; FechaDesde; FechaHasta
'                   Formato 2.2
'                       Legajo; conccod; monto; FechaDesde
'                   ó
'                   Formato 3
'                       Legajo; conccod; monto; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro)
' Fecha      : 27/12/2004
' Ultima Mod.: 14/06/2007.Gustavo Ring, se verifica que el usuario tenga permiso
'              en el concepto que se va a ingresar como novedad.
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim pos1 As Long
Dim pos2 As Long
    
Dim Tercero As Long
Dim NroLegajo As Long

Dim ConcNro As Long
'Dim Conccod As Long
Dim ConcCod As String

Dim Monto As Single
Dim FechaDesde As String
Dim FechaHasta As String
Dim perfsegcon As Integer
Dim tienePermiso As Boolean
Dim PeriodoDesde As Long
Dim PeriodoHasta As Long
Dim TieneVigencia As Boolean
Dim EsRetroactivo As Boolean

Dim Aux As String

Dim rs_Empleado As New ADODB.Recordset
Dim rs_Concepto As New ADODB.Recordset
Dim rs_NovAju As New ADODB.Recordset
Dim rs_Periodo As New ADODB.Recordset
Dim rs_seguridad As New ADODB.Recordset

' El formato es:
' Formato 1
' Legajo; conccod; monto
' ó
' Formato 2.1
' Legajo; conccod; monto; FechaDesde; FechaHasta
' ó
' Formato 2.2
' Legajo; conccod; monto; FechaDesde
' ó
' Formato 3
' Legajo; conccod; monto; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro)
' ó
' Formato 4
' Legajo; conccod; monto; FechaDesde; FechaHasta; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro)
    
    On Error GoTo Manejador_De_Error
    
    TieneVigencia = False
    EsRetroactivo = False

    'Nro de Legajo
    pos1 = 1
    pos2 = InStr(pos1, strLinea, separador)
    If IsNumeric(Mid$(strLinea, pos1, pos2 - pos1)) Then
        NroLegajo = Mid$(strLinea, pos1, pos2 - pos1)
    Else
        Flog.writeline Espacios(Tabulador * 1) & "El legajo no es numerico "
        FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": El legajo no es numerico"
        InsertaError 1, 8
        HuboError = True
        Exit Sub
    End If
    
    'Concepto
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    ConcCod = Mid(strLinea, pos1, pos2 - pos1)

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Verifico que el usuario tenga el nivel de seguridad para insertar la novedad '
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
 
 StrSql = "SELECT perf_usr.perfsegcon, user_per.iduser FROM user_per "
 StrSql = StrSql & "INNER JOIN perf_usr ON user_per.perfnro = perf_usr.perfnro "
 StrSql = StrSql & "WHERE user_per.iduser = '" & usuario & "'"
 OpenRecordset StrSql, rs_seguridad

 If rs_seguridad.EOF Then
        perfsegcon = 0
 Else
   If IsNull(rs_seguridad!perfsegcon) Then
        perfsegcon = 0
   Else
        perfsegcon = rs_seguridad!perfsegcon
   End If
 End If
        
 rs_seguridad.Close
 
 '--------------------------------------------------------------------------------------------------------------------
 ' Busco el nivel de seguridad del concepto
 '--------------------------------------------------------------------------------------------------------------------

    StrSql = "SELECT codseguridad FROM concepto "
    StrSql = StrSql & " WHERE concepto.conccod=" & ConcCod
    OpenRecordset StrSql, rs_seguridad
 
    If Not (IsNull(rs_seguridad!codseguridad)) Then
            If rs_seguridad!codseguridad <= CInt(perfsegcon) Then
                tienePermiso = True
            Else
                tienePermiso = False
            End If
    Else
            tienePermiso = True
    End If

    rs_seguridad.Close
    If Not tienePermiso Then
        Texto = ": El usuario:" & usuario & " No tiene autorización sobre el concepto:" & ConcCod
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        HuboError = True
        Exit Sub
    End If

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'    Seguridad por conceptos                              '
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'Dim concnro As Long
'StrSql = " SELECT concepto.concnro "
'StrSql = StrSql & " FROM perf_conc "
'StrSql = StrSql & " INNER JOIN concepto ON concepto.concnro = perf_conc.concnro "
'StrSql = StrSql & " WHERE concepto.conccod = " & Conccod
'OpenRecordset StrSql, rs_seguridad
'If rs_seguridad.EOF Then 'Si no hay ningun registro asumo que no se utiliza la sesuridad
'    'OK
'    rs_seguridad.Close
'Else 'Busco si el perfil está
'---------------------------
' Si no hay ningun registro asumo que NO hay permiso
'---------------------------
    'concnro = rs_seguridad!concnro
    'rs_seguridad.Close
    StrSql = " SELECT * "
    StrSql = StrSql & " FROM perf_conc "
    StrSql = StrSql & " INNER JOIN user_per ON perf_conc.perfnro = user_per.perfnro "
    StrSql = StrSql & " INNER JOIN concepto ON concepto.concnro = perf_conc.concnro "
    'StrSql = StrSql & " WHERE perf_conc.concnro = " & concnro
    StrSql = StrSql & " WHERE concepto.conccod = " & ConcCod
    StrSql = StrSql & " AND iduser = '" & usuario & "'"
    OpenRecordset StrSql, rs_seguridad
    If rs_seguridad.EOF Then
        'No
        Flog.writeline Espacios(Tabulador * 1) & "El usuario " & usuario & " no tiene permiso sobre el Concepto " & ConcCod
        Flog.writeline Espacios(Tabulador * 2) & "No se inserto el concepto " & ConcCod & " para el empleado " & Legajo
        'InsertaError 1, 8
        HuboError = True
        Exit Sub
    Else
        'OK
    End If
    rs_seguridad.Close
'End If


'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    'Monto
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    If pos2 = 0 Then
        pos2 = Len(strLinea)
        Monto = Mid(strLinea, pos1, pos2)
        Monto = CSng(Replace(CStr(Monto), SeparadorDecimal, "."))
    Else
        Monto = Mid(strLinea, pos1, pos2 - pos1)
        Monto = CSng(Replace(CStr(Monto), SeparadorDecimal, "."))
        
        'Puede veniar Fecha Desde; fecha Hasta ó Retroactivo, Periodo desde , Periodo Hasta
        pos1 = pos2 + 1
        pos2 = InStr(pos1 + 1, strLinea, separador)
        If pos2 > 0 Then
            Aux = Mid(strLinea, pos1, pos2 - pos1)
            If IsDate(Aux) Then
                TieneVigencia = True
                'Fecha desde
                FechaDesde = Mid(strLinea, pos1, pos2 - pos1)
            
                'Fecha Hasta
                pos1 = pos2 + 1
                pos2 = InStr(pos1, strLinea, separador)
                If pos2 > 0 Then
                    FechaHasta = Mid(strLinea, pos1, pos2 - pos1)
                    If IsDate(FechaHasta) Then
                        FechaHasta = CDate(FechaHasta)
                    Else
                        If Not EsNulo(FechaHasta) Then
                            Flog.writeline Espacios(Tabulador * 1) & "Fecha no valida "
                            FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": La fecha no es valida "
                            InsertaError 1, 4
                            HuboError = True
                            Exit Sub
                        End If
                    End If
                    'Marca de Retroactividad
                    pos1 = pos2 + 1
                    pos2 = InStr(pos1 + 1, strLinea, separador)
                    Aux = Mid(strLinea, pos1, pos2 - pos1)
                    If UCase(Aux) = "SI" Then
                        EsRetroactivo = True
                    Else
                        EsRetroactivo = False
                    End If
                
                    'Periodo desde
                    pos1 = pos2 + 1
                    pos2 = InStr(pos1 + 1, strLinea, separador)
                    PeriodoDesde = Mid(strLinea, pos1, pos2 - pos1)
                    
                    'Periodo hasta
                    pos1 = pos2 + 1
                    pos2 = Len(strLinea)
                    PeriodoHasta = Mid(strLinea, pos1, pos2)
                Else
                    pos2 = Len(strLinea)
                    FechaHasta = Mid(strLinea, pos1, pos2)
                
                    TieneVigencia = True
                End If
            Else
                If UCase(Aux) = "SI" Then
                    EsRetroactivo = True
                Else
                    EsRetroactivo = False
                End If
                
                'Periodo desde
                pos1 = pos2 + 1
                pos2 = InStr(pos1 + 1, strLinea, separador)
                PeriodoDesde = Mid(strLinea, pos1, pos2 - pos1)
                
                'Periodo hasta
                pos1 = pos2 + 1
                pos2 = Len(strLinea)
                PeriodoHasta = Mid(strLinea, pos1, pos2)
            End If
        Else
            'Viene Vigencia con fecha desde y sin fecha hasta
            pos2 = Len(strLinea)
            FechaDesde = Mid(strLinea, pos1, pos2)
            TieneVigencia = True
            FechaHasta = ""
        End If
    End If

' ====================================================================
'   Validar los parametros Levantados

'Que exista el legajo
StrSql = "SELECT * FROM empleado where empleg = " & NroLegajo
OpenRecordset StrSql, rs_Empleado
If rs_Empleado.EOF Then
    Flog.writeline Espacios(Tabulador * 1) & "No se encontro el legajo " & NroLegajo
    FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": No se encontro el legajo " & NroLegajo
    InsertaError 1, 8
    HuboError = True
    Exit Sub
Else
    Tercero = rs_Empleado!Ternro
End If

'Que exista el concepto
StrSql = "SELECT * FROM concepto WHERE conccod = '" & ConcCod & "'"
OpenRecordset StrSql, rs_Concepto
If rs_Concepto.EOF Then
    Flog.writeline Espacios(Tabulador * 1) & "No se encontro el Concepto " & ConcCod
    FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": No se encontro el Concepto " & ConcCod
    InsertaError 2, 10
    HuboError = True
    Exit Sub
Else
    ConcNro = rs_Concepto!ConcNro
End If



  If EsRetroactivo Then
    'Chequeo que los periodos sean validos
    'Chequeo Periodo Desde
    StrSql = "SELECT * FROM periodo WHERE pliqnro = " & PeriodoDesde
    If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
    OpenRecordset StrSql, rs_Periodo
    
    If rs_Periodo.EOF Then
        Flog.writeline Espacios(Tabulador * 1) & "Periodo Desde Invalido " & PeriodoDesde
        FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": Periodo Desde Invalido " & PeriodoDesde
        InsertaError 6, 36
        HuboError = True
        Exit Sub
    End If
    
    'Chequeo Periodo Hasta
    StrSql = "SELECT * FROM periodo WHERE pliqnro = " & PeriodoHasta
    If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
    OpenRecordset StrSql, rs_Periodo
    
    If rs_Periodo.EOF Then
        Flog.writeline Espacios(Tabulador * 1) & "Periodo Hasta Invalido " & PeriodoHasta
        FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": Periodo Hasta Invalido " & PeriodoHasta
        InsertaError 7, 36
        HuboError = True
        Exit Sub
    End If


'=============================================================
'Busco si existe la Novedad
If Not TieneVigencia Then
    StrSql = "SELECT * FROM novaju WHERE "
    StrSql = StrSql & " concnro = " & ConcNro
    StrSql = StrSql & " AND empleado = " & Tercero
    StrSql = StrSql & " AND (navigencia = -1 OR navigencia = 0) "
    StrSql = StrSql & " ORDER BY navigencia "
    If rs_NovAju.State = adStateOpen Then rs_NovAju.Close
    OpenRecordset StrSql, rs_NovAju

    If Not rs_NovAju.EOF Then
        If CBool(rs_NovAju!navigencia) Then
            Flog.writeline Espacios(Tabulador * 1) & "No se puede insertar la novedad poqrue ya existe una con Vigencia"
            FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": No se puede insertar la novedad poqrue ya existe una con Vigencia"
            InsertaError 1, 94
            HuboError = True
            Exit Sub
        Else
            'Existe una novedad pero sin vigencia ==> Actualizo
            If PisaNovedad Then 'Actualizo la Novedad
                If Not EsRetroactivo Then
                    StrSql = "UPDATE novaju SET navalor = " & Monto & _
                             " WHERE concnro = " & ConcNro & _
                             " AND empleado = " & Tercero
                Else
                    StrSql = "UPDATE novaju SET navalor = " & Monto & _
                             " , napliqdesde =  " & PeriodoDesde & _
                             " , napliqhasta =  " & PeriodoHasta & _
                             " WHERE concnro = " & ConcNro & _
                             " AND empleado = " & Tercero
                End If
                objConn.Execute StrSql, , adExecuteNoRecords
                Flog.writeline Espacios(Tabulador * 1) & "Novedad Actualizada "
            Else
                Flog.writeline Espacios(Tabulador * 1) & "No se insertó la novedad. Ya existe y no se pisa."
            End If
        End If
    Else
        'Inserto
        If Not EsRetroactivo Then
            StrSql = "INSERT INTO novaju (" & _
                     "empleado,concnro,navalor,navigencia" & _
                     ") VALUES (" & Tercero & _
                     "," & ConcNro & _
                     "," & Monto & _
                     ",0" & _
                     " )"
        Else
            StrSql = "INSERT INTO novaju (" & _
                     "empleado,concnro,navalor,navigencia,napliqdesde,napliqhasta " & _
                     ") VALUES (" & Tercero & _
                     "," & ConcNro & _
                     "," & Monto & _
                     "," & CLng(TieneVigencia) & _
                     "," & PeriodoDesde & _
                     "," & PeriodoHasta & _
                     " )"
        End If
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline Espacios(Tabulador * 1) & "Novedad insertada "
    End If
Else 'Tiene Vigencia
    'Reviso que no se pise
    StrSql = "SELECT * FROM novaju WHERE "
    StrSql = StrSql & " concnro = " & ConcNro
    StrSql = StrSql & " AND empleado = " & Tercero
    StrSql = StrSql & " AND (navigencia = 0 "
    StrSql = StrSql & " OR (navigencia = -1 "
    If Not EsNulo(FechaHasta) Then
        StrSql = StrSql & " AND (nadesde <= " & ConvFecha(FechaHasta)
        StrSql = StrSql & " AND nahasta >= " & ConvFecha(FechaDesde) & ")"
        StrSql = StrSql & " OR  (nadesde <= " & ConvFecha(FechaHasta)
        StrSql = StrSql & " AND nahasta is null )))"
    Else
        StrSql = StrSql & " AND nahasta is null OR nahasta >= " & ConvFecha(FechaDesde) & "))"
    End If
    If rs_NovAju.State = adStateOpen Then rs_NovAju.Close
    OpenRecordset StrSql, rs_NovAju

    If Not rs_NovAju.EOF Then
        Flog.writeline Espacios(Tabulador * 1) & "No se puede insertar la novedad, las vigencias se superponen"
        FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": No se puede insertar la novedad, las vigencias se superponen"
        InsertaError 1, 95
        HuboError = True
        Exit Sub
    Else
        If Not EsRetroactivo Then
            StrSql = "INSERT INTO novaju ("
            StrSql = StrSql & "empleado,concnro,navalor,navigencia,nadesde"
            If Not EsNulo(FechaHasta) Then
                StrSql = StrSql & ",nahasta"
            End If
            StrSql = StrSql & ") VALUES (" & Tercero
            StrSql = StrSql & "," & ConcNro
            StrSql = StrSql & "," & Monto
            StrSql = StrSql & ",-1"
            StrSql = StrSql & "," & ConvFecha(FechaDesde)
            If Not EsNulo(FechaHasta) Then
                StrSql = StrSql & "," & ConvFecha(FechaHasta)
            End If
            StrSql = StrSql & " )"
        Else
            StrSql = "INSERT INTO novaju ("
            StrSql = StrSql & "empleado,concnro,navalor,navigencia,nadesde"
            If Not EsNulo(FechaHasta) Then
                StrSql = StrSql & ",nahasta"
            End If
            StrSql = StrSql & ",napliqdesde,napliqhasta"
            StrSql = StrSql & ") VALUES (" & Tercero
            StrSql = StrSql & "," & ConcNro
            StrSql = StrSql & "," & Monto
            StrSql = StrSql & ",-1"
            StrSql = StrSql & "," & ConvFecha(FechaDesde)
            If Not EsNulo(FechaHasta) Then
                StrSql = StrSql & "," & ConvFecha(FechaHasta)
            End If
            StrSql = StrSql & "," & PeriodoDesde
            StrSql = StrSql & "," & PeriodoHasta
            StrSql = StrSql & " )"
        End If
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline Espacios(Tabulador * 1) & "Novedad insertada "
    End If
  End If
Else
  Texto = "El usuario no tiene autorización sobre el concepto:" & ConcCod
  Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
  HuboError = True
End If
Fin:

'Cierro todo y libero
If rs_NovAju.State = adStateOpen Then rs_NovAju.Close
If rs_Empleado.State = adStateOpen Then rs_Empleado.Close
If rs_Concepto.State = adStateOpen Then rs_Concepto.Close
If rs_Periodo.State = adStateOpen Then rs_Periodo.Close

Set rs_NovAju = Nothing
Set rs_Empleado = Nothing
Set rs_Concepto = Nothing
Set rs_Periodo = Nothing
Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    If InStr(1, Err.Description, "ODBC") > 0 Then
        'Fue error de Consulta de SQL
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
        Flog.writeline
    End If
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    GoTo Fin
End Sub

Public Sub LineaModelo_246(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Inserta en valgrilla.
'              El formato es:
'                   Nro. Escala; Coord1; Coord2; Coord3; Coord4; Coord5; Orden; Valor ; Fecha Vigencia
' Autor      : Scarpa D.
' Fecha      : 21/01/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim pos1 As Long
Dim pos2 As Long
Dim I As Long

Dim NroEscala As Long
Dim Coord1 As String
Dim Coord2 As String
Dim Coord3 As String
Dim Coord4 As String
Dim Coord5 As String
Dim Orden As Long
Dim Valor As Single
Dim fechavigencia As String
Dim straux As String

Dim ValorCorrecto As Boolean

Dim rs_Escala As New ADODB.Recordset
Dim rs_ValEscala As New ADODB.Recordset
  Flog.writeline "Comienzo"
On Error GoTo Manejador_De_Error

' El formato es:
' Nro. Escala; Coord1; Coord2; Coord3; Coord4; Coord5; Orden; Valor
     Flog.writeline "strLinea" & strLinea
    'Nro de Escala
    pos1 = 1
    pos2 = InStr(pos1, strLinea, separador)
    If IsNumeric(Mid$(strLinea, pos1, pos2 - pos1)) Then
        NroEscala = Mid$(strLinea, pos1, pos2 - pos1)
    Else
        InsertaError 1, 3
        HuboError = True
        Exit Sub
    End If
      Flog.writeline "Nro de Escala" & NroEscala
    'Coord1
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
  
    Coord1 = Mid(strLinea, pos1, pos2 - pos1)
    If IsNumeric(Coord1) Then
       If CLng(Coord1) = 0 Then
          Coord1 = "null"
       End If
    Else
       InsertaError 2, 3
       HuboError = True
       Exit Sub
    End If
       Flog.writeline "Coord1" & Coord1
    'Coord2
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    Coord2 = Mid(strLinea, pos1, pos2 - pos1)
    If IsNumeric(Coord2) Then
       If CLng(Coord2) = 0 Then
          Coord2 = "null"
       End If
    Else
       InsertaError 3, 3
       HuboError = True
       Exit Sub
    End If
           Flog.writeline "Coord2" & Coord2
    'Coord3
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    Coord3 = Mid(strLinea, pos1, pos2 - pos1)
    If IsNumeric(Coord3) Then
       If CLng(Coord3) = 0 Then
          Coord3 = "null"
       End If
    Else
       InsertaError 4, 3
       HuboError = True
       Exit Sub
    End If
           Flog.writeline "Coord3" & Coord3
    'Coord4
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    Coord4 = Mid(strLinea, pos1, pos2 - pos1)
    If IsNumeric(Coord4) Then
       If CLng(Coord4) = 0 Then
          Coord4 = "null"
       End If
    Else
       InsertaError 5, 3
       HuboError = True
       Exit Sub
    End If
          Flog.writeline "Coord4" & Coord4
    'Coord5
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    Coord5 = Mid(strLinea, pos1, pos2 - pos1)
    If IsNumeric(Coord5) Then
       If CLng(Coord5) = 0 Then
          Coord5 = "null"
       End If
    Else
       InsertaError 6, 3
       HuboError = True
       Exit Sub
    End If
           Flog.writeline "Coord5" & Coord5
    'Orden
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    Orden = Mid(strLinea, pos1, pos2 - pos1)
    If Not IsNumeric(Orden) Then
       InsertaError 7, 3
       HuboError = True
       Exit Sub
    End If
             Flog.writeline "Orden" & Orden
    ''Valor
    'pos1 = pos2 + 1
    'pos2 = Len(strLinea)
    'Valor = Mid(strLinea, pos1, pos2)
     Flog.writeline "SeparadorDecimal" & SeparadorDecimal
    'Valor
    
    pos1 = pos2 + 1
    'pos2 = InStr(pos1 + 1, strLinea, separador)
    pos2 = Len(strLinea) + 1
    straux = Replace(strLinea, SeparadorDecimal, ".")
      Flog.writeline "pos1" & pos1
    Flog.writeline "pos2" & pos2
      Flog.writeline "straux" & straux
    Valor = Mid(straux, pos1, pos2 - pos1)
    Flog.writeline "Valor" & Valor
    
    'Fecha de Vigencia
  '  Obligatorio = True ' puse en false
   ' pos1 = pos2 + 1
    'pos2 = Len(strLinea)
  '  Aux = Trim(Mid(strLinea, pos1, pos2))
   '  Flog.writeline "Aux" & Aux
   ' If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
    '     Flog.writeline "dio error"
    '    InsertaError 9, 25
    '    HuboError = True
    '    Exit Sub
   ' End If
   ' fechavigencia = CDate(Aux)
   '  Flog.writeline "fechavigencia" & fechavigencia
' ====================================================================
'   Validar los parametros Levantados

'Que exista la escala
StrSql = "SELECT * FROM cabgrilla where cgrnro = " & NroEscala
 Flog.writeline "verifica que exista la escala:" & StrSql
OpenRecordset StrSql, rs_Escala
If rs_Escala.EOF Then
    Flog.writeline "No se encontro la escala nro. " & NroEscala
    InsertaError 1, 8
    HuboError = True
    Exit Sub
End If

'Que el valor sea valido
ValorCorrecto = True
If Not IsNumeric(Valor) Then
    Flog.writeline "El valor no es numerico " & Monto
    InsertaError 2, 5
    HuboError = True
    Exit Sub
Else
    ValorCorrecto = True
End If

'=============================================================
'Inserto la escala

'Controlo si ya existe
StrSql = "SELECT * FROM valgrilla WHERE cgrnro = " & NroEscala & " AND vgrorden = " & Orden


If Coord1 = "null" Then
   StrSql = StrSql & " AND vgrcoor_1 IS NULL "
Else
   StrSql = StrSql & " AND vgrcoor_1 = " & Coord1
End If

If Coord2 = "null" Then
   StrSql = StrSql & " AND vgrcoor_2 IS NULL "
Else
   StrSql = StrSql & " AND vgrcoor_2 = " & Coord2
End If

If Coord3 = "null" Then
   StrSql = StrSql & " AND vgrcoor_3 IS NULL "
Else
   StrSql = StrSql & " AND vgrcoor_3 = " & Coord3
End If

If Coord4 = "null" Then
   StrSql = StrSql & " AND vgrcoor_4 IS NULL "
Else
   StrSql = StrSql & " AND vgrcoor_4 = " & Coord4
End If

If Coord5 = "null" Then
   StrSql = StrSql & " AND vgrcoor_5 IS NULL "
Else
   StrSql = StrSql & " AND vgrcoor_5 = " & Coord5
End If

OpenRecordset StrSql, rs_ValEscala
 Flog.writeline "Controlo si ya existe:" & StrSql
If rs_ValEscala.EOF Then

    StrSql = "INSERT INTO valgrilla ("
    StrSql = StrSql & "cgrnro, vgrcoor_1, vgrcoor_2, vgrcoor_3, vgrcoor_4, vgrcoor_5, vgrorden, vgrvalor" ', vgrfecvigencia "
    StrSql = StrSql & ") VALUES (" & NroEscala
    StrSql = StrSql & "," & Coord1
    StrSql = StrSql & "," & Coord2
    StrSql = StrSql & "," & Coord3
    StrSql = StrSql & "," & Coord4
    StrSql = StrSql & "," & Coord5
    StrSql = StrSql & "," & Orden
    StrSql = StrSql & "," & Valor
    'StrSql = StrSql & "," & ConvFecha(fechavigencia)
    StrSql = StrSql & " )"
    
Else
    
    StrSql = " UPDATE valgrilla "
    StrSql = StrSql & " SET vgrvalor = " & Valor
 '   StrSql = StrSql & " ,vgrfecvigencia = " & ConvFecha(fechavigencia)
    StrSql = StrSql & " WHERE cgrnro = " & NroEscala & " AND vgrorden = " & Orden
    
    If Coord1 = "null" Then
       StrSql = StrSql & " AND vgrcoor_1 IS NULL "
    Else
       StrSql = StrSql & " AND vgrcoor_1 = " & Coord1
    End If
    
    If Coord2 = "null" Then
       StrSql = StrSql & " AND vgrcoor_2 IS NULL "
    Else
       StrSql = StrSql & " AND vgrcoor_2 = " & Coord2
    End If
    
    If Coord3 = "null" Then
       StrSql = StrSql & " AND vgrcoor_3 IS NULL "
    Else
       StrSql = StrSql & " AND vgrcoor_3 = " & Coord3
    End If
    
    If Coord4 = "null" Then
       StrSql = StrSql & " AND vgrcoor_4 IS NULL "
    Else
       StrSql = StrSql & " AND vgrcoor_4 = " & Coord4
    End If
    
    If Coord5 = "null" Then
       StrSql = StrSql & " AND vgrcoor_5 IS NULL "
    Else
       StrSql = StrSql & " AND vgrcoor_5 = " & Coord5
    End If

End If
 Flog.writeline "inserta /modfifica:" & StrSql
objConn.Execute StrSql, , adExecuteNoRecords

'Agregado el 27/08/2013
'StrSql = " UPDATE cabgrilla "
'StrSql = StrSql & " SET cgrfecvigencia = " & ConvFecha(fechavigencia)
'StrSql = StrSql & " WHERE cgrnro = " & NroEscala & " "
'objConn.Execute StrSql, , adExecuteNoRecords
'fin
 Flog.writeline "modifica cabgrilla:" & StrSql
 Call Escribir_Log("flogp", 0, 1, StrSql, Tabs + 1, strLinea)
Flog.writeline " Escala insertada "

Fin:
'cierro y libero
If rs_Escala.State = adStateOpen Then rs_Escala.Close
If rs_ValEscala.State = adStateOpen Then rs_ValEscala.Close

Set rs_Escala = Nothing
Set rs_ValEscala = Nothing

Exit Sub

Manejador_De_Error:
    HuboError = True
    Texto = " Error (246): " & Err.Description
    Call Escribir_Log("floge", 0, 1, Texto, Tabs + 1, strLinea)
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    If InStr(1, Err.Description, "ODBC") > 0 Then
        'Fue error de Consulta de SQL
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
        Flog.writeline
    End If
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    GoTo Fin

End Sub


Public Sub LineaModelo_250(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Inserta en Acumuladores Mensuales.
' Autor      : Fernando Favre
'              El formato es:
'                   Legajo; Acunro; Monto; catidad; año; mes
' Fecha      : 10/02/2005
' Ultima Mod.: 28/04/2005 - FGZ
' Descripcion: Se sacó el control del periodo
' ---------------------------------------------------------------------------------------------
Dim pos1 As Long
Dim pos2 As Long
Dim I As Long

Dim Tercero As Long
Dim NroLegajo As Long
Dim acuNro As Long
Dim Monto As Single
Dim Cantidad As Single
Dim Anio As Long
Dim Mes As Long
Dim Pliqnro As Long

Dim rs_Empleado As New ADODB.Recordset
Dim rs_Acumulador As New ADODB.Recordset
Dim rs_Acu_Mes As New ADODB.Recordset
Dim rs_Periodo As New ADODB.Recordset

On Error GoTo Manejador_De_Error

' El formato es:
' Legajo; Acunro; Monto; cantidad; año; mes

    'Nro de Legajo
    pos1 = 1
    pos2 = InStr(pos1, strLinea, separador)
    If IsNumeric(Mid$(strLinea, pos1, pos2 - pos1)) Then
        NroLegajo = Mid$(strLinea, pos1, pos2 - pos1)
    Else
        InsertaError 1, 8
        HuboError = True
        Exit Sub
    End If
    
    'Acumulador
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    acuNro = Mid(strLinea, pos1, pos2 - pos1)

    'Monto
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    'Monto = Mid(strLinea, pos1, pos2 - pos1)
    Monto = CSng(Replace(CStr(Mid(strLinea, pos1, pos2 - pos1)), SeparadorDecimal, "."))
               
    'Cantidad
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    Cantidad = Mid(strLinea, pos1, pos2 - pos1)
        
    'Año
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    Anio = Mid(strLinea, pos1, pos2 - pos1)
        
    'Mes
    pos1 = pos2 + 1
    pos2 = Len(strLinea)
    Mes = Mid(strLinea, pos1, pos2)

' ====================================================================
'   Validar los parametros Levantados

'Que exista el legajo
StrSql = "SELECT * FROM empleado where empleg = " & NroLegajo
OpenRecordset StrSql, rs_Empleado
If rs_Empleado.EOF Then
    Flog.writeline "No se encontro el legajo " & NroLegajo
    InsertaError 1, 8
    HuboError = True
    Exit Sub
Else
    Tercero = rs_Empleado!Ternro
End If

'Valido el acumulador
StrSql = "SELECT * FROM acumulador WHERE acunro = " & acuNro
OpenRecordset StrSql, rs_Acumulador
If rs_Acumulador.EOF Then
    Flog.writeline "El Acumulador no existe " & acuNro
    InsertaError 2, 52
    HuboError = True
    Exit Sub
End If

'Que el monto sea valido
If Not IsNumeric(Monto) Then
    Flog.writeline "El monto no es numerico " & Monto
    InsertaError 3, 5
    HuboError = True
    Exit Sub
End If

'Que la cantidad sea valida
If Not IsNumeric(Cantidad) Then
    Flog.writeline "La cantidad no es numerico " & Cantidad
    InsertaError 4, 5
    HuboError = True
    Exit Sub
End If

'Que el año sea valido
If Not IsNumeric(Anio) Then
    Flog.writeline "El año no es numerico " & Anio
    InsertaError 5, 5
    HuboError = True
    Exit Sub
End If

'Que el mes sea valido
If Not IsNumeric(Mes) Then
    Flog.writeline "El mes no es numerico " & Anio
    InsertaError 6, 5
    HuboError = True
    Exit Sub
End If

'28/04/2005 - FGZ
' se sacó esta verificacion

''Busco el pliqnro correspondiente a ese año y mes
'StrSql = "SELECT * FROM PERIODO WHERE pliqmes =" & Mes
'StrSql = StrSql & " AND pliqanio =" & Anio
'OpenRecordset StrSql, rs_Periodo
'If rs_Periodo.EOF Then
'    Flog.Writeline "No existe periodo correspondiente al año " & Anio & " y mes  " & Mes
'    InsertaError 6, 5
'    HuboError = True
'    Exit Sub
'Else
'    PliqNro = rs_Periodo!PliqNro
'End If

'=============================================================
'Busco si existe el acu_mes
StrSql = "SELECT * FROM acu_mes " & _
         " WHERE acunro = " & acuNro & _
         " AND ammes = " & Mes & _
         " AND amanio = " & Anio & _
         " AND ternro = " & Tercero
OpenRecordset StrSql, rs_Acu_Mes

If rs_Acu_Mes.EOF Then
        StrSql = "INSERT INTO acu_mes ("
        StrSql = StrSql & "acunro, ammonto, ammontoreal, amcant, ternro, amanio, ammes"
        StrSql = StrSql & ") VALUES (" & acuNro
        StrSql = StrSql & "," & Monto
        StrSql = StrSql & "," & Monto
        StrSql = StrSql & "," & Cantidad
        StrSql = StrSql & "," & Tercero
        StrSql = StrSql & "," & Anio
        StrSql = StrSql & "," & Mes
        StrSql = StrSql & " )"
        objConn.Execute StrSql, , adExecuteNoRecords
    
        Flog.writeline "Acumulador insertado "
Else
        'Piso los datos del acu_mes
        StrSql = "UPDATE acu_mes SET ammonto = " & Monto
        StrSql = StrSql & " , amcant = " & Cantidad
        StrSql = StrSql & " , ammontoreal = " & Monto
        StrSql = StrSql & " WHERE acunro = " & acuNro
        StrSql = StrSql & " AND amanio = " & Anio
        StrSql = StrSql & " AND ammes = " & Mes
        StrSql = StrSql & " AND ternro = " & Tercero
        objConn.Execute StrSql, , adExecuteNoRecords
            
        Flog.writeline "Acumulador Actualizado "
End If

Fin:
'cierro y libero
If rs_Empleado.State = adStateOpen Then rs_Empleado.Close
If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
If rs_Acu_Mes.State = adStateOpen Then rs_Acu_Mes.Close
If rs_Acumulador.State = adStateOpen Then rs_Acumulador.Close

Set rs_Empleado = Nothing
Set rs_Periodo = Nothing
Set rs_Acu_Mes = Nothing
Set rs_Acumulador = Nothing
Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    If InStr(1, Err.Description, "ODBC") > 0 Then
        'Fue error de Consulta de SQL
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
        Flog.writeline
    End If
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    GoTo Fin

End Sub


Public Sub LineaModelo_253(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Inserta un Embargo por Monto o Porcentaje segun formato.
' Autor      : GdeCos
'              El formato es:
'                   Formato 1
'                       Monto; ternro; embesext; tpenro; embest; embanioini; embmesini: embquinini; monto; embcantcuo
'                   ó
'                   Formato 2
'                       Porcentaje; ternro; embesext; tpenro; embest; embanioini; embmesini; embquinini; Monto; Cuotas; embaniofin; embmesfin; embquinfin; acumulador; porcentaje
' Aclaracion: El primer campo de cualquiera de los dos formatos (Monto o Porcentaje) es la palabra "Monto" o "Porcentaje" respectivamente.
' Fecha      : 22/03/2005
' Ultima Mod.: FGZ - 20/12/2007 - Le agregué 2 campos mas al formato de Porcentaje (acumulador y porcentaje)
' ---------------------------------------------------------------------------------------------
Dim pos1 As Long
Dim pos2 As Long
    
Dim Ternro As Long
Dim Embdesext As String
Dim Embest As String
Dim Tpenro As Long
Dim Anioini As Long
Dim Mesini As Long
Dim Quinini As Long
Dim Aniofin As Long
Dim Mesfin As Long
Dim Quinfin As Long
Dim Cantcuo As Long
Dim Monto As Single
Dim Embnro As Long
Dim Legajo As Long
Dim acuNro As Long
Dim porcentaje As Integer

Dim MoP As String
Dim MaxAct As Long
Dim cant As Long
Dim Arreglo 'mdf
Dim rs_Empleado As New ADODB.Recordset
Dim rs_Embargo As New ADODB.Recordset
Dim rs_TipoEmb As New ADODB.Recordset
Dim rs_Acu As New ADODB.Recordset

'       El formato es:
'           Formato 1
'               Monto; ternro; embesext; tpenro; embest; embanioini; embmesini: embquinini; monto; embcantcuo
'           ó
'           Formato 2
'               Porcentaje; ternro; embesext; tpenro; embest; embanioini; embmesini; embquinini; monto; embaniofin; embmesfin; embquinfin;Acumulador
    
    On Error GoTo Error_Handler
    
    'Monto o Porcentaje
    Arreglo = Split(strLinea, separador)   'mdf-
    
   ' pos1 = 1 'mdf
   ' pos2 = InStr(strLinea, separador) 'mdf
   '  MoP = Mid(strLinea, pos1, pos1) 'mdf
     MoP = Arreglo(0) 'mdf
     If MoP <> "" And MoP <> " " Then
        MoP = UCase(MoP)
     End If
     
     If ((MoP <> "M") And (MoP <> "MONTO") And (MoP <> "P") And (MoP <> "PORCENTAJE")) Then 'mdf
        Flog.writeline Espacios(Tabulador * 1) & "Campo de Identificación del Embargo incorrecto."
        FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": El campo de Identificacion no comienza con 'M' o con 'P'" & MoP
        'InsertaError 1, 8
        InsertaError 1, 11
        HuboError = True
        Exit Sub
    End If

        
        ' Legajo
        'pos1 = pos2 + 1 mdf
        'pos2 = InStr(pos1 + 1, strLinea, separador) mdf
        If IsNumeric(Arreglo(1)) Then
                Legajo = Arreglo(1)
        Else
                Flog.writeline Espacios(Tabulador * 1) & "El Nro. de Legajono es numerico "
                FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": El Nro. de Legajo no es numerico"
                'InsertaError 2, 8
                InsertaError 2, 3
                HuboError = True
                Exit Sub
        End If

        'Descripcion
        'pos1 = pos2 + 1 mdf
        'pos2 = InStr(pos1 + 1, strLinea, separador) mdf
        'Embdesext = Mid(strLinea, pos1, pos2 - pos1) mdf
         Embdesext = Arreglo(2) 'mdf
        ' Tipo de Embargo
       ' pos1 = pos2 + 1 'mdf
       ' pos2 = InStr(pos1 + 1, strLinea, separador)
        If IsNumeric(Arreglo(3)) Then
                'Tpenro = Mid$(strLinea, pos1, pos2 - pos1)
                 Tpenro = Arreglo(3)
        Else
                Flog.writeline Espacios(Tabulador * 1) & "El codigo del Tipo de Embargo no es numerico "
                FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": El codigo de Tipo de Embargo no es numerico"
                'InsertaError 3, 8
                InsertaError 4, 3
                HuboError = True
                Exit Sub
        End If

        'Estado
        'pos1 = pos2 + 1
        'pos2 = InStr(pos1 + 1, strLinea, separador)
        'Embest = Mid$(strLinea, pos1, 1)
        Embest = Arreglo(4)    'iria error 5
        
        ' Año de Inicio
        
        'pos1 = pos2 + 1 mdf
        'pos2 = InStr(pos1 + 1, strLinea, separador) mdf
        If (IsNumeric(Arreglo(5)) And (Arreglo(5) > 1900)) Then
                Anioini = Arreglo(5)
        Else
                Flog.writeline Espacios(Tabulador * 1) & "El Año de Inicio no es válido "
                FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": El Año de Inicio no es válido"
                'InsertaError 4, 8
                InsertaError 6, 3
                HuboError = True
                Exit Sub
        End If

        ' Mes de Inicio
        'pos1 = pos2 + 1
        'pos2 = InStr(pos1 + 1, strLinea, separador)
        'Mesini = Mid$(strLinea, pos1, pos2 - pos1)
        Mesini = Arreglo(6)
        If IsNumeric(Mesini) Then
            If (Mesini <= 0) Or (Mesini >= 13) Then
                    Flog.writeline Espacios(Tabulador * 1) & "El Mes de Inicio no es válido "
                    FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": El Mes de Inicio no es válido"
                    'InsertaError 5, 8
                    InsertaError 7, 42
                    HuboError = True
                    Exit Sub
            End If
        Else
              Flog.writeline Espacios(Tabulador * 1) & "El Mes de Inicio no es válido "
              FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": El Mes de Inicio no es válido"
              InsertaError 7, 42
              HuboError = True
              Exit Sub
        End If
       

        ' Quincena de Inicio
       ' pos1 = pos2 + 1 ' mdf
       ' pos2 = InStr(pos1 + 1, strLinea, separador) 'mdf
        Quinini = Arreglo(7)
        If Not IsNumeric(Quinini) Or ((Quinini <= 0) Or (Quinini >= 3)) Then
                Flog.writeline Espacios(Tabulador * 1) & "La Quincena de Inicio no es válida"
                FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": La Quincena de Inicio no es válida"
                'InsertaError 6, 8
                InsertaError 8, 43
                HuboError = True
                Exit Sub
        End If




        'to Do: Ver Monto
        
        
        'pos1 = pos2 + 1
        'pos2 = InStr(pos1 + 1, strLinea, separador)
        If IsNumeric(Arreglo(8)) Then
           Monto = CDbl(Arreglo(8)) 'verificar q sea numerico
           Monto = CSng(Replace(CStr(Monto), SeparadorDecimal, "."))
        Else
            Flog.writeline Espacios(Tabulador * 1) & "El monto no es correcto"
            FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": El monto debe ser numerico"
                'InsertaError 6, 8
                InsertaError 9, 3
                HuboError = True
                Exit Sub
        End If
        
        If MoP = "M" Or MoP = "MONTO" Then  'mdf - calculaba mal pos2
             ' Cantidad de Cuotas
                'pos1 = pos2 + 1
               ' pos2 = InStr(pos1 + 1, strLinea, separador)
                If IsNumeric(Arreglo(9)) Then
                        'Cantcuo = Mid$(strLinea, pos1)
                         Cantcuo = Arreglo(9)
                Else
                     If (Arreglo(9) <> "" And Arreglo(9) <> " " And Arreglo(9) <> "N/A") Then
                        Flog.writeline Espacios(Tabulador * 1) & "El Nro de Cuotas no es numerico "
                        FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": El Nro de Cuotas no es numerico"
                        InsertaError 10, 3
                        HuboError = True
                        Exit Sub
                     End If 'mdf
                End If
        

        Else

                ' Año de Finaizacion
                'pos1 = pos2 + 1 'mdf
                'pos2 = InStr(pos1 + 1, strLinea, separador) mdf
                If IsNumeric(Arreglo(10)) Then
                      If (Arreglo(10) > 1900) Then
                        Aniofin = Arreglo(10)
                      End If
                Else
                    If (Arreglo(10) <> "" And Arreglo(10) <> " " And Arreglo(10) <> "N/A") Then
                        Flog.writeline Espacios(Tabulador * 1) & "El Año de Finalización no es válido "
                        FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": El Año de Finalización no es válido o es menor a 1900"
                        InsertaError 11, 3
                        HuboError = True
                        Exit Sub
                    End If  'mdf
                End If

                ' Mes de Finalización
               ' pos1 = pos2 + 1 mdf
               ' pos2 = InStr(pos1 + 1, strLinea, separador) mdf
                'Mesfin = arreglo(12)
                
                If Not IsNumeric(Arreglo(11)) Then
                    If (Arreglo(11) <> "" And Arreglo(11) <> " " And Arreglo(11) <> "N/A") Then
                        Flog.writeline Espacios(Tabulador * 1) & "El Mes de Finalización no es válido "
                        FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": El Mes de Finalización no es válido"
                        InsertaError 12, 42
                        HuboError = True
                        Exit Sub
                    End If
                Else
                    Mesfin = Arreglo(11)
                    'If ((Mesfin > 0) And (Mesfin < 13)) Then
                     If ((Mesfin <= 0) Or (Mesfin >= 13)) Then 'mdf
                        Flog.writeline Espacios(Tabulador * 1) & "El Mes de Finalización no es válido "
                        FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": El Mes de Finalización no es válido"
                        InsertaError 12, 42
                        HuboError = True
                        Exit Sub
                    End If
                End If 'mdf
        
'                ' Quincena de Finalización
'                pos1 = pos2 + 1
'                pos2 = Len(strLinea)
'                Quinfin = Mid$(strLinea, pos1)
'                If Not (IsNumeric(Quinfin) And (Quinfin >= 0) And (Quinfin < 3)) Then
'                        Flog.Writeline Espacios(Tabulador * 1) & "La Quincena de Finalización no es válida"
'                        FlogE.Writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": La Quincena de Finalización no es válida"
'                        InsertaError 10, 8
'                        HuboError = True
'                        Exit Sub
'                End If

'FGZ - 20/12/2007 - Le agregué 2 campos mas .... Acumulador y % --------
                ' Quincena de Finalización
                'pos1 = pos2 + 1 mdf
                'pos2 = InStr(pos1 + 1, strLinea, separador) mdf
                'Quinfin = arreglo(13)
                If IsNumeric(Arreglo(12)) Then
                    If (Arreglo(12) = 1) Or (Arreglo(12) = 2) Then
                      Quinfin = Arreglo(12)
                    Else
                        Flog.writeline Espacios(Tabulador * 1) & "La Quincena de Finalización no es válida"
                        FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": La Quincena de Finalización no es válida"
                        InsertaError 13, 43
                        HuboError = True
                        Exit Sub
                    End If
                Else
                    If (Arreglo(12) <> "" And Arreglo(12) <> " " And Arreglo(12) <> "N/A") Then
                            Flog.writeline Espacios(Tabulador * 1) & "La Quincena de Finalización no es válida"
                            FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": La Quincena de Finalización no es válida"
                            InsertaError 13, 43
                            HuboError = True
                            Exit Sub
                    End If 'mdf
                End If
                'Acumulador
               ' pos1 = pos2 + 1 mdf
               ' pos2 = InStr(pos1 + 1, strLinea, separador) mdf
                'acuNro = arreglo(14) mdf
                If IsNumeric(Arreglo(13)) Then
                 acuNro = Arreglo(13)
                Else
                    If (Arreglo(13) <> "" And Arreglo(13) <> " " And Arreglo(13) <> "N/A") Then
                            Flog.writeline Espacios(Tabulador * 1) & "El Acumulador no es válido"
                            FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": El Acumulador no es válido"
                            InsertaError 14, 52
                            HuboError = True
                            Exit Sub
                    End If 'mdf
                End If
                'Porcentaje
                'pos1 = pos2 + 1
                'pos2 = Len(strLinea)
                If IsNumeric(Arreglo(14)) Then
                 porcentaje = Arreglo(14)
                Else
                     If (Arreglo(14) <> "" And Arreglo(14) <> " " And Arreglo(14) <> "N/A") Then
                            Flog.writeline Espacios(Tabulador * 1) & "El Porcentaje no es válido"
                            FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": El Porcentaje no es válido"
                            InsertaError 15, 3
                            HuboError = True
                            Exit Sub
                    End If 'mdf
               End If
'FGZ - 20/12/2007 - Le agregué 2 campos mas .... Acumulador y % --------

        End If


' ====================================================================
'   Validar los parametros Levantados

'Que exista el legajo
StrSql = "SELECT * FROM empleado where empleg = " & Legajo
OpenRecordset StrSql, rs_Empleado
If rs_Empleado.EOF Then
    Flog.writeline Espacios(Tabulador * 1) & "No se encontro el Empleado"
    FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": No se encontro el empleado con Nro. de Legajo = " & Legajo
    InsertaError 1, 8
    HuboError = True
    Exit Sub
Else
    Ternro = rs_Empleado!Ternro
End If


'Que exista el Tipo
StrSql = "SELECT * FROM tipoemb WHERE tpenro = " & Tpenro
OpenRecordset StrSql, rs_TipoEmb
If rs_TipoEmb.EOF Then
    Flog.writeline Espacios(Tabulador * 1) & "No se encontro el Tipo de Embargo " & Tpenro
    FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": No se encontro el Tipo de Embargo: " & Tpenro
    InsertaError 4, 10
    HuboError = True
    Exit Sub
End If

'Que el Estado sea Correcto (A - Activo, F - Finalizado, I - Inhabilitado, E - En Espera)
Select Case Embest
        Case "A", "F", "I", "E": 'Ok
        Case Else:
                        Flog.writeline Espacios(Tabulador * 1) & "Estado del Embargo incorrecto"
                        FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": El Estado ingresado no es válido" & Embest
                        InsertaError 5, 11
                        HuboError = True
                        Exit Sub
End Select

'Que exista el Acumulador
StrSql = "SELECT acunro FROM acumulador where acunro = " & acuNro
OpenRecordset StrSql, rs_Acu
If rs_Empleado.EOF Then
    Flog.writeline Espacios(Tabulador * 1) & "No se encontro el Acumulador"
    FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": No se encontro el Acumulador " & acuNro
    InsertaError 1, 8
    HuboError = True
    Exit Sub
End If





' Verifico que se pueda crear un nuevo embargo con estado "Activo" de acuerdo al Tipo de Embargo
' --------------------------------------------------------------------
If (Embest = "A") Then
    StrSql = "SELECT tpemaxap FROM tipoemb "
    StrSql = StrSql & " WHERE tpenro = " & Tpenro
    If rs_TipoEmb.State = adStateOpen Then rs_TipoEmb.Close
    OpenRecordset StrSql, rs_TipoEmb
    If Not rs_TipoEmb.EOF Then
            MaxAct = CLng(rs_TipoEmb!tpemaxap)
    End If
    rs_TipoEmb.Close
    
    StrSql = "SELECT COUNT (embnro) AS cuenta FROM embargo "
    StrSql = StrSql & " WHERE tpenro = " & Tpenro
    StrSql = StrSql & " AND embest = 'A'"
    'FGZ - 20/12/2007 - faltaba para que empleado busca la cantidad ----
    StrSql = StrSql & " AND ternro = " & Ternro
    'FGZ - 20/12/2007 - faltaba para que empleado busca la cantidad ----
    OpenRecordset StrSql, rs_TipoEmb
    
    cant = rs_TipoEmb!Cuenta
    
    rs_TipoEmb.Close
    
    If ((MaxAct - cant) <= 0) Then
    
            Flog.writeline Espacios(Tabulador * 1) & "Imposible importar Embargo"
            FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": Imposible realizar la operación. No se aceptan más embargos Activos para este Tipo de Embargo."
            InsertaError 1, 66
            HuboError = True
            Exit Sub
    
    End If
End If
    
'=============================================================
'Busco si existe otro embargo con la misma descripcion
StrSql = "SELECT * FROM embargo WHERE "
StrSql = StrSql & " embdesext = '" & Embdesext & "'"
If rs_Embargo.State = adStateOpen Then rs_Embargo.Close
OpenRecordset StrSql, rs_Embargo

If Not rs_Embargo.EOF Then
        Flog.writeline Espacios(Tabulador * 1) & "No se puede insertar el embargo poqrue ya existe uno con la misma descripción"
        FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": Embargo con descripcion repetida" & Embdesext
        InsertaError 1, 94
        HuboError = True
        Exit Sub
Else
   'Inserto
        If MoP = "M" Then
                StrSql = "INSERT INTO embargo (" & _
                                 "ternro, embdesext, tpenro, embest, embanioini, embmesini, embquinini, embquincenal, " & _
                                 "embimp, embcantcuo, embimpfij, embimppor, embfecest" & _
                                ") VALUES (" & Ternro & _
                                 ",'" & Embdesext & _
                                 "'," & Tpenro & _
                                 ",'" & Embest & _
                                 "'," & Anioini & _
                                 "," & Mesini & _
                                 "," & Quinini
                If (Quinini > 0) Then
                        StrSql = StrSql & "," & "-1"
                Else
                        StrSql = StrSql & "," & "0"
                End If
                StrSql = StrSql & "," & Monto & _
                                 "," & Cantcuo & _
                                 ",0" & _
                                 ",0" & _
                                 "," & ConvFecha(Date) & _
                                 ")"
                
                objConn.Execute StrSql, , adExecuteNoRecords
                Flog.writeline Espacios(Tabulador * 1) & "Embargo insertado "
                
                Embnro = getLastIdentity(objConn, "embargo")

                GenerarCuotas Embnro, Cantcuo, Monto, Anioini, Mesini, Quinini
        
        Else
                StrSql = "INSERT INTO embargo (" & _
                                 "ternro, embdesext, tpenro, embest, embanioini, embmesini, embquinini, embquincenal, " & _
                                 "embaniofin, embmesfin, embquifin, embimp, embcantcuo, embimpfij, embimppor, embfecest" & _
                                ") VALUES (" & Ternro & _
                                 ",'" & Embdesext & _
                                 "'," & Tpenro & _
                                 ",'" & Embest & _
                                 "'," & Anioini & _
                                 "," & Mesini & _
                                 "," & Quinini
                If (Quinini > 0) Then
                        StrSql = StrSql & "," & "-1"
                Else
                        StrSql = StrSql & "," & "0"
                End If
                StrSql = StrSql & "," & Aniofin & _
                                 "," & Mesfin & _
                                 "," & Quinfin & _
                                 "," & Monto & _
                                 "," & Cantcuo & _
                                 ",0" & _
                                 ",0" & _
                                 "," & ConvFecha(Date) & _
                                 ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Embnro = getLastIdentity(objConn, "embargo")
                
                'FGZ - 20/12/2007 - Inserto en la tabla emb_acu ------------------
                StrSql = "INSERT INTO emb_acu (embnro,acnro,embacporc) "
                StrSql = StrSql & " VALUES ("
                StrSql = StrSql & Embnro
                StrSql = StrSql & "," & acuNro
                StrSql = StrSql & "," & porcentaje
                StrSql = StrSql & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                
                'FGZ - 20/12/2007 - Inserto en la tabla emb_acu ------------------
                
                Flog.writeline Espacios(Tabulador * 1) & "Embargo insertado "
        
        End If
End If

Fin:
'Cierro todo y libero
If rs_Empleado.State = adStateOpen Then rs_Empleado.Close
If rs_TipoEmb.State = adStateOpen Then rs_TipoEmb.Close
If rs_Embargo.State = adStateOpen Then rs_Embargo.Close

Set rs_Empleado = Nothing
Set rs_Embargo = Nothing
Set rs_TipoEmb = Nothing
Exit Sub

Error_Handler:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    If InStr(1, Err.Description, "ODBC") > 0 Then
        'Fue error de Consulta de SQL
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
        Flog.writeline
    End If
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    GoTo Fin
End Sub


Private Sub sigMes(ByRef Anio As Long, ByRef Mes As Long)
' ---------------------------------------------------------------------------------------------
' Descripcion: Calcua el anio y mes siguiente a los pasados por parametro y los devuelve en
'                               esas mismas variables
' Autor      : GdeCos
' Fecha      : 22/03/2005
' Ultima Mod.:
' ---------------------------------------------------------------------------------------------
        If (Mes = 12) Then
                Mes = 1
                Anio = Anio + 1
        Else
                Mes = Mes + 1
        End If
End Sub


Private Sub sigQuin(ByRef Anio As Long, ByRef Mes As Long, ByRef quin As Long)
' ---------------------------------------------------------------------------------------------
' Descripcion: Calcua el anio, mes y quincena siguiente a los pasados por parametro y los devuelve en
'                               esas mismas variables
' Autor      : GdeCos
' Fecha      : 22/03/2005
' Ultima Mod.:
' ---------------------------------------------------------------------------------------------
        If (quin = 2) Then
                quin = 1
                If (Mes = 12) Then
                        Mes = 1
                        Anio = Anio + 1
                Else
                        Mes = Mes + 1
                End If
        Else
                quin = quin + 1
        End If
End Sub


Public Sub GenerarCuotas(ByVal Embnro As Long, ByVal Cantcuo As Long, ByVal Monto As Double, ByVal Anioini As Long, ByVal Mesini As Long, ByVal Quinini As Long)
' ---------------------------------------------------------------------------------------------
' Descripcion: Genera las cuotas para el embargo "embnro" pasado como parametro
' Autor      : GdeCos
' Fecha      : 22/03/2005
' Ultima Mod.:
' ---------------------------------------------------------------------------------------------

Dim l_auxCant As Double
Dim I As Long

If Cantcuo > 0 Then
        l_auxCant = Monto / CDbl(Cantcuo)
Else
        l_auxCant = 0
End If

If Quinini = 0 Then
        For I = 1 To Cantcuo
                StrSql = "INSERT INTO embcuota "
                StrSql = StrSql & "(embcnro, embnro, embcimp, embccancela, embcanio, embcmes, embcquin, embcimpreal) VALUES ("
                StrSql = StrSql & "'" & I & "','" & Embnro & "','" & l_auxCant & "',"
                StrSql = StrSql & "'" & 0 & "','" & Anioini & "','" & Mesini & "',"
                StrSql = StrSql & "'" & 0 & "','" & 0 & "')"
                
                objConn.Execute StrSql, , adExecuteNoRecords
                Flog.writeline Espacios(Tabulador * 1) & "Cuota insertada "
                
                If I < Cantcuo Then
                        Call sigMes(Anioini, Mesini)
                End If
        Next
        
        StrSql = "UPDATE embargo "
        StrSql = StrSql & "SET embaniofin = " & Anioini
        StrSql = StrSql & ",embmesfin = " & Mesini
        StrSql = StrSql & ",embquifin = 0 "
        StrSql = StrSql & " WHERE embnro = " & Embnro
                
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline Espacios(Tabulador * 1) & "Embargo actualizada"
Else
        For I = 1 To Cantcuo
                StrSql = "INSERT INTO embcuota "
                StrSql = StrSql & "(embcnro, embnro, embcimp, embccancela, embcanio, embcmes, embcquin, embcimpreal) VALUES ("
                StrSql = StrSql & "'" & I & "','" & Embnro & "','" & l_auxCant & "',"
                StrSql = StrSql & "'" & 0 & "','" & Anioini & "','" & Mesini & "',"
                StrSql = StrSql & "'" & Quinini & "','" & 0 & "')"

                objConn.Execute StrSql, , adExecuteNoRecords
                Flog.writeline Espacios(Tabulador * 1) & "Cuota insertada "

                If I < Cantcuo Then
                        Call sigQuin(Anioini, Mesini, Quinini)
                End If
        Next
        
        StrSql = "UPDATE embargo "
        StrSql = StrSql & "SET embaniofin = " & Anioini
        StrSql = StrSql & ",embmesfin = " & Mesini
        StrSql = StrSql & ",embquifin = " & Quinini
        StrSql = StrSql & " WHERE embnro = " & Embnro
                
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline Espacios(Tabulador * 1) & "Embargo actualizada"
End If

End Sub


Public Sub LineaModelo_256(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Inserta en Acumuladores Mensuales.
' Autor      : Fernando Favre
'              El formato es:
'                   Cod Ext del cliente - codigo del engagement; Descripcion del cliente; descripcion del engagement
' Fecha      : 28/04/2005
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim pos1 As Long
Dim pos2 As Long
Dim pos_Aux As Long

Dim I As Long

Dim EvaCliNro As Long
Dim EvaCliCodExt As String
Dim EvaCliNom As String
Dim EvaEngNro As Long
Dim EvaEngCodExt As String
Dim EvaEngdesabr As String

Dim rs_Eva_Cliente As New ADODB.Recordset
Dim rs_Eva_Engagement As New ADODB.Recordset

On Error GoTo Manejador_De_Error


    Flog.writeline
    FlogE.writeline
    FlogP.writeline
    
    'Cod Ext del cliente - codigo del engagement
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Cliente-Engagement"
    pos1 = 1
    pos2 = InStr(pos1, strLinea, separador) - 1
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
        HuboError = True
        Exit Sub
    End If
    pos_Aux = InStr(1, Aux, "-")
    EvaCliCodExt = Left(Trim(Mid(Aux, 1, pos_Aux - 1)), 20)
    EvaEngCodExt = Left(Trim(Mid(Aux, pos_Aux + 1, Len(Aux))), 20)
    
    
    'Descripcion del cliente
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Cliente-Engagement"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strLinea, separador) - 1
    'Salteo 1 campo
    If pos1 = pos2 Then
        pos1 = pos2 + 1
        pos2 = InStr(pos1, strLinea, separador) - 1
    Else
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strLinea, separador) - 1
    End If
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
        HuboError = True
        Exit Sub
    End If
    EvaCliNom = Left(Aux, 60)
    
    
    'Salteo 3 campos
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strLinea, separador) - 1
    For I = 1 To 2
        If pos1 = pos2 Then
            pos1 = pos2 + 1
            pos2 = InStr(pos1, strLinea, separador) - 1
        Else
            pos1 = pos2 + 2
            pos2 = InStr(pos1, strLinea, separador) - 1
        End If
    Next I
    
    'Descripcion del engagement
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Cliente-Engagement"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strLinea, separador) - 1
    If pos2 < pos1 Then
        pos2 = Len(strLinea)
    End If
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
        HuboError = True
        Exit Sub
    End If
    EvaEngdesabr = Left(Aux, 80)
    
' ====================================================================

'si existe el cliente, sino, lo creo
StrSql = "SELECT * FROM evacliente where evaclicodext = '" & EvaCliCodExt & "'"
OpenRecordset StrSql, rs_Eva_Cliente
If rs_Eva_Cliente.EOF Then
    StrSql = "INSERT INTO evacliente (evaclinom,evaclicodext)"
    StrSql = StrSql & " VALUES ("
    StrSql = StrSql & "'" & EvaCliNom & "'"
    StrSql = StrSql & ",'" & EvaCliCodExt & "'"
    StrSql = StrSql & ")"
    objConn.Execute StrSql, , adExecuteNoRecords
    EvaCliNro = getLastIdentity(objConn, "evacliente")
Else
    EvaCliNro = rs_Eva_Cliente!EvaCliNro
End If

'si existe el ENGAGEMENT, sino, lo creo
StrSql = "SELECT * FROM evaengage "
StrSql = StrSql & " WHERE evaengcodext = '" & EvaEngCodExt & "'"
StrSql = StrSql & " AND evaclinro = " & EvaCliNro
OpenRecordset StrSql, rs_Eva_Engagement
If rs_Eva_Engagement.EOF Then
    StrSql = "INSERT INTO evaengage (evaclinro, evaengcodext,evaengdesabr)"
    StrSql = StrSql & " VALUES ("
    StrSql = StrSql & EvaCliNro
    StrSql = StrSql & ",'" & EvaEngCodExt & "'"
    StrSql = StrSql & ",'" & EvaEngdesabr & "'"
    StrSql = StrSql & ")"
    objConn.Execute StrSql, , adExecuteNoRecords
    EvaEngNro = getLastIdentity(objConn, "evaengage")
Else
    EvaEngNro = rs_Eva_Engagement!EvaEngNro
End If


Fin:
'cierro y libero
If rs_Eva_Cliente.State = adStateOpen Then rs_Eva_Cliente.Close
If rs_Eva_Engagement.State = adStateOpen Then rs_Eva_Engagement.Close

Set rs_Eva_Cliente = Nothing
Set rs_Eva_Engagement = Nothing
Exit Sub

Manejador_De_Error:
    HuboError = True
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    If InStr(1, Err.Description, "ODBC") > 0 Then
        'Fue error de Consulta de SQL
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
        Flog.writeline
    End If
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    GoTo Fin
End Sub



Public Sub LineaModelo_261(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Inserta en empresa,estructura,tercero.
' Autor      : FGZ
'              El formato es:
'                   Nro Empresa;Nombre de la empresa ; CUIT; Actividad; [Domicilio]; logo; [peri_ccss]; TipoEmpleador
' Fecha      : 13/06/2005
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim pos1 As Long
Dim pos2 As Long
Dim Aux As String

Dim cuit            As String
Dim Calle           As String
Dim Nro             As String
Dim Piso            As String
Dim Depto           As String
Dim Torre           As String
Dim Manzana         As String
Dim Cpostal         As String
Dim Entre           As String
Dim Barrio          As String
Dim Localidad       As String
Dim Partido         As String
Dim Zona            As String
Dim Provincia       As String
Dim Pais            As String

Dim NroEmpresa      As Long
Dim EstrnroEmpresa  As Long
Dim NombreEmpresa   As String
Dim Ter_Empresa     As Long

Dim Actividad       As String
Dim Logo            As String
Dim Periodo         As Long
Dim FechaDeposito   As Date
Dim Banco           As String
Dim Sucursal        As String
Dim PeriodoAnterior As String

Dim IngresoDom      As Boolean
Dim Inserto_estr    As Boolean

Dim Nro_Nrodom      As String
Dim Nro_Barrio      As Long
Dim Nro_Localidad   As Long
Dim Nro_Partido     As Long
Dim Nro_Zona        As Long
Dim Nro_Provincia   As Long
Dim Nro_Pais        As Long

Dim TipoEmpleador   As String
Dim NroTipoEmpleador As Long
Dim NroDom          As Long

Dim PeriodoMes As Long
Dim PeriodoAnio As Long
Dim Pliqnro As Long


' El formato es:
' Nro Empresa; Nombre de la empresa; CUIT; Actividad; [Domicilio]; logo; [peri_ccss]; TipoEmpleador
' donde
'   Nro Empresa es empresa.empnro
'   CUIT es un varchar con el nro de CUIT
'   Actividad es un varchar con la descripcion de la actividad de la empresa. Es empresa.empactiv
'   [Domicilio] es el domicilio de la empresa, acá deben ir los campos del domicilio (calle;nro;localidad;provincia; etc..).
'   logo es un varchar con el archivo de logo de la empresa. Es el campo ter_imag.terimnombre.
'   [peri_ccss] son los datos de la tabla peri_ccss. Acá se deben ir (nro periodo;fecha de deposito;banco;sucursal;periodo anterior), donde nro de periodo es un pliqnro existente, fecha de deposito es un date y banco, sucursal, periodo anterior son descripciones.
'   TipoEmpleador es la descripción del tipo de empleador existente tipempdor.tipempdesabr


'La interfaz tiene que estar preparada tambien para hacer update si la empresa ya existe.
'Y si sólo se recibe el nro empresa y los datos de [peri_ccss] (todos los demás campos en N/A),
'sólo se debe cargar los datos en peri_ccss para dicha empresa.

    Flog.writeline
    FlogE.writeline
    FlogP.writeline

    On Error GoTo Manejador_De_Error
    LineaCarga = LineaCarga + 1
    Tabs = 1
    
    Texto = "Procesando linea " & strLinea
    Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    
    
    'Nro de Empresa
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nro de la empresa"
    pos1 = 1
    pos2 = InStr(pos1, strLinea, separador)
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
    End If
    If Not (Aux = "N/A" Or EsNulo(Aux)) Then
        If IsNumeric(Aux) Then
            NroEmpresa = Aux
        Else
            Texto = ": " & "El nro de empresa debe ser numerico "
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            Call InsertaError(1, 8)
            HuboError = True
            Exit Sub
        End If
    Else
        NroEmpresa = 0
    End If
    
    'Nombre de la empresa
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nombre de la empresa"
    pos1 = pos2 + 1
    pos2 = InStr(pos1, strLinea, separador)
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
    End If
    NombreEmpresa = Left(Aux, 60)
    If (NombreEmpresa <> "N/A" Or EsNulo(NombreEmpresa)) And NroEmpresa = 0 Then
        Texto = ": " & "El nro de empresa o el el Nombre son obligatorios "
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        HuboError = True
        Exit Sub
    End If
    
    'CUIT
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "CUIT"
    pos1 = pos2 + 1
    pos2 = InStr(pos1, strLinea, separador)
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
        RegError = RegError + 1
        Exit Sub
    End If
    cuit = Aux
    
    'Actividad
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Actividad"
    pos1 = pos2 + 1
    pos2 = InStr(pos1, strLinea, separador)
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
    End If
    Actividad = Left(Aux, 60)
    If EsNulo(Actividad) Then
        Actividad = "N/A"
    End If
    
'--------------------------------------------------------------------------------
'Domicilio
    'Calle
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Calle"
    pos1 = pos2 + 1
    pos2 = InStr(pos1, strLinea, separador)
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
    End If
    Calle = Left(Aux, 250)
    
    If Calle = "N/A" Then
        Calle = ""
        IngresoDom = False
    End If
    
    'Nro
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Nro"
    pos1 = pos2 + 1
    pos2 = InStr(pos1, strLinea, separador)
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
    End If
    Nro = Left(Aux, 8)
    If (Nro <> "N/A") Then
        Nro_Nrodom = Nro
    Else
        Nro_Nrodom = 0
    End If
    
    'Piso
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Piso"
    pos1 = pos2 + 1
    pos2 = InStr(pos1, strLinea, separador)
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
    End If
    Piso = Left(Aux, 8)
    If Piso = "N/A" Then
        Piso = ""
    End If
    
    'Departamento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Departamento"
    pos1 = pos2 + 1
    pos2 = InStr(pos1, strLinea, separador)
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
    End If
    Depto = Left(Aux, 8)
    If Depto = "N/A" Then
        Depto = ""
    End If

    'Torre
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Torre"
    pos1 = pos2 + 1
    pos2 = InStr(pos1, strLinea, separador)
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
    End If
    Torre = Left(Aux, 8)
    If Torre = "N/A" Then
        Torre = ""
    End If
    
    'Manzana
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Manzana"
    pos1 = pos2 + 1
    pos2 = InStr(pos1, strLinea, separador)
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
    End If
    Manzana = Left(Aux, 8)
    If Manzana = "N/A" Then
        Manzana = ""
    End If

    'Codigo Postal
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Codigo Postal"
    pos1 = pos2 + 1
    pos2 = InStr(pos1, strLinea, separador)
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
    End If
    Cpostal = Left(Aux, 12)
    If Cpostal = "N/A" Then
        Cpostal = ""
    End If

    'Entre calles
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Entre calles"
    pos1 = pos2 + 1
    pos2 = InStr(pos1, strLinea, separador)
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
    End If
    Entre = Left(Aux, 80)
    If Entre = "N/A" Then
        Entre = ""
    End If

    'Barrio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Barrio"
    pos1 = pos2 + 1
    pos2 = InStr(pos1, strLinea, separador)
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
    End If
    Barrio = Left(Aux, 30)
    If Barrio = "N/A" Then
        Barrio = ""
    End If

    'Localidad
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Localidad"
    pos1 = pos2 + 1
    pos2 = InStr(pos1, strLinea, separador)
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
    End If
    Localidad = Left(Aux, 60)
    
    'Partido
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Partido"
    pos1 = pos2 + 1
    pos2 = InStr(pos1, strLinea, separador)
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
    End If
    Partido = Left(Aux, 30)
    
    'Zona
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Zona"
    pos1 = pos2 + 1
    pos2 = InStr(pos1, strLinea, separador)
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
    End If
    Zona = Left(Aux, 60)
    
    'Provincia
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Provincia"
    pos1 = pos2 + 1
    pos2 = InStr(pos1, strLinea, separador)
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
    End If
    Provincia = Left(Aux, 20)
    
    'Pais
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Pais"
    pos1 = pos2 + 1
    pos2 = InStr(pos1, strLinea, separador)
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
    End If
    Pais = Left(Aux, 20)
    If Pais <> "N/A" Then
        Call ValidarPais(Pais, Nro_Pais)
    Else
        Nro_Pais = 0
    End If
    If Provincia <> "N/A" Then
        Call ValidarProvincia(Provincia, Nro_Provincia, Nro_Pais)
    Else
        Nro_Provincia = 0
    End If
    If Localidad <> "N/A" Then
        Call ValidarLocalidad(Localidad, Nro_Localidad, Nro_Pais, Nro_Provincia)
    Else
        Nro_Localidad = 0
    End If
    If Partido <> "N/A" Then
        Call ValidarPartido(Partido, Nro_Partido)
    Else
        Nro_Partido = 0
    End If
    If Zona <> "N/A" Then
        Call ValidarZona(Zona, Nro_Zona, Nro_Provincia)
    Else
        Nro_Zona = 0
    End If
    If (IngresoDom = True) And (Nro_Localidad = 0) Then
        Texto = ": " & " - Debe Ingresar la Localidad."
        NroColumna = 25
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    If (IngresoDom = True) And (Nro_Provincia = 0) Then
        Texto = ": " & " - Debe Ingresar la Provincia."
        NroColumna = 28
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    If (IngresoDom = True) And (Nro_Pais = 0) Then
        Texto = ": " & " - Debe Ingresar la Pais."
        NroColumna = 29
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
'Domicilio
'--------------------------------------------------------------------------------

    'Logo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Logo"
    pos1 = pos2 + 1
    pos2 = InStr(pos1, strLinea, separador)
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
    End If
    Logo = Left(Aux, 60)
    If Logo = "N/A" Then
        Logo = ""
    End If


'--------------------------------------------------------------------------------
'Peri_ccss

    'Periodo Mes
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Periodo Mes"
    pos1 = pos2 + 1
    pos2 = InStr(pos1, strLinea, separador)
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
    End If
    PeriodoMes = Aux

    'Periodo Año
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Periodo Año"
    pos1 = pos2 + 1
    pos2 = InStr(pos1, strLinea, separador)
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
    End If
    PeriodoAnio = Aux

    'Valido que exista el periodo
    StrSql = "SELECT * FROM periodo  "
    StrSql = StrSql & " WHERE pliqmes = " & PeriodoMes
    StrSql = StrSql & " AND pliqanio = " & PeriodoAnio
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        Pliqnro = rs!Pliqnro
    Else
        Texto = ": " & "No se encuentra periodo para mes " & PeriodoMes & " y año " & PeriodoAnio
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call InsertaError(1, 8)
        HuboError = True
        Exit Sub
    End If

    'Fecha de Deposito
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de Deposito"
    pos1 = pos2 + 1
    pos2 = InStr(pos1, strLinea, separador)
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
    End If
    FechaDeposito = CDate(Aux)

    'Banco
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Banco"
    pos1 = pos2 + 1
    pos2 = InStr(pos1, strLinea, separador)
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
    End If
    Banco = Left(Aux, 60)

    'Sucursal
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sucursal"
    pos1 = pos2 + 1
    pos2 = InStr(pos1, strLinea, separador)
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
    End If
    Sucursal = Left(Aux, 40)

    'Periodo Anterior
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Periodo anterior "
    pos1 = pos2 + 1
    pos2 = InStr(pos1, strLinea, separador)
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
    End If
    PeriodoAnterior = Aux

'Peri_ccss
'--------------------------------------------------------------------------------

    'Tipo Empleador
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tipo Empleador"
    pos1 = pos2 + 1
    pos2 = Len(strLinea) + 1
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
    End If
    TipoEmpleador = Left(Aux, 30)

'    If Not (aux = "N/A" Or EsNulo(aux)) Then
'        StrSql = "SELECT * FROM tipempdor "
'        StrSql = StrSql & " WHERE upper(tipempdesabr) = '" & UCase(TipoEmpleador) & "'"
'        If rs.State = adStateOpen Then rs.Close
'        OpenRecordset StrSql, rs
'        If rs.EOF Then
'            NroTipoEmpleador = rs!tipempnro
'        End If
'    Else
'        NroTipoEmpleador = 0
'    End If
    If Not (Aux = "N/A" Or EsNulo(Aux)) Then
        StrSql = "SELECT * FROM tipempdor "
        StrSql = StrSql & " WHERE tipempnro = " & TipoEmpleador
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            NroTipoEmpleador = rs!tipempnro
        Else
            Texto = "No se encontró el tipo de empleador " & TipoEmpleador
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
            NroTipoEmpleador = 0
        End If
    Else
        NroTipoEmpleador = 0
    End If
    
'--------------------------------------------------------------------------------
'--------------------------------------------------------------------------------
If NroEmpresa <> 0 Then
    StrSql = " SELECT * FROM empresa WHERE empnro = " & NroEmpresa
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        EstrnroEmpresa = rs!Estrnro
        Inserto_estr = False
        
        StrSql = " SELECT * FROM estructura WHERE estrnro = " & EstrnroEmpresa
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            NombreEmpresa = rs!estrdabr
        End If
    End If
End If

Call ValidaEstructura(10, NombreEmpresa, EstrnroEmpresa, Inserto_estr)
Call CreaTercero(10, NombreEmpresa, Ter_Empresa)
If Inserto_estr Then
    'Crear Empresa
    StrSql = " INSERT INTO empresa(estrnro,ternro,empnom,tipempnro,empactiv) "
    StrSql = StrSql & " VALUES( "
    StrSql = StrSql & EstrnroEmpresa
    StrSql = StrSql & "," & Ter_Empresa
    StrSql = StrSql & ",'" & NombreEmpresa & "'"
    StrSql = StrSql & "," & NroTipoEmpleador
    StrSql = StrSql & ",'" & Actividad & "'"
    StrSql = StrSql & ")"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    Texto = ": " & "Empresa Insertada - "
    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strLinea)
Else
    If NroTipoEmpleador <> 0 Then
        StrSql = " UPDATE empresa SET "
        StrSql = StrSql & " tipempnro = " & NroTipoEmpleador
        StrSql = StrSql & " WHERE estrnro = " & EstrnroEmpresa
        StrSql = StrSql & " AND ternro = " & Ter_Empresa
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = "Empresa: " & NombreEmpresa & ". Tipo de empleador de la Empresa Actualizado - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strLinea)
    End If
    If Not EsNulo(Actividad) And Actividad <> "N/A" Then
        StrSql = " UPDATE empresa SET "
        StrSql = StrSql & " empactiv = '" & Actividad & "'"
        StrSql = StrSql & " WHERE estrnro = " & EstrnroEmpresa
        StrSql = StrSql & " AND ternro = " & Ter_Empresa
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = "Empresa: " & NombreEmpresa & ". Actividad Actualizada - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strLinea)
    End If
End If

If (Nro_Localidad <> 0 And Nro_Provincia <> 0 And Nro_Pais <> 0) Then
    StrSql = "SELECT * FROM cabdom  "
    StrSql = StrSql & " WHERE tipnro = 1"
    StrSql = StrSql & " AND ternro = " & Ter_Empresa
    StrSql = StrSql & " AND domdefault = -1"
    StrSql = StrSql & " AND tidonro = 2"
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs
    If rs.EOF Then
      StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
      StrSql = StrSql & " VALUES(1," & Ter_Empresa & ",-1,2)"
      objConn.Execute StrSql, , adExecuteNoRecords
      
      NroDom = getLastIdentity(objConn, "cabdom")
    
      StrSql = " INSERT INTO detdom(domnro,calle,nro,piso,oficdepto,torre,manzana,codigopostal,entrecalles,"
      StrSql = StrSql & "locnro,provnro,paisnro,barrio,partnro,zonanro) "
      StrSql = StrSql & " VALUES (" & NroDom & ",'" & Calle & "','" & Nro_Nrodom & "','" & Piso & "','"
      StrSql = StrSql & Depto & "','" & Torre & "','" & Manzana & "','" & Cpostal & "','" & Entre & "'," & Nro_Localidad & ","
      StrSql = StrSql & Nro_Provincia & "," & Nro_Pais & ",'" & Barrio & "'," & Nro_Partido & "," & Nro_Zona & ")"
      objConn.Execute StrSql, , adExecuteNoRecords
    
      Texto = ": " & "Inserte el Domicilio - "
      Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strLinea)
    Else
        StrSql = " UPDATE detdom SET "
        StrSql = StrSql & " calle =" & "'" & Calle & "'"
        StrSql = StrSql & ",nro =" & "'" & Nro_Nrodom & "'"
        StrSql = StrSql & ",piso =" & "'" & Piso & "'"
        StrSql = StrSql & ",oficdepto =" & "'" & Depto & "'"
        StrSql = StrSql & ",torre =" & "'" & Torre & "'"
        StrSql = StrSql & ",manzana =" & "'" & Manzana & "'"
        StrSql = StrSql & ",codigopostal =" & "'" & Cpostal & "'"
        StrSql = StrSql & ",entrecalles =" & "'" & Entre & "'"
        StrSql = StrSql & ",locnro =" & Nro_Localidad
        StrSql = StrSql & ",provnro =" & Nro_Provincia
        StrSql = StrSql & ",paisnro =" & Nro_Pais
        StrSql = StrSql & ",partnro = " & Nro_Partido
        StrSql = StrSql & ",zonanro =" & Nro_Zona
        StrSql = StrSql & " WHERE domnro = " & rs!domnro
        objConn.Execute StrSql, , adExecuteNoRecords
    
        Texto = ": " & "Domicilio Actualizado - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strLinea)
    End If
End If

'Cuit
If cuit <> "N/A" And Not EsNulo(cuit) Then
    StrSql = "SELECT * FROM ter_doc WHERE ternro = " & Ter_Empresa
    StrSql = StrSql & " AND tidnro = 6 "
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs
    If rs.EOF Then
        StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
        StrSql = StrSql & " VALUES(" & Ter_Empresa & ",6,'" & cuit & "')"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = ": " & "Inserté CUIT - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strLinea)
    Else
        StrSql = " UPDATE ter_doc SET "
        StrSql = StrSql & " nrodoc = '" & cuit & "'"
        StrSql = StrSql & " WHERE ternro = " & Ter_Empresa
        StrSql = StrSql & " AND tidnro = 6"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = ": " & "CUIT Actualizado - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strLinea)
    End If
End If

'actualizo el logo de la empresa
If Logo <> "N/A" And Not EsNulo(Logo) Then
    StrSql = "SELECT * FROM ter_imag WHERE ternro = " & Ter_Empresa
    StrSql = StrSql & " AND tipimnro = 1 "
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs
    If rs.EOF Then
        StrSql = " INSERT INTO ter_imag(ternro,tipimnro,terimnombre,terimpag,terimfecha,terimvalid) "
        StrSql = StrSql & " VALUES(" & Ter_Empresa
        StrSql = StrSql & ",1"
        StrSql = StrSql & ",'" & Logo & "'"
        StrSql = StrSql & ",1"
        StrSql = StrSql & "," & ConvFecha(CDate(Date))
        StrSql = StrSql & ",-1"
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = ": " & "Inserté el logo - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strLinea)
    Else
        StrSql = " UPDATE ter_imag SET "
        StrSql = StrSql & " terimnombre = '" & Logo & "'"
        StrSql = StrSql & ", terimfecha = " & ConvFecha(CDate(Date))
        StrSql = StrSql & " WHERE ternro = " & Ter_Empresa
        StrSql = StrSql & " AND tipimnro = 1"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = ": " & "Logo Actualizado - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strLinea)
    End If
End If




'peri_ccss
StrSql = "SELECT * FROM peri_ccss  "
StrSql = StrSql & " WHERE pliqnro = " & Pliqnro
StrSql = StrSql & " AND estrnro = " & EstrnroEmpresa
If rs.State = adStateOpen Then rs.Close
OpenRecordset StrSql, rs
If rs.EOF Then
    StrSql = "INSERT INTO peri_ccss (pliqnro,estrnro,banco,sucursal,fecha,periodoant,global)"
    StrSql = StrSql & " VALUES ("
    StrSql = StrSql & Pliqnro
    StrSql = StrSql & "," & EstrnroEmpresa
    StrSql = StrSql & "," & "'" & Banco & "'"
    StrSql = StrSql & "," & "'" & Sucursal & "'"
    StrSql = StrSql & "," & ConvFecha(FechaDeposito)
    StrSql = StrSql & "," & "'" & PeriodoAnterior & "'"
    StrSql = StrSql & "," & 0
    StrSql = StrSql & ")"
    objConn.Execute StrSql, , adExecuteNoRecords
        
    Texto = ": " & "Inserté Cargas Sociales - "
    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strLinea)
Else
    StrSql = "UPDATE peri_ccss SET "
    StrSql = StrSql & " banco = '" & Banco & "'"
    StrSql = StrSql & " ,sucursal = '" & Sucursal & "'"
    StrSql = StrSql & " ,fecha = " & ConvFecha(FechaDeposito)
    StrSql = StrSql & " ,periodoant = '" & PeriodoAnterior & "'"
    StrSql = StrSql & " WHERE pliqnro = " & Pliqnro
    objConn.Execute StrSql, , adExecuteNoRecords
    
    Texto = ": " & "Cargas Sociales Actualizadas - "
    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strLinea)
End If


Fin:
'cierro y libero

Exit Sub

Manejador_De_Error:
    HuboError = True
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    If InStr(1, Err.Description, "ODBC") > 0 Then
        'Fue error de Consulta de SQL
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
        Flog.writeline
    End If
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    GoTo Fin
End Sub

Public Sub LineaModelo_262(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Interface de Dias Correspondientes de Vacaciones
' Autor      : JMH
' Fecha      : 04/10/2004
' Ultima Mod.:
' Descripcion:
'    16/04/2010 - Margiotta, Emanuel - Se agrego el alcance por estructura para los periodos
' ---------------------------------------------------------------------------------------------
' El formato es:
'   Legajo; Año; Tipo Vacaciones; Cantidad de dias
' ---------------------------------------------------------------------------------------------

Dim pos1            As Long
Dim pos2            As Long

Dim Nro_Legajo As Long
Dim Anio As Long
Dim TipoVac As Long
Dim Vacacion As Long
Dim Dias_Correspondientes As Long
Dim Tercero As Long

Dim rs_Empleado As New ADODB.Recordset
Dim rs_Periodos_Vac As New ADODB.Recordset


'Actio el Manejador de Errores Local
On Error GoTo Manejador_De_Error

    'Nro de Legajo
    pos1 = 1
    pos2 = InStr(pos1, strLinea, separador)
    If IsNumeric(Mid$(strLinea, pos1, pos2 - pos1)) Then
        Nro_Legajo = Mid$(strLinea, pos1, pos2 - pos1)
    Else
        InsertaError 1, 8
        HuboError = True
        Exit Sub
    End If
    
    'Año
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    Anio = Mid(strLinea, pos1, pos2 - pos1)
    
    'Tipo Vacaciones
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    TipoVac = Mid$(strLinea, pos1, pos2 - pos1)
    
    'Total de dias Correspondientes
    pos1 = pos2 + 1
    pos2 = Len(strLinea)
    Dias_Correspondientes = Mid$(strLinea, pos1, pos2 - pos1 + 1)

    ' ----------------------------------
    'Validaciones
    
    'Que exista el legajo
    StrSql = "SELECT * FROM empleado where empleg = " & Nro_Legajo
    OpenRecordset StrSql, rs_Empleado
    If rs_Empleado.EOF Then
        Flog.writeline Espacios(Tabulador * 2) & "No se encontró el legajo " & Nro_Legajo
        InsertaError 1, 8
        HuboError = True
        Exit Sub
    Else
        Tercero = rs_Empleado!Ternro
    End If
    
    'Que exista el tipo de vacaciones
    StrSql = "SELECT * FROM tipovacac where tipvacnro = " & TipoVac
    OpenRecordset StrSql, rs_Empleado
    If rs_Empleado.EOF Then
        Flog.writeline Espacios(Tabulador * 2) & "No se encontró el tipo de vacaciones " & TipoVac
        InsertaError 3, 108
        HuboError = True
        Exit Sub
    'Else
    '    Tercero = rs_Empleado!ternro
    End If
    rs_Empleado.Close
    
    
    '________________________________________________________________________
    'EAM - Verifica si el periodos de vacaciones tiene alcance por estructura
    'StrSql = "SELECT * FROM alcance_testr WHERE tanro= 19"
    StrSql = "SELECT * FROM alcance_testr WHERE tanro= 21"
    OpenRecordset StrSql, rs_Periodos_Vac
    
    If rs_Periodos_Vac.EOF Then
        'Busco los Periodo de Vacación involucrado en el Año
        StrSql = "SELECT * FROM vacacion WHERE vacacion.vacanio = " & Anio & _
                 " ORDER BY vacfecdesde"
    Else
        'Busco los Periodo de Vacación involucrado en el Año
        StrSql = "SELECT * FROM vacacion " & _
                 " INNER JOIN vac_estr ON vacacion.vacnro= vac_estr.vacnro " & _
                 " INNER JOIN his_estructura ON vac_estr.estrnro = his_estructura.estrnro " & _
                 " WHERE  his_estructura.ternro= " & Tercero & " AND vacacion.vacanio = " & Anio & _
                 " ORDER BY vacfecdesde"
    End If
    OpenRecordset StrSql, rs_Periodos_Vac
    
    If Not rs_Periodos_Vac.EOF Then
        Vacacion = rs_Periodos_Vac!vacnro
    End If
        
    'Busco si ya existe ese periodo de vacacion para ese empleado
    StrSql = "SELECT * FROM vacdiascor "
    StrSql = StrSql & " WHERE vacdiascor.vacnro = " & Vacacion
    StrSql = StrSql & " AND vacdiascor.ternro = " & Tercero
    OpenRecordset StrSql, rs_Periodos_Vac
    
    
    If rs_Periodos_Vac.EOF Then
        'Si no existe creo la nueva vacaciones
        StrSql = "INSERT INTO vacdiascor (vacnro,ternro,vdiascorcant,vdiapednro,vdiascormanual,tipvacnro) VALUES ( "
        StrSql = StrSql & Vacacion & "," & Tercero & "," & Dias_Correspondientes & ",0,-1," & TipoVac & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
    Else
        'Elimino la vacación existente
        StrSql = "DELETE FROM vacdiascor "
        StrSql = StrSql & " WHERE vacdiascor.vacnro = " & Vacacion
        StrSql = StrSql & " AND vacdiascor.ternro = " & Tercero
        objConn.Execute StrSql, , adExecuteNoRecords
        
        'Creo la nueva vacaciones
        StrSql = "INSERT INTO vacdiascor (vacnro,ternro,vdiascorcant,vdiapednro,vdiascormanual,tipvacnro) VALUES ( "
        StrSql = StrSql & Vacacion & "," & Tercero & "," & Dias_Correspondientes & ",0,-1," & TipoVac & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
    End If
        
Fin:

'Desactivo el manejador de Errores Local
On Error GoTo 0

Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    If InStr(1, Err.Description, "ODBC") > 0 Then
        'Fue error de Consulta de SQL
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
        Flog.writeline
    End If
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    GoTo Fin
End Sub

Public Sub Cargar_datos_Estandar()
    
    On Error GoTo MError
    
    'Se inicializa el arreglo de la especializaciones
    Flog.writeline Espacios(Tabulador * 2) & "Se inicializa el arreglo de la especializaciones"
    
    datosEsp(0) = TraerCodEspecializacion("base de datos")
    datosEsp(1) = TraerCodEspecializacion("CRM")
    datosEsp(2) = TraerCodEspecializacion("ERP y Planeamiento")
    datosEsp(3) = TraerCodEspecializacion("hardware")
    datosEsp(4) = TraerCodEspecializacion("herramientas backoffice")
    datosEsp(5) = TraerCodEspecializacion("herramientas de diseño e internet")
    datosEsp(6) = TraerCodEspecializacion("lenguajes de programación")
    datosEsp(7) = TraerCodEspecializacion("redes, conectividad e internet")
    datosEsp(8) = TraerCodEspecializacion("sistemas operativos")
    datosEsp(9) = TraerCodEspecializacion("otros")
    
    'Se inicializa el arreglo de los elementos de análisis
    Flog.writeline Espacios(Tabulador * 2) & "Se inicializa el arreglo de los elementos de análisis"
    
    datosEltoAna(0, 0) = TraerCodEltoana("db2", datosEsp(0))
    datosEltoAna(1, 0) = datosEsp(0)
    datosEltoAna(0, 1) = TraerCodEltoana("mssqlserver", datosEsp(0))
    datosEltoAna(1, 1) = datosEsp(0)
    datosEltoAna(0, 2) = TraerCodEltoana("oracle", datosEsp(0))
    datosEltoAna(1, 2) = datosEsp(0)
    datosEltoAna(0, 3) = TraerCodEltoana("informix", datosEsp(0))
    datosEltoAna(1, 3) = datosEsp(0)
    datosEltoAna(0, 4) = TraerCodEltoana("mysql", datosEsp(0))
    datosEltoAna(1, 4) = datosEsp(0)
    datosEltoAna(0, 5) = TraerCodEltoana("posgresql", datosEsp(0))
    datosEltoAna(1, 5) = datosEsp(0)
    datosEltoAna(0, 6) = TraerCodEltoana("msaccess", datosEsp(0))
    datosEltoAna(1, 6) = datosEsp(0)
    datosEltoAna(0, 7) = TraerCodEltoana("odbc", datosEsp(0))
    datosEltoAna(1, 7) = datosEsp(0)
    datosEltoAna(0, 8) = TraerCodEltoana("sybase", datosEsp(0))
    datosEltoAna(1, 8) = datosEsp(0)
    datosEltoAna(0, 9) = TraerCodEltoana("baan", datosEsp(1))
    datosEltoAna(1, 9) = datosEsp(1)
    datosEltoAna(0, 10) = TraerCodEltoana("oracle", datosEsp(1))
    datosEltoAna(1, 10) = datosEsp(1)
    datosEltoAna(0, 11) = TraerCodEltoana("tango", datosEsp(1))
    datosEltoAna(1, 11) = datosEsp(1)
    datosEltoAna(0, 12) = TraerCodEltoana("larify", datosEsp(1))
    datosEltoAna(1, 12) = datosEsp(1)
    datosEltoAna(0, 13) = TraerCodEltoana("sap", datosEsp(1))
    datosEltoAna(1, 13) = datosEsp(1)
    datosEltoAna(0, 14) = TraerCodEltoana("trilogy", datosEsp(1))
    datosEltoAna(1, 14) = datosEsp(1)
    datosEltoAna(0, 15) = TraerCodEltoana("lotusbriefcase", datosEsp(1))
    datosEltoAna(1, 15) = datosEsp(1)
    datosEltoAna(0, 16) = TraerCodEltoana("siebel", datosEsp(1))
    datosEltoAna(1, 16) = datosEsp(1)
    datosEltoAna(0, 17) = TraerCodEltoana("vantive", datosEsp(1))
    datosEltoAna(1, 17) = datosEsp(1)
    datosEltoAna(0, 18) = TraerCodEltoana("altamira", datosEsp(2))
    datosEltoAna(1, 18) = datosEsp(2)
    datosEltoAna(0, 19) = TraerCodEltoana("meta4", datosEsp(2))
    datosEltoAna(1, 19) = datosEsp(2)
    datosEltoAna(0, 20) = TraerCodEltoana("sap", datosEsp(2))
    datosEltoAna(1, 20) = datosEsp(2)
    datosEltoAna(0, 21) = TraerCodEltoana("tango", datosEsp(2))
    datosEltoAna(1, 21) = datosEsp(2)
    datosEltoAna(0, 22) = TraerCodEltoana("baan", datosEsp(2))
    datosEltoAna(1, 22) = datosEsp(2)
    datosEltoAna(0, 23) = TraerCodEltoana("oraclefinancials", datosEsp(2))
    datosEltoAna(1, 23) = datosEsp(2)
    datosEltoAna(0, 24) = TraerCodEltoana("siebel", datosEsp(2))
    datosEltoAna(1, 24) = datosEsp(2)
    datosEltoAna(0, 25) = TraerCodEltoana("jdedwards", datosEsp(2))
    datosEltoAna(1, 25) = datosEsp(2)
    datosEltoAna(0, 26) = TraerCodEltoana("peoplesoft", datosEsp(2))
    datosEltoAna(1, 26) = datosEsp(2)
    datosEltoAna(0, 27) = TraerCodEltoana("stradivarius", datosEsp(2))
    datosEltoAna(1, 27) = datosEsp(2)
    datosEltoAna(0, 28) = TraerCodEltoana("as400", datosEsp(3))
    datosEltoAna(1, 28) = datosEsp(3)
    datosEltoAna(0, 29) = TraerCodEltoana("reparacion", datosEsp(3))
    datosEltoAna(1, 29) = datosEsp(3)
    datosEltoAna(0, 30) = TraerCodEltoana("mac", datosEsp(3))
    datosEltoAna(1, 30) = datosEsp(3)
    datosEltoAna(0, 31) = TraerCodEltoana("mainframe", datosEsp(3))
    datosEltoAna(1, 31) = datosEsp(3)
    datosEltoAna(0, 32) = TraerCodEltoana("arcserver", datosEsp(4))
    datosEltoAna(1, 32) = datosEsp(4)
    datosEltoAna(0, 33) = TraerCodEltoana("hpopenview", datosEsp(4))
    datosEltoAna(1, 33) = datosEsp(4)
    datosEltoAna(0, 34) = TraerCodEltoana("msexchange", datosEsp(4))
    datosEltoAna(1, 34) = datosEsp(4)
    datosEltoAna(0, 35) = TraerCodEltoana("omniback", datosEsp(4))
    datosEltoAna(1, 35) = datosEsp(4)
    datosEltoAna(0, 36) = TraerCodEltoana("backupexec", datosEsp(4))
    datosEltoAna(1, 36) = datosEsp(4)
    datosEltoAna(0, 37) = TraerCodEltoana("legato", datosEsp(4))
    datosEltoAna(1, 37) = datosEsp(4)
    datosEltoAna(0, 38) = TraerCodEltoana("mssms", datosEsp(4))
    datosEltoAna(1, 38) = datosEsp(4)
    datosEltoAna(0, 39) = TraerCodEltoana("patrol", datosEsp(4))
    datosEltoAna(1, 39) = datosEsp(4)
    datosEltoAna(0, 40) = TraerCodEltoana("dollaruniverse", datosEsp(4))
    datosEltoAna(1, 40) = datosEsp(4)
    datosEltoAna(0, 41) = TraerCodEltoana("lotusnotes", datosEsp(4))
    datosEltoAna(1, 41) = datosEsp(4)
    datosEltoAna(0, 42) = TraerCodEltoana("maestro", datosEsp(4))
    datosEltoAna(1, 42) = datosEsp(4)
    datosEltoAna(0, 43) = TraerCodEltoana("3dstudio", datosEsp(5))
    datosEltoAna(1, 43) = datosEsp(5)
    datosEltoAna(0, 44) = TraerCodEltoana("director", datosEsp(5))
    datosEltoAna(1, 44) = datosEsp(5)
    datosEltoAna(0, 45) = TraerCodEltoana("flash", datosEsp(5))
    datosEltoAna(1, 45) = datosEsp(5)
    datosEltoAna(0, 46) = TraerCodEltoana("toolbook", datosEsp(5))
    datosEltoAna(1, 46) = datosEsp(5)
    datosEltoAna(0, 47) = TraerCodEltoana("autocad", datosEsp(5))
    datosEltoAna(1, 47) = datosEsp(5)
    datosEltoAna(0, 48) = TraerCodEltoana("dreamweaver", datosEsp(5))
    datosEltoAna(1, 48) = datosEsp(5)
    datosEltoAna(0, 49) = TraerCodEltoana("illustrator", datosEsp(5))
    datosEltoAna(1, 49) = datosEsp(5)
    datosEltoAna(0, 50) = TraerCodEltoana("coreldraw", datosEsp(5))
    datosEltoAna(1, 50) = datosEsp(5)
    datosEltoAna(0, 51) = TraerCodEltoana("fireworks", datosEsp(5))
    datosEltoAna(1, 51) = datosEsp(5)
    datosEltoAna(0, 52) = TraerCodEltoana("photoshop", datosEsp(5))
    datosEltoAna(1, 52) = datosEsp(5)
    datosEltoAna(0, 53) = TraerCodEltoana("asp", datosEsp(6))
    datosEltoAna(1, 53) = datosEsp(6)
    datosEltoAna(0, 54) = TraerCodEltoana("assembler", datosEsp(6))
    datosEltoAna(1, 54) = datosEsp(6)
    datosEltoAna(0, 55) = TraerCodEltoana("delphi", datosEsp(6))
    datosEltoAna(1, 55) = datosEsp(6)
    datosEltoAna(0, 56) = TraerCodEltoana("java", datosEsp(6))
    datosEltoAna(1, 56) = datosEsp(6)
    datosEltoAna(0, 57) = TraerCodEltoana("pascal", datosEsp(6))
    datosEltoAna(1, 57) = datosEsp(6)
    datosEltoAna(0, 58) = TraerCodEltoana("powerbuilder", datosEsp(6))
    datosEltoAna(1, 58) = datosEsp(6)
    datosEltoAna(0, 59) = TraerCodEltoana("script", datosEsp(6))
    datosEltoAna(1, 59) = datosEsp(6)
    datosEltoAna(0, 60) = TraerCodEltoana("xml", datosEsp(6))
    datosEltoAna(1, 60) = datosEsp(6)
    datosEltoAna(0, 61) = TraerCodEltoana("abap", datosEsp(6))
    datosEltoAna(1, 61) = datosEsp(6)
    datosEltoAna(0, 62) = TraerCodEltoana("c", datosEsp(6))
    datosEltoAna(1, 62) = datosEsp(6)
    datosEltoAna(0, 63) = TraerCodEltoana("fortran", datosEsp(6))
    datosEltoAna(1, 63) = datosEsp(6)
    datosEltoAna(0, 64) = TraerCodEltoana("javascript", datosEsp(6))
    datosEltoAna(1, 64) = datosEsp(6)
    datosEltoAna(0, 65) = TraerCodEltoana("perl", datosEsp(6))
    datosEltoAna(1, 65) = datosEsp(6)
    datosEltoAna(0, 66) = TraerCodEltoana("prolog", datosEsp(6))
    datosEltoAna(1, 66) = datosEsp(6)
    datosEltoAna(0, 67) = TraerCodEltoana("smalltalk", datosEsp(6))
    datosEltoAna(1, 67) = datosEsp(6)
    datosEltoAna(0, 68) = TraerCodEltoana("ada", datosEsp(6))
    datosEltoAna(1, 68) = datosEsp(6)
    datosEltoAna(0, 69) = TraerCodEltoana("cobol", datosEsp(6))
    datosEltoAna(1, 69) = datosEsp(6)
    datosEltoAna(0, 70) = TraerCodEltoana("html", datosEsp(6))
    datosEltoAna(1, 70) = datosEsp(6)
    datosEltoAna(0, 71) = TraerCodEltoana("ml", datosEsp(6))
    datosEltoAna(1, 71) = datosEsp(6)
    datosEltoAna(0, 72) = TraerCodEltoana("php", datosEsp(6))
    datosEltoAna(1, 72) = datosEsp(6)
    datosEltoAna(0, 73) = TraerCodEltoana("sql", datosEsp(6))
    datosEltoAna(1, 73) = datosEsp(6)
    datosEltoAna(0, 74) = TraerCodEltoana("vb", datosEsp(6))
    datosEltoAna(1, 74) = datosEsp(6)
    datosEltoAna(0, 75) = TraerCodEltoana("cableado", datosEsp(7))
    datosEltoAna(1, 75) = datosEsp(7)
    datosEltoAna(0, 76) = TraerCodEltoana("fibraoptica", datosEsp(7))
    datosEltoAna(1, 76) = datosEsp(7)
    datosEltoAna(0, 77) = TraerCodEltoana("hubs", datosEsp(7))
    datosEltoAna(1, 77) = datosEsp(7)
    datosEltoAna(0, 78) = TraerCodEltoana("proxyservers", datosEsp(7))
    datosEltoAna(1, 78) = datosEsp(7)
    datosEltoAna(0, 79) = TraerCodEltoana("ibmsna", datosEsp(7))
    datosEltoAna(1, 79) = datosEsp(7)
    datosEltoAna(0, 80) = TraerCodEltoana("vpn", datosEsp(7))
    datosEltoAna(1, 80) = datosEsp(7)
    datosEltoAna(0, 81) = TraerCodEltoana("wap", datosEsp(7))
    datosEltoAna(1, 81) = datosEsp(7)
    datosEltoAna(0, 82) = TraerCodEltoana("chatservers", datosEsp(7))
    datosEltoAna(1, 82) = datosEsp(7)
    datosEltoAna(0, 83) = TraerCodEltoana("firewalls", datosEsp(7))
    datosEltoAna(1, 83) = datosEsp(7)
    datosEltoAna(0, 84) = TraerCodEltoana("ipxspx", datosEsp(7))
    datosEltoAna(1, 84) = datosEsp(7)
    datosEltoAna(0, 85) = TraerCodEltoana("netbios", datosEsp(7))
    datosEltoAna(1, 85) = datosEsp(7)
    datosEltoAna(0, 86) = TraerCodEltoana("radioenlaces", datosEsp(7))
    datosEltoAna(1, 86) = datosEsp(7)
    datosEltoAna(0, 87) = TraerCodEltoana("tcpip", datosEsp(7))
    datosEltoAna(1, 87) = datosEsp(7)
    datosEltoAna(0, 88) = TraerCodEltoana("vsat", datosEsp(7))
    datosEltoAna(1, 88) = datosEsp(7)
    datosEltoAna(0, 89) = TraerCodEltoana("webservers", datosEsp(7))
    datosEltoAna(1, 89) = datosEsp(7)
    datosEltoAna(0, 90) = TraerCodEltoana("ftpservers", datosEsp(7))
    datosEltoAna(1, 90) = datosEsp(7)
    datosEltoAna(0, 91) = TraerCodEltoana("framerelay", datosEsp(7))
    datosEltoAna(1, 91) = datosEsp(7)
    datosEltoAna(0, 92) = TraerCodEltoana("mailservers", datosEsp(7))
    datosEltoAna(1, 92) = datosEsp(7)
    datosEltoAna(0, 93) = TraerCodEltoana("netbeui", datosEsp(7))
    datosEltoAna(1, 93) = datosEsp(7)
    datosEltoAna(0, 94) = TraerCodEltoana("routers", datosEsp(7))
    datosEltoAna(1, 94) = datosEsp(7)
    datosEltoAna(0, 95) = TraerCodEltoana("telefonia", datosEsp(7))
    datosEltoAna(1, 95) = datosEsp(7)
    datosEltoAna(0, 96) = TraerCodEltoana("voiceip", datosEsp(7))
    datosEltoAna(1, 96) = datosEsp(7)
    datosEltoAna(0, 97) = TraerCodEltoana("x25x400", datosEsp(7))
    datosEltoAna(1, 97) = datosEsp(7)
    datosEltoAna(0, 98) = TraerCodEltoana("aix", datosEsp(8))
    datosEltoAna(1, 98) = datosEsp(8)
    datosEltoAna(0, 99) = TraerCodEltoana("macos", datosEsp(8))
    datosEltoAna(1, 99) = datosEsp(8)
    datosEltoAna(0, 100) = TraerCodEltoana("os400", datosEsp(8))
    datosEltoAna(1, 100) = datosEsp(8)
    datosEltoAna(0, 101) = TraerCodEltoana("win31", datosEsp(8))
    datosEltoAna(1, 101) = datosEsp(8)
    datosEltoAna(0, 102) = TraerCodEltoana("winnt", datosEsp(8))
    datosEltoAna(1, 102) = datosEsp(8)
    datosEltoAna(0, 103) = TraerCodEltoana("hpux", datosEsp(8))
    datosEltoAna(1, 103) = datosEsp(8)
    datosEltoAna(0, 104) = TraerCodEltoana("novellnetware", datosEsp(8))
    datosEltoAna(1, 104) = datosEsp(8)
    datosEltoAna(0, 105) = TraerCodEltoana("palmos", datosEsp(8))
    datosEltoAna(1, 105) = datosEsp(8)
    datosEltoAna(0, 106) = TraerCodEltoana("win9x", datosEsp(8))
    datosEltoAna(1, 106) = datosEsp(8)
    datosEltoAna(0, 107) = TraerCodEltoana("linux", datosEsp(8))
    datosEltoAna(1, 107) = datosEsp(8)
    datosEltoAna(0, 108) = TraerCodEltoana("os2", datosEsp(8))
    datosEltoAna(1, 108) = datosEsp(8)
    datosEltoAna(0, 109) = TraerCodEltoana("solaris", datosEsp(8))
    datosEltoAna(1, 109) = datosEsp(8)
    datosEltoAna(0, 110) = TraerCodEltoana("winme", datosEsp(8))
    datosEltoAna(1, 110) = datosEsp(8)
    datosEltoAna(0, 111) = TraerCodEltoana("msproject", datosEsp(9))
    datosEltoAna(1, 111) = datosEsp(9)
    datosEltoAna(0, 112) = TraerCodEltoana("oop", datosEsp(9))
    datosEltoAna(1, 112) = datosEsp(9)
    datosEltoAna(0, 113) = TraerCodEltoana("uml", datosEsp(9))
    datosEltoAna(1, 113) = datosEsp(9)
    
    'Se inicializa el arreglo de los idiomas
    
'    For I = 1 To 5
'        Select Case I
'          Case 1
'
'            datosIdioma(0) = TraerCodIdioma("inglés")
'          Case 2
'
'            datosIdioma(1) = TraerCodIdioma("francés")
'          Case 3
'
'            datosIdioma(2) = TraerCodIdioma("portugués")
'          Case 4
'
'            datosIdioma(3) = TraerCodIdioma("alemán")
'          Case 5
'
'            datosIdioma(4) = TraerCodIdioma(Datos(245))
'        End Select
'    Next
Exit Sub

MError:
    Flog.writeline Espacios(Tabulador * 2) & "Error :" & Err.Description

End Sub

Public Sub LineaModelo_265(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Importacion de Documentos
' Autor      : FGZ
' Fecha      : 04/10/2005
' Ultima Mod.: 02/01/2014 - Gonzalez Nicolás - Se agrego variable insertaFecha para corregir error al insertar/update la fecha cuando venia con N/A
'               07/01/2014 - Gonzalez Nicolás - Se corrige error al validar si ya existe un documento para otro empleado.
' ---------------------------------------------------------------------------------------------
' El formato es:
'   Legajo; Tipo Doc (tidsigla); Nro de Doc; [Vencimiento]
' ---------------------------------------------------------------------------------------------
Dim pos1            As Long
Dim pos2            As Long

Dim Nro_Legajo As Long
Dim Tdocu As String
Dim Nro_TDocumento As Long
Dim Nro_Institucion As Long
Dim Ndocu As String
Dim Termino As Boolean
Dim FechaVencimiento As Date
Dim Tercero As Long

Dim rs_Empleado As New ADODB.Recordset
Dim rs_Sql As New ADODB.Recordset
Dim rs As New ADODB.Recordset
Dim rs_tdoc As New ADODB.Recordset
Dim insertaFecha As Boolean

'Activo el Manejador de Errores Local
On Error GoTo Manejador_De_Error

LineaCarga = LineaCarga + 1
Flog.writeline
FlogE.writeline
FlogP.writeline

    'Nro de Legajo
    NroColumna = 1
    Obligatorio = True
    Campoetiqueta = "Legajo"
    pos1 = 1
    pos2 = InStr(pos1, strLinea, separador) - 1
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
        RegError = RegError + 1
        Exit Sub
    End If
    If IsNumeric(Aux) Then
        Nro_Legajo = Aux
    Else
        Texto = ": " & " - Campo " & Campoetiqueta & " no es numérico."
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
        'RegError = RegError + 1
        InsertaError 1, 8
        Exit Sub
    End If
    
    
    'Tipo de Doc
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Tipo de Doc"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strLinea, separador) - 1
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
        RegError = RegError + 1
        Exit Sub
    End If
    Tdocu = Left(Aux, 8)
    If Tdocu <> "N/A" Then
        StrSql = " SELECT tidnro FROM tipodocu WHERE UPPER(tidsigla) = '" & UCase(Tdocu) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            Nro_TDocumento = rs_Sql!tidnro
        Else
            'busco la primera institucion, si no existe la creo
            StrSql = " SELECT * FROM institucion "
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                Nro_Institucion = rs!InstNro
            Else
                'creo una
                StrSql = " INSERT INTO institucion (instdes,instabre) VALUES ('NACIONAL','NAC')"
                objConn.Execute StrSql, , adExecuteNoRecords
                Nro_Institucion = getLastIdentity(objConn, "institucion")
            End If
            'creo el tipo de documento
            StrSql = " INSERT INTO tipodocu(tidnom,tidsigla,tidsist,instnro,tidunico) VALUES ('" & UCase(Tdocu) & "','" & UCase(Tdocu) & "',0," & Nro_Institucion & ",0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            Nro_TDocumento = getLastIdentity(objConn, "tipodocu")
        End If
    Else
        Nro_TDocumento = 0
    End If
    If Nro_TDocumento = 0 Then
        Texto = ": " & " - El Tipo de Documento no Existe."
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Nro de Documento
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Nro de Documento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strLinea, separador) - 1
    If pos2 < pos1 Then
        pos2 = Len(strLinea)
        Termino = True
    Else
        Termino = False
    End If
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
        RegError = RegError + 1
        Exit Sub
    End If
    'FGZ - 27/11/2013 --------------------------
    'Se cambió la validacion al nuevo limite
    'Ndocu = Left(Aux, 30)
    Ndocu = Left(Aux, 100)
    'FGZ - 27/11/2013 --------------------------
    If Ndocu = "N/A" Then
        Ndocu = ""
    End If
        
'    'verifico que no este asignado a otro legajo
'    StrSql = "SELECT * FROM empleado "
'    StrSql = StrSql & " INNER JOIN ter_doc ON ter_doc.ternro = empleado.ternro "
'    StrSql = StrSql & " WHERE ter_doc.tidnro = " & Nro_TDocumento & " AND ter_doc.nrodoc = '" & Ndocu & "'"
'    'NG - 07/01/2014
'    StrSql = StrSql & " AND empleado.ternro <> " & Tercero
'    OpenRecordset StrSql, rs_tdoc
'    If Not rs_tdoc.EOF Then
'        Texto = ": " & " - Ese Tipo y Numero de Documento ya estan asignados."
'        NroColumna = 2
'        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
'        RegError = RegError + 1
'        Exit Sub
'    End If
    
    'Fecha de Vencimiento
    If Not Termino Then
        NroColumna = NroColumna + 1
        Obligatorio = False
        Campoetiqueta = "Fecha de Vencimiento"
        pos1 = pos2 + 2
        pos2 = Len(strLinea)
        Aux = Trim(Mid(strLinea, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
            RegError = RegError + 1
            Exit Sub
        End If
        If IsDate(Aux) Then
            FechaVencimiento = C_Date(Aux)
            insertaFecha = True
        Else
        ' NG - 06/01/2013
'            If Not (Aux = "N/A" Or EsNulo(Aux)) Then
'                Texto = ": " & " - Campo " & Campoetiqueta & " no es una fecha."
'                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
'                RegError = RegError + 1
'                Exit Sub
'            End If
            insertaFecha = False
        End If
    End If
        

    ' ----------------------------------
    'Validaciones
    'Que exista el legajo
    StrSql = "SELECT * FROM empleado where empleg = " & Nro_Legajo
    OpenRecordset StrSql, rs_Empleado
    If rs_Empleado.EOF Then
        Texto = ": " & " - Campo " & Campoetiqueta & ". No se encontró el legajo."
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
        InsertaError 1, 8
        RegError = RegError + 1
        Exit Sub
    Else
        Tercero = rs_Empleado!Ternro
    End If
    
    'verifico que no este asignado a otro legajo
    StrSql = "SELECT * FROM empleado "
    StrSql = StrSql & " INNER JOIN ter_doc ON ter_doc.ternro = empleado.ternro "
    StrSql = StrSql & " WHERE ter_doc.tidnro = " & Nro_TDocumento & " AND ter_doc.nrodoc = '" & Ndocu & "'"
    'NG - 07/01/2014
    StrSql = StrSql & " AND empleado.ternro <> " & Tercero
    OpenRecordset StrSql, rs_tdoc
    If Not rs_tdoc.EOF Then
        Texto = ": " & " - Ese Tipo y Numero de Documento ya estan asignados."
        NroColumna = 2
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
        RegError = RegError + 1
        Exit Sub
    End If
    
    
    'Inserto
    StrSql = "SELECT * FROM ter_doc WHERE ternro = " & Tercero
    StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs
    If rs.EOF Then
        StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc"
        If Not Termino And insertaFecha = True Then
            StrSql = StrSql & ",fecvtodoc"
        End If
        StrSql = StrSql & ") "
        StrSql = StrSql & " VALUES(" & Tercero & "," & Nro_TDocumento & ",'" & Ndocu & "'"
        If Not Termino And insertaFecha = True Then
            StrSql = StrSql & "," & ConvFecha(FechaVencimiento)
        End If
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = ": " & "Inserte el Documento - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strLinea)
    Else
        StrSql = " UPDATE ter_doc SET "
        StrSql = StrSql & " nrodoc = '" & Ndocu & "'"
        If Not Termino And insertaFecha = True Then
            StrSql = StrSql & " ,fecvtodoc = " & ConvFecha(FechaVencimiento)
        End If
        StrSql = StrSql & " WHERE ternro = " & Tercero
        StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = Texto = ": " & "Documento actualizado - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strLinea)
    End If
    
        
Fin:

'Desactivo el manejador de Errores Local
On Error GoTo 0

Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error en Modelo 265 en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    GoTo Fin
End Sub

Public Sub LineaModelo_275_old(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Procedimiento de incorporacion de postulantes. Version Estandar.
' Autor      : FGZ
' Fecha      : 01/03/2006
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Aux As String
Dim datos() As String
Dim Ternro As Long
Dim NroDom As Long
Dim a As Long
Dim Xconst As Long
Dim ActPasos As Boolean
Dim tempString As String
Dim Inserta As Boolean

Dim rs_Ter As New ADODB.Recordset
Dim rs_Aux As New ADODB.Recordset
Dim I As Long
    
    LineaCarga = LineaCarga + 1
    Tabs = 1

    Flog.writeline
    Flog.writeline "Procesando linea " & strLinea
    
    'Si ocurre un error antes de insertar el tercero se aborta el postulante
    On Error GoTo Manejador_De_Error:
    
    datos = Split("0" & separador & strLinea, separador)
    For I = 0 To UBound(datos)
        datos(I) = Trim(datos(I))
    Next I
    
    '--Documentos--
    Obligatorio = True
    NroColumna = 1
    'Datos(1) = TraerCodTipoDocumento_2(CStr(Datos(1)))  'tipoDocumento
    datos(1) = TraerCodTipoDocumento(CStr(datos(1)))  'tipoDocumento
'    Aux = TraerCodTipoDocumento(CStr(Datos(1)))  'tipoDocumento
'    If Aux <> CStr(Datos(1)) Then
'        Texto = ": " & "El Tipo de documento no existe " & Datos(1)
'        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strlinea)
'        RegError = RegError + 1
'        If Obligatorio Then
'            Exit Sub
'        End If
'    End If
    datos(2) = StrToStr(CStr(datos(2)), 30) 'numeroDocumento
    
    '--Tercero
    datos(3) = StrToStr(datos(3), 25) 'ternom
    datos(4) = StrToStr(datos(4), 25)  'ternom2
    datos(5) = StrToStr(datos(5), 25) 'terape
    datos(6) = StrToStr(datos(6), 25) 'terape2
    datos(7) = ConvFecha(CDate(datos(7))) 'terfecnac
    'If UCase(Datos(8)) = "MASCULINO" Then Datos(8) = -1 Else Datos(8) = 0 'tersex
    If (UCase(datos(8)) = "M") Or (UCase(datos(8)) = "-1") Or (UCase(datos(8)) = "MASCULINO") Then
        datos(8) = -1
    Else
        datos(8) = 0
    End If
    
    datos(23) = StrToStr(datos(23), 100) ' teremail
    
    'Nacionalidad
    Obligatorio = True
    NroColumna = 13
    'aux = TraerCodNacionalidad_2(CStr(Datos(13))) ' nacionalnro
    Aux = TraerCodNacionalidad(CStr(datos(13))) ' nacionalnro
    'If aux <> CStr(Datos(13)) Then
    If EsNulo(Aux) Then
        Texto = ": " & "La Nacionalidad no existe " & datos(13)
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
        If Obligatorio Then
            RegError = RegError + 1
            Flog.writeline
            Flog.writeline "Linea Abortada "
            Flog.writeline "*****************"
            Exit Sub
        End If
    End If
    
    'Estado Civil
    Obligatorio = True
    NroColumna = 9
    'aux = StrToStr(TraerCodEstadoCivil_2(CStr(Datos(9))), 8) 'estcivnro
    Aux = StrToStr(TraerCodEstadoCivil(CStr(datos(9))), 8) 'estcivnro
    If Aux <> CStr(datos(9)) Then
        Texto = ": " & "El Estado civil no existe " & datos(9)
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
        If Obligatorio Then
            RegError = RegError + 1
            Flog.writeline
            Flog.writeline "Linea Abortada "
            Flog.writeline "*****************"
            Exit Sub
        End If
    End If
    
    
    If datos(14) = "" Then
        datos(14) = "''"
    Else
        datos(14) = ConvFecha(CDate(datos(14))) 'fechaingresopais
    End If
    datos(11) = StrToStr(datos(11), 25) 'tercasape
    If datos(10) = "" Then
        datos(10) = "NULL"
    Else
        datos(10) = ConvFecha(CDate(datos(10))) 'terfecestciv
    End If
    
    
    'Pais
    Obligatorio = True
    NroColumna = 12
    Aux = TraerCodPais_2(CStr(datos(NroColumna))) 'paisnro
    If Aux <> CStr(datos(NroColumna)) Then
        Texto = ": " & "El Pais no existe " & datos(NroColumna)
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
        If Obligatorio Then
            RegError = RegError + 1
            Flog.writeline
            Flog.writeline "Linea Abortada "
            Flog.writeline "*****************"
            Exit Sub
        End If
    End If
    

    'FGZ - 06/04/2005
    StrSql = "SELECT * FROM ter_doc  "
    StrSql = StrSql & " WHERE ter_doc.tidnro = " & datos(1)
    StrSql = StrSql & " AND nrodoc = '" & datos(2) & "'"
    OpenRecordset StrSql, rs_Ter

    If rs_Ter.EOF Then
        StrSql = " INSERT INTO tercero (ternom, ternom2, terape, terape2, terfecnac, tersex, teremail, nacionalnro, estcivnro, terfecing, tercasape,terfecestciv, paisnro ) VALUES ("
        StrSql = StrSql & "'" & datos(3) & "'"      'ternom
        StrSql = StrSql & ",'" & datos(4) & "'"     'ternom2
        StrSql = StrSql & ",'" & datos(5) & "'"      'terape
        StrSql = StrSql & ",'" & datos(6) & "'"     'terape2
        StrSql = StrSql & "," & datos(7)            'terfecnac
        StrSql = StrSql & "," & CLng(datos(8))      'tersex
        StrSql = StrSql & ",'" & datos(23) & "'"    'teremail
        StrSql = StrSql & "," & CLng(datos(13))     'nacionalnro
        StrSql = StrSql & ",'" & datos(9) & "'"     'estcivnro
        StrSql = StrSql & "," & datos(14)           'fechaingresopais
        StrSql = StrSql & ",'" & datos(11) & "'"    'tercasape
        StrSql = StrSql & "," & datos(10)           'terfecestciv
        StrSql = StrSql & "," & datos(12)           'paisnro
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline "Inserto en la tabla de tercero"
    
        '--Obtengo el ternro--
        Ternro = getLastIdentity(objConn, "tercero")
        Flog.writeline "-----------------------------------------------"
        Flog.writeline "Codigo de Tercero = " & Ternro
    
        '--Inserto el Registro correspondiente en ter_tip--
        StrSql = " INSERT INTO ter_tip(ternro,tipnro) VALUES(" & Ternro & ",14)"
        objConn.Execute StrSql, , adExecuteNoRecords
        'Flog.Writeline "Inserto el tipo de tercero 14 en ter_tip"
        
        'Desactivo el manejador de erorres
        On Error GoTo 0
        
        
        'Cualquier error que ocurra de aquí en adelante sigue adelante
        ' tratando de insertar la mayor cantidad de datos posible
        On Error Resume Next
        'HuboError = False
        
        StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
        StrSql = StrSql & " VALUES(" & Ternro & "," & datos(1) & ",'" & datos(2) & "')"
        objConn.Execute StrSql, , adExecuteNoRecords
    
        '--------------------------------------------------------------------------------
        '--Inserto el Domicilio--
        StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
        StrSql = StrSql & " VALUES(1," & Ternro & ",-1,2)"
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline "inserto el Domicilio"
    
        '--Obtengo el numero de domicilio en la tabla--
        NroDom = CLng(getLastIdentity(objConn, "cabdom"))
    
        '--Si no tiene algun dato le agregamos unos ficticios--
        datos(24) = StrToStr(datos(24), 30) 'dirCalle
        datos(25) = StrToStr(datos(25), 8) 'dirNumero
        datos(26) = StrToStr(datos(26), 8) 'dirPiso
        datos(27) = StrToStr(datos(27), 8) 'dirDepto
        datos(28) = StrToStr(datos(28), 8) 'dirTorre
        datos(29) = StrToStr(datos(29), 8) 'dirManzana
        datos(30) = StrToStr(datos(30), 8) 'dirSector
        datos(31) = StrToStr(datos(31), 12) 'dirCP
        
        
        'dirLocalidad
        Obligatorio = True
        NroColumna = 32
        Aux = TraerCodLocalidad_2(CStr(datos(NroColumna))) 'dirLocalidad
        If Aux <> CStr(datos(NroColumna)) Then
            Texto = ": " & "La localidad no existe " & datos(NroColumna)
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
            If Obligatorio Then
                RegError = RegError + 1
                Flog.writeline
                Flog.writeline "Linea Abortada "
                Flog.writeline "*****************"
                Exit Sub
            End If
        End If
        
        'dirProvincia
        Obligatorio = True
        NroColumna = 33
        Aux = TraerCodProvincia_2(CStr(datos(NroColumna)))   'dirProvincia
        If Aux <> CStr(datos(NroColumna)) Then
            Texto = ": " & "La Provincia no existe " & datos(NroColumna)
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
            If Obligatorio Then
                RegError = RegError + 1
                Flog.writeline
                Flog.writeline "Linea Abortada "
                Flog.writeline "*****************"
                Exit Sub
            End If
        End If
        
        'dirPartido
        Obligatorio = True
        NroColumna = 34
        Aux = TraerCodPartido_2(CStr(datos(NroColumna)))  'dirPartido
        If Aux <> CStr(datos(NroColumna)) Then
            Texto = ": " & "El partido no existe " & datos(NroColumna)
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
            If Obligatorio Then
                RegWarnings = RegWarnings + 1
                datos(34) = "NULL"
            End If
        End If
        
        'dirZona
        Obligatorio = True
        NroColumna = 35
        Aux = TraerCodZona_2(CStr(datos(NroColumna)), CLng(datos(NroColumna)))  'dirZona
        If Aux <> CStr(datos(NroColumna)) Then
            Texto = ": " & "La zona no existe " & datos(NroColumna)
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
            If Obligatorio Then
                RegWarnings = RegWarnings + 1
                datos(35) = "NULL"
            End If
        End If
        
        'Pais de Dir
        Obligatorio = True
        NroColumna = 36
        If Not EsNulo(CStr(datos(NroColumna))) Then
            Aux = TraerCodPais_2(CStr(datos(NroColumna))) 'dirPais
            If Aux <> CStr(datos(NroColumna)) Then
                Texto = ": " & "El Pais no existe " & datos(NroColumna)
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                If Obligatorio Then
                    RegWarnings = RegWarnings + 1
                    datos(NroColumna) = 1
                End If
            End If
        Else
            datos(NroColumna) = 1   'Default
        End If
        
        StrSql = " INSERT INTO detdom (domnro,calle,nro,sector,torre,piso,oficdepto,manzana,codigopostal,"
        StrSql = StrSql & "locnro,provnro,paisnro, zonanro, partnro) "
        StrSql = StrSql & " VALUES ("
        StrSql = StrSql & NroDom
        StrSql = StrSql & ",'" & datos(24) & "'"
        StrSql = StrSql & ",'" & datos(25) & "'"
        StrSql = StrSql & ",'" & datos(30) & "'"
        StrSql = StrSql & ",'" & datos(28) & "'"
        StrSql = StrSql & ",'" & datos(26) & "'"
        StrSql = StrSql & ",'" & datos(27) & "'"
        StrSql = StrSql & ",'" & datos(29) & "'"
        StrSql = StrSql & ",'" & datos(31) & "'"
        StrSql = StrSql & "," & datos(32)
        StrSql = StrSql & "," & datos(33)
        StrSql = StrSql & "," & datos(36)
        StrSql = StrSql & "," & datos(35)
        StrSql = StrSql & "," & datos(34)
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        If Err Then
            Err.Clear
            RegWarnings = RegWarnings + 1
            Texto = ": " & "Error insertando SQL " & StrSql
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
            Texto = ": " & Err.Description
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
        Else
            Flog.writeline "Inserte el domicilio "
        End If
    
        '--Telefonos-Personal--
        datos(21) = validatelefono(StrToStr(datos(21), 20))
        If datos(21) <> "" Then
            StrSql = " INSERT INTO telefono "
            StrSql = StrSql & " (domnro, telnro, telfax, teldefault, telcelular ) "
            StrSql = StrSql & " VALUES (" & NroDom & ", '" & datos(21) & "' ,0 , -1 ,0 ) "
            objConn.Execute StrSql, , adExecuteNoRecords
            If Err Then
                Err.Clear
                RegWarnings = RegWarnings + 1
                Texto = ": " & "Error insertando SQL " & StrSql
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                Texto = ": " & Err.Description
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
            Else
                Flog.writeline "Inserte el telefono"
            End If
        End If
        
        '--Telefonos-Celular--
        'FGZ 11/04/2005 - quieren que lo cargue como telefono comun
        datos(22) = validatelefono(StrToStr(datos(22), 20))
        If datos(22) <> "" Then
            StrSql = " INSERT INTO telefono "
            StrSql = StrSql & " (domnro, telnro, telfax, teldefault, telcelular ) "
            StrSql = StrSql & " VALUES (" & NroDom & ", '" & datos(22) & "' , 0, -1, 0 ) "
            objConn.Execute StrSql, , adExecuteNoRecords
            If Err Then
                Err.Clear
                RegWarnings = RegWarnings + 1
                Texto = ": " & "Error insertando SQL " & StrSql
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                Texto = ": " & Err.Description
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
            Else
                Flog.writeline "Inserte el telefono2 "
            End If
        End If
    
        '--Complemento--
        If datos(15) = "" Then
            datos(15) = 0
        Else
            datos(15) = CLng(StrToInt(datos(15))) 'cantidadHijos
        End If
        datos(16) = StrToStr(datos(16), 60) 'imagen
        If datos(17) = "" Then
            datos(17) = "NULL"
        Else
            datos(17) = ConvFecha(CDate(datos(17))) 'fechaIngresoCV
        End If
        datos(18) = StrToStr(datos(18), 250) 'referencias
        
        
        'procedencia
        Obligatorio = False
        NroColumna = 19
        If datos(NroColumna) = "" Then
            datos(NroColumna) = "NULL"
        End If
        Aux = TraerCodProcedencia_2(CStr(datos(NroColumna))) 'procedencia
        If Aux <> CStr(datos(NroColumna)) Then
            Texto = ": " & "La Procedencia no existe " & datos(NroColumna)
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
            If Obligatorio Then
                Flog.writeline
                Flog.writeline "Linea Abortada "
                Flog.writeline "*****************"
                Exit Sub
            Else
                RegWarnings = RegWarnings + 1
            End If
        End If
        
        If datos(20) = "" Then
            datos(20) = 0
        Else
            datos(20) = CDbl(StrToDbl(datos(20))) 'remuneracionPretendida
        End If
        
        StrSql = " INSERT INTO pos_postulante "
        StrSql = StrSql & " ( ternro, posrempre, poscanhijos, posfoto, posfecpres, posref, procnro) "
        StrSql = StrSql & " VALUES (" & Ternro & " ," & CDbl(datos(20)) & ", " & CLng(datos(15)) & ", '" & datos(16) & "', " & datos(17) & ",'" & datos(18) & "', " & datos(19) & ") "
        objConn.Execute StrSql, , adExecuteNoRecords
        If Err Then
            RegWarnings = RegWarnings + 1
            Texto = ": " & "Error insertando complemento SQL " & StrSql
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
            Texto = ": " & Err.Description
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
            Err.Clear
        Else
            Flog.writeline "Inserte el Complemento "
        End If
    
        '--Estudios-formales--(49)
        Xconst = 0
        For a = 0 To 3
            If datos(Xconst + 37) <> "" Then
                'EFnivel8
                Inserta = True
                Obligatorio = True
                NroColumna = Xconst + 37
                Aux = TraerCodNivelEstudio_2(datos(NroColumna))   'EFnivel8
                If Aux <> CStr(datos(NroColumna)) Then
                    Texto = ": " & "El Nivel de estudio no existe " & datos(NroColumna)
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                    If Obligatorio Then
                        RegWarnings = RegWarnings + 1
                        Inserta = False
                    End If
                End If
                'Datos(Xconst + 37) = TraerCodNivelEstudio_2(Datos(Xconst + 37))   'EFnivel8
                                
                'Completo
                If datos(Xconst + 38) = -1 Then datos(Xconst + 38) = -1 Else datos(Xconst + 38) = 0

                'Titulo
                'Inserta = True
                Obligatorio = True
                NroColumna = Xconst + 39
                Aux = TraerCodTitulo_2(CStr(datos(Xconst + 39)), CLng(datos(Xconst + 37)))   'EFtitulo8
                If Aux <> CStr(datos(NroColumna)) Then
                    Texto = ": " & "El Titulo no existe " & datos(NroColumna)
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                    If Obligatorio Then
                        RegWarnings = RegWarnings + 1
                        Inserta = False
                    End If
                End If
                'Datos(Xconst + 39) = TraerCodTitulo_2(CStr(Datos(Xconst + 39)), clng(Datos(Xconst + 37)))   'EFtitulo8
                
                'Institucion
                'Inserta = True
                Obligatorio = True
                NroColumna = Xconst + 40
                Aux = TraerCodInstitucionAbreviada_2(CStr(datos(Xconst + 40)))   'EFinstitucion8
                If Aux <> CStr(datos(NroColumna)) Then
                    Texto = ": " & "La Institucion no existe " & datos(NroColumna)
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                    If Obligatorio Then
                        RegWarnings = RegWarnings + 1
                        Inserta = False
                    End If
                End If
                'Datos(Xconst + 40) = TraerCodInstitucionAbreviada_2(CStr(Datos(Xconst + 40)))   'EFinstitucion8
                
                'Carrera
                'Inserta = True
                Obligatorio = True
                NroColumna = Xconst + 41
                Aux = TraerCodCarrera_2(CStr(datos(Xconst + 41)))    'EFcarrera8
                If Aux <> CStr(datos(NroColumna)) Then
                    Texto = ": " & "La Carrera no existe " & datos(NroColumna)
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                    If Obligatorio Then
                        RegWarnings = RegWarnings + 1
                        Inserta = False
                    End If
                End If
                'Datos(Xconst + 41) = TraerCodCarrera_2(CStr(Datos(Xconst + 41)))    'EFcarrera8
                
                If datos(Xconst + 42) <> "" Then
                    datos(Xconst + 42) = ConvFecha(CDate(datos(Xconst + 42)))   'EFfechaDesde8
                Else
                    datos(Xconst + 42) = "NULL"
                End If
                If datos(Xconst + 43) <> "" Then
                    datos(Xconst + 43) = ConvFecha(CDate(datos(Xconst + 43)))   'EFfechaHasta8
                Else
                    datos(Xconst + 43) = "NULL"
                End If
                datos(Xconst + 44) = StrToStr(datos(Xconst + 44), 30)   'EFpromedio8
                datos(Xconst + 45) = StrToStr(datos(Xconst + 45), 60)   'EFrango8
                If datos(Xconst + 46) <> "" And UCase(datos(Xconst + 46)) <> "NO" Then
                    datos(Xconst + 46) = -1  'EFestudiaActualmente8
                Else
                    datos(Xconst + 46) = 0  'EFestudiaActualmente8
                End If
        
                If Inserta Then
                    StrSql = " INSERT INTO cap_estformal "
                    StrSql = StrSql & " ( nivnro, ternro, titnro, instnro, carredunro, capfecdes, capfechas, capcomp , capestact, caprango, capprom) "
                    StrSql = StrSql & " VALUES (" & CLng(datos(Xconst + 37)) & ", " & Ternro & " ," & datos(Xconst + 39) & "," & datos(Xconst + 40) & "," & datos(Xconst + 41) & "," & datos(Xconst + 42) & " ," & datos(Xconst + 43) & "," & datos(Xconst + 38) & "," & datos(Xconst + 46) & ",'" & datos(Xconst + 45) & "','" & datos(Xconst + 44) & "' ) "
                    Err.Clear
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If Err Then
                        RegWarnings = RegWarnings + 1
                        Texto = ": " & "Error insertando Estudio Formal SQL " & StrSql
                        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                        Texto = ": " & Err.Description
                        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                        Err.Clear
                    Else
                        Flog.writeline "Inserte el estudio formal " & datos(Xconst + 37)
                        ActPasos = True
                    End If
                End If
            End If
            Xconst = Xconst + 10
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 49)
        End If
        ActPasos = False
        
        
        '--Experiencia-Laboral----Empleos Anteriores--57
        'reemplazos
        '117 x 77
        Xconst = 0
        For a = 0 To 3
            If datos(Xconst + 78) <> "" And datos(Xconst + 77) <> "" Then
                'Cargo Anterior
                Inserta = True
                Obligatorio = True
                NroColumna = Xconst + 77
                Aux = TraerCodCargo_2(CStr(datos(Xconst + 77)))    'ELcargoAnterior16
                If Aux <> CStr(datos(NroColumna)) Then
                    Texto = ": " & "EL Cargo no existe " & datos(NroColumna)
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                    If Obligatorio Then
                        RegWarnings = RegWarnings + 1
                        Inserta = False
                    End If
                End If
                'Datos(Xconst + 77) = TraerCodCargo(CStr(Datos(Xconst + 77)))    'ELcargoAnterior16
                
                'Empresa
                'Inserta = True
                Obligatorio = True
                NroColumna = Xconst + 78
                Aux = TraerCodListaEmpresa_2(CStr(datos(Xconst + 78)))   'ELempresa16 lempnro
                If Aux <> CStr(datos(NroColumna)) Then
                    Texto = ": " & "La empresa no existe " & datos(NroColumna)
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                    If Obligatorio Then
                        RegWarnings = RegWarnings + 1
                        Inserta = False
                    End If
                End If
                'Datos(Xconst + 78) = TraerCodListaEmpresa(CStr(Datos(Xconst + 78)))   'ELempresa16 lempnro
                
                'Tarea desempeñada
                'Inserta = True
                Obligatorio = True
                NroColumna = Xconst + 79
                Aux = StrToStr(datos(Xconst + 79), 200) 'ELtareaDesempenada16
                datos(Xconst + 79) = Aux
                'Datos(Xconst + 79) = StrToStr(Datos(Xconst + 79), 200) 'ELtareaDesempenada16
                
                If datos(Xconst + 80) <> "" Then
                    datos(Xconst + 80) = ConvFecha(CDate(datos(Xconst + 80)))  'ELfechaDesde16
                Else
                    datos(Xconst + 80) = "NULL"
                End If
                If datos(Xconst + 81) <> "" Then
                    datos(Xconst + 81) = ConvFecha(CDate(datos(Xconst + 81)))  'ELfechaHasta16
                Else
                    datos(Xconst + 81) = "NULL"
                End If
                If datos(Xconst + 82) = "" Then
                    datos(Xconst + 82) = 0
                Else
                    datos(Xconst + 82) = StrToDbl(datos(Xconst + 82))   'ELremuneracion16
                End If
                
                'Causa de baja
                'Inserta = True
                Obligatorio = True
                NroColumna = Xconst + 83
                If datos(Xconst + 83) <> "" Then
                    Aux = TraerCodCausa_2(CStr(datos(Xconst + 83)))   'ELcausaBaja16
                    If Aux <> CStr(datos(NroColumna)) Then
                        Texto = ": " & "La Causa de baja no existe " & datos(NroColumna)
                        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                        If Obligatorio Then
                            RegWarnings = RegWarnings + 1
                            Inserta = False
                        End If
                    End If
                Else
                    datos(Xconst + 83) = "NULL"
                End If
'                If Datos(Xconst + 83) <> "" Then
'                    Datos(Xconst + 83) = TraerCodCausa(CStr(Datos(Xconst + 83)))   'ELcausaBaja16
'                Else
'                    Datos(Xconst + 83) = "NULL"
'                End If
            
                If Inserta Then
                    StrSql = " INSERT INTO empant "
                    StrSql = StrSql & " ( empleado, empatareas, lempnro, empaini, empafin, carnro, emparemu ) "
                    StrSql = StrSql & " VALUES (" & Ternro & ", '" & datos(Xconst + 79) & "' ," & datos(Xconst + 78) & "," & datos(Xconst + 80) & "," & datos(Xconst + 81) & "," & datos(Xconst + 77) & "," & datos(Xconst + 82) & "  ) "
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If Err Then
                        Flog.writeline "Error al inserte el Empleo Anterior: " & Err.Description
                        RegWarnings = RegWarnings + 1
                        Texto = ": " & "Error insertando Empleo anterior. SQL " & StrSql
                        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                        Texto = ": " & Err.Description
                        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                        Err.Clear
                    Else
                        Flog.writeline "Inserto los datos del Empleo Anterior"
                        ActPasos = True
                    End If
                End If
            End If
            Xconst = Xconst + 7
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 57)
        End If
        ActPasos = False
    
        '--Idiomas--53
        'reemplazos
        '229 x 105
        ActPasos = False
        Xconst = 0
        For a = 0 To 3
            If datos(Xconst + 105) <> "" Then
                If datos(Xconst + 106) <> "" Or datos(Xconst + 107) <> "" Or datos(Xconst + 108) <> "" Then
                    
                    'Idioma
                    Inserta = True
                    Obligatorio = True
                    NroColumna = Xconst + 105
                    Aux = TraerCodIdioma_2(CStr(datos(Xconst + 105))) 'idioma1
                    If Aux <> CStr(datos(NroColumna)) Then
                        Texto = ": " & "EL Idioma no existe " & datos(NroColumna)
                        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                        If Obligatorio Then
                            RegWarnings = RegWarnings + 1
                            Inserta = False
                        End If
                    End If
                    'Datos(Xconst + 105) = TraerCodIdioma(CStr(Datos(Xconst + 105))) 'idioma1
                    
                    'Nivel Lee
                    'Inserta = True
                    Obligatorio = True
                    NroColumna = Xconst + 106
                    Aux = TraerCodIdiNivel_2(CStr(datos(Xconst + 106))) 'idiomaLee1
                    If Aux <> CStr(datos(NroColumna)) Then
                        Texto = ": " & "EL nivel de Idioma no existe " & datos(NroColumna)
                        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                        If Obligatorio Then
                            RegWarnings = RegWarnings + 1
                            Inserta = False
                        End If
                    End If
                    'Datos(Xconst + 106) = TraerCodIdiNivel(CStr(Datos(Xconst + 106))) 'idiomaLee1
                    
                    'Nivel Habla
                    'Inserta = True
                    Obligatorio = True
                    NroColumna = Xconst + 107
                    Aux = TraerCodIdiNivel_2(CStr(datos(Xconst + 107))) 'idiomaHabla1
                    If Aux <> CStr(datos(NroColumna)) Then
                        Texto = ": " & "EL nivel de Idioma no existe " & datos(NroColumna)
                        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                        If Obligatorio Then
                            RegWarnings = RegWarnings + 1
                            Inserta = False
                        End If
                    End If
                    'Datos(Xconst + 107) = TraerCodIdiNivel(CStr(Datos(Xconst + 107))) 'idiomaHabla1
                    
                    'Nivel escribe
                    'Inserta = True
                    Obligatorio = True
                    NroColumna = Xconst + 108
                    Aux = TraerCodIdiNivel_2(CStr(datos(Xconst + 108))) 'idiomaEscribe1
                    If Aux <> CStr(datos(NroColumna)) Then
                        Texto = ": " & "EL nivel de Idioma no existe " & datos(NroColumna)
                        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                        If Obligatorio Then
                            RegWarnings = RegWarnings + 1
                            Inserta = False
                        End If
                    End If
                    'Datos(Xconst + 108) = TraerCodIdiNivel(CStr(Datos(Xconst + 108))) 'idiomaEscribe1
                    If Inserta Then
                        If Not TieneIdioma(Ternro, CLng(datos(Xconst + 105))) Then
                            StrSql = " INSERT INTO emp_idi "
                            StrSql = StrSql & " (idinro, empleado, empidlee, empidhabla, empidescr) "
                            StrSql = StrSql & " VALUES (" & CLng(datos(Xconst + 105)) & ", " & Ternro & " ," & datos(Xconst + 106) & ", " & datos(Xconst + 107) & ", " & datos(Xconst + 108) & " ) "
                        Else
                            StrSql = " UPDATE emp_idi SET "
                            StrSql = StrSql & "  empidlee = " & datos(Xconst + 106)
                            StrSql = StrSql & ", empidhabla = " & datos(Xconst + 107)
                            StrSql = StrSql & ", empidescr = " & datos(Xconst + 108)
                            StrSql = StrSql & " where empleado = " & Ternro & " and idinro = " & CLng(datos(Xconst + 105))
                        End If
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If Err Then
                            Texto = ": " & "Error insertando el Idioma SQL " & StrSql
                            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                            Texto = ": " & Err.Description
                            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                            RegWarnings = RegWarnings + 1
                            Err.Clear
                        Else
                            Flog.writeline "Inserte el Idioma " & datos(Xconst + 105)
                            ActPasos = True
                        End If
                    End If
                End If
            End If
            Xconst = Xconst + 4
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 53)
        End If
        ActPasos = False
    
        
        '--Estudios-Informales--50
        'Reemplazos
        ' 249 x 121
        ActPasos = False
        ActPasos = False
        Xconst = 0
        For a = 0 To 3
            If datos(Xconst + 121) <> "" Then
                tempString = StrToStr(datos(121), 50) ''descCurso  estinfdesabr
                datos(121) = datos(121) ''descCurso  estinfdesabr
                
                'Tipo de Curso
                Inserta = True
                Obligatorio = True
                NroColumna = Xconst + 122
                Aux = TraerCodTipoCurso_2(StrToStr(datos(122), 50)) 'tipoCurso tipcurnro
                If Aux <> CStr(datos(NroColumna)) Then
                    Texto = ": " & "EL tipo de curso no existe " & datos(NroColumna)
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                    If Obligatorio Then
                        RegWarnings = RegWarnings + 1
                        Inserta = False
                    End If
                End If
                'Datos(122) = TraerCodTipoCurso(StrToStr(Datos(122), 50)) 'tipoCurso tipcurnro
                
                If datos(123) <> "" Then
                    datos(123) = ConvFecha(datos(123)) 'fechaCurso  estinffecha
                Else
                    datos(123) = ConvFecha(Date)
                End If
                
                'Institucion
                'Inserta = True
                Obligatorio = True
                NroColumna = Xconst + 124
                Aux = TraerCodInstitucion_2(CStr(datos(124))) 'institucionCurso instnro
                If Aux <> CStr(datos(NroColumna)) Then
                    Texto = ": " & "La Institucion no existe " & datos(NroColumna)
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                    If Obligatorio Then
                        RegWarnings = RegWarnings + 1
                        Inserta = False
                    End If
                End If
                'Datos(124) = TraerCodInstitucion(CStr(Datos(124))) 'institucionCurso instnro
                
                If Inserta Then
                    If datos(121) = "" Or datos(122) = "" Or datos(124) = "" Then
                        Flog.writeline "Error al insertar el estudio informal por falta de datos "
                    Else
                        StrSql = " INSERT INTO cap_estinformal "
                        StrSql = StrSql & " (ternro, estinfdesabr, estinffecha, tipcurnro, instnro) "
                        StrSql = StrSql & " VALUES (" & Ternro & " , '" & tempString & "'," & datos(123) & "," & CLng(datos(122)) & "," & CLng(datos(124)) & ")"
                        Err.Clear
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If Err Then
                            RegWarnings = RegWarnings + 1
                            Texto = ": " & "Error insertando Estudio informal SQL " & StrSql
                            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                            Texto = ": " & Err.Description
                            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                            Err.Clear
                        Else
                            Flog.writeline "Inserto los datos del estudio informal "
                            ActPasos = True
                        End If
                    End If
                End If
            End If
            Xconst = Xconst + 4
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 50)
        End If
        ActPasos = False
        
        
        '--Especializaciones--51
        'reemplazos
        '253 x 137
        Xconst = 0
        ActPasos = False
        For a = 0 To 3
            If datos(Xconst + 139) <> "" Then
                'Datos(Xconst + 253) = TraerCodEspecializacion(CStr(Datos(Xconst + 253))) 'tipo
                'Datos(Xconst + 254) = TraerCodEltoana(CStr(Datos(Xconst + 254)), Datos(Xconst + 253)) 'elemento
                
                'Especializacion
                Inserta = True
                Obligatorio = True
                NroColumna = Xconst + 139
                Aux = TraerCodNivelEspecializacion_2(CStr(datos(Xconst + 139))) 'nivel
                If Aux <> CStr(datos(NroColumna)) Then
                    Texto = ": " & "La Institucion no existe " & datos(NroColumna)
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                    If Obligatorio Then
                        RegWarnings = RegWarnings + 1
                        Inserta = False
                    End If
                End If
                'Datos(Xconst + 139) = TraerCodNivelEspecializacion(CStr(Datos(Xconst + 139))) 'nivel
                If Inserta Then
                    StrSql = " INSERT INTO especemp "
                    StrSql = StrSql & " (eltananro, ternro, espnivnro ) "
                    StrSql = StrSql & " VALUES (" & datosEltoAna(0, a) & ", " & Ternro & " ," & datos(Xconst + 139) & ") "
                    Err.Clear
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If Err Then
                        RegWarnings = RegWarnings + 1
                        Texto = ": " & "Error insertando Especialidad SQL " & StrSql
                        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                        Texto = ": " & Err.Description
                        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                        Err.Clear
                    Else
                        'Flog.Writeline "Inserto los datos de la especialidad"
                        ActPasos = True
                    End If
                End If
            Else
                'Flog.Writeline "Error al insertar la especialidad por falta de datos. "
            End If
            Xconst = Xconst + 3
        Next a
        If ActPasos Then
           Flog.writeline "Inserto los datos de la especialidad"
           Call InsertarPaso(Ternro, 51)
           ActPasos = False
        End If
        
    Else
        Ternro = rs_Ter!Ternro
        Flog.writeline "-----------------------------------------------"
        Flog.writeline "Codigo de Tercero = " & Ternro
        
        'FGZ - 27/07/2005
        'si el tercereo existe pero es de tipo empleado ==> no se hace nada
        '1       Empleado
        '2       Empleado Agencia
        StrSql = " SELECT * FROM ter_tip"
        StrSql = StrSql & " WHERE ternro = " & Ternro
        StrSql = StrSql & " AND tipnro = 1"
        'StrSql = StrSql & " AND (tipnro = 1 OR tipnro = 2)"
        If rs_Aux.State = adStateOpen Then rs_Aux.Close
        OpenRecordset StrSql, rs_Aux
        If Not rs_Aux.EOF Then
            Flog.writeline "El Postulante ya es empleado." & "No se procesará."
            Flog.writeline
            Flog.writeline "Linea Abortada "
            Flog.writeline "*****************"
            Exit Sub
        End If
        
        'Actualizar los datos
        StrSql = " UPDATE tercero SET "
        StrSql = StrSql & " ternom = " & "'" & datos(3) & "'"
        StrSql = StrSql & ", ternom2 = " & "'" & datos(4) & "'"
        StrSql = StrSql & ", terape = " & "'" & datos(5) & "'"
        StrSql = StrSql & ", terape2 = " & "'" & datos(6) & "'"
        StrSql = StrSql & ", terfecnac = " & datos(7)
        StrSql = StrSql & ", tersex = " & CLng(datos(8))
        StrSql = StrSql & ", teremail =" & "'" & datos(23) & "'"
        StrSql = StrSql & ", nacionalnro =" & CLng(datos(13))
        StrSql = StrSql & ", estcivnro =" & "'" & datos(9) & "'"
        StrSql = StrSql & ", terfecing =" & datos(14)
        StrSql = StrSql & ", tercasape =" & "'" & datos(11) & "'"
        StrSql = StrSql & ",terfecestciv =" & datos(10)
        StrSql = StrSql & ", paisnro =" & datos(12)
        StrSql = StrSql & " WHERE ternro = " & Ternro
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline "Tercero Actualizado"
    
        'Desactivo el manejador de erorres
        On Error GoTo 0
        
        'Cualquier error que ocurra de aquí en adelante sigue adelante
        ' tratando de insertar la mayor cantidad de datos posible
        On Error Resume Next
        
        StrSql = "SELECT * FROM ter_doc  "
        StrSql = StrSql & " WHERE ter_doc.tidnro = " & datos(1)
        StrSql = StrSql & " AND ternro = " & Ternro
        If rs_Aux.State = adStateOpen Then rs_Aux.Close
        OpenRecordset StrSql, rs_Aux
        If rs_Aux.EOF Then
            StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
            StrSql = StrSql & " VALUES(" & Ternro & "," & datos(1) & ",'" & datos(2) & "')"
        Else
            StrSql = "UPDATE ter_doc SET "
            StrSql = StrSql & " nrodoc = '" & datos(2) & "'"
            StrSql = StrSql & " WHERE ter_doc.tidnro = " & datos(1)
            StrSql = StrSql & " AND ternro = " & Ternro
        End If
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline "Documento Actualizado"
        
        
        '--------------------------------------------------------------------------------
        '--Inserto el Domicilio--
        StrSql = "SELECT * FROM cabdom  "
        StrSql = StrSql & " WHERE tipnro = 1"
        StrSql = StrSql & " AND ternro = " & Ternro
        If rs_Aux.State = adStateOpen Then rs_Aux.Close
        OpenRecordset StrSql, rs_Aux
        If rs_Aux.EOF Then
            StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
            StrSql = StrSql & " VALUES(1," & Ternro & ",-1,2)"
            objConn.Execute StrSql, , adExecuteNoRecords
            Flog.writeline "inserto el Domicilio"
    
            '--Obtengo el numero de domicilio en la tabla--
            NroDom = CLng(getLastIdentity(objConn, "cabdom"))
        
            '--Si no tiene algun dato le agregamos unos ficticios--
            datos(24) = StrToStr(datos(24), 30) 'dirCalle
            datos(25) = StrToStr(datos(25), 8) 'dirNumero
            datos(26) = StrToStr(datos(26), 8) 'dirPiso
            datos(27) = StrToStr(datos(27), 8) 'dirDepto
            datos(28) = StrToStr(datos(28), 8) 'dirTorre
            datos(29) = StrToStr(datos(29), 8) 'dirManzana
            datos(30) = StrToStr(datos(30), 8) 'dirSector
            datos(31) = StrToStr(datos(31), 12) 'dirCP
'            Datos(32) = TraerCodLocalidad(CStr(Datos(32))) 'dirLocalidad
'            Datos(33) = TraerCodProvincia(CStr(Datos(33)))   'dirProvincia
'            Datos(34) = TraerCodPartido(CStr(Datos(34)))  'dirPartido
'            Datos(35) = TraerCodZona(CStr(Datos(35)), clng(Datos(33)))  'dirZona
'                If Datos(35) = "" Then Datos(35) = "NULL"
'            Datos(36) = TraerCodPais(CStr(Datos(36))) 'dirPais
        
            'dirLocalidad
            Obligatorio = True
            NroColumna = 32
            Aux = TraerCodLocalidad_2(CStr(datos(NroColumna))) 'dirLocalidad
            If Aux <> CStr(datos(NroColumna)) Then
                Texto = ": " & "La localidad no existe " & datos(NroColumna)
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                If Obligatorio Then
                    RegError = RegError + 1
                    Flog.writeline
                    Flog.writeline "Linea Abortada "
                    Flog.writeline "*****************"
                    Exit Sub
                End If
            End If
            
            'dirProvincia
            Obligatorio = True
            NroColumna = 33
            Aux = TraerCodProvincia_2(CStr(datos(NroColumna)))   'dirProvincia
            If Aux <> CStr(datos(NroColumna)) Then
                Texto = ": " & "La Provincia no existe " & datos(NroColumna)
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                If Obligatorio Then
                    RegError = RegError + 1
                    Flog.writeline
                    Flog.writeline "Linea Abortada "
                    Flog.writeline "*****************"
                    Exit Sub
                End If
            End If
            
            'dirPartido
            Obligatorio = True
            NroColumna = 34
            Aux = TraerCodPartido_2(CStr(datos(NroColumna)))  'dirPartido
            If Aux <> CStr(datos(NroColumna)) Then
                Texto = ": " & "El partido no existe " & datos(NroColumna)
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                If Obligatorio Then
                    RegError = RegError + 1
                    Flog.writeline
                    Flog.writeline "Linea Abortada "
                    Flog.writeline "*****************"
                    Exit Sub
                End If
            End If
            
            'dirZona
            Obligatorio = True
            NroColumna = 35
            Aux = TraerCodZona_2(CStr(datos(NroColumna)), CLng(datos(NroColumna)))  'dirZona
            If Aux <> CStr(datos(NroColumna)) Then
                Texto = ": " & "La zona no existe " & datos(NroColumna)
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                If Obligatorio Then
                    RegWarnings = RegWarnings + 1
                    datos(35) = "NULL"
                End If
            End If
            
            'Pais de Dir
            Obligatorio = True
            NroColumna = 36
            Aux = TraerCodPais_2(CStr(datos(NroColumna))) 'dirPais
            If Aux <> CStr(datos(NroColumna)) Then
                Texto = ": " & "El Pais no existe " & datos(NroColumna)
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                If Obligatorio Then
                    RegError = RegError + 1
                    Flog.writeline
                    Flog.writeline "Linea Abortada "
                    Flog.writeline "*****************"
                    Exit Sub
                End If
            End If
        
            StrSql = " INSERT INTO detdom (domnro,calle,nro,sector,torre,piso,oficdepto,manzana,codigopostal,"
            StrSql = StrSql & "locnro,provnro,paisnro, zonanro, partnro) "
            StrSql = StrSql & " VALUES ("
            StrSql = StrSql & NroDom
            StrSql = StrSql & ",'" & datos(24) & "'"
            StrSql = StrSql & ",'" & datos(25) & "'"
            StrSql = StrSql & ",'" & datos(30) & "'"
            StrSql = StrSql & ",'" & datos(28) & "'"
            StrSql = StrSql & ",'" & datos(26) & "'"
            StrSql = StrSql & ",'" & datos(27) & "'"
            StrSql = StrSql & ",'" & datos(29) & "'"
            StrSql = StrSql & ",'" & datos(31) & "'"
            StrSql = StrSql & "," & datos(32)
            StrSql = StrSql & "," & datos(33)
            StrSql = StrSql & "," & datos(36)
            StrSql = StrSql & "," & datos(35)
            StrSql = StrSql & "," & datos(34)
            StrSql = StrSql & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            If Err Then
                RegWarnings = RegWarnings + 1
                Texto = ": " & "Error insertando SQL " & StrSql
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                Texto = ": " & Err.Description
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                Err.Clear
            Else
                Flog.writeline "Inserte el domicilio "
            End If
            Flog.writeline "Inserto el Domicilio "
        Else
            NroDom = rs_Aux!domnro
        
            '--Si no tiene algun dato le agregamos unos ficticios--
            datos(24) = StrToStr(datos(24), 30) 'dirCalle
            datos(25) = StrToStr(datos(25), 8) 'dirNumero
            datos(26) = StrToStr(datos(26), 8) 'dirPiso
            datos(27) = StrToStr(datos(27), 8) 'dirDepto
            datos(28) = StrToStr(datos(28), 8) 'dirTorre
            datos(29) = StrToStr(datos(29), 8) 'dirManzana
            datos(30) = StrToStr(datos(30), 8) 'dirSector
            datos(31) = StrToStr(datos(31), 12) 'dirCP
'            Datos(32) = TraerCodLocalidad(CStr(Datos(32))) 'dirLocalidad
'            Datos(33) = TraerCodProvincia(CStr(Datos(33)))   'dirProvincia
'            Datos(34) = TraerCodPartido(CStr(Datos(34)))  'dirPartido
'            Datos(35) = TraerCodZona(CStr(Datos(35)), clng(Datos(33)))  'dirZona
'            If Datos(35) = "" Then Datos(35) = "NULL"
'            Datos(36) = TraerCodPais(CStr(Datos(36))) 'dirPais
        
            'dirLocalidad
            Obligatorio = True
            NroColumna = 32
            Aux = TraerCodLocalidad_2(CStr(datos(NroColumna))) 'dirLocalidad
            If Aux <> CStr(datos(NroColumna)) Then
                Texto = ": " & "La localidad no existe " & datos(NroColumna)
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                If Obligatorio Then
                    RegError = RegError + 1
                    Flog.writeline
                    Flog.writeline "Linea Abortada "
                    Flog.writeline "*****************"
                    Exit Sub
                End If
            End If
            
            'dirProvincia
            Obligatorio = True
            NroColumna = 33
            Aux = TraerCodProvincia_2(CStr(datos(NroColumna)))   'dirProvincia
            If Aux <> CStr(datos(NroColumna)) Then
                Texto = ": " & "La Provincia no existe " & datos(NroColumna)
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                If Obligatorio Then
                    RegError = RegError + 1
                    Flog.writeline
                    Flog.writeline "Linea Abortada "
                    Flog.writeline "*****************"
                    Exit Sub
                End If
            End If
            
            'dirPartido
            Obligatorio = False
            NroColumna = 34
            Aux = TraerCodPartido_2(CStr(datos(NroColumna)))  'dirPartido
            If Aux <> CStr(datos(NroColumna)) Then
                Texto = ": " & "El partido no existe " & datos(NroColumna)
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                If Obligatorio Then
                    RegWarnings = RegWarnings + 1
                    Flog.writeline
                    Flog.writeline "Linea Abortada "
                    Flog.writeline "*****************"
                    Exit Sub
                End If
            End If
            
            'dirZona
            Obligatorio = False
            NroColumna = 35
            Aux = TraerCodZona_2(CStr(datos(NroColumna)), CLng(datos(NroColumna)))  'dirZona
            If Aux <> CStr(datos(NroColumna)) Then
                Texto = ": " & "La zona no existe " & datos(NroColumna)
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                If Obligatorio Then
                    RegWarnings = RegWarnings + 1
                    datos(35) = "NULL"
                End If
            End If
            
            'Pais de Dir
            Obligatorio = True
            NroColumna = 36
            Aux = TraerCodPais_2(CStr(datos(NroColumna))) 'dirPais
            If Aux <> CStr(datos(NroColumna)) Then
                Texto = ": " & "El Pais no existe " & datos(NroColumna)
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                If Obligatorio Then
                    RegError = RegError + 1
                    Flog.writeline
                    Flog.writeline "Linea Abortada "
                    Flog.writeline "*****************"
                    Exit Sub
                End If
            End If
        
            StrSql = " UPDATE detdom SET "
            StrSql = StrSql & " calle =" & "'" & datos(24) & "'"
            StrSql = StrSql & ",nro =" & "'" & datos(25) & "'"
            StrSql = StrSql & ",sector =" & "'" & datos(30) & "'"
            StrSql = StrSql & ",torre =" & "'" & datos(28) & "'"
            StrSql = StrSql & ",piso =" & "'" & datos(26) & "'"
            StrSql = StrSql & ",oficdepto =" & "'" & datos(27) & "'"
            StrSql = StrSql & ",manzana =" & "'" & datos(29) & "'"
            StrSql = StrSql & ",codigopostal =" & "'" & datos(31) & "'"
            StrSql = StrSql & ",locnro =" & datos(32)
            StrSql = StrSql & ",provnro =" & datos(33)
            StrSql = StrSql & ",paisnro =" & datos(36)
            StrSql = StrSql & ", zonanro =" & datos(35)
            StrSql = StrSql & ", partnro = " & datos(34)
            StrSql = StrSql & " WHERE domnro = " & NroDom
            objConn.Execute StrSql, , adExecuteNoRecords
            If Err Then
                RegWarnings = RegWarnings + 1
                Texto = ": " & "Error Actualizando Domicilio. SQL " & StrSql
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                Texto = ": " & Err.Description
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                Err.Clear
            Else
                Flog.writeline "Domicilio actualizado"
            End If
        End If
        
        
        '--Telefonos-Personal--
        datos(21) = validatelefono(StrToStr(datos(21), 20))
        If datos(21) <> "" Then
            StrSql = "SELECT * FROM telefono  "
            StrSql = StrSql & " WHERE domnro = " & NroDom
            StrSql = StrSql & " AND telnro = " & "'" & datos(21) & "'"
            If rs_Aux.State = adStateOpen Then rs_Aux.Close
            OpenRecordset StrSql, rs_Aux
            If rs_Aux.EOF Then
                StrSql = " INSERT INTO telefono "
                StrSql = StrSql & " (domnro, telnro, telfax, teldefault, telcelular ) "
                StrSql = StrSql & " VALUES (" & NroDom & ", '" & datos(21) & "' ,0 , -1 ,0 ) "
                objConn.Execute StrSql, , adExecuteNoRecords
                If Err Then
                    RegWarnings = RegWarnings + 1
                    Texto = ": " & "Error insertando Telefono. SQL " & StrSql
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                    Texto = ": " & Err.Description
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                    Err.Clear
                Else
                    Flog.writeline "Inserte el telefono"
                End If
            End If
        End If
        
        '--Telefonos-segundo--
        datos(22) = validatelefono(StrToStr(datos(22), 20))
        If datos(22) <> "" Then
            StrSql = "SELECT * FROM telefono  "
            StrSql = StrSql & " WHERE domnro = " & NroDom
            StrSql = StrSql & " AND telnro = " & "'" & datos(22) & "'"
            If rs_Aux.State = adStateOpen Then rs_Aux.Close
            OpenRecordset StrSql, rs_Aux
            If rs_Aux.EOF Then
                StrSql = " INSERT INTO telefono "
                StrSql = StrSql & " (domnro, telnro, telfax, teldefault, telcelular ) "
                StrSql = StrSql & " VALUES (" & NroDom & ", '" & datos(22) & "' , 0, -1, 0 ) "
                objConn.Execute StrSql, , adExecuteNoRecords
                If Err Then
                    RegWarnings = RegWarnings + 1
                    Texto = ": " & "Error insertando telefono. SQL " & StrSql
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                    Texto = ": " & Err.Description
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                    Err.Clear
                Else
                    Flog.writeline "Inserte el telefono2 "
                End If
            End If
        End If
    
    
        '--Complemento--
        If datos(15) = "" Then
            datos(15) = 0
        Else
            datos(15) = CLng(StrToInt(datos(15))) 'cantidadHijos
        End If
        datos(16) = StrToStr(datos(16), 60) 'imagen
        If datos(17) = "" Then
            datos(17) = "NULL"
        Else
            datos(17) = ConvFecha(CDate(datos(17))) 'fechaIngresoCV
        End If
        datos(18) = StrToStr(datos(18), 250) 'referencias
        
        'procedencia
        Obligatorio = False
        NroColumna = 19
        If datos(NroColumna) = "" Then
            datos(NroColumna) = "null"
        End If
        Aux = TraerCodProcedencia_2(CStr(datos(NroColumna))) 'procedencia
        If Aux <> CStr(datos(NroColumna)) Then
            Texto = ": " & "La Procedencia no existe " & datos(NroColumna)
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
            If Obligatorio Then
                RegWarnings = RegWarnings + 1
                Flog.writeline
                Flog.writeline "Linea Abortada "
                Flog.writeline "*****************"
                Exit Sub
            End If
        End If
        
        If datos(20) = "" Then
            datos(20) = 0
        Else
            datos(20) = CDbl(StrToDbl(datos(20))) 'remuneracionPretendida
        End If
        
        StrSql = "SELECT * FROM pos_postulante  "
        StrSql = StrSql & " WHERE ternro = " & Ternro
        If rs_Aux.State = adStateOpen Then rs_Aux.Close
        OpenRecordset StrSql, rs_Aux
        If rs_Aux.EOF Then
            StrSql = " INSERT INTO pos_postulante "
            StrSql = StrSql & " ( ternro, posrempre, poscanhijos, posfoto, posfecpres, posref, procnro) "
            StrSql = StrSql & " VALUES (" & Ternro & " ," & CDbl(datos(20)) & ", " & CLng(datos(15)) & ", '" & datos(16) & "', " & datos(17) & ",'" & datos(18) & "', " & datos(19) & ") "
            objConn.Execute StrSql, , adExecuteNoRecords
            If Err Then
                RegWarnings = RegWarnings + 1
                Texto = ": " & "Error insertando postulante. SQL " & StrSql
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                Texto = ": " & Err.Description
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                Err.Clear
            Else
                Flog.writeline "Inserte el Complemento "
            End If
        Else
            StrSql = "UPDATE pos_postulante SET "
            StrSql = StrSql & " posrempre = " & CDbl(datos(20))
            StrSql = StrSql & ", poscanhijos =" & CLng(datos(15))
            StrSql = StrSql & ", posfoto =" & "'" & datos(16) & "'"
            StrSql = StrSql & ", posfecpres =" & datos(17)
            StrSql = StrSql & ", posref =" & "'" & datos(18) & "'"
            StrSql = StrSql & ", procnro =" & datos(19)
            StrSql = StrSql & " WHERE ternro = " & Ternro
            objConn.Execute StrSql, , adExecuteNoRecords
            If Err Then
                RegWarnings = RegWarnings + 1
                Texto = ": " & "Error Actualizando Postulante. SQL " & StrSql
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                Texto = ": " & Err.Description
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                Err.Clear
            Else
                Flog.writeline "Complemento actualizado"
            End If
        End If
        
        '--Estudios-formales--(49)
        Xconst = 0
        For a = 0 To 3
            If UBound(datos) > (Xconst + 37) Then
                If datos(Xconst + 37) <> "" Then
                    'EFnivel8
                    Inserta = True
                    Obligatorio = True
                    NroColumna = Xconst + 37
                    Aux = TraerCodNivelEstudio_2(datos(NroColumna))   'EFnivel8
                    If Aux <> CStr(datos(NroColumna)) Then
                        Texto = ": " & "El Nivel de estudio no existe " & datos(NroColumna)
                        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                        If Obligatorio Then
                            RegWarnings = RegWarnings + 1
                            Inserta = False
                        End If
                    End If
                    'Datos(Xconst + 37) = TraerCodNivelEstudio_2(Datos(Xconst + 37))   'EFnivel8
                                    
                    'Completo
                    If datos(Xconst + 38) = -1 Then datos(Xconst + 38) = -1 Else datos(Xconst + 38) = 0
    
                    'Titulo
                    'Inserta = True
                    Obligatorio = True
                    NroColumna = Xconst + 39
                    Aux = TraerCodTitulo_2(CStr(datos(Xconst + 39)), CLng(datos(Xconst + 37)))   'EFtitulo8
                    If Aux <> CStr(datos(NroColumna)) Then
                        Texto = ": " & "El Titulo no existe " & datos(NroColumna)
                        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                        If Obligatorio Then
                            RegWarnings = RegWarnings + 1
                            Inserta = False
                        End If
                    End If
                    'Datos(Xconst + 39) = TraerCodTitulo_2(CStr(Datos(Xconst + 39)), clng(Datos(Xconst + 37)))   'EFtitulo8
                    
                    'Institucion
                    'Inserta = True
                    Obligatorio = True
                    NroColumna = Xconst + 40
                    Aux = TraerCodInstitucionAbreviada_2(CStr(datos(Xconst + 40)))   'EFinstitucion8
                    If Aux <> CStr(datos(NroColumna)) Then
                        Texto = ": " & "La Institucion no existe " & datos(NroColumna)
                        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                        If Obligatorio Then
                            RegWarnings = RegWarnings + 1
                            Inserta = False
                        End If
                    End If
                    'Datos(Xconst + 40) = TraerCodInstitucionAbreviada_2(CStr(Datos(Xconst + 40)))   'EFinstitucion8
                    
                    'Carrera
                    'Inserta = True
                    Obligatorio = True
                    NroColumna = Xconst + 41
                    Aux = TraerCodCarrera_2(CStr(datos(Xconst + 41)))    'EFcarrera8
                    If Aux <> CStr(datos(NroColumna)) Then
                        Texto = ": " & "La Carrera no existe " & datos(NroColumna)
                        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                        If Obligatorio Then
                            RegWarnings = RegWarnings + 1
                            Inserta = False
                        End If
                    End If
                    'Datos(Xconst + 41) = TraerCodCarrera_2(CStr(Datos(Xconst + 41)))    'EFcarrera8
                    
                    If datos(Xconst + 42) <> "" Then
                        datos(Xconst + 42) = ConvFecha(CDate(datos(Xconst + 42)))   'EFfechaDesde8
                    Else
                        datos(Xconst + 42) = "NULL"
                    End If
                    If datos(Xconst + 43) <> "" Then
                        datos(Xconst + 43) = ConvFecha(CDate(datos(Xconst + 43)))   'EFfechaHasta8
                    Else
                        datos(Xconst + 43) = "NULL"
                    End If
                    datos(Xconst + 44) = StrToStr(datos(Xconst + 44), 30)   'EFpromedio8
                    datos(Xconst + 45) = StrToStr(datos(Xconst + 45), 60)   'EFrango8
                    If datos(Xconst + 46) <> "" And UCase(datos(Xconst + 46)) <> "NO" Then
                        datos(Xconst + 46) = -1  'EFestudiaActualmente8
                    Else
                        datos(Xconst + 46) = 0  'EFestudiaActualmente8
                    End If
            
                    If Inserta Then
                        'actualizo
                        StrSql = "SELECT * FROM cap_estformal  "
                        StrSql = StrSql & " WHERE nivnro = " & CLng(datos(Xconst + 37))
                        StrSql = StrSql & " AND ternro = " & Ternro
                        StrSql = StrSql & " AND titnro = " & datos(Xconst + 39)
                        StrSql = StrSql & " AND instnro = " & datos(Xconst + 40)
                        StrSql = StrSql & " AND carredunro = " & datos(Xconst + 41)
                        If rs_Aux.State = adStateOpen Then rs_Aux.Close
                        OpenRecordset StrSql, rs_Aux
                        If rs_Aux.EOF Then
                            StrSql = " INSERT INTO cap_estformal "
                            StrSql = StrSql & " ( nivnro, ternro, titnro, instnro, carredunro, capfecdes, capfechas, capcomp , capestact, caprango, capprom) "
                            StrSql = StrSql & " VALUES ("
                            StrSql = StrSql & CLng(datos(Xconst + 37))          'nivnro
                            StrSql = StrSql & "," & Ternro                      'ternro
                            StrSql = StrSql & "," & datos(Xconst + 39)          'titnro
                            StrSql = StrSql & "," & datos(Xconst + 40)          'instnro
                            StrSql = StrSql & "," & datos(Xconst + 41)          'carredunro
                            StrSql = StrSql & "," & datos(Xconst + 42)          'capfecdes
                            StrSql = StrSql & "," & datos(Xconst + 43)          'capfechas
                            StrSql = StrSql & "," & datos(Xconst + 38)          'capcomp
                            StrSql = StrSql & "," & datos(Xconst + 46)          'capestact
                            StrSql = StrSql & ",'" & datos(Xconst + 45) & "'"   'caprango
                            StrSql = StrSql & ",'" & datos(Xconst + 44) & "'"   'capprom
                            StrSql = StrSql & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                            If Err Then
                                RegWarnings = RegWarnings + 1
                                Texto = ": " & "Error insertando Estudio Formal. SQL " & StrSql
                                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                                Texto = ": " & Err.Description
                                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                                Err.Clear
                            Else
                                Flog.writeline "Inserte el estudio formal " & datos(Xconst + 37)
                                ActPasos = True
                            End If
                        Else
                            StrSql = "UPDATE  cap_estformal SET "
                            StrSql = StrSql & " capfecdes = " & datos(Xconst + 42)
                            StrSql = StrSql & ", capfechas =" & datos(Xconst + 43)
                            StrSql = StrSql & ", capcomp =" & datos(Xconst + 38)
                            StrSql = StrSql & ", capestact =" & datos(Xconst + 46)
                            StrSql = StrSql & ", caprango =" & "'" & datos(Xconst + 45) & "'"
                            StrSql = StrSql & ", capprom =" & "'" & datos(Xconst + 44) & "'"
                            StrSql = StrSql & " WHERE nivnro = " & CLng(datos(Xconst + 37))
                            StrSql = StrSql & " AND ternro = " & Ternro
                            StrSql = StrSql & " AND titnro = " & datos(Xconst + 39)
                            StrSql = StrSql & " AND instnro = " & datos(Xconst + 40)
                            StrSql = StrSql & " AND carredunro = " & datos(Xconst + 41)
                            objConn.Execute StrSql, , adExecuteNoRecords
                            If Err Then
                                RegWarnings = RegWarnings + 1
                                Texto = ": " & "Error Actualizando Estudio Formal. SQL " & StrSql
                                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                                Texto = ": " & Err.Description
                                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                                Err.Clear
                            Else
                                Flog.writeline "Estudio formal " & datos(Xconst + 37) & " actualizado"
                                ActPasos = False
                            End If
                        End If
                    End If
                End If
            Else
            End If
            Xconst = Xconst + 10
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 49)
        End If
        ActPasos = False
        
        
        '--Experiencia-Laboral----Empleos Anteriores--57
        Xconst = 0
        For a = 0 To 3
            If UBound(datos) > (Xconst + 77) Then
                If datos(Xconst + 78) <> "" And datos(Xconst + 77) <> "" Then
                    'Cargo Anterior
                    Inserta = True
                    Obligatorio = True
                    NroColumna = Xconst + 77
                    Aux = TraerCodCargo_2(CStr(datos(Xconst + 77)))    'ELcargoAnterior16
                    If Aux <> CStr(datos(NroColumna)) Then
                        Texto = ": " & "EL Cargo no existe " & datos(NroColumna)
                        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                        If Obligatorio Then
                            RegWarnings = RegWarnings + 1
                            Inserta = False
                        End If
                    End If
                    'Datos(Xconst + 77) = TraerCodCargo(CStr(Datos(Xconst + 77)))    'ELcargoAnterior16
                    
                    'Empresa
                    'Inserta = True
                    Obligatorio = True
                    NroColumna = Xconst + 78
                    Aux = TraerCodListaEmpresa_2(CStr(datos(Xconst + 78)))   'ELempresa16 lempnro
                    If Aux <> CStr(datos(NroColumna)) Then
                        Texto = ": " & "La empresa no existe " & datos(NroColumna)
                        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                        If Obligatorio Then
                            RegWarnings = RegWarnings + 1
                            Inserta = False
                        End If
                    End If
                    'Datos(Xconst + 78) = TraerCodListaEmpresa(CStr(Datos(Xconst + 78)))   'ELempresa16 lempnro
                    
                    'Tarea desempeñada
                    'Inserta = True
                    Obligatorio = True
                    NroColumna = Xconst + 79
                    Aux = StrToStr(datos(Xconst + 79), 200) 'ELtareaDesempenada16
                    datos(Xconst + 79) = Aux
                    'Datos(Xconst + 79) = StrToStr(Datos(Xconst + 79), 200) 'ELtareaDesempenada16
                    
                    If datos(Xconst + 80) <> "" Then
                        datos(Xconst + 80) = ConvFecha(CDate(datos(Xconst + 80)))  'ELfechaDesde16
                    Else
                        datos(Xconst + 80) = "NULL"
                    End If
                    If datos(Xconst + 81) <> "" Then
                        datos(Xconst + 81) = ConvFecha(CDate(datos(Xconst + 81)))  'ELfechaHasta16
                    Else
                        datos(Xconst + 81) = "NULL"
                    End If
                    If datos(Xconst + 82) = "" Then
                        datos(Xconst + 82) = 0
                    Else
                        datos(Xconst + 82) = StrToDbl(datos(Xconst + 82))   'ELremuneracion16
                    End If
                    
                    'Causa de baja
                    'Inserta = True
                    Obligatorio = True
                    NroColumna = Xconst + 83
                    If datos(Xconst + 83) <> "" Then
                        Aux = TraerCodCausa_2(CStr(datos(Xconst + 83)))   'ELcausaBaja16
                        If Aux <> CStr(datos(NroColumna)) Then
                            Texto = ": " & "La Causa de baja no existe " & datos(NroColumna)
                            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                            If Obligatorio Then
                                RegWarnings = RegWarnings + 1
                                Inserta = False
                            End If
                        End If
                    Else
                        datos(Xconst + 83) = "NULL"
                    End If
                
                    If Inserta Then
                        StrSql = "SELECT * FROM empant  "
                        StrSql = StrSql & " WHERE empleado = " & Ternro
                        StrSql = StrSql & " AND empatareas = " & "'" & datos(Xconst + 79) & "'"
                        StrSql = StrSql & " AND lempnro = " & datos(Xconst + 78)
                        StrSql = StrSql & " AND carnro = " & datos(Xconst + 77)
                        If rs_Aux.State = adStateOpen Then rs_Aux.Close
                        OpenRecordset StrSql, rs_Aux
                        If rs_Aux.EOF Then
                            StrSql = " INSERT INTO empant "
                            'FGZ - 29/08/2005
                            'cambié los nombres de los campos donde inserta las fechas desde y hasta
                            'StrSql = StrSql & " ( empleado, empatareas, lempnro, empadesde, emmpahasta, carnro, emparemu ) "
                            StrSql = StrSql & " ( empleado, empatareas, lempnro, empaini, empafin, carnro, emparemu ) "
                            StrSql = StrSql & " VALUES (" & Ternro & ", '" & datos(Xconst + 79) & "' ," & datos(Xconst + 78) & "," & datos(Xconst + 80) & "," & datos(Xconst + 81) & "," & datos(Xconst + 77) & "," & datos(Xconst + 82) & "  ) "
                            objConn.Execute StrSql, , adExecuteNoRecords
                            If Err Then
                                RegWarnings = RegWarnings + 1
                                Texto = ": " & "Error insertando Empleo anterior. SQL " & StrSql
                                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                                Texto = ": " & Err.Description
                                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                                Err.Clear
                            Else
                                Flog.writeline "Inserto los datos del Empleo Anterior"
                                ActPasos = True
                            End If
                        Else
                            StrSql = "UPDATE empant SET "
                            'FGZ - 29/08/2005
    '                        StrSql = StrSql & " empadesde =" & Datos(Xconst + 120)
    '                        StrSql = StrSql & ", emmpahasta =" & (Datos(Xconst + 121))
                            StrSql = StrSql & " empaini =" & datos(Xconst + 80)
                            StrSql = StrSql & ", empafin =" & (datos(Xconst + 81))
                            StrSql = StrSql & ", emparemu = " & datos(Xconst + 82)
                            StrSql = StrSql & " WHERE empantnro = " & rs_Aux!Empantnro
                            objConn.Execute StrSql, , adExecuteNoRecords
                            If Err Then
                                RegWarnings = RegWarnings + 1
                                Texto = ": " & "Error Actualizando Empleo Anterior. SQL " & StrSql
                                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                                Texto = ": " & Err.Description
                                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                                Err.Clear
                            Else
                                Flog.writeline "Actualizo los datos del Empleo Anterior"
                                ActPasos = False
                            End If
                        End If
                    End If
                Else
                End If
            End If
            Xconst = Xconst + 7
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 57)
        End If
        ActPasos = False
    
    
        '--Idiomas--53
        ActPasos = False
        Xconst = 0
        For a = 0 To 3
            If datos(Xconst + 105) <> "" Then
                If datos(Xconst + 106) <> "" Or datos(Xconst + 107) <> "" Or datos(Xconst + 108) <> "" Then
                    
                    'Idioma
                    Inserta = True
                    Obligatorio = True
                    NroColumna = Xconst + 105
                    Aux = TraerCodIdioma_2(CStr(datos(Xconst + 105))) 'idioma1
                    If Aux <> CStr(datos(NroColumna)) Then
                        Texto = ": " & "EL Idioma no existe " & datos(NroColumna)
                        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                        If Obligatorio Then
                            RegWarnings = RegWarnings + 1
                            Inserta = False
                        End If
                    End If
                    'Datos(Xconst + 105) = TraerCodIdioma(CStr(Datos(Xconst + 105))) 'idioma1
                    
                    'Nivel Lee
                    'Inserta = True
                    Obligatorio = True
                    NroColumna = Xconst + 106
                    Aux = TraerCodIdiNivel_2(CStr(datos(Xconst + 106))) 'idiomaLee1
                    If Aux <> CStr(datos(NroColumna)) Then
                        Texto = ": " & "EL nivel de Idioma no existe " & datos(NroColumna)
                        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                        If Obligatorio Then
                            RegWarnings = RegWarnings + 1
                            Inserta = False
                        End If
                    End If
                    'Datos(Xconst + 106) = TraerCodIdiNivel(CStr(Datos(Xconst + 106))) 'idiomaLee1
                    
                    'Nivel Habla
                    'Inserta = True
                    Obligatorio = True
                    NroColumna = Xconst + 107
                    Aux = TraerCodIdiNivel_2(CStr(datos(Xconst + 107))) 'idiomaHabla1
                    If Aux <> CStr(datos(NroColumna)) Then
                        Texto = ": " & "EL nivel de Idioma no existe " & datos(NroColumna)
                        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                        If Obligatorio Then
                            RegWarnings = RegWarnings + 1
                            Inserta = False
                        End If
                    End If
                    'Datos(Xconst + 107) = TraerCodIdiNivel(CStr(Datos(Xconst + 107))) 'idiomaHabla1
                    
                    'Nivel escribe
                    'Inserta = True
                    Obligatorio = True
                    NroColumna = Xconst + 108
                    Aux = TraerCodIdiNivel_2(CStr(datos(Xconst + 108))) 'idiomaEscribe1
                    If Aux <> CStr(datos(NroColumna)) Then
                        Texto = ": " & "EL nivel de Idioma no existe " & datos(NroColumna)
                        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                        If Obligatorio Then
                            RegWarnings = RegWarnings + 1
                            Inserta = False
                        End If
                    End If
                    'Datos(Xconst + 108) = TraerCodIdiNivel(CStr(Datos(Xconst + 108))) 'idiomaEscribe1
                    If Inserta Then
                        
                        If Not TieneIdioma(Ternro, CLng(datos(Xconst + 105))) Then
                            StrSql = " INSERT INTO emp_idi "
                            StrSql = StrSql & " (idinro, empleado, empidlee, empidhabla, empidescr) "
                            StrSql = StrSql & " VALUES (" & CLng(datos(Xconst + 105)) & ", " & Ternro & " ," & datos(Xconst + 106) & ", " & datos(Xconst + 107) & ", " & datos(Xconst + 108) & " ) "
                        Else
                            StrSql = " UPDATE emp_idi SET "
                            StrSql = StrSql & "  empidlee = " & datos(Xconst + 106)
                            StrSql = StrSql & ", empidhabla = " & datos(Xconst + 107)
                            StrSql = StrSql & ", empidescr = " & datos(Xconst + 108)
                            StrSql = StrSql & " where empleado = " & Ternro & " and idinro = " & CLng(datos(Xconst + 105))
                        End If
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If Err Then
                            RegWarnings = RegWarnings + 1
                            Texto = ": " & "Error Actualizando Idioma. SQL " & StrSql
                            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                            Texto = ": " & Err.Description
                            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                            Err.Clear
                        Else
                            Flog.writeline "Inserte el Idioma " & datos(Xconst + 105)
                            ActPasos = True
                        End If
                    End If
                End If
            End If
            Xconst = Xconst + 4
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 53)
        End If
        ActPasos = False
    
        
        '--Estudios-Informales--50
        ActPasos = False
        ActPasos = False
        Xconst = 0
        For a = 0 To 3
            If datos(Xconst + 121) <> "" Then
                tempString = StrToStr(datos(121), 50) ''descCurso  estinfdesabr
                datos(121) = datos(121) ''descCurso  estinfdesabr
                
                'Tipo de Curso
                Inserta = True
                Obligatorio = True
                NroColumna = Xconst + 122
                Aux = TraerCodTipoCurso_2(StrToStr(datos(122), 50)) 'tipoCurso tipcurnro
                If Aux <> CStr(datos(NroColumna)) Then
                    Texto = ": " & "EL tipo de curso no existe " & datos(NroColumna)
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                    If Obligatorio Then
                        RegWarnings = RegWarnings + 1
                        Inserta = False
                    End If
                End If
                'Datos(122) = TraerCodTipoCurso(StrToStr(Datos(122), 50)) 'tipoCurso tipcurnro
                
                If datos(123) <> "" Then
                    datos(123) = ConvFecha(datos(123)) 'fechaCurso  estinffecha
                Else
                    datos(123) = ConvFecha(Date)
                End If
                
                'Institucion
                'Inserta = True
                Obligatorio = True
                NroColumna = Xconst + 124
                Aux = TraerCodInstitucion_2(CStr(datos(124))) 'institucionCurso instnro
                If Aux <> CStr(datos(NroColumna)) Then
                    Texto = ": " & "La Institucion no existe " & datos(NroColumna)
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                    If Obligatorio Then
                        RegWarnings = RegWarnings + 1
                        Inserta = False
                    End If
                End If
                'Datos(124) = TraerCodInstitucion(CStr(Datos(124))) 'institucionCurso instnro
                
                If Inserta Then
                    If datos(121) = "" Or datos(122) = "" Or datos(124) = "" Then
                        RegWarnings = RegWarnings + 1
                        Texto = ": " & "Error al insertar el estudio informal por falta de datos "
                        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                    Else
                        'Reviso
                        StrSql = "SELECT * FROM cap_estinformal  "
                        StrSql = StrSql & " WHERE tipcurnro = " & CLng(datos(122))
                        StrSql = StrSql & " AND ternro = " & Ternro
                        StrSql = StrSql & " AND instnro = " & CLng(datos(124))
                        If rs_Aux.State = adStateOpen Then rs_Aux.Close
                        OpenRecordset StrSql, rs_Aux
                        If rs_Aux.EOF Then
                            StrSql = " INSERT INTO cap_estinformal "
                            StrSql = StrSql & " (ternro, estinfdesabr, estinffecha, tipcurnro, instnro) "
                            StrSql = StrSql & " VALUES (" & Ternro & " , '" & tempString & "'," & datos(123) & "," & CLng(datos(122)) & "," & CLng(datos(124)) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                            If Err Then
                                RegWarnings = RegWarnings + 1
                                Texto = ": " & "Error Actualizando Estudio Informal. SQL " & StrSql
                                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                                Texto = ": " & Err.Description
                                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                                Err.Clear
                            Else
                                Flog.writeline "Inserto los datos del estudio informal "
                                ActPasos = True
                            End If
                        Else
                            StrSql = "UPDATE cap_estinformal SET "
                            StrSql = StrSql & " estinfdesabr = '" & tempString & "'"
                            StrSql = StrSql & ", estinffecha =" & (datos(123))
                            StrSql = StrSql & " WHERE tipcurnro = " & CLng(datos(122))
                            StrSql = StrSql & " AND ternro = " & Ternro
                            StrSql = StrSql & " AND instnro = " & CLng(datos(124))
                            objConn.Execute StrSql, , adExecuteNoRecords
                            If Err Then
                                RegWarnings = RegWarnings + 1
                                Texto = ": " & "Error Actualizando Estudio Informal. SQL " & StrSql
                                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                                Texto = ": " & Err.Description
                                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                                Err.Clear
                            Else
                                Flog.writeline "Actualizo los datos del estudio informal "
                                ActPasos = False
                            End If
                        End If
                    End If
                End If
            End If
            Xconst = Xconst + 4
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 50)
        End If
        ActPasos = False


        '--Especializaciones--51
        'reemplazos
        '253 x 137
        Xconst = 0
        ActPasos = False
        For a = 0 To 3
            If datos(Xconst + 139) <> "" Then
                'Datos(Xconst + 253) = TraerCodEspecializacion(CStr(Datos(Xconst + 253))) 'tipo
                'Datos(Xconst + 254) = TraerCodEltoana(CStr(Datos(Xconst + 254)), Datos(Xconst + 253)) 'elemento
                
                'Especializacion
                Inserta = True
                Obligatorio = True
                NroColumna = Xconst + 139
                Aux = TraerCodNivelEspecializacion_2(CStr(datos(Xconst + 139))) 'nivel
                If Aux <> CStr(datos(NroColumna)) Then
                    Texto = ": " & "La Institucion no existe " & datos(NroColumna)
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                    If Obligatorio Then
                        RegWarnings = RegWarnings + 1
                        Inserta = False
                    End If
                End If
                'Datos(Xconst + 139) = TraerCodNivelEspecializacion(CStr(Datos(Xconst + 139))) 'nivel
                If Inserta Then
                    'REVISO
                    StrSql = "SELECT * FROM especemp  "
                    StrSql = StrSql & " WHERE espnivnro = " & datos(Xconst + 139)
                    StrSql = StrSql & " AND ternro = " & Ternro
                    StrSql = StrSql & " AND eltananro = " & datosEltoAna(0, a)
                    If rs_Aux.State = adStateOpen Then rs_Aux.Close
                    OpenRecordset StrSql, rs_Aux
                    If rs_Aux.EOF Then
                        StrSql = " INSERT INTO especemp "
                        StrSql = StrSql & " (eltananro, ternro, espnivnro ) "
                        StrSql = StrSql & " VALUES (" & datosEltoAna(0, a) & ", " & Ternro & " ," & datos(Xconst + 139) & ") "
                        Err.Clear
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If Err Then
                            RegWarnings = RegWarnings + 1
                            Texto = ": " & "Error Actualizando Especialidad. SQL " & StrSql
                            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                            Texto = ": " & Err.Description
                            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                            Err.Clear
                        Else
                            ActPasos = True
                        End If
                    End If
                End If
            Else
                'Flog.Writeline "Error al insertar la especialidad por falta de datos. "
            End If
            Xconst = Xconst + 3
        Next a
        If ActPasos Then
           Flog.writeline "Inserto los datos de la especialidad"
           Call InsertarPaso(Ternro, 51)
           ActPasos = False
        End If

    End If
Fin:
    Flog.writeline Espacios(Tabulador * 0) & "Linea Procesada."
Exit Sub

Manejador_De_Error:
    Resume Next
    HuboError = True
    Texto = ": " & Err.Description
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    RegError = RegError + 1
    GoTo Fin
    
End Sub

Public Sub LineaModelo_275(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Procedimiento de incorporacion de postulantes. Version Estandar.
' Autor      : FGZ
' Fecha      : 01/03/2006
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
    Dim datos() As String
    Dim Ternro As Long
    Dim NroDom As Long
    Dim a As Long
    Dim Xconst As Long
    Dim ActPasos As Boolean
    Dim tempString As String
    Dim EstPosNro As Long
    
    Dim rs_Ter As New ADODB.Recordset
    Dim rs_Aux As New ADODB.Recordset
    Dim I As Long
    Dim Empresa
    
    Flog.writeline "procesando linea " & strLinea
    
    'Si ocurre un error antes de insertar el tercero se aborta el postulante
    On Error GoTo Manejador_De_Error:
    
    datos = Split("0" & separador & strLinea, separador)
    For I = 0 To UBound(datos)
        datos(I) = Trim(datos(I))
    Next I
    
    Flog.writeline datos(1)
    Flog.writeline datos(78)
    Empresa = datos(78)
    
    '--Documentos--
    datos(1) = TraerCodTipoDocumento(CStr(datos(1)))  'tipoDocumento
    datos(2) = StrToStr(CStr(datos(2)), 30) 'numeroDocumento
    datos(2) = Replace(datos(2), ".", "") 'elimino puntos y comas
    datos(2) = Replace(datos(2), ",", "")
    
    '--Tercero
    datos(3) = StrToStr(datos(3), 25) 'ternom
    datos(4) = StrToStr(datos(4), 25)  'ternom2
    datos(5) = StrToStr(datos(5), 25) 'terape
    datos(6) = StrToStr(datos(6), 25) 'terape2
    datos(7) = ConvFecha(CDate(datos(7))) 'terfecnac
    'If UCase(Datos(8)) = "MASCULINO" Then Datos(8) = -1 Else Datos(8) = 0 'tersex
    If (UCase(datos(8)) = "M") Or (UCase(datos(8)) = "-1") Or (UCase(datos(8)) = "MASCULINO") Then
        datos(8) = -1
    Else
        datos(8) = 0
    End If

    datos(23) = StrToStr(datos(23), 100) ' teremail
    datos(13) = TraerCodNacionalidad(CStr(datos(13))) ' nacionalnro
    datos(9) = StrToStr(TraerCodEstadoCivil(CStr(datos(9))), 8) 'estcivnro
    If datos(14) = "" Then
        datos(14) = "''"
    Else
        datos(14) = ConvFecha(CDate(datos(14))) 'fechaingresopais
    End If
    datos(11) = StrToStr(datos(11), 25) 'tercasape
    If datos(10) = "" Then
        datos(10) = "NULL"
    Else
        datos(10) = ConvFecha(CDate(datos(10))) 'terfecestciv
    End If
    datos(12) = TraerCodPais(CStr(datos(12))) 'paisnro


    'FGZ - 06/04/2005
    StrSql = "SELECT * FROM ter_doc  "
    StrSql = StrSql & " WHERE ter_doc.tidnro = " & datos(1)
    StrSql = StrSql & " AND nrodoc = '" & datos(2) & "'"
    OpenRecordset StrSql, rs_Ter

    If rs_Ter.EOF Then
        StrSql = " INSERT INTO tercero (ternom, ternom2, terape, terape2, terfecnac, tersex, teremail, nacionalnro, estcivnro, terfecing, tercasape,terfecestciv, paisnro ) VALUES ("
        StrSql = StrSql & "'" & datos(3) & "'"      'ternom
        StrSql = StrSql & ",'" & datos(4) & "'"     'ternom2
        StrSql = StrSql & ",'" & datos(5) & "'"      'terape
        StrSql = StrSql & ",'" & datos(6) & "'"     'terape2
        StrSql = StrSql & "," & datos(7)            'terfecnac
        StrSql = StrSql & "," & CLng(datos(8))      'tersex
        StrSql = StrSql & ",'" & datos(23) & "'"    'teremail
        StrSql = StrSql & "," & CLng(datos(13))     'nacionalnro
        StrSql = StrSql & ",'" & datos(9) & "'"     'estcivnro
        StrSql = StrSql & "," & datos(14)           'fechaingresopais
        StrSql = StrSql & ",'" & datos(11) & "'"    'tercasape
        StrSql = StrSql & "," & datos(10)           'terfecestciv
        StrSql = StrSql & "," & datos(12)           'paisnro
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline "Inserto en la tabla de tercero"
    
        '--Obtengo el ternro--
        Ternro = getLastIdentity(objConn, "tercero")
        Flog.writeline "-----------------------------------------------"
        Flog.writeline "Codigo de Tercero = " & Ternro
    
        '--Inserto el Registro correspondiente en ter_tip--
        StrSql = " INSERT INTO ter_tip(ternro,tipnro) VALUES(" & Ternro & ",14)"
        objConn.Execute StrSql, , adExecuteNoRecords
        'Flog.Writeline "Inserto el tipo de tercero 14 en ter_tip"
        
        'Desactivo el manejador de erorres
        On Error GoTo 0
        
        
        'Cualquier error que ocurra de aquí en adelante sigue adelante
        ' tratando de insertar la mayor cantidad de datos posible
        On Error Resume Next
        'HuboError = False
        
        StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
        StrSql = StrSql & " VALUES(" & Ternro & "," & datos(1) & ",'" & datos(2) & "')"
        objConn.Execute StrSql, , adExecuteNoRecords
    
        '--------------------------------------------------------------------------------
        '--Inserto el Domicilio--
        StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
        StrSql = StrSql & " VALUES(1," & Ternro & ",-1,2)"
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline "inserto el Domicilio"
    
        '--Obtengo el numero de domicilio en la tabla--
        NroDom = CLng(getLastIdentity(objConn, "cabdom"))
    
        '--Si no tiene algun dato le agregamos unos ficticios--
        datos(24) = StrToStr(datos(24), 30) 'dirCalle
        datos(25) = StrToStr(datos(25), 8) 'dirNumero
        datos(26) = StrToStr(datos(26), 8) 'dirPiso
        datos(27) = StrToStr(datos(27), 8) 'dirDepto
        datos(28) = StrToStr(datos(28), 8) 'dirTorre
        datos(29) = StrToStr(datos(29), 8) 'dirManzana
        datos(30) = StrToStr(datos(30), 8) 'dirSector
        datos(31) = StrToStr(datos(31), 12) 'dirCP
        datos(32) = TraerCodLocalidad(CStr(datos(32))) 'dirLocalidad
        datos(33) = TraerCodProvincia(CStr(datos(33)))   'dirProvincia
        datos(34) = TraerCodPartido(CStr(datos(34)))  'dirPartido
        datos(35) = TraerCodZona(CStr(datos(35)), CLng(datos(33)))  'dirZona
            If datos(35) = "" Then datos(35) = "NULL"
        datos(36) = TraerCodPais(CStr(datos(36))) 'dirPais
    
        StrSql = " INSERT INTO detdom (domnro,calle,nro,sector,torre,piso,oficdepto,manzana,codigopostal,"
        StrSql = StrSql & "locnro,provnro,paisnro, zonanro, partnro) "
        StrSql = StrSql & " VALUES ("
        StrSql = StrSql & NroDom
        StrSql = StrSql & ",'" & datos(24) & "'"
        StrSql = StrSql & ",'" & datos(25) & "'"
        StrSql = StrSql & ",'" & datos(30) & "'"
        StrSql = StrSql & ",'" & datos(28) & "'"
        StrSql = StrSql & ",'" & datos(26) & "'"
        StrSql = StrSql & ",'" & datos(27) & "'"
        StrSql = StrSql & ",'" & datos(29) & "'"
        StrSql = StrSql & ",'" & datos(31) & "'"
        StrSql = StrSql & "," & datos(32)
        StrSql = StrSql & "," & datos(33)
        StrSql = StrSql & "," & datos(36)
        StrSql = StrSql & "," & datos(35)
        StrSql = StrSql & "," & datos(34)
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        If Err Then
            Err.Clear
        Else
            Flog.writeline "Inserte el domicilio "
        End If
       
        Flog.writeline "Inserto el Domicilio "
    
        '--Telefonos-Personal--
        datos(21) = validatelefono(StrToStr(datos(21), 20))
        If datos(21) <> "" Then
            StrSql = " INSERT INTO telefono "
            'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
            StrSql = StrSql & " (domnro, telnro, telfax, teldefault, telcelular,tipotel ) "
            StrSql = StrSql & " VALUES (" & NroDom & ", '" & datos(21) & "' ,0 , -1 ,0,1 ) "
            objConn.Execute StrSql, , adExecuteNoRecords
            If Err Then
                Err.Clear
            Else
                Flog.writeline "Inserte el telefono"
            End If
        End If
        
        '--Telefonos-Celular--
        'FGZ 11/04/2005 - quieren que lo cargue como telefono comun
        datos(22) = validatelefono(StrToStr(datos(22), 20))
        If datos(22) <> "" Then
            StrSql = " INSERT INTO telefono "
            'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
            StrSql = StrSql & " (domnro, telnro, telfax, teldefault, telcelular,tipotel ) "
            StrSql = StrSql & " VALUES (" & NroDom & ", '" & datos(22) & "' , 0, -1, 0,2 ) "
            objConn.Execute StrSql, , adExecuteNoRecords
            'Flog.Writeline " Inserto el telefono calular "
            'Flog.Writeline " Inserto el segundo telefono "
            If Err Then
                Err.Clear
            Else
                Flog.writeline "Inserte el telefono2 "
            End If
        End If
    
        '--Complemento--
        If datos(15) = "" Then
            datos(15) = 0
        Else
            datos(15) = CLng(StrToInt(datos(15))) 'cantidadHijos
        End If
        datos(16) = StrToStr(datos(16), 60) 'imagen
        If datos(17) = "" Then
            datos(17) = "NULL"
        Else
            datos(17) = ConvFecha(CDate(datos(17))) 'fechaIngresoCV
        End If
        datos(18) = StrToStr(datos(18), 250) 'referencias
        If datos(19) = "" Then
            datos(19) = TraerCodProcedencia("Web Deloitte") 'procedencia
        Else
            datos(19) = TraerCodProcedencia(CStr(datos(19))) 'procedencia
        End If
        If datos(20) = "" Then
            datos(20) = 0
        Else
            datos(20) = CDbl(StrToDbl(datos(20))) 'remuneracionPretendida
        End If
        
        'FGZ - 02/03/2006 Se agrego el estposnro = 4 (postulantre activo)
        StrSql = " INSERT INTO pos_postulante "
        StrSql = StrSql & " ( ternro, posrempre, poscanhijos, posfoto, posfecpres, posref, procnro,estposnro) "
        StrSql = StrSql & " VALUES (" & Ternro & " ," & CDbl(datos(20)) & ", " & CLng(datos(15)) & ", '" & datos(16) & "', " & datos(17) & ",'" & datos(18) & "', " & datos(19) & ",4) "
        objConn.Execute StrSql, , adExecuteNoRecords
        If Err Then
            Flog.writeline "Error al inserte el Complemento: " & Err.Description
            Flog.writeline "SQL ejecutada: " & StrSql
            Err.Clear
        Else
            Flog.writeline "Inserte el Complemento "
        End If
    
        
    
        '--Estudios-formales--(49)(50)
        Xconst = 0
        For a = 0 To 3
            If datos(Xconst + 37) <> "" Then
                datos(Xconst + 37) = TraerCodNivelEstudio(datos(Xconst + 37))   'EFnivel8
                'FGZ - 29/08/2005
                'If Datos(Xconst + 38) = "Graduado" Then Datos(Xconst + 38) = -1 Else Datos(Xconst + 38) = 0
                If datos(Xconst + 38) = -1 Then datos(Xconst + 38) = -1 Else datos(Xconst + 38) = 0
                    'Datos(Xconst + 38) = Datos(Xconst + 38)   'EFcompleto8
                datos(Xconst + 39) = TraerCodTitulo(CStr(datos(Xconst + 39)), CLng(datos(Xconst + 37)))   'EFtitulo8
                datos(Xconst + 40) = TraerCodInstitucionAbreviada(CStr(datos(Xconst + 40)))   'EFinstitucion8
                datos(Xconst + 41) = TraerCodCarrera(CStr(datos(Xconst + 41)))    'EFcarrera8
                If datos(Xconst + 42) <> "" Then
                    datos(Xconst + 42) = ConvFecha(CDate(datos(Xconst + 42)))   'EFfechaDesde8
                Else
                    datos(Xconst + 42) = "NULL"
                End If
                If datos(Xconst + 43) <> "" Then
                    datos(Xconst + 43) = ConvFecha(CDate(datos(Xconst + 43)))   'EFfechaHasta8
                Else
                    datos(Xconst + 43) = "NULL"
                End If
                datos(Xconst + 44) = StrToStr(datos(Xconst + 44), 30)   'EFpromedio8
                datos(Xconst + 45) = StrToStr(datos(Xconst + 45), 60)   'EFrango8
                If datos(Xconst + 46) <> "" And UCase(datos(Xconst + 46)) <> "NO" Then
                    datos(Xconst + 46) = -1  'EFestudiaActualmente8
                Else
                    datos(Xconst + 46) = 0  'EFestudiaActualmente8
                End If
        
                StrSql = " INSERT INTO cap_estformal "
                StrSql = StrSql & " ( nivnro, ternro, titnro, instnro, carredunro, capfecdes, capfechas, capcomp , capestact, caprango, capprom) "
                StrSql = StrSql & " VALUES (" & CLng(datos(Xconst + 37)) & ", " & Ternro & " ," & datos(Xconst + 39) & "," & datos(Xconst + 40) & "," & datos(Xconst + 41) & "," & datos(Xconst + 42) & " ," & datos(Xconst + 43) & "," & datos(Xconst + 38) & "," & datos(Xconst + 46) & ",'" & datos(Xconst + 45) & "','" & datos(Xconst + 44) & "' ) "
                'StrSql = StrSql & " Go "
                Err.Clear
                objConn.Execute StrSql, , adExecuteNoRecords
'                StrSql = " INSERT INTO cap_estformal "
'                StrSql = StrSql & " ( nivnro, ternro, titnro, instnro, carredunro, capfecdes, capfechas, capcomp , capestact, caprango, capprom) "
'                StrSql = StrSql & " VALUES ("
'                StrSql = StrSql & CLng(Datos(Xconst + 37))
'                StrSql = StrSql & ", " & ternro
'                StrSql = StrSql & " ," & Datos(Xconst + 39)
'                StrSql = StrSql & "," & Datos(Xconst + 40)
'                StrSql = StrSql & "," & Datos(Xconst + 41)
'                StrSql = StrSql & "," & Datos(Xconst + 42)
'                StrSql = StrSql & " ," & Datos(Xconst + 43)
'                StrSql = StrSql & "," & Datos(Xconst + 38)
'                StrSql = StrSql & "," & Datos(Xconst + 46)
'                StrSql = StrSql & ",'" & Datos(Xconst + 45)
'                StrSql = StrSql & "','" & Datos(Xconst + 44)
'                StrSql = StrSql & "' ) "
'                objConn.Execute StrSql, , adExecuteNoRecords
                
                If Err Then
                    Flog.writeline "Error al inserte el estudio formal: " & Err.Description
                    Flog.writeline "SQL ejecutada: " & StrSql
                    Err.Clear
                Else
                    Flog.writeline "Inserte el estudio formal " & datos(Xconst + 37)
                    ActPasos = True
                End If
            End If
            Xconst = Xconst + 10
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 50)
        End If
        ActPasos = False
        
        
        '--Experiencia-Laboral----Empleos Anteriores--57 (58)
        'reemplazos
        '117 x 77
        Xconst = 0
        For a = 0 To 3
            If datos(Xconst + 78) <> "" And datos(Xconst + 77) <> "" Then
                datos(Xconst + 77) = TraerCodCargo(CStr(datos(Xconst + 77)))    'ELcargoAnterior16
                datos(Xconst + 78) = TraerCodListaEmpresa(CStr(datos(Xconst + 78)))   'ELempresa16 lempnro
                datos(Xconst + 79) = StrToStr(datos(Xconst + 79), 500) 'ELtareaDesempenada16
                If datos(Xconst + 80) <> "" Then
                    datos(Xconst + 80) = ConvFecha(CDate(datos(Xconst + 80)))  'ELfechaDesde16
                Else
                    datos(Xconst + 80) = "NULL"
                End If
                If datos(Xconst + 81) <> "" Then
                    datos(Xconst + 81) = ConvFecha(CDate(datos(Xconst + 81)))  'ELfechaHasta16
                Else
                    datos(Xconst + 81) = "NULL"
                End If
                If datos(Xconst + 82) = "" Then
                    datos(Xconst + 82) = 0
                Else
                    datos(Xconst + 82) = StrToDbl(datos(Xconst + 82))   'ELremuneracion16
                End If
                If datos(Xconst + 83) <> "" Then
                    datos(Xconst + 83) = TraerCodCausa(CStr(datos(Xconst + 83)))   'ELcausaBaja16
                Else
                    datos(Xconst + 83) = "NULL"
                End If
            
                StrSql = " INSERT INTO empant "
                'FGZ - 29/08/2005
                'cambié los nombres de los campos donde inserta las fechas desde y hasta
                'StrSql = StrSql & " ( empleado, empatareas, lempnro, empadesde, emmpahasta, carnro, emparemu ) "
                StrSql = StrSql & " ( empleado, empatareas, lempnro, empaini, empafin, carnro, emparemu, caunro, empresa ) "
                StrSql = StrSql & " VALUES (" & Ternro & ", '" & datos(Xconst + 79) & "' ," & datos(Xconst + 78) & "," & datos(Xconst + 80) & "," & datos(Xconst + 81) & "," & datos(Xconst + 77) & "," & datos(Xconst + 82) & "," & datos(Xconst + 83) & ", '" & Empresa & "' ) "
                objConn.Execute StrSql, , adExecuteNoRecords
                If Err Then
                    Flog.writeline "Error al inserte el Empleo Anterior: " & Err.Description
                    Flog.writeline "SQL ejecutada: " & StrSql
                    Err.Clear
                Else
                    Flog.writeline "Inserto los datos del Empleo Anterior"
                    ActPasos = True
                End If
            End If
            Xconst = Xconst + 7
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 58)
        End If
        ActPasos = False
    
        '--Idiomas--53 (54)
        'reemplazos
        '229 x 105
        ActPasos = False
        Xconst = 0
        For a = 0 To 3
            If datos(Xconst + 105) <> "" Then
                If datos(Xconst + 106) <> "" Or datos(Xconst + 107) <> "" Or datos(Xconst + 108) <> "" Then
                    datos(Xconst + 105) = TraerCodIdioma(CStr(datos(Xconst + 105))) 'idioma1
                    datos(Xconst + 106) = TraerCodIdiNivel(CStr(datos(Xconst + 106))) 'idiomaLee1
                    datos(Xconst + 107) = TraerCodIdiNivel(CStr(datos(Xconst + 107))) 'idiomaHabla1
                    datos(Xconst + 108) = TraerCodIdiNivel(CStr(datos(Xconst + 108))) 'idiomaEscribe1
                    
                    If Not TieneIdioma(Ternro, CLng(datos(Xconst + 105))) Then
                        StrSql = " INSERT INTO emp_idi "
                        StrSql = StrSql & " (idinro, empleado, empidlee, empidhabla, empidescr) "
                        StrSql = StrSql & " VALUES (" & CLng(datos(Xconst + 105)) & ", " & Ternro & " ," & datos(Xconst + 106) & ", " & datos(Xconst + 107) & ", " & datos(Xconst + 108) & " ) "
                    Else
                        StrSql = " UPDATE emp_idi SET "
                        StrSql = StrSql & " empidlee = " & datos(Xconst + 106)
                        StrSql = StrSql & ", empidhabla = " & datos(Xconst + 107)
                        StrSql = StrSql & ", empidescr = " & datos(Xconst + 108)
                        StrSql = StrSql & " where empleado = " & Ternro & " and idinro = " & CLng(datos(Xconst + 105))
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If Err Then
                        Flog.writeline "Error al inserte el Idioma " & datos(Xconst + 105) & "-" & Err.Description
                        Flog.writeline "SQL ejecutada: " & StrSql
                        Err.Clear
                    Else
                        Flog.writeline "Inserte el Idioma " & datos(Xconst + 105)
                        ActPasos = True
                    End If
                End If
            End If
            Xconst = Xconst + 4
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 54)
        End If
        ActPasos = False
    
        
        '--Estudios-Informales--50 (51)
        'Reemplazos
        ' 249 x 121
        ActPasos = False
        ActPasos = False
        Xconst = 0
        For a = 0 To 3
            If datos(Xconst + 121) <> "" Then
                tempString = StrToStr(datos(121 + Xconst), 50) ''descCurso  estinfdesabr
                datos(121 + Xconst) = datos(121 + Xconst) ''descCurso  estinfdesabr
                datos(122 + Xconst) = TraerCodTipoCurso(StrToStr(datos(122 + Xconst), 50)) 'tipoCurso tipcurnro
                If datos(123 + Xconst) <> "" Then
                    datos(123 + Xconst) = ConvFecha(datos(123 + Xconst)) 'fechaCurso  estinffecha
                Else
                    datos(123 + Xconst) = ConvFecha(Date)
                End If
                datos(124 + Xconst) = TraerCodInstitucion(CStr(datos(124 + Xconst))) 'institucionCurso instnro
                If datos(121 + Xconst) = "" Or datos(122 + Xconst) = "" Or datos(124 + Xconst) = "" Then
                    Flog.writeline "Error al insertar el estudio informal por falta de datos "
                Else
                    StrSql = " INSERT INTO cap_estinformal "
                    StrSql = StrSql & " (ternro, estinfdesabr, estinffecha, tipcurnro, instnro) "
                    StrSql = StrSql & " VALUES (" & Ternro & " , '" & tempString & "'," & datos(123 + Xconst) & "," & CLng(datos(122 + Xconst)) & "," & CLng(datos(124 + Xconst)) & ")"
                    Err.Clear
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If Err Then
                        Flog.writeline "Error al insertar el estudio informal: " & Err.Description
                        Flog.writeline "SQL ejecutada: " & StrSql
                        Err.Clear
                    Else
                        Flog.writeline "Inserto los datos del estudio informal "
                        ActPasos = True
                    End If
                End If
            End If
            Xconst = Xconst + 4
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 51)
        End If
        ActPasos = False
        
        
        '--Especializaciones--51 (52)
        'reemplazos
        '253 x 137
        Xconst = 0
        ActPasos = False
        For a = 0 To 3
            If datos(Xconst + 139) <> "" Then
                datos(Xconst + 137) = TraerCodEspecializacion(CStr(datos(Xconst + 137))) 'tipo
                datos(Xconst + 138) = TraerCodEltoana(CStr(datos(Xconst + 138)), CLng(datos(Xconst + 137))) 'elemento
                datos(Xconst + 139) = TraerCodNivelEspecializacion(CStr(datos(Xconst + 139))) 'nivel
                
                StrSql = " INSERT INTO especemp "
                StrSql = StrSql & " (eltananro, ternro, espnivnro ) "
                StrSql = StrSql & " VALUES (" & datos(Xconst + 138) & ", " & Ternro & " ," & datos(Xconst + 139) & ") "
'                StrSql = StrSql & " VALUES (" & datosEltoAna(0, a) & ", " & ternro & " ," & Datos(Xconst + 139) & ") "
                Err.Clear
                objConn.Execute StrSql, , adExecuteNoRecords
                If Err Then
                    Flog.writeline "Error al insertar la especialidad: " & Err.Description
                    Flog.writeline "SQL ejecutada: " & StrSql
                    Err.Clear
                Else
                    Flog.writeline "Inserto los datos de la especialidad."
                    ActPasos = True
                End If
            Else
                Flog.writeline "Error al insertar la especialidad por falta de datos."
            End If
            Xconst = Xconst + 3
        Next a
        If ActPasos Then
           Flog.writeline "Inserto los datos de la especialidad"
           Call InsertarPaso(Ternro, 52)
           ActPasos = False
        End If
            

    Else
        Ternro = rs_Ter!Ternro
        Flog.writeline "-----------------------------------------------"
        Flog.writeline "Codigo de Tercero = " & Ternro
        
        'FGZ - 27/07/2005
        'si el tercereo existe pero es de tipo empleado ==> no se hace nada
        '1       Empleado
        '2       Empleado Agencia
        StrSql = " SELECT * FROM ter_tip"
        StrSql = StrSql & " WHERE ternro = " & Ternro
        StrSql = StrSql & " AND tipnro = 1"
        'StrSql = StrSql & " AND (tipnro = 1 OR tipnro = 2)"
        If rs_Aux.State = adStateOpen Then rs_Aux.Close
        OpenRecordset StrSql, rs_Aux
        If Not rs_Aux.EOF Then
            Flog.writeline "El Postulante ya es empleado." & datos(5) & " " & datos(3) & " " & datos(4) & "No se procesará."
            Exit Sub
        End If
        
        'Actualizar los datos
        StrSql = " UPDATE tercero SET "
        StrSql = StrSql & " ternom = " & "'" & datos(3) & "'"
        StrSql = StrSql & ", ternom2 = " & "'" & datos(4) & "'"
        StrSql = StrSql & ", terape = " & "'" & datos(5) & "'"
        StrSql = StrSql & ", terape2 = " & "'" & datos(6) & "'"
        StrSql = StrSql & ", terfecnac = " & datos(7)
        StrSql = StrSql & ", tersex = " & CLng(datos(8))
        StrSql = StrSql & ", teremail =" & "'" & datos(23) & "'"
        StrSql = StrSql & ", nacionalnro =" & CLng(datos(13))
        StrSql = StrSql & ", estcivnro =" & "'" & datos(9) & "'"
        StrSql = StrSql & ", terfecing =" & datos(14)
        StrSql = StrSql & ", tercasape =" & "'" & datos(11) & "'"
        StrSql = StrSql & ",terfecestciv =" & datos(10)
        StrSql = StrSql & ", paisnro =" & datos(12)
        StrSql = StrSql & " WHERE ternro = " & Ternro
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline "Tercero Actualizado"
    
        'Desactivo el manejador de erorres
        On Error GoTo 0
        
        'Cualquier error que ocurra de aquí en adelante sigue adelante
        ' tratando de insertar la mayor cantidad de datos posible
        On Error Resume Next
        
        StrSql = "SELECT * FROM ter_doc  "
        StrSql = StrSql & " WHERE ter_doc.tidnro = " & datos(1)
        StrSql = StrSql & " AND ternro = " & Ternro
        If rs_Aux.State = adStateOpen Then rs_Aux.Close
        OpenRecordset StrSql, rs_Aux
        If rs_Aux.EOF Then
            StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
            StrSql = StrSql & " VALUES(" & Ternro & "," & datos(1) & ",'" & datos(2) & "')"
        Else
            StrSql = "UPDATE ter_doc SET "
            StrSql = StrSql & " nrodoc = '" & datos(2) & "'"
            StrSql = StrSql & " WHERE ter_doc.tidnro = " & datos(1)
            StrSql = StrSql & " AND ternro = " & Ternro
        End If
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline "Documento Actualizado"
        
        
        '--------------------------------------------------------------------------------
        '--Inserto el Domicilio--
        StrSql = "SELECT * FROM cabdom  "
        StrSql = StrSql & " WHERE tipnro = 1"
        StrSql = StrSql & " AND ternro = " & Ternro
        If rs_Aux.State = adStateOpen Then rs_Aux.Close
        OpenRecordset StrSql, rs_Aux
        If rs_Aux.EOF Then
            StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
            StrSql = StrSql & " VALUES(1," & Ternro & ",-1,2)"
            objConn.Execute StrSql, , adExecuteNoRecords
            Flog.writeline "inserto el Domicilio"
    
            '--Obtengo el numero de domicilio en la tabla--
            NroDom = CLng(getLastIdentity(objConn, "cabdom"))
        
            '--Si no tiene algun dato le agregamos unos ficticios--
            datos(24) = StrToStr(datos(24), 30) 'dirCalle
            datos(25) = StrToStr(datos(25), 8) 'dirNumero
            datos(26) = StrToStr(datos(26), 8) 'dirPiso
            datos(27) = StrToStr(datos(27), 8) 'dirDepto
            datos(28) = StrToStr(datos(28), 8) 'dirTorre
            datos(29) = StrToStr(datos(29), 8) 'dirManzana
            datos(30) = StrToStr(datos(30), 8) 'dirSector
            datos(31) = StrToStr(datos(31), 12) 'dirCP
            datos(32) = TraerCodLocalidad(CStr(datos(32))) 'dirLocalidad
            datos(33) = TraerCodProvincia(CStr(datos(33)))   'dirProvincia
            datos(34) = TraerCodPartido(CStr(datos(34)))  'dirPartido
            datos(35) = TraerCodZona(CStr(datos(35)), CLng(datos(33)))  'dirZona
                If datos(35) = "" Then datos(35) = "NULL"
            datos(36) = TraerCodPais(CStr(datos(36))) 'dirPais
        
            StrSql = " INSERT INTO detdom (domnro,calle,nro,sector,torre,piso,oficdepto,manzana,codigopostal,"
            StrSql = StrSql & "locnro,provnro,paisnro, zonanro, partnro) "
            StrSql = StrSql & " VALUES ("
            StrSql = StrSql & NroDom
            StrSql = StrSql & ",'" & datos(24) & "'"
            StrSql = StrSql & ",'" & datos(25) & "'"
            StrSql = StrSql & ",'" & datos(30) & "'"
            StrSql = StrSql & ",'" & datos(28) & "'"
            StrSql = StrSql & ",'" & datos(26) & "'"
            StrSql = StrSql & ",'" & datos(27) & "'"
            StrSql = StrSql & ",'" & datos(29) & "'"
            StrSql = StrSql & ",'" & datos(31) & "'"
            StrSql = StrSql & "," & datos(32)
            StrSql = StrSql & "," & datos(33)
            StrSql = StrSql & "," & datos(36)
            StrSql = StrSql & "," & datos(35)
            StrSql = StrSql & "," & datos(34)
            StrSql = StrSql & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            If Err Then
                Err.Clear
            Else
                Flog.writeline "Inserte el domicilio "
            End If
            Flog.writeline "Inserto el Domicilio "
        Else
            NroDom = rs_Aux!domnro
        
            '--Si no tiene algun dato le agregamos unos ficticios--
            datos(24) = StrToStr(datos(24), 30) 'dirCalle
            datos(25) = StrToStr(datos(25), 8) 'dirNumero
            datos(26) = StrToStr(datos(26), 8) 'dirPiso
            datos(27) = StrToStr(datos(27), 8) 'dirDepto
            datos(28) = StrToStr(datos(28), 8) 'dirTorre
            datos(29) = StrToStr(datos(29), 8) 'dirManzana
            datos(30) = StrToStr(datos(30), 8) 'dirSector
            datos(31) = StrToStr(datos(31), 12) 'dirCP
            datos(32) = TraerCodLocalidad(CStr(datos(32))) 'dirLocalidad
            datos(33) = TraerCodProvincia(CStr(datos(33)))   'dirProvincia
            datos(34) = TraerCodPartido(CStr(datos(34)))  'dirPartido
            datos(35) = TraerCodZona(CStr(datos(35)), CLng(datos(33)))  'dirZona
            If datos(35) = "" Then datos(35) = "NULL"
            datos(36) = TraerCodPais(CStr(datos(36))) 'dirPais
        
            StrSql = " UPDATE detdom SET "
            StrSql = StrSql & " calle =" & "'" & datos(24) & "'"
            StrSql = StrSql & ",nro =" & "'" & datos(25) & "'"
            StrSql = StrSql & ",sector =" & "'" & datos(30) & "'"
            StrSql = StrSql & ",torre =" & "'" & datos(28) & "'"
            StrSql = StrSql & ",piso =" & "'" & datos(26) & "'"
            StrSql = StrSql & ",oficdepto =" & "'" & datos(27) & "'"
            StrSql = StrSql & ",manzana =" & "'" & datos(29) & "'"
            StrSql = StrSql & ",codigopostal =" & "'" & datos(31) & "'"
            StrSql = StrSql & ",locnro =" & datos(32)
            StrSql = StrSql & ",provnro =" & datos(33)
            StrSql = StrSql & ",paisnro =" & datos(36)
            StrSql = StrSql & ", zonanro =" & datos(35)
            StrSql = StrSql & ", partnro = " & datos(34)
            StrSql = StrSql & " WHERE domnro = " & NroDom
            objConn.Execute StrSql, , adExecuteNoRecords
            If Err Then
                Err.Clear
                Flog.writeline "Domicilio NO actualizado"
                Flog.writeline "SQL ejecutada: " & StrSql
            Else
                Flog.writeline "Domicilio actualizado"
            End If
        End If
        
        
        '--Telefonos-Personal--
        datos(21) = validatelefono(StrToStr(datos(21), 20))
        If datos(21) <> "" Then
            StrSql = "SELECT * FROM telefono  "
            StrSql = StrSql & " WHERE domnro = " & NroDom
            StrSql = StrSql & " AND telnro = " & "'" & datos(21) & "'"
            If rs_Aux.State = adStateOpen Then rs_Aux.Close
            OpenRecordset StrSql, rs_Aux
            If rs_Aux.EOF Then
                StrSql = " INSERT INTO telefono "
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                StrSql = StrSql & " (domnro, telnro, telfax, teldefault, telcelular,tipotel ) "
                StrSql = StrSql & " VALUES (" & NroDom & ", '" & datos(21) & "' ,0 , -1 ,0,1 ) "
                objConn.Execute StrSql, , adExecuteNoRecords
                If Err Then
                    Err.Clear
                    Flog.writeline "Error Insertando el telefono " & datos(21)
                    Flog.writeline "SQL ejecutada: " & StrSql
                Else
                    Flog.writeline "Inserte el telefono"
                End If
            End If
        End If
        
        '--Telefonos-segundo--
        datos(22) = validatelefono(StrToStr(datos(22), 20))
        If datos(22) <> "" Then
            StrSql = "SELECT * FROM telefono  "
            StrSql = StrSql & " WHERE domnro = " & NroDom
            StrSql = StrSql & " AND telnro = " & "'" & datos(22) & "'"
            If rs_Aux.State = adStateOpen Then rs_Aux.Close
            OpenRecordset StrSql, rs_Aux
            If rs_Aux.EOF Then
                StrSql = " INSERT INTO telefono "
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                StrSql = StrSql & " (domnro, telnro, telfax, teldefault, telcelular,tipotel ) "
                StrSql = StrSql & " VALUES (" & NroDom & ", '" & datos(22) & "' , 0, -1, 0,2 ) "
                objConn.Execute StrSql, , adExecuteNoRecords
                If Err Then
                    Err.Clear
                    Flog.writeline "Error Insertando el telefono " & datos(22)
                    Flog.writeline "SQL ejecutada: " & StrSql
                Else
                    Flog.writeline "Inserte el telefono2 "
                End If
            End If
        End If
    
    
        '--Complemento--
        If datos(15) = "" Then
            datos(15) = 0
        Else
            datos(15) = CLng(StrToInt(datos(15))) 'cantidadHijos
        End If
        datos(16) = StrToStr(datos(16), 60) 'imagen
        If datos(17) = "" Then
            datos(17) = "NULL"
        Else
            datos(17) = ConvFecha(CDate(datos(17))) 'fechaIngresoCV
        End If
        datos(18) = StrToStr(datos(18), 250) 'referencias
        If datos(19) = "" Then
            datos(19) = TraerCodProcedencia("Web Deloitte") 'procedencia
        Else
            datos(19) = TraerCodProcedencia(CStr(datos(19))) 'procedencia
        End If
        If datos(20) = "" Then
            datos(20) = 0
        Else
            datos(20) = CDbl(StrToDbl(datos(20))) 'remuneracionPretendida
        End If
        
        'FGZ - 02/03/2006 Se agrego el estposnro = 4 (postulantre activo)
        StrSql = "SELECT * FROM pos_postulante  "
        StrSql = StrSql & " WHERE ternro = " & Ternro
        If rs_Aux.State = adStateOpen Then rs_Aux.Close
        OpenRecordset StrSql, rs_Aux
        If rs_Aux.EOF Then
            StrSql = " INSERT INTO pos_postulante "
            StrSql = StrSql & " ( ternro, posrempre, poscanhijos, posfoto, posfecpres, posref, procnro,estposnro) "
            StrSql = StrSql & " VALUES (" & Ternro & " ," & CDbl(datos(20)) & ", " & CLng(datos(15)) & ", '" & datos(16) & "', " & datos(17) & ",'" & datos(18) & "', " & datos(19) & ",4) "
            objConn.Execute StrSql, , adExecuteNoRecords
            If Err Then
                Flog.writeline "Error al inserte el Complemento: " & Err.Description
                Flog.writeline "SQL ejecutada: " & StrSql
                Err.Clear
            Else
                Flog.writeline "Inserte el Complemento "
            End If
        Else
            StrSql = "UPDATE pos_postulante SET "
            StrSql = StrSql & " posrempre = " & CDbl(datos(20))
            StrSql = StrSql & ", poscanhijos =" & CLng(datos(15))
            StrSql = StrSql & ", posfoto =" & "'" & datos(16) & "'"
            StrSql = StrSql & ", posfecpres =" & datos(17)
            StrSql = StrSql & ", posref =" & "'" & datos(18) & "'"
            StrSql = StrSql & ", procnro =" & datos(19)
            StrSql = StrSql & ", estposnro = 4"
            StrSql = StrSql & " WHERE ternro = " & Ternro
            objConn.Execute StrSql, , adExecuteNoRecords
            If Err Then
                Flog.writeline "Error al actualizar el Complemento: " & Err.Description
                Flog.writeline "SQL ejecutada: " & StrSql
                Err.Clear
            Else
                Flog.writeline "Complemento actualizado"
            End If
        End If
        
        '--Estudios-formales--(49) (50)
        Xconst = 0
        For a = 0 To 3
            If UBound(datos) > (Xconst + 37) Then
                If datos(Xconst + 37) <> "" Then
                    datos(Xconst + 37) = TraerCodNivelEstudio(datos(Xconst + 37))   'EFnivel8
                    'FGZ - 29/08/2005
                    'If Datos(Xconst + 38) = "Graduado" Then Datos(Xconst + 38) = -1 Else Datos(Xconst + 38) = 0
                    If datos(Xconst + 38) = -1 Then datos(Xconst + 38) = -1 Else datos(Xconst + 38) = 0
                        'Datos(Xconst + 38) = Datos(Xconst + 38)   'EFcompleto8
                    datos(Xconst + 39) = TraerCodTitulo(CStr(datos(Xconst + 39)), CLng(datos(Xconst + 37)))   'EFtitulo8
                    datos(Xconst + 40) = TraerCodInstitucionAbreviada(CStr(datos(Xconst + 40)))   'EFinstitucion8
                    datos(Xconst + 41) = TraerCodCarrera(CStr(datos(Xconst + 41)))    'EFcarrera8
                    If datos(Xconst + 42) <> "" Then
                        datos(Xconst + 42) = ConvFecha(CDate(datos(Xconst + 42)))   'EFfechaDesde8
                    Else
                        datos(Xconst + 42) = "NULL"
                    End If
                    If datos(Xconst + 43) <> "" Then
                        datos(Xconst + 43) = ConvFecha(CDate(datos(Xconst + 43)))   'EFfechaHasta8
                    Else
                        datos(Xconst + 43) = "NULL"
                    End If
                    datos(Xconst + 44) = StrToStr(datos(Xconst + 44), 30)   'EFpromedio8
                    datos(Xconst + 45) = StrToStr(datos(Xconst + 45), 60)   'EFrango8
                    If datos(Xconst + 46) <> "" And UCase(datos(Xconst + 46)) <> "NO" Then
                        datos(Xconst + 46) = -1  'EFestudiaActualmente8
                    Else
                        datos(Xconst + 46) = 0  'EFestudiaActualmente8
                    End If
            
                    'actualizo
                    StrSql = "SELECT * FROM cap_estformal  "
                    StrSql = StrSql & " WHERE nivnro = " & CLng(datos(Xconst + 37))
                    StrSql = StrSql & " AND ternro = " & Ternro
                    StrSql = StrSql & " AND titnro = " & datos(Xconst + 39)
                    StrSql = StrSql & " AND instnro = " & datos(Xconst + 40)
                    StrSql = StrSql & " AND carredunro = " & datos(Xconst + 41)
                    If rs_Aux.State = adStateOpen Then rs_Aux.Close
                    OpenRecordset StrSql, rs_Aux
                    If rs_Aux.EOF Then
                        StrSql = " INSERT INTO cap_estformal "
                        StrSql = StrSql & " ( nivnro, ternro, titnro, instnro, carredunro, capfecdes, capfechas, capcomp , capestact, caprango, capprom) "
                        StrSql = StrSql & " VALUES ("
                        StrSql = StrSql & CLng(datos(Xconst + 37))          'nivnro
                        StrSql = StrSql & "," & Ternro                      'ternro
                        StrSql = StrSql & "," & datos(Xconst + 39)          'titnro
                        StrSql = StrSql & "," & datos(Xconst + 40)          'instnro
                        StrSql = StrSql & "," & datos(Xconst + 41)          'carredunro
                        StrSql = StrSql & "," & datos(Xconst + 42)          'capfecdes
                        StrSql = StrSql & "," & datos(Xconst + 43)          'capfechas
                        StrSql = StrSql & "," & datos(Xconst + 38)          'capcomp
                        StrSql = StrSql & "," & datos(Xconst + 46)          'capestact
                        StrSql = StrSql & ",'" & datos(Xconst + 45) & "'"   'caprango
                        StrSql = StrSql & ",'" & datos(Xconst + 44) & "'"   'capprom
                        StrSql = StrSql & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If Err Then
                            Flog.writeline "Error al inserte el estudio formal: " & Err.Description
                            Flog.writeline "SQL ejecutada: " & StrSql
                            Err.Clear
                        Else
                            Flog.writeline "Inserte el estudio formal " & datos(Xconst + 37)
                            ActPasos = True
                        End If
                    Else
                        StrSql = "UPDATE  cap_estformal SET "
                        StrSql = StrSql & " capfecdes = " & datos(Xconst + 42)
                        StrSql = StrSql & ", capfechas =" & datos(Xconst + 43)
                        StrSql = StrSql & ", capcomp =" & datos(Xconst + 38)
                        StrSql = StrSql & ", capestact =" & datos(Xconst + 46)
                        StrSql = StrSql & ", caprango =" & "'" & datos(Xconst + 45) & "'"
                        StrSql = StrSql & ", capprom =" & "'" & datos(Xconst + 44) & "'"
                        StrSql = StrSql & " WHERE nivnro = " & CLng(datos(Xconst + 37))
                        StrSql = StrSql & " AND ternro = " & Ternro
                        StrSql = StrSql & " AND titnro = " & datos(Xconst + 39)
                        StrSql = StrSql & " AND instnro = " & datos(Xconst + 40)
                        StrSql = StrSql & " AND carredunro = " & datos(Xconst + 41)
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If Err Then
                            Flog.writeline "Error al inserte Al actualizar studio formal: " & Err.Description
                            Flog.writeline "SQL ejecutada: " & StrSql
                            Err.Clear
                        Else
                            Flog.writeline "Estudio formal " & datos(Xconst + 37) & " actualizado"
                            ActPasos = False
                        End If
                    End If
                End If
            Else
            End If
            Xconst = Xconst + 10
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 50)
        End If
        ActPasos = False
        
        
        '--Experiencia-Laboral----Empleos Anteriores--57 (58)
        Xconst = 0
        For a = 0 To 3
            If UBound(datos) > (Xconst + 77) Then
                If datos(Xconst + 78) <> "" And datos(Xconst + 77) <> "" Then
                    datos(Xconst + 77) = TraerCodCargo(CStr(datos(Xconst + 77)))    'ELcargoAnterior16
                    datos(Xconst + 78) = TraerCodListaEmpresa(CStr(datos(Xconst + 78)))   'ELempresa16 lempnro
                    datos(Xconst + 79) = StrToStr(datos(Xconst + 79), 200) 'ELtareaDesempenada16
                    If datos(Xconst + 80) <> "" Then
                        datos(Xconst + 80) = ConvFecha(CDate(datos(Xconst + 80)))  'ELfechaDesde16
                    Else
                        datos(Xconst + 80) = "NULL"
                    End If
                    If datos(Xconst + 81) <> "" Then
                        datos(Xconst + 81) = ConvFecha(CDate(datos(Xconst + 81)))  'ELfechaHasta16
                    Else
                        datos(Xconst + 81) = "NULL"
                    End If
                    If datos(Xconst + 82) = "" Then
                        datos(Xconst + 82) = 0
                    Else
                        datos(Xconst + 82) = StrToDbl(datos(Xconst + 82))   'ELremuneracion16
                    End If
                    If datos(Xconst + 83) <> "" Then
                        datos(Xconst + 83) = TraerCodCausa(CStr(datos(Xconst + 83)))   'ELcausaBaja16
                    Else
                        datos(Xconst + 83) = "NULL"
                    End If
                
                    StrSql = "SELECT * FROM empant  "
                    StrSql = StrSql & " WHERE empleado = " & Ternro
                    StrSql = StrSql & " AND empatareas = " & "'" & datos(Xconst + 79) & "'"
                    StrSql = StrSql & " AND lempnro = " & datos(Xconst + 78)
                    StrSql = StrSql & " AND carnro = " & datos(Xconst + 77)
                    If rs_Aux.State = adStateOpen Then rs_Aux.Close
                    OpenRecordset StrSql, rs_Aux
                    If rs_Aux.EOF Then
                        StrSql = " INSERT INTO empant "
                        'FGZ - 29/08/2005
                        'cambié los nombres de los campos donde inserta las fechas desde y hasta
                        'StrSql = StrSql & " ( empleado, empatareas, lempnro, empadesde, emmpahasta, carnro, emparemu ) "
                        StrSql = StrSql & " ( empleado, empatareas, lempnro, empaini, empafin, carnro, emparemu, caunro, empresa ) "
                        StrSql = StrSql & " VALUES (" & Ternro & ", '" & datos(Xconst + 79) & "' ," & datos(Xconst + 78) & "," & datos(Xconst + 80) & "," & datos(Xconst + 81) & "," & datos(Xconst + 77) & "," & datos(Xconst + 82) & "," & datos(Xconst + 83) & ", '" & Empresa & "'  ) "
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If Err Then
                            Flog.writeline "Error al inserte el Empleo Anterior: " & Err.Description
                            Flog.writeline "SQL ejecutada: " & StrSql
                            Err.Clear
                        Else
                            Flog.writeline "Inserto los datos del Empleo Anterior"
                            ActPasos = True
                        End If
                    Else
                        StrSql = "UPDATE empant SET "
                        'FGZ - 29/08/2005
'                        StrSql = StrSql & " empadesde =" & Datos(Xconst + 120)
'                        StrSql = StrSql & ", emmpahasta =" & (Datos(Xconst + 121))
                        StrSql = StrSql & " empaini =" & datos(Xconst + 80)
                        StrSql = StrSql & ", empafin =" & (datos(Xconst + 81))
                        StrSql = StrSql & ", emparemu = " & datos(Xconst + 82)
                        StrSql = StrSql & ", caunro = " & datos(Xconst + 83)
                        StrSql = StrSql & " WHERE empantnro = " & rs_Aux!Empantnro
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If Err Then
                            Flog.writeline "Error al actualizar el Empleo Anterior: " & Err.Description
                            Flog.writeline "SQL ejecutada: " & StrSql
                            Err.Clear
                        Else
                            Flog.writeline "Actualizo los datos del Empleo Anterior"
                            ActPasos = False
                        End If
                    End If
                Else
                End If
            End If
            Xconst = Xconst + 7
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 58)
        End If
        ActPasos = False
    
    
        '--Idiomas--53 (54)
        ActPasos = False
        Xconst = 0
        For a = 0 To 3
            If UBound(datos) > (Xconst + 105) Then
                If datos(Xconst + 105) <> "" Then
                    If datos(Xconst + 106) <> "" Or datos(Xconst + 107) <> "" Or datos(Xconst + 108) <> "" Then
                        datos(Xconst + 105) = TraerCodIdioma(CStr(datos(Xconst + 105))) 'idioma1
                        datos(Xconst + 106) = TraerCodIdiNivel(CStr(datos(Xconst + 106))) 'idiomaLee1
                        datos(Xconst + 107) = TraerCodIdiNivel(CStr(datos(Xconst + 107))) 'idiomaHabla1
                        datos(Xconst + 108) = TraerCodIdiNivel(CStr(datos(Xconst + 108))) 'idiomaEscribe1
                        
                        If Not TieneIdioma(Ternro, CLng(datos(Xconst + 105))) Then
                            StrSql = " INSERT INTO emp_idi "
                            StrSql = StrSql & " (idinro, empleado, empidlee, empidhabla, empidescr) "
                            StrSql = StrSql & " VALUES (" & CLng(datos(Xconst + 105)) & ", " & Ternro & " ," & datos(Xconst + 106) & ", " & datos(Xconst + 107) & ", " & datos(Xconst + 108) & " ) "
                        Else
                            StrSql = " UPDATE emp_idi SET "
                            StrSql = StrSql & " empidlee = " & datos(Xconst + 106)
                            StrSql = StrSql & ", empidhabla = " & datos(Xconst + 107)
                            StrSql = StrSql & ", empidescr = " & datos(Xconst + 108)
                            StrSql = StrSql & " where empleado = " & Ternro & " and idinro = " & CLng(datos(Xconst + 105))
                        End If
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If Err Then
                            Flog.writeline "Error al inserte el Idioma " & datos(Xconst + 105) & "-" & Err.Description
                            Flog.writeline "SQL ejecutada: " & StrSql
                            Err.Clear
                        Else
                            Flog.writeline "Inserte el Idioma " & datos(Xconst + 105)
                            ActPasos = True
                        End If
                    End If
                End If
            End If
            Xconst = Xconst + 4
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 54)
        End If
        ActPasos = False
    
        
        '--Estudios-Informales--50 (51)
        ActPasos = False
        Xconst = 0
        For a = 0 To 3
            tempString = StrToStr(datos(Xconst + 121), 50) ''descCurso  estinfdesabr
            datos(Xconst + 121) = datos(Xconst + 121) ''descCurso  estinfdesabr
            datos(Xconst + 122) = TraerCodTipoCurso(StrToStr(datos(Xconst + 122), 50)) 'tipoCurso tipcurnro
            If datos(Xconst + 123) <> "" Then
                datos(Xconst + 123) = ConvFecha(datos(Xconst + 123)) 'fechaCurso  estinffecha
            Else
                datos(Xconst + 123) = ConvFecha(Date)
            End If
            datos(Xconst + 124) = TraerCodInstitucion(CStr(datos(Xconst + 124))) 'institucionCurso instnro
            If datos(Xconst + 121) = "" Or datos(Xconst + 122) = "" Or datos(Xconst + 124) = "" Then
                Flog.writeline "Error al insertar el estudio informal por falta de datos "
            Else
                'Reviso
                StrSql = "SELECT * FROM cap_estinformal  "
                StrSql = StrSql & " WHERE tipcurnro = " & CLng(datos(Xconst + 122))
                StrSql = StrSql & " AND ternro = " & Ternro
                StrSql = StrSql & " AND instnro = " & CLng(datos(Xconst + 124))
                If rs_Aux.State = adStateOpen Then rs_Aux.Close
                OpenRecordset StrSql, rs_Aux
                If rs_Aux.EOF Then
                    StrSql = " INSERT INTO cap_estinformal "
                    StrSql = StrSql & " (ternro, estinfdesabr, estinffecha, tipcurnro, instnro) "
                    StrSql = StrSql & " VALUES (" & Ternro & " , '" & tempString & "'," & datos(Xconst + 123) & "," & CLng(datos(Xconst + 122)) & "," & CLng(datos(Xconst + 124)) & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If Err Then
                        Flog.writeline "Error al insertar el estudio informal: " & Err.Description
                        Flog.writeline "SQL ejecutada: " & StrSql
                        Err.Clear
                    Else
                        Flog.writeline "Inserto los datos del estudio informal "
                        ActPasos = True
                    End If
                Else
                    StrSql = "UPDATE cap_estinformal SET "
                    StrSql = StrSql & " estinfdesabr = '" & tempString & "'"
                    StrSql = StrSql & ", estinffecha =" & (datos(Xconst + 123))
                    StrSql = StrSql & " WHERE tipcurnro = " & CLng(datos(Xconst + 122))
                    StrSql = StrSql & " AND ternro = " & Ternro
                    StrSql = StrSql & " AND instnro = " & CLng(datos(Xconst + 124))
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If Err Then
                        Flog.writeline "Error al actualizar el estudio informal: " & Err.Description
                        Flog.writeline "SQL ejecutada: " & StrSql
                        Err.Clear
                    Else
                        Flog.writeline "Actualizo los datos del estudio informal "
                        ActPasos = False
                    End If
                End If
            End If
            Xconst = Xconst + 4
        Next a
        If ActPasos Then
           Call InsertarPaso(Ternro, 51)
           ActPasos = False
        End If
        
        '--Especializaciones--51 (52)
        Xconst = 0
        ActPasos = False
        For a = 0 To 3
            If datos(Xconst + 139) <> "" Then
                datos(Xconst + 137) = TraerCodEspecializacion(CStr(datos(Xconst + 137))) 'tipo
                datos(Xconst + 138) = TraerCodEltoana(CStr(datos(Xconst + 138)), CLng(datos(Xconst + 137))) 'elemento
                datos(Xconst + 139) = TraerCodNivelEspecializacion(CStr(datos(Xconst + 139))) 'nivel
                
                'REVISO
                StrSql = "SELECT * FROM especemp  "
                StrSql = StrSql & " WHERE espnivnro = " & datos(Xconst + 139)
                StrSql = StrSql & " AND ternro = " & Ternro
                StrSql = StrSql & " AND eltananro = " & datos(Xconst + 138)
                If rs_Aux.State = adStateOpen Then rs_Aux.Close
                OpenRecordset StrSql, rs_Aux
                If rs_Aux.EOF Then
                    StrSql = " INSERT INTO especemp "
                    StrSql = StrSql & " (eltananro, ternro, espnivnro ) "
                    StrSql = StrSql & " VALUES (" & datos(Xconst + 138) & ", " & Ternro & " ," & datos(Xconst + 139) & ") "
    '                StrSql = StrSql & " VALUES (" & datosEltoAna(0, a) & ", " & ternro & " ," & Datos(Xconst + 139) & ") "
                
                    Err.Clear
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If Err Then
                        Flog.writeline "Error al insertar la especialidad: " & Err.Description
                        Flog.writeline "SQL ejecutada: " & StrSql
                        Err.Clear
                    Else
                        Flog.writeline "Actualizo los datos de la especialidad."
                        ActPasos = True
                    End If
                End If
            Else
            End If
            Xconst = Xconst + 3
        Next a
        If ActPasos Then
           'Flog.Writeline "Inserto los datos de la especialidad"
           Call InsertarPaso(Ternro, 52)
           ActPasos = False
        End If
        

    End If
Fin:
Exit Sub

Manejador_De_Error:
    HuboError = True
    Flog.writeline "SQL ejecutada: " & StrSql
    Texto = ": " & Err.Description
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    'Fue error de Consulta de SQL
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    GoTo Fin
    
End Sub

Public Sub LineaModelo_280(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Interfaz de Bandas Salariales. Version Estandar.
' Autor      : Gustavo Ring.
' Fecha      : 01/03/2006
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
    
    Dim datos() As String
    Dim Ternro As Long
    Dim NroDom As Long
    Dim rs_Aux As New ADODB.Recordset
    Dim Cantidad As Integer
    Dim banda As String
    Dim GRADO As Integer
    Dim fecdes As String
    Dim fechas As String
    Dim Origen As String
    Dim zonaA As Double
    Dim zonaB As Double
    Dim zonaC As Double
    Dim zonaAB As Double
    Dim zonaBC As Double
    Dim interna As Integer
    Dim I As Long
    
    Flog.writeline "procesando linea " & strLinea
    
    'Desactivo el manejador de errores - Cuando surgue algún error genero el rollback
    On Error Resume Next
        
    datos = Split("0" & separador & strLinea, separador)
    Cantidad = UBound(datos)
    For I = 0 To Cantidad
        datos(I) = Trim(datos(I))
    Next I
        
    ' verifico que la linea tenga todos los parámetros
    If Cantidad <> 10 Then
        Flog.writeline "Faltan parámetros en la linea de entrada."
        Exit Sub
    End If
    
    datos(1) = StrToStr(CStr(datos(1)), 60) ' Banda
    datos(2) = StrToStr(CStr(datos(2)), 30) ' Grado
    
    banda = datos(1)
    
    GRADO = TraerGrado(datos(2))
    
    fecdes = datos(3) ' Fecha desde
    fechas = datos(4) ' Fecha hasta
    
    If Not IsDate(fecdes) Then
            Flog.writeline "La fecha desde no es una fecha válida:" & fecdes
            Exit Sub
    End If
    
    If Not IsDate(fechas) Then
            Flog.writeline "La fecha hasta no es una fecha válida:" & fechas
            Exit Sub
    End If
    
    If CDate(fecdes) > CDate(fechas) Then
            Flog.writeline "La fecha desde: " & fecdes & " es mayor a la fecha hasta:" & fechas
            Exit Sub
    End If
    
    If Trim(datos(5)) = "" Then
        interna = -1
        
    Else
        interna = 0
        Origen = CStr(TraerOrigenBanda(datos(5)))
    End If
   
   If Superposicionfechas(fecdes, fechas, GRADO) And GRADO <> 0 Then
            Flog.writeline "Las fechas se superponen con las fechas de otra banda con el mismo origen"
            Exit Sub
    End If
    
    If importeValido(datos(6)) Then
        zonaA = CDbl(datos(6))
    Else
        Flog.writeline "El importe de la zona A:" & datos(6) & " no es válido "
        Exit Sub
    End If
    
    If importeValido(datos(7)) Then
        zonaB = CDbl(datos(7))
    Else
        Flog.writeline "El importe de la zona B:" & datos(7) & " no es válido "
        Exit Sub
    End If
    
    If importeValido(datos(8)) Then
       zonaC = CDbl(datos(8))
    Else
       Flog.writeline "El importe de la zona C:" & datos(8) & " no es válido "
       Exit Sub
    End If
    
    If importeValido(datos(9)) Then
        zonaAB = CDbl(datos(9))
    Else
        Flog.writeline "El importe de la zona AB:" & datos(9) & " no es válido "
        Exit Sub
    End If
    
    If importeValido(datos(10)) Then
        zonaBC = CDbl(datos(10))
    Else
        Flog.writeline "El importe de la zona BC:" & datos(10) & " no es válido "
        Exit Sub
    End If
    
    If zonaA > zonaB Then
        Flog.writeline "El importe de la zona A:" & datos(6) & " es mayor al de la zona B:" & datos(7)
        Exit Sub
    End If
    
    If zonaB > zonaC Then
        Flog.writeline "El importe de la zona B:" & datos(7) & " es mayor al de la zona C:" & datos(8)
        Exit Sub
    End If
    
    If (zonaA > zonaAB) Or (zonaB < zonaAB) Then
        Flog.writeline "El importe de la zona AB:" & datos(9) & " no se encuentra en el rango de A y B"
        Exit Sub
    End If
    
    If (zonaB > zonaBC) Or (zonaC < zonaBC) Then
        Flog.writeline "El importe de la zona BC:" & datos(10) & " no se encuentra en el rango de B y C"
        Exit Sub
    End If
    
    Flog.writeline "Comienzo de actualización BD."
    
    If GRADO = 0 Then
        GRADO = insertargrado(datos(2))
        Flog.writeline "Se inserto el nuevo grado:" & datos(2)
    End If
    
    If Origen = "0" And Not (interna) Then
        Origen = CStr(insertarorigen(datos(5)))
        Flog.writeline "Se inserto el nuevo origen:" & datos(5)
    Else
        Origen = "NULL"
    End If

    Call insertarBanda(banda, GRADO, fecdes, fechas, Origen, interna, zonaA, zonaB, zonaC, zonaAB, zonaBC)
    
    Flog.writeline "Se ingreso la banda salarial:" & banda
        
End Sub

Public Sub LineaModelo_281(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Alta de Remuneraciones. Version Estandar.
' Autor      : Diego Nuñez.
' Fecha      : 14/04/2009
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
    
    Dim datos() As String
    Dim Legajo As String
    Dim Item As String
    Dim Ternro As String
    Dim rs_Aux As New ADODB.Recordset
    Dim ValorReal As String
    Dim ValorPactado As String
    Dim FechaDesde As String
    Dim FechaHasta As String
    Dim FechaHoy As String
    Dim Periodicidad As String
    Dim FechaAcuerdo As String
    Dim Cantidad As Integer
    Dim I As Long
    
    FechaHoy = Now
    Flog.writeline "procesando linea " & strLinea
    
    'Desactivo el manejador de errores - Cuando surgue algún error genero el rollback
    'On Error Resume Next
        
    datos = Split("0" & separador & strLinea, separador)
    Cantidad = UBound(datos)
    For I = 0 To Cantidad
        datos(I) = Trim(datos(I))
    Next I
        
    ' verifico que la linea tenga todos los parámetros
    If Cantidad < 8 Then
        Flog.writeline "Faltan parámetros en la linea de entrada."
        Exit Sub
    End If
    
    'datos(1) = StrToStr(CStr(datos(1)), 60) ' Banda
    'datos(2) = StrToStr(CStr(datos(2)), 30) ' Grado
    
    'banda = datos(1)
    
    'GRADO = TraerGrado(datos(2))
    
    
    Legajo = datos(1)
    
    'Me fijo que el legajo exista y en tal caso leo el ternro
    StrSql = "select empleg, ternro from empleado where empleg = " & Legajo
    'If rs_Aux.State = adStateOpen Then rs_Aux.Close
    OpenRecordset StrSql, rs_Aux
    Ternro = ""
    If Not rs_Aux.EOF Then
        Ternro = rs_Aux!Ternro
    Else
        Flog.writeline "El legajo " & Legajo & " no existe en la base de datos. Abortando línea"
        Exit Sub
    End If
    rs_Aux.Close
    
    Item = datos(2)
    'Verifico que el item se corresponda con un item existente
    StrSql = "select remitenro from remu_items where remitenro = " & Item
    'If rs_Aux.State = adStateOpen Then rs_Aux.Close
    OpenRecordset StrSql, rs_Aux
    If Not rs_Aux.EOF Then
        'ternro = rs_Aux!ternro
    Else
        Flog.writeline "El Item " & Item & " no existe en la base de datos. Abortando línea"
        Exit Sub
    End If
    rs_Aux.Close
    
    
    
    ValorReal = datos(3)
    If IsNull(ValorReal) Then
        Flog.writeline "El valor Real no puede ser nulo. Abortando línea"
        Exit Sub
    End If
    If Not IsNumeric(ValorReal) Then
        Flog.writeline "El valor " & ValorReal & "correspondiente al valor real no corresponde a un número. Abortando línea"
        Exit Sub
    End If
    
    ValorPactado = datos(4)
    
    If Not IsNumeric(ValorPactado) Then
        Flog.writeline "El valor " & ValorPactado & "correspondiente al valor pactado no corresponde a un número. Abortando línea"
        Exit Sub
    End If
    
    FechaDesde = datos(5) ' Fecha desde
    FechaHasta = datos(6) ' Fecha hasta
    
    
    If Not IsDate(FechaDesde) Then
            Flog.writeline "La fecha desde no es una fecha válida:" & FechaDesde
            Exit Sub
    End If
    
    If Not IsNull(FechaHasta) And FechaHasta <> "" Then
        If Not IsDate(FechaHasta) Then
                Flog.writeline "La fecha hasta no es una fecha válida:" & FechaHasta
                Exit Sub
        End If
    End If
    
    If Not IsNull(FechaHasta) And FechaHasta <> "" Then
        If CDate(FechaDesde) > CDate(FechaHasta) Then
                Flog.writeline "La fecha desde: " & FechaDesde & " es mayor a la fecha hasta:" & FechaHasta
                Exit Sub
        End If
    End If
    
    Periodicidad = datos(7)
    
    'Busco en la tabla remu_per para ver con que periodicidad coincide el texto ingresado
    StrSql = "select rempernro, remdesabr, remunidad from remu_per where upper(remdesabr) = '"
    StrSql = StrSql & UCase(Periodicidad) & "' or upper(remunidad) = '" & UCase(Periodicidad) & "'"
    'If rs_Aux.State = adStateOpen Then rs_Aux.Close
    OpenRecordset StrSql, rs_Aux
    If Not rs_Aux.EOF Then
        'Do
        '    If UCase(rs_Aux!remdesabr) = UCase(Periodicidad) Or UCase(rs_Aux!remunidad) = UCase(Periodicidad) Then
                Periodicidad = Mid(Str(rs_Aux!rempernro), 2, Len(Str(rs_Aux!rempernro)))
        '    End If
        '    rs_Aux.MoveNext
        'Loop Until rs_Aux.EOF
    Else
        Flog.writeline "No hay periodicidades cargadas en la base de datos. Abortando línea"
        Exit Sub
    End If
    rs_Aux.Close
    If Not IsNumeric(Periodicidad) Then
        Flog.writeline "El valor " & Periodicidad & " correspondiente a la periodicidad no corresponde a un número. Abortando línea"
        Exit Sub
    End If
    
    FechaAcuerdo = datos(8)
    If IsNull(FechaAcuerdo) Or FechaAcuerdo = "" Then
        FechaAcuerdo = Now
    End If
    If Not IsDate(FechaAcuerdo) And FechaAcuerdo <> "" Then
        Flog.writeline "La fecha del acuerdo " & FechaAcuerdo & "no es una fecha válida. Abortando línea"
        Exit Sub
    End If
    
    
    
    'Ahora realizo la validación de desde y hasta (que no haya superposiciones con algú registro existente)
    StrSql = "select remitenro, ternro, remdesde, remhasta from remu_emp where remitenro = " & Item
    StrSql = StrSql & " and ternro = " & Ternro
    OpenRecordset StrSql, rs_Aux
    If Not rs_Aux.EOF Then
        Do
            If CDate(FechaDesde) = rs_Aux!remdesde Then
                Flog.writeline "La fecha desde coincide con otra ya existente para el par Tercero-Item. Abortando línea"
                Exit Sub
            End If
            If Not IsNull(rs_Aux!remhasta) Then
                If CDate(FechaDesde) > rs_Aux!remdesde And rs_Aux!remhasta >= CDate(FechaDesde) Then
                    Flog.writeline "La fecha desde coincide con otro periodo para el par Tercero-Item. Abortando línea"
                    Exit Sub
                End If
            End If
            If Not IsNull(rs_Aux!remhasta) Then
                If CDate(FechaHasta) >= rs_Aux!remdesde And rs_Aux!remhasta >= CDate(FechaHasta) Then
                    Flog.writeline "La fecha desde coincide con otro periodo para el par Tercero-Item. Abortando línea"
                    Exit Sub
                End If
            End If
            If Not IsNull(rs_Aux!remhasta) Then
                If CDate(FechaDesde) < rs_Aux!remdesde And rs_Aux!remhasta <= CDate(FechaHasta) Then
                    Flog.writeline "La fecha desde y fecha hasta incluyen otro periodo para el par Tercero-Item. Abortando línea"
                    Exit Sub
                End If
            End If
            If IsNull(rs_Aux!remhasta) Then
                If CDate(FechaDesde) < rs_Aux!remdesde Then
                    Flog.writeline "La fecha desde se superpone con otro periodo para el par Tercero-Item. Abortando línea"
                    Exit Sub
                End If
            End If
            If IsNull(rs_Aux!remhasta) Then
                If CDate(FechaDesde) > rs_Aux!remdesde Then
                    'Cierro la vigencia actual
                    FechaHoy = DateAdd("d", -1, CDate(FechaDesde))
                    StrSql = "UPDATE remu_emp SET remhasta = " & ConvFecha(FechaHoy) & ""
                    StrSql = StrSql & " WHERE ternro = " & Ternro
                    StrSql = StrSql & " AND remitenro = " & Item
                    StrSql = StrSql & " AND remdesde = " & ConvFecha(rs_Aux!remdesde)
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Flog.writeline "Se cerró una vigencia para crear una nueva."
                End If
            End If
            rs_Aux.MoveNext
        Loop Until rs_Aux.EOF
    End If
    
    
    
    
    Dim rs_sub As New ADODB.Recordset
        
    StrSql = "INSERT INTO remu_emp "
    StrSql = StrSql & "(remitenro, ternro, vpactado, vreal, remdesde, remhasta, remperiod, remfecacuerdo)"
    StrSql = StrSql & "VALUES (" & Item & "," & Ternro & "," & ValorPactado & "," & ValorReal & "," & ConvFecha(FechaDesde)
    If Not IsNull(FechaHasta) And FechaHasta <> "" Then
        StrSql = StrSql & "," & ConvFecha(FechaHasta)
    Else
        StrSql = StrSql & ", NULL"
    End If
    StrSql = StrSql & "," & Periodicidad
    StrSql = StrSql & "," & ConvFecha(FechaAcuerdo)
    StrSql = StrSql & ")"


    objConn.Execute StrSql, , adExecuteNoRecords
    
    'Flog.writeline "Se ingreso la banda salarial:" & banda
        
End Sub


Public Sub LineaModelo_285(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Interface de Francos Compensatorios.
'              El formato es:
'                   Legajo; Fecha ; Cantidad
' Autor      : FGZ
' Fecha      : 10/12/2009
' Descripcion:
' Ultima Mod.: 26/04/2011 - Gonzalez Nicolás - Se agregó al insert (liq,pronro)

' ---------------------------------------------------------------------------------------------
Dim pos1 As Long
Dim pos2 As Long
Dim I As Long

Dim Tercero As Long
Dim NroLegajo As Long
Dim Fecha As Date
Dim Cantidad As Double
Dim Descripcion As String
Dim Saldado As Integer

Dim rs_Empleado As New ADODB.Recordset
Dim rs_Franco As New ADODB.Recordset
Dim campos

On Error GoTo Manejador_De_Error

' El formato es:
' Legajo; fecha; Cantidad; [Saldado]
    
    campos = Split(strLinea, separador, -1)
   
    'Nro de Legajo
    If IsNumeric(campos(0)) Then
        NroLegajo = campos(0)
    Else
        InsertaError 1, 8
        HuboError = True
        Exit Sub
    End If
    
    'Fecha
    If IsDate(campos(1)) Then
        Fecha = CDate(campos(1))
    Else
        Flog.writeline "Formato de fecha Incorrecto " & campos(1)
        InsertaError 2, 5
        HuboError = True
        Exit Sub
    End If
               
    'Cantidad
    If IsNumeric(campos(2)) Then
        Cantidad = campos(2)
    Else
        Flog.writeline "La cantidad no es numerica " & campos(2)
        InsertaError 2, 5
        HuboError = True
        Exit Sub
    End If
               
    If UBound(campos) > 2 Then
        If (UCase(campos(3))) = "S" Or (UCase(campos(3)) = "SI") Then
            Saldado = -1
        Else
            Saldado = 0
        End If
    Else
        Saldado = 0
    End If
               
' ====================================================================
'   Validar los parametros Levantados
'Que exista el legajo
StrSql = "SELECT * FROM empleado where empleg = " & NroLegajo
OpenRecordset StrSql, rs_Empleado
If rs_Empleado.EOF Then
    Flog.writeline "No se encontro el legajo " & NroLegajo
    InsertaError 1, 8
    HuboError = True
    Exit Sub
Else
    Tercero = rs_Empleado!Ternro
End If

Descripcion = "Dato migrado por interface."
'=============================================================

StrSql = "SELECT * FROM emp_fr_comp "
StrSql = StrSql & " WHERE ternro = " & Tercero
StrSql = StrSql & " AND fecha = " & ConvFecha(Fecha)
OpenRecordset StrSql, rs_Franco
If rs_Franco.EOF Then
   'Inserto el franco
    StrSql = "INSERT INTO emp_fr_comp ("
    StrSql = StrSql & "ternro,fecha,cantidad,unidad,comentario,liq,pronro"
    StrSql = StrSql & ") VALUES (" & Tercero
    StrSql = StrSql & "," & ConvFecha(Fecha)
    StrSql = StrSql & "," & Cantidad
    StrSql = StrSql & ",0"
    StrSql = StrSql & ",'" & Descripcion & "'"
    StrSql = StrSql & "," & Saldado & "," & NroProcesoBatch
    StrSql = StrSql & " )"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    Flog.writeline " Franco insertado "
Else
    Flog.writeline " Ya existe un Franco para la fecha " & Fecha & " y el empleado " & NroLegajo
End If

Fin:
'cierro y libero
If rs_Empleado.State = adStateOpen Then rs_Empleado.Close
If rs_Franco.State = adStateOpen Then rs_Franco.Close

Set rs_Franco = Nothing
Set rs_Empleado = Nothing

Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    If InStr(1, Err.Description, "ODBC") > 0 Then
        'Fue error de Consulta de SQL
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
        Flog.writeline
    End If
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    GoTo Fin

End Sub
Public Sub LineaModelo_286(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Procedimiento de incorporacion de postulantes. Version Estandar. R3
' Autor      : Manterola Maria Magdalena
' Fecha      : 25/10/2011
' Ultima Mod.: 31/01/2014 - Carmen Quintero - Queda como estandar este modelo y no el 275.
' Descripcion:
' ---------------------------------------------------------------------------------------------
    Dim datos() As String
    Dim TipItemInf(10) As Long
    Dim Ternro As Long
    Dim NroDom As Long
    Dim a As Long
    Dim Xconst As Long
    Dim ActPasos As Boolean
    Dim tempString As String
    Dim EstPosNro As Long
    Dim Aux As Integer
    Dim Inserto As Integer
    
    Dim rs_Ter As New ADODB.Recordset
    Dim rs_Aux As New ADODB.Recordset
    Dim I As Long
    Dim Empresa
    
    
    Flog.writeline "procesando linea " & strLinea
    
    'Si ocurre un error antes de insertar el tercero se aborta el postulante
    On Error GoTo Manejador_De_Error:
    
    datos = Split("0" & separador & strLinea, separador)
    For I = 0 To UBound(datos)
        datos(I) = Trim(datos(I))
    Next I
    
    Flog.writeline datos(1)
    Flog.writeline datos(78)
    Empresa = datos(78)
    
    '--Documentos--
    datos(1) = TraerCodTipoDocumento(CStr(datos(1)))  'tipoDocumento
    datos(2) = StrToStr(CStr(datos(2)), 30) 'numeroDocumento
    datos(2) = Replace(datos(2), ".", "") 'elimino puntos y comas
    datos(2) = Replace(datos(2), ",", "")
    
    '--Tercero
    datos(3) = StrToStr(datos(3), 25) 'ternom
    datos(4) = StrToStr(datos(4), 25)  'ternom2
    datos(5) = StrToStr(datos(5), 25) 'terape
    datos(6) = StrToStr(datos(6), 25) 'terape2
    datos(7) = ConvFecha(CDate(datos(7))) 'terfecnac
    'If UCase(Datos(8)) = "MASCULINO" Then Datos(8) = -1 Else Datos(8) = 0 'tersex
    If (UCase(datos(8)) = "M") Or (UCase(datos(8)) = "-1") Or (UCase(datos(8)) = "MASCULINO") Then
        datos(8) = -1
    Else
        datos(8) = 0
    End If

    datos(23) = StrToStr(datos(23), 100) ' teremail
    datos(13) = TraerCodNacionalidad(CStr(datos(13))) ' nacionalnro
    datos(9) = StrToStr(TraerCodEstadoCivil(CStr(datos(9))), 8) 'estcivnro
    If datos(14) = "" Then
        datos(14) = "''"
    Else
        datos(14) = ConvFecha(CDate(datos(14))) 'fechaingresopais
    End If
    datos(11) = StrToStr(datos(11), 25) 'tercasape
    If datos(10) = "" Then
        datos(10) = "NULL"
    Else
        datos(10) = ConvFecha(CDate(datos(10))) 'terfecestciv
    End If
    datos(12) = TraerCodPais(CStr(datos(12))) 'paisnro


    'FGZ - 06/04/2005
    StrSql = "SELECT * FROM ter_doc  "
    StrSql = StrSql & " WHERE ter_doc.tidnro = " & datos(1)
    StrSql = StrSql & " AND nrodoc = '" & datos(2) & "'"
    OpenRecordset StrSql, rs_Ter

    If rs_Ter.EOF Then
        StrSql = " INSERT INTO tercero (ternom, ternom2, terape, terape2, terfecnac, tersex, teremail, nacionalnro, estcivnro, terfecing, tercasape,terfecestciv, paisnro ) VALUES ("
        StrSql = StrSql & "'" & datos(3) & "'"      'ternom
        StrSql = StrSql & ",'" & datos(4) & "'"     'ternom2
        StrSql = StrSql & ",'" & datos(5) & "'"      'terape
        StrSql = StrSql & ",'" & datos(6) & "'"     'terape2
        StrSql = StrSql & "," & datos(7)            'terfecnac
        StrSql = StrSql & "," & CLng(datos(8))      'tersex
        StrSql = StrSql & ",'" & datos(23) & "'"    'teremail
        StrSql = StrSql & "," & CLng(datos(13))     'nacionalnro
        StrSql = StrSql & ",'" & datos(9) & "'"     'estcivnro
        StrSql = StrSql & "," & datos(14)           'fechaingresopais
        StrSql = StrSql & ",'" & datos(11) & "'"    'tercasape
        StrSql = StrSql & "," & datos(10)           'terfecestciv
        StrSql = StrSql & "," & datos(12)           'paisnro
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline "Inserto en la tabla de tercero"
    
        '--Obtengo el ternro--
        Ternro = getLastIdentity(objConn, "tercero")
        Flog.writeline "-----------------------------------------------"
        Flog.writeline "Codigo de Tercero = " & Ternro
    
        '--Inserto el Registro correspondiente en ter_tip--
        StrSql = " INSERT INTO ter_tip(ternro,tipnro) VALUES(" & Ternro & ",14)"
        objConn.Execute StrSql, , adExecuteNoRecords
        'Flog.Writeline "Inserto el tipo de tercero 14 en ter_tip"
        
        'Desactivo el manejador de erorres
        On Error GoTo 0
        
        
        'Cualquier error que ocurra de aquí en adelante sigue adelante
        ' tratando de insertar la mayor cantidad de datos posible
        On Error Resume Next
        'HuboError = False
        
        StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
        StrSql = StrSql & " VALUES(" & Ternro & "," & datos(1) & ",'" & datos(2) & "')"
        objConn.Execute StrSql, , adExecuteNoRecords
    
        '--------------------------------------------------------------------------------
        '--Inserto el Domicilio--
        StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
        StrSql = StrSql & " VALUES(1," & Ternro & ",-1,2)"
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline "inserto el Domicilio"
    
        '--Obtengo el numero de domicilio en la tabla--
        NroDom = CLng(getLastIdentity(objConn, "cabdom"))
    
        '--Si no tiene algun dato le agregamos unos ficticios--
        datos(24) = StrToStr(datos(24), 30) 'dirCalle
        datos(25) = StrToStr(datos(25), 8) 'dirNumero
        datos(26) = StrToStr(datos(26), 8) 'dirPiso
        datos(27) = StrToStr(datos(27), 8) 'dirDepto
        datos(28) = StrToStr(datos(28), 8) 'dirTorre
        datos(29) = StrToStr(datos(29), 8) 'dirManzana
        datos(30) = StrToStr(datos(30), 8) 'dirSector
        datos(31) = StrToStr(datos(31), 12) 'dirCP
        datos(32) = TraerCodLocalidad(CStr(datos(32))) 'dirLocalidad
        datos(33) = TraerCodProvincia(CStr(datos(33)))   'dirProvincia
        datos(34) = TraerCodPartido(CStr(datos(34)))  'dirPartido
        datos(35) = TraerCodZona(CStr(datos(35)), CLng(datos(33)))  'dirZona
            If datos(35) = "" Then datos(35) = "NULL"
        datos(36) = TraerCodPais(CStr(datos(36))) 'dirPais
    
        StrSql = " INSERT INTO detdom (domnro,calle,nro,sector,torre,piso,oficdepto,manzana,codigopostal,"
        StrSql = StrSql & "locnro,provnro,paisnro, zonanro, partnro) "
        StrSql = StrSql & " VALUES ("
        StrSql = StrSql & NroDom
        StrSql = StrSql & ",'" & datos(24) & "'"
        StrSql = StrSql & ",'" & datos(25) & "'"
        StrSql = StrSql & ",'" & datos(30) & "'"
        StrSql = StrSql & ",'" & datos(28) & "'"
        StrSql = StrSql & ",'" & datos(26) & "'"
        StrSql = StrSql & ",'" & datos(27) & "'"
        StrSql = StrSql & ",'" & datos(29) & "'"
        StrSql = StrSql & ",'" & datos(31) & "'"
        StrSql = StrSql & "," & datos(32)
        StrSql = StrSql & "," & datos(33)
        StrSql = StrSql & "," & datos(36)
        StrSql = StrSql & "," & datos(35)
        StrSql = StrSql & "," & datos(34)
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        If Err Then
            Err.Clear
        Else
            Flog.writeline "Inserte el domicilio "
        End If
       
        Flog.writeline "Inserto el Domicilio "
    
        '--Telefonos-Personal--
        datos(21) = validatelefono(StrToStr(datos(21), 20))
        If datos(21) <> "" Then
            StrSql = " INSERT INTO telefono "
            'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
            StrSql = StrSql & " (domnro, telnro, telfax, teldefault, telcelular,tipotel ) "
            StrSql = StrSql & " VALUES (" & NroDom & ", '" & datos(21) & "' ,0 , -1 ,0,1 ) "
            objConn.Execute StrSql, , adExecuteNoRecords
            If Err Then
                Err.Clear
            Else
                Flog.writeline "Inserte el telefono"
            End If
        End If
        
        '--Telefonos-Celular--
        'FGZ 11/04/2005 - quieren que lo cargue como telefono comun
        datos(22) = validatelefono(StrToStr(datos(22), 20))
        If datos(22) <> "" Then
            StrSql = " INSERT INTO telefono "
            'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
            StrSql = StrSql & " (domnro, telnro, telfax, teldefault, telcelular,tipotel ) "
            StrSql = StrSql & " VALUES (" & NroDom & ", '" & datos(22) & "' , 0, -1, 0,2 ) "
            objConn.Execute StrSql, , adExecuteNoRecords
            'Flog.Writeline " Inserto el telefono calular "
            'Flog.Writeline " Inserto el segundo telefono "
            If Err Then
                Err.Clear
            Else
                Flog.writeline "Inserte el telefono2 "
            End If
        End If
    
        '--Complemento--
        If datos(15) = "" Then
            datos(15) = 0
        Else
            datos(15) = CLng(StrToInt(datos(15))) 'cantidadHijos
        End If
        datos(16) = StrToStr(datos(16), 60) 'imagen
        If (datos(17) = "" Or Not IsDate(datos(17))) Then
            'datos(17) = "NULL"
            datos(17) = ConvFecha(Date)
        Else
            datos(17) = ConvFecha(CDate(datos(17))) 'fechaIngresoCV
        End If
        datos(18) = StrToStr(datos(18), 250) 'referencias
        If datos(19) = "" Then
            datos(19) = TraerCodProcedencia("Otro") 'procedencia
        Else
            datos(19) = TraerCodProcedencia(CStr(datos(19))) 'procedencia
        End If
        If datos(20) = "" Then
            datos(20) = 0
        Else
            datos(20) = CDbl(StrToDbl(datos(20))) 'remuneracionPretendida
        End If
        
        'FGZ - 02/03/2006 Se agrego el estposnro = 4 (postulantre activo)
        StrSql = " INSERT INTO pos_postulante "
        StrSql = StrSql & " ( ternro, posrempre, poscanhijos, posfoto, posfecpres, posref, procnro,estposnro) "
        StrSql = StrSql & " VALUES (" & Ternro & " ," & CDbl(datos(20)) & ", " & CLng(datos(15)) & ", '" & datos(16) & "', " & datos(17) & ",'" & datos(18) & "', " & datos(19) & ",4) "
        objConn.Execute StrSql, , adExecuteNoRecords
        If Err Then
            Flog.writeline "Error al inserte el Complemento: " & Err.Description
            Flog.writeline "SQL ejecutada: " & StrSql
            Err.Clear
        Else
            Flog.writeline "Inserte el Complemento "
        End If
    
        
    
        '--Estudios-formales--(49)(50)
        Xconst = 0
        For a = 0 To 3
            If datos(Xconst + 37) <> "" Then
                datos(Xconst + 37) = TraerCodNivelEstudio(datos(Xconst + 37))   'EFnivel8
                'FGZ - 29/08/2005
                'If Datos(Xconst + 38) = "Graduado" Then Datos(Xconst + 38) = -1 Else Datos(Xconst + 38) = 0
                If datos(Xconst + 38) = -1 Then datos(Xconst + 38) = -1 Else datos(Xconst + 38) = 0
                    'Datos(Xconst + 38) = Datos(Xconst + 38)   'EFcompleto8
                datos(Xconst + 39) = TraerCodTitulo(CStr(datos(Xconst + 39)), CLng(datos(Xconst + 37)))   'EFtitulo8
                datos(Xconst + 40) = TraerCodInstitucionAbreviada(CStr(datos(Xconst + 40)))   'EFinstitucion8
                datos(Xconst + 41) = TraerCodCarrera(CStr(datos(Xconst + 41)))    'EFcarrera8
                If datos(Xconst + 42) <> "" Then
                    datos(Xconst + 42) = ConvFecha(CDate(datos(Xconst + 42)))   'EFfechaDesde8
                Else
                    datos(Xconst + 42) = "NULL"
                End If
                If datos(Xconst + 43) <> "" Then
                    datos(Xconst + 43) = ConvFecha(CDate(datos(Xconst + 43)))   'EFfechaHasta8
                Else
                    datos(Xconst + 43) = "NULL"
                End If
                datos(Xconst + 44) = StrToStr(datos(Xconst + 44), 30)   'EFpromedio8
                datos(Xconst + 45) = StrToStr(datos(Xconst + 45), 60)   'EFrango8
                If datos(Xconst + 46) <> "" And UCase(datos(Xconst + 46)) <> "NO" Then
                    datos(Xconst + 46) = -1  'EFestudiaActualmente8
                Else
                    datos(Xconst + 46) = 0  'EFestudiaActualmente8
                End If
        
                StrSql = " INSERT INTO cap_estformal "
                StrSql = StrSql & " ( nivnro, ternro, titnro, instnro, carredunro, capfecdes, capfechas, capcomp , capestact, caprango, capprom) "
                StrSql = StrSql & " VALUES (" & CLng(datos(Xconst + 37)) & ", " & Ternro & " ," & datos(Xconst + 39) & "," & datos(Xconst + 40) & "," & datos(Xconst + 41) & "," & datos(Xconst + 42) & " ," & datos(Xconst + 43) & "," & datos(Xconst + 38) & "," & datos(Xconst + 46) & ",'" & datos(Xconst + 45) & "','" & datos(Xconst + 44) & "' ) "
                'StrSql = StrSql & " Go "
                Err.Clear
                objConn.Execute StrSql, , adExecuteNoRecords

                
                If Err Then
                    Flog.writeline "Error al inserte el estudio formal: " & Err.Description
                    Flog.writeline "SQL ejecutada: " & StrSql
                    Err.Clear
                Else
                    Flog.writeline "Inserte el estudio formal " & datos(Xconst + 37)
                    ActPasos = True
                End If
            End If
            Xconst = Xconst + 10
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 50)
        End If
        ActPasos = False
        
        
        '--Experiencia-Laboral----Empleos Anteriores--57 (58)
        'reemplazos
        '117 x 77
        Xconst = 0
        For a = 0 To 3
            If datos(Xconst + 78) <> "" And datos(Xconst + 77) <> "" Then
                datos(Xconst + 77) = TraerCodCargo(CStr(datos(Xconst + 77)))    'ELcargoAnterior16
                datos(Xconst + 78) = TraerCodListaEmpresa(CStr(datos(Xconst + 78)))   'ELempresa16 lempnro
                datos(Xconst + 79) = StrToStr(datos(Xconst + 79), 200) 'ELtareaDesempenada16
                If datos(Xconst + 80) <> "" Then
                    datos(Xconst + 80) = ConvFecha(CDate(datos(Xconst + 80)))  'ELfechaDesde16
                Else
                    datos(Xconst + 80) = "NULL"
                End If
                If datos(Xconst + 81) <> "" Then
                    datos(Xconst + 81) = ConvFecha(CDate(datos(Xconst + 81)))  'ELfechaHasta16
                Else
                    datos(Xconst + 81) = "NULL"
                End If
                If datos(Xconst + 82) = "" Then
                    datos(Xconst + 82) = 0
                Else
                    datos(Xconst + 82) = StrToDbl(datos(Xconst + 82))   'ELremuneracion16
                End If
                If datos(Xconst + 83) <> "" Then
                    datos(Xconst + 83) = TraerCodCausa(CStr(datos(Xconst + 83)))   'ELcausaBaja16
                Else
                    datos(Xconst + 83) = "NULL"
                End If
            
                StrSql = " INSERT INTO empant "
                'FGZ - 29/08/2005
                'cambié los nombres de los campos donde inserta las fechas desde y hasta
                'StrSql = StrSql & " ( empleado, empatareas, lempnro, empadesde, emmpahasta, carnro, emparemu ) "
                StrSql = StrSql & " ( empleado, empatareas, lempnro, empaini, empafin, carnro, emparemu, caunro, empresa ) "
                StrSql = StrSql & " VALUES (" & Ternro & ", '" & datos(Xconst + 79) & "' ," & datos(Xconst + 78) & "," & datos(Xconst + 80) & "," & datos(Xconst + 81) & "," & datos(Xconst + 77) & "," & datos(Xconst + 82) & "," & datos(Xconst + 83) & ", '" & Empresa & "' ) "
                objConn.Execute StrSql, , adExecuteNoRecords
                If Err Then
                    Flog.writeline "Error al inserte el Empleo Anterior: " & Err.Description
                    Flog.writeline "SQL ejecutada: " & StrSql
                    Err.Clear
                Else
                    Flog.writeline "Inserto los datos del Empleo Anterior"
                    ActPasos = True
                End If
            End If
            Xconst = Xconst + 7
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 58)
        End If
        ActPasos = False
    
        '--Idiomas--53 (54)
        'reemplazos
        '229 x 105
        ActPasos = False
        Xconst = 0
        For a = 0 To 3
            If datos(Xconst + 105) <> "" Then
                If datos(Xconst + 106) <> "" Or datos(Xconst + 107) <> "" Or datos(Xconst + 108) <> "" Then
                    datos(Xconst + 105) = TraerCodIdioma(CStr(datos(Xconst + 105))) 'idioma1
                    datos(Xconst + 106) = TraerCodIdiNivel(CStr(datos(Xconst + 106))) 'idiomaLee1
                    datos(Xconst + 107) = TraerCodIdiNivel(CStr(datos(Xconst + 107))) 'idiomaHabla1
                    datos(Xconst + 108) = TraerCodIdiNivel(CStr(datos(Xconst + 108))) 'idiomaEscribe1
                    
                    If Not TieneIdioma(Ternro, CLng(datos(Xconst + 105))) Then
                        StrSql = " INSERT INTO emp_idi "
                        StrSql = StrSql & " (idinro, empleado, empidlee, empidhabla, empidescr) "
                        StrSql = StrSql & " VALUES (" & CLng(datos(Xconst + 105)) & ", " & Ternro & " ," & datos(Xconst + 106) & ", " & datos(Xconst + 107) & ", " & datos(Xconst + 108) & " ) "
                    Else
                        StrSql = " UPDATE emp_idi SET "
                        StrSql = StrSql & " empidlee = " & datos(Xconst + 106)
                        StrSql = StrSql & ", empidhabla = " & datos(Xconst + 107)
                        StrSql = StrSql & ", empidescr = " & datos(Xconst + 108)
                        StrSql = StrSql & " where empleado = " & Ternro & " and idinro = " & CLng(datos(Xconst + 105))
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If Err Then
                        Flog.writeline "Error al inserte el Idioma " & datos(Xconst + 105) & "-" & Err.Description
                        Flog.writeline "SQL ejecutada: " & StrSql
                        Err.Clear
                    Else
                        Flog.writeline "Inserte el Idioma " & datos(Xconst + 105)
                        ActPasos = True
                    End If
                End If
            End If
            Xconst = Xconst + 4
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 54)
        End If
        ActPasos = False
    
        
        '--Estudios-Informales--50 (51)
        'Reemplazos
        ' 249 x 121
        ActPasos = False
        ActPasos = False
        Xconst = 0
        For a = 0 To 3
            If datos(Xconst + 121) <> "" Then
                tempString = StrToStr(datos(121 + Xconst), 50) ''descCurso  estinfdesabr
                datos(121 + Xconst) = datos(121 + Xconst) ''descCurso  estinfdesabr
                datos(122 + Xconst) = TraerCodTipoCurso(StrToStr(datos(122 + Xconst), 50)) 'tipoCurso tipcurnro
                If datos(123 + Xconst) <> "" Then
                    datos(123 + Xconst) = ConvFecha(datos(123 + Xconst)) 'fechaCurso  estinffecha
                Else
                    datos(123 + Xconst) = ConvFecha(Date)
                End If
                datos(124 + Xconst) = TraerCodInstitucion(CStr(datos(124 + Xconst))) 'institucionCurso instnro
                If datos(121 + Xconst) = "" Or datos(122 + Xconst) = "" Or datos(124 + Xconst) = "" Then
                    Flog.writeline "Error al insertar el estudio informal por falta de datos "
                Else
                    StrSql = " INSERT INTO cap_estinformal "
                    StrSql = StrSql & " (ternro, estinfdesabr, estinffecha, tipcurnro, instnro) "
                    StrSql = StrSql & " VALUES (" & Ternro & " , '" & tempString & "'," & datos(123 + Xconst) & "," & CLng(datos(122 + Xconst)) & "," & CLng(datos(124 + Xconst)) & ")"
                    Err.Clear
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If Err Then
                        Flog.writeline "Error al insertar el estudio informal: " & Err.Description
                        Flog.writeline "SQL ejecutada: " & StrSql
                        Err.Clear
                    Else
                        Flog.writeline "Inserto los datos del estudio informal "
                        ActPasos = True
                    End If
                End If
            End If
            Xconst = Xconst + 4
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 51)
        End If
        ActPasos = False
        
        
        '--Especializaciones--51 (52)
        'reemplazos
        '253 x 137
        Xconst = 0
        ActPasos = False
        For a = 0 To 3
            If datos(Xconst + 139) <> "" Then
                datos(Xconst + 137) = TraerCodEspecializacion(CStr(datos(Xconst + 137))) 'tipo
                datos(Xconst + 138) = TraerCodEltoana(CStr(datos(Xconst + 138)), CLng(datos(Xconst + 137))) 'elemento
                datos(Xconst + 139) = TraerCodNivelEspecializacion(CStr(datos(Xconst + 139))) 'nivel
                
                StrSql = " INSERT INTO especemp "
                StrSql = StrSql & " (eltananro, ternro, espnivnro ) "
                StrSql = StrSql & " VALUES (" & datos(Xconst + 138) & ", " & Ternro & " ," & datos(Xconst + 139) & ") "
'                StrSql = StrSql & " VALUES (" & datosEltoAna(0, a) & ", " & ternro & " ," & Datos(Xconst + 139) & ") "
                Err.Clear
                objConn.Execute StrSql, , adExecuteNoRecords
                If Err Then
                    Flog.writeline "Error al insertar la especialidad: " & Err.Description
                    Flog.writeline "SQL ejecutada: " & StrSql
                    Err.Clear
                Else
                    Flog.writeline "Inserto los datos de la especialidad."
                    ActPasos = True
                End If
            Else
                Flog.writeline "Error al insertar la especialidad por falta de datos."
            End If
            Xconst = Xconst + 3
        Next a
        If ActPasos Then
           Flog.writeline "Inserto los datos de la especialidad"
           Call InsertarPaso(Ternro, 52)
           ActPasos = False
        End If
        
        '--Tipos e Items de Informacion
        ActPasos = False
        Xconst = 0
        
        For a = 0 To 4
            If datos(Xconst + 149) <> "" Then
                datos(149 + Xconst) = UCase(datos(149 + Xconst)) ''descTipoInformacion
              
                TipItemInf(Xconst) = TraerCodTipInformacion(datos(149 + Xconst))
                
                If datos(150 + Xconst) <> "" Then
                    datos(150 + Xconst) = UCase(datos(150 + Xconst)) ''descItemInformacion
                    
                    TipItemInf(Xconst + 1) = TraerCodItemInformacion(datos(150 + Xconst), TipItemInf(Xconst))
                    
                    'AHORA TENGO QUE ASOCIARLE EL PAR AL POSTULANTE
                    Inserto = AsociarParAPostulante(TipItemInf(Xconst + 1), Ternro)
                    If Inserto = -1 Then
                        Flog.writeline "Se Asocio el Par con el Postulante"
                        ActPasos = True
                    Else
                        Flog.writeline "El Postulante ya tenia el Par asociado"
                    End If
                Else
                    Flog.writeline "Falto especificar el Item de Informacion"
                End If
            Else
                Flog.writeline "Falto especificar el Tipo de Informacion"
            End If

            Xconst = Xconst + 2
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 86)
        End If
        ActPasos = False
                

    Else
        Ternro = rs_Ter!Ternro
        Flog.writeline "-----------------------------------------------"
        Flog.writeline "Codigo de Tercero = " & Ternro
        
        'FGZ - 27/07/2005
        'si el tercereo existe pero es de tipo empleado ==> no se hace nada
        '1       Empleado
        '2       Empleado Agencia
        StrSql = " SELECT * FROM ter_tip"
        StrSql = StrSql & " WHERE ternro = " & Ternro
        StrSql = StrSql & " AND tipnro = 1"
        'StrSql = StrSql & " AND (tipnro = 1 OR tipnro = 2)"
        If rs_Aux.State = adStateOpen Then rs_Aux.Close
        OpenRecordset StrSql, rs_Aux
        If Not rs_Aux.EOF Then
            Flog.writeline "El Postulante ya es empleado." & datos(5) & " " & datos(3) & " " & datos(4) & "No se procesará."
            Exit Sub
        End If
        
        'Actualizar los datos
        StrSql = " UPDATE tercero SET "
        StrSql = StrSql & " ternom = " & "'" & datos(3) & "'"
        StrSql = StrSql & ", ternom2 = " & "'" & datos(4) & "'"
        StrSql = StrSql & ", terape = " & "'" & datos(5) & "'"
        StrSql = StrSql & ", terape2 = " & "'" & datos(6) & "'"
        StrSql = StrSql & ", terfecnac = " & datos(7)
        StrSql = StrSql & ", tersex = " & CLng(datos(8))
        StrSql = StrSql & ", teremail =" & "'" & datos(23) & "'"
        StrSql = StrSql & ", nacionalnro =" & CLng(datos(13))
        StrSql = StrSql & ", estcivnro =" & "'" & datos(9) & "'"
        StrSql = StrSql & ", terfecing =" & datos(14)
        StrSql = StrSql & ", tercasape =" & "'" & datos(11) & "'"
        StrSql = StrSql & ",terfecestciv =" & datos(10)
        StrSql = StrSql & ", paisnro =" & datos(12)
        StrSql = StrSql & " WHERE ternro = " & Ternro
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline "Tercero Actualizado"
    
        'Desactivo el manejador de erorres
        On Error GoTo 0
        
        'Cualquier error que ocurra de aquí en adelante sigue adelante
        ' tratando de insertar la mayor cantidad de datos posible
        On Error Resume Next
        
        StrSql = "SELECT * FROM ter_doc  "
        StrSql = StrSql & " WHERE ter_doc.tidnro = " & datos(1)
        StrSql = StrSql & " AND ternro = " & Ternro
        If rs_Aux.State = adStateOpen Then rs_Aux.Close
        OpenRecordset StrSql, rs_Aux
        If rs_Aux.EOF Then
            StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
            StrSql = StrSql & " VALUES(" & Ternro & "," & datos(1) & ",'" & datos(2) & "')"
        Else
            StrSql = "UPDATE ter_doc SET "
            StrSql = StrSql & " nrodoc = '" & datos(2) & "'"
            StrSql = StrSql & " WHERE ter_doc.tidnro = " & datos(1)
            StrSql = StrSql & " AND ternro = " & Ternro
        End If
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline "Documento Actualizado"
        
        
        '--------------------------------------------------------------------------------
        '--Inserto el Domicilio--
        StrSql = "SELECT * FROM cabdom  "
        StrSql = StrSql & " WHERE tipnro = 1"
        StrSql = StrSql & " AND ternro = " & Ternro
        If rs_Aux.State = adStateOpen Then rs_Aux.Close
        OpenRecordset StrSql, rs_Aux
        If rs_Aux.EOF Then
            StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
            StrSql = StrSql & " VALUES(1," & Ternro & ",-1,2)"
            objConn.Execute StrSql, , adExecuteNoRecords
            Flog.writeline "inserto el Domicilio"
    
            '--Obtengo el numero de domicilio en la tabla--
            NroDom = CLng(getLastIdentity(objConn, "cabdom"))
        
            '--Si no tiene algun dato le agregamos unos ficticios--
            datos(24) = StrToStr(datos(24), 30) 'dirCalle
            datos(25) = StrToStr(datos(25), 8) 'dirNumero
            datos(26) = StrToStr(datos(26), 8) 'dirPiso
            datos(27) = StrToStr(datos(27), 8) 'dirDepto
            datos(28) = StrToStr(datos(28), 8) 'dirTorre
            datos(29) = StrToStr(datos(29), 8) 'dirManzana
            datos(30) = StrToStr(datos(30), 8) 'dirSector
            datos(31) = StrToStr(datos(31), 12) 'dirCP
            datos(32) = TraerCodLocalidad(CStr(datos(32))) 'dirLocalidad
            datos(33) = TraerCodProvincia(CStr(datos(33)))   'dirProvincia
            datos(34) = TraerCodPartido(CStr(datos(34)))  'dirPartido
            datos(35) = TraerCodZona(CStr(datos(35)), CLng(datos(33)))  'dirZona
                If datos(35) = "" Then datos(35) = "NULL"
            datos(36) = TraerCodPais(CStr(datos(36))) 'dirPais
        
            StrSql = " INSERT INTO detdom (domnro,calle,nro,sector,torre,piso,oficdepto,manzana,codigopostal,"
            StrSql = StrSql & "locnro,provnro,paisnro, zonanro, partnro) "
            StrSql = StrSql & " VALUES ("
            StrSql = StrSql & NroDom
            StrSql = StrSql & ",'" & datos(24) & "'"
            StrSql = StrSql & ",'" & datos(25) & "'"
            StrSql = StrSql & ",'" & datos(30) & "'"
            StrSql = StrSql & ",'" & datos(28) & "'"
            StrSql = StrSql & ",'" & datos(26) & "'"
            StrSql = StrSql & ",'" & datos(27) & "'"
            StrSql = StrSql & ",'" & datos(29) & "'"
            StrSql = StrSql & ",'" & datos(31) & "'"
            StrSql = StrSql & "," & datos(32)
            StrSql = StrSql & "," & datos(33)
            StrSql = StrSql & "," & datos(36)
            StrSql = StrSql & "," & datos(35)
            StrSql = StrSql & "," & datos(34)
            StrSql = StrSql & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            If Err Then
                Err.Clear
            Else
                Flog.writeline "Inserte el domicilio "
            End If
            Flog.writeline "Inserto el Domicilio "
        Else
            NroDom = rs_Aux!domnro
        
            '--Si no tiene algun dato le agregamos unos ficticios--
            datos(24) = StrToStr(datos(24), 30) 'dirCalle
            datos(25) = StrToStr(datos(25), 8) 'dirNumero
            datos(26) = StrToStr(datos(26), 8) 'dirPiso
            datos(27) = StrToStr(datos(27), 8) 'dirDepto
            datos(28) = StrToStr(datos(28), 8) 'dirTorre
            datos(29) = StrToStr(datos(29), 8) 'dirManzana
            datos(30) = StrToStr(datos(30), 8) 'dirSector
            datos(31) = StrToStr(datos(31), 12) 'dirCP
            datos(32) = TraerCodLocalidad(CStr(datos(32))) 'dirLocalidad
            datos(33) = TraerCodProvincia(CStr(datos(33)))   'dirProvincia
            datos(34) = TraerCodPartido(CStr(datos(34)))  'dirPartido
            datos(35) = TraerCodZona(CStr(datos(35)), CLng(datos(33)))  'dirZona
            If datos(35) = "" Then datos(35) = "NULL"
            datos(36) = TraerCodPais(CStr(datos(36))) 'dirPais
        
            StrSql = " UPDATE detdom SET "
            StrSql = StrSql & " calle =" & "'" & datos(24) & "'"
            StrSql = StrSql & ",nro =" & "'" & datos(25) & "'"
            StrSql = StrSql & ",sector =" & "'" & datos(30) & "'"
            StrSql = StrSql & ",torre =" & "'" & datos(28) & "'"
            StrSql = StrSql & ",piso =" & "'" & datos(26) & "'"
            StrSql = StrSql & ",oficdepto =" & "'" & datos(27) & "'"
            StrSql = StrSql & ",manzana =" & "'" & datos(29) & "'"
            StrSql = StrSql & ",codigopostal =" & "'" & datos(31) & "'"
            StrSql = StrSql & ",locnro =" & datos(32)
            StrSql = StrSql & ",provnro =" & datos(33)
            StrSql = StrSql & ",paisnro =" & datos(36)
            StrSql = StrSql & ", zonanro =" & datos(35)
            StrSql = StrSql & ", partnro = " & datos(34)
            StrSql = StrSql & " WHERE domnro = " & NroDom
            objConn.Execute StrSql, , adExecuteNoRecords
            If Err Then
                Err.Clear
                Flog.writeline "Domicilio NO actualizado"
                Flog.writeline "SQL ejecutada: " & StrSql
            Else
                Flog.writeline "Domicilio actualizado"
            End If
        End If
        
        
        '--Telefonos-Personal--
        datos(21) = validatelefono(StrToStr(datos(21), 20))
        If datos(21) <> "" Then
            StrSql = "SELECT * FROM telefono  "
            StrSql = StrSql & " WHERE domnro = " & NroDom
            StrSql = StrSql & " AND telnro = " & "'" & datos(21) & "'"
            If rs_Aux.State = adStateOpen Then rs_Aux.Close
            OpenRecordset StrSql, rs_Aux
            If rs_Aux.EOF Then
                StrSql = " INSERT INTO telefono "
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                StrSql = StrSql & " (domnro, telnro, telfax, teldefault, telcelular,tipotel ) "
                StrSql = StrSql & " VALUES (" & NroDom & ", '" & datos(21) & "' ,0 , -1 ,0,1 ) "
                objConn.Execute StrSql, , adExecuteNoRecords
                If Err Then
                    Err.Clear
                    Flog.writeline "Error Insertando el telefono " & datos(21)
                    Flog.writeline "SQL ejecutada: " & StrSql
                Else
                    Flog.writeline "Inserte el telefono"
                End If
            End If
        End If
        
        '--Telefonos-segundo--
        datos(22) = validatelefono(StrToStr(datos(22), 20))
        If datos(22) <> "" Then
            StrSql = "SELECT * FROM telefono  "
            StrSql = StrSql & " WHERE domnro = " & NroDom
            StrSql = StrSql & " AND telnro = " & "'" & datos(22) & "'"
            If rs_Aux.State = adStateOpen Then rs_Aux.Close
            OpenRecordset StrSql, rs_Aux
            If rs_Aux.EOF Then
                StrSql = " INSERT INTO telefono "
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                StrSql = StrSql & " (domnro, telnro, telfax, teldefault, telcelular,tipotel ) "
                StrSql = StrSql & " VALUES (" & NroDom & ", '" & datos(22) & "' , 0, -1, 0,2 ) "
                objConn.Execute StrSql, , adExecuteNoRecords
                If Err Then
                    Err.Clear
                    Flog.writeline "Error Insertando el telefono " & datos(22)
                    Flog.writeline "SQL ejecutada: " & StrSql
                Else
                    Flog.writeline "Inserte el telefono2 "
                End If
            End If
        End If
    
    
        '--Complemento--
        If datos(15) = "" Then
            datos(15) = 0
        Else
            datos(15) = CLng(StrToInt(datos(15))) 'cantidadHijos
        End If
        datos(16) = StrToStr(datos(16), 60) 'imagen
        If (datos(17) = "" Or Not IsDate(datos(17))) Then
            'datos(17) = "NULL"
            datos(17) = ConvFecha(Date)
        Else
            datos(17) = ConvFecha(CDate(datos(17))) 'fechaIngresoCV
        End If
        datos(18) = StrToStr(datos(18), 250) 'referencias
        If datos(19) = "" Then
            datos(19) = TraerCodProcedencia("Otro") 'procedencia
        Else
            datos(19) = TraerCodProcedencia(CStr(datos(19))) 'procedencia
        End If
        If datos(20) = "" Then
            datos(20) = 0
        Else
            datos(20) = CDbl(StrToDbl(datos(20))) 'remuneracionPretendida
        End If
        
        'FGZ - 02/03/2006 Se agrego el estposnro = 4 (postulantre activo)
        StrSql = "SELECT * FROM pos_postulante  "
        StrSql = StrSql & " WHERE ternro = " & Ternro
        If rs_Aux.State = adStateOpen Then rs_Aux.Close
        OpenRecordset StrSql, rs_Aux
        If rs_Aux.EOF Then
            StrSql = " INSERT INTO pos_postulante "
            StrSql = StrSql & " ( ternro, posrempre, poscanhijos, posfoto, posfecpres, posref, procnro,estposnro) "
            StrSql = StrSql & " VALUES (" & Ternro & " ," & CDbl(datos(20)) & ", " & CLng(datos(15)) & ", '" & datos(16) & "', " & datos(17) & ",'" & datos(18) & "', " & datos(19) & ",4) "
            objConn.Execute StrSql, , adExecuteNoRecords
            If Err Then
                Flog.writeline "Error al inserte el Complemento: " & Err.Description
                Flog.writeline "SQL ejecutada: " & StrSql
                Err.Clear
            Else
                Flog.writeline "Inserte el Complemento "
            End If
        Else
            StrSql = "UPDATE pos_postulante SET "
            StrSql = StrSql & " posrempre = " & CDbl(datos(20))
            StrSql = StrSql & ", poscanhijos =" & CLng(datos(15))
            StrSql = StrSql & ", posfoto =" & "'" & datos(16) & "'"
            StrSql = StrSql & ", posfecpres =" & datos(17)
            StrSql = StrSql & ", posref =" & "'" & datos(18) & "'"
            StrSql = StrSql & ", procnro =" & datos(19)
            StrSql = StrSql & ", estposnro = 4"
            StrSql = StrSql & " WHERE ternro = " & Ternro
            objConn.Execute StrSql, , adExecuteNoRecords
            If Err Then
                Flog.writeline "Error al actualizar el Complemento: " & Err.Description
                Flog.writeline "SQL ejecutada: " & StrSql
                Err.Clear
            Else
                Flog.writeline "Complemento actualizado"
            End If
        End If
        
        '--Estudios-formales--(49) (50)
        Xconst = 0
        For a = 0 To 3
            If UBound(datos) > (Xconst + 37) Then
                If datos(Xconst + 37) <> "" Then
                    datos(Xconst + 37) = TraerCodNivelEstudio(datos(Xconst + 37))   'EFnivel8
                    'FGZ - 29/08/2005
                    'If Datos(Xconst + 38) = "Graduado" Then Datos(Xconst + 38) = -1 Else Datos(Xconst + 38) = 0
                    If datos(Xconst + 38) = -1 Then datos(Xconst + 38) = -1 Else datos(Xconst + 38) = 0
                        'Datos(Xconst + 38) = Datos(Xconst + 38)   'EFcompleto8
                    datos(Xconst + 39) = TraerCodTitulo(CStr(datos(Xconst + 39)), CLng(datos(Xconst + 37)))   'EFtitulo8
                    datos(Xconst + 40) = TraerCodInstitucionAbreviada(CStr(datos(Xconst + 40)))   'EFinstitucion8
                    datos(Xconst + 41) = TraerCodCarrera(CStr(datos(Xconst + 41)))    'EFcarrera8
                    If datos(Xconst + 42) <> "" Then
                        datos(Xconst + 42) = ConvFecha(CDate(datos(Xconst + 42)))   'EFfechaDesde8
                    Else
                        datos(Xconst + 42) = "NULL"
                    End If
                    If datos(Xconst + 43) <> "" Then
                        datos(Xconst + 43) = ConvFecha(CDate(datos(Xconst + 43)))   'EFfechaHasta8
                    Else
                        datos(Xconst + 43) = "NULL"
                    End If
                    datos(Xconst + 44) = StrToStr(datos(Xconst + 44), 30)   'EFpromedio8
                    datos(Xconst + 45) = StrToStr(datos(Xconst + 45), 60)   'EFrango8
                    If datos(Xconst + 46) <> "" And UCase(datos(Xconst + 46)) <> "NO" Then
                        datos(Xconst + 46) = -1  'EFestudiaActualmente8
                    Else
                        datos(Xconst + 46) = 0  'EFestudiaActualmente8
                    End If
            
                    'actualizo
                    StrSql = "SELECT * FROM cap_estformal  "
                    StrSql = StrSql & " WHERE nivnro = " & CLng(datos(Xconst + 37))
                    StrSql = StrSql & " AND ternro = " & Ternro
                    StrSql = StrSql & " AND titnro = " & datos(Xconst + 39)
                    StrSql = StrSql & " AND instnro = " & datos(Xconst + 40)
                    StrSql = StrSql & " AND carredunro = " & datos(Xconst + 41)
                    If rs_Aux.State = adStateOpen Then rs_Aux.Close
                    OpenRecordset StrSql, rs_Aux
                    If rs_Aux.EOF Then
                        StrSql = " INSERT INTO cap_estformal "
                        StrSql = StrSql & " ( nivnro, ternro, titnro, instnro, carredunro, capfecdes, capfechas, capcomp , capestact, caprango, capprom) "
                        StrSql = StrSql & " VALUES ("
                        StrSql = StrSql & CLng(datos(Xconst + 37))          'nivnro
                        StrSql = StrSql & "," & Ternro                      'ternro
                        StrSql = StrSql & "," & datos(Xconst + 39)          'titnro
                        StrSql = StrSql & "," & datos(Xconst + 40)          'instnro
                        StrSql = StrSql & "," & datos(Xconst + 41)          'carredunro
                        StrSql = StrSql & "," & datos(Xconst + 42)          'capfecdes
                        StrSql = StrSql & "," & datos(Xconst + 43)          'capfechas
                        StrSql = StrSql & "," & datos(Xconst + 38)          'capcomp
                        StrSql = StrSql & "," & datos(Xconst + 46)          'capestact
                        StrSql = StrSql & ",'" & datos(Xconst + 45) & "'"   'caprango
                        StrSql = StrSql & ",'" & datos(Xconst + 44) & "'"   'capprom
                        StrSql = StrSql & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If Err Then
                            Flog.writeline "Error al inserte el estudio formal: " & Err.Description
                            Flog.writeline "SQL ejecutada: " & StrSql
                            Err.Clear
                        Else
                            Flog.writeline "Inserte el estudio formal " & datos(Xconst + 37)
                            ActPasos = True
                        End If
                    Else
                        StrSql = "UPDATE  cap_estformal SET "
                        StrSql = StrSql & " capfecdes = " & datos(Xconst + 42)
                        StrSql = StrSql & ", capfechas =" & datos(Xconst + 43)
                        StrSql = StrSql & ", capcomp =" & datos(Xconst + 38)
                        StrSql = StrSql & ", capestact =" & datos(Xconst + 46)
                        StrSql = StrSql & ", caprango =" & "'" & datos(Xconst + 45) & "'"
                        StrSql = StrSql & ", capprom =" & "'" & datos(Xconst + 44) & "'"
                        StrSql = StrSql & " WHERE nivnro = " & CLng(datos(Xconst + 37))
                        StrSql = StrSql & " AND ternro = " & Ternro
                        StrSql = StrSql & " AND titnro = " & datos(Xconst + 39)
                        StrSql = StrSql & " AND instnro = " & datos(Xconst + 40)
                        StrSql = StrSql & " AND carredunro = " & datos(Xconst + 41)
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If Err Then
                            Flog.writeline "Error al inserte Al actualizar studio formal: " & Err.Description
                            Flog.writeline "SQL ejecutada: " & StrSql
                            Err.Clear
                        Else
                            Flog.writeline "Estudio formal " & datos(Xconst + 37) & " actualizado"
                            ActPasos = False
                        End If
                    End If
                End If
            Else
            End If
            Xconst = Xconst + 10
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 50)
        End If
        ActPasos = False
        
        
        '--Experiencia-Laboral----Empleos Anteriores--57 (58)
        Xconst = 0
        For a = 0 To 3
            If UBound(datos) > (Xconst + 77) Then
                If datos(Xconst + 78) <> "" And datos(Xconst + 77) <> "" Then
                    datos(Xconst + 77) = TraerCodCargo(CStr(datos(Xconst + 77)))    'ELcargoAnterior16
                    datos(Xconst + 78) = TraerCodListaEmpresa(CStr(datos(Xconst + 78)))   'ELempresa16 lempnro
                    datos(Xconst + 79) = StrToStr(datos(Xconst + 79), 200) 'ELtareaDesempenada16
                    If datos(Xconst + 80) <> "" Then
                        datos(Xconst + 80) = ConvFecha(CDate(datos(Xconst + 80)))  'ELfechaDesde16
                    Else
                        datos(Xconst + 80) = "NULL"
                    End If
                    If datos(Xconst + 81) <> "" Then
                        datos(Xconst + 81) = ConvFecha(CDate(datos(Xconst + 81)))  'ELfechaHasta16
                    Else
                        datos(Xconst + 81) = "NULL"
                    End If
                    If datos(Xconst + 82) = "" Then
                        datos(Xconst + 82) = 0
                    Else
                        datos(Xconst + 82) = StrToDbl(datos(Xconst + 82))   'ELremuneracion16
                    End If
                    If datos(Xconst + 83) <> "" Then
                        datos(Xconst + 83) = TraerCodCausa(CStr(datos(Xconst + 83)))   'ELcausaBaja16
                    Else
                        datos(Xconst + 83) = "NULL"
                    End If
                
                    StrSql = "SELECT * FROM empant  "
                    StrSql = StrSql & " WHERE empleado = " & Ternro
                    StrSql = StrSql & " AND empatareas = " & "'" & datos(Xconst + 79) & "'"
                    StrSql = StrSql & " AND lempnro = " & datos(Xconst + 78)
                    StrSql = StrSql & " AND carnro = " & datos(Xconst + 77)
                    If rs_Aux.State = adStateOpen Then rs_Aux.Close
                    OpenRecordset StrSql, rs_Aux
                    If rs_Aux.EOF Then
                        StrSql = " INSERT INTO empant "
                        'FGZ - 29/08/2005
                        'cambié los nombres de los campos donde inserta las fechas desde y hasta
                        'StrSql = StrSql & " ( empleado, empatareas, lempnro, empadesde, emmpahasta, carnro, emparemu ) "
                        StrSql = StrSql & " ( empleado, empatareas, lempnro, empaini, empafin, carnro, emparemu, caunro, empresa ) "
                        StrSql = StrSql & " VALUES (" & Ternro & ", '" & datos(Xconst + 79) & "' ," & datos(Xconst + 78) & "," & datos(Xconst + 80) & "," & datos(Xconst + 81) & "," & datos(Xconst + 77) & "," & datos(Xconst + 82) & "," & datos(Xconst + 83) & ", '" & Empresa & "' ) "
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If Err Then
                            Flog.writeline "Error al inserte el Empleo Anterior: " & Err.Description
                            Flog.writeline "SQL ejecutada: " & StrSql
                            Err.Clear
                        Else
                            Flog.writeline "Inserto los datos del Empleo Anterior"
                            ActPasos = True
                        End If
                    Else
                        StrSql = "UPDATE empant SET "
                        'FGZ - 29/08/2005
'                        StrSql = StrSql & " empadesde =" & Datos(Xconst + 120)
'                        StrSql = StrSql & ", emmpahasta =" & (Datos(Xconst + 121))
                        StrSql = StrSql & " empaini =" & datos(Xconst + 80)
                        StrSql = StrSql & ", empafin =" & (datos(Xconst + 81))
                        StrSql = StrSql & ", emparemu = " & datos(Xconst + 82)
                        StrSql = StrSql & ", caunro = " & datos(Xconst + 83)
                        StrSql = StrSql & " WHERE empantnro = " & rs_Aux!Empantnro
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If Err Then
                            Flog.writeline "Error al actualizar el Empleo Anterior: " & Err.Description
                            Flog.writeline "SQL ejecutada: " & StrSql
                            Err.Clear
                        Else
                            Flog.writeline "Actualizo los datos del Empleo Anterior"
                            ActPasos = False
                        End If
                    End If
                Else
                End If
            End If
            Xconst = Xconst + 7
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 58)
        End If
        ActPasos = False
    
    
        '--Idiomas--53 (54)
        ActPasos = False
        Xconst = 0
        For a = 0 To 3
            If UBound(datos) > (Xconst + 105) Then
                If datos(Xconst + 105) <> "" Then
                    If datos(Xconst + 106) <> "" Or datos(Xconst + 107) <> "" Or datos(Xconst + 108) <> "" Then
                        datos(Xconst + 105) = TraerCodIdioma(CStr(datos(Xconst + 105))) 'idioma1
                        datos(Xconst + 106) = TraerCodIdiNivel(CStr(datos(Xconst + 106))) 'idiomaLee1
                        datos(Xconst + 107) = TraerCodIdiNivel(CStr(datos(Xconst + 107))) 'idiomaHabla1
                        datos(Xconst + 108) = TraerCodIdiNivel(CStr(datos(Xconst + 108))) 'idiomaEscribe1
                        
                        If Not TieneIdioma(Ternro, CLng(datos(Xconst + 105))) Then
                            StrSql = " INSERT INTO emp_idi "
                            StrSql = StrSql & " (idinro, empleado, empidlee, empidhabla, empidescr) "
                            StrSql = StrSql & " VALUES (" & CLng(datos(Xconst + 105)) & ", " & Ternro & " ," & datos(Xconst + 106) & ", " & datos(Xconst + 107) & ", " & datos(Xconst + 108) & " ) "
                        Else
                            StrSql = " UPDATE emp_idi SET "
                            StrSql = StrSql & " empidlee = " & datos(Xconst + 106)
                            StrSql = StrSql & ", empidhabla = " & datos(Xconst + 107)
                            StrSql = StrSql & ", empidescr = " & datos(Xconst + 108)
                            StrSql = StrSql & " where empleado = " & Ternro & " and idinro = " & CLng(datos(Xconst + 105))
                        End If
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If Err Then
                            Flog.writeline "Error al inserte el Idioma " & datos(Xconst + 105) & "-" & Err.Description
                            Flog.writeline "SQL ejecutada: " & StrSql
                            Err.Clear
                        Else
                            Flog.writeline "Inserte el Idioma " & datos(Xconst + 105)
                            ActPasos = True
                        End If
                    End If
                End If
            End If
            Xconst = Xconst + 4
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 54)
        End If
        ActPasos = False
    
        
        '--Estudios-Informales--50 (51)
        ActPasos = False
        Xconst = 0
        For a = 0 To 3
            tempString = StrToStr(datos(Xconst + 121), 50) ''descCurso  estinfdesabr
            datos(Xconst + 121) = datos(Xconst + 121) ''descCurso  estinfdesabr
            datos(Xconst + 122) = TraerCodTipoCurso(StrToStr(datos(Xconst + 122), 50)) 'tipoCurso tipcurnro
            If datos(Xconst + 123) <> "" Then
                datos(Xconst + 123) = ConvFecha(datos(Xconst + 123)) 'fechaCurso  estinffecha
            Else
                datos(Xconst + 123) = ConvFecha(Date)
            End If
            datos(Xconst + 124) = TraerCodInstitucion(CStr(datos(Xconst + 124))) 'institucionCurso instnro
            If datos(Xconst + 121) = "" Or datos(Xconst + 122) = "" Or datos(Xconst + 124) = "" Then
                Flog.writeline "Error al insertar el estudio informal por falta de datos "
            Else
                'Reviso
                StrSql = "SELECT * FROM cap_estinformal  "
                StrSql = StrSql & " WHERE tipcurnro = " & CLng(datos(Xconst + 122))
                StrSql = StrSql & " AND ternro = " & Ternro
                StrSql = StrSql & " AND instnro = " & CLng(datos(Xconst + 124))
                If rs_Aux.State = adStateOpen Then rs_Aux.Close
                OpenRecordset StrSql, rs_Aux
                If rs_Aux.EOF Then
                    StrSql = " INSERT INTO cap_estinformal "
                    StrSql = StrSql & " (ternro, estinfdesabr, estinffecha, tipcurnro, instnro) "
                    StrSql = StrSql & " VALUES (" & Ternro & " , '" & tempString & "'," & datos(Xconst + 123) & "," & CLng(datos(Xconst + 122)) & "," & CLng(datos(Xconst + 124)) & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If Err Then
                        Flog.writeline "Error al insertar el estudio informal: " & Err.Description
                        Flog.writeline "SQL ejecutada: " & StrSql
                        Err.Clear
                    Else
                        Flog.writeline "Inserto los datos del estudio informal "
                        ActPasos = True
                    End If
                Else
                    StrSql = "UPDATE cap_estinformal SET "
                    StrSql = StrSql & " estinfdesabr = '" & tempString & "'"
                    StrSql = StrSql & ", estinffecha =" & (datos(Xconst + 123))
                    StrSql = StrSql & " WHERE tipcurnro = " & CLng(datos(Xconst + 122))
                    StrSql = StrSql & " AND ternro = " & Ternro
                    StrSql = StrSql & " AND instnro = " & CLng(datos(Xconst + 124))
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If Err Then
                        Flog.writeline "Error al actualizar el estudio informal: " & Err.Description
                        Flog.writeline "SQL ejecutada: " & StrSql
                        Err.Clear
                    Else
                        Flog.writeline "Actualizo los datos del estudio informal "
                        ActPasos = False
                    End If
                End If
            End If
            Xconst = Xconst + 4
        Next a
        If ActPasos Then
           Call InsertarPaso(Ternro, 51)
           ActPasos = False
        End If
        
        '--Especializaciones--51 (52)
        Xconst = 0
        ActPasos = False
        For a = 0 To 3
            If datos(Xconst + 139) <> "" Then
                datos(Xconst + 137) = TraerCodEspecializacion(CStr(datos(Xconst + 137))) 'tipo
                datos(Xconst + 138) = TraerCodEltoana(CStr(datos(Xconst + 138)), CLng(datos(Xconst + 137))) 'elemento
                datos(Xconst + 139) = TraerCodNivelEspecializacion(CStr(datos(Xconst + 139))) 'nivel
                
                'REVISO
                StrSql = "SELECT * FROM especemp  "
                StrSql = StrSql & " WHERE espnivnro = " & datos(Xconst + 139)
                StrSql = StrSql & " AND ternro = " & Ternro
                StrSql = StrSql & " AND eltananro = " & datos(Xconst + 138)
                If rs_Aux.State = adStateOpen Then rs_Aux.Close
                OpenRecordset StrSql, rs_Aux
                If rs_Aux.EOF Then
                    StrSql = " INSERT INTO especemp "
                    StrSql = StrSql & " (eltananro, ternro, espnivnro ) "
                    StrSql = StrSql & " VALUES (" & datos(Xconst + 138) & ", " & Ternro & " ," & datos(Xconst + 139) & ") "
    '                StrSql = StrSql & " VALUES (" & datosEltoAna(0, a) & ", " & ternro & " ," & Datos(Xconst + 139) & ") "
                
                    Err.Clear
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If Err Then
                        Flog.writeline "Error al insertar la especialidad: " & Err.Description
                        Flog.writeline "SQL ejecutada: " & StrSql
                        Err.Clear
                    Else
                        Flog.writeline "Actualizo los datos de la especialidad."
                        ActPasos = True
                    End If
                End If
            Else
            End If
            Xconst = Xconst + 3
        Next a
        If ActPasos Then
           'Flog.Writeline "Inserto los datos de la especialidad"
           Call InsertarPaso(Ternro, 52)
           ActPasos = False
        End If
        
        '--Tipos e Items de Informacion
        ActPasos = False
        Xconst = 0
        
        For a = 0 To 4
            If datos(Xconst + 149) <> "" Then
                datos(149 + Xconst) = UCase(datos(149 + Xconst)) ''descTipoInformacion
                
                TipItemInf(Xconst) = TraerCodTipInformacion(datos(149 + Xconst))
                
                If datos(150 + Xconst) <> "" Then
                    datos(150 + Xconst) = UCase(datos(150 + Xconst)) ''descItemInformacion
                    
                    TipItemInf(Xconst + 1) = TraerCodItemInformacion(datos(150 + Xconst), TipItemInf(Xconst))
                    
                    'AHORA TENGO QUE ASOCIARLE EL PAR AL POSTULANTE
                    Inserto = AsociarParAPostulante(TipItemInf(Xconst + 1), Ternro)
                    If Inserto = -1 Then
                        Flog.writeline "Se Asocio el Par con el Postulante"
                        ActPasos = True
                    Else
                        Flog.writeline "El Postulante ya tenia el Par asociado"
                    End If
                Else
                    Flog.writeline "Falto especificar el Item de Informacion"
                End If
            Else
                Flog.writeline "Falto especificar el Tipo de Informacion"
            End If

            Xconst = Xconst + 2
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 86)
        End If
        ActPasos = False

    End If
Fin:
Exit Sub

Manejador_De_Error:
    HuboError = True
    Flog.writeline "SQL ejecutada: " & StrSql
    Texto = ": " & Err.Description
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    'Fue error de Consulta de SQL
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    GoTo Fin
    
End Sub

Public Sub LineaModelo_287(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Interfaz de carga masiva de tarjetas para empleados con sincronizacion para spec
' Autor      : Sebastian Stremel
' Fecha      : 15/11/2013
' Descripcion:
' Ultima Mod.:
' ---------------------------------------------------------------------------------------------
' El formato es:    Legajo
'                   Tipo de tarjeta (Descripcion)
'                   Numero
'                   Fecha Desde
'                   Fecha Hasta
'
' ---------------------------------------------------------------------------------------------
Dim I As Long
Dim datos
Dim l_empleg As Long 'legajo del empleado
Dim l_ternro As Long 'Codigo interno del empleado
Dim l_tptrdes As String 'Descripcion abreviada de la tarjeta
Dim l_tptrnro As String 'Codigo interno tarjeta
Dim l_hstjnrotar As String 'Numero de tarjeta
Dim l_hstjfecdes As String 'Fecha desde
Dim l_hstjfechas  As String 'Fecha Hasta
Dim l_hstjemp As Integer
Dim l_prueba As String 'variable auxiliar
Dim l_aux As Date 'variable auxiliar
Dim l_FecDesdeBD As Date 'variable auxiliar
Dim l_FecHastaBD As Date 'variable auxiliar
Dim l_FecDesdeArch As Date 'variable auxiliar
Dim l_FecHastaArch As Date 'variable auxiliar
Dim Grabar As Boolean 'variable auxiliar
Dim Inserto As Boolean
Dim rs_consulta As New ADODB.Recordset
Dim rs_motivo As New ADODB.Recordset
Dim l_extension As Long
On Error GoTo Manejador_De_Error:
Inserto = False
Flog.writeline "procesando linea " & strLinea
Flog.writeline " "
datos = Split(strLinea, separador)

'Controlo que la linea tenga los 5 registros
If UBound(datos) <> 4 Then
    If UBound(datos) < 4 Then
        Flog.writeline "    ERROR. La cantidad de registros de la línea es menor a la esperada."
    Else
        Flog.writeline "    ERROR. La cantidad de registros de la línea es mayor a la esperada."
    End If
    Exit Sub
End If

For I = 0 To UBound(datos)
    datos(I) = Trim(datos(I))
Next I
    
Grabar = True

'Legajo
If Not IsNumeric(datos(0)) Then
    Flog.writeline "El legajo: " & datos(0) & " no es numérico"
    Exit Sub
End If
    
'Verifico el largo del campo
'    If Len(datos(0)) > 6 Then
'        Flog.writeline "El numero de legajo: " & datos(0) & " tiene más de 6 digitos"
'        Exit Sub
'    End If
    
l_empleg = datos(0)

'Busco el numero interno del empleado
StrSql = "SELECT * FROM empleado where empleg = " & l_empleg
OpenRecordset StrSql, rs_consulta
If rs_consulta.EOF Then
    Flog.writeline "El numero de legajo: " & datos(0) & " no existe"
    rs_consulta.Close
    Exit Sub
Else
    l_ternro = rs_consulta!Ternro
    rs_consulta.Close
End If

'Tipo de tarjeta
'Verifico el largo del campo
If Len(datos(1)) > 30 Then
    Flog.writeline "El tipo de tarjeta: " & datos(1) & " tiene más de 30 caracteres"
    Exit Sub
End If

'Que no sea nulo o vacio
If EsNulo(datos(1)) Then
    Flog.writeline "El tipo de tarjeta es nulo o vacio: "
    Exit Sub
End If
    
'Busco tipo de tarjeta y obtengo el codigo interno
l_tptrdes = datos(1)
StrSql = "SELECT tptrnro, tptrdes, tptrext FROM gti_tiptar " & _
        " WHERE tptrdes = '" & l_tptrdes & "'"
OpenRecordset StrSql, rs_consulta
If rs_consulta.EOF Then
    rs_consulta.Close
    Flog.writeline "No se encontró el tipo de tarjeta con esa descripcion: " & l_tptrdes
    Exit Sub
Else
    l_tptrnro = rs_consulta!tptrnro
    l_extension = rs_consulta!tptrext
    rs_consulta.Close
End If

'Numero de tarjeta
'Verifico que no sea nulo o vacio
If EsNulo(datos(2)) Then
    Flog.writeline "El Numero de tarjeta es nulo o vacio: "
    Exit Sub
End If

'Verifico el largo del campo
If CLng(Len(datos(2))) > CLng(l_extension) Then
    Flog.writeline "El numero de tarjeta: " & datos(2) & " tiene más caracteres de los permitidos para el tipo" & l_tptrdes
    Exit Sub
End If


l_hstjnrotar = datos(2)

If CLng(Len(l_hstjnrotar)) < CLng(l_extension) Then
    l_hstjnrotar = Format_StrNro(l_hstjnrotar, l_extension, True, "0")
Else
    l_hstjnrotar = l_hstjnrotar
End If

'Fecha DESDE
If EsNulo(datos(3)) Then
    Flog.writeline "La fecha es nula o esta vacia: "
    Exit Sub
Else
    If Not IsDate(datos(3)) Then
        Flog.writeline "La fecha desde no es valida: "
        Exit Sub
    End If
    l_hstjfecdes = ConvFecha(CDate(datos(3)))
    l_aux = CDate(datos(3))
   
    'Fecha HASTA
    If EsNulo(datos(4)) Then
        l_hstjfechas = "Null"
    Else
        If Not IsDate(datos(4)) Then
            Flog.writeline "La fecha hasta no es valida: "
            Exit Sub
        End If
        l_hstjfechas = ConvFecha(CDate(datos(4)))
    End If
'    Verifico que para ese empleado si la fecha_desde que viene del archivo es mayor a la
'    fecha_desde en la BD y la fecha_hasta (de la BD )en null cierro el registro poniendole fecha_hasta con
'    un dia menos que la fecha desde
    
    StrSql = "SELECT * FROM gti_histarjeta  WHERE " & _
                " ternro = " & l_ternro & _
                " And hstjfecdes < " & l_hstjfecdes & _
                " And hstjfechas Is Null"
    OpenRecordset StrSql, rs_consulta
    
    If rs_consulta.EOF Then
    
        'Si no encontre ningun registro con esas condiciones..
        rs_consulta.Close
        
        'Traigo todos los registros de ese empleado que tengan fecha hasta

        StrSql = "SELECT * FROM gti_histarjeta  WHERE " & _
                " ternro = " & l_ternro & _
                " And hstjfechas IS NOT NULL"
        OpenRecordset StrSql, rs_consulta
        
        Do While rs_consulta.EOF = False And Grabar
            'Asigno las fechas leidas del archivo y las leidas de la BD a variables auxiliares para poder compararlas
            l_FecDesdeBD = rs_consulta!hstjfecdes
            l_FecHastaBD = rs_consulta!hstjfechas
            l_FecDesdeArch = CDate(datos(3))
            'Segun si tiene fecha hasta el registro del archivo hago diferentes comparaciones
            If Not EsNulo(datos(4)) Then
                l_FecHastaArch = CDate(datos(4))
                'Comparo fechas. Lo que hay entre parentesis me tiene que dar true para que sea un archivo valido
                Grabar = Grabar And (l_FecDesdeArch > l_FecDesdeBD And l_FecHastaBD < l_FecDesdeArch) Or (l_FecDesdeArch < l_FecDesdeBD And l_FecHastaArch < l_FecDesdeBD)
            Else
                'Comparo fechas. Lo que hay entre parentesis me tiene que dar true para que sea un archivo valido
                Grabar = Grabar And Not (l_FecDesdeBD <= l_FecDesdeArch And l_FecDesdeArch <= l_FecHastaBD)
            End If
            rs_consulta.MoveNext
        Loop
    Else
        '    si encontre un registro con esas condiciones (la fecha_desde que viene del archivo es mayor a la
        '    fecha_desde en la BD y la fecha_hasta de la BD esta en null)
        '      Modifico el registro
        '           Resto un dia a la fechadesde
        l_aux = DateAdd("d", -1, l_aux)
        l_prueba = ConvFecha(l_aux)

        StrSql = "UPDATE gti_histarjeta SET hstjfechas = " & l_prueba & ", sinc = 0, bpronro=" & NroProcesoBatch
        StrSql = StrSql & " WHERE ternro = " & l_ternro
        StrSql = StrSql & " AND hstjfecdes < " & l_hstjfecdes & ""
        StrSql = StrSql & " And hstjfechas Is Null"
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline "Se modifico en gti_histarjeta:  la Fecha hasta " & l_prueba & " - para el empleado Numero: " & l_ternro
        rs_consulta.Close
        
    End If
'   Pregunto si tengo que grabar
         If Grabar = True Then
            If (EsNulo(datos(4))) Then
                'Hago una consulta para saber si tengo registros con fecha desde(bd) mayor a fecha desde del archivo
                'y lo ordeno por fecha desde para comprar con la primera que me aparece
                StrSql = "SELECT hstjfecdes FROM gti_histarjeta  WHERE " & _
                " ternro = " & l_ternro & _
                " And hstjfecdes >" & l_hstjfecdes & "ORDER BY hstjfecdes"
                OpenRecordset StrSql, rs_consulta
                If rs_consulta.EOF = False Then
                     l_aux = rs_consulta!hstjfecdes
                     l_aux = DateAdd("d", -1, l_aux)
                     l_hstjfechas = ConvFecha(l_aux)
                     rs_consulta.Close
                End If
             End If
            'Se le asigna 0 por default
            l_hstjemp = 0
        
            'Grabo en la tabla  gti_histarjeta el registro
            StrSql = "INSERT INTO gti_histarjeta ("
            StrSql = StrSql & "hstjfecdes,"
            StrSql = StrSql & "hstjfechas,"
            StrSql = StrSql & "ternro,"
            StrSql = StrSql & "hstjemp,"
            StrSql = StrSql & "tptrnro,"
            StrSql = StrSql & "devuelta,"
            StrSql = StrSql & "hstjnrotar,"
            StrSql = StrSql & "sinc,"
            StrSql = StrSql & "bpronro"
            StrSql = StrSql & ") VALUES ("
            StrSql = StrSql & "" & l_hstjfecdes & ","
            StrSql = StrSql & "" & l_hstjfechas & ","
            StrSql = StrSql & "" & l_ternro & ","
            StrSql = StrSql & "" & l_hstjemp & ","
            StrSql = StrSql & "" & l_tptrnro & ","
            StrSql = StrSql & "0," & "'" & l_hstjnrotar & "',"
            StrSql = StrSql & "0," & NroProcesoBatch
            StrSql = StrSql & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            'Escribo en en Log
            Flog.writeline "Se inserto el gti_histarjeta: Fecha Desde: " & l_hstjfecdes & " - Fecha Hasta: " & l_hstjfechas & " - Cod interno del empleado: " & l_ternro & " - hstjemp: " & l_hstjemp & " - Codigo Interno: " & l_tptrnro & " - Numero de Tarjeta: " & l_hstjnrotar
            Inserto = True
        Else
        '   Pasa por aca cuando se superponen las fechas
            Flog.writeline "NO Se inserto el registro en gti_histarjeta  Motivo: FECHAS SUPERPUESTAS" & " - Numero Legajo: " & l_empleg & " - Cod interno del empleado: " & l_ternro
        End If
End If
    
'    If Inserto Then
'        'inserto en batch proceso para que dispare el proceso de lectura de registraciones
'        StrSql = " INSERT INTO batch_proceso "
'        StrSql = StrSql & " (btprcnro, bprcfecha, bprchora, iduser, bprcfecdesde, bprcfechasta, bprcparam,"
'        StrSql = StrSql & " bprcestado, bprcprogreso, bprcfecfin, bprchorafin, bprctiempo, empnro, "
'        StrSql = StrSql & " bprcempleados,bprcurgente,bprcTipoModelo) "
'        StrSql = StrSql & " VALUES "
'        StrSql = StrSql & " (366," & ConvFecha(Date) & ",'" & Format(Now, "hh:mm:ss ") & "','" & usuario & "', null,null ," & NroProcesoBatch & ", 'Pendiente', null , null, null, null, 0, null,0,null)"
'        objConn.Execute StrSql, , adExecuteNoRecords
'        Flog.writeline "Inserto en batch_proceso para que dispare el proceso de lectura de registraciones SQL:" & StrSql
'        'hasta aca
'    End If
    'cierro y libero
    If rs_consulta.State = adStateOpen Then rs_consulta.Close
    Set rs_consulta = Nothing

Fin:
    Exit Sub

Manejador_De_Error:
    HuboError = True
    'Resume Next
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    If InStr(1, Err.Description, "ODBC") > 0 Then
        'Fue error de Consulta de SQL
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
        Flog.writeline
    End If
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    GoTo Fin
End Sub

Public Sub LineaModelo_288(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Inserta Novedad segun formato
' Autor      : LED - Basado en el modelo 354
'              El formato es:
'                   Formato 1
'                       Legajo; conccod; tpanro; monto
'                   Formato 2.6
'                       Legajo; conccod; tpanro; monto; modelo asiento; estructura
'                   Formato 2.7
'                       Legajo; conccod; tpanro; monto; modelo asiento; estructura; estructura2
'                   Formato 3.8
'                       Legajo; conccod; tpanro; monto; modelo asiento; estructura; estructura2; estructura3

'                   ó
'                   Formato 2.1
'                       Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta
'                   Formato 2.2
'                       Legajo; conccod; tpanro; monto; FechaDesde
'                   Formato 2.3
'                       Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta; modelo asiento; estructura
'                   Formato 2.4
'                       Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta; modelo asiento; estructura; estructura2
'                   Formato 2.5
'                       Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta; modelo asiento; estructura; estructura2; estructura3
'                   Formato 2.6
'                       Legajo; conccod; tpanro; monto; FechaDesde; modelo asiento; estructura
'                   Formato 2.7
'                       Legajo; conccod; tpanro; monto; FechaDesde; modelo asiento; estructura; estructura2
'                   Formato 3.8
'                       Legajo; conccod; tpanro; monto; FechaDesde; modelo asiento; estructura; estructura2; estructura3

'                   ó
'                   Formato 3
'                       Legajo; conccod; tpanro; monto; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro)
'                   Formato 3.2
'                       Legajo; conccod; tpanro; monto; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro); modelo asiento; estructura
'                   Formato 3.3
'                       Legajo; conccod; tpanro; monto; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro); modelo asiento; estructura; estructura2
'                   Formato 3.4
'                       Legajo; conccod; tpanro; monto; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro); modelo asiento; estructura; estructura2; estructura3

'                   ó
'                   Formato 4
'                       Legajo; conccod; tpanro; monto; tipo motivo; motivo
'                   Formato 4.2
'                       Legajo; conccod; tpanro; monto; tipo motivo; motivo; modelo asiento; estructura
'                   Formato 4.3
'                       Legajo; conccod; tpanro; monto; tipo motivo; motivo; modelo asiento; estructura; estructura2
'                   Formato 4.4
'                       Legajo; conccod; tpanro; monto; tipo motivo; motivo; modelo asiento; estructura; estructura2; estructura3

'                   ó
'                   Formato 5
'                       Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta; tipo motivo; motivo
'                   Formato 5.2
'                       Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta; tipo motivo; motivo; modelo asiento; estructura
'                   Formato 5.3
'                       Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta; tipo motivo; motivo; modelo asiento; estructura; estructura2
'                   Formato 5.4
'                       Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta; tipo motivo; motivo; modelo asiento; estructura; estructura2; estructura3

'                   ó
'                   Formato 6
'                       Legajo; conccod; tpanro; monto; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro); tipo motivo; motivo
'                   Formato 6.2
'                       Legajo; conccod; tpanro; monto; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro); tipo motivo; motivo; modelo asiento; estructura
'                   Formato 6.3
'                       Legajo; conccod; tpanro; monto; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro); tipo motivo; motivo; modelo asiento; estructura; estructura2
'                   Formato 6.4
'                       Legajo; conccod; tpanro; monto; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro); tipo motivo; motivo; modelo asiento; estructura; estructura2; estructura3

'                   ó
'                   Formato 7.1
'                       Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro); tipo motivo; motivo
'                   Formato 7.2
'                       Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro); tipo motivo; motivo; modelo asiento; estructura
'                   Formato 7.3
'                       Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro); tipo motivo; motivo; modelo asiento; estructura; estructura2
'                   Formato 7.4
'                       Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro); tipo motivo; motivo; modelo asiento;estructura;estructura2;estructura3




' Fecha      : 29/07/2004
' Ultima Mod.: 14/06/2007.Gustavo Ring, se verifica que el usuario tenga permiso
'              en el concepto que se va a ingresar como novedad.
' Ultima Mod.: 07/09/2007. FGZ, Se sacó esto porque no es para el estandar.
'           se verifica que el usuario tenga permiso en el concepto que se va a ingresar como novedad.
' Ultima Mod.: 26/03/2009. Diego Nuñez, Se agregaron los formatos del 4 al 7. Compatibilidad con tipo de motivo y motivo.
' Ultima Mod.: 23/07/2009. Martin Ferraro, PisarNovedad (bool) se cambio por AccionNovedad (int) que permite:
'                                                                                                       -1 Reemplazar Novedades
'                                                                                                       0 Mantiene Novedades
'                                                                                                       1 Sumar Novedades
'              06-12-2010 - Leticia A. - elimina caracteres invalidos de diferentes campos.
'              24-10-2011 - Margiotta, Emanuel - Se agrego la vista de empleado.
'              18-04-2012 - Zamarbide Juan - Se cambió el tipo de dato de la variablo Monto de Single a Double
'                           CAS-15590 - NORTHGATEARINSO - Error en campos interface novedades
'              21/11/2012  Gonzalez Nicolás - CAS-17567 - No se permite insertar una novedad con Vigencia cuando ya hay una existente con mismo CO y PAR.


'             '13/12/2012 - Gonzalez Nicolás - Copia 211 + Control de vigencia al remplazar novedades.
' ---------------------------------------------------------------------------------------------

Dim pos1 As Long
Dim pos2 As Long
    
Dim Tercero As Long
Dim NroLegajo As Long

Dim ConcNro As Long
Dim ConcCod As String
Dim fornro As Long

Dim tpanro As Long
Dim Aux_Monto As String
Dim Monto As Double
Dim FechaDesde As String
Dim FechaHasta As String

Dim FechaDesdeAux As String 'V4.54
Dim FechaHastaAux As String 'V4.54

Dim PeriodoDesde
Dim PeriodoHasta
Dim TieneVigencia As Boolean
Dim EsRetroactivo As Boolean

Dim TipoMotivo As String
Dim Motivo As String

Dim Aux As String
Dim Encontro As Boolean

Dim perfsegcon As Integer
Dim tienePermiso As Integer

Dim sinVig As Boolean
Dim StrSqlAux As String ' 4.54
Dim ExisteNovedad As Boolean
Dim InsertoNovedad As Boolean ' 4.54

Dim rs_Empleado As New ADODB.Recordset
Dim rs_Concepto As New ADODB.Recordset
Dim rs_TipoPar As New ADODB.Recordset
Dim rs_NovEmp As New ADODB.Recordset
Dim rs_NovEmp2 As New ADODB.Recordset
Dim rs_Periodo As New ADODB.Recordset
Dim rs_modAsi As New ADODB.Recordset
Dim rs_con_for_tpa As New ADODB.Recordset
Dim rs_seguridad As New ADODB.Recordset
Dim rs_TipoMotivo As New ADODB.Recordset
Dim rs_cft_resumen As New ADODB.Recordset
Dim rs_Estructura As New ADODB.Recordset
Dim rs_Aux As New ADODB.Recordset

Dim nenro
Dim tieneDistribucion
Dim masinro
Dim tenro1
Dim estrnro1
Dim tenro2
Dim estrnro2
Dim tenro3
Dim estrnro3

' El formato es:
' Formato 1
' Legajo; conccod; tpanro; monto
' ó
' Formato 2.1
' Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta
' ó
' Formato 2.2
' Legajo; conccod; tpanro; monto; FechaDesde
' ó
' Formato 3
' Legajo; conccod; tpanro; monto; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro)
' ó
' Formato 4
' Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro)
    
    On Error GoTo Manejador_De_Error
    Tabs = 1
    
    TieneVigencia = False
    EsRetroactivo = False

    Texto = "Procesando linea " & strLinea
    Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    
    NroColumna = NroColumna + 1
    'Nro de Legajo
    pos1 = 1
    pos2 = InStr(pos1, strLinea, separador)
    If IsNumeric(Mid$(strLinea, pos1, pos2 - pos1)) Then
        NroLegajo = Mid$(strLinea, pos1, pos2 - pos1)
    Else
        Texto = ": " & "El legajo no es numerico "
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call InsertaError(1, 8)
        HuboError = True
        Exit Sub
    End If
    
   
    NroColumna = NroColumna + 1
    'Concepto
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    ConcCod = Mid(strLinea, pos1, pos2 - pos1)
    ConcCod = EliminarCHInvalidosII(ConcCod, 1, "")
    
    
    NroColumna = NroColumna + 1
    'Tipo de Parametro
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    tpanro = Mid(strLinea, pos1, pos2 - pos1)
    

    NroColumna = NroColumna + 1
    'Monto
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    If pos2 = 0 Then
        pos2 = Len(strLinea)
        Aux_Monto = Mid(strLinea, pos1, pos2)
        Monto = CDbl(Replace(CStr(Aux_Monto), SeparadorDecimal, ".")) 'Modificado ver 4.15
    Else
        Aux_Monto = Mid(strLinea, pos1, pos2 - pos1)
        Monto = CDbl(Replace(CStr(Aux_Monto), SeparadorDecimal, ".")) 'Modificado ver 4.15
        
        'Puede veniar Fecha Desde; fecha Hasta ó Retroactivo, Periodo desde , Periodo Hasta
        pos1 = pos2 + 1
        pos2 = InStr(pos1 + 1, strLinea, separador)
        
        If pos2 > 0 Then
            NroColumna = NroColumna + 1
            Aux = Mid(strLinea, pos1, pos2 - pos1)
            
            If IsDate(Aux) Then
                TieneVigencia = True
                'Fecha desde
                FechaDesde = Mid(strLinea, pos1, pos2 - pos1)
            
                NroColumna = NroColumna + 1
                'Fecha Hasta
                pos1 = pos2 + 1
                pos2 = InStr(pos1, strLinea, separador)
                
                If pos2 > 0 Then
                    FechaHasta = Mid(strLinea, pos1, pos2 - pos1)
                    If IsDate(FechaHasta) Then
                        FechaHasta = CDate(FechaHasta)
                    Else
                        If Not EsNulo(FechaHasta) Then
                            Texto = ": Fecha no valida "
                            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                            Call InsertaError(1, 4)
                            HuboError = True
                            Exit Sub
                        End If
                    End If
                    NroColumna = NroColumna + 1
                    'Marca de Retroactividad
                    pos1 = pos2 + 1
                    pos2 = InStr(pos1 + 1, strLinea, separador)
                    Aux = Mid(strLinea, pos1, pos2 - pos1)
                    If UCase(Aux) = "SI" Then
                        EsRetroactivo = True
                    Else
                        EsRetroactivo = False
                    End If
                    If EsRetroactivo Then
                        'Periodo desde
                        pos1 = pos2 + 1
                        pos2 = InStr(pos1 + 1, strLinea, separador)
                        PeriodoDesde = Mid(strLinea, pos1, pos2 - pos1)
                        'Periodo hasta
                        pos1 = pos2 + 1
                        pos2 = InStr(pos1 + 1, strLinea, separador)
                        If pos2 > 0 Then 'Se especifican tipo de motivo y motivo
                            PeriodoHasta = Mid(strLinea, pos1, pos2 - pos1)
                            'Tipo de motivo
                            pos1 = pos2 + 1
                            pos2 = InStr(pos1 + 1, strLinea, separador)
                            If pos2 > 0 Then
                                TipoMotivo = Mid(strLinea, pos1, pos2 - pos1)
                                pos1 = pos2 + 1
                                pos2 = InStr(pos1 + 1, strLinea, separador)
                                If pos2 > 0 Then
                                    'Motivo
                                    Motivo = Mid(strLinea, pos1, pos2 - pos1)
                                    Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                                Else
                                    'Motivo
                                    pos2 = Len(strLinea)
                                    Motivo = Mid(strLinea, pos1, pos2)
                                    Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                                End If
                            Else
                                pos2 = Len(strLinea)
                                TipoMotivo = Mid(strLinea, pos1, pos2)
                                'Motivo
                                Motivo = ""
                            End If
                        Else
                            pos2 = Len(strLinea)
                            PeriodoHasta = Mid(strLinea, pos1, pos2)
                        End If
                    Else 'el siguiente dato es el tipo de motivo
                        TipoMotivo = Aux
                        pos1 = pos2 + 1
                        pos2 = InStr(pos1 + 1, strLinea, separador)
                        If pos2 > 0 Then 'Se especifican tipo de motivo y motivo
                            'Motivo
                            Motivo = Mid(strLinea, pos1, pos2 - pos1)
                            Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                        Else
                            pos2 = Len(strLinea)
                            Motivo = Mid(strLinea, pos1, pos2)
                            Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                        End If
                    End If
                    
                Else
                    pos2 = Len(strLinea)
                    FechaHasta = Mid(strLinea, pos1, pos2)
                    TieneVigencia = True
                End If
            Else
                If UCase(Aux) = "SI" Then
                    EsRetroactivo = True
                Else
                    EsRetroactivo = False
                End If
                If EsRetroactivo Then
                    'Periodo desde
                    pos1 = pos2 + 1
                    pos2 = InStr(pos1 + 1, strLinea, separador)
                    PeriodoDesde = Mid(strLinea, pos1, pos2 - pos1)
                    'Periodo hasta
                    pos1 = pos2 + 1
                    pos2 = InStr(pos1 + 1, strLinea, separador)
                    If pos2 > 0 Then 'Se especifican tipo de motivo y motivo
                        PeriodoHasta = Mid(strLinea, pos1, pos2 - pos1)
                        'Tipo de motivo
                        pos1 = pos2 + 1
                        pos2 = InStr(pos1 + 1, strLinea, separador)
                        If pos2 > 0 Then
                            TipoMotivo = Mid(strLinea, pos1, pos2 - pos1)
                            pos1 = pos2 + 1
                            pos2 = InStr(pos1 + 1, strLinea, separador)
                            If pos2 > 0 Then
                                'Motivo
                                Motivo = Mid(strLinea, pos1, pos2 - pos1)
                                Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                            Else
                                'Motivo
                                pos2 = Len(strLinea)
                                Motivo = Mid(strLinea, pos1, pos2)
                                Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                            End If
                        Else
                            pos2 = Len(strLinea)
                            TipoMotivo = Mid(strLinea, pos1, pos2)
                            'Motivo
                            Motivo = ""
                        End If
                    Else
                        pos2 = Len(strLinea)
                        PeriodoHasta = Mid(strLinea, pos1, pos2)
                    End If
                Else 'el siguiente dato es el tipo de motivo
                    TipoMotivo = Aux
                    pos1 = pos2 + 1
                    pos2 = InStr(pos1 + 1, strLinea, separador)
                    If pos2 > 0 Then 'Se especifican tipo de motivo y motivo
                        'Motivo
                        Motivo = Mid(strLinea, pos1, pos2 - pos1)
                        Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                    Else
                        pos2 = Len(strLinea)
                        Motivo = Mid(strLinea, pos1, pos2)
                        Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                    End If
                End If
            End If
        Else
            If Not pos1 >= Len(strLinea) Then
                'Viene Vigencia con fecha desde y sin fecha hasta
                pos2 = Len(strLinea)
                FechaDesde = Mid(strLinea, pos1, pos2)
                TieneVigencia = True
                FechaHasta = ""
            End If
        End If
    End If
    
    'LED - 17/12/2013
    'despues de levantar todos los datos del modelo 354, busco los datos de la distribucion
    'Codigo de modelo de asiento
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    If pos2 > 0 And pos2 < Len(strLinea) Then 'Se especifican tipo de motivo y motivo
        masinro = Mid(strLinea, pos1, pos2 - pos1)
        masinro = EliminarCHInvalidosII(masinro, 1, "")
    Else
        pos2 = Len(strLinea)
        masinro = ""
        masinro = ""
    End If
    'Estructura 1
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    If pos2 > 0 Then 'Se especifican tipo de motivo y motivo
        'pos1 = pos2 + 1
        'pos2 = InStr(pos1 + 1, strLinea, separador)
        'Motivo
        estrnro1 = Mid(strLinea, pos1, pos2 - pos1)
        estrnro1 = EliminarCHInvalidosII(estrnro1, 1, "")
        
            'posible Estructura 2 '-----------------------------------------------------
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    If pos2 > 0 Then 'Se especifican tipo de motivo y motivo
        'pos1 = pos2 + 1
        'pos2 = InStr(pos1 + 1, strLinea, separador)
        'Motivo
        estrnro2 = Mid(strLinea, pos1, pos2 - pos1)
        estrnro2 = EliminarCHInvalidosII(estrnro2, 1, "")
        
        'posible Estructura 3 '-----------------------------------------------------
        pos1 = pos2 + 1
        pos2 = InStr(pos1 + 1, strLinea, separador)
        If pos2 > 0 Then 'Se especifican tipo de motivo y motivo
            'pos1 = pos2 + 1
            'pos2 = InStr(pos1 + 1, strLinea, separador)
            'Motivo
            estrnro3 = Mid(strLinea, pos1, pos2 - pos1)
            estrnro3 = EliminarCHInvalidosII(estrnro3, 1, "")
        Else
            pos2 = Len(strLinea)
            estrnro3 = Mid(strLinea, pos1, pos2)
            estrnro3 = EliminarCHInvalidosII(estrnro3, 1, "")
        End If
    
    Else
        pos2 = Len(strLinea)
        estrnro2 = Mid(strLinea, pos1, pos2)
        estrnro2 = EliminarCHInvalidosII(estrnro2, 1, "")
    End If
    Else
        pos2 = Len(strLinea)
        estrnro1 = Mid(strLinea, pos1, pos2)
        estrnro1 = EliminarCHInvalidosII(estrnro1, 1, "")
    End If
    'LED - 17/12/2013




' ====================================================================
'   Validar los parametros Levantados


'EAM- Verifica que exista el legajo para la vista de empleado
'StrSql = "SELECT * FROM v_empleadoproc where empleg = " & NroLegajo
StrSql = "SELECT * FROM empleado where empleg = " & NroLegajo
OpenRecordset StrSql, rs_Empleado
If rs_Empleado.EOF Then
    Texto = ": " & "No se encontro el legajo " & NroLegajo
    NroColumna = 1
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(1, 8)
    HuboError = True
    Exit Sub
Else
    Tercero = rs_Empleado!Ternro
End If


'Que exista el concepto
StrSql = "SELECT * FROM concepto WHERE conccod = '" & ConcCod & "'"
'StrSql = StrSql & " OR conccod = '" & Conccod & "'"
OpenRecordset StrSql, rs_Concepto
If rs_Concepto.EOF Then
    Texto = ": " & "No se encontro el Concepto " & ConcCod
    NroColumna = 2
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(2, 10)
    HuboError = True
    Exit Sub
Else
    ConcNro = rs_Concepto!ConcNro
    fornro = rs_Concepto!fornro
End If

'Que exista el tipo de Parametro
StrSql = "SELECT * FROM tipopar WHERE tpanro = " & tpanro
OpenRecordset StrSql, rs_TipoPar

If rs_TipoPar.EOF Then
    Texto = ": " & "No se encontro el Tipo de Parametro " & tpanro
    NroColumna = 3
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(3, 11)
    HuboError = True
    Exit Sub
End If


'FGZ - 27/01/2004
'Faltaria revisar que el par concepto-parametro se resuelva por novedad
StrSql = "SELECT * FROM con_for_tpa "
StrSql = StrSql & " WHERE concnro = " & ConcNro
StrSql = StrSql & " AND fornro =" & fornro
StrSql = StrSql & " AND tpanro =" & tpanro
OpenRecordset StrSql, rs_con_for_tpa

If rs_con_for_tpa.EOF Then
    Texto = ": " & "El parametro " & tpanro & " no esta asociado a la formula del concepto " & ConcCod
    NroColumna = 3
    Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, "")
    Call InsertaError(3, 11)
    HuboError = True
    Exit Sub
Else
    Encontro = False
    Do While Not Encontro And Not rs_con_for_tpa.EOF
        If Not CBool(rs_con_for_tpa!cftauto) Then
            Encontro = True
        End If
        rs_con_for_tpa.MoveNext
    Loop
    If Not Encontro Then
        Texto = ": " & "El parametro " & tpanro & " del concepto " & ConcCod & " no se resuelve por novedad "
        NroColumna = 3
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call InsertaError(3, 11)
        HuboError = True
        Exit Sub
    End If
End If


If EsRetroactivo Then
  'Chequeo que los periodos sean validos
  'Chequeo Periodo Desde
  
  StrSql = "SELECT * FROM periodo WHERE pliqnro = " & PeriodoDesde
  If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
  OpenRecordset StrSql, rs_Periodo
  If rs_Periodo.EOF Then
      Texto = ": " & "Periodo Desde Invalido " & PeriodoDesde
      NroColumna = 6
      Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
      Call InsertaError(6, 36)
      HuboError = True
      Exit Sub
  End If
  
  'Chequeo Periodo Hasta
  StrSql = "SELECT * FROM periodo WHERE pliqnro = " & PeriodoHasta
  If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
  OpenRecordset StrSql, rs_Periodo
  If rs_Periodo.EOF Then
      Texto = ": " & "Periodo Hasta Invalido " & PeriodoHasta
      NroColumna = 7
      Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
      Call InsertaError(7, 36)
      HuboError = True
      Exit Sub
  End If
End If

'=============================================================
'Si viene el tipo de motivo cargo ese y valido que exista sino viene, busco si hay un default
If Len(TipoMotivo) = 0 Or (TipoMotivo = "N/A") Then
    'Verifico si hay un default
    StrSql = "SELECT tipmotnro, motivo FROM cft_resumen where concnro = " & ConcNro
    StrSql = StrSql & " AND tpanro = " & tpanro
    OpenRecordset StrSql, rs_cft_resumen
    If Not rs_cft_resumen.EOF Then
        TipoMotivo = IIf(IsNull(rs_cft_resumen!tipmotnro), "0", rs_cft_resumen!tipmotnro)
    End If
    rs_cft_resumen.Close
Else
    'Valido contra BD que exista el motivo
    StrSql = "SELECT * FROM tipomotivo where tipmotnro = " & TipoMotivo
    OpenRecordset StrSql, rs_TipoMotivo
    If rs_TipoMotivo.EOF Then
        Texto = ": " & "No se encontro el tipo de motivo " & TipoMotivo
        NroColumna = 13
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call InsertaError(13, 116)
        HuboError = True
        Exit Sub
    End If
    rs_TipoMotivo.Close
End If

'Si viene motivo cargo ese, sino viene, busco si hay un default
If Len(Motivo) = 0 Or (Motivo = "N/A") Then
    'Verifico si hay un default
    StrSql = "SELECT tipmotnro, motivo FROM cft_resumen where concnro = " & ConcNro
    StrSql = StrSql & " AND tpanro = " & tpanro
    OpenRecordset StrSql, rs_cft_resumen
    If Not rs_cft_resumen.EOF Then
        Motivo = IIf(IsNull(rs_cft_resumen!Motivo), "", rs_cft_resumen!Motivo)
    End If
    rs_cft_resumen.Close
End If

If Len(TipoMotivo) = 0 Then TipoMotivo = "null"
If TipoMotivo = "N/A" Then TipoMotivo = "null"
If TipoMotivo = "0" Then TipoMotivo = "null"
If Motivo = "N/A" Then Motivo = ""

'LED - 17/12/2013
'controlo si existe la distribucion y los tipos de estructura configurados
If Len(masinro) = 0 Then
    tieneDistribucion = 0
Else
    'controlo que exista el modelo de asiento
    StrSql = " SELECT masinro, masinivternro1, masinivternro2, masinivternro3 FROM mod_asiento WHERE masinro = " & masinro
    OpenRecordset StrSql, rs_modAsi
    If Not rs_modAsi.EOF Then
        Texto = ": Modelo de asiento " & masinro & " Encontrado."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        If Len(estrnro1) > 0 Then
           'controlo que exista la estructura y que este asociada al modelo
            StrSql = " SELECT tenro, estrnro FROM estructura WHERE upper(estrdabr) = '" & UCase(estrnro1) & "' AND tenro = " & rs_modAsi!MasinivTernro1
            OpenRecordset StrSql, rs_Estructura
            If Not rs_Estructura.EOF Then
                tenro1 = rs_Estructura!Tenro
                estrnro1 = rs_Estructura!Estrnro
                tieneDistribucion = -1
            Else
                Texto = ": La estructura 1 no existe en el sistema."
                NroColumna = 14
                Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                Call InsertaError(14, 2)
                HuboError = True
                Exit Sub
            End If
        Else
            Texto = ": El modelo debe tener al menos una estructura."
            NroColumna = 14
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            Call InsertaError(14, 2)
            HuboError = True
            Exit Sub
        End If
        
        'controlo si existe la estructura 2
        If Len(estrnro2) > 0 Then
           'controlo que exista la estructura y que este asociada al modelo
            StrSql = " SELECT tenro, estrnro FROM estructura WHERE upper(estrdabr) = '" & UCase(estrnro2) & "' AND tenro = " & rs_modAsi!MasinivTernro2
            OpenRecordset StrSql, rs_Estructura
            If Not rs_Estructura.EOF Then
                tenro2 = rs_Estructura!Tenro
                estrnro2 = rs_Estructura!Estrnro
            Else
                Texto = ": La estructura 2 no existe en el sistema."
                NroColumna = 15
                Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                Call InsertaError(14, 2)
                HuboError = True
                Exit Sub
            End If
        Else
            tenro2 = 0
            estrnro2 = 0
            Flog.writeline " Estructura 2 no informada."
        End If
        
        'controlo si existe la estructura 3
        If Len(estrnro3) > 0 Then
           'controlo que exista la estructura y que este asociada al modelo
            StrSql = " SELECT tenro, estrnro FROM estructura WHERE upper(estrdabr) = '" & UCase(estrnro3) & "' AND tenro = " & rs_modAsi!MasinivTernro3
            OpenRecordset StrSql, rs_Estructura
            If Not rs_Estructura.EOF Then
                tenro3 = rs_Estructura!Tenro
                estrnro3 = rs_Estructura!Estrnro
            Else
                Texto = ": La estructura 3 no existe en el sistema."
                NroColumna = 15
                Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                Call InsertaError(14, 2)
                HuboError = True
                Exit Sub
            End If
        Else
            tenro3 = 0
            estrnro3 = 0
            Flog.writeline " Estructura 3 no informada."
        End If
        
        
    Else
        Texto = ": No existe el modelo de asiento " & masinro
        NroColumna = 13
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call InsertaError(13, 2)
        HuboError = True
        Exit Sub
    End If
End If
'LED - 17/12/2013

'=============================================================
'Busco si existe la Novedad

  If Not TieneVigencia Then
    StrSql = " SELECT * FROM novemp " & _
             " LEFT JOIN nov_dist ON novemp.nenro = nov_dist.novnro AND tiponov = 1 " & _
             " WHERE novemp.concnro = " & ConcNro & " And novemp.tpanro = " & tpanro & " AND novemp.empleado = " & Tercero & _
             " AND (novemp.nevigencia = -1 OR novemp.nevigencia = 0) " & _
             " AND nov_dist.tenro = " & tenro1 & " AND nov_dist.estrnro = " & estrnro1 & " AND nov_dist.tenro2 = " & tenro2 & _
             " AND nov_dist.estrnro2 = " & estrnro2 & " AND nov_dist.tenro3 = " & tenro3 & " AND nov_dist.estrnro3 = " & estrnro3 & _
             " ORDER BY novemp.nevigencia "
    If rs_NovEmp.State = adStateOpen Then rs_NovEmp.Close
    OpenRecordset StrSql, rs_NovEmp
    
    If Not rs_NovEmp.EOF Then
    
        'Busco si existe una novedad sin vigencia
        sinVig = False
        Do While Not rs_NovEmp.EOF
            If Not CBool(rs_NovEmp!nevigencia) Then
                sinVig = True
                Exit Do 'Para que quede posicionado en la nov a modificar
            End If
            rs_NovEmp.MoveNext
        Loop
        
            'A partir de la V4.50
            'Busco si existe una misma novedad s/vigencia o c/vigencia diferente
            ExisteNovedad = False
            StrSql = " SELECT * FROM novemp " & _
                     " LEFT JOIN nov_dist ON novemp.nenro = nov_dist.novnro AND tiponov = 1 " & _
                     " WHERE novemp.concnro = " & ConcNro & " AND novemp.tpanro = " & tpanro & " AND novemp.empleado = " & Tercero & _
                     " AND nov_dist.tenro = " & tenro1 & " AND nov_dist.estrnro = " & estrnro1 & " AND nov_dist.tenro2 = " & tenro2 & _
                     " AND nov_dist.estrnro2 = " & estrnro2 & " AND nov_dist.tenro3 = " & tenro3 & " AND nov_dist.estrnro3 = " & estrnro3

            OpenRecordset StrSql, rs_NovEmp2
            If Not rs_NovEmp2.EOF Then
                Flog.writeline "Existe una novedad"
                ExisteNovedad = True
            End If
            rs_NovEmp2.Close
'            -------------------------------------------------
    
            If Not sinVig Then ' No encontre con sin vigencia
'                If ExisteNovedad = True Then 'V4.50
'                    Texto = "No se insertó la novedad. Ya existe y no se pisa."
'                    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
'                Else
                'Inserto---------------------------------------------------------
                    If Not EsRetroactivo Then
                        StrSql = "INSERT INTO novemp (" & _
                                 "empleado,concnro,tpanro,nevalor,nevigencia"
                        StrSql = StrSql & ",tipmotnro,motivo,nedist"
                        StrSql = StrSql & ") VALUES (" & Tercero & _
                                 "," & ConcNro & _
                                 "," & tpanro & _
                                 "," & Monto & _
                                 ",0" & _
                                 "," & TipoMotivo & _
                                 ",'" & Motivo & "'" & _
                                 "," & tieneDistribucion & _
                                 " )"
                    Else
                        StrSql = "INSERT INTO novemp (" & _
                                 "empleado,concnro,tpanro,nevalor,nevigencia,nepliqdesde,nepliqhasta "
                        StrSql = StrSql & ",tipmotnro,motivo,nedist"
                        StrSql = StrSql & ") VALUES (" & Tercero & _
                                 "," & ConcNro & _
                                 "," & tpanro & _
                                 "," & Monto & _
                                 "," & CLng(TieneVigencia) & _
                                 "," & PeriodoDesde & _
                                 "," & PeriodoHasta & _
                                 "," & TipoMotivo & _
                                 ",'" & Motivo & "'" & _
                                 "," & tieneDistribucion & _
                                 " )"
                    End If
                    
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = "Novedad Insertada "
                    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                                        
                    'LED - 17/12/2013
                    If (CLng(tieneDistribucion) = -1) Then
                        nenro = getLastIdentity(objConn, "novemp")
                        
                        StrSql = "INSERT INTO nov_dist " & _
                                 " (novnro,auto,tiponov,concnro,tpanro,masinro,tenro,estrnro,tenro2,estrnro2,tenro3,estrnro3)" & _
                                 " VALUES (" & nenro & ",0,1," & ConcNro & " ," & tpanro & "," & masinro & "," & tenro1 & "," & estrnro1 & "," & tenro2 & "," & estrnro2 & "," & tenro3 & "," & estrnro3 & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                        Texto = "Distribucion Insertada "
                        Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                    
                    End If
                    'LED - 17/12/2013
                    
'                End If
            '-----------------------------------------------------------------
        Else
            'Existe una novedad pero sin vigencia ==> Actualizo
            
            Select Case CInt(AccionNovedad)
                Case -1: 'Actualizo la Novedad
                    If Not EsRetroactivo Then
                        StrSql = "UPDATE novemp SET nevalor = " & Monto
                            StrSql = StrSql & " , tipmotnro =  " & TipoMotivo & _
                            " , motivo =  '" & Motivo & "', nedist = " & tieneDistribucion
                        StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                    Else
                        StrSql = "UPDATE novemp SET nevalor = " & Monto & _
                                 " , nepliqdesde =  " & PeriodoDesde & _
                                 " , nepliqhasta =  " & PeriodoHasta & _
                                 " , tipmotnro =  " & TipoMotivo & _
                                 " , motivo =  '" & Motivo & "', nedist = " & tieneDistribucion
                        StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = "Novedad Actualizada "
                    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                                                    
                    'LED - 17/12/2013
                    If (CLng(tieneDistribucion) = -1) Then
                        
                        StrSql = "SELECT novnro FROM nov_dist WHERE novnro=" & rs_NovEmp!nenro & " AND tiponov= 1"
                        OpenRecordset StrSql, rs_Aux
                        
                        'LED Si existe lo acutalizo
                        If Not rs_Aux.EOF Then
                            StrSql = "UPDATE nov_dist " & _
                                    " SET masinro= " & masinro & ", tenro=" & tenro1 & ", estrnro= " & estrnro1 & ", tenro2= " & tenro2 & _
                                    ",estrnro2= " & estrnro2 & ",tenro3= " & tenro3 & ", estrnro3= " & estrnro3 & _
                                    " WHERE novnro = " & rs_NovEmp!nenro
                        Else
                            'LED Si No existe lo inserto
                            StrSql = "INSERT INTO nov_dist " & _
                                     " (novnro,auto,tiponov,concnro,tpanro,masinro,tenro,estrnro,tenro2,estrnro2,tenro3,estrnro3)" & _
                                     " VALUES (" & rs_NovEmp!nenro & ",0,1," & ConcNro & " ," & tpanro & "," & masinro & "," & tenro1 & "," & estrnro1 & "," & tenro2 & "," & estrnro2 & "," & tenro3 & "," & estrnro3 & ")"
                        End If
                        objConn.Execute StrSql, , adExecuteNoRecords
                    
                    Else
                        'LED- Verifica si tenía una distribución. Si existe la elimina
                        StrSql = "SELECT novnro FROM nov_dist WHERE novnro=" & rs_NovEmp!nenro & " AND tiponov= 1"
                        OpenRecordset StrSql, rs_Aux
                        If Not rs_Aux.EOF Then
                            StrSql = "DELETE nov_dist WHERE novnro=" & rs_NovEmp!nenro & " AND tiponov= 1"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                    'LED - 17/12/2013
                    
                Case 0: 'Mantiene Novedades
                    If Not TieneVigencia Then
                        'Inserto---------------------------------------------------------
                            If Not EsRetroactivo Then
                                StrSql = "INSERT INTO novemp (" & _
                                         "empleado,concnro,tpanro,nevalor,nevigencia"
                                StrSql = StrSql & ",tipmotnro,motivo,nedist"
                                StrSql = StrSql & ") VALUES (" & Tercero & _
                                         "," & ConcNro & _
                                         "," & tpanro & _
                                         "," & Monto & _
                                         ",0" & _
                                         "," & TipoMotivo & _
                                         ",'" & Motivo & "'" & _
                                         "," & tieneDistribucion & _
                                         " )"
                            Else
                                StrSql = "INSERT INTO novemp (" & _
                                         "empleado,concnro,tpanro,nevalor,nevigencia,nepliqdesde,nepliqhasta "
                                StrSql = StrSql & ",tipmotnro,motivo,nedist"
                                StrSql = StrSql & ") VALUES (" & Tercero & _
                                         "," & ConcNro & _
                                         "," & tpanro & _
                                         "," & Monto & _
                                         "," & CLng(TieneVigencia) & _
                                         "," & PeriodoDesde & _
                                         "," & PeriodoHasta & _
                                         "," & TipoMotivo & _
                                         ",'" & Motivo & "'" & _
                                         "," & tieneDistribucion & _
                                         " )"
                            End If
                            
                            objConn.Execute StrSql, , adExecuteNoRecords
                            Texto = "Novedad Insertada "
                            Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                                                
                            'LED - 17/12/2013
                            If (CLng(tieneDistribucion) = -1) Then
                                nenro = getLastIdentity(objConn, "novemp")
                                
                                StrSql = "INSERT INTO nov_dist " & _
                                         " (novnro,auto,tiponov,concnro,tpanro,masinro,tenro,estrnro,tenro2,estrnro2,tenro3,estrnro3)" & _
                                         " VALUES (" & nenro & ",0,1," & ConcNro & " ," & tpanro & "," & masinro & "," & tenro1 & "," & estrnro1 & "," & tenro2 & "," & estrnro2 & "," & tenro3 & "," & estrnro3 & ")"
                                objConn.Execute StrSql, , adExecuteNoRecords
                                Texto = "Distribucion Insertada "
                                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                            
                            End If
                    
                    Else
                        Texto = "No se insertó la novedad. Ya existe y no se pisa."
                        Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                    End If
                Case 1: 'Suma Novedades
                    If Not EsRetroactivo Then
                        StrSql = "UPDATE novemp SET nevalor = nevalor + " & Monto
                        StrSql = StrSql & " , tipmotnro =  " & TipoMotivo
                        StrSql = StrSql & " , motivo =  '" & Motivo & "'"
                        StrSql = StrSql & " , nedist = " & tieneDistribucion
                        StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                    Else
                        StrSql = "UPDATE novemp SET nevalor = nevalor + " & Monto & _
                                 " , nepliqdesde =  " & PeriodoDesde & _
                                 " , nepliqhasta =  " & PeriodoHasta
                        StrSql = StrSql & " , tipmotnro =  " & TipoMotivo & _
                        " , motivo =  '" & Motivo & "', nedist = " & tieneDistribucion
                        StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = "Novedad Sumada "
                    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                    
                    'LED - 17/12/2013
                    If (CLng(tieneDistribucion) = -1) Then
                        
                        StrSql = "SELECT novnro FROM nov_dist WHERE novnro=" & rs_NovEmp!nenro & " AND tiponov= 1"
                        OpenRecordset StrSql, rs_Aux
                        
                        'LED Si existe lo acutalizo
                        If Not rs_Aux.EOF Then
                            StrSql = "UPDATE nov_dist " & _
                                    " SET masinro= " & masinro & ", tenro=" & tenro1 & ", estrnro= " & estrnro1 & ", tenro2= " & tenro2 & _
                                    ",estrnro2= " & estrnro2 & ",tenro3= " & tenro3 & ", estrnro3= " & estrnro3 & _
                                    " WHERE novnro = " & rs_NovEmp!nenro
                        Else
                            'LED Si No existe lo inserto
                            StrSql = "INSERT INTO nov_dist " & _
                                     " (novnro,auto,tiponov,concnro,tpanro,masinro,tenro,estrnro,tenro2,estrnro2,tenro3,estrnro3)" & _
                                     " VALUES (" & rs_NovEmp!nenro & ",0,1," & ConcNro & " ," & tpanro & "," & masinro & "," & tenro1 & "," & estrnro1 & "," & tenro2 & "," & estrnro2 & "," & tenro3 & "," & estrnro3 & ")"
                        End If
                        objConn.Execute StrSql, , adExecuteNoRecords
                    
                    Else
                        'LED- Verifica si tenía una distribución. Si existe la elimina
                        StrSql = "SELECT novnro FROM nov_dist WHERE novnro=" & rs_NovEmp!nenro & " AND tiponov= 1"
                        OpenRecordset StrSql, rs_Aux
                        If Not rs_Aux.EOF Then
                            StrSql = "DELETE nov_dist WHERE novnro=" & rs_NovEmp!nenro & " AND tiponov= 1"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                    'LED - 17/12/2013
            End Select

        End If
    Else 'No encontre novedad alguna para el conc y param
'        If ExisteNovedad = True Then 'V4.50
'            Texto = "No se insertó la novedad. Ya existe y no se pisa."
'            Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
'        Else
            'Inserto
            If Not EsRetroactivo Then
                StrSql = "INSERT INTO novemp (" & _
                         "empleado,concnro,tpanro,nevalor,nevigencia"
                StrSql = StrSql & ",tipmotnro,motivo,nedist"
                StrSql = StrSql & ") VALUES (" & Tercero & _
                         "," & ConcNro & _
                         "," & tpanro & _
                         "," & Monto & _
                         ",0" & _
                         "," & TipoMotivo & _
                         ",'" & Motivo & "'" & _
                         "," & tieneDistribucion & _
                         " )"
            Else
                StrSql = "INSERT INTO novemp (" & _
                         "empleado,concnro,tpanro,nevalor,nevigencia,nepliqdesde,nepliqhasta "
                StrSql = StrSql & ",tipmotnro,motivo, nedist"
                StrSql = StrSql & ") VALUES (" & Tercero & _
                         "," & ConcNro & _
                         "," & tpanro & _
                         "," & Monto & _
                         "," & CLng(TieneVigencia) & _
                         "," & PeriodoDesde & _
                         "," & PeriodoHasta & _
                         "," & TipoMotivo & _
                         ",'" & Motivo & "'" & _
                         "," & tieneDistribucion & _
                         " )"
            End If
            objConn.Execute StrSql, , adExecuteNoRecords
            'Flog.Writeline Espacios(Tabulador * 1) & "Novedad insertada "
            Texto = "Novedad insertada "
            Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                    
            'LED - 17/12/2013
            If (CLng(tieneDistribucion) = -1) Then
                nenro = getLastIdentity(objConn, "novemp")
                
                StrSql = "INSERT INTO nov_dist " & _
                         " (novnro,auto,tiponov,concnro,tpanro,masinro,tenro,estrnro,tenro2,estrnro2,tenro3,estrnro3)" & _
                         " VALUES (" & nenro & ",0,1," & ConcNro & " ," & tpanro & "," & masinro & "," & tenro1 & "," & estrnro1 & "," & tenro2 & "," & estrnro2 & "," & tenro3 & "," & estrnro3 & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = "Distribucion Insertada "
                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
            
            End If
            'LED - 17/12/2013
            
'        End If
    End If
  Else 'Tiene Vigencia
    'A partir de la V4.50
    'Busco si existe una misma novedad s/vigencia o c/vigencia diferente
    ExisteNovedad = False
    
    '*******************************************
    'VER QUE PASA CUANDO TENGO MAS DE 1 CARGADA
    '*******************************************
    StrSql = " SELECT * FROM novemp  " & _
             " LEFT JOIN nov_dist ON novemp.nenro = nov_dist.novnro AND tiponov = 1 " & _
             " WHERE novemp.concnro = " & ConcNro & " And novemp.tpanro = " & tpanro & " AND novemp.empleado = " & Tercero & _
             " AND nov_dist.tenro = " & tenro1 & " AND nov_dist.estrnro = " & estrnro1 & " AND nov_dist.tenro2 = " & tenro2 & _
             " AND nov_dist.estrnro2 = " & estrnro2 & " AND nov_dist.tenro3 = " & tenro3 & " AND nov_dist.estrnro3 = " & estrnro3

    
    StrSql = StrSql & " AND ("
    If EsNulo(FechaHasta) = False Then
    
    StrSql = StrSql & "((nedesde <= " & ConvFecha(FechaDesde) & " AND nedesde <= " & ConvFecha(FechaHasta) & " AND (nehasta >= " & ConvFecha(FechaDesde) & " OR nehasta IS NULL )) )"
    StrSql = StrSql & " OR ((nedesde >= " & ConvFecha(FechaDesde) & " AND nedesde <= " & ConvFecha(FechaHasta) & " AND (nehasta >= " & ConvFecha(FechaDesde) & " OR nehasta IS NULL)))"
    
    '    StrSql = StrSql & " (nedesde <= " & ConvFecha(FechaHasta) & ")"
        'StrSql = StrSql & " AND (nehasta >= " & ConvFecha(FechaHasta)
        'StrSql = StrSql & " AND (nedesde <= " & ConvFecha(FechaDesde) & " AND nehasta is null))"
    Else
    StrSql = StrSql & "((nedesde <= " & ConvFecha(FechaDesde) & " AND nedesde <= " & ConvFecha(FechaDesde) & " AND (nehasta >= " & ConvFecha(FechaDesde) & " OR nehasta IS NULL )) )"
    StrSql = StrSql & " OR ((nedesde >= " & ConvFecha(FechaDesde) & " AND nedesde <= " & ConvFecha(FechaDesde) & " AND (nehasta >= " & ConvFecha(FechaDesde) & " OR nehasta IS NULL)))"
        'StrSql = StrSql & " AND (nedesde >= " & ConvFecha(FechaHasta) & " AND nehasta is null)"
    '    StrSql = StrSql & " AND (nedesde <= " & ConvFecha(FechaHasta) & ")"
    End If
    StrSql = StrSql & ")"
    StrSql = StrSql & " ORDER BY nehasta ASC "
    
    OpenRecordset StrSql, rs_NovEmp2
    If Not rs_NovEmp2.EOF Then
        'Flog.WRITELINE "Existe una novedad"
        ExisteNovedad = True
        Do While Not rs_NovEmp2.EOF
            InsertoNovedad = False
            StrSqlAux = ""
            '***********************************************
            '***********************************************
            '  |__________#
            '  |__________|
            If EsNulo(rs_NovEmp2!nehasta) = True And EsNulo(FechaHasta) = False Then
            'Si la FechaHastaAux es nulo, debo cerrar vigencia
                 If CDate(rs_NovEmp2!nedesde) = CDate(FechaDesde) Then
                     'Actualizo novedad, y cierro vigencia.
                     StrSqlAux = ", nehasta=" & ConvFecha(FechaHasta)
                     Exit Do
                 End If
            End If
            '***********************************************
            '***********************************************
            If EsNulo(rs_NovEmp2!nehasta) = False Then
                If CDate(rs_NovEmp2!nehasta) < CDate(FechaDesde) Then
                    '  |__________|
                    '              |__________|
                    'Inserto nuevo registro.
                    ExisteNovedad = False
                    InsertoNovedad = True
                    Exit Do
                End If
            End If
            '***********************************************
            '***********************************************
            If EsNulo(rs_NovEmp2!nehasta) = True Then
                rs_NovEmp2.MoveNext
                'If Not rs_NovEmp2.EOF Then
                If Not rs_NovEmp2.EOF And EsNulo(FechaHasta) = False Then
                    If CDate(rs_NovEmp2!nehasta) > CDate(FechaHasta) Then
                        '            |__________|
                        '|__________|
                        'Inserto nuevo registro.
                        ExisteNovedad = False
                        InsertoNovedad = True
                        Exit Do
                    End If
                    'rs_NovEmp2.MovePrevious
                ElseIf EsNulo(FechaHasta) = False Then
                    rs_NovEmp2.MovePrevious
                    'Y ahora que hago?
                    If CDate(rs_NovEmp2!nedesde) > CDate(FechaHasta) Then
                        '            |__________|
                        '|__________|
                        'Inserto nuevo registro.
                        ExisteNovedad = False
                        InsertoNovedad = True
                        Exit Do
                    End If
                Else
                    rs_NovEmp2.MovePrevious
                End If
            End If
            '***********************************************
            '***********************************************
            rs_NovEmp2.MoveNext
        Loop
        '-------------------------------------------
        'V4.54 | Guardo fechas aux. de la licencia existente
        '____________________________________________
        If Not rs_NovEmp2.EOF Then
            FechaDesdeAux = rs_NovEmp2!nedesde
            If EsNulo(rs_NovEmp2!nehasta) Then
                FechaHastaAux = ""
            Else
                FechaHastaAux = rs_NovEmp2!nehasta
            End If
        Else
            FechaDesdeAux = FechaDesde
            FechaHastaAux = FechaHasta
        End If
        '-------------------------------------------
    Else
        FechaDesdeAux = FechaDesde
        FechaHastaAux = FechaHasta
    End If
    rs_NovEmp2.Close
   '---------------------------------------------------------
   '---------------------------------------------------------
   '---------------------------------------------------------
   'VALIDO FECHAS | DECIDO DE QUE FORMA ACTUALIZO / INSERTO
'   InsertoNovedad = False
'   StrSqlAux = ""
''  |__________#
''  |__________|
'   If EsNulo(FechaHastaAux) = True And EsNulo(FechaHasta) = False Then
'   'Si la FechaHastaAux es nulo, debo cerrar vigencia
'        If CDate(FechaDesdeAux) = CDate(FechaDesde) Then
'            StrSqlAux = ", nehasta=" & ConvFecha(FechaHasta)
'            'Actualizo novedad, y cierro vigencia.
'        End If
'   End If
   

'   If EsNulo(FechaHastaAux) = False Then
'        If CDate(FechaHastaAux) < CDate(FechaDesde) Then
'            '  |__________|
'            '              |__________|
'            'Inserto nuevo registro.
'            ExisteNovedad = False
'            InsertoNovedad = True
'        End If
'        '***********************************************
'        'If CDate(FechaHastaAux) > CDate(FechaHasta) Then
'            '            |__________|
'            '|__________|
'            'Inserto nuevo registro.
'        'End If
'
'
'   End If
   
   '---------------------------------------------------------
   '---------------------------------------------------------
   '---------------------------------------------------------
   
   
   '_______________________________________________________________________
    'Reviso que no se pise
    StrSql = " SELECT * FROM novemp " & _
             " LEFT JOIN nov_dist ON novemp.nenro = nov_dist.novnro AND tiponov = 1 " & _
             " WHERE novemp.concnro = " & ConcNro & " AND novemp.tpanro = " & tpanro & " AND novemp.empleado = " & Tercero & " AND nevigencia = -1 " & _
             " AND nov_dist.tenro = " & tenro1 & " AND nov_dist.estrnro = " & estrnro1 & " AND nov_dist.tenro2 = " & tenro2 & _
             " AND nov_dist.estrnro2 = " & estrnro2 & " AND nov_dist.tenro3 = " & tenro3 & " AND nov_dist.estrnro3 = " & estrnro3
    
    If Not EsNulo(FechaHastaAux) Then
        StrSql = StrSql & " AND nedesde = " & ConvFecha(FechaDesdeAux)
        StrSql = StrSql & " AND nehasta = " & ConvFecha(FechaHastaAux)
    Else
        StrSql = StrSql & " AND nedesde = " & ConvFecha(FechaDesdeAux)
        StrSql = StrSql & " AND nehasta is null"
    End If
    
    'Se comento con V4.54
'    If Not EsNulo(FechaHasta) Then
'        StrSql = StrSql & " AND (nedesde <= " & ConvFecha(FechaHasta)
'        StrSql = StrSql & " AND nehasta >= " & ConvFecha(FechaDesde) & ")"
'        StrSql = StrSql & " OR  (nedesde <= " & ConvFecha(FechaHasta)
'        StrSql = StrSql & " AND nehasta is null )))"
'        StrSql = StrSql & " AND nedesde = " & ConvFecha(FechaDesde)
'        StrSql = StrSql & " AND nehasta = " & ConvFecha(FechaHasta)
'    Else
'        StrSql = StrSql & " AND nedesde = " & ConvFecha(FechaDesde)
'        StrSql = StrSql & " AND nehasta is null"
'    End If
    If rs_NovEmp.State = adStateOpen Then rs_NovEmp.Close
    OpenRecordset StrSql, rs_NovEmp
    
    'If Not rs_NovEmp.EOF Then
    If Not rs_NovEmp.EOF And InsertoNovedad = False Then ' 4.54
    
        'Existe/n novedad/es con vigencia ==>
        Select Case CInt(AccionNovedad)
            Case -1: 'Actualizo la Novedad
                If Not EsRetroactivo Then
                    StrSql = "UPDATE novemp SET nevalor = " & Monto
                    StrSql = StrSql & " , tipmotnro =  " & TipoMotivo
                    StrSql = StrSql & " , motivo =  '" & Motivo & "'"
                    StrSql = StrSql & ", nedist = " & tieneDistribucion
                    '4.54 ---
                    StrSql = StrSql & StrSqlAux
                    '-------
                    
                    StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                Else
                    StrSql = "UPDATE novemp SET nevalor = " & Monto & _
                             " , nepliqdesde =  " & PeriodoDesde & _
                             " , nepliqhasta =  " & PeriodoHasta & _
                             " , tipmotnro =  " & TipoMotivo & _
                             " , motivo =  '" & Motivo & "'" & _
                             ", nedist = " & tieneDistribucion & _
                             " WHERE nenro = " & rs_NovEmp!nenro
                End If
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = "Novedad Actualizada "
                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                    
                'LED - 17/12/2013
                If (CLng(tieneDistribucion) = -1) Then
                    
                    StrSql = "SELECT novnro FROM nov_dist WHERE novnro=" & rs_NovEmp!nenro & " AND tiponov= 1"
                    OpenRecordset StrSql, rs_Aux
                    
                    'LED Si existe lo acutalizo
                    If Not rs_Aux.EOF Then
                        StrSql = "UPDATE nov_dist " & _
                                " SET masinro= " & masinro & ", tenro=" & tenro1 & ", estrnro= " & estrnro1 & ", tenro2= " & tenro2 & _
                                ",estrnro2= " & estrnro2 & ",tenro3= " & tenro3 & ", estrnro3= " & estrnro3 & _
                                " WHERE novnro = " & rs_NovEmp!nenro
                    Else
                        'LED Si No existe lo inserto
                        StrSql = "INSERT INTO nov_dist " & _
                                 " (novnro,auto,tiponov,concnro,tpanro,masinro,tenro,estrnro,tenro2,estrnro2,tenro3,estrnro3)" & _
                                 " VALUES (" & rs_NovEmp!nenro & ",0,1," & ConcNro & " ," & tpanro & "," & masinro & "," & tenro1 & "," & estrnro1 & "," & tenro2 & "," & estrnro2 & "," & tenro3 & "," & estrnro3 & ")"
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                
                Else
                    'LED- Verifica si tenía una distribución. Si existe la elimina
                    StrSql = "SELECT novnro FROM nov_dist WHERE novnro=" & rs_NovEmp!nenro & " AND tiponov= 1"
                    OpenRecordset StrSql, rs_Aux
                    If Not rs_Aux.EOF Then
                        StrSql = "DELETE nov_dist WHERE novnro=" & rs_NovEmp!nenro & " AND tiponov= 1"
                        objConn.Execute StrSql, , adExecuteNoRecords
                    End If
                End If
                'LED - 17/12/2013
            
            Case 0: 'Mantiene Novedades
                    If Not TieneVigencia Then
                        'Inserto---------------------------------------------------------
                            If Not EsRetroactivo Then
                                StrSql = "INSERT INTO novemp (" & _
                                         "empleado,concnro,tpanro,nevalor,nevigencia"
                                StrSql = StrSql & ",tipmotnro,motivo,nedist"
                                StrSql = StrSql & ") VALUES (" & Tercero & _
                                         "," & ConcNro & _
                                         "," & tpanro & _
                                         "," & Monto & _
                                         ",0" & _
                                         "," & TipoMotivo & _
                                         ",'" & Motivo & "'" & _
                                         "," & tieneDistribucion & _
                                         " )"
                            Else
                                StrSql = "INSERT INTO novemp (" & _
                                         "empleado,concnro,tpanro,nevalor,nevigencia,nepliqdesde,nepliqhasta "
                                StrSql = StrSql & ",tipmotnro,motivo,nedist"
                                StrSql = StrSql & ") VALUES (" & Tercero & _
                                         "," & ConcNro & _
                                         "," & tpanro & _
                                         "," & Monto & _
                                         "," & CLng(TieneVigencia) & _
                                         "," & PeriodoDesde & _
                                         "," & PeriodoHasta & _
                                         "," & TipoMotivo & _
                                         ",'" & Motivo & "'" & _
                                         "," & tieneDistribucion & _
                                         " )"
                            End If
                            
                            objConn.Execute StrSql, , adExecuteNoRecords
                            Texto = "Novedad Insertada "
                            Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                                                
                            'LED - 17/12/2013
                            If (CLng(tieneDistribucion) = -1) Then
                                nenro = getLastIdentity(objConn, "novemp")
                                
                                StrSql = "INSERT INTO nov_dist " & _
                                         " (novnro,auto,tiponov,concnro,tpanro,masinro,tenro,estrnro,tenro2,estrnro2,tenro3,estrnro3)" & _
                                         " VALUES (" & nenro & ",0,1," & ConcNro & " ," & tpanro & "," & masinro & "," & tenro1 & "," & estrnro1 & "," & tenro2 & "," & estrnro2 & "," & tenro3 & "," & estrnro3 & ")"
                                objConn.Execute StrSql, , adExecuteNoRecords
                                Texto = "Distribucion Insertada "
                                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                            
                            End If
                    
                    Else
                        Texto = "No se insertó la novedad. Ya existe y no se pisa."
                        Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                    End If
            
            Case 1: 'Suma Novedades
                If Not EsRetroactivo Then
                    StrSql = "UPDATE novemp SET nevalor = nevalor + " & Monto
                    StrSql = StrSql & " , tipmotnro =  " & TipoMotivo
                    StrSql = StrSql & " , motivo =  '" & Motivo & "'"
                    StrSql = StrSql & ", nedist = " & tieneDistribucion
                    StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                Else
                    StrSql = "UPDATE novemp SET nevalor = nevalor + " & Monto & _
                             " , nepliqdesde =  " & PeriodoDesde & _
                             " , nepliqhasta =  " & PeriodoHasta & _
                             " , tipmotnro =  " & TipoMotivo & _
                             " , motivo =  '" & Motivo & "'" & _
                             ", nedist = " & tieneDistribucion & _
                             " WHERE nenro = " & rs_NovEmp!nenro
                End If
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = "Novedad Sumada "
                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                
                'LED - 17/12/2013
                If (CLng(tieneDistribucion) = -1) Then
                    
                    StrSql = "SELECT novnro FROM nov_dist WHERE novnro=" & rs_NovEmp!nenro & " AND tiponov= 1"
                    OpenRecordset StrSql, rs_Aux
                    
                    'LED Si existe lo acutalizo
                    If Not rs_Aux.EOF Then
                        StrSql = "UPDATE nov_dist " & _
                                " SET masinro= " & masinro & ", tenro=" & tenro1 & ", estrnro= " & estrnro1 & ", tenro2= " & tenro2 & _
                                ",estrnro2= " & estrnro2 & ",tenro3= " & tenro3 & ", estrnro3= " & estrnro3 & _
                                " WHERE novnro = " & rs_NovEmp!nenro
                    Else
                        'LED Si No existe lo inserto
                        StrSql = "INSERT INTO nov_dist " & _
                                 " (novnro,auto,tiponov,concnro,tpanro,masinro,tenro,estrnro,tenro2,estrnro2,tenro3,estrnro3)" & _
                                 " VALUES (" & rs_NovEmp!nenro & ",0,1," & ConcNro & " ," & tpanro & "," & masinro & "," & tenro1 & "," & estrnro1 & "," & tenro2 & "," & estrnro2 & "," & tenro3 & "," & estrnro3 & ")"
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                
                Else
                    'LED- Verifica si tenía una distribución. Si existe la elimina
                    StrSql = "SELECT novnro FROM nov_dist WHERE novnro=" & rs_NovEmp!nenro & " AND tiponov= 1"
                    OpenRecordset StrSql, rs_Aux
                    If Not rs_Aux.EOF Then
                        StrSql = "DELETE nov_dist WHERE novnro=" & rs_NovEmp!nenro & " AND tiponov= 1"
                        objConn.Execute StrSql, , adExecuteNoRecords
                    End If
                End If
                'LED - 17/12/2013
        End Select
        
    Else
        
        If ExisteNovedad = True Then 'V4.50
                Texto = "No se insertó la novedad. Ya existe y no se pisa."
                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
        Else
                If Not EsRetroactivo Then
                    StrSql = "INSERT INTO novemp ("
                    StrSql = StrSql & "empleado,concnro,tpanro,nevalor,nevigencia,nedesde"
                    If Not EsNulo(FechaHasta) Then
                        StrSql = StrSql & ",nehasta"
                    End If
                    StrSql = StrSql & ",tipmotnro,motivo, nedist"
                    StrSql = StrSql & ") VALUES (" & Tercero
                    StrSql = StrSql & "," & ConcNro
                    StrSql = StrSql & "," & tpanro
                    StrSql = StrSql & "," & Monto
                    StrSql = StrSql & ",-1"
                    StrSql = StrSql & "," & ConvFecha(FechaDesde)
                    If Not EsNulo(FechaHasta) Then
                        StrSql = StrSql & "," & ConvFecha(FechaHasta)
                    End If
                    StrSql = StrSql & "," & TipoMotivo & _
                    ",'" & Motivo & "'" & _
                    "," & tieneDistribucion & _
                    " )"
                Else
                    StrSql = "INSERT INTO novemp ("
                    StrSql = StrSql & "empleado,concnro,tpanro,nevalor,nevigencia,nedesde"
                    If Not EsNulo(FechaHasta) Then
                        StrSql = StrSql & ",nehasta"
                    End If
                    StrSql = StrSql & ",nepliqdesde,nepliqhasta"
                    StrSql = StrSql & ",tipmotnro,motivo,nedist"
                    StrSql = StrSql & ") VALUES (" & Tercero
                    StrSql = StrSql & "," & ConcNro
                    StrSql = StrSql & "," & tpanro
                    StrSql = StrSql & "," & Monto
                    StrSql = StrSql & ",-1"
                    StrSql = StrSql & "," & ConvFecha(FechaDesde)
                    If Not EsNulo(FechaHasta) Then
                        StrSql = StrSql & "," & ConvFecha(FechaHasta)
                    End If
                    StrSql = StrSql & "," & PeriodoDesde
                    StrSql = StrSql & "," & PeriodoHasta
                    StrSql = StrSql & "," & TipoMotivo & _
                    ",'" & Motivo & "'" & _
                    "," & tieneDistribucion & _
                    " )"
                End If
                objConn.Execute StrSql, , adExecuteNoRecords
                'Flog.Writeline Espacios(Tabulador * 1) & "Novedad insertada "
                Texto = "Novedad insertada "
                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                
                'LED - 17/12/2013
                If (CLng(tieneDistribucion) = -1) Then
                    nenro = getLastIdentity(objConn, "novemp")
                    
                    StrSql = "INSERT INTO nov_dist " & _
                             " (novnro,auto,tiponov,concnro,tpanro,masinro,tenro,estrnro,tenro2,estrnro2,tenro3,estrnro3)" & _
                             " VALUES (" & nenro & ",0,1," & ConcNro & " ," & tpanro & "," & masinro & "," & tenro1 & "," & estrnro1 & "," & tenro2 & "," & estrnro2 & "," & tenro3 & "," & estrnro3 & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = "Distribucion Insertada "
                    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                
                End If
                'LED - 17/12/2013
                
            End If
        
        
        End If
    
    

  End If


Fin:
'Cierro todo y libero
If rs_NovEmp.State = adStateOpen Then rs_NovEmp.Close
If rs_Empleado.State = adStateOpen Then rs_Empleado.Close
If rs_Concepto.State = adStateOpen Then rs_Concepto.Close
If rs_TipoPar.State = adStateOpen Then rs_TipoPar.Close
If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
If rs_con_for_tpa.State = adStateOpen Then rs_con_for_tpa.Close
If rs_modAsi.State = adStateOpen Then rs_modAsi.Close
If rs_Estructura.State = adStateOpen Then rs_Estructura.Close
If rs_Aux.State = adStateOpen Then rs_Aux.Close


Set rs_NovEmp = Nothing
Set rs_Empleado = Nothing
Set rs_Concepto = Nothing
Set rs_TipoPar = Nothing
Set rs_Periodo = Nothing
Set rs_con_for_tpa = Nothing
Set rs_modAsi = Nothing
Set rs_Estructura = Nothing
Set rs_Aux = Nothing

Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    Texto = Err.Description
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(1, 7)
    GoTo Fin
End Sub

Public Sub LineaModelo_289(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Inserta Novedad de ajuste segun formato
' Autor      : FGZ
'              El formato es:
'                   Formato 1
'                       Legajo; conccod; monto
'                   ó
'                   Formato 2.1
'                       Legajo; conccod; monto; FechaDesde; FechaHasta
'                   Formato 2.2
'                       Legajo; conccod; monto; FechaDesde
'                   ó
'                   Formato 3
'                       Legajo; conccod; monto; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro)
' Fecha      : 27/12/2004
' Ultima Mod.: 14/06/2007.Gustavo Ring, se verifica que el usuario tenga permiso
'              en el concepto que se va a ingresar como novedad.
' Descripcion: 12/08/2009 - FGZ - Estaba mal las puestos los controles sobre los permisos
'              19/05/2010 - Cesar Stankunas - Se cambió la lógica para guardar las novedades de ajustes según si se pisa, se deja como está o se suma.
'              24-10-2011 - Margiotta, Emanuel - Se agrego la vista de empleado.
'              18-04-2012 - Zamarbide Juan - Se cambió el tipo de dato de la variablo Monto de Single a Double
'                           CAS-15590 - NORTHGATEARINSO - Error en campos interface novedades
' ---------------------------------------------------------------------------------------------
Dim pos1 As Long
Dim pos2 As Long
    
Dim Tercero As Long
Dim NroLegajo As Long

Dim ConcNro As Long
'Dim Conccod As Long
Dim ConcCod As String

Dim Monto As Double 'Modificado ver 4.15
Dim FechaDesde As String
Dim FechaHasta As String
Dim perfsegcon As Integer
Dim tienePermiso As Boolean
Dim PeriodoDesde As Long
Dim PeriodoHasta As Long
Dim TieneVigencia As Boolean
Dim EsRetroactivo As Boolean

Dim Aux As String

Dim nanro
Dim tieneDistribucion
Dim masinro
Dim tenro1
Dim estrnro1
Dim tenro2
Dim estrnro2
Dim tenro3
Dim estrnro3


Dim rs_Empleado As New ADODB.Recordset
Dim rs_Concepto As New ADODB.Recordset
Dim rs_NovAju As New ADODB.Recordset
Dim rs_Periodo As New ADODB.Recordset
Dim rs_seguridad As New ADODB.Recordset
Dim rs_Estructura As New ADODB.Recordset
Dim rs_Aux As New ADODB.Recordset
Dim rs_modAsi As New ADODB.Recordset

' El formato es:
' Formato 1
' Legajo; conccod; monto
' ó
' Formato 2.1
' Legajo; conccod; monto; FechaDesde; FechaHasta
' ó
' Formato 2.2
' Legajo; conccod; monto; FechaDesde
' ó
' Formato 3
' Legajo; conccod; monto; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro)
' ó
' Formato 4
' Legajo; conccod; monto; FechaDesde; FechaHasta; MarcaRetroactividad;PeriodoDesde(pliqnro); PeriodoHasta(pliqnro)
    
    On Error GoTo Manejador_De_Error
    
    TieneVigencia = False
    EsRetroactivo = False

    'Nro de Legajo
    pos1 = 1
    pos2 = InStr(pos1, strLinea, separador)
    If IsNumeric(Mid$(strLinea, pos1, pos2 - pos1)) Then
        NroLegajo = Mid$(strLinea, pos1, pos2 - pos1)
    Else
        Flog.writeline Espacios(Tabulador * 1) & "El legajo no es numerico "
        FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": El legajo no es numerico"
        InsertaError 1, 8
        HuboError = True
        Exit Sub
    End If
    
    'Concepto
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    ConcCod = Mid(strLinea, pos1, pos2 - pos1)

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Verifico que el usuario tenga el nivel de seguridad para insertar la novedad '
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
 
 StrSql = "SELECT perf_usr.perfsegcon, user_per.iduser FROM user_per "
 StrSql = StrSql & "INNER JOIN perf_usr ON user_per.perfnro = perf_usr.perfnro "
 StrSql = StrSql & "WHERE user_per.iduser = '" & usuario & "'"
 OpenRecordset StrSql, rs_seguridad

 If rs_seguridad.EOF Then
        perfsegcon = 0
 Else
   If IsNull(rs_seguridad!perfsegcon) Then
        perfsegcon = 0
   Else
        perfsegcon = rs_seguridad!perfsegcon
   End If
 End If
        
 rs_seguridad.Close
 
 '--------------------------------------------------------------------------------------------------------------------
 ' Busco el nivel de seguridad del concepto
 '--------------------------------------------------------------------------------------------------------------------

    StrSql = "SELECT codseguridad FROM concepto "
    StrSql = StrSql & " WHERE concepto.conccod=" & ConcCod
    OpenRecordset StrSql, rs_seguridad
 
    If Not (IsNull(rs_seguridad!codseguridad)) Then
            If rs_seguridad!codseguridad <= CInt(perfsegcon) Then
                tienePermiso = True
            Else
                tienePermiso = False
            End If
    Else
            tienePermiso = True
    End If

    rs_seguridad.Close
    If Not tienePermiso Then
        Texto = ": El usuario:" & usuario & " No tiene autorización sobre el concepto:" & ConcCod
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        HuboError = True
        Exit Sub
    End If

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    'Monto
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    If pos2 = 0 Then
        pos2 = Len(strLinea)
        Monto = Mid(strLinea, pos1, pos2)
        Monto = CDbl(Replace(CStr(Monto), SeparadorDecimal, ".")) 'Modificado ver 4.15
    Else
        Monto = Mid(strLinea, pos1, pos2 - pos1)
        Monto = CDbl(Replace(CStr(Monto), SeparadorDecimal, ".")) 'Modificado ver 4.15
        
        'Puede veniar Fecha Desde; fecha Hasta ó Retroactivo, Periodo desde , Periodo Hasta
        pos1 = pos2 + 1
        pos2 = InStr(pos1 + 1, strLinea, separador)
        If pos2 > 0 Then
            Aux = Mid(strLinea, pos1, pos2 - pos1)
            If IsDate(Aux) Then
                TieneVigencia = True
                'Fecha desde
                FechaDesde = Mid(strLinea, pos1, pos2 - pos1)
            
                'Fecha Hasta
                pos1 = pos2 + 1
                pos2 = InStr(pos1, strLinea, separador)
                If pos2 > 0 Then
                    FechaHasta = Mid(strLinea, pos1, pos2 - pos1)
                    If IsDate(FechaHasta) Then
                        FechaHasta = CDate(FechaHasta)
                    Else
                        If Not EsNulo(FechaHasta) Then
                            Flog.writeline Espacios(Tabulador * 1) & "Fecha no valida "
                            FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": La fecha no es valida "
                            InsertaError 1, 4
                            HuboError = True
                            Exit Sub
                        End If
                    End If
                    'Marca de Retroactividad
                    pos1 = pos2 + 1
                    pos2 = InStr(pos1 + 1, strLinea, separador)
                    Aux = Mid(strLinea, pos1, pos2 - pos1)
                    If UCase(Aux) = "SI" Then
                        EsRetroactivo = True
                    Else
                        EsRetroactivo = False
                    End If
                    If EsRetroactivo Then
                        'si no es Retroactivo, no se guardan periodos
                        'Periodo desde
                        pos1 = pos2 + 1
                        pos2 = InStr(pos1 + 1, strLinea, separador)
                        PeriodoDesde = Mid(strLinea, pos1, pos2 - pos1)
                        
                        'Periodo hasta
                        pos1 = pos2 + 1
                        pos2 = Len(strLinea)
                        PeriodoHasta = Mid(strLinea, pos1, pos2)
                    End If
                Else
                    pos2 = Len(strLinea)
                    FechaHasta = Mid(strLinea, pos1, pos2)
                
                    TieneVigencia = True
                End If
            Else
                If UCase(Aux) = "SI" Then
                    EsRetroactivo = True
                Else
                    EsRetroactivo = False
                End If
                
                If EsRetroactivo Then
                    'si no es Retroactivo, no se guardan periodos
                    'Periodo desde
                    pos1 = pos2 + 1
                    pos2 = InStr(pos1 + 1, strLinea, separador)
                    PeriodoDesde = Mid(strLinea, pos1, pos2 - pos1)
                    
                    'Periodo hasta
                    pos1 = pos2 + 1
                    pos2 = Len(strLinea)
                    PeriodoHasta = Mid(strLinea, pos1, pos2)
                End If
            End If
        Else
            'Viene Vigencia con fecha desde y sin fecha hasta
            pos2 = Len(strLinea)
            FechaDesde = Mid(strLinea, pos1, pos2)
            TieneVigencia = True
            FechaHasta = ""
        End If
    End If


    'LED - 17/12/2013
    'despues de levantar todos los datos del modelo 354, busco los datos de la distribucion
    'Codigo de modelo de asiento
    If EsRetroactivo Then
        pos1 = pos2 + 1
        pos2 = InStr(pos1 + 1, strLinea, separador)
'    Else
 '       If Mid(strLinea, pos1, pos2 - pos1) <> "No" Then
  '      End If
    End If
    If pos2 > 0 And pos2 < Len(strLinea) Then 'Se especifican tipo de motivo y motivo
        masinro = Mid(strLinea, pos1, pos2 - pos1)
        masinro = EliminarCHInvalidosII(masinro, 1, "")
    Else
        pos2 = Len(strLinea)
        masinro = ""
        masinro = ""
    End If
    'Estructura 1
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    If pos2 > 0 Then 'Se especifican tipo de motivo y motivo
        estrnro1 = Mid(strLinea, pos1, pos2 - pos1)
        estrnro1 = EliminarCHInvalidosII(estrnro1, 1, "")
        
            'posible Estructura 2 '-----------------------------------------------------
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    If pos2 > 0 Then 'Se especifican tipo de motivo y motivo
        estrnro2 = Mid(strLinea, pos1, pos2 - pos1)
        estrnro2 = EliminarCHInvalidosII(estrnro2, 1, "")
        
        'posible Estructura 3 '-----------------------------------------------------
        pos1 = pos2 + 1
        pos2 = InStr(pos1 + 1, strLinea, separador)
        If pos2 > 0 Then 'Se especifican tipo de motivo y motivo
            estrnro3 = Mid(strLinea, pos1, pos2 - pos1)
            estrnro3 = EliminarCHInvalidosII(estrnro3, 1, "")
        Else
            pos2 = Len(strLinea)
            estrnro3 = Mid(strLinea, pos1, pos2)
            estrnro3 = EliminarCHInvalidosII(estrnro3, 1, "")
        End If
    
    Else
        pos2 = Len(strLinea)
        estrnro2 = Mid(strLinea, pos1, pos2)
        estrnro2 = EliminarCHInvalidosII(estrnro2, 1, "")
    End If
    Else
        pos2 = Len(strLinea)
        estrnro1 = Mid(strLinea, pos1, pos2)
        estrnro1 = EliminarCHInvalidosII(estrnro1, 1, "")
    End If
    'LED - 17/12/2013

' ====================================================================
'   Validar los parametros Levantados

'EAM- Verifica que exista el legajo para la vista de empleado
'StrSql = "SELECT * FROM v_empleadoproc where empleg = " & NroLegajo
StrSql = "SELECT * FROM empleado where empleg = " & NroLegajo
OpenRecordset StrSql, rs_Empleado
If rs_Empleado.EOF Then
    Flog.writeline Espacios(Tabulador * 1) & "No se encontro el legajo " & NroLegajo
    FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": No se encontro el legajo " & NroLegajo
    InsertaError 1, 8
    HuboError = True
    Exit Sub
Else
    Tercero = rs_Empleado!Ternro
End If

'Que exista el concepto
StrSql = "SELECT * FROM concepto WHERE conccod = '" & ConcCod & "'"
OpenRecordset StrSql, rs_Concepto
If rs_Concepto.EOF Then
    Flog.writeline Espacios(Tabulador * 1) & "No se encontro el Concepto " & ConcCod
    FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": No se encontro el Concepto " & ConcCod
    InsertaError 2, 10
    HuboError = True
    Exit Sub
Else
    ConcNro = rs_Concepto!ConcNro
End If



If EsRetroactivo Then
    'Chequeo que los periodos sean validos
    'Chequeo Periodo Desde
    StrSql = "SELECT * FROM periodo WHERE pliqnro = " & PeriodoDesde
    If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
    OpenRecordset StrSql, rs_Periodo
    
    If rs_Periodo.EOF Then
        Flog.writeline Espacios(Tabulador * 1) & "Periodo Desde Invalido " & PeriodoDesde
        FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": Periodo Desde Invalido " & PeriodoDesde
        InsertaError 6, 36
        HuboError = True
        Exit Sub
    End If
    
    'Chequeo Periodo Hasta
    StrSql = "SELECT * FROM periodo WHERE pliqnro = " & PeriodoHasta
    If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
    OpenRecordset StrSql, rs_Periodo
    
    If rs_Periodo.EOF Then
        Flog.writeline Espacios(Tabulador * 1) & "Periodo Hasta Invalido " & PeriodoHasta
        FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": Periodo Hasta Invalido " & PeriodoHasta
        InsertaError 7, 36
        HuboError = True
        Exit Sub
    End If
End If

'LED - 17/12/2013
'controlo si existe la distribucion y los tipos de estructura configurados
If Len(masinro) = 0 Then
    tieneDistribucion = 0
Else
    'controlo que exista el modelo de asiento
    StrSql = " SELECT masinro FROM mod_asiento WHERE masinro = " & masinro
    OpenRecordset StrSql, rs_modAsi
    If Not rs_modAsi.EOF Then
        Texto = ": Modelo de asiento " & masinro & " Encontrado."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        If Len(estrnro1) > 0 Then
           'controlo que exista la estructura y que este asociada al modelo
            StrSql = " SELECT tenro, estrnro FROM estructura WHERE upper(estrdabr) = '" & UCase(estrnro1) & "'"
            OpenRecordset StrSql, rs_Estructura
            If Not rs_Estructura.EOF Then
                'controlo que la estructura este asociada al modelo de asiento
                StrSql = " SELECT masinro FROM mod_asiento WHERE masinro = " & masinro & " AND masinivternro1 = " & rs_Estructura!Tenro
                OpenRecordset StrSql, rs_Aux
                If Not rs_Aux.EOF Then
                    tenro1 = rs_Estructura!Tenro
                    estrnro1 = rs_Estructura!Estrnro
                    tieneDistribucion = -1
                Else
                    Texto = ": La estructura 1 no esta asociada a al modelo de asiento."
                    NroColumna = 14
                    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                    HuboError = True
                    Exit Sub
                End If
            Else
                Texto = ": La estructura 1 no existe en el sistema."
                NroColumna = 14
                Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                Call InsertaError(14, 2)
                HuboError = True
                Exit Sub
            End If
        Else
            Texto = ": El modelo debe tener al menos una estructura."
            NroColumna = 14
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            Call InsertaError(14, 2)
            HuboError = True
            Exit Sub
        End If
        
        'controlo si existe la estructura 2
        If Len(estrnro2) > 0 Then
           'controlo que exista la estructura y que este asociada al modelo
            StrSql = " SELECT tenro, estrnro FROM estructura WHERE upper(estrdabr) = '" & UCase(estrnro2) & "'"
            OpenRecordset StrSql, rs_Estructura
            If Not rs_Estructura.EOF Then
                'controlo que la estructura este asociada al modelo de asiento
                StrSql = " SELECT masinro FROM mod_asiento WHERE masinro = " & masinro & " AND masinivternro2 = " & rs_Estructura!Tenro
                OpenRecordset StrSql, rs_Aux
                If Not rs_Aux.EOF Then
                    tenro2 = rs_Estructura!Tenro
                    estrnro2 = rs_Estructura!Estrnro
                Else
                    Texto = ": La estructura 2 no esta asociada a al modelo de asiento."
                    NroColumna = 15
                    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                    HuboError = True
                    Exit Sub
                End If
            Else
                Texto = ": La estructura 2 no existe en el sistema."
                NroColumna = 15
                Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                Call InsertaError(14, 2)
                HuboError = True
                Exit Sub
            End If
        Else
            tenro2 = 0
            estrnro2 = 0
            Texto = ": Estructura 2 no informada."
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        End If
        
        'controlo si existe la estructura 3
        If Len(estrnro3) > 0 Then
           'controlo que exista la estructura y que este asociada al modelo
            StrSql = " SELECT tenro, estrnro FROM estructura WHERE upper(estrdabr) = '" & UCase(estrnro3) & "'"
            OpenRecordset StrSql, rs_Estructura
            If Not rs_Estructura.EOF Then
                'controlo que la estructura este asociada al modelo de asiento
                StrSql = " SELECT masinro FROM mod_asiento WHERE masinro = " & masinro & " AND masinivternro3 = " & rs_Estructura!Tenro
                OpenRecordset StrSql, rs_Aux
                If Not rs_Aux.EOF Then
                    tenro3 = rs_Estructura!Tenro
                    estrnro3 = rs_Estructura!Estrnro
                Else
                    Texto = ": La estructura 3 no esta asociada a al modelo de asiento."
                    NroColumna = 15
                    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                    HuboError = True
                    Exit Sub
                End If
            Else
                Texto = ": La estructura 3 no existe en el sistema."
                NroColumna = 15
                Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                Call InsertaError(14, 2)
                HuboError = True
                Exit Sub
            End If
        Else
            tenro3 = 0
            estrnro3 = 0
            Texto = ": Estructura 3 no informada."
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        End If
        
        
    Else
        Texto = ": No existe el modelo de asiento " & masinro
        NroColumna = 13
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call InsertaError(13, 2)
        HuboError = True
        Exit Sub
    End If
End If
'LED - 17/12/2013
'=============================================================
'Busco si existe la Novedad
If Not TieneVigencia Then
    StrSql = "SELECT * FROM novaju WHERE "
    StrSql = StrSql & " concnro = " & ConcNro
    StrSql = StrSql & " AND empleado = " & Tercero
    StrSql = StrSql & " AND (navigencia = -1 OR navigencia = 0) "
    StrSql = StrSql & " ORDER BY navigencia "
    If rs_NovAju.State = adStateOpen Then rs_NovAju.Close
    OpenRecordset StrSql, rs_NovAju

    If Not rs_NovAju.EOF Then
        If CBool(rs_NovAju!navigencia) Then
            Select Case CInt(AccionNovedadAju)
                Case -1: 'Actualizo la Novedad
                    If Not EsRetroactivo Then
                        StrSql = "UPDATE novaju SET navalor = " & Monto & ", nadist = " & tieneDistribucion
                        StrSql = StrSql & " WHERE nanro = " & rs_NovAju!nanro
                    Else
                        StrSql = "UPDATE novaju SET navalor = " & Monto
                        StrSql = StrSql & " , napliqdesde =  " & PeriodoDesde
                        StrSql = StrSql & " , napliqhasta =  " & PeriodoHasta
                        StrSql = StrSql & " , nadist = " & tieneDistribucion
                        StrSql = StrSql & " WHERE nanro = " & rs_NovAju!nanro
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = "Novedad de Ajuste Actualizada "
                    Flog.writeline Espacios(Tabulador * 1) & Texto
                    
                    'LED - 17/12/2013
                    If (CLng(tieneDistribucion) = -1) Then
                        
                        StrSql = "SELECT novnro FROM nov_dist WHERE novnro=" & rs_NovAju!nanro & " AND tiponov= 2"
                        OpenRecordset StrSql, rs_Aux
                        
                        'LED Si existe lo acutalizo
                        If Not rs_Aux.EOF Then
                            StrSql = "UPDATE nov_dist " & _
                                    " SET masinro= " & masinro & ", tenro=" & tenro1 & ", estrnro= " & estrnro1 & ", tenro2= " & tenro2 & _
                                    ",estrnro2= " & estrnro2 & ",tenro3= " & tenro3 & ", estrnro3= " & estrnro3 & _
                                    " WHERE novnro = " & rs_NovAju!nanro
                        Else
                            'LED Si No existe lo inserto
                            StrSql = "INSERT INTO nov_dist " & _
                                     " (novnro,auto,tiponov,concnro,tpanro,masinro,tenro,estrnro,tenro2,estrnro2,tenro3,estrnro3)" & _
                                     " VALUES (" & rs_NovAju!nanro & ",0,2," & ConcNro & " , NULL," & masinro & "," & tenro1 & "," & estrnro1 & "," & tenro2 & "," & estrnro2 & "," & tenro3 & "," & estrnro3 & ")"
                        End If
                        objConn.Execute StrSql, , adExecuteNoRecords
                    
                    Else
                        'LED- Verifica si tenía una distribución. Si existe la elimina
                        StrSql = "SELECT novnro FROM nov_dist WHERE novnro=" & rs_NovAju!nanro & " AND tiponov= 2"
                        OpenRecordset StrSql, rs_Aux
                        If Not rs_Aux.EOF Then
                            StrSql = "DELETE nov_dist WHERE novnro=" & rs_NovAju!nanro & " AND tiponov= 2"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                    'LED - 17/12/2013
                    
                Case 0: 'Mantiene Novedades
                    Texto = "No se insertó la novedad de ajuste. Ya existe y no se pisa."
                    Flog.writeline Espacios(Tabulador * 1) & Texto
                
                Case 1: 'Suma Novedades
                    If Not EsRetroactivo Then
                        StrSql = "UPDATE novaju SET navalor = navalor + " & Monto
                        StrSql = StrSql & " , nadist = " & tieneDistribucion
                        StrSql = StrSql & " WHERE nanro = " & rs_NovAju!nanro
                    Else
                        StrSql = "UPDATE novaju SET navalor = navalor + " & Monto
                        StrSql = StrSql & " , napliqdesde =  " & PeriodoDesde
                        StrSql = StrSql & " , napliqhasta =  " & PeriodoHasta
                        StrSql = StrSql & " , nadist = " & tieneDistribucion
                        StrSql = StrSql & " WHERE nanro = " & rs_NovAju!nanro
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = "Novedad de Ajuste Sumada "
                    Flog.writeline Espacios(Tabulador * 1) & Texto
                    
                    'LED - 17/12/2013
                    If (CLng(tieneDistribucion) = -1) Then
                        
                        StrSql = "SELECT novnro FROM nov_dist WHERE novnro=" & rs_NovAju!nanro & " AND tiponov= 2"
                        OpenRecordset StrSql, rs_Aux
                        
                        'LED Si existe lo acutalizo
                        If Not rs_Aux.EOF Then
                            StrSql = "UPDATE nov_dist " & _
                                    " SET masinro= " & masinro & ", tenro=" & tenro1 & ", estrnro= " & estrnro1 & ", tenro2= " & tenro2 & _
                                    ",estrnro2= " & estrnro2 & ",tenro3= " & tenro3 & ", estrnro3= " & estrnro3 & _
                                    " WHERE novnro = " & rs_NovAju!nanro
                        Else
                            'LED Si No existe lo inserto
                            StrSql = "INSERT INTO nov_dist " & _
                                     " (novnro,auto,tiponov,concnro,tpanro,masinro,tenro,estrnro,tenro2,estrnro2,tenro3,estrnro3)" & _
                                     " VALUES (" & rs_NovAju!nanro & ",0,2," & ConcNro & " ,NULL," & masinro & "," & tenro1 & "," & estrnro1 & "," & tenro2 & "," & estrnro2 & "," & tenro3 & "," & estrnro3 & ")"
                        End If
                        objConn.Execute StrSql, , adExecuteNoRecords
                    
                    Else
                        'LED- Verifica si tenía una distribución. Si existe la elimina
                        StrSql = "SELECT novnro FROM nov_dist WHERE novnro=" & rs_NovAju!nanro & " AND tiponov= 2"
                        OpenRecordset StrSql, rs_Aux
                        If Not rs_Aux.EOF Then
                            StrSql = "DELETE nov_dist WHERE novnro=" & rs_NovAju!nanro & " AND tiponov= 2"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                    'LED - 17/12/2013
            End Select
        Else
            
            Select Case CInt(AccionNovedadAju)
                Case -1: 'Actualizo la Novedad
                    If Not EsRetroactivo Then
                        StrSql = "UPDATE novaju SET navalor = " & Monto & ", nadist = " & tieneDistribucion
                        StrSql = StrSql & " WHERE nanro = " & rs_NovAju!nanro
                    Else
                        StrSql = "UPDATE novaju SET navalor = " & Monto
                        StrSql = StrSql & " , napliqdesde =  " & PeriodoDesde
                        StrSql = StrSql & " , napliqhasta =  " & PeriodoHasta
                        StrSql = StrSql & " , nadist = " & tieneDistribucion
                        StrSql = StrSql & " WHERE nanro = " & rs_NovAju!nanro
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = "Novedad de Ajuste Actualizada "
                    Flog.writeline Espacios(Tabulador * 1) & Texto
                    
                    'LED - 17/12/2013
                    If (CLng(tieneDistribucion) = -1) Then
                        
                        StrSql = "SELECT novnro FROM nov_dist WHERE novnro=" & rs_NovAju!nanro & " AND tiponov= 2"
                        OpenRecordset StrSql, rs_Aux
                        
                        'LED Si existe lo acutalizo
                        If Not rs_Aux.EOF Then
                            StrSql = "UPDATE nov_dist " & _
                                    " SET masinro= " & masinro & ", tenro=" & tenro1 & ", estrnro= " & estrnro1 & ", tenro2= " & tenro2 & _
                                    ",estrnro2= " & estrnro2 & ",tenro3= " & tenro3 & ", estrnro3= " & estrnro3 & _
                                    " WHERE novnro = " & rs_NovAju!nanro
                        Else
                            'LED Si No existe lo inserto
                            StrSql = "INSERT INTO nov_dist " & _
                                     " (novnro,auto,tiponov,concnro,tpanro,masinro,tenro,estrnro,tenro2,estrnro2,tenro3,estrnro3)" & _
                                     " VALUES (" & rs_NovAju!nanro & ",0,2," & ConcNro & " , NULL," & masinro & "," & tenro1 & "," & estrnro1 & "," & tenro2 & "," & estrnro2 & "," & tenro3 & "," & estrnro3 & ")"
                        End If
                        objConn.Execute StrSql, , adExecuteNoRecords
                    
                    Else
                        'LED- Verifica si tenía una distribución. Si existe la elimina
                        StrSql = "SELECT novnro FROM nov_dist WHERE novnro=" & rs_NovAju!nanro & " AND tiponov= 2"
                        OpenRecordset StrSql, rs_Aux
                        If Not rs_Aux.EOF Then
                            StrSql = "DELETE nov_dist WHERE novnro=" & rs_NovAju!nanro & " AND tiponov= 2"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                    'LED - 17/12/2013
                    
                Case 0: 'Mantiene Novedades
                    Texto = "No se insertó la novedad de ajuste. Ya existe y no se pisa."
                    Flog.writeline Espacios(Tabulador * 1) & Texto
                
                Case 1: 'Suma Novedades
                    If Not EsRetroactivo Then
                        StrSql = "UPDATE novaju SET navalor = navalor + " & Monto
                        StrSql = StrSql & " , nadist = " & tieneDistribucion
                        StrSql = StrSql & " WHERE nanro = " & rs_NovAju!nanro
                    Else
                        StrSql = "UPDATE novaju SET navalor = navalor + " & Monto
                        StrSql = StrSql & " , napliqdesde =  " & PeriodoDesde
                        StrSql = StrSql & " , napliqhasta =  " & PeriodoHasta
                        StrSql = StrSql & " , nadist = " & tieneDistribucion
                        StrSql = StrSql & " WHERE nanro = " & rs_NovAju!nanro
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = "Novedad de Ajuste Sumada "
                    Flog.writeline Espacios(Tabulador * 1) & Texto
                    
                    'LED - 17/12/2013
                    If (CLng(tieneDistribucion) = -1) Then
                        
                        StrSql = "SELECT novnro FROM nov_dist WHERE novnro=" & rs_NovAju!nanro & " AND tiponov= 2"
                        OpenRecordset StrSql, rs_Aux
                        
                        'LED Si existe lo acutalizo
                        If Not rs_Aux.EOF Then
                            StrSql = "UPDATE nov_dist " & _
                                    " SET masinro= " & masinro & ", tenro=" & tenro1 & ", estrnro= " & estrnro1 & ", tenro2= " & tenro2 & _
                                    ",estrnro2= " & estrnro2 & ",tenro3= " & tenro3 & ", estrnro3= " & estrnro3 & _
                                    " WHERE novnro = " & rs_NovAju!nanro
                        Else
                            'LED Si No existe lo inserto
                            StrSql = "INSERT INTO nov_dist " & _
                                     " (novnro,auto,tiponov,concnro,tpanro,masinro,tenro,estrnro,tenro2,estrnro2,tenro3,estrnro3)" & _
                                     " VALUES (" & rs_NovAju!nanro & ",0,2," & ConcNro & " ,NULL," & masinro & "," & tenro1 & "," & estrnro1 & "," & tenro2 & "," & estrnro2 & "," & tenro3 & "," & estrnro3 & ")"
                        End If
                        objConn.Execute StrSql, , adExecuteNoRecords
                    
                    Else
                        'LED- Verifica si tenía una distribución. Si existe la elimina
                        StrSql = "SELECT novnro FROM nov_dist WHERE novnro=" & rs_NovAju!nanro & " AND tiponov= 2"
                        OpenRecordset StrSql, rs_Aux
                        If Not rs_Aux.EOF Then
                            StrSql = "DELETE nov_dist WHERE novnro=" & rs_NovAju!nanro & " AND tiponov= 2"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                    'LED - 17/12/2013
            End Select
            
            
'            'Inserto
'            If Not EsRetroactivo Then
'                StrSql = "INSERT INTO novaju (" & _
'                        "empleado,concnro,navalor,navigencia, nadist" & _
'                        ") VALUES (" & Tercero & _
'                        "," & ConcNro & _
'                        "," & Monto & _
'                        ",0" & _
'                        "," & tieneDistribucion & _
'                        " )"
'            Else
'                StrSql = "INSERT INTO novaju (" & _
'                        "empleado,concnro,navalor,navigencia,napliqdesde,napliqhasta,nadist" & _
'                        ") VALUES (" & Tercero & _
'                        "," & ConcNro & _
'                        "," & Monto & _
'                        "," & CLng(TieneVigencia) & _
'                        "," & PeriodoDesde & _
'                        "," & PeriodoHasta & _
'                        "," & tieneDistribucion & _
'                        " )"
'            End If
'            objConn.Execute StrSql, , adExecuteNoRecords
'            Flog.writeline Espacios(Tabulador * 1) & "Novedad insertada "
'
'            'LED - 17/12/2013
'            If (CLng(tieneDistribucion) = -1) Then
'                nanro = getLastIdentity(objConn, "novaju")
'
'                StrSql = "INSERT INTO nov_dist " & _
'                         " (novnro,auto,tiponov,concnro,tpanro,masinro,tenro,estrnro,tenro2,estrnro2,tenro3,estrnro3)" & _
'                         " VALUES (" & nanro & ",0,2," & ConcNro & " ,NULL ," & masinro & "," & tenro1 & "," & estrnro1 & "," & tenro2 & "," & estrnro2 & "," & tenro3 & "," & estrnro3 & ")"
'                objConn.Execute StrSql, , adExecuteNoRecords
'                Texto = "Distribucion Insertada "
'                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
'
'            End If
'            'LED - 17/12/2013
        End If
    Else
        'Inserto
        If Not EsRetroactivo Then
            StrSql = "INSERT INTO novaju (" & _
                     "empleado,concnro,navalor,navigencia,nadist " & _
                     ") VALUES (" & Tercero & _
                     "," & ConcNro & _
                     "," & Monto & _
                     ",0" & _
                     "," & tieneDistribucion & _
                     " )"
        Else
            StrSql = "INSERT INTO novaju (" & _
                     "empleado,concnro,navalor,navigencia,napliqdesde,napliqhasta,nadist " & _
                     ") VALUES (" & Tercero & _
                     "," & ConcNro & _
                     "," & Monto & _
                     "," & CLng(TieneVigencia) & _
                     "," & PeriodoDesde & _
                     "," & PeriodoHasta & _
                     "," & tieneDistribucion & _
                     " )"
        End If
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline Espacios(Tabulador * 1) & "Novedad insertada "
        
        'LED - 17/12/2013
        If (CLng(tieneDistribucion) = -1) Then
            nanro = getLastIdentity(objConn, "novaju")
            
            StrSql = "INSERT INTO nov_dist " & _
                     " (novnro,auto,tiponov,concnro,tpanro,masinro,tenro,estrnro,tenro2,estrnro2,tenro3,estrnro3)" & _
                     " VALUES (" & nanro & ",0,2," & ConcNro & " ,NULL ," & masinro & "," & tenro1 & "," & estrnro1 & "," & tenro2 & "," & estrnro2 & "," & tenro3 & "," & estrnro3 & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            Texto = "Distribucion Insertada "
            Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
        
        End If
        'LED - 17/12/2013
    End If
Else 'Tiene Vigencia
    'Reviso que no se pise
    StrSql = "SELECT * FROM novaju WHERE "
    StrSql = StrSql & " concnro = " & ConcNro
    StrSql = StrSql & " AND empleado = " & Tercero
    StrSql = StrSql & " AND (navigencia = 0 "
    StrSql = StrSql & " OR (navigencia = -1 "
    If Not EsNulo(FechaHasta) Then
        StrSql = StrSql & " AND (nadesde <= " & ConvFecha(FechaHasta)
        StrSql = StrSql & " AND nahasta >= " & ConvFecha(FechaDesde) & ")"
        StrSql = StrSql & " OR  (nadesde <= " & ConvFecha(FechaHasta)
        StrSql = StrSql & " AND nahasta is null )))"
    Else
        StrSql = StrSql & " AND nahasta is null OR nahasta >= " & ConvFecha(FechaDesde) & "))"
    End If
    If rs_NovAju.State = adStateOpen Then rs_NovAju.Close
    OpenRecordset StrSql, rs_NovAju

    If Not rs_NovAju.EOF Then
            Select Case CInt(AccionNovedadAju)
                Case -1: 'Actualizo la Novedad
                    If Not EsRetroactivo Then
                        StrSql = "UPDATE novaju SET navalor = " & Monto
                        StrSql = StrSql & ", nadist = " & tieneDistribucion
                        StrSql = StrSql & " WHERE nanro = " & rs_NovAju!nanro
                    Else
                        StrSql = "UPDATE novaju SET navalor = " & Monto
                        StrSql = StrSql & " , napliqdesde =  " & PeriodoDesde
                        StrSql = StrSql & " , napliqhasta =  " & PeriodoHasta
                        StrSql = StrSql & ", nadist = " & tieneDistribucion
                        StrSql = StrSql & " WHERE nanro = " & rs_NovAju!nanro
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = "Novedad de Ajuste Actualizada "
                    Flog.writeline Espacios(Tabulador * 1) & Texto
                    
                    'LED - 17/12/2013
                    If (CLng(tieneDistribucion) = -1) Then
                        
                        StrSql = "SELECT novnro FROM nov_dist WHERE novnro=" & rs_NovAju!nanro & " AND tiponov= 2"
                        OpenRecordset StrSql, rs_Aux
                        
                        'LED Si existe lo acutalizo
                        If Not rs_Aux.EOF Then
                            StrSql = "UPDATE nov_dist " & _
                                    " SET masinro= " & masinro & ", tenro=" & tenro1 & ", estrnro= " & estrnro1 & ", tenro2= " & tenro2 & _
                                    ",estrnro2= " & estrnro2 & ",tenro3= " & tenro3 & ", estrnro3= " & estrnro3 & _
                                    " WHERE novnro = " & rs_NovAju!nanro
                        Else
                            'LED Si No existe lo inserto
                            StrSql = "INSERT INTO nov_dist " & _
                                     " (novnro,auto,tiponov,concnro,tpanro,masinro,tenro,estrnro,tenro2,estrnro2,tenro3,estrnro3)" & _
                                     " VALUES (" & rs_NovAju!nanro & ",0,2," & ConcNro & " ,NULL ," & masinro & "," & tenro1 & "," & estrnro1 & "," & tenro2 & "," & estrnro2 & "," & tenro3 & "," & estrnro3 & ")"
                        End If
                        objConn.Execute StrSql, , adExecuteNoRecords
                    
                    Else
                        'LED- Verifica si tenía una distribución. Si existe la elimina
                        StrSql = "SELECT novnro FROM nov_dist WHERE novnro=" & rs_NovAju!nanro & " AND tiponov= 2"
                        OpenRecordset StrSql, rs_Aux
                        If Not rs_Aux.EOF Then
                            StrSql = "DELETE nov_dist WHERE novnro=" & rs_NovAju!nanro & " AND tiponov= 2"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                    'LED - 17/12/2013
                    
                Case 0: 'Mantiene Novedades
                    Texto = "No se insertó la novedad de ajuste. Ya existe y no se pisa."
                    Flog.writeline Espacios(Tabulador * 1) & Texto
                Case 1: 'Suma Novedades
                    If Not EsRetroactivo Then
                        StrSql = "UPDATE novaju SET navalor = navalor + " & Monto
                        StrSql = StrSql & ", nadist = " & tieneDistribucion
                        StrSql = StrSql & " WHERE nanro = " & rs_NovAju!nanro
                    Else
                        StrSql = "UPDATE novaju SET navalor = navalor + " & Monto
                        StrSql = StrSql & " , napliqdesde =  " & PeriodoDesde
                        StrSql = StrSql & " , napliqhasta =  " & PeriodoHasta
                        StrSql = StrSql & ", nadist = " & tieneDistribucion
                        StrSql = StrSql & " WHERE nanro = " & rs_NovAju!nanro
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = "Novedad de Ajuste Sumada "
                    Flog.writeline Espacios(Tabulador * 1) & Texto
                    
                    'LED - 17/12/2013
                    If (CLng(tieneDistribucion) = -1) Then
                        
                        StrSql = "SELECT novnro FROM nov_dist WHERE novnro=" & rs_NovAju!nanro & " AND tiponov= 2"
                        OpenRecordset StrSql, rs_Aux
                        
                        'LED Si existe lo acutalizo
                        If Not rs_Aux.EOF Then
                            StrSql = "UPDATE nov_dist " & _
                                    " SET masinro= " & masinro & ", tenro=" & tenro1 & ", estrnro= " & estrnro1 & ", tenro2= " & tenro2 & _
                                    ",estrnro2= " & estrnro2 & ",tenro3= " & tenro3 & ", estrnro3= " & estrnro3 & _
                                    " WHERE novnro = " & rs_NovAju!nanro
                        Else
                            'LED Si No existe lo inserto
                            StrSql = "INSERT INTO nov_dist " & _
                                     " (novnro,auto,tiponov,concnro,tpanro,masinro,tenro,estrnro,tenro2,estrnro2,tenro3,estrnro3)" & _
                                     " VALUES (" & rs_NovAju!nanro & ",0,2," & ConcNro & " ,NULL ," & masinro & "," & tenro1 & "," & estrnro1 & "," & tenro2 & "," & estrnro2 & "," & tenro3 & "," & estrnro3 & ")"
                        End If
                        objConn.Execute StrSql, , adExecuteNoRecords
                    
                    Else
                        'LED- Verifica si tenía una distribución. Si existe la elimina
                        StrSql = "SELECT novnro FROM nov_dist WHERE novnro=" & rs_NovAju!nanro & " AND tiponov= 2"
                        OpenRecordset StrSql, rs_Aux
                        If Not rs_Aux.EOF Then
                            StrSql = "DELETE nov_dist WHERE novnro=" & rs_NovAju!nanro & " AND tiponov= 2"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                    'LED - 17/12/2013
            End Select
    Else
        If Not EsRetroactivo Then
            StrSql = "INSERT INTO novaju ("
            StrSql = StrSql & "empleado,concnro,navalor,navigencia,nadesde,nadist "
            If Not EsNulo(FechaHasta) Then
                StrSql = StrSql & ",nahasta"
            End If
            StrSql = StrSql & ") VALUES (" & Tercero
            StrSql = StrSql & "," & ConcNro
            StrSql = StrSql & "," & Monto
            StrSql = StrSql & ",-1"
            StrSql = StrSql & "," & ConvFecha(FechaDesde)
            StrSql = StrSql & "," & tieneDistribucion
            If Not EsNulo(FechaHasta) Then
                StrSql = StrSql & "," & ConvFecha(FechaHasta)
            End If
            StrSql = StrSql & " )"
        Else
            StrSql = "INSERT INTO novaju ("
            StrSql = StrSql & "empleado,concnro,navalor,navigencia,nadesde,nadist"
            If Not EsNulo(FechaHasta) Then
                StrSql = StrSql & ",nahasta"
            End If
            StrSql = StrSql & ",napliqdesde,napliqhasta"
            StrSql = StrSql & ") VALUES (" & Tercero
            StrSql = StrSql & "," & ConcNro
            StrSql = StrSql & "," & Monto
            StrSql = StrSql & ",-1"
            StrSql = StrSql & "," & ConvFecha(FechaDesde)
            StrSql = StrSql & "," & tieneDistribucion
            If Not EsNulo(FechaHasta) Then
                StrSql = StrSql & "," & ConvFecha(FechaHasta)
            End If
            StrSql = StrSql & "," & PeriodoDesde
            StrSql = StrSql & "," & PeriodoHasta
            StrSql = StrSql & " )"
        End If
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline Espacios(Tabulador * 1) & "Novedad insertada "
        
        'LED - 17/12/2013
        If (CLng(tieneDistribucion) = -1) Then
            nanro = getLastIdentity(objConn, "novaju")
            
            StrSql = "INSERT INTO nov_dist " & _
                     " (novnro,auto,tiponov,concnro,tpanro,masinro,tenro,estrnro,tenro2,estrnro2,tenro3,estrnro3)" & _
                     " VALUES (" & nanro & ",0,2," & ConcNro & " ,NULL ," & masinro & "," & tenro1 & "," & estrnro1 & "," & tenro2 & "," & estrnro2 & "," & tenro3 & "," & estrnro3 & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            Texto = "Distribucion Insertada "
            Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
        
        End If
        'LED - 17/12/2013
    End If
  End If


Fin:

'Cierro todo y libero
If rs_NovAju.State = adStateOpen Then rs_NovAju.Close
If rs_Empleado.State = adStateOpen Then rs_Empleado.Close
If rs_Concepto.State = adStateOpen Then rs_Concepto.Close
If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
If rs_modAsi.State = adStateOpen Then rs_modAsi.Close
If rs_Estructura.State = adStateOpen Then rs_Estructura.Close
If rs_Aux.State = adStateOpen Then rs_Aux.Close

Set rs_NovAju = Nothing
Set rs_Empleado = Nothing
Set rs_Concepto = Nothing
Set rs_Periodo = Nothing
Set rs_modAsi = Nothing
Set rs_Estructura = Nothing
Set rs_Aux = Nothing

Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    If InStr(1, Err.Description, "ODBC") > 0 Then
        'Fue error de Consulta de SQL
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
        Flog.writeline
    End If
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    GoTo Fin
End Sub

Public Sub LineaModelo_290(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Inserta el diccionario de competencias basico
' Autor      : Carmen Quintero
'              El formato es:
'                       Descripción Abrv. Area; Descripción Abrv. Competencia; Descripción Ext. Competencia;
'                       Mostrar Descripción Abrv.; Mostrar Descripción Ext.; Potencial;
' Fecha      : 18/12/2013
' Ultima Mod.:
' ---------------------------------------------------------------------------------------------

Dim pos1 As Long
Dim pos2 As Long
    
Dim l_tildeAbr As Boolean
Dim l_tildeExt As Boolean
Dim l_insertar As Boolean


Dim EvaTitDesabr As String
Dim EvaFacDesabr As String
Dim EvaFacDesext As String
Dim EvaFacVer As Integer
Dim EvaFacPot As Integer
Dim EvaTitCondObs As String
Dim EvaTitNro As Integer


Dim rs_Area As New ADODB.Recordset
Dim rs_Competencia As New ADODB.Recordset
Dim rs_Potencial As New ADODB.Recordset

On Error GoTo Manejador_De_Error
    Tabs = 1
    
    Texto = "Procesando linea " & strLinea
    Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    
    'Descripción Abrv. Area
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Descripción-Abrv.-Area"
    pos1 = 1
    pos2 = InStr(pos1, strLinea, separador)
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
        InsertaError 1, 25
        HuboError = True
        Exit Sub
    End If
    EvaTitDesabr = Left(Aux, 60)
        
    'Descripción Abrv. Competencia
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Descripción-Abrv.-Competencia"
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
        InsertaError 2, 25
        HuboError = True
        Exit Sub
    End If
    EvaFacDesabr = Left(Aux, 100)
    
    'Descripción Ext. Competencia
    NroColumna = NroColumna + 1
    Campoetiqueta = "Descripción-Ext.-Competencia"
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    If IsNumeric(Aux) Then
        Texto = " - Campo " & Campoetiqueta & " no debe ser númerico"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
        HuboError = True
        Exit Sub
    End If
    If Len(Aux) > 0 Then
        EvaFacDesext = Left(Aux, 1500)
    Else
        EvaFacDesext = ""
    End If
    
    'Mostrar Descripción Abrv.
    EvaFacVer = 0
    l_tildeAbr = False
    l_tildeExt = False
    NroColumna = NroColumna + 1
    Campoetiqueta = "Mostrar-Descripción-Abrv."
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    If Len(Aux) > 0 Then
        If Trim(Aux) <> "SI" And Trim(Aux) <> "NO" Then
            Texto = " - Campo " & Campoetiqueta & " debe ser 'SI/NO'"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
            HuboError = True
            Exit Sub
        End If
    End If
    If Trim(Aux) = "SI" Then
        l_tildeAbr = True
    End If
    
    'Mostrar Descripción Ext.
    NroColumna = NroColumna + 1
    Campoetiqueta = "Mostrar-Descripción-Ext."
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    If Len(Aux) > 0 Then
        If Trim(Aux) <> "SI" And Trim(Aux) <> "NO" Then
            Texto = " - Campo " & Campoetiqueta & " debe ser 'SI/NO'"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
            HuboError = True
            Exit Sub
        End If
    End If
    If Trim(Aux) = "SI" Then
        EvaFacVer = 1
        l_tildeExt = True
    End If
    If l_tildeAbr And l_tildeExt Then
        EvaFacVer = 2
    End If
    
    'Potencial.
    NroColumna = NroColumna + 1
    Campoetiqueta = "Potencial"
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    
    If pos2 > 0 Then
        Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    Else
        pos2 = Len(strLinea)
        Aux = Trim(Mid(strLinea, pos1, pos2))
    End If
    
    If Len(Aux) > 0 Then
        If Trim(Aux) <> "SI" And Trim(Aux) <> "NO" Then
            Texto = " - Campo " & Campoetiqueta & " debe ser 'SI/NO'"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
            HuboError = True
            Exit Sub
        End If
    End If
    If Trim(Aux) = "SI" Then
        EvaFacPot = 1
    Else
        EvaFacPot = 0
    End If
    
   
    ' ====================================================================
    '   Validar los parametros Levantados
    ' ====================================================================
      
    l_insertar = False
    
    'verifico si existe el area, sino, la creo
    StrSql = "SELECT * FROM evatitulo WHERE evatitdesabr = '" & EvaTitDesabr & "'"
    OpenRecordset StrSql, rs_Area
    If rs_Area.EOF Then
        EvaTitCondObs = ""
        StrSql = "INSERT INTO evatitulo(evatitdesabr,evatitcondobs)"
        StrSql = StrSql & " VALUES ("
        StrSql = StrSql & "'" & EvaTitDesabr & "'"
        StrSql = StrSql & ",'" & EvaTitCondObs & "'"
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        EvaTitNro = getLastIdentity(objConn, "evatitulo")
    Else
        EvaTitNro = rs_Area!EvaTitNro
    End If
    
    'verifico si existe la competencia, sino, la creo
    StrSql = "SELECT * FROM evafactor WHERE evafacdesabr = '" & EvaFacDesabr & "'"
    OpenRecordset StrSql, rs_Competencia
    If rs_Competencia.EOF Then
        If EvaFacPot = 1 Then
            StrSql = "SELECT evafacnro "
            StrSql = StrSql & " FROM evafactor "
            StrSql = StrSql & " WHERE evafacpot=-1"
            StrSql = StrSql & " AND evafacnro <> " & EvaTitNro
            OpenRecordset StrSql, rs_Potencial
            If Not rs_Potencial Then
                rs_Potencial.Close
                Set rs_Potencial = Nothing
                Texto = ": " & "Existe otra Competencia que define Potencial."
                Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                Call InsertaError(6, 145)
                HuboError = True
                Exit Sub
            Else
                l_insertar = True
            End If
        Else
            l_insertar = True
        End If
    Else
        ' Actualizo la tabla de competencias
        StrSql = "UPDATE evafactor SET "
        StrSql = StrSql & "evafacdesext='" & EvaFacDesext & "'"
        StrSql = StrSql & ", evatitnro=" & EvaTitNro
        StrSql = StrSql & ", evafacpot=" & EvaFacPot
        StrSql = StrSql & ", evafacver = " & EvaFacVer
        StrSql = StrSql & "  WHERE evafacdesabr = '" & EvaFacDesabr & "'"
        objConn.Execute StrSql, , adExecuteNoRecords
        
    End If
          
    If l_insertar Then
        StrSql = "INSERT INTO evafactor(evafacdesabr,evafacdesext,evatitnro,evafacpot,evafacver)"
        StrSql = StrSql & " VALUES ("
        StrSql = StrSql & "'" & EvaFacDesabr & "'"
        StrSql = StrSql & ",'" & EvaFacDesext & "'"
        StrSql = StrSql & "," & EvaTitNro
        StrSql = StrSql & " ," & EvaFacPot
        StrSql = StrSql & " ," & EvaFacVer
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
    End If
          
    Texto = "Competencia insertada "
    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)

Fin:
'Cierro todo y libero
If rs_Area.State = adStateOpen Then rs_Area.Close
If rs_Competencia.State = adStateOpen Then rs_Competencia.Close
If rs_Potencial.State = adStateOpen Then rs_Potencial.Close

Set rs_Area = Nothing
Set rs_Competencia = Nothing
Set rs_Potencial = Nothing
Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    Texto = Err.Description
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(1, 7)
    GoTo Fin
End Sub

Public Sub LineaModelo_291(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Inserta los estudios formales del empleado
' Autor      : Carmen Quintero
'              El formato es:
'                       Descripción Abrv. Area; Descripción Abrv. Competencia; Descripción Ext. Competencia;
'                       Mostrar Descripción Abrv.; Mostrar Descripción Ext.; Potencial;
' Fecha      : 04/04/2014
' Ultima Mod.:
' ---------------------------------------------------------------------------------------------

Dim pos1 As Long
Dim pos2 As Long
    
Dim Nro_Legajo As Long
Dim Ternro As Long
Dim nivdesc As String
Dim Titdesabr As String
Dim Instdes As String
Dim Carredudesabr As String
Dim l_tildeCompleto As Boolean
Dim CapComp As Long
Dim CapcantMat As Long
Dim CapfecDes
Dim CapfecHas
Dim CapestAct As Long
Dim CapRango As String
Dim CapProm As String
Dim CapActual As Long
Dim FutDesc As String
Dim CapanoCur As Long
Dim nivnro As Integer
Dim TitNro As Integer
Dim InstNro As Integer
Dim CarreduNro As Integer

Dim rs_Empleado As New ADODB.Recordset
Dim rs_Nivel As New ADODB.Recordset
Dim rs_Titulo As New ADODB.Recordset
Dim rs_institucion As New ADODB.Recordset
Dim rs_Cap_Carr_Edu As New ADODB.Recordset
Dim rs_Cap_Estformal As New ADODB.Recordset


On Error GoTo Manejador_De_Error
    Tabs = 1
    
    Texto = "Procesando linea " & strLinea
    Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    
    'Nro de legajo
    NroColumna = NroColumna + 1
    Campoetiqueta = "Empleado"
    pos1 = 1
    pos2 = InStr(pos1, strLinea, separador)
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    'Flog.writeline Espacios(Tabulador * 1) & "legajo " & Aux
    If Len(Aux) > 0 Then
        If Not IsNumeric(Aux) Then
            Texto = " - Campo " & Campoetiqueta & " El legajo no es númerico"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
            InsertaError 1, 8
            HuboError = True
            Exit Sub
        End If
    End If
    If Len(Aux) > 0 Then
        Nro_Legajo = CInt(Left(Aux, 10))
    Else
        Nro_Legajo = 0
    End If
    
    'Nivel de estudio
    NroColumna = NroColumna + 1
    Campoetiqueta = "Nivel-de-Estudio"
    pos1 = pos2 + 1
    pos2 = InStr(pos1, strLinea, separador)
    If pos2 = 0 Then
        pos2 = Len(strLinea)
        Aux = Trim(Mid(strLinea, pos1, pos2))
    Else
        Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    End If
    'Flog.writeline Espacios(Tabulador * 1) & "nivel " & Aux
    If Len(Aux) > 0 Then
        If IsNumeric(Aux) Then
            Texto = " - Campo " & Campoetiqueta & " no debe ser númerico"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
            HuboError = True
            Exit Sub
        End If
    End If
    If Len(Aux) > 0 Then
        nivdesc = Left(Aux, 30)
    Else
        nivdesc = ""
    End If
        
    'Titulo
    NroColumna = NroColumna + 1
    Campoetiqueta = "Titulo"
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    If pos2 = 0 Then
        pos2 = Len(strLinea)
        Aux = Trim(Mid(strLinea, pos1, pos2))
    Else
        Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    End If
    'Flog.writeline Espacios(Tabulador * 1) & "titulo " & Aux
    If Len(Aux) > 0 Then
        If IsNumeric(Aux) Then
            Texto = " - Campo " & Campoetiqueta & " no debe ser númerico"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
            HuboError = True
            Exit Sub
        End If
    End If
    If Len(Aux) > 0 Then
        Titdesabr = Left(Aux, 30)
    Else
        Titdesabr = ""
    End If

    'Institucion
    NroColumna = NroColumna + 1
    Campoetiqueta = "Institucion"
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    If pos2 = 0 Then
        pos2 = Len(strLinea)
        Aux = Trim(Mid(strLinea, pos1, pos2))
    Else
        Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    End If
    Flog.writeline Espacios(Tabulador * 1) & "institucion " & Aux
    If Len(Aux) > 0 Then
        If IsNumeric(Aux) Then
            Texto = " - Campo " & Campoetiqueta & " no debe ser númerico"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
            HuboError = True
            Exit Sub
        End If
    End If
    If Len(Aux) > 0 Then
        Instdes = Left(Aux, 30)
    Else
        Instdes = ""
    End If

    'Carrera Educacional
    NroColumna = NroColumna + 1
    Campoetiqueta = "Carrera-Educacional"
    pos1 = pos2 + 1
    pos2 = InStr(pos1, strLinea, separador)
    If pos2 = 0 Then
        pos2 = Len(strLinea)
        Aux = Trim(Mid(strLinea, pos1, pos2))
    Else
        Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    End If
    'Flog.writeline Espacios(Tabulador * 1) & "Carrera " & Aux
    If Len(Aux) > 0 Then
        If IsNumeric(Aux) Then
            Texto = " - Campo " & Campoetiqueta & " no debe ser númerico"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
            HuboError = True
            Exit Sub
        End If
    End If
    If Len(Aux) > 0 Then
        Carredudesabr = Left(Aux, 30)
    Else
        Carredudesabr = ""
    End If

    'Completo
    NroColumna = NroColumna + 1
    Campoetiqueta = "Completo"
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    If pos2 = 0 Then
        pos2 = Len(strLinea)
        Aux = Trim(Mid(strLinea, pos1, pos2))
    Else
        Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    End If
    'Flog.writeline Espacios(Tabulador * 1) & "Completo " & Aux
    If Len(Aux) > 0 Then
        If UCase(Trim(Aux)) <> "SI" And UCase(Trim(Aux)) <> "NO" Then
            Texto = " - Campo " & Campoetiqueta & " debe ser 'SI/NO'"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
            HuboError = True
            Exit Sub
        End If
    End If
    If UCase(Trim(Aux)) = "SI" Then
        CapComp = -1
    Else
        CapComp = 0
    End If

    'Cantidad de Materias
    NroColumna = NroColumna + 1
    Campoetiqueta = "Cantidad-de-Materias"
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    If pos2 = 0 Then
        pos2 = Len(strLinea)
        Aux = Trim(Mid(strLinea, pos1, pos2))
    Else
        Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    End If
    'Flog.writeline Espacios(Tabulador * 1) & "materias " & Aux
    If Len(Aux) > 0 Then
        If Not IsNumeric(Aux) Then
            Texto = " - Campo " & Campoetiqueta & " debe ser númerico"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
            HuboError = True
            Exit Sub
        End If
    End If
    If Len(Aux) > 0 Then
        CapcantMat = CInt(Left(Aux, 2))
    Else
        CapcantMat = 0
    End If

    'Fecha desde
    NroColumna = NroColumna + 1
    Campoetiqueta = "Fecha-Desde"
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    If pos2 = 0 Then
        pos2 = Len(strLinea)
        Aux = Trim(Mid(strLinea, pos1, pos2))
    Else
        Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    End If
    'Flog.writeline Espacios(Tabulador * 1) & "Fecha desde " & Aux
    If Len(Aux) > 0 Then
        If Not IsDate(Aux) Then
            Texto = " - Campo " & Campoetiqueta & " no es valida"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
            HuboError = True
            Exit Sub
       End If
    End If
    If Len(Aux) > 0 Then
        CapfecDes = ConvFecha(CDate(Left(Aux, 10)))
    Else
        CapfecDes = "Null"
    End If

    'Fecha hasta
    NroColumna = NroColumna + 1
    Campoetiqueta = "Fecha-Hasta"
    pos1 = pos2 + 1
    pos2 = InStr(pos1, strLinea, separador)
    If pos2 = 0 Then
        pos2 = Len(strLinea)
        Aux = Trim(Mid(strLinea, pos1, pos2))
    Else
        Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    End If
    'Flog.writeline Espacios(Tabulador * 1) & "fecha hasta " & Aux
    If Len(Trim(Aux)) > 0 Then
        If Not IsDate(Aux) Then
            Texto = " - Campo " & Campoetiqueta & " no es valida"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
            HuboError = True
            Exit Sub
        End If
    End If
    If Len(Aux) > 0 Then
        CapfecHas = ConvFecha(CDate(Left(Aux, 10)))
    Else
        CapfecHas = "Null"
    End If

    'Estudia Actualmente
    NroColumna = NroColumna + 1
    Campoetiqueta = "Estudia-Actualmente"
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    If pos2 = 0 Then
        pos2 = Len(strLinea)
        Aux = Trim(Mid(strLinea, pos1, pos2))
    Else
        Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    End If
    'Flog.writeline Espacios(Tabulador * 1) & "estudia " & Aux
    If Len(Aux) > 0 Then
        If UCase(Trim(Aux)) <> "SI" And UCase(Trim(Aux)) <> "NO" Then
            Texto = " - Campo " & Campoetiqueta & " debe ser 'SI/NO'"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
            HuboError = True
            Exit Sub
        End If
    End If
    If UCase(Trim(Aux)) = "SI" Then
        CapestAct = -1
    Else
        CapestAct = 0
    End If

    'Rango
    NroColumna = NroColumna + 1
    Campoetiqueta = "Rango"
    pos1 = pos2 + 1
    pos2 = InStr(pos1, strLinea, separador)
    If pos2 = 0 Then
        pos2 = Len(strLinea)
        Aux = Trim(Mid(strLinea, pos1, pos2))
    Else
        Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    End If
    'Flog.writeline Espacios(Tabulador * 1) & "rango " & Aux
    If Len(Aux) > 0 Then
        If IsNumeric(Aux) Then
            Texto = " - Campo " & Campoetiqueta & " no debe ser númerico"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
            HuboError = True
            Exit Sub
        End If
    End If
    If Len(Aux) > 0 Then
        CapRango = Left(Aux, 30)
    Else
        CapRango = ""
    End If

    'Promedio
    NroColumna = NroColumna + 1
    Campoetiqueta = "Promedio"
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    If pos2 = 0 Then
        pos2 = Len(strLinea)
        Aux = Trim(Mid(strLinea, pos1, pos2))
    Else
        Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    End If
    'Flog.writeline Espacios(Tabulador * 1) & "Promedio " & Aux
    If Len(Trim(Aux)) > 0 Then
        If Not IsNumeric(Aux) Then
            Texto = " - Campo " & Campoetiqueta & " debe ser númerico"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
            HuboError = True
            Exit Sub
        End If
    End If
    If Len(Trim(Aux)) > 0 Then
        CapProm = CStr(CDbl(Replace(CStr(Aux), SeparadorDecimal, ".")))
    Else
        CapProm = ""
    End If
    
    'Futuro Estudio
    NroColumna = NroColumna + 1
    Campoetiqueta = "Futuro-Estudio"
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    If pos2 = 0 Then
        pos2 = Len(strLinea)
        Aux = Trim(Mid(strLinea, pos1, pos2))
    Else
        Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    End If
    'Flog.writeline Espacios(Tabulador * 1) & "Estu " & Aux
    If Len(Aux) > 0 Then
        If UCase(Trim(Aux)) <> "SI" And UCase(Trim(Aux)) <> "NO" Then
            Texto = " - Campo " & Campoetiqueta & " debe ser 'SI/NO'"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
            HuboError = True
            Exit Sub
        End If
    End If
    If UCase(Trim(Aux)) = "SI" Then
        CapActual = -1
    Else
        CapActual = 0
    End If
    
    'Descripcion
    NroColumna = NroColumna + 1
    Campoetiqueta = "Descripcion"
    pos1 = pos2 + 1
    pos2 = InStr(pos1, strLinea, separador)
    If pos2 = 0 Then
        pos2 = Len(strLinea)
        Aux = Trim(Mid(strLinea, pos1, pos2))
    Else
        Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    End If
    'Flog.writeline Espacios(Tabulador * 1) & "Desc " & Aux
    If Len(Trim(Aux)) > 0 Then
        If IsNumeric(Aux) Then
            Texto = " - Campo " & Campoetiqueta & " no debe ser númerico"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
            HuboError = True
            Exit Sub
        End If
    End If
    If Len(Trim(Aux)) > 0 Then
        FutDesc = Left(Aux, 200)
    Else
        FutDesc = ""
    End If
    
    'Año Cursado
    NroColumna = NroColumna + 1
    Campoetiqueta = "Año-Cursado"
    pos1 = pos2 + 1
    pos2 = InStr(pos1, strLinea, separador)
    If pos2 = 0 Then
        pos2 = Len(strLinea)
        Aux = Trim(Mid(strLinea, pos1, pos2))
    Else
        Aux = Trim(Mid(strLinea, pos1, pos2 - pos1))
    End If
    'Flog.writeline Espacios(Tabulador * 1) & "anio " & Aux
    If Len(Trim(Aux)) > 0 Then
        If Not IsNumeric(Aux) Then
            Texto = " - Campo " & Campoetiqueta & " debe ser númerico"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
            HuboError = True
            Exit Sub
        End If
    End If
    If Len(Trim(Aux)) > 0 Then
        CapanoCur = CInt(Left(Aux, 1))
    Else
        CapanoCur = 0
    End If

            
    ' ====================================================================
    '   Validar los parametros Levantados
    ' ====================================================================
      
    'Que exista el legajo
    If Nro_Legajo <> 0 Then
      StrSql = "SELECT * FROM empleado where empleg = " & Nro_Legajo
      OpenRecordset StrSql, rs_Empleado
      If rs_Empleado.EOF Then
          Flog.writeline Espacios(Tabulador * 1) & "No se encontro el legajo " & Nro_Legajo
          FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": No se encontro el legajo " & Nro_Legajo
          InsertaError 1, 8
          HuboError = True
          Exit Sub
      Else
          Ternro = rs_Empleado!Ternro
      End If
    End If
    
    'Que exista el nivel de estudio sino lo creo
    If Len(nivdesc) > 0 Then
        StrSql = "SELECT * FROM nivest WHERE upper(nivdesc) = '" & UCase(Trim(nivdesc)) & "'"
        OpenRecordset StrSql, rs_Nivel
        If rs_Nivel.EOF Then
            StrSql = "INSERT INTO nivest(nivdesc)"
            StrSql = StrSql & " VALUES ('" & UCase(Trim(nivdesc)) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nivnro = getLastIdentity(objConn, "nivest")
            Texto = "Registro Insertado en niveles de estudios"
            Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
        Else
            nivnro = rs_Nivel!nivnro
        End If
    End If
    
    'Que exista el titulo sino lo creo
    If Len(Titdesabr) > 0 And Len(nivdesc) > 0 Then
        StrSql = "SELECT * FROM titulo WHERE upper(titdesabr) = '" & UCase(Trim(Titdesabr)) & "'"
        OpenRecordset StrSql, rs_Titulo
        If rs_Titulo.EOF Then
            StrSql = "INSERT INTO titulo(titdesabr, nivnro)"
            StrSql = StrSql & " VALUES ('" & UCase(Trim(Titdesabr)) & "', " & nivnro & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            TitNro = getLastIdentity(objConn, "titulo")
            Texto = "Registro Insertado en titulos"
            Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
        Else
            TitNro = rs_Titulo!TitNro
        End If
    End If
    
    'Que exista el institucion sino lo creo
    If Len(Instdes) > 0 Then
        StrSql = "SELECT * FROM institucion WHERE upper(instdes) = '" & UCase(Trim(Instdes)) & "'"
        OpenRecordset StrSql, rs_institucion
        If rs_institucion.EOF Then
            StrSql = "INSERT INTO institucion(instdes, instabre)"
            StrSql = StrSql & " VALUES ('" & UCase(Trim(Instdes)) & "', '" & UCase(Trim(Instdes)) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            InstNro = getLastIdentity(objConn, "institucion")
            Texto = "Registro Insertado en institucion"
            Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
        Else
            InstNro = rs_institucion!InstNro
        End If
    End If
    
    'Que exista la carrera educacional sino lo creo
    If Len(Carredudesabr) > 0 Then
        StrSql = "SELECT * FROM cap_carr_edu WHERE upper(carredudesabr) = '" & UCase(Trim(Carredudesabr)) & "'"
        OpenRecordset StrSql, rs_Cap_Carr_Edu
        If rs_Cap_Carr_Edu.EOF Then
            StrSql = "INSERT INTO cap_carr_edu(carredudesabr)"
            StrSql = StrSql & " VALUES ('" & UCase(Trim(Carredudesabr)) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            CarreduNro = getLastIdentity(objConn, "cap_carr_edu")
            Texto = "Registro Insertado en carrera educacional"
            Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
        Else
            CarreduNro = rs_Cap_Carr_Edu!CarreduNro
        End If
    End If
        
              
    If Ternro > 0 Then
        StrSql = "SELECT   ternro, nivnro, titnro, instnro, carredunro"
        StrSql = StrSql & " FROM  cap_estformal "
        StrSql = StrSql & " WHERE ternro = " & Ternro
        StrSql = StrSql & " AND titnro = " & TitNro
        StrSql = StrSql & " AND instnro = " & InstNro
        StrSql = StrSql & " AND carredunro = " & CarreduNro
        StrSql = StrSql & " AND nivnro = " & nivnro
        OpenRecordset StrSql, rs_Cap_Estformal
        If rs_Cap_Estformal.EOF Then
            StrSql = "INSERT INTO cap_estformal "
            StrSql = StrSql & "(ternro, nivnro, titnro, instnro, carredunro, capcomp, capcantmat, capfecdes, capfechas, capestact, caprango, capprom, capactual, capfutdesc, capanocur)"
            StrSql = StrSql & " VALUES ( "
            StrSql = StrSql & " " & Ternro & ", " & nivnro & ", " & TitNro & ", " & InstNro & ", " & CarreduNro & ", " & CapComp & ", " & CapcantMat & ", " & CapfecDes & ", " & CapfecHas & ", " & CapestAct & ", '" & CapRango & "', '" & CapProm & "', " & CapActual & ",'" & FutDesc & "', " & CapanoCur & ""
            StrSql = StrSql & " ) "
            objConn.Execute StrSql, , adExecuteNoRecords
            Texto = "Registro Insertado en estudios formales"
            Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
        End If
    End If
              
        
Fin:
'Cierro todo y libero
If rs_Empleado.State = adStateOpen Then rs_Empleado.Close
If rs_Nivel.State = adStateOpen Then rs_Nivel.Close
If rs_Titulo.State = adStateOpen Then rs_Titulo.Close
If rs_institucion.State = adStateOpen Then rs_institucion.Close
If rs_Cap_Carr_Edu.State = adStateOpen Then rs_Cap_Carr_Edu.Close
If rs_Cap_Estformal.State = adStateOpen Then rs_Cap_Estformal.Close




Set rs_Empleado = Nothing
Set rs_Nivel = Nothing
Set rs_Titulo = Nothing
Set rs_institucion = Nothing
Set rs_Cap_Carr_Edu = Nothing
Set rs_Cap_Estformal = Nothing
Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    Texto = Err.Description
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(1, 7)
    GoTo Fin
End Sub


Public Sub LineaModelo_312(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Interfaz de carga masiva de tarjetas para empleados
' Autor      : Manuel Lopez--Diego Rosso
' Fecha      : 6/10/2006
' Descripcion:
' Ultima Mod.: 27/03/2008 - Gustavo Ring - Se inicializa el campo "devuelta"
'              15/11/2011 - Gonzalez Nicolás - Se comentó validación del legajo (If Len(datos(0)) > 6 Then)
' ---------------------------------------------------------------------------------------------
' El formato es:    Legajo
'                   Tipo de tarjeta (Descripcion)
'                   Numero
'                   Fecha Desde
'                   Fecha Hasta
' ---------------------------------------------------------------------------------------------
Dim I As Long
Dim datos
Dim l_empleg As Long 'legajo del empleado
Dim l_ternro As Long 'Codigo interno del empleado
Dim l_tptrdes As String 'Descripcion abreviada de la tarjeta
Dim l_tptrnro As String 'Codigo interno tarjeta
Dim l_hstjnrotar As String 'Numero de tarjeta
Dim l_hstjfecdes As String 'Fecha desde
Dim l_hstjfechas  As String 'Fecha Hasta
Dim l_hstjemp As Integer
Dim l_prueba As String 'variable auxiliar
Dim l_aux As Date 'variable auxiliar
Dim l_FecDesdeBD As Date 'variable auxiliar
Dim l_FecHastaBD As Date 'variable auxiliar
Dim l_FecDesdeArch As Date 'variable auxiliar
Dim l_FecHastaArch As Date 'variable auxiliar
Dim Grabar As Boolean 'variable auxiliar
Dim l_tptrext  As Integer ' extensión de la tarjeta

Dim rs_consulta As New ADODB.Recordset
Dim rs_motivo As New ADODB.Recordset
    
    On Error GoTo Manejador_De_Error:

    Flog.writeline "procesando linea " & strLinea
    Flog.writeline " "
    datos = Split(strLinea, separador)
    
    'Controlo que la linea tenga los 5 registros
    If UBound(datos) <> 4 Then
        If UBound(datos) < 4 Then
            FlogE.writeline "    ERROR. La cantidad de registros de la línea es menor a la esperada."
        Else
            FlogE.writeline "    ERROR. La cantidad de registros de la línea es mayor a la esperada."
        End If
        Exit Sub
    End If
   
    For I = 0 To UBound(datos)
        datos(I) = Trim(datos(I))
    Next I
    
Grabar = True

    'Legajo
    If Not IsNumeric(datos(0)) Then
        FlogE.writeline "El legajo: " & datos(0) & " no es numérico"
        Exit Sub
    End If
    
    'Verifico el largo del campo
'    If Len(datos(0)) > 6 Then
'        Flog.writeline "El numero de legajo: " & datos(0) & " tiene más de 6 digitos"
'        Exit Sub
'    End If
    
    l_empleg = datos(0)

    'Busco el numero interno del empleado
    StrSql = "SELECT * FROM empleado where empleg = " & l_empleg
    OpenRecordset StrSql, rs_consulta
    If rs_consulta.EOF Then
        FlogE.writeline "El numero de legajo: " & datos(0) & " no existe"
        rs_consulta.Close
        Exit Sub
    Else
       
        l_ternro = rs_consulta!Ternro
        rs_consulta.Close
    End If

    'Tipo de tarjeta
    'Verifico el largo del campo
    If Len(datos(1)) > 30 Then
        FlogE.writeline "El tipo de tarjeta: " & datos(1) & " tiene más de 30 caracteres"
        Exit Sub
    End If
    
    'Que no sea nulo o vacio
    If EsNulo(datos(1)) Then
        FlogE.writeline "El tipo de tarjeta es nulo o vacio: "
        Exit Sub
    End If
    
    'Busco tipo de tarjeta y obtengo el codigo interno
    l_tptrdes = datos(1)
    StrSql = "SELECT tptrnro, tptrdes, tptrext FROM gti_tiptar " & _
            " WHERE tptrdes = '" & l_tptrdes & "'"
    OpenRecordset StrSql, rs_consulta
    
    If rs_consulta.EOF Then
        rs_consulta.Close
        FlogE.writeline "No se encontró el tipo de tarjeta con esa descripcion: " & l_tptrdes
        Exit Sub
    Else
        l_tptrnro = rs_consulta!tptrnro
        l_tptrext = rs_consulta!tptrext
        rs_consulta.Close
    End If

    'Numero de tarjeta
    'Verifico que no sea nulo o vacio
    If EsNulo(datos(2)) Then
        FlogE.writeline "El Numero de tarjeta es nulo o vacio: "
        Exit Sub
    End If
    
    'Verifico el largo del campo
  '  If Len(datos(2)) > 14 Then
      If Len(datos(2)) > l_tptrext Then
        FlogE.writeline "El numero de tarjeta: " & datos(2) & " tiene más de " & l_tptrext & " caracteres"
        Exit Sub
    End If

    l_hstjnrotar = datos(2)
    

        

    'Fecha DESDE
    If EsNulo(datos(3)) Then
        FlogE.writeline "La fecha es nula o esta vacia: "
        Exit Sub
    Else
    If Not IsDate(datos(3)) Then
        FlogE.writeline "La fecha desde no es valida: "
        Exit Sub
    End If
    l_hstjfecdes = ConvFecha(CDate(datos(3)))
    l_aux = CDate(datos(3))
   
    'verifico que la tarjeta no esté ya asignada
    
    StrSql = " SELECT hstjnrotar "
    StrSql = StrSql & "FROM gti_histarjeta "
    StrSql = StrSql & " WHERE ternro <> " & l_ternro & " "
    StrSql = StrSql & " AND hstjnrotar = '" & l_hstjnrotar & "' AND tptrnro=" & l_tptrnro
    StrSql = StrSql & "and (hstjfechas is null  or hstjfechas >= " & l_hstjfecdes & ")"

    OpenRecordset StrSql, rs_consulta
    
    If Not rs_consulta.EOF Then
        rs_consulta.Close
        FlogE.writeline "La tarjeta ya fue asignada a un empleado"
        Exit Sub
    End If

   
    'Fecha HASTA
    If EsNulo(datos(4)) Then
        l_hstjfechas = "Null"
    Else
          If Not IsDate(datos(4)) Then
              FlogE.writeline "La fecha hasta no es valida: "
              Exit Sub
          End If
        l_hstjfechas = ConvFecha(CDate(datos(4)))
    End If
'    Verifico que para ese empleado si la fecha_desde que viene del archivo es mayor a la
'    fecha_desde en la BD y la fecha_hasta (de la BD )en null cierro el registro poniendole fecha_hasta con
'    un dia menos que la fecha desde
    
    StrSql = "SELECT * FROM gti_histarjeta  WHERE " & _
                " ternro = " & l_ternro & _
                " And hstjfecdes < " & l_hstjfecdes & _
                " And hstjfechas Is Null"
    OpenRecordset StrSql, rs_consulta
    
    If rs_consulta.EOF Then
    
'Si no encontre ningun registro con esas condiciones..
        rs_consulta.Close
        
'          Traigo todos los registros de ese empleado que tengan fecha hasta

         StrSql = "SELECT * FROM gti_histarjeta  WHERE " & _
                " ternro = " & l_ternro & _
                " And hstjfechas IS NOT NULL"
        OpenRecordset StrSql, rs_consulta
        
        Do While rs_consulta.EOF = False And Grabar
'        Asigno las fechas leidas del archivo y las leidas de la BD a variables auxiliares para poder compararlas
        l_FecDesdeBD = rs_consulta!hstjfecdes
        l_FecHastaBD = rs_consulta!hstjfechas
        l_FecDesdeArch = CDate(datos(3))
'        Segun si tiene fecha hasta el registro del archivo hago diferentes comparaciones
        If Not EsNulo(datos(4)) Then
            l_FecHastaArch = CDate(datos(4))
            '        Comparo fechas. Lo que hay entre parentesis me tiene que dar true para que sea un archivo valido
            Grabar = Grabar And (l_FecDesdeArch > l_FecDesdeBD And l_FecHastaBD < l_FecDesdeArch) Or (l_FecDesdeArch < l_FecDesdeBD And l_FecHastaArch < l_FecDesdeBD)
        Else
            '        Comparo fechas. Lo que hay entre parentesis me tiene que dar true para que sea un archivo valido
            Grabar = Grabar And Not (l_FecDesdeBD <= l_FecDesdeArch And l_FecDesdeArch <= l_FecHastaBD)
        End If
        rs_consulta.MoveNext
        Loop
    Else
'    si encontre un registro con esas condiciones (la fecha_desde que viene del archivo es mayor a la
'    fecha_desde en la BD y la fecha_hasta de la BD esta en null)
'      Modifico el registro
'           Resto un dia a la fechadesde
        l_aux = DateAdd("d", -1, l_aux)
        l_prueba = ConvFecha(l_aux)

        StrSql = "UPDATE gti_histarjeta SET hstjfechas = " & l_prueba & ""
        StrSql = StrSql & " WHERE ternro = " & l_ternro
        StrSql = StrSql & " AND hstjfecdes < " & l_hstjfecdes & ""
        StrSql = StrSql & " And hstjfechas Is Null"
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline "Se modifico en gti_histarjeta:  la Fecha hasta " & l_prueba & " - para el empleado Numero: " & l_ternro

        rs_consulta.Close
        
    End If
'   Pregunto si tengo que grabar
         If Grabar = True Then
          If (EsNulo(datos(4))) Then
'           Hago una consulta para saber si tengo registros con fecha desde(bd) mayor a fecha desde del archivo
'            y lo ordeno por fecha desde para comprar con la primera que me aparece
            
           StrSql = "SELECT hstjfecdes FROM gti_histarjeta  WHERE " & _
                " ternro = " & l_ternro & _
                " And hstjfecdes >" & l_hstjfecdes & "ORDER BY hstjfecdes"
           OpenRecordset StrSql, rs_consulta
           If rs_consulta.EOF = False Then
                l_aux = rs_consulta!hstjfecdes
                l_aux = DateAdd("d", -1, l_aux)
                l_hstjfechas = ConvFecha(l_aux)
                rs_consulta.Close
           End If
           
          End If
         '    Se le asigna 0 por default
        l_hstjemp = 0
'    Grabo en la tabla  gti_histarjeta el registro
        StrSql = "INSERT INTO gti_histarjeta ("
        StrSql = StrSql & "hstjfecdes,"
        StrSql = StrSql & "hstjfechas,"
        StrSql = StrSql & "ternro,"
        StrSql = StrSql & "hstjemp,"
        StrSql = StrSql & "tptrnro,"
        StrSql = StrSql & "devuelta,"
        StrSql = StrSql & "hstjnrotar"
        StrSql = StrSql & ") VALUES ("
        StrSql = StrSql & "" & l_hstjfecdes & ","
        StrSql = StrSql & "" & l_hstjfechas & ","
        StrSql = StrSql & "" & l_ternro & ","
        StrSql = StrSql & "" & l_hstjemp & ","
        StrSql = StrSql & "" & l_tptrnro & ","
        StrSql = StrSql & "0," & "'" & l_hstjnrotar & "'"
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
'    Escribo en en Log
        Flog.writeline "Se inserto el gti_histarjeta: Fecha Desde: " & l_hstjfecdes & " - Fecha Hasta: " & l_hstjfechas & " - Cod interno del empleado: " & l_ternro & " - hstjemp: " & l_hstjemp & " - Codigo Interno: " & l_tptrnro & " - Numero de Tarjeta: " & l_hstjnrotar
    Else
'        Pasa por aca cuando se superponen las fechas
        FlogE.writeline "NO Se inserto el registro en gti_histarjeta  Motivo: FECHAS SUPERPUESTAS" & " - Numero Legajo: " & l_empleg & " - Cod interno del empleado: " & l_ternro
    End If
    End If
    
    
    'cierro y libero
    If rs_consulta.State = adStateOpen Then rs_consulta.Close
    Set rs_consulta = Nothing

Fin:
    Exit Sub

Manejador_De_Error:
    HuboError = True
    'Resume Next
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    If InStr(1, Err.Description, "ODBC") > 0 Then
        'Fue error de Consulta de SQL
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
        Flog.writeline
    End If
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    GoTo Fin
End Sub


Public Sub LineaModelo_282(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Interfaz de carga complemento remunerativo de empleados
' Autor      : Gustavo Ring
' Fecha      : 28/07/2009
' Ultima Mod.: 11/02/2011 - se agrego la condicion al where
' Descripcion:
' ---------------------------------------------------------------------------------------------
' El formato es:    Legajo
'                   Fecha de acuerdo
'                   Sueldo o Jornal
'                   Zona de Banda Salarial
' ---------------------------------------------------------------------------------------------

Dim I As Long
Dim datos
Dim granro As Integer
Dim Ternro As Integer
Dim rs_consulta As New ADODB.Recordset


    On Error GoTo Manejador_De_Error:

    Flog.writeline "procesando linea " & strLinea
    Flog.writeline " "
    datos = Split(strLinea, separador)
    
    'Controlo que la linea tenga los 4 registros
    If UBound(datos) <> 3 Then
        If UBound(datos) < 3 Then
            Flog.writeline "    ERROR. La cantidad de registros de la línea es menor a la esperada."
            Exit Sub
        Else
            Flog.writeline "    ERROR. La cantidad de registros de la línea es mayor a la esperada. Solo se tomaron los primeros 4 campos."
        End If
        Flog.writeline "    El formato de linea correcto es (Legajo,Fecha de acuerdo,Sueldo o Jornal,Zona)."
    End If
   
    For I = 0 To 3
        datos(I) = Trim(datos(I))
    Next I
    
    'Legajo
    
    'Verifico el largo del campo
    If Not (IsNumeric(datos(0))) Then
        Flog.writeline "El numero de legajo: " & datos(0) & " formato inválido."
        Exit Sub
    End If
      
    'Busco si existe el empleado
    StrSql = "SELECT * FROM empleado where empleg = " & datos(0)
    OpenRecordset StrSql, rs_consulta
    If rs_consulta.EOF Then
        Flog.writeline "El numero de legajo: " & datos(0) & " no existe"
        Exit Sub
    Else
        Ternro = rs_consulta!Ternro
    End If
    
    ' Verifico la fecha de acuerdo
    If Not (IsDate(datos(1))) Then
        Flog.writeline "La fecha de acuerdo no es valida."
        Exit Sub
    End If
        
    If Not IsNumeric(datos(2)) Then
        Flog.writeline "El sueldo o jornal no es numérico."
        Exit Sub
    End If
    
    ' verifico la zona
    If Len(datos(3)) > 2 Then
        Flog.writeline "La zona no es válida."
        Exit Sub
    End If
    
    ' Busco el código del grado del empleado a la fecha del acuerdo
    
    StrSql = " SELECT granro FROM his_estructura "
    StrSql = StrSql & " INNER JOIN puesto ON his_estructura.estrnro = puesto.estrnro "
    StrSql = StrSql & " INNER JOIN puesto_grado ON puesto_grado.puenro = puesto.puenro "
    StrSql = StrSql & " WHERE (his_estructura.htetdesde <= " & ConvFecha(datos(1))
    StrSql = StrSql & ")AND (htethasta >= " & ConvFecha(datos(1)) & " OR htethasta is null)"
    StrSql = StrSql & " AND ternro = " & Ternro
    
    OpenRecordset StrSql, rs_consulta
    
    If Not rs_consulta.EOF Then
        granro = rs_consulta!granro
    Else
        Flog.writeline "El empleado no tiene puesto o el puesto no esta relacionado a un grado."
    End If
        
    
    ' Actualizo la tabla de empleados
    
    StrSql = "UPDATE empleado SET "
    StrSql = StrSql & "empfecacurem=" & ConvFecha(datos(1))
    StrSql = StrSql & ",empremu=" & datos(2)
    StrSql = StrSql & ",empzona='" & datos(3) & "'"
    StrSql = StrSql & ",granro = " & granro
    StrSql = StrSql & " WHERE ternro = " & Ternro
    
    objConn.Execute StrSql, , adExecuteNoRecords
'    Escribo en en Log
    Flog.writeline "Se inserto datos del empleado:" & datos(0)
    
    
    'cierro y libero
    If rs_consulta.State = adStateOpen Then rs_consulta.Close
    Set rs_consulta = Nothing

Fin:
    Exit Sub

Manejador_De_Error:
    HuboError = True
    'Resume Next
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    If InStr(1, Err.Description, "ODBC") > 0 Then
        'Fue error de Consulta de SQL
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
        Flog.writeline
    End If
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    GoTo Fin
End Sub


Public Sub LineaModelo_322(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Interface de Francos Compensatorios.
'              El formato es:
'                   TipoEstr Ppal,Estr Ppal,Tipo Estr Dependiente, Estr Dependiente
' Autor      : EGO
' Fecha      : 2010
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim pos1 As Long
Dim pos2 As Long
Dim I As Long

Dim TEppalnro As Long
Dim TEppalnom As String
Dim Eppalnro As Long
Dim Eppalnom As String
Dim TEdepnro As Long
Dim TEdepnom As String
Dim Edepnro As Long
Dim Edepnom As String

Dim rs As New ADODB.Recordset
Dim rs_E  As New ADODB.Recordset
Dim campos

On Error GoTo Manejador_De_Error

' El formato es:
' TEppal;Eppal;TEdep;Edep
    
    TEppalnro = 0
    TEppalnom = ""
    Eppalnro = 0
    Eppalnom = ""
    TEdepnro = 0
    TEdepnom = ""
    Edepnro = 0
    Edepnom = ""
    campos = Split(strLinea, separador, -1)
   
    'Tipo Estr Principal
    If IsNumeric(campos(0)) Then
        TEppalnro = campos(0)
        
        'Valido Tipo Estr.
        StrSql = "SELECT tenro,tedabr From TipoEstructura WHERE tenro=" & TEppalnro
        OpenRecordset StrSql, rs

        If rs.EOF Then
            Flog.writeline "No se encontro el Tipo de Estructura " & TEppalnro
            InsertaError 1, 8
            HuboError = True
            Exit Sub
        Else
            TEppalnom = rs!tedabr
        End If
        
    Else
        TEppalnom = Trim(campos(0))
    
        'Valido Tipo Estr.
        StrSql = "SELECT tenro,tedabr From TipoEstructura WHERE UPPER(tedabr)='" & UCase(Trim(TEppalnom)) & "' "
        OpenRecordset StrSql, rs

        If rs.EOF Then
            Flog.writeline "No se encontro el Tipo de Estructura " & TEppalnom
            InsertaError 1, 8
            HuboError = True
            Exit Sub
        Else
            TEppalnro = rs!Tenro
        End If
    
    End If
    rs.Close
    
  
    'Estr Principal
    If IsNumeric(campos(1)) Then
        Eppalnro = campos(1)
    
        'Valido Tipo Estr.
        StrSql = "SELECT estrnro, estrdabr From estructura Where estrest = -1 and estrnro =" & Eppalnro
        OpenRecordset StrSql, rs

        If rs.EOF Then
            Flog.writeline "No se encontro el Tipo de Estructura " & Eppalnro
            InsertaError 1, 8
            HuboError = True
            Exit Sub
        Else
            Eppalnom = rs!estrdabr
        End If
    
    Else
        Eppalnom = Trim(campos(1))
    
        'Valido Tipo Estr.
        StrSql = "SELECT estrnro,estrdabr From estructura Where estrest = -1 and UPPER(estrdabr) ='" & UCase(Eppalnom) & "' "
        OpenRecordset StrSql, rs

        If rs.EOF Then
            Flog.writeline "No se encontro el Tipo de Estructura " & Eppalnom
            InsertaError 1, 8
            HuboError = True
            Exit Sub
        Else
            Eppalnro = rs!Estrnro
        End If
    
    End If
    rs.Close
    
               
    'Tipo Estr Dependiente
    If IsNumeric(campos(2)) Then
        TEdepnro = campos(2)
    
        'Valido Tipo Estr.
        StrSql = "SELECT tenro,tedabr From TipoEstructura WHERE tenro=" & TEdepnro
        OpenRecordset StrSql, rs

        If rs.EOF Then
            Flog.writeline "No se encontro la Estructura " & TEdepnro
            InsertaError 1, 8
            HuboError = True
            Exit Sub
        Else
            TEdepnom = rs!tedabr
        End If
    
    Else
        TEdepnom = Trim(campos(2))
    
        'Valido Estr.
        StrSql = "SELECT tenro,tedabr From TipoEstructura WHERE UPPER(tedabr)='" & UCase(TEdepnom) & "' "
        OpenRecordset StrSql, rs

        If rs.EOF Then
            Flog.writeline "No se encontro el Tipo de Estructura " & TEdepnom
            InsertaError 1, 8
            HuboError = True
            Exit Sub
        Else
            TEdepnro = rs!Tenro
        End If
    
    End If
    rs.Close
  
    'Estr Dependiente
    If IsNumeric(campos(3)) Then
        Edepnro = campos(3)
    
        'Valido Tipo Estr.
        StrSql = "SELECT estrnro, estrdabr From estructura Where estrest = -1 and estrnro =" & Edepnro
        OpenRecordset StrSql, rs

        If rs.EOF Then
            Flog.writeline "No se encontro el Tipo de Estructura " & Edepnro
            InsertaError 1, 8
            HuboError = True
            Exit Sub
        Else
            Edepnom = rs!estrdabr
        End If
    
    
    Else
        Edepnom = Trim(campos(3))
    
        'Valido Tipo Estr.
        StrSql = "SELECT estrnro,estrdabr From estructura Where estrest = -1 and UPPER(estrdabr) ='" & UCase(Edepnom) & "' "
        OpenRecordset StrSql, rs

        If rs.EOF Then
            Flog.writeline "No se encontro el Tipo de Estructura " & Edepnom
            InsertaError 1, 8
            HuboError = True
            Exit Sub
        Else
            Edepnro = rs!Estrnro
        End If
    
    End If
    rs.Close
               
        

'=============================================================
StrSql = "SELECT tenro1, estrnro1, tenro2, estrnro2 "
StrSql = StrSql & " From estruc_depende "
StrSql = StrSql & " WHERE tenro1 = " & TEppalnro
StrSql = StrSql & " AND estrnro1 = " & Eppalnro
StrSql = StrSql & " AND tenro2 = " & TEdepnro
StrSql = StrSql & " AND estrnro2 = " & Edepnro

OpenRecordset StrSql, rs
If rs.EOF Then
   'Inserto el franco
    StrSql = "INSERT INTO estruc_depende "
    StrSql = StrSql & "(tenro1, estrnro1, tenro2, estrnro2)"
    StrSql = StrSql & " VALUES (" & TEppalnro
    StrSql = StrSql & "," & Eppalnro
    StrSql = StrSql & "," & TEdepnro
    StrSql = StrSql & "," & Edepnro
    StrSql = StrSql & " )"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    Flog.writeline " Dependencia de Estructura insertada "
Else
    Flog.writeline " Ya existe un Dependencia de Estructura. Estructura " & Edepnro & " dependiente de  " & Eppalnro
End If

Fin:
'cierro y libero
If rs.State = adStateOpen Then rs.Close

Set rs = Nothing

Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    If InStr(1, Err.Description, "ODBC") > 0 Then
        'Fue error de Consulta de SQL
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
        Flog.writeline
    End If
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    GoTo Fin

End Sub

Public Sub LineaModelo_671(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Interface de cuentas bancarias para los empleados.
' Autor      : Sebastian Stremel
' Fecha      : 15/01/2012
' Ultima Mod.:
' Descripcion: Cuando pisa la cuenta porque ya existe la misma no pisaba la forma de pago.
' ---------------------------------------------------------------------------------------------
Dim pos1 As Long
Dim pos2 As Long
    
Dim Legajo As Long
Dim Estado As String
Dim forma_pago As String
Dim cod_banco As String
Dim nro_cuenta As String
Dim nro_cbu As String
Dim tipo_pago As String
Dim cta_debito As String
Dim Branch_code As String
Dim Sucursal As String
Dim porcentaje As String
Dim asiento As String
Dim Ternro As Long
Dim porcCorrecto As Boolean


Dim indice As Integer
Dim arregloLinea

Dim Tercero As Long
Dim Cbnro As Long
Dim CtabSuc As String
Dim Tercero_Banco
Dim Encontro As Boolean
Dim CbnroAux As Long

Dim rs_Empleado As New ADODB.Recordset
Dim rs_CtaBancaria As New ADODB.Recordset
Dim rs_FormaPago As New ADODB.Recordset
Dim rs_Doc As New ADODB.Recordset
Dim rs_Banco As New ADODB.Recordset

Dim rsAux As New ADODB.Recordset
Dim rsAux2 As New ADODB.Recordset

On Error GoTo Manejador_De_Error
'--------------------------FORMATO DE LA INTERFAZ---------------------------------
'Legajo
'estado (activa/inactiva);
'Forma_Pago;
'Cod. Banco;
'Nro_Cuenta;
'Nro_Cbu;
'Tipo de pago;
'Cta a debitar de la empresa;
'Branch Code;
'Sucursal;
'Porcentaje;
'Linea Asiento;
'---------------------------------------------------------------------------------
        
arregloLinea = Split(strLinea, separador)
For indice = 0 To UBound(arregloLinea)
    Select Case CInt(indice)
        Case 0:
            If (arregloLinea(indice) <> "") And (UCase(arregloLinea(indice)) <> "N/A") Then
                Legajo = arregloLinea(indice)
                'Chequeo que exista el legajo
                StrSql = " SELECT ternro FROM empleado WHERE empleg = " & Legajo
                OpenRecordset StrSql, rsAux
                If Not rsAux.EOF Then
                    Ternro = rsAux!Ternro
                    Flog.writeline "Empleado con legajo: " & Legajo & " - encontrado."
                Else
                    Flog.writeline "Empleado con legajo: " & Legajo & " - no encontrado."
                    Call Escribir_Log("floge", NroLinea, NroColumna, "Empleado con legajo: " & Legajo & " - no encontrado.", Tabs, strLinea)
                    HuboError = True
                    Exit Sub
                End If
            Else
                Flog.writeline "Legajo no informado, el campo es obligatorio."
                Call Escribir_Log("floge", NroLinea, NroColumna, "Legajo no informado, el campo es obligatorio.", Tabs, strLinea)
                HuboError = True
                Exit Sub
            End If
        
        Case 1:
            If (arregloLinea(indice) <> "") And (UCase(arregloLinea(indice)) <> "N/A") Then
                Estado = arregloLinea(indice)
                Flog.writeline "El estado configurado fue: " & Estado
            Else
                Estado = "Inactiva"
                Flog.writeline "El estado no fue configurado, se pone por defecto inactiva"
            End If
    
        Case 2:
            If (arregloLinea(indice) <> "") And (UCase(arregloLinea(indice)) <> "N/A") Then
                forma_pago = arregloLinea(indice)
                Flog.writeline "La forma de pago configurada es: " & forma_pago
            Else
                Flog.writeline "La forma de pago es obligatoria"
                Call Escribir_Log("floge", NroLinea, NroColumna, "La forma de pago es obligatoria.", Tabs, strLinea)
                HuboError = True
                Exit Sub
            End If
    
        Case 3:
            If (arregloLinea(indice) <> "") And (UCase(arregloLinea(indice)) <> "N/A") Then
                cod_banco = arregloLinea(indice)
                Flog.writeline "El cod del banco es: " & cod_banco
            Else
                Flog.writeline "El cod del banco es obligatorio."
                Call Escribir_Log("floge", NroLinea, NroColumna, "El cod del banco es obligatorio.", Tabs, strLinea)
                HuboError = True
                Exit Sub
            End If
    
        Case 4:
            If (arregloLinea(indice) <> "") And (UCase(arregloLinea(indice)) <> "N/A") Then
                nro_cuenta = arregloLinea(indice)
                Flog.writeline "Nro de cuenta: " & nro_cuenta
            Else
                If (arregloLinea(5) = "") Or (UCase(arregloLinea(5)) = "N/A") Then
                    Flog.writeline "El Nro de cuenta es obligatorio si no se cargo numero de cbu"
                    Texto = " El estado es incorrecto "
                    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                    HuboError = True
                    Exit Sub
                Else
                    Flog.writeline "La cuenta no se cargo, pero se cargo el cbu, continua OK "
                End If
            End If
    
        Case 5:
            If (arregloLinea(indice) <> "") And (UCase(arregloLinea(indice)) <> "N/A") Then
                nro_cbu = arregloLinea(indice)
                Flog.writeline "nro de cbu: " & nro_cbu
            Else
                If (arregloLinea(4) = "") Or (UCase(arregloLinea(4)) = "N/A") Then
                    Flog.writeline "El Nro de cbu es obligatorio si no se cargo el numero de cuenta del empleado."
                    Texto = "El Nro de cbu es obligatorio si no se cargo el numero de cuenta del empleado."
                    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                    HuboError = True
                    Exit Sub
                Else
                    Flog.writeline "El cbu no se cargo, pero se cargo la cuenta, continua OK "
                End If
            End If
    
        Case 6:
            If (arregloLinea(indice) <> "") And (UCase(arregloLinea(indice)) <> "N/A") Then
                tipo_pago = arregloLinea(indice)
                Flog.writeline "Tipo de Pago: " & tipo_pago
            Else
                Call Escribir_Log("floge", NroLinea, NroColumna, "El tipo de pago es obligatorio.", Tabs, strLinea)
                HuboError = True
                Exit Sub
            End If
            
        Case 7:
            If (arregloLinea(indice) <> "") And (UCase(arregloLinea(indice)) <> "N/A") Then
                cta_debito = arregloLinea(indice)
                Flog.writeline "Cuenta de debito: " & cta_debito
            Else
                Flog.writeline "La cuenta de debito no se cargo y es obligatoria."
                Call Escribir_Log("floge", NroLinea, NroColumna, "La cuenta de debito no se cargo y es obligatoria.", Tabs, strLinea)
                HuboError = True
                Exit Sub
            End If
    
        Case 8:
            If (arregloLinea(indice) <> "") And (UCase(arregloLinea(indice)) <> "N/A") Then
                Branch_code = arregloLinea(indice)
                If Len(Branch_code) > 10 Then
                    Flog.writeline "La longitud del Brach_code es mayor que 10, se recorta a 10 caracteres."
                    Call Escribir_Log("floge", NroLinea, NroColumna, "La longitud del Brach_code es mayor que 10, se recorta a 10 caracteres.", Tabs, strLinea)
                    Branch_code = Left(Branch_code, 10)
                    'HuboError = True
                    'Exit Sub
                Else
                    Flog.writeline "Branch_Code: " & Branch_code
                End If
            End If
    
        Case 9:
            If (arregloLinea(indice) <> "") And (UCase(arregloLinea(indice)) <> "N/A") Then
                Sucursal = arregloLinea(indice)
                If Len(Sucursal) > 30 Then
                    Flog.writeline "La longitud de la Sucursal es mayor que 30, se recorta a 10 caracteres."
                    Call Escribir_Log("floge", NroLinea, NroColumna, "La longitud de la Sucursal es mayor que 30, se recorta a 30 caracteres.", Tabs, strLinea)
                    Sucursal = Left(Sucursal, 10)
                    'HuboError = True
                    'Exit Sub
                Else
                    Flog.writeline "Sucursal: " & Sucursal
                End If
                'Flog.writeline "sucursal: " & Sucursal
            End If
    
        Case 10:
            If (arregloLinea(indice) <> "") And (UCase(arregloLinea(indice)) <> "N/A") Then
                porcentaje = arregloLinea(indice)
                Flog.writeline "porcentaje: " & porcentaje
            Else
                Call Escribir_Log("floge", NroLinea, NroColumna, "El porcentaje es obligatorio.", Tabs, strLinea)
                HuboError = True
                Exit Sub
            End If
    
        Case 10:
            If (arregloLinea(indice) <> "") And (UCase(arregloLinea(indice)) <> "N/A") Then
                asiento = arregloLinea(indice)
                If Len(asiento) > 50 Then
                    Flog.writeline "La longitud de la Linea del asiento es mayor que 50, se recorta a 50 caracteres."
                    Call Escribir_Log("floge", NroLinea, NroColumna, "La longitud de la Sucursal es mayor que 30, se recorta a 30 caracteres.", Tabs, strLinea)
                    asiento = Left(asiento, 50)
                    'HuboError = True
                    'Exit Sub
                Else
                    Flog.writeline "asiento: " & asiento
                End If
            End If
    
    End Select

Next
    
    
'=====================================================================
'   Validar los parametros Levantados
'=====================================================================
porcCorrecto = False


'VERIFICO QUE EXISTA EL LEGAJO
If Not Legajo = 0 Then
    StrSql = "SELECT * FROM empleado where empleg = " & Legajo
    OpenRecordset StrSql, rs_Empleado
    If rs_Empleado.EOF Then
        Flog.writeline Espacios(Tabulador * 2) & "No se encontro el legajo " & Legajo
        HuboError = True
        Exit Sub
    Else
        Tercero = rs_Empleado!Ternro
    End If
End If

'GUARDO EL ESTADO
If UCase(Estado) = "ACTIVA" Then
    Estado = -1
Else
    If UCase(Estado) = "INACTIVA" Then
        Estado = 0
    Else
        Flog.writeline " El estado es incorrecto "
        Texto = " El estado es incorrecto "
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        HuboError = True
        Exit Sub
    End If
End If


'BUSCO LA FORMA DE PAGO
StrSql = "SELECT * FROM formapago WHERE fpagbanc = -1 "
StrSql = StrSql & " AND UPPER(fpagdescabr) = '" & UCase(forma_pago) & "'"
If rs_FormaPago.State = adStateOpen Then rs_FormaPago.Close
OpenRecordset StrSql, rs_FormaPago
If rs_FormaPago.EOF Then
    Flog.writeline Espacios(Tabulador * 2) & "No se encontro la forma de Pago " & forma_pago
    Texto = " No se encontro la forma de pago."
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    HuboError = True
    Exit Sub
Else
    forma_pago = rs_FormaPago!fpagnro
End If


'Busco el Banco
StrSql = "SELECT * FROM Banco "
StrSql = StrSql & " WHERE UPPER(bandesc) = '" & cod_banco & "'"
If rs_Banco.State = adStateOpen Then rs_Banco.Close
OpenRecordset StrSql, rs_Banco
If rs_Banco.EOF Then
    Texto = " No se encontro el banco."
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Flog.writeline Espacios(Tabulador * 2) & "No se encontro el Banco " & Banco
    HuboError = True
    Exit Sub
Else
    cod_banco = rs_Banco!Ternro
End If
rs_Banco.Close

'TIPO DE PAGO
StrSql = "SELECT * FROM tipopago "
StrSql = StrSql & " WHERE UPPER(tippagdesc) = '" & tipo_pago & "'"
OpenRecordset StrSql, rs_Banco
If rs_Banco.EOF Then
    Texto = " No se encontro el tipo de pago."
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Flog.writeline Espacios(Tabulador * 2) & "No se encontro la forma de pago " & tipo_pago
    HuboError = True
    Exit Sub
Else
    tipo_pago = rs_Banco!tippagnro
End If
rs_Banco.Close

'PORCENTAEJE
'me fijo que las ctas del mismo tipo de pago no superen el 100%
StrSql = " SELECT SUM(ctabporc) cant FROM ctabancaria "
StrSql = StrSql & " WHERE ternro = " & Ternro
StrSql = StrSql & " AND ctabestado <> 0 AND tippagnro ='" & tipo_pago & "'"
StrSql = StrSql & " GROUP BY tippagnro "
'StrSql = StrSql & " HAVING  SUM(ctabporc) >= 100 "
OpenRecordset StrSql, rs_CtaBancaria
If rs_CtaBancaria.EOF Then
    If (porcentaje) > 100 Then
        Texto = " Error los porcentajes superan el 100%."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Flog.writeline "Error los porcentajes superan el 100% "
        HuboError = True
        Exit Sub
    Else
        porcCorrecto = True
    End If
Else
    If (porcentaje + rs_CtaBancaria!cant <= 100) Then
        porcCorrecto = True
    Else
        Flog.writeline "Error los porcentajes superan el 100% "
        Texto = "Error los porcentajes superan el 100% "
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Flog.writeline "Error los porcentajes superan el 100% "
        HuboError = True
        Exit Sub
    End If
End If
rs_CtaBancaria.Close

'Ctabacred
StrSql = "SELECT * FROM ctabancaria"
StrSql = StrSql & " WHERE ctabnro = '" & cta_debito & "'"
'StrSql = StrSql & " AND ternro = " & tercero
If rs_CtaBancaria.State = adStateOpen Then rs_CtaBancaria.Close
OpenRecordset StrSql, rs_CtaBancaria
If Not rs_CtaBancaria.EOF Then
    Cbnro = rs_CtaBancaria!Cbnro
Else
    Flog.writeline Espacios(Tabulador * 2) & "No se encontro la cuenta bancaria a debitar (es obligatorio) se aborta el proceso."
    Exit Sub
    'Cbnro = 0
End If
If rs_CtaBancaria.State = adStateOpen Then rs_CtaBancaria.Close



'=============================================================
If porcCorrecto Then
    'Busco si existe una cuenta para ese legajo para el mismo banco del mismo tipo de cuenta y activa
    StrSql = "SELECT * FROM ctabancaria"
    StrSql = StrSql & " WHERE ctabancaria.ternro =" & Tercero
    StrSql = StrSql & " AND ctabestado = -1 "
    If rs_CtaBancaria.State = adStateOpen Then rs_CtaBancaria.Close
    OpenRecordset StrSql, rs_CtaBancaria
'    Do While Not rs_CtaBancaria.EOF And Not Encontro
'        If rs_CtaBancaria!ctabnro = nro_cuenta Then
'            Encontro = True
'            CbnroAux = rs_CtaBancaria!Cbnro
'        Else
'            Encontro = False
'        End If
'    rs_CtaBancaria.MoveNext
'    Loop
    Do While Not rs_CtaBancaria.EOF And Not Encontro
        If (rs_CtaBancaria!ctabnro = nro_cuenta) And (rs_CtaBancaria!tippagnro = tipo_pago) Then
            Encontro = True
            CbnroAux = rs_CtaBancaria!Cbnro
        Else
                Encontro = False
        End If
    rs_CtaBancaria.MoveNext
    Loop
    
    If Encontro Then
        StrSql = "UPDATE ctabancaria SET "
        StrSql = StrSql & " ctabsuc = '" & Sucursal & "'"
        StrSql = StrSql & ", ctabacred = " & Cbnro
        StrSql = StrSql & ", ctabporc = " & porcentaje
        StrSql = StrSql & ", ctabnro = '" & nro_cuenta & "'"
        If nro_cbu = "null" Then
                StrSql = StrSql & ", ctabcbu = " & nro_cbu
        Else
                StrSql = StrSql & ", ctabcbu = '" & nro_cbu & "'"
        End If
        StrSql = StrSql & ", fpagnro = " & forma_pago
        StrSql = StrSql & " WHERE cbnro = " & CbnroAux
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline Espacios(Tabulador * 2) & "Ya existe un cuenta del mismo tipo para el mismo banco activa. Se actualizará la cuenta"
        FlogP.writeline "Linea Procesada."
    Else
        StrSql = "INSERT INTO ctabancaria ("
        StrSql = StrSql & " ternro,fpagnro,banco,ctabestado, ctabnro, ctabcbu, ctabsuc, ctabsucdesc, ctabacred,ctabporc, tippagnro, linacuenta"
        StrSql = StrSql & ") VALUES (" & Tercero
        StrSql = StrSql & "," & forma_pago
        StrSql = StrSql & "," & cod_banco
        StrSql = StrSql & "," & Estado
        StrSql = StrSql & ",'" & nro_cuenta & "'"
        If nro_cbu = "null" Then
                StrSql = StrSql & "," & nro_cbu
        Else
                StrSql = StrSql & ",'" & nro_cbu & "'"
        End If
        StrSql = StrSql & ",'" & Branch_code & "'"
        StrSql = StrSql & ",'" & Sucursal & "'"
        StrSql = StrSql & "," & Cbnro
        StrSql = StrSql & "," & porcentaje
        StrSql = StrSql & "," & tipo_pago
        StrSql = StrSql & ",'" & asiento & "'"
        StrSql = StrSql & " )"
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline Espacios(Tabulador * 2) & "Nueva Cuenta Creada"
        FlogP.writeline "Linea Procesada."
    End If
End If
Fin:
'Cierro todo y libero
If rs_Empleado.State = adStateOpen Then rs_Empleado.Close
If rs_CtaBancaria.State = adStateOpen Then rs_CtaBancaria.Close
If rs_FormaPago.State = adStateOpen Then rs_FormaPago.Close
If rs_Doc.State = adStateOpen Then rs_Doc.Close
If rs_Banco.State = adStateOpen Then rs_Banco.Close

Set rs_CtaBancaria = Nothing
Set rs_Empleado = Nothing
Set rs_FormaPago = Nothing
Set rs_Doc = Nothing
Set rs_Banco = Nothing
Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    If InStr(1, Err.Description, "ODBC") > 0 Then
        'Fue error de Consulta de SQL
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
        Flog.writeline
    End If
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    GoTo Fin

End Sub

Public Sub LineaModelo_2007(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Inserta Nro de Transaccion del Pedido de Pago
'              El formato es: Legajo; Documento; Cta; NroTransaccion
' Autor      : Dimatz Rafael
' Fecha      : 28/09/2015
' Ultima Mod.:
' ---------------------------------------------------------------------------------------------

Dim Tercero As Long
Dim NroLegajo As Long

Dim rs_Empleado As New ADODB.Recordset
Dim rs_Periodos As New ADODB.Recordset
Dim rs_Confrep  As New ADODB.Recordset
Dim campos
Dim NroDoc
Dim Cta
Dim NroTransaccion
Dim l_ppagnro
Dim Arr_remplazo

On Error GoTo Manejador_De_Error

' El formato es: Legajo; Documento; Cta; NroTransaccion
    
    campos = Split(strLinea, separador, -1)
   
    'Nro de Legajo
    If IsNumeric(campos(0)) Then
        NroLegajo = campos(0)
    Else
        Flog.writeline " El legajo no es numerico " & campos(0)
        HuboError = True
        Exit Sub
    End If
    
    'NroTransaccion
    NroTransaccion = campos(1)
    
    '=============================================
    'Trae número de proceso para validar remplazo
    '=============================================
    StrSql = "SELECT bprcparam FROM batch_proceso "
    StrSql = StrSql & " WHERE bpronro = " & NroProcesoBatch
    OpenRecordset StrSql, rs_Confrep
    If rs_Confrep.EOF Then
        AccionNovedad = 0
    Else
        Arr_remplazo = Split(rs_Confrep!bprcparam, "@", -1)
        AccionNovedad = Arr_remplazo(2)
    End If
    rs_Confrep.Close

'Que pertenezca al pedido de pago
StrSql = "SELECT v_empleado.ternro,v_empleado.empleg,v_empleado.terape,v_empleado.terape2,v_empleado.ternom,v_empleado.ternom2, "
StrSql = StrSql & " pago.pagomonto,pago.ctabcbu,pago.ctabnro,pago.pagosec,estructura.estrdabr,Proceso.prodesc "
StrSql = StrSql & "FROM pedidopago "
StrSql = StrSql & " INNER JOIN pago ON pedidopago.ppagnro = pago.ppagnro"
StrSql = StrSql & " INNER JOIN cabliq ON pago.pagorigen = cabliq.cliqnro"
StrSql = StrSql & " INNER JOIN v_empleado ON pago.ternro = v_empleado.ternro"
StrSql = StrSql & " INNER JOIN proceso ON cabliq.pronro = proceso.pronro"
StrSql = StrSql & " LEFT JOIN banco ON pedidopago.bannro = banco.ternro"
StrSql = StrSql & " LEFT JOIN estructura ON estructura.estrnro = banco.estrnro"
StrSql = StrSql & " WHERE pedidopago.ppagnro = " & AccionNovedad
StrSql = StrSql & " AND v_empleado.empleg = " & NroLegajo
OpenRecordset StrSql, rs_Empleado
If rs_Empleado.EOF Then
    Flog.writeline " El Empleado " & NroLegajo & " no pertenece al pedido de pago: " & l_ppagnro
Else
    StrSql = "UPDATE pago SET NroTransaccion = " & NroTransaccion & " WHERE pago.ppagnro = " & AccionNovedad & " AND pago.ternro = " & rs_Empleado!Ternro
    objConn.Execute StrSql, , adExecuteNoRecords
    Flog.writeline " Nro de Transaccion Insertado "
End If

Fin:
'cierro y libero
If rs_Empleado.State = adStateOpen Then rs_Empleado.Close
If rs_Periodos.State = adStateOpen Then rs_Periodos.Close
If rs_Confrep.State = adStateOpen Then rs_Confrep.Close

Set rs_Empleado = Nothing
Set rs_Periodos = Nothing
Set rs_Confrep = Nothing

Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    If InStr(1, Err.Description, "ODBC") > 0 Then
        'Fue error de Consulta de SQL
        Flog.writeline
        Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
        Flog.writeline
    End If
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    GoTo Fin

End Sub

Public Sub LineaModelo_387(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Importacion de Documentos MultiPais
' Autor      : FGZ
' Fecha      : 30/05/2013
' Descripcion:
' Ultima Mod.:' Ultima Mod.: 02/01/2014 - Gonzalez Nicolás - Se agrego variable insertaFecha para corregir error al insertar/update la fecha cuando venia con N/A
'               07/01/2014 - Gonzalez Nicolás - Se corrige error al validar si ya existe un documento para otro empleado.

' ---------------------------------------------------------------------------------------------
' El formato es:
'   Legajo;Codigo Pais; Tipo Doc (tidsigla); Nro de Doc; [Vencimiento]
' ---------------------------------------------------------------------------------------------
Dim pos1            As Long
Dim pos2            As Long

Dim Nro_Legajo As Long
Dim CodigoPais      As String   'Codigo de Pais           -- pais.paisnro
Dim Pais_Desc As String
Dim Tdocu As String
Dim Nro_TDocumento As Long
Dim Nro_Institucion As Long
Dim Ndocu As String
Dim Termino As Boolean
Dim FechaVencimiento As Date
Dim Tercero As Long
Dim insertaFecha As Boolean
Dim rs_Empleado As New ADODB.Recordset
Dim rs_Sql As New ADODB.Recordset
Dim rs As New ADODB.Recordset
Dim rs_tdoc As New ADODB.Recordset

'Activo el Manejador de Errores Local
On Error GoTo Manejador_De_Error

LineaCarga = LineaCarga + 1
Flog.writeline
FlogE.writeline
FlogP.writeline

    'Nro de Legajo
    NroColumna = 1
    Obligatorio = True
    Campoetiqueta = "Legajo"
    pos1 = 1
    pos2 = InStr(pos1, strLinea, separador) - 1
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
        RegError = RegError + 1
        Exit Sub
    End If
    If IsNumeric(Aux) Then
        Nro_Legajo = Aux
    Else
        Texto = ": " & " - Campo " & Campoetiqueta & " no es numérico."
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
        'RegError = RegError + 1
        InsertaError 1, 8
        Exit Sub
    End If
    
    'Codigo de Pais
    CodigoPais = 3  'Argentina
    NroColumna = NroColumna + 1
    Campoetiqueta = "Codigo de Pais"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strLinea, separador) - 1
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1 + 1))
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    If Aux <> "N/A" And Aux <> "" And Not EsNulo(Aux) Then
        CodigoPais = Aux
    Else
        Texto = ": " & " - El código de Pais NO Existe, se tomará por default Argentina."
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
    End If
    Pais_Desc = ""
    StrSql = " SELECT paisdesc FROM pais "
    StrSql = StrSql & " WHERE paisnro = " & CodigoPais
    OpenRecordset StrSql, rs_Sql
    If Not rs_Sql.EOF Then
        Pais_Desc = rs_Sql!Paisdesc
    End If
    
    'Tipo de Doc
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Tipo de Doc"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strLinea, separador) - 1
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
        RegError = RegError + 1
        Exit Sub
    End If
    Tdocu = Left(Aux, 8)
    If Tdocu <> "N/A" Then
        StrSql = " SELECT tipodocu.tidnro FROM tipodocu "
        StrSql = StrSql & " INNER JOIN tipodocu_pais tdp ON tipodocu.tidnro = tdp.tidnro AND tdp.paisnro = " & CodigoPais
        StrSql = StrSql & " WHERE UPPER(tidsigla) = '" & UCase(Tdocu) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            Nro_TDocumento = rs_Sql!tidnro
        Else
            'El insertar docs no se puede hacer automaticamente porque necesita que se mapee el tipo de codigo
            '   hay que hacer algo cuando se inserta un tipo de doc porque hay que asociar tipodocu_pais con un codigo
            Nro_TDocumento = 0
        
        End If
        
        If Nro_TDocumento = 0 Then
            Texto = ": " & " - El Tipo de Documento no Existe para el País informado (" & Pais_Desc & ")."
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
            RegError = RegError + 1
            Exit Sub
        End If
    Else
        Nro_TDocumento = 0
        Texto = ": " & " - El Tipo de Documento es obligatorio y no fué informado, se aborta la ejecución."
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
        RegError = RegError + 1
        Exit Sub
    End If
    
    
    'Nro de Documento
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Nro de Documento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strLinea, separador) - 1
    If pos2 < pos1 Then
        pos2 = Len(strLinea)
        Termino = True
    Else
        Termino = False
    End If
    Aux = Trim(Mid(strLinea, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
        RegError = RegError + 1
        Exit Sub
    End If
    'FGZ - 27/11/2013 --------------------------
    'Se cambió la validacion al nuevo limite
    'Ndocu = Left(Aux, 30)
    Ndocu = Left(Aux, 100)
    'FGZ - 27/11/2013 --------------------------
    If Ndocu = "N/A" Then
        Ndocu = ""
    End If


'    'verifico que no este asignado a otro legajo
'    StrSql = "SELECT * FROM empleado "
'    StrSql = StrSql & " INNER JOIN ter_doc ON ter_doc.ternro = empleado.ternro "
'    StrSql = StrSql & " WHERE ter_doc.tidnro = " & Nro_TDocumento & " AND ter_doc.nrodoc = '" & Ndocu & "'"
'    'NG - 07/01/2014
'    StrSql = StrSql & " AND empleado.ternro <> " & Tercero
'    OpenRecordset StrSql, rs_tdoc
'    Flog.writeline StrSql
'    If Not rs_tdoc.EOF Then
'        Texto = ": " & " - Ese Tipo y Numero de Documento ya estan asignados."
'        NroColumna = 2
'        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
'        RegError = RegError + 1
'        Exit Sub
'    End If
    
    'Fecha de Vencimiento
    If Not Termino Then
        NroColumna = NroColumna + 1
        Obligatorio = False
        Campoetiqueta = "Fecha de Vencimiento"
        pos1 = pos2 + 2
        pos2 = Len(strLinea)
        Aux = Trim(Mid(strLinea, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
            RegError = RegError + 1
            Exit Sub
        End If
        If IsDate(Aux) Then
            FechaVencimiento = C_Date(Aux)
            insertaFecha = True
        Else
            If Not (Aux = "N/A" Or EsNulo(Aux)) Then
                Texto = ": " & " - Campo " & Campoetiqueta & " no es una fecha."
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                RegError = RegError + 1
'                Exit Sub
            End If
            insertaFecha = False
        End If
    End If
        

    ' ----------------------------------
    'Validaciones
    'Que exista el legajo
    StrSql = "SELECT * FROM empleado where empleg = " & Nro_Legajo
    OpenRecordset StrSql, rs_Empleado
    If rs_Empleado.EOF Then
        Texto = ": " & " - Campo " & Campoetiqueta & ". No se encontró el legajo."
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
        InsertaError 1, 8
        RegError = RegError + 1
        Exit Sub
    Else
        Tercero = rs_Empleado!Ternro
    End If
    
    'verifico que no este asignado a otro legajo
    StrSql = "SELECT * FROM empleado "
    StrSql = StrSql & " INNER JOIN ter_doc ON ter_doc.ternro = empleado.ternro "
    StrSql = StrSql & "inner join tipodocu on ter_doc.tidnro = tipodocu.tidnro"
    StrSql = StrSql & " WHERE ter_doc.tidnro = " & Nro_TDocumento & " AND ter_doc.nrodoc = '" & Ndocu & "' and tipodocu.tidunico=-1"
    'NG - 07/01/2014
    StrSql = StrSql & " AND empleado.ternro <> " & Tercero
    OpenRecordset StrSql, rs_tdoc
    Flog.writeline StrSql
    If Not rs_tdoc.EOF Then
        Texto = ": " & " - Ese Tipo y Numero de Documento ya estan asignados."
        NroColumna = 2
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
        RegError = RegError + 1
        Exit Sub
    End If
    
    
    'Inserto
    StrSql = "SELECT * FROM ter_doc WHERE ternro = " & Tercero
    StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs
    If rs.EOF Then
        StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc"
        If Not Termino And insertaFecha = True Then
            StrSql = StrSql & ",fecvtodoc"
        End If
        StrSql = StrSql & ") "
        StrSql = StrSql & " VALUES(" & Tercero & "," & Nro_TDocumento & ",'" & Ndocu & "'"
        If Not Termino And insertaFecha = True Then
            StrSql = StrSql & "," & ConvFecha(FechaVencimiento)
        End If
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = ": " & "Inserte el Documento - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strLinea)
    Else
        StrSql = " UPDATE ter_doc SET "
        StrSql = StrSql & " nrodoc = '" & Ndocu & "'"
        If Not Termino And insertaFecha = True Then
            StrSql = StrSql & " ,fecvtodoc = " & ConvFecha(FechaVencimiento)
        End If
        StrSql = StrSql & " WHERE ternro = " & Tercero
        StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = Texto = ": " & "Documento actualizado - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strLinea)
    End If
    
        
Fin:

'Desactivo el manejador de Errores Local
On Error GoTo 0

Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error en Modelo 387 en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    GoTo Fin
End Sub

'Public Sub LineaModelo_921(ByVal strLinea As String)
'' ---------------------------------------------------------------------------------------------
'' Descripcion: Importacion de Postulantes Peru
'' Autor      : Dimatz Rafael
'' Fecha      : 04/12/2013
'' Ultima Mod.:13/05/2014 - Carmen Quintero - CAS-22751 - VILLA MARIA - Adecuacion Empleos y Postulantes - Bug en la interfaz 921
''                          'Se modificó la ubicacion de las columnas, al momento de tomar la informacion del modelo de domicilio de peru
'                           'para el caso cuando el tipo de documento ya esta creado
'' Descripcion:
'' ---------------------------------------------------------------------------------------------
'    Dim datos() As String
'    Dim TipItemInf(10) As Long
'    Dim Ternro As Long
'    Dim NroDom As Long
'    Dim a As Long
'    Dim Xconst As Long
'    Dim ActPasos As Boolean
'    Dim tempString As String
'    Dim EstPosNro As Long
'    Dim Aux As Integer
'    Dim Inserto As Integer
'
'    Dim rs_Ter As New ADODB.Recordset
'    Dim rs_Aux As New ADODB.Recordset
'    Dim I As Long
'
'
'    Flog.writeline "procesando linea " & strLinea
'
'    'Si ocurre un error antes de insertar el tercero se aborta el postulante
'    On Error GoTo Manejador_De_Error:
'
'    datos = Split("0" & separador & strLinea, separador)
'    For I = 0 To UBound(datos)
'        datos(I) = Trim(datos(I))
'    Next I
'    '--Documentos--
'    datos(1) = TraerCodTipoDocumento(CStr(datos(1)))  'tipoDocumento
'    datos(2) = StrToStr(CStr(datos(2)), 30) 'numeroDocumento
'    datos(2) = Replace(datos(2), ".", "") 'elimino puntos y comas
'    datos(2) = Replace(datos(2), ",", "")
'
'    '--Tercero
'    datos(3) = StrToStr(datos(3), 25) 'ternom
'    datos(4) = StrToStr(datos(4), 25)  'ternom2
'    datos(5) = StrToStr(datos(5), 25) 'terape
'    datos(6) = StrToStr(datos(6), 25) 'terape2
'    datos(7) = ConvFecha(CDate(datos(7))) 'terfecnac
'    'If UCase(Datos(8)) = "MASCULINO" Then Datos(8) = -1 Else Datos(8) = 0 'tersex
'    If (UCase(datos(8)) = "M") Or (UCase(datos(8)) = "-1") Or (UCase(datos(8)) = "MASCULINO") Then
'        datos(8) = -1
'    Else
'        datos(8) = 0
'    End If
'
'    datos(23) = StrToStr(datos(23), 100) ' teremail
'    datos(13) = TraerCodNacionalidad(CStr(datos(13))) ' nacionalnro
'    datos(9) = StrToStr(TraerCodEstadoCivil(CStr(datos(9))), 8) 'estcivnro
'    If datos(14) = "" Then
'        datos(14) = "''"
'    Else
'        datos(14) = ConvFecha(CDate(datos(14))) 'fechaingresopais
'    End If
'    datos(11) = StrToStr(datos(11), 25) 'tercasape
'    If datos(10) = "" Then
'        datos(10) = "NULL"
'    Else
'        datos(10) = ConvFecha(CDate(datos(10))) 'terfecestciv
'    End If
'    datos(12) = TraerCodPais(CStr(datos(12))) 'paisnro
'
'
'    'FGZ - 06/04/2005
'    StrSql = "SELECT * FROM ter_doc  "
'    StrSql = StrSql & " WHERE ter_doc.tidnro = " & datos(1)
'    StrSql = StrSql & " AND nrodoc = '" & datos(2) & "'"
'    OpenRecordset StrSql, rs_Ter
'
'    If rs_Ter.EOF Then
'        StrSql = " INSERT INTO tercero (ternom, ternom2, terape, terape2, terfecnac, tersex, teremail, nacionalnro, estcivnro, terfecing, tercasape,terfecestciv, paisnro ) VALUES ("
'        StrSql = StrSql & "'" & datos(3) & "'"      'ternom
'        StrSql = StrSql & ",'" & datos(4) & "'"     'ternom2
'        StrSql = StrSql & ",'" & datos(5) & "'"      'terape
'        StrSql = StrSql & ",'" & datos(6) & "'"     'terape2
'        StrSql = StrSql & "," & datos(7)            'terfecnac
'        StrSql = StrSql & "," & CLng(datos(8))      'tersex
'        StrSql = StrSql & ",'" & datos(23) & "'"    'teremail
'        StrSql = StrSql & "," & CLng(datos(13))     'nacionalnro
'        StrSql = StrSql & ",'" & datos(9) & "'"     'estcivnro
'        StrSql = StrSql & "," & datos(14)           'fechaingresopais
'        StrSql = StrSql & ",'" & datos(11) & "'"    'tercasape
'        StrSql = StrSql & "," & datos(10)           'terfecestciv
'        StrSql = StrSql & "," & datos(12)           'paisnro
'        StrSql = StrSql & ")"
'        objConn.Execute StrSql, , adExecuteNoRecords
'        Flog.writeline "Inserto en la tabla de tercero"
'
'        '--Obtengo el ternro--
'        Ternro = getLastIdentity(objConn, "tercero")
'        Flog.writeline "-----------------------------------------------"
'        Flog.writeline "Codigo de Tercero = " & Ternro
'
'        '--Inserto el Registro correspondiente en ter_tip--
'        StrSql = " INSERT INTO ter_tip(ternro,tipnro) VALUES(" & Ternro & ",14)"
'        objConn.Execute StrSql, , adExecuteNoRecords
'        'Flog.Writeline "Inserto el tipo de tercero 14 en ter_tip"
'
'        'Desactivo el manejador de erorres
'        On Error GoTo 0
'
'
'        'Cualquier error que ocurra de aquí en adelante sigue adelante
'        ' tratando de insertar la mayor cantidad de datos posible
'        On Error Resume Next
'        'HuboError = False
'
'        StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
'        StrSql = StrSql & " VALUES(" & Ternro & "," & datos(1) & ",'" & datos(2) & "')"
'        objConn.Execute StrSql, , adExecuteNoRecords
'
'        '--------------------------------------------------------------------------------
'        '--Inserto el Domicilio--
'            Dim rs_via As New ADODB.Recordset
'
'    '--Inserto el Domicilio--
'        StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
'        StrSql = StrSql & " VALUES(1," & Ternro & ",-1,2)"
'        objConn.Execute StrSql, , adExecuteNoRecords
'        Flog.writeline "inserto el Domicilio"
'
'        '--Obtengo el numero de domicilio en la tabla--
'        NroDom = CLng(getLastIdentity(objConn, "cabdom"))
'
'        '--Si no tiene algun dato le agregamos unos ficticios--
'        datos(24) = StrToStr(datos(24), 30) 'dirCalle
'        datos(25) = StrToStr(datos(25), 8) 'dirNumero
'        datos(26) = StrToStr(datos(26), 8) 'dirPiso
'        datos(27) = StrToStr(datos(27), 10) 'dirDepto
'        datos(28) = StrToStr(datos(28), 80) 'Entrecalles
'        datos(29) = StrToStr(datos(29), 8) 'Via
'        datos(30) = TraerCodLocalidad(CStr(datos(30))) 'dirLocalidad
'        datos(31) = TraerCodProvincia(CStr(datos(31))) 'dirProvincia
'        datos(32) = TraerCodPartido(CStr(datos(32))) 'Distrito
'        datos(33) = TraerCodPais(CStr(datos(33))) 'dirpais
'
'
'        datos(29) = 0
'        StrSql = "SELECT * FROM via WHERE viadesc = '" & datos(29) & "'"
'        OpenRecordset StrSql, rs_via
'        If Not rs_via.EOF Then
'            datos(29) = rs_via("vianro")
'        End If
'
'        StrSql = " INSERT INTO detdom (domnro,calle,nro,piso,oficdepto,entrecalles,vianro,locnro,provnro,partnro,paisnro)"
'        StrSql = StrSql & " VALUES ("
'        StrSql = StrSql & NroDom
'        StrSql = StrSql & ",'" & datos(24) & "'"
'        StrSql = StrSql & ",'" & datos(25) & "'"
'        StrSql = StrSql & ",'" & datos(26) & "'"
'        StrSql = StrSql & ",'" & datos(27) & "'"
'        StrSql = StrSql & ",'" & datos(28) & "'"
'        StrSql = StrSql & ",'" & datos(29) & "'"
'        StrSql = StrSql & "," & datos(30)
'        StrSql = StrSql & "," & datos(31)
'        StrSql = StrSql & ",'" & datos(32) & "'"
'        StrSql = StrSql & ", " & datos(33)
'        StrSql = StrSql & ")"
'        objConn.Execute StrSql, , adExecuteNoRecords
'        If Err Then
'            Err.Clear
'        Else
'            Flog.writeline "Inserte el domicilio "
'        End If
'
'        Flog.writeline "Inserto el Domicilio "
'
'        '--Telefonos-Personal--
'        datos(21) = validatelefono(StrToStr(datos(21), 20))
'        If datos(21) <> "" Then
'            StrSql = " INSERT INTO telefono "
'            'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
'            StrSql = StrSql & " (domnro, telnro, telfax, teldefault, telcelular,tipotel ) "
'            StrSql = StrSql & " VALUES (" & NroDom & ", '" & datos(21) & "' ,0 , -1 ,0,1 ) "
'            objConn.Execute StrSql, , adExecuteNoRecords
'            If Err Then
'                Err.Clear
'            Else
'                Flog.writeline "Inserte el telefono"
'            End If
'        End If
'
'        '--Telefonos-Celular--
'        'FGZ 11/04/2005 - quieren que lo cargue como telefono comun
'        datos(22) = validatelefono(StrToStr(datos(22), 20))
'        If datos(22) <> "" Then
'            StrSql = " INSERT INTO telefono "
'            'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
'            StrSql = StrSql & " (domnro, telnro, telfax, teldefault, telcelular,tipotel ) "
'            StrSql = StrSql & " VALUES (" & NroDom & ", '" & datos(22) & "' , 0, -1, 0,2 ) "
'            objConn.Execute StrSql, , adExecuteNoRecords
'            'Flog.Writeline " Inserto el telefono calular "
'            'Flog.Writeline " Inserto el segundo telefono "
'            If Err Then
'                Err.Clear
'            Else
'                Flog.writeline "Inserte el telefono2 "
'            End If
'        End If
'
'        '--Complemento--
'        If datos(15) = "" Then
'            datos(15) = 0
'        Else
'            datos(15) = CLng(StrToInt(datos(15))) 'cantidadHijos
'        End If
'        datos(16) = StrToStr(datos(16), 60) 'imagen
'        If datos(17) = "" Then
'            datos(17) = "NULL"
'        Else
'            datos(17) = ConvFecha(CDate(datos(17))) 'fechaIngresoCV
'        End If
'        datos(18) = StrToStr(datos(18), 250) 'referencias
'        If datos(19) = "" Then
'            datos(19) = TraerCodProcedencia("Web Deloitte") 'procedencia
'        Else
'            datos(19) = TraerCodProcedencia(CStr(datos(19))) 'procedencia
'        End If
'        If datos(20) = "" Then
'            datos(20) = 0
'        Else
'            datos(20) = CDbl(StrToDbl(datos(20))) 'remuneracionPretendida
'        End If
'
'        'FGZ - 02/03/2006 Se agrego el estposnro = 4 (postulantre activo)
'        StrSql = " INSERT INTO pos_postulante "
'        StrSql = StrSql & " ( ternro, posrempre, poscanhijos, posfoto, posfecpres, posref, procnro,estposnro) "
'        StrSql = StrSql & " VALUES (" & Ternro & " ," & CDbl(datos(20)) & ", " & CLng(datos(15)) & ", '" & datos(16) & "', " & datos(17) & ",'" & datos(18) & "', " & datos(19) & ",4) "
'        objConn.Execute StrSql, , adExecuteNoRecords
'        If Err Then
'            Flog.writeline "Error al inserte el Complemento: " & Err.Description
'            Flog.writeline "SQL ejecutada: " & StrSql
'            Err.Clear
'        Else
'            Flog.writeline "Inserte el Complemento "
'        End If
'
'
'
'        '--Estudios-formales--(49)(50)
'        Xconst = 1
'        For a = 0 To 3
'            If datos(Xconst + 33) <> "" Then
'                datos(Xconst + 33) = TraerCodNivelEstudio(datos(Xconst + 33))   'EFnivel8
'                'FGZ - 29/08/2005
'                'If Datos(Xconst + 38) = "Graduado" Then Datos(Xconst + 38) = -1 Else Datos(Xconst + 38) = 0
'                'If datos(Xconst + 44) = -1 Then datos(Xconst + 44) = -1 Else datos(Xconst + 44) = 0
'                If datos(Xconst + 34) = -1 Then datos(Xconst + 34) = -1 Else datos(Xconst + 34) = 0
'                    'Datos(Xconst + 38) = Datos(Xconst + 38)   'EFcompleto8
'
'                datos(Xconst + 36) = TraerCodInstitucionAbreviada(CStr(datos(Xconst + 36)))   'EFinstitucion8
'                datos(Xconst + 37) = TraerCodCarrera(CStr(datos(Xconst + 37)))    'EFcarrera8
'                datos(Xconst + 35) = TraerCodTitulo(CStr(datos(Xconst + 35)), CLng(datos(Xconst + 37)))   'EFtitulo8
'                If datos(Xconst + 38) <> "" Then
'                    datos(Xconst + 38) = ConvFecha(CDate(datos(Xconst + 38)))   'EFfechaDesde8
'                Else
'                    datos(Xconst + 38) = "NULL"
'                End If
'                If datos(Xconst + 39) <> "" Then
'                    datos(Xconst + 39) = ConvFecha(CDate(datos(Xconst + 39)))   'EFfechaHasta8
'                Else
'                    datos(Xconst + 39) = "NULL"
'                End If
'                datos(Xconst + 40) = StrToStr(datos(Xconst + 40), 30)   'EFpromedio8
'                datos(Xconst + 41) = StrToStr(datos(Xconst + 41), 60)   'EFrango8
'                If datos(Xconst + 42) <> "" And UCase(datos(Xconst + 42)) <> "NO" Then
'                    datos(Xconst + 42) = -1  'EFestudiaActualmente8
'                Else
'                    datos(Xconst + 42) = 0  'EFestudiaActualmente8
'                End If
'
'                StrSql = " INSERT INTO cap_estformal "
'                StrSql = StrSql & " ( nivnro, ternro, titnro, instnro, carredunro, capfecdes, capfechas, capcomp , capestact, caprango, capprom) "
'                StrSql = StrSql & " VALUES (" & CLng(datos(Xconst + 33)) & ", " & Ternro & " ," & datos(Xconst + 35) & "," & datos(Xconst + 36) & "," & datos(Xconst + 37) & "," & datos(Xconst + 38) & " ," & datos(Xconst + 39) & "," & datos(Xconst + 34) & "," & datos(Xconst + 42) & ",'" & datos(Xconst + 41) & "','" & datos(Xconst + 40) & "' ) "
'                'StrSql = StrSql & " Go "
'                Err.Clear
'                objConn.Execute StrSql, , adExecuteNoRecords
'
'
'                If Err Then
'                    Flog.writeline "Error al inserte el estudio formal: " & Err.Description
'                    Flog.writeline "SQL ejecutada: " & StrSql
'                    Err.Clear
'                Else
'                    Flog.writeline "Inserte el estudio formal " & datos(Xconst + 37)
'                    ActPasos = True
'                End If
'            End If
'            Xconst = Xconst + 10
'        Next a
'        If ActPasos Then
'            Call InsertarPaso(Ternro, 50)
'        End If
'        ActPasos = False
'
'
'        '--Experiencia-Laboral----Empleos Anteriores--57 (58)
'        'reemplazos
'        '117 x 77
'        Xconst = 1
'        For a = 0 To 3
'            If datos(Xconst + 84) <> "" And datos(Xconst + 83) <> "" Then
'                datos(Xconst + 83) = TraerCodCargo(CStr(datos(Xconst + 83)))    'ELcargoAnterior16
'                datos(Xconst + 84) = TraerCodListaEmpresa(CStr(datos(Xconst + 84)))   'ELempresa16 lempnro
'                datos(Xconst + 85) = StrToStr(datos(Xconst + 85), 200) 'ELtareaDesempenada16
'                If datos(Xconst + 86) <> "" Then
'                    datos(Xconst + 86) = ConvFecha(CDate(datos(Xconst + 86)))  'ELfechaDesde16
'                Else
'                    datos(Xconst + 86) = "NULL"
'                End If
'                If datos(Xconst + 87) <> "" Then
'                    datos(Xconst + 87) = ConvFecha(CDate(datos(Xconst + 87)))  'ELfechaHasta16
'                Else
'                    datos(Xconst + 87) = "NULL"
'                End If
'                If datos(Xconst + 88) = "" Then
'                    datos(Xconst + 88) = 0
'                Else
'                    datos(Xconst + 88) = StrToDbl(datos(Xconst + 88))   'ELremuneracion16
'                End If
'                If datos(Xconst + 89) <> "" Then
'                    datos(Xconst + 89) = TraerCodCausa(CStr(datos(Xconst + 89)))   'ELcausaBaja16
'                Else
'                    datos(Xconst + 89) = "NULL"
'                End If
'
'                StrSql = " INSERT INTO empant "
'                'FGZ - 29/08/2005
'                'cambié los nombres de los campos donde inserta las fechas desde y hasta
'                'StrSql = StrSql & " ( empleado, empatareas, lempnro, empadesde, emmpahasta, carnro, emparemu ) "
'                StrSql = StrSql & " ( empleado, empatareas, lempnro, empaini, empafin, carnro, emparemu, caunro ) "
'                StrSql = StrSql & " VALUES (" & Ternro & ", '" & datos(Xconst + 85) & "' ," & datos(Xconst + 84) & "," & datos(Xconst + 86) & "," & datos(Xconst + 87) & "," & datos(Xconst + 83) & "," & datos(Xconst + 88) & "," & datos(Xconst + 89) & "  ) "
'
'
'                objConn.Execute StrSql, , adExecuteNoRecords
'                If Err Then
'                    Flog.writeline "Error al inserte el Empleo Anterior: " & Err.Description
'                    Flog.writeline "SQL ejecutada: " & StrSql
'                    Err.Clear
'                Else
'                    Flog.writeline "Inserto los datos del Empleo Anterior"
'                    ActPasos = True
'                End If
'            End If
'            Xconst = Xconst + 7
'        Next a
'        If ActPasos Then
'            Call InsertarPaso(Ternro, 58)
'        End If
'        ActPasos = False
'
'        '--Idiomas--53 (54)
'        'reemplazos
'        '229 x 105
'        ActPasos = False
'        Xconst = 1
'        For a = 0 To 3
'            If datos(Xconst + 111) <> "" Then
'                If datos(Xconst + 112) <> "" Or datos(Xconst + 113) <> "" Or datos(Xconst + 114) <> "" Then
'                    datos(Xconst + 111) = TraerCodIdioma(CStr(datos(Xconst + 111))) 'idioma1
'                    datos(Xconst + 112) = TraerCodIdiNivel(CStr(datos(Xconst + 112))) 'idiomaLee1
'                    datos(Xconst + 113) = TraerCodIdiNivel(CStr(datos(Xconst + 113))) 'idiomaHabla1
'                    datos(Xconst + 114) = TraerCodIdiNivel(CStr(datos(Xconst + 114))) 'idiomaEscribe1
'
'                    If Not TieneIdioma(Ternro, CLng(datos(Xconst + 111))) Then
'                        StrSql = " INSERT INTO emp_idi "
'                        StrSql = StrSql & " (idinro, empleado, empidlee, empidhabla, empidescr) "
'                        StrSql = StrSql & " VALUES (" & CLng(datos(Xconst + 111)) & ", " & Ternro & " ," & datos(Xconst + 112) & ", " & datos(Xconst + 113) & ", " & datos(Xconst + 114) & " ) "
'                    Else
'                        StrSql = " UPDATE emp_idi SET "
'                        StrSql = StrSql & " empidlee = " & datos(Xconst + 112)
'                        StrSql = StrSql & ", empidhabla = " & datos(Xconst + 113)
'                        StrSql = StrSql & ", empidescr = " & datos(Xconst + 114)
'                        StrSql = StrSql & " where empleado = " & Ternro & " and idinro = " & CLng(datos(Xconst + 111))
'                    End If
'                    objConn.Execute StrSql, , adExecuteNoRecords
'                    If Err Then
'                        Flog.writeline "Error al inserte el Idioma " & datos(Xconst + 111) & "-" & Err.Description
'                        Flog.writeline "SQL ejecutada: " & StrSql
'                        Err.Clear
'                    Else
'                        Flog.writeline "Inserte el Idioma " & datos(Xconst + 111)
'                        ActPasos = True
'                    End If
'                End If
'            End If
'            Xconst = Xconst + 4
'        Next a
'        If ActPasos Then
'            Call InsertarPaso(Ternro, 54)
'        End If
'        ActPasos = False
'
'
'        '--Estudios-Informales--50 (51)
'        'Reemplazos
'        ' 249 x 121
'        ActPasos = False
'        ActPasos = False
'        Xconst = 1
'        For a = 0 To 3
'            If datos(Xconst + 127) <> "" Then
'                tempString = StrToStr(datos(127 + Xconst), 50) ''descCurso  estinfdesabr
'                datos(127 + Xconst) = datos(127 + Xconst) ''descCurso  estinfdesabr
'                datos(128 + Xconst) = TraerCodTipoCurso(StrToStr(datos(128 + Xconst), 50)) 'tipoCurso tipcurnro
'                If datos(128 + Xconst) <> "" Then
'                    datos(129 + Xconst) = ConvFecha(datos(129 + Xconst)) 'fechaCurso  estinffecha
'                Else
'                    datos(129 + Xconst) = ConvFecha(Date)
'                End If
'                datos(130 + Xconst) = TraerCodInstitucion(CStr(datos(130 + Xconst))) 'institucionCurso instnro
'                If datos(127 + Xconst) = "" Or datos(128 + Xconst) = "" Or datos(130 + Xconst) = "" Then
'                    Flog.writeline "Error al insertar el estudio informal por falta de datos "
'                Else
'                    StrSql = " INSERT INTO cap_estinformal "
'                    StrSql = StrSql & " (ternro, estinfdesabr, estinffecha, tipcurnro, instnro) "
'                    StrSql = StrSql & " VALUES (" & Ternro & " , '" & tempString & "'," & datos(129 + Xconst) & "," & CLng(datos(128 + Xconst)) & "," & CLng(datos(130 + Xconst)) & ")"
'                    Err.Clear
'                    objConn.Execute StrSql, , adExecuteNoRecords
'                    If Err Then
'                        Flog.writeline "Error al insertar el estudio informal: " & Err.Description
'                        Flog.writeline "SQL ejecutada: " & StrSql
'                        Err.Clear
'                    Else
'                        Flog.writeline "Inserto los datos del estudio informal "
'                        ActPasos = True
'                    End If
'                End If
'            End If
'            Xconst = Xconst + 4
'        Next a
'        If ActPasos Then
'            Call InsertarPaso(Ternro, 51)
'        End If
'        ActPasos = False
'
'
'        '--Especializaciones--51 (52)
'        'reemplazos
'        '253 x 137
'        Xconst = 1
'        ActPasos = False
'        For a = 0 To 3
'            If datos(Xconst + 145) <> "" Then
'                datos(Xconst + 143) = TraerCodEspecializacion(CStr(datos(Xconst + 143))) 'tipo
'                datos(Xconst + 144) = TraerCodEltoana(CStr(datos(Xconst + 144)), CLng(datos(Xconst + 143))) 'elemento
'                datos(Xconst + 145) = TraerCodNivelEspecializacion(CStr(datos(Xconst + 145))) 'nivel
'
'                StrSql = " INSERT INTO especemp "
'                StrSql = StrSql & " (eltananro, ternro, espnivnro ) "
'                StrSql = StrSql & " VALUES (" & datos(Xconst + 144) & ", " & Ternro & " ," & datos(Xconst + 145) & ") "
''                StrSql = StrSql & " VALUES (" & datosEltoAna(0, a) & ", " & ternro & " ," & Datos(Xconst + 139) & ") "
'                Err.Clear
'                objConn.Execute StrSql, , adExecuteNoRecords
'                If Err Then
'                    Flog.writeline "Error al insertar la especialidad: " & Err.Description
'                    Flog.writeline "SQL ejecutada: " & StrSql
'                    Err.Clear
'                Else
'                    Flog.writeline "Inserto los datos de la especialidad."
'                    ActPasos = True
'                End If
'            Else
'                Flog.writeline "Error al insertar la especialidad por falta de datos."
'            End If
'            Xconst = Xconst + 3
'        Next a
'        If ActPasos Then
'           Flog.writeline "Inserto los datos de la especialidad"
'           Call InsertarPaso(Ternro, 52)
'           ActPasos = False
'        End If
'
'        '--Tipos e Items de Informacion
'        ActPasos = False
'        Xconst = 1
'
'        For a = 0 To 4
'            If datos(Xconst + 155) <> "" Then
'                datos(155 + Xconst) = UCase(datos(155 + Xconst)) ''descTipoInformacion
'
'                TipItemInf(Xconst) = TraerCodTipInformacion(datos(155 + Xconst))
'
'                If datos(156 + Xconst) <> "" Then
'                    datos(156 + Xconst) = UCase(datos(156 + Xconst)) ''descItemInformacion
'
'                    TipItemInf(Xconst + 1) = TraerCodItemInformacion(datos(156 + Xconst), TipItemInf(Xconst))
'
'                    'AHORA TENGO QUE ASOCIARLE EL PAR AL POSTULANTE
'                    Inserto = AsociarParAPostulante(TipItemInf(Xconst + 1), Ternro)
'                    If Inserto = -1 Then
'                        Flog.writeline "Se Asocio el Par con el Postulante"
'                        ActPasos = True
'                    Else
'                        Flog.writeline "El Postulante ya tenia el Par asociado"
'                    End If
'                Else
'                    Flog.writeline "Falto especificar el Item de Informacion"
'                End If
'            Else
'                Flog.writeline "Falto especificar el Tipo de Informacion"
'            End If
'
'            Xconst = Xconst + 2
'        Next a
'        If ActPasos Then
'            Call InsertarPaso(Ternro, 86)
'        End If
'        ActPasos = False
'
'
'    Else
'        Ternro = rs_Ter!Ternro
'        Flog.writeline "-----------------------------------------------"
'        Flog.writeline "Codigo de Tercero = " & Ternro
'
'        'FGZ - 27/07/2005
'        'si el tercereo existe pero es de tipo empleado ==> no se hace nada
'        '1       Empleado
'        '2       Empleado Agencia
'        StrSql = " SELECT * FROM ter_tip"
'        StrSql = StrSql & " WHERE ternro = " & Ternro
'        StrSql = StrSql & " AND tipnro = 1"
'        'StrSql = StrSql & " AND (tipnro = 1 OR tipnro = 2)"
'        If rs_Aux.State = adStateOpen Then rs_Aux.Close
'        OpenRecordset StrSql, rs_Aux
'        If Not rs_Aux.EOF Then
'            Flog.writeline "El Postulante ya es empleado." & datos(5) & " " & datos(3) & " " & datos(4) & "No se procesará."
'            Exit Sub
'        End If
'
'        'Actualizar los datos
'        StrSql = " UPDATE tercero SET "
'        StrSql = StrSql & " ternom = " & "'" & datos(3) & "'"
'        StrSql = StrSql & ", ternom2 = " & "'" & datos(4) & "'"
'        StrSql = StrSql & ", terape = " & "'" & datos(5) & "'"
'        StrSql = StrSql & ", terape2 = " & "'" & datos(6) & "'"
'        StrSql = StrSql & ", terfecnac = " & datos(7)
'        StrSql = StrSql & ", tersex = " & CLng(datos(8))
'        StrSql = StrSql & ", teremail =" & "'" & datos(23) & "'"
'        StrSql = StrSql & ", nacionalnro =" & CLng(datos(13))
'        StrSql = StrSql & ", estcivnro =" & "'" & datos(9) & "'"
'        StrSql = StrSql & ", terfecing =" & datos(14)
'        StrSql = StrSql & ", tercasape =" & "'" & datos(11) & "'"
'        StrSql = StrSql & ",terfecestciv =" & datos(10)
'        StrSql = StrSql & ", paisnro =" & datos(12)
'        StrSql = StrSql & " WHERE ternro = " & Ternro
'        objConn.Execute StrSql, , adExecuteNoRecords
'        Flog.writeline "Tercero Actualizado"
'
'        'Desactivo el manejador de erorres
'        On Error GoTo 0
'
'        'Cualquier error que ocurra de aquí en adelante sigue adelante
'        ' tratando de insertar la mayor cantidad de datos posible
'        On Error Resume Next
'
'        StrSql = "SELECT * FROM ter_doc  "
'        StrSql = StrSql & " WHERE ter_doc.tidnro = " & datos(1)
'        StrSql = StrSql & " AND ternro = " & Ternro
'        If rs_Aux.State = adStateOpen Then rs_Aux.Close
'        OpenRecordset StrSql, rs_Aux
'        If rs_Aux.EOF Then
'            StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
'            StrSql = StrSql & " VALUES(" & Ternro & "," & datos(1) & ",'" & datos(2) & "')"
'        Else
'            StrSql = "UPDATE ter_doc SET "
'            StrSql = StrSql & " nrodoc = '" & datos(2) & "'"
'            StrSql = StrSql & " WHERE ter_doc.tidnro = " & datos(1)
'            StrSql = StrSql & " AND ternro = " & Ternro
'        End If
'        objConn.Execute StrSql, , adExecuteNoRecords
'        Flog.writeline "Documento Actualizado"
'
'
'        '--------------------------------------------------------------------------------
'        '--Inserto el Domicilio--
'        StrSql = "SELECT * FROM cabdom  "
'        StrSql = StrSql & " WHERE tipnro = 1"
'        StrSql = StrSql & " AND ternro = " & Ternro
'        If rs_Aux.State = adStateOpen Then rs_Aux.Close
'        OpenRecordset StrSql, rs_Aux
'        If rs_Aux.EOF Then
'            StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
'            StrSql = StrSql & " VALUES(1," & Ternro & ",-1,2)"
'            objConn.Execute StrSql, , adExecuteNoRecords
'            Flog.writeline "inserto el Domicilio"
'
'            '--Obtengo el numero de domicilio en la tabla--
'            NroDom = CLng(getLastIdentity(objConn, "cabdom"))
'
'            '--Si no tiene algun dato le agregamos unos ficticios--
'            datos(24) = StrToStr(datos(24), 30) 'dirCalle
'            datos(25) = StrToStr(datos(25), 8) 'dirNumero
'            datos(26) = StrToStr(datos(26), 8) 'dirPiso
'            'datos(27) = StrToStr(datos(27), 8) 'dirDepto
'            datos(27) = StrToStr(datos(27), 10) 'dirDepto
'            'datos(28) = StrToStr(datos(28), 8) 'dirTorre
'            datos(28) = StrToStr(datos(28), 80) 'Entrecalles
'            'datos(29) = StrToStr(datos(29), 8) 'dirManzana
'            datos(29) = StrToStr(datos(29), 8) 'Via
'            'datos(30) = StrToStr(datos(30), 8) 'dirSector
'            datos(30) = TraerCodLocalidad(CStr(datos(30))) 'dirLocalidad
'            'datos(31) = StrToStr(datos(31), 12) 'dirCP
'            datos(31) = TraerCodProvincia(CStr(datos(31))) 'dirProvincia
'            'datos(32) = TraerCodLocalidad(CStr(datos(32))) 'dirLocalidad
'            datos(32) = TraerCodPartido(CStr(datos(32))) 'Distrito
'            'datos(33) = TraerCodProvincia(CStr(datos(33)))   'dirProvincia
'            datos(33) = TraerCodPais(CStr(datos(33))) 'dirpais
'
'            'datos(34) = TraerCodPartido(CStr(datos(34)))  'dirPartido
'            'datos(35) = TraerCodZona(CStr(datos(35)), CLng(datos(33)))  'dirZona
'             '   If datos(35) = "" Then datos(35) = "NULL"
'            'datos(36) = TraerCodPais(CStr(datos(36))) 'dirPais
'
'
''            StrSql = " INSERT INTO detdom (domnro,calle,nro,sector,torre,piso,oficdepto,manzana,codigopostal,"
''            StrSql = StrSql & "locnro,provnro,paisnro, zonanro, partnro) "
''            StrSql = StrSql & " VALUES ("
''            StrSql = StrSql & NroDom
''            StrSql = StrSql & ",'" & datos(24) & "'"
''            StrSql = StrSql & ",'" & datos(25) & "'"
''            StrSql = StrSql & ",'" & datos(30) & "'"
''            StrSql = StrSql & ",'" & datos(28) & "'"
''            StrSql = StrSql & ",'" & datos(26) & "'"
''            StrSql = StrSql & ",'" & datos(27) & "'"
''            StrSql = StrSql & ",'" & datos(29) & "'"
''            StrSql = StrSql & ",'" & datos(31) & "'"
''            StrSql = StrSql & "," & datos(32)
''            StrSql = StrSql & "," & datos(33)
''            StrSql = StrSql & "," & datos(36)
''            StrSql = StrSql & "," & datos(35)
''            StrSql = StrSql & "," & datos(34)
''            StrSql = StrSql & ")"
'
'            datos(29) = 0
'            StrSql = "SELECT * FROM via WHERE viadesc = '" & datos(29) & "'"
'            OpenRecordset StrSql, rs_via
'            If Not rs_via.EOF Then
'                datos(29) = rs_via("vianro")
'            End If
'
'            StrSql = " INSERT INTO detdom (domnro,calle,nro,piso,oficdepto,entrecalles,vianro,locnro,provnro,partnro,paisnro)"
'            StrSql = StrSql & " VALUES ("
'            StrSql = StrSql & NroDom
'            StrSql = StrSql & ",'" & datos(24) & "'"
'            StrSql = StrSql & ",'" & datos(25) & "'"
'            StrSql = StrSql & ",'" & datos(26) & "'"
'            StrSql = StrSql & ",'" & datos(27) & "'"
'            StrSql = StrSql & ",'" & datos(28) & "'"
'            StrSql = StrSql & ",'" & datos(29) & "'"
'            StrSql = StrSql & "," & datos(30)
'            StrSql = StrSql & "," & datos(31)
'            StrSql = StrSql & ",'" & datos(32) & "'"
'            StrSql = StrSql & ", " & datos(33)
'            StrSql = StrSql & ")"
'
'            objConn.Execute StrSql, , adExecuteNoRecords
'            If Err Then
'                Err.Clear
'            Else
'                Flog.writeline "Inserte el domicilio "
'            End If
'            Flog.writeline "Inserto el Domicilio "
'        Else
'            NroDom = rs_Aux!domnro
'
'            '--Si no tiene algun dato le agregamos unos ficticios--
'            datos(24) = StrToStr(datos(24), 30) 'dirCalle
'            datos(25) = StrToStr(datos(25), 8) 'dirNumero
'            datos(26) = StrToStr(datos(26), 8) 'dirPiso
'            'datos(27) = StrToStr(datos(27), 8) 'dirDepto
'            datos(27) = StrToStr(datos(27), 10) 'dirDepto
'            'datos(28) = StrToStr(datos(28), 8) 'dirTorre
'            datos(28) = StrToStr(datos(28), 80) 'Entrecalles
'            'datos(29) = StrToStr(datos(29), 8) 'dirManzana
'            datos(29) = StrToStr(datos(29), 8) 'Via
'            'datos(30) = StrToStr(datos(30), 8) 'dirSector
'            datos(30) = TraerCodLocalidad(CStr(datos(30))) 'dirLocalidad
'            'datos(31) = StrToStr(datos(31), 12) 'dirCP
'            datos(31) = TraerCodProvincia(CStr(datos(31))) 'dirProvincia
'            'datos(32) = TraerCodLocalidad(CStr(datos(32))) 'dirLocalidad
'            datos(32) = TraerCodPartido(CStr(datos(32))) 'Distrito
'            'datos(33) = TraerCodProvincia(CStr(datos(33)))   'dirProvincia
'            datos(33) = TraerCodPais(CStr(datos(33))) 'dirpais
''            datos(34) = TraerCodPartido(CStr(datos(34)))  'dirPartido
''            datos(35) = TraerCodZona(CStr(datos(35)), CLng(datos(33)))  'dirZona
''            If datos(35) = "" Then datos(35) = "NULL"
''            datos(36) = TraerCodPais(CStr(datos(36))) 'dirPais
'
''            StrSql = " UPDATE detdom SET "
''            StrSql = StrSql & " calle =" & "'" & datos(24) & "'"
''            StrSql = StrSql & ",nro =" & "'" & datos(25) & "'"
''            StrSql = StrSql & ",sector =" & "'" & datos(30) & "'"
''            StrSql = StrSql & ",torre =" & "'" & datos(28) & "'"
''            StrSql = StrSql & ",piso =" & "'" & datos(26) & "'"
''            StrSql = StrSql & ",oficdepto =" & "'" & datos(27) & "'"
''            StrSql = StrSql & ",manzana =" & "'" & datos(29) & "'"
''            StrSql = StrSql & ",codigopostal =" & "'" & datos(31) & "'"
''            StrSql = StrSql & ",locnro =" & datos(32)
''            StrSql = StrSql & ",provnro =" & datos(33)
''            StrSql = StrSql & ",paisnro =" & datos(36)
''            StrSql = StrSql & ", zonanro =" & datos(35)
''            StrSql = StrSql & ", partnro = " & datos(34)
''            StrSql = StrSql & " WHERE domnro = " & NroDom
'
'            StrSql = " UPDATE detdom SET "
'            StrSql = StrSql & " calle =" & "'" & datos(24) & "'"
'            StrSql = StrSql & ",nro =" & "'" & datos(25) & "'"
'            StrSql = StrSql & ",piso =" & "'" & datos(26) & "'"
'            StrSql = StrSql & ",oficdepto =" & "'" & datos(27) & "'"
'            StrSql = StrSql & ",entrecalles=" & "'" & datos(28) & "'"
'            StrSql = StrSql & ",vianro =" & "'" & datos(29) & "'"
'            StrSql = StrSql & ",locnro =" & datos(30)
'            StrSql = StrSql & ",provnro =" & datos(31)
'            StrSql = StrSql & ", partnro = " & "'" & datos(32) & "'"
'            StrSql = StrSql & ",paisnro =" & datos(33)
'            StrSql = StrSql & " WHERE domnro = " & NroDom
'
'            objConn.Execute StrSql, , adExecuteNoRecords
'            If Err Then
'                Err.Clear
'                Flog.writeline "Domicilio NO actualizado"
'                Flog.writeline "SQL ejecutada: " & StrSql
'            Else
'                Flog.writeline "Domicilio actualizado"
'            End If
'        End If
'
'
'        '--Telefonos-Personal--
'        datos(21) = validatelefono(StrToStr(datos(21), 20))
'        If datos(21) <> "" Then
'            StrSql = "SELECT * FROM telefono  "
'            StrSql = StrSql & " WHERE domnro = " & NroDom
'            StrSql = StrSql & " AND telnro = " & "'" & datos(21) & "'"
'            If rs_Aux.State = adStateOpen Then rs_Aux.Close
'            OpenRecordset StrSql, rs_Aux
'            If rs_Aux.EOF Then
'                StrSql = " INSERT INTO telefono "
'                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
'                StrSql = StrSql & " (domnro, telnro, telfax, teldefault, telcelular,tipotel ) "
'                StrSql = StrSql & " VALUES (" & NroDom & ", '" & datos(21) & "' ,0 , -1 ,0,1 ) "
'                objConn.Execute StrSql, , adExecuteNoRecords
'                If Err Then
'                    Err.Clear
'                    Flog.writeline "Error Insertando el telefono " & datos(21)
'                    Flog.writeline "SQL ejecutada: " & StrSql
'                Else
'                    Flog.writeline "Inserte el telefono"
'                End If
'            End If
'        End If
'
'        '--Telefonos-segundo--
'        datos(22) = validatelefono(StrToStr(datos(22), 20))
'        If datos(22) <> "" Then
'            StrSql = "SELECT * FROM telefono  "
'            StrSql = StrSql & " WHERE domnro = " & NroDom
'            StrSql = StrSql & " AND telnro = " & "'" & datos(22) & "'"
'            If rs_Aux.State = adStateOpen Then rs_Aux.Close
'            OpenRecordset StrSql, rs_Aux
'            If rs_Aux.EOF Then
'                StrSql = " INSERT INTO telefono "
'                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
'                StrSql = StrSql & " (domnro, telnro, telfax, teldefault, telcelular,tipotel ) "
'                StrSql = StrSql & " VALUES (" & NroDom & ", '" & datos(22) & "' , 0, -1, 0,2 ) "
'                objConn.Execute StrSql, , adExecuteNoRecords
'                If Err Then
'                    Err.Clear
'                    Flog.writeline "Error Insertando el telefono " & datos(22)
'                    Flog.writeline "SQL ejecutada: " & StrSql
'                Else
'                    Flog.writeline "Inserte el telefono2 "
'                End If
'            End If
'        End If
'
'
'        '--Complemento--
'        If datos(15) = "" Then
'            datos(15) = 0
'        Else
'            datos(15) = CLng(StrToInt(datos(15))) 'cantidadHijos
'        End If
'        datos(16) = StrToStr(datos(16), 60) 'imagen
'        If datos(17) = "" Then
'            datos(17) = "NULL"
'        Else
'            datos(17) = ConvFecha(CDate(datos(17))) 'fechaIngresoCV
'        End If
'        datos(18) = StrToStr(datos(18), 250) 'referencias
'        If datos(19) = "" Then
'            datos(19) = TraerCodProcedencia("Web Deloitte") 'procedencia
'        Else
'            datos(19) = TraerCodProcedencia(CStr(datos(19))) 'procedencia
'        End If
'        If datos(20) = "" Then
'            datos(20) = 0
'        Else
'            datos(20) = CDbl(StrToDbl(datos(20))) 'remuneracionPretendida
'        End If
'
'        'FGZ - 02/03/2006 Se agrego el estposnro = 4 (postulantre activo)
'        StrSql = "SELECT * FROM pos_postulante  "
'        StrSql = StrSql & " WHERE ternro = " & Ternro
'        If rs_Aux.State = adStateOpen Then rs_Aux.Close
'        OpenRecordset StrSql, rs_Aux
'        If rs_Aux.EOF Then
'            StrSql = " INSERT INTO pos_postulante "
'            StrSql = StrSql & " ( ternro, posrempre, poscanhijos, posfoto, posfecpres, posref, procnro,estposnro) "
'            StrSql = StrSql & " VALUES (" & Ternro & " ," & CDbl(datos(20)) & ", " & CLng(datos(15)) & ", '" & datos(16) & "', " & datos(17) & ",'" & datos(18) & "', " & datos(19) & ",4) "
'            objConn.Execute StrSql, , adExecuteNoRecords
'            If Err Then
'                Flog.writeline "Error al inserte el Complemento: " & Err.Description
'                Flog.writeline "SQL ejecutada: " & StrSql
'                Err.Clear
'            Else
'                Flog.writeline "Inserte el Complemento "
'            End If
'        Else
'            StrSql = "UPDATE pos_postulante SET "
'            StrSql = StrSql & " posrempre = " & CDbl(datos(20))
'            StrSql = StrSql & ", poscanhijos =" & CLng(datos(15))
'            StrSql = StrSql & ", posfoto =" & "'" & datos(16) & "'"
'            StrSql = StrSql & ", posfecpres =" & datos(17)
'            StrSql = StrSql & ", posref =" & "'" & datos(18) & "'"
'            StrSql = StrSql & ", procnro =" & datos(19)
'            StrSql = StrSql & ", estposnro = 4"
'            StrSql = StrSql & " WHERE ternro = " & Ternro
'            objConn.Execute StrSql, , adExecuteNoRecords
'            If Err Then
'                Flog.writeline "Error al actualizar el Complemento: " & Err.Description
'                Flog.writeline "SQL ejecutada: " & StrSql
'                Err.Clear
'            Else
'                Flog.writeline "Complemento actualizado"
'            End If
'        End If
'
'        '--Estudios-formales--(49) (50)
'        Xconst = 1
'        For a = 0 To 3
'            If UBound(datos) > (Xconst + 33) Then
'                If datos(Xconst + 33) <> "" Then
'                    datos(Xconst + 33) = TraerCodNivelEstudio(datos(Xconst + 33))   'EFnivel8
'                    'FGZ - 29/08/2005
'                    'If Datos(Xconst + 38) = "Graduado" Then Datos(Xconst + 38) = -1 Else Datos(Xconst + 38) = 0
'                    If datos(Xconst + 34) = -1 Then datos(Xconst + 34) = -1 Else datos(Xconst + 34) = 0
'                        'Datos(Xconst + 38) = Datos(Xconst + 38)   'EFcompleto8
'                    datos(Xconst + 35) = TraerCodTitulo(CStr(datos(Xconst + 35)), CLng(datos(Xconst + 33)))   'EFtitulo8
'                    datos(Xconst + 36) = TraerCodInstitucionAbreviada(CStr(datos(Xconst + 36)))   'EFinstitucion8
'                    datos(Xconst + 37) = TraerCodCarrera(CStr(datos(Xconst + 37)))    'EFcarrera8
'                    If datos(Xconst + 38) <> "" Then
'                        datos(Xconst + 42) = ConvFecha(CDate(datos(Xconst + 42)))   'EFfechaDesde8
'                    Else
'                        datos(Xconst + 38) = "NULL"
'                    End If
'                    If datos(Xconst + 39) <> "" Then
'                        datos(Xconst + 39) = ConvFecha(CDate(datos(Xconst + 39)))   'EFfechaHasta8
'                    Else
'                        datos(Xconst + 39) = "NULL"
'                    End If
'                    datos(Xconst + 40) = StrToStr(datos(Xconst + 40), 30)   'EFpromedio8
'                    datos(Xconst + 41) = StrToStr(datos(Xconst + 41), 60)   'EFrango8
'                    If datos(Xconst + 42) <> "" And UCase(datos(Xconst + 42)) <> "NO" Then
'                        datos(Xconst + 42) = -1  'EFestudiaActualmente8
'                    Else
'                        datos(Xconst + 42) = 0  'EFestudiaActualmente8
'                    End If
'
'                    'actualizo
'                    StrSql = "SELECT * FROM cap_estformal  "
'                    StrSql = StrSql & " WHERE nivnro = " & CLng(datos(Xconst + 33))
'                    StrSql = StrSql & " AND ternro = " & Ternro
'                    StrSql = StrSql & " AND titnro = " & datos(Xconst + 35)
'                    StrSql = StrSql & " AND instnro = " & datos(Xconst + 36)
'                    StrSql = StrSql & " AND carredunro = " & datos(Xconst + 37)
'                    If rs_Aux.State = adStateOpen Then rs_Aux.Close
'                    OpenRecordset StrSql, rs_Aux
'                    If rs_Aux.EOF Then
'                        StrSql = " INSERT INTO cap_estformal "
'                        StrSql = StrSql & " ( nivnro, ternro, titnro, instnro, carredunro, capfecdes, capfechas, capcomp , capestact, caprango, capprom) "
'                        StrSql = StrSql & " VALUES ("
'                        StrSql = StrSql & CLng(datos(Xconst + 33))          'nivnro
'                        StrSql = StrSql & "," & Ternro                      'ternro
'                        StrSql = StrSql & "," & datos(Xconst + 35)          'titnro
'                        StrSql = StrSql & "," & datos(Xconst + 36)          'instnro
'                        StrSql = StrSql & "," & datos(Xconst + 37)          'carredunro
'                        StrSql = StrSql & "," & datos(Xconst + 38)          'capfecdes
'                        StrSql = StrSql & "," & datos(Xconst + 39)          'capfechas
'                        StrSql = StrSql & "," & datos(Xconst + 34)          'capcomp
'                        StrSql = StrSql & "," & datos(Xconst + 42)          'capestact
'                        StrSql = StrSql & ",'" & datos(Xconst + 41) & "'"   'caprango
'                        StrSql = StrSql & ",'" & datos(Xconst + 40) & "'"   'capprom
'                        StrSql = StrSql & ")"
'                        objConn.Execute StrSql, , adExecuteNoRecords
'                        If Err Then
'                            Flog.writeline "Error al inserte el estudio formal: " & Err.Description
'                            Flog.writeline "SQL ejecutada: " & StrSql
'                            Err.Clear
'                        Else
'                            Flog.writeline "Inserte el estudio formal " & datos(Xconst + 33)
'                            ActPasos = True
'                        End If
'                    Else
'                        StrSql = "UPDATE  cap_estformal SET "
'                        StrSql = StrSql & " capfecdes = " & datos(Xconst + 38)
'                        StrSql = StrSql & ", capfechas =" & datos(Xconst + 39)
'                        StrSql = StrSql & ", capcomp =" & datos(Xconst + 34)
'                        StrSql = StrSql & ", capestact =" & datos(Xconst + 42)
'                        StrSql = StrSql & ", caprango =" & "'" & datos(Xconst + 41) & "'"
'                        StrSql = StrSql & ", capprom =" & "'" & datos(Xconst + 40) & "'"
'                        StrSql = StrSql & " WHERE nivnro = " & CLng(datos(Xconst + 33))
'                        StrSql = StrSql & " AND ternro = " & Ternro
'                        StrSql = StrSql & " AND titnro = " & datos(Xconst + 35)
'                        StrSql = StrSql & " AND instnro = " & datos(Xconst + 36)
'                        StrSql = StrSql & " AND carredunro = " & datos(Xconst + 37)
'                        objConn.Execute StrSql, , adExecuteNoRecords
'                        If Err Then
'                            Flog.writeline "Error al inserte Al actualizar studio formal: " & Err.Description
'                            Flog.writeline "SQL ejecutada: " & StrSql
'                            Err.Clear
'                        Else
'                            Flog.writeline "Estudio formal " & datos(Xconst + 33) & " actualizado"
'                            ActPasos = False
'                        End If
'                    End If
'                End If
'            Else
'            End If
'            Xconst = Xconst + 10
'        Next a
'        If ActPasos Then
'            Call InsertarPaso(Ternro, 50)
'        End If
'        ActPasos = False
'
'
'        '--Experiencia-Laboral----Empleos Anteriores--57 (58)
'        Xconst = 1
'        For a = 0 To 3
'            If UBound(datos) > (Xconst + 83) Then
'                If datos(Xconst + 84) <> "" And datos(Xconst + 83) <> "" Then
'                    datos(Xconst + 83) = TraerCodCargo(CStr(datos(Xconst + 83)))    'ELcargoAnterior16
'                    datos(Xconst + 84) = TraerCodListaEmpresa(CStr(datos(Xconst + 84)))   'ELempresa16 lempnro
'                    datos(Xconst + 85) = StrToStr(datos(Xconst + 85), 200) 'ELtareaDesempenada16
'                    If datos(Xconst + 86) <> "" Then
'                        datos(Xconst + 86) = ConvFecha(CDate(datos(Xconst + 86)))  'ELfechaDesde16
'                    Else
'                        datos(Xconst + 86) = "NULL"
'                    End If
'                    If datos(Xconst + 87) <> "" Then
'                        datos(Xconst + 87) = ConvFecha(CDate(datos(Xconst + 87)))  'ELfechaHasta16
'                    Else
'                        datos(Xconst + 87) = "NULL"
'                    End If
'                    If datos(Xconst + 88) = "" Then
'                        datos(Xconst + 88) = 0
'                    Else
'                        datos(Xconst + 88) = StrToDbl(datos(Xconst + 88))   'ELremuneracion16
'                    End If
'                    If datos(Xconst + 89) <> "" Then
'                        datos(Xconst + 89) = TraerCodCausa(CStr(datos(Xconst + 89)))   'ELcausaBaja16
'                    Else
'                        datos(Xconst + 89) = "NULL"
'                    End If
'
'                    StrSql = "SELECT * FROM empant  "
'                    StrSql = StrSql & " WHERE empleado = " & Ternro
'                    StrSql = StrSql & " AND empatareas = " & "'" & datos(Xconst + 85) & "'"
'                    StrSql = StrSql & " AND lempnro = " & datos(Xconst + 84)
'                    StrSql = StrSql & " AND carnro = " & datos(Xconst + 83)
'                    If rs_Aux.State = adStateOpen Then rs_Aux.Close
'                    OpenRecordset StrSql, rs_Aux
'                    If rs_Aux.EOF Then
'                        StrSql = " INSERT INTO empant "
'                        'FGZ - 29/08/2005
'                        'cambié los nombres de los campos donde inserta las fechas desde y hasta
'                        'StrSql = StrSql & " ( empleado, empatareas, lempnro, empadesde, emmpahasta, carnro, emparemu ) "
'                        StrSql = StrSql & " ( empleado, empatareas, lempnro, empaini, empafin, carnro, emparemu, caunro ) "
'                        StrSql = StrSql & " VALUES (" & Ternro & ", '" & datos(Xconst + 85) & "' ," & datos(Xconst + 84) & "," & datos(Xconst + 86) & "," & datos(Xconst + 87) & "," & datos(Xconst + 83) & "," & datos(Xconst + 88) & "," & datos(Xconst + 89) & "  ) "
'                        objConn.Execute StrSql, , adExecuteNoRecords
'                        If Err Then
'                            Flog.writeline "Error al inserte el Empleo Anterior: " & Err.Description
'                            Flog.writeline "SQL ejecutada: " & StrSql
'                            Err.Clear
'                        Else
'                            Flog.writeline "Inserto los datos del Empleo Anterior"
'                            ActPasos = True
'                        End If
'                    Else
'                        StrSql = "UPDATE empant SET "
'                        'FGZ - 29/08/2005
''                        StrSql = StrSql & " empadesde =" & Datos(Xconst + 120)
''                        StrSql = StrSql & ", emmpahasta =" & (Datos(Xconst + 121))
'                        StrSql = StrSql & " empaini =" & datos(Xconst + 86)
'                        StrSql = StrSql & ", empafin =" & (datos(Xconst + 87))
'                        StrSql = StrSql & ", emparemu = " & datos(Xconst + 88)
'                        StrSql = StrSql & ", caunro = " & datos(Xconst + 89)
'                        StrSql = StrSql & " WHERE empantnro = " & rs_Aux!Empantnro
'                        objConn.Execute StrSql, , adExecuteNoRecords
'                        If Err Then
'                            Flog.writeline "Error al actualizar el Empleo Anterior: " & Err.Description
'                            Flog.writeline "SQL ejecutada: " & StrSql
'                            Err.Clear
'                        Else
'                            Flog.writeline "Actualizo los datos del Empleo Anterior"
'                            ActPasos = False
'                        End If
'                    End If
'                Else
'                End If
'            End If
'            Xconst = Xconst + 7
'        Next a
'        If ActPasos Then
'            Call InsertarPaso(Ternro, 58)
'        End If
'        ActPasos = False
'
'
'        '--Idiomas--53 (54)
'        ActPasos = False
'        Xconst = 1
'        For a = 0 To 3
'            If UBound(datos) > (Xconst + 111) Then
'                If datos(Xconst + 111) <> "" Then
'                    If datos(Xconst + 112) <> "" Or datos(Xconst + 113) <> "" Or datos(Xconst + 114) <> "" Then
'                        datos(Xconst + 111) = TraerCodIdioma(CStr(datos(Xconst + 111))) 'idioma1
'                        datos(Xconst + 112) = TraerCodIdiNivel(CStr(datos(Xconst + 112))) 'idiomaLee1
'                        datos(Xconst + 113) = TraerCodIdiNivel(CStr(datos(Xconst + 113))) 'idiomaHabla1
'                        datos(Xconst + 114) = TraerCodIdiNivel(CStr(datos(Xconst + 114))) 'idiomaEscribe1
'
'                        If Not TieneIdioma(Ternro, CLng(datos(Xconst + 111))) Then
'                            StrSql = " INSERT INTO emp_idi "
'                            StrSql = StrSql & " (idinro, empleado, empidlee, empidhabla, empidescr) "
'                            StrSql = StrSql & " VALUES (" & CLng(datos(Xconst + 111)) & ", " & Ternro & " ," & datos(Xconst + 112) & ", " & datos(Xconst + 113) & ", " & datos(Xconst + 114) & " ) "
'                        Else
'                            StrSql = " UPDATE emp_idi SET "
'                            StrSql = StrSql & " empidlee = " & datos(Xconst + 112)
'                            StrSql = StrSql & ", empidhabla = " & datos(Xconst + 113)
'                            StrSql = StrSql & ", empidescr = " & datos(Xconst + 114)
'                            StrSql = StrSql & " where empleado = " & Ternro & " and idinro = " & CLng(datos(Xconst + 111))
'                        End If
'                        objConn.Execute StrSql, , adExecuteNoRecords
'                        If Err Then
'                            Flog.writeline "Error al inserte el Idioma " & datos(Xconst + 101) & "-" & Err.Description
'                            Flog.writeline "SQL ejecutada: " & StrSql
'                            Err.Clear
'                        Else
'                            Flog.writeline "Inserte el Idioma " & datos(Xconst + 111)
'                            ActPasos = True
'                        End If
'                    End If
'                End If
'            End If
'            Xconst = Xconst + 4
'        Next a
'        If ActPasos Then
'            Call InsertarPaso(Ternro, 54)
'        End If
'        ActPasos = False
'
'
'        '--Estudios-Informales--50 (51)
'        ActPasos = False
'        Xconst = 1
'        For a = 0 To 3
'            tempString = StrToStr(datos(Xconst + 127), 50) ''descCurso  estinfdesabr
'            datos(Xconst + 127) = datos(Xconst + 127) ''descCurso  estinfdesabr
'            datos(Xconst + 128) = TraerCodTipoCurso(StrToStr(datos(Xconst + 128), 50)) 'tipoCurso tipcurnro
'            If datos(Xconst + 129) <> "" Then
'                datos(Xconst + 129) = ConvFecha(datos(Xconst + 129)) 'fechaCurso  estinffecha
'            Else
'                datos(Xconst + 129) = ConvFecha(Date)
'            End If
'            datos(Xconst + 130) = TraerCodInstitucion(CStr(datos(Xconst + 130))) 'institucionCurso instnro
'            If datos(Xconst + 127) = "" Or datos(Xconst + 128) = "" Or datos(Xconst + 130) = "" Then
'                Flog.writeline "Error al insertar el estudio informal por falta de datos "
'            Else
'                'Reviso
'                StrSql = "SELECT * FROM cap_estinformal  "
'                StrSql = StrSql & " WHERE tipcurnro = " & CLng(datos(Xconst + 128))
'                StrSql = StrSql & " AND ternro = " & Ternro
'                StrSql = StrSql & " AND instnro = " & CLng(datos(Xconst + 130))
'                If rs_Aux.State = adStateOpen Then rs_Aux.Close
'                OpenRecordset StrSql, rs_Aux
'                If rs_Aux.EOF Then
'                    StrSql = " INSERT INTO cap_estinformal "
'                    StrSql = StrSql & " (ternro, estinfdesabr, estinffecha, tipcurnro, instnro) "
'                    StrSql = StrSql & " VALUES (" & Ternro & " , '" & tempString & "'," & datos(Xconst + 129) & "," & CLng(datos(Xconst + 128)) & "," & CLng(datos(Xconst + 130)) & ")"
'                    objConn.Execute StrSql, , adExecuteNoRecords
'                    If Err Then
'                        Flog.writeline "Error al insertar el estudio informal: " & Err.Description
'                        Flog.writeline "SQL ejecutada: " & StrSql
'                        Err.Clear
'                    Else
'                        Flog.writeline "Inserto los datos del estudio informal "
'                        ActPasos = True
'                    End If
'                Else
'                    StrSql = "UPDATE cap_estinformal SET "
'                    StrSql = StrSql & " estinfdesabr = '" & tempString & "'"
'                    StrSql = StrSql & ", estinffecha =" & (datos(Xconst + 129))
'                    StrSql = StrSql & " WHERE tipcurnro = " & CLng(datos(Xconst + 128))
'                    StrSql = StrSql & " AND ternro = " & Ternro
'                    StrSql = StrSql & " AND instnro = " & CLng(datos(Xconst + 130))
'                    objConn.Execute StrSql, , adExecuteNoRecords
'                    If Err Then
'                        Flog.writeline "Error al actualizar el estudio informal: " & Err.Description
'                        Flog.writeline "SQL ejecutada: " & StrSql
'                        Err.Clear
'                    Else
'                        Flog.writeline "Actualizo los datos del estudio informal "
'                        ActPasos = False
'                    End If
'                End If
'            End If
'            Xconst = Xconst + 4
'        Next a
'        If ActPasos Then
'           Call InsertarPaso(Ternro, 51)
'           ActPasos = False
'        End If
'
'        '--Especializaciones--51 (52)
'        Xconst = 1
'        ActPasos = False
'        For a = 0 To 3
'            If datos(Xconst + 145) <> "" Then
'                datos(Xconst + 143) = TraerCodEspecializacion(CStr(datos(Xconst + 143))) 'tipo
'                datos(Xconst + 144) = TraerCodEltoana(CStr(datos(Xconst + 144)), CLng(datos(Xconst + 143))) 'elemento
'                datos(Xconst + 145) = TraerCodNivelEspecializacion(CStr(datos(Xconst + 145))) 'nivel
'
'                'REVISO
'                StrSql = "SELECT * FROM especemp  "
'                StrSql = StrSql & " WHERE espnivnro = " & datos(Xconst + 145)
'                StrSql = StrSql & " AND ternro = " & Ternro
'                StrSql = StrSql & " AND eltananro = " & datos(Xconst + 145)
'                If rs_Aux.State = adStateOpen Then rs_Aux.Close
'                OpenRecordset StrSql, rs_Aux
'                If rs_Aux.EOF Then
'                    StrSql = " INSERT INTO especemp "
'                    StrSql = StrSql & " (eltananro, ternro, espnivnro ) "
'                    StrSql = StrSql & " VALUES (" & datos(Xconst + 144) & ", " & Ternro & " ," & datos(Xconst + 145) & ") "
'    '                StrSql = StrSql & " VALUES (" & datosEltoAna(0, a) & ", " & ternro & " ," & Datos(Xconst + 139) & ") "
'
'                    Err.Clear
'                    objConn.Execute StrSql, , adExecuteNoRecords
'                    If Err Then
'                        Flog.writeline "Error al insertar la especialidad: " & Err.Description
'                        Flog.writeline "SQL ejecutada: " & StrSql
'                        Err.Clear
'                    Else
'                        Flog.writeline "Actualizo los datos de la especialidad."
'                        ActPasos = True
'                    End If
'                End If
'            Else
'            End If
'            Xconst = Xconst + 3
'        Next a
'        If ActPasos Then
'           'Flog.Writeline "Inserto los datos de la especialidad"
'           Call InsertarPaso(Ternro, 52)
'           ActPasos = False
'        End If
'
'        '--Tipos e Items de Informacion
'        ActPasos = False
'        Xconst = 1
'
'        For a = 0 To 4
'            If datos(Xconst + 155) <> "" Then
'                datos(145 + Xconst) = UCase(datos(155 + Xconst)) ''descTipoInformacion
'
'                TipItemInf(Xconst) = TraerCodTipInformacion(datos(155 + Xconst))
'
'                If datos(156 + Xconst) <> "" Then
'                    datos(156 + Xconst) = UCase(datos(156 + Xconst)) ''descItemInformacion
'
'                    TipItemInf(Xconst + 1) = TraerCodItemInformacion(datos(156 + Xconst), TipItemInf(Xconst))
'
'                    'AHORA TENGO QUE ASOCIARLE EL PAR AL POSTULANTE
'                    Inserto = AsociarParAPostulante(TipItemInf(Xconst + 1), Ternro)
'                    If Inserto = -1 Then
'                        Flog.writeline "Se Asocio el Par con el Postulante"
'                        ActPasos = True
'                    Else
'                        Flog.writeline "El Postulante ya tenia el Par asociado"
'                    End If
'                Else
'                    Flog.writeline "Falto especificar el Item de Informacion"
'                End If
'            Else
'                Flog.writeline "Falto especificar el Tipo de Informacion"
'            End If
'
'            Xconst = Xconst + 2
'        Next a
'        If ActPasos Then
'            Call InsertarPaso(Ternro, 86)
'        End If
'        ActPasos = False
'
'    End If
'Fin:
'Exit Sub
'
'Manejador_De_Error:
'    HuboError = True
'    Flog.writeline "SQL ejecutada: " & StrSql
'    Texto = ": " & Err.Description
'    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
'
'    Flog.writeline
'    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
'    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
'    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
'    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
'    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
'    Flog.writeline
'    'Fue error de Consulta de SQL
'    Flog.writeline
'    Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
'    Flog.writeline
'    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
'    Flog.writeline
'    GoTo Fin
'
'End Sub
'

Public Sub LineaModelo_293(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Inserta Novedad segun formato
' Autor      : Mauricio Zwenger
'              El formato es:
'                   Formato 1
'                       Legajo; conccod; tpanro; monto
'                   ó
'                   Formato 2.1
'                       Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta
'                   Formato 2.2
'                       Legajo; conccod; tpanro; monto; FechaDesdeo
'                   ó
'                   Formato 3
'                       Legajo; conccod; tpanro; monto; MarcaRetroactividad;PeriodoDesde(MMYYYY); PeriodoHasta(MMYYYY)
'                   ó
'                   Formato 4
'                       Legajo; conccod; tpanro; monto; tipo motivo; motivo

'                   ó
'                   Formato 5
'                       Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta; tipo motivo; motivo

'                   ó
'                   Formato 6
'                       Legajo; conccod; tpanro; monto; MarcaRetroactividad;PeriodoDesde(MMYYYY); PeriodoHasta(MMYYYY); tipo motivo; motivo
'                   ó
'                   Formato 7
'                       Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta; MarcaRetroactividad;PeriodoDesde(MMYYYY); PeriodoHasta(MMYYYY); tipo motivo; motivo

' Fecha      : 13/08/2014

' ---------------------------------------------------------------------------------------------

Dim Tercero As Long
Dim NroLegajo As Long

Dim ConcNro As Long
Dim ConcCod As String
Dim fornro As Long
Dim gnovnro As String
Dim nenro As String

Dim tpanro As Long
Dim Aux_Monto As String
Dim Monto As Double
Dim FechaDesde As String
Dim FechaHasta As String
Dim FechaDesdePeriodo As String

Dim FechaDesdeAux As String
Dim FechaHastaAux As String

Dim PeriodoDesde
Dim PeriodoHasta

Dim auxPeriodoDesde
Dim auxPeriodoHasta

Dim TieneVigencia As Boolean
Dim EsRetroactivo As Boolean

Dim TipoMotivo As String
Dim Motivo As String

Dim Aux As String
Dim Encontro As Boolean

Dim perfsegcon As Integer


Dim tienePermiso As Boolean

Dim sinVig As Boolean
Dim StrSqlAux As String
Dim ExisteNovedad As Boolean
Dim InsertoNovedad As Boolean

Dim rs_Empleado As New ADODB.Recordset
Dim rs_Concepto As New ADODB.Recordset
Dim rs_TipoPar As New ADODB.Recordset
Dim rs_NovEmp As New ADODB.Recordset
Dim rs_NovEmp2 As New ADODB.Recordset
Dim rs_Periodo As New ADODB.Recordset
Dim rs_con_for_tpa As New ADODB.Recordset
Dim rs_TipoMotivo As New ADODB.Recordset
Dim rs_cft_resumen As New ADODB.Recordset
Dim rs_estado As New ADODB.Recordset
Dim rs_modAsi As New ADODB.Recordset
Dim rs_Estructura As New ADODB.Recordset
Dim rs_Aux As New ADODB.Recordset

Dim tieneDistribucion As Integer
Dim masinro As String
Dim tenro1 As String
Dim estrnro1 As String
Dim tenro2 As String
Dim estrnro2 As String
Dim tenro3 As String
Dim estrnro3 As String

Dim I As Integer
Dim datos

'Para el circ. de firmas
Dim Firmas As String
Dim Esfin As Boolean
Dim cysfirautoriza As String
Dim cysfirusuario As String
Dim cysfirdestino As String
Dim cysfirfin As String
Dim cysfiryaaut As String
Dim cysfirrecha As String
Dim cystipnro As String
    
    On Error GoTo Manejador_De_Error
    Tabs = 1
    
    cysfirautoriza = usuario
    cystipnro = 5   'circuito de novedades
    
    TieneVigencia = False
    EsRetroactivo = False

    Texto = "Procesando linea " & strLinea
    Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    
    'NroColumna = NroColumna + 1
    
    datos = Split(strLinea, separador)
    For I = 0 To UBound(datos)
        NroColumna = NroColumna + 1
        Select Case I
            Case 0  'Nro de Legajo - Obligatorio
                If IsNumeric(datos(I)) Then
                    NroLegajo = datos(I)
                Else
                    Texto = ": " & "El legajo no es numerico "
                    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                    Call InsertaError(1, 8)
                    HuboError = True
                    Exit Sub
                End If
            '-----------------------------------------------------------------------------------------
            Case 1  'Concepto - Obligatorio
                If Trim(datos(I)) <> "" And UCase(datos(I)) <> "N/A" Then
                    ConcCod = EliminarCHInvalidosII(datos(I), 1, "")
                    If listaConceptosPermitidos(ConcCod) = True Then
                        tienePermiso = True
                    Else
                        tienePermiso = False
                    End If
                     
                    If tienePermiso = False Then
                      Texto = ": El usuario:" & usuario & " no tiene autorización sobre el concepto:" & ConcCod
                      Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                      HuboError = True
                    End If
                Else
                    Texto = ": El campo 2 concepto es obligatorio "
                    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                    HuboError = True
                    Exit Sub
                End If
        
            '-----------------------------------------------------------------------------------------
            Case 2  'Tipo de parametro - Obligatorio
                If Trim(datos(I)) <> "" And UCase(datos(I)) <> "N/A" Then
                    tpanro = Trim(datos(I))
                Else
                    Texto = ": El campo 3 parametro es obligatorio "
                    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                    HuboError = True
                    Exit Sub
                End If
       
            '-----------------------------------------------------------------------------------------
            Case 3  'Monto o Cantidad - Obligatorio
                If Trim(datos(I)) <> "" And UCase(datos(I)) <> "N/A" Then
                    Monto = CDbl(Replace(CStr(datos(I)), SeparadorDecimal, "."))
                Else
                    Texto = ": El campo 4 monto o cantidad es obligatorio "
                    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                    HuboError = True
                    Exit Sub
                End If
       
            '-----------------------------------------------------------------------------------------
            Case 4  'Reemplaza - NO Obligatorio - Si es N/A o cualquier otra cosa mantiene lo escogido en el combo
                If UCase(datos(I)) = "SI" Then
                    AccionNovedad = -1
                End If
       
                If UCase(datos(I)) = "NO" Then
                    AccionNovedad = 0
                End If
       
            '-----------------------------------------------------------------------------------------
            Case 5  'Fecha Desde - NO Obligatorio
                If Trim(datos(I)) <> "" And UCase(datos(I)) <> "N/A" Then
                    If IsDate(datos(I)) Then
                        TieneVigencia = True
                        FechaDesde = datos(I)
                    Else
                        Texto = ": Fecha Desde no valida "
                        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                        Call InsertaError(1, 4)
                        HuboError = True
                        Exit Sub
                    End If
                End If
       
            '-----------------------------------------------------------------------------------------
            Case 6  'Fecha Hasta - NO Obligatorio
                If Trim(datos(I)) <> "" And UCase(datos(I)) <> "N/A" Then
                    If IsDate(datos(I)) Then
                        If IsDate(FechaDesde) Then
                            TieneVigencia = True
                            FechaHasta = datos(I)
                        Else
                            Texto = ": Fecha Desde debe existir y ser una fecha valida "
                            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                            Call InsertaError(1, 4)
                            HuboError = True
                            Exit Sub
                        End If
                    Else
                        Texto = ": Fecha Hasta no valida "
                        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                        Call InsertaError(1, 4)
                        HuboError = True
                        Exit Sub
                    End If
                End If
       
            '-----------------------------------------------------------------------------------------
            Case 7  'Marca Retroactividad - NO Obligatorio
                If UCase(datos(I)) = "SI" Then
                    EsRetroactivo = True
                End If
       
            '-----------------------------------------------------------------------------------------
            Case 8  'Periodo Desde de Retroactividad - Si EsRetroactivo debe existir periodo desde
                If EsRetroactivo Then
                    If Trim(datos(I)) <> "" And UCase(datos(I)) <> "N/A" Then
                        auxPeriodoDesde = datos(I)
                    Else
                        Texto = ": Existe la marca de retroactivo, debe cargar periodo desde "
                        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                        HuboError = True
                        Exit Sub
                    End If

                End If
       
            '-----------------------------------------------------------------------------------------
            Case 9  'Periodo Hasta de Retroactividad - Si EsRetroactivo debe existir periodo hasta
                If EsRetroactivo Then
                    If Trim(datos(I)) <> "" And UCase(datos(I)) <> "N/A" Then
                        auxPeriodoHasta = datos(I)
                    Else
                        Texto = ": Existe la marca de retroactivo, debe cargar periodo hasta "
                        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                        HuboError = True
                        Exit Sub
                    End If
                End If
       
            '-----------------------------------------------------------------------------------------
            Case 10  'Tipo Motivo - No obligatorio
                TipoMotivo = Trim(datos(I))
       
            '-----------------------------------------------------------------------------------------
            Case 11  'Motivo - No obligatorio
                Motivo = EliminarCHInvalidosII(Trim(datos(I)), 1, "")
                
            '-----------------------------------------------------------------------------------------
            Case 12  'Firma - No obligatorio
                
                'VALIDO QUE ESTE ACTIVO EL CIRCUITO
                StrSql = "SELECT cystipact FROM cystipo WHERE cystipnro = " & cystipnro & " AND cystipact = -1"
                OpenRecordset StrSql, rs
                If Not rs.EOF Then
                    cysfirusuario = ""
                    cysfirautoriza = ""
                    cysfirdestino = ""
                    cysfirfin = 0
                    cysfiryaaut = 0
                    cysfirrecha = 0
                    
                    'Si el usuario que cargo la interfaz es fin de fin de firma se autoriza con ese usuario
                    StrSql = "SELECT * FROM cysfincirc "
                    StrSql = StrSql & " WHERE userid = '" & usuario & "' and cystipnro = " & cystipnro
                    OpenRecordset StrSql, rs_Empleado
                    If Not rs_Empleado.EOF Then
                        Esfin = True
                        cysfirusuario = usuario
                        cysfirautoriza = usuario
                        cysfirdestino = ""
                        cysfirfin = -1
                        cysfiryaaut = -1
                        cysfirrecha = 0
                    Else
                        Esfin = False
                    End If
                    rs_Empleado.Close
                    
                    If Esfin = False Then
                        '=====================================
                        'QUE TENGA DELEGADO UN PERMISO
                        '=====================================
                        StrSql = "SELECT bk_cab.iduser, bkcystipnro "
                        StrSql = StrSql & " From bk_cab "
                        StrSql = StrSql & " INNER JOIN bk_firmas on bk_firmas.bkcabnro = bk_cab.bkcabnro "
                        StrSql = StrSql & " Where fdesde <= " & ConvFecha(Date)
                        StrSql = StrSql & " AND (fhasta >= " & ConvFecha(Date) & " OR fhasta IS NULL)"
                        StrSql = StrSql & " AND bk_firmas.iduser = '" & usuario & "'"
                        StrSql = StrSql & " AND bkcystipnro = " & cystipnro
                        StrSql = StrSql & " AND bk_cab.iduser <> '" & usuario & "'"
                        OpenRecordset StrSql, rs_Empleado
                        
                        If Not rs_Empleado.EOF Then
                            Esfin = True
                            cysfirusuario = rs_Empleado!iduser
                            cysfirautoriza = usuario
                            cysfirdestino = ""
                            cysfirfin = -1
                            cysfiryaaut = -1
                            cysfirrecha = 0
                        Else
                            If Trim(datos(I)) <> "" And UCase(datos(I)) <> "N/A" Then
                                cysfirusuario = usuario
                                cysfirautoriza = usuario
                                cysfirdestino = Trim(datos(I))
                                cysfirfin = 0
                                cysfiryaaut = 0
                                cysfirrecha = 0
                                '-----------------------------
                                'QUE EXISTA EL USUARIO
                                '-----------------------------
                                StrSql = "SELECT iduser FROM user_per WHERE upper(iduser) ='" & Trim(UCase(datos(I))) & "'"
                                OpenRecordset StrSql, rs_estado
                                If rs_estado.EOF Then
                                    Texto = ": " & "No se encontro el usuario " & Trim(datos(I))
                                    NroColumna = 1
                                    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                                    Call InsertaError(1, 128)
                                    HuboError = True
                                    Exit Sub
                                End If
                                
                                '------------------------------------
                                'VALIDO QUE USUARIO ORIGEN <> DESTINO
                                '------------------------------------
                                If UCase(cysfirusuario) = UCase(cysfirdestino) Then
                                    Texto = ": " & "El usuario de origen no puede ser el mismo que el de destino"
                                    NroColumna = 1
                                    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                                    Call InsertaError(1, 128)
                                    HuboError = True
                                    Exit Sub
                                End If
                                '---------------------------
                                '-----------------------------
                                If cysfirautoriza = "" And cysfirusuario = "" And cysfirdestino = "" And cysfirfin = 0 And cysfiryaaut = 0 And cysfirrecha = 0 Then
                                    Firmas = ""
                                Else
                                    Firmas = "OK"
                                End If
                        
                            Else
                                Texto = ": " & "El circuito esta activo, no se informo proxima firma y el usuario del proceso no es fin de firma"
                                Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                                HuboError = True
                                Exit Sub
                            End If
                            
                        End If
                    End If
                    
                    If cysfirautoriza = "" And cysfirusuario = "" And cysfirdestino = "" And cysfirfin = 0 And cysfiryaaut = 0 And cysfirrecha = 0 Then
                        Firmas = ""
                    Else
                        Firmas = "OK"
                    End If
                End If
            Case 13 'Modelo de asiento - No obligatorio
                If Trim(datos(I)) <> "" And UCase(datos(I)) <> "N/A" Then
                    If IsNumeric(Trim(datos(I))) Then
                       masinro = Trim(datos(I))
                    Else
                        Texto = ": " & "El codigo de modelo de asiento no es numerico "
                        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                        HuboError = True
                        Exit Sub
                    End If
                Else
                    masinro = ""
                End If
        
            Case 14 'Estructura 1 - No obligatorio
                If Trim(datos(I)) <> "" And UCase(datos(I)) <> "N/A" Then
                    estrnro1 = EliminarCHInvalidosII(Trim(datos(I)), 1, "")
                Else
                    estrnro1 = ""
                End If
        
            Case 15 'Estructura 2 - No obligatorio
                If Trim(datos(I)) <> "" And UCase(datos(I)) <> "N/A" Then
                    estrnro2 = EliminarCHInvalidosII(Trim(datos(I)), 1, "")
                Else
                    estrnro2 = ""
                End If
        
            Case 16 'Estructura 3 - No obligatorio
                If Trim(datos(I)) <> "" And UCase(datos(I)) <> "N/A" Then
                    estrnro3 = EliminarCHInvalidosII(Trim(datos(I)), 1, "")
                Else
                    estrnro3 = ""
                End If
        
        End Select
    Next


' ====================================================================
'   Validar los parametros Levantados
StrSql = "SELECT * FROM empleado where empleg = " & NroLegajo
OpenRecordset StrSql, rs_Empleado
If rs_Empleado.EOF Then
    Texto = ": " & "No se encontro el legajo " & NroLegajo
    NroColumna = 1
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(1, 8)
    HuboError = True
    Exit Sub
Else
    Tercero = rs_Empleado!Ternro
End If


'Que exista el concepto
StrSql = "SELECT * FROM concepto WHERE conccod = '" & ConcCod & "'"
OpenRecordset StrSql, rs_Concepto
If rs_Concepto.EOF Then
    Texto = ": " & "No se encontro el Concepto " & ConcCod
    NroColumna = 2
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(2, 10)
    HuboError = True
    Exit Sub
Else
    ConcNro = rs_Concepto!ConcNro
    fornro = rs_Concepto!fornro
End If

'Que exista el tipo de Parametro
StrSql = "SELECT * FROM tipopar WHERE tpanro = " & tpanro
OpenRecordset StrSql, rs_TipoPar

If rs_TipoPar.EOF Then
    Texto = ": " & "No se encontro el Tipo de Parametro " & tpanro
    NroColumna = 3
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(3, 11)
    HuboError = True
    Exit Sub
End If


'FGZ - 27/01/2004
'Faltaria revisar que el par concepto-parametro se resuelva por novedad
StrSql = "SELECT * FROM con_for_tpa "
StrSql = StrSql & " WHERE concnro = " & ConcNro
StrSql = StrSql & " AND fornro =" & fornro
StrSql = StrSql & " AND tpanro =" & tpanro
OpenRecordset StrSql, rs_con_for_tpa

If rs_con_for_tpa.EOF Then
    Texto = ": " & "El parametro " & tpanro & " no esta asociado a la formula del concepto " & ConcCod
    NroColumna = 3
    Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, "")
    Call InsertaError(3, 11)
    HuboError = True
    Exit Sub
Else
    Encontro = False
    Do While Not Encontro And Not rs_con_for_tpa.EOF
        If Not CBool(rs_con_for_tpa!cftauto) Then
            Encontro = True
        End If
        rs_con_for_tpa.MoveNext
    Loop
    If Not Encontro Then
        Texto = ": " & "El parametro " & tpanro & " del concepto " & ConcCod & " no se resuelve por novedad "
        NroColumna = 3
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call InsertaError(3, 11)
        HuboError = True
        Exit Sub
    End If
End If


If EsRetroactivo Then
    'Busco el Periodo Desde
    StrSql = "SELECT * FROM periodo WHERE pliqmes = " & Left(auxPeriodoDesde, 2) & " AND pliqanio=" & Right(auxPeriodoDesde, 4)
    OpenRecordset StrSql, rs_Periodo
    If rs_Periodo.EOF Then
        Texto = ": " & "Periodo Desde Invalido  " & auxPeriodoDesde
        NroColumna = 6
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call InsertaError(6, 36)
        HuboError = True
        Exit Sub
    Else
      PeriodoDesde = rs_Periodo("pliqnro")
      FechaDesdePeriodo = rs_Periodo!pliqdesde
    End If
    
    If Trim(FechaDesdePeriodo) <> "" And UCase(FechaDesdePeriodo) <> "N/A" Then
        If CDate(FechaDesdePeriodo) > CDate(FechaHasta) Then
              Texto = ": el período desde de retroactividad es ser mayor a la vigencia"
              NroColumna = 9
              Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
              Call InsertaError(9, 12)
              HuboError = True
              Exit Sub
        End If
    End If
  
    'Chequeo Periodo Hasta
    StrSql = "SELECT * FROM periodo WHERE pliqmes = " & Left(auxPeriodoHasta, 2) & " AND pliqanio=" & Right(auxPeriodoHasta, 4)
    OpenRecordset StrSql, rs_Periodo
    If rs_Periodo.EOF Then
        Texto = ": " & "Periodo Hasta Invalido  " & auxPeriodoHasta
        NroColumna = 7
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call InsertaError(7, 36)
        HuboError = True
        Exit Sub
    Else
      PeriodoHasta = rs_Periodo!Pliqnro
      FechaDesdePeriodo = rs_Periodo!pliqdesde
    End If
    
    If Trim(FechaDesdePeriodo) <> "" And UCase(FechaDesdePeriodo) <> "N/A" Then
        If CDate(FechaDesdePeriodo) > CDate(FechaHasta) Then
              Texto = ": el período hasta de retroactividad es ser mayor a la vigencia"
              NroColumna = 10
              Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
              Call InsertaError(10, 12)
              HuboError = True
              Exit Sub
        End If
    End If
End If





'=============================================================
'Si viene el tipo de motivo cargo ese y valido que exista sino viene, busco si hay un default
If Len(TipoMotivo) = 0 Or (TipoMotivo = "N/A") Then
    'Verifico si hay un default
    StrSql = "SELECT tipmotnro, motivo FROM cft_resumen where concnro = " & ConcNro
    StrSql = StrSql & " AND tpanro = " & tpanro
    OpenRecordset StrSql, rs_cft_resumen
    If Not rs_cft_resumen.EOF Then
        TipoMotivo = IIf(IsNull(rs_cft_resumen!tipmotnro), "0", rs_cft_resumen!tipmotnro)
    End If
Else
    'Valido contra BD que exista el motivo
    StrSql = "SELECT * FROM tipomotivo where tipmotnro = " & TipoMotivo
    OpenRecordset StrSql, rs_TipoMotivo
    If rs_TipoMotivo.EOF Then
        Texto = ": " & "No se encontro el tipo de motivo " & TipoMotivo
        NroColumna = 13
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call InsertaError(13, 116)
        HuboError = True
        Exit Sub
    End If
End If

'Si viene motivo cargo ese, sino viene, busco si hay un default
If Len(Motivo) = 0 Or (Motivo = "N/A") Then
    'Verifico si hay un default
    StrSql = "SELECT tipmotnro, motivo FROM cft_resumen where concnro = " & ConcNro
    StrSql = StrSql & " AND tpanro = " & tpanro
    OpenRecordset StrSql, rs_cft_resumen
    If Not rs_cft_resumen.EOF Then
        Motivo = IIf(IsNull(rs_cft_resumen!Motivo), "", rs_cft_resumen!Motivo)
    End If
End If

If Len(TipoMotivo) = 0 Then TipoMotivo = "null"
If TipoMotivo = "N/A" Then TipoMotivo = "null"
If TipoMotivo = "0" Then TipoMotivo = "null"
If Motivo = "N/A" Then Motivo = ""

'===================================================================
'Validaciones modelo de asiento
'controlo si existe la distribucion y los tipos de estructura configurados
If Len(masinro) = 0 Then
    tieneDistribucion = 0
Else
    'controlo que exista el modelo de asiento
    StrSql = " SELECT masinro FROM mod_asiento WHERE masinro = " & masinro
    OpenRecordset StrSql, rs_modAsi
    If Not rs_modAsi.EOF Then
        Texto = ": Modelo de asiento " & masinro & " Encontrado."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        If Len(estrnro1) > 0 Then
           'controlo que exista la estructura y que este asociada al modelo
            StrSql = " SELECT tenro, estrnro FROM estructura WHERE upper(estrdabr) = '" & UCase(estrnro1) & "'"
            OpenRecordset StrSql, rs_Estructura
            If Not rs_Estructura.EOF Then
                'controlo que la estructura este asociada al modelo de asiento
                StrSql = " SELECT masinro FROM mod_asiento WHERE masinro = " & masinro & " AND masinivternro1 = " & rs_Estructura!Tenro
                OpenRecordset StrSql, rs_Aux
                If Not rs_Aux.EOF Then
                    tenro1 = rs_Estructura!Tenro
                    estrnro1 = rs_Estructura!Estrnro
                    tieneDistribucion = -1
                Else
                    Texto = ": La estructura 1 no esta asociada a al modelo de asiento."
                    NroColumna = 14
                    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                    HuboError = True
                    Exit Sub
                End If
            Else
                Texto = ": La estructura 1 no existe en el sistema."
                NroColumna = 14
                Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                Call InsertaError(14, 2)
                HuboError = True
                Exit Sub
            End If
        Else
            Texto = ": El modelo debe tener al menos una estructura."
            NroColumna = 14
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            Call InsertaError(14, 2)
            HuboError = True
            Exit Sub
        End If
        
        'controlo si existe la estructura 2
        If Len(estrnro2) > 0 Then
           'controlo que exista la estructura y que este asociada al modelo
            StrSql = " SELECT tenro, estrnro FROM estructura WHERE upper(estrdabr) = '" & UCase(estrnro2) & "'"
            OpenRecordset StrSql, rs_Estructura
            If Not rs_Estructura.EOF Then
                'controlo que la estructura este asociada al modelo de asiento
                StrSql = " SELECT masinro FROM mod_asiento WHERE masinro = " & masinro & " AND masinivternro2 = " & rs_Estructura!Tenro
                OpenRecordset StrSql, rs_Aux
                If Not rs_Aux.EOF Then
                    tenro2 = rs_Estructura!Tenro
                    estrnro2 = rs_Estructura!Estrnro
                Else
                    Texto = ": La estructura 2 no esta asociada a al modelo de asiento."
                    NroColumna = 15
                    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                    HuboError = True
                    Exit Sub
                End If
            Else
                Texto = ": La estructura 2 no existe en el sistema."
                NroColumna = 15
                Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                Call InsertaError(14, 2)
                HuboError = True
                Exit Sub
            End If
        Else
            tenro2 = 0
            estrnro2 = 0
            Texto = ": Estructura 2 no informada."
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        End If
        
        'controlo si existe la estructura 3
        If Len(estrnro3) > 0 Then
           'controlo que exista la estructura y que este asociada al modelo
            StrSql = " SELECT tenro, estrnro FROM estructura WHERE upper(estrdabr) = '" & UCase(estrnro3) & "'"
            OpenRecordset StrSql, rs_Estructura
            If Not rs_Estructura.EOF Then
                'controlo que la estructura este asociada al modelo de asiento
                StrSql = " SELECT masinro FROM mod_asiento WHERE masinro = " & masinro & " AND masinivternro3 = " & rs_Estructura!Tenro
                OpenRecordset StrSql, rs_Aux
                If Not rs_Aux.EOF Then
                    tenro3 = rs_Estructura!Tenro
                    estrnro3 = rs_Estructura!Estrnro
                Else
                    Texto = ": La estructura 3 no esta asociada a al modelo de asiento."
                    NroColumna = 15
                    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                    HuboError = True
                    Exit Sub
                End If
            Else
                Texto = ": La estructura 3 no existe en el sistema."
                NroColumna = 15
                Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                Call InsertaError(14, 2)
                HuboError = True
                Exit Sub
            End If
        Else
            tenro3 = 0
            estrnro3 = 0
            Texto = ": Estructura 3 no informada."
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        End If
        
        
    Else
        Texto = ": No existe el modelo de asiento " & masinro
        NroColumna = 13
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call InsertaError(13, 2)
        HuboError = True
        Exit Sub
    End If
End If

'=============================================================
'Busco si existe la Novedad

  If Not TieneVigencia Then
    StrSql = "SELECT * FROM novemp WHERE "
    StrSql = StrSql & " concnro = " & ConcNro
    StrSql = StrSql & " AND tpanro = " & tpanro
    StrSql = StrSql & " AND empleado = " & Tercero
    StrSql = StrSql & " AND (nevigencia = -1 OR nevigencia = 0) "
    StrSql = StrSql & " ORDER BY nevigencia "
    OpenRecordset StrSql, rs_NovEmp
    
    If Not rs_NovEmp.EOF Then
    
        'Busco si existe una novedad sin vigencia
        sinVig = False
        Do While Not rs_NovEmp.EOF
            If Not CBool(rs_NovEmp!nevigencia) Then
                sinVig = True
                Exit Do 'Para que quede posicionado en la nov a modificar
            End If
            rs_NovEmp.MoveNext
        Loop
        
            'A partir de la V4.50
            'Busco si existe una misma novedad s/vigencia o c/vigencia diferente
            ExisteNovedad = False
            StrSql = "SELECT * FROM novemp WHERE "
            StrSql = StrSql & " concnro = " & ConcNro
            StrSql = StrSql & " AND tpanro = " & tpanro
            StrSql = StrSql & " AND empleado = " & Tercero
            OpenRecordset StrSql, rs_NovEmp2
            If Not rs_NovEmp2.EOF Then
                Flog.writeline "Existe una novedad"
                ExisteNovedad = True
            End If
'            -------------------------------------------------
    
            If Not sinVig Then ' No encontre con licencia
                If ExisteNovedad = True Then 'V4.50
                    'LED - 11/11/2014
                    Select Case CInt(AccionNovedad)
                        Case 0: 'Mantiene Novedades - A pedido del cliente siempre se inserta la novedad
                            Texto = "Existe la novedad pero se inserta de todos modos, campo reemplaza = 'No'."
                            Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                            
                            If Not EsRetroactivo Then
                                StrSql = "INSERT INTO novemp (" & _
                                         "empleado,concnro,tpanro,nevalor,nevigencia"
                                StrSql = StrSql & ",tipmotnro,motivo,nedist"
                                StrSql = StrSql & ") VALUES (" & Tercero & _
                                         "," & ConcNro & _
                                         "," & tpanro & _
                                         "," & Monto & _
                                         ",0" & _
                                        "," & TipoMotivo & _
                                        ",'" & Motivo & "'" & _
                                        "," & tieneDistribucion & " )"
                            Else
                                StrSql = " INSERT INTO novemp (" & _
                                         " empleado,concnro,tpanro,nevalor,nevigencia,nepliqdesde,nepliqhasta " & _
                                         ",tipmotnro,motivo,nedist" & _
                                         ") VALUES (" & Tercero & _
                                         "," & ConcNro & _
                                         "," & tpanro & _
                                         "," & Monto & _
                                         "," & CLng(TieneVigencia) & _
                                         "," & PeriodoDesde & _
                                         "," & PeriodoHasta & _
                                         "," & TipoMotivo & _
                                         ",'" & Motivo & "'" & _
                                         "," & tieneDistribucion & " )"
                                
                            End If
                            
                            objConn.Execute StrSql, , adExecuteNoRecords
                            gnovnro = getLastIdentity(objConn, "novemp")
                            Texto = "Novedad Insertada "
                            Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                            
                            If (CLng(tieneDistribucion) = -1) Then
                                nenro = getLastIdentity(objConn, "novemp")
                                
                                StrSql = "INSERT INTO nov_dist " & _
                                         " (novnro,auto,tiponov,concnro,tpanro,masinro,tenro,estrnro,tenro2,estrnro2,tenro3,estrnro3)" & _
                                         " VALUES (" & nenro & ",0,1," & ConcNro & " ," & tpanro & "," & masinro & "," & tenro1 & "," & estrnro1 & "," & tenro2 & "," & estrnro2 & "," & tenro3 & "," & estrnro3 & ")"
                                objConn.Execute StrSql, , adExecuteNoRecords
                                Texto = "Distribucion Insertada "
                                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                            
                            End If
                    End Select
                    'LED - 11/11/2014 - FIN
            Else
                'Inserto---------------------------------------------------------
                    If Not EsRetroactivo Then
                        StrSql = "INSERT INTO novemp (" & _
                                 "empleado,concnro,tpanro,nevalor,nevigencia"
                        StrSql = StrSql & ",tipmotnro,motivo,nedist"
                        StrSql = StrSql & ") VALUES (" & Tercero & _
                                 "," & ConcNro & _
                                 "," & tpanro & _
                                 "," & Monto & _
                                 ",0" & _
                                "," & TipoMotivo & _
                                ",'" & Motivo & "'" & _
                                "," & tieneDistribucion & " )"
                    Else
                        StrSql = " INSERT INTO novemp (" & _
                                 " empleado,concnro,tpanro,nevalor,nevigencia,nepliqdesde,nepliqhasta " & _
                                 ",tipmotnro,motivo,nedist" & _
                                 ") VALUES (" & Tercero & _
                                 "," & ConcNro & _
                                 "," & tpanro & _
                                 "," & Monto & _
                                 "," & CLng(TieneVigencia) & _
                                 "," & PeriodoDesde & _
                                 "," & PeriodoHasta & _
                                 "," & TipoMotivo & _
                                 ",'" & Motivo & "'" & _
                                 "," & tieneDistribucion & " )"
                    End If
                    
                    objConn.Execute StrSql, , adExecuteNoRecords
                    gnovnro = getLastIdentity(objConn, "novemp")
                    Texto = "Novedad Insertada "
                    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                    
                    If (CLng(tieneDistribucion) = -1) Then
                        nenro = getLastIdentity(objConn, "novemp")
                        
                        StrSql = "INSERT INTO nov_dist " & _
                                 " (novnro,auto,tiponov,concnro,tpanro,masinro,tenro,estrnro,tenro2,estrnro2,tenro3,estrnro3)" & _
                                 " VALUES (" & nenro & ",0,1," & ConcNro & " ," & tpanro & "," & masinro & "," & tenro1 & "," & estrnro1 & "," & tenro2 & "," & estrnro2 & "," & tenro3 & "," & estrnro3 & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                        Texto = "Distribucion Insertada "
                        Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                    
                    End If
                End If
            '-----------------------------------------------------------------
        Else
            'Existe una novedad pero sin vigencia ==> Actualizo
            
            Select Case CInt(AccionNovedad)
                Case -1: 'Actualizo la Novedad
                    If Not EsRetroactivo Then
                        StrSql = " UPDATE novemp SET nevalor = " & Monto & _
                                 " , tipmotnro =  " & TipoMotivo & _
                                 " , motivo =  '" & Motivo & "', nedist = " & tieneDistribucion & _
                                 " WHERE nenro = " & rs_NovEmp!nenro
                    Else
                        StrSql = "UPDATE novemp SET nevalor = " & Monto & _
                                 " , nepliqdesde =  " & PeriodoDesde & _
                                 " , nepliqhasta =  " & PeriodoHasta & _
                                 " , tipmotnro =  " & TipoMotivo & _
                                 " , motivo =  '" & Motivo & "', nedist = " & tieneDistribucion & _
                                 " WHERE nenro = " & rs_NovEmp!nenro
                    End If
                    nenro = rs_NovEmp!nenro
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = "Novedad Actualizada "
                    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                    
                    If (CLng(tieneDistribucion) = -1) Then
                        
                        StrSql = "SELECT novnro FROM nov_dist WHERE novnro=" & rs_NovEmp!nenro & " AND tiponov= 1"
                        OpenRecordset StrSql, rs_Aux
                        
                        'LED Si existe lo acutalizo
                        If Not rs_Aux.EOF Then
                            StrSql = "UPDATE nov_dist " & _
                                    " SET masinro= " & masinro & ", tenro=" & tenro1 & ", estrnro= " & estrnro1 & ", tenro2= " & tenro2 & _
                                    ",estrnro2= " & estrnro2 & ",tenro3= " & tenro3 & ", estrnro3= " & estrnro3 & _
                                    " WHERE novnro = " & rs_NovEmp!nenro
                        Else
                            'LED Si No existe lo inserto
                            StrSql = "INSERT INTO nov_dist " & _
                                     " (novnro,auto,tiponov,concnro,tpanro,masinro,tenro,estrnro,tenro2,estrnro2,tenro3,estrnro3)" & _
                                     " VALUES (" & rs_NovEmp!nenro & ",0,1," & ConcNro & " ," & tpanro & "," & masinro & "," & tenro1 & "," & estrnro1 & "," & tenro2 & "," & estrnro2 & "," & tenro3 & "," & estrnro3 & ")"
                        End If
                        objConn.Execute StrSql, , adExecuteNoRecords
                    
                    Else
                        'LED- Verifica si tenía una distribución. Si existe la elimina
                        StrSql = "SELECT novnro FROM nov_dist WHERE novnro=" & rs_NovEmp!nenro & " AND tiponov= 1"
                        OpenRecordset StrSql, rs_Aux
                        If Not rs_Aux.EOF Then
                            StrSql = "DELETE nov_dist WHERE novnro=" & rs_NovEmp!nenro & " AND tiponov= 1"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
                Case 0: 'Mantiene Novedades - A pedido del cliente siempre se inserta la novedad
                    Texto = "Existe la novedad pero se inserta de todos modos, campo reemplaza = 'No'."
                    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                    'LED - 11/11/2014
                    If Not EsRetroactivo Then
                        StrSql = "INSERT INTO novemp (" & _
                                 "empleado,concnro,tpanro,nevalor,nevigencia"
                        StrSql = StrSql & ",tipmotnro,motivo,nedist"
                        StrSql = StrSql & ") VALUES (" & Tercero & _
                                 "," & ConcNro & _
                                 "," & tpanro & _
                                 "," & Monto & _
                                 ",0" & _
                                "," & TipoMotivo & _
                                ",'" & Motivo & "'" & _
                                "," & tieneDistribucion & " )"
                    Else
                        StrSql = " INSERT INTO novemp (" & _
                                 " empleado,concnro,tpanro,nevalor,nevigencia,nepliqdesde,nepliqhasta " & _
                                 ",tipmotnro,motivo,nedist" & _
                                 ") VALUES (" & Tercero & _
                                 "," & ConcNro & _
                                 "," & tpanro & _
                                 "," & Monto & _
                                 "," & CLng(TieneVigencia) & _
                                 "," & PeriodoDesde & _
                                 "," & PeriodoHasta & _
                                 "," & TipoMotivo & _
                                 ",'" & Motivo & "'" & _
                                 "," & tieneDistribucion & " )"
                    End If
                    
                    objConn.Execute StrSql, , adExecuteNoRecords
                    gnovnro = getLastIdentity(objConn, "novemp")
                    Texto = "Novedad Insertada "
                    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                    
                    If (CLng(tieneDistribucion) = -1) Then
                        nenro = getLastIdentity(objConn, "novemp")
                        
                        StrSql = "INSERT INTO nov_dist " & _
                                 " (novnro,auto,tiponov,concnro,tpanro,masinro,tenro,estrnro,tenro2,estrnro2,tenro3,estrnro3)" & _
                                 " VALUES (" & nenro & ",0,1," & ConcNro & " ," & tpanro & "," & masinro & "," & tenro1 & "," & estrnro1 & "," & tenro2 & "," & estrnro2 & "," & tenro3 & "," & estrnro3 & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                        Texto = "Distribucion Insertada "
                        Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                    
                    End If
                'LED - 11/11/2014 - FIN
                Case 1: 'Suma Novedades
                    If Not EsRetroactivo Then
                        StrSql = " UPDATE novemp SET nevalor = nevalor + " & Monto & _
                                 " , tipmotnro =  " & TipoMotivo & _
                                 " , motivo =  '" & Motivo & "', nedist = " & tieneDistribucion & _
                                 " WHERE nenro = " & rs_NovEmp!nenro
                    Else
                        StrSql = " UPDATE novemp SET nevalor = nevalor + " & Monto & _
                                 " , nepliqdesde =  " & PeriodoDesde & _
                                 " , nepliqhasta =  " & PeriodoHasta & _
                                 " , tipmotnro =  " & TipoMotivo & _
                                 " , motivo =  '" & Motivo & "', nedist = " & tieneDistribucion & _
                                 " WHERE nenro = " & rs_NovEmp!nenro
                    End If
                    nenro = rs_NovEmp!nenro
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = "Novedad Sumada "
                    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                    
                    If (CLng(tieneDistribucion) = -1) Then
                        
                        StrSql = "SELECT novnro FROM nov_dist WHERE novnro=" & rs_NovEmp!nenro & " AND tiponov= 1"
                        OpenRecordset StrSql, rs_Aux
                        
                        'LED Si existe lo acutalizo
                        If Not rs_Aux.EOF Then
                            StrSql = "UPDATE nov_dist " & _
                                    " SET masinro= " & masinro & ", tenro=" & tenro1 & ", estrnro= " & estrnro1 & ", tenro2= " & tenro2 & _
                                    ",estrnro2= " & estrnro2 & ",tenro3= " & tenro3 & ", estrnro3= " & estrnro3 & _
                                    " WHERE novnro = " & rs_NovEmp!nenro
                        Else
                            'LED Si No existe lo inserto
                            StrSql = "INSERT INTO nov_dist " & _
                                     " (novnro,auto,tiponov,concnro,tpanro,masinro,tenro,estrnro,tenro2,estrnro2,tenro3,estrnro3)" & _
                                     " VALUES (" & rs_NovEmp!nenro & ",0,1," & ConcNro & " ," & tpanro & "," & masinro & "," & tenro1 & "," & estrnro1 & "," & tenro2 & "," & estrnro2 & "," & tenro3 & "," & estrnro3 & ")"
                        End If
                        objConn.Execute StrSql, , adExecuteNoRecords
                    
                    Else
                        'LED- Verifica si tenía una distribución. Si existe la elimina
                        StrSql = "SELECT novnro FROM nov_dist WHERE novnro=" & rs_NovEmp!nenro & " AND tiponov= 1"
                        OpenRecordset StrSql, rs_Aux
                        If Not rs_Aux.EOF Then
                            StrSql = "DELETE nov_dist WHERE novnro=" & rs_NovEmp!nenro & " AND tiponov= 1"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        End If
                    End If
            End Select

        End If
    Else 'No encontre novedad alguna para el conc y param
        If ExisteNovedad = True Then 'V4.50
            Texto = "No se insertó la novedad. Ya existe y no se pisa."
            Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
        Else
            'Inserto
            If Not EsRetroactivo Then
                StrSql = " INSERT INTO novemp (" & _
                         " empleado,concnro,tpanro,nevalor,nevigencia " & _
                         " ,tipmotnro,motivo,nedist " & _
                         " ) VALUES (" & Tercero & _
                         " ," & ConcNro & _
                         " ," & tpanro & _
                         " ," & Monto & _
                         " ,0 " & _
                         "," & TipoMotivo & _
                         ",'" & Motivo & "'" & _
                         "," & tieneDistribucion & " )"
            Else
                StrSql = " INSERT INTO novemp (" & _
                         " empleado,concnro,tpanro,nevalor,nevigencia,nepliqdesde,nepliqhasta " & _
                         " ,tipmotnro,motivo" & _
                         " ) VALUES (" & Tercero & _
                         " ," & ConcNro & _
                         " ," & tpanro & _
                         " ," & Monto & _
                         " ," & CLng(TieneVigencia) & _
                         " ," & PeriodoDesde & _
                         " ," & PeriodoHasta & _
                         " ," & TipoMotivo & _
                         " ,'" & Motivo & "'" & _
                         " ," & tieneDistribucion & " )"

            End If
            objConn.Execute StrSql, , adExecuteNoRecords
            gnovnro = getLastIdentity(objConn, "novemp")
            Texto = "Novedad insertada "
            Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
            
            If (CLng(tieneDistribucion) = -1) Then
                nenro = getLastIdentity(objConn, "novemp")
                
                StrSql = "INSERT INTO nov_dist " & _
                         " (novnro,auto,tiponov,concnro,tpanro,masinro,tenro,estrnro,tenro2,estrnro2,tenro3,estrnro3)" & _
                         " VALUES (" & nenro & ",0,1," & ConcNro & " ," & tpanro & "," & masinro & "," & tenro1 & "," & estrnro1 & "," & tenro2 & "," & estrnro2 & "," & tenro3 & "," & estrnro3 & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = "Distribucion Insertada "
                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
            
            End If
            
        End If
    End If
  Else 'Tiene Vigencia
    'A partir de la V4.50
    'Busco si existe una misma novedad s/vigencia o c/vigencia diferente
    ExisteNovedad = False
    
    '*******************************************
    'VER QUE PASA CUANDO TENGO MAS DE 1 CARGADA
    '*******************************************
    StrSql = "SELECT * FROM novemp WHERE "
    StrSql = StrSql & " concnro = " & ConcNro
    StrSql = StrSql & " AND tpanro = " & tpanro
    StrSql = StrSql & " AND empleado = " & Tercero
    StrSql = StrSql & " AND ("
    If EsNulo(FechaHasta) = False Then
        StrSql = StrSql & "((nedesde <= " & ConvFecha(FechaDesde) & " AND nedesde <= " & ConvFecha(FechaHasta) & " AND (nehasta >= " & ConvFecha(FechaDesde) & " OR nehasta IS NULL )) )"
        StrSql = StrSql & " OR ((nedesde >= " & ConvFecha(FechaDesde) & " AND nedesde <= " & ConvFecha(FechaHasta) & " AND (nehasta >= " & ConvFecha(FechaDesde) & " OR nehasta IS NULL)))"
    Else
        StrSql = StrSql & "((nedesde <= " & ConvFecha(FechaDesde) & " AND nedesde <= " & ConvFecha(FechaDesde) & " AND (nehasta >= " & ConvFecha(FechaDesde) & " OR nehasta IS NULL )) )"
        StrSql = StrSql & " OR ((nedesde >= " & ConvFecha(FechaDesde) & " AND nedesde <= " & ConvFecha(FechaDesde) & " AND (nehasta >= " & ConvFecha(FechaDesde) & " OR nehasta IS NULL)))"
    End If
    StrSql = StrSql & ")"
    StrSql = StrSql & " ORDER BY nehasta ASC "
    
    OpenRecordset StrSql, rs_NovEmp2
    If Not rs_NovEmp2.EOF Then
        ExisteNovedad = True
        Do While Not rs_NovEmp2.EOF
            InsertoNovedad = False
            StrSqlAux = ""
            '***********************************************
            '***********************************************
            '  |__________#
            '  |__________|
            If EsNulo(rs_NovEmp2!nehasta) = True And EsNulo(FechaHasta) = False Then
            'Si la FechaHastaAux es nulo, debo cerrar vigencia
                 If CDate(rs_NovEmp2!nedesde) = CDate(FechaDesde) Then
                     'Actualizo novedad, y cierro vigencia.
                     StrSqlAux = ", nehasta=" & ConvFecha(FechaHasta)
                     Exit Do
                 End If
            End If
            '***********************************************
            '***********************************************
            If EsNulo(rs_NovEmp2!nehasta) = False Then
                If CDate(rs_NovEmp2!nehasta) < CDate(FechaDesde) Then
                    '  |__________|
                    '              |__________|
                    'Inserto nuevo registro.
                    ExisteNovedad = False
                    InsertoNovedad = True
                    Exit Do
                End If
            End If
            '***********************************************
            '***********************************************
            If EsNulo(rs_NovEmp2!nehasta) = True Then
                rs_NovEmp2.MoveNext
                'If Not rs_NovEmp2.EOF Then
                If Not rs_NovEmp2.EOF And EsNulo(FechaHasta) = False Then
                    If CDate(rs_NovEmp2!nehasta) > CDate(FechaHasta) Then
                        '            |__________|
                        '|__________|
                        'Inserto nuevo registro.
                        ExisteNovedad = False
                        InsertoNovedad = True
                        Exit Do
                    End If
                    'rs_NovEmp2.MovePrevious
                ElseIf EsNulo(FechaHasta) = False Then
                    rs_NovEmp2.MovePrevious
                    'Y ahora que hago?
                    If CDate(rs_NovEmp2!nedesde) > CDate(FechaHasta) Then
                        '            |__________|
                        '|__________|
                        'Inserto nuevo registro.
                        ExisteNovedad = False
                        InsertoNovedad = True
                        Exit Do
                    End If
                Else
                    rs_NovEmp2.MovePrevious
                End If
            End If
            '***********************************************
            '***********************************************
            rs_NovEmp2.MoveNext
        Loop
        '-------------------------------------------
        'V4.54 | Guardo fechas aux. de la licencia existente
        '____________________________________________
        If Not rs_NovEmp2.EOF Then
            FechaDesdeAux = rs_NovEmp2!nedesde
            If EsNulo(rs_NovEmp2!nehasta) Then
                FechaHastaAux = ""
            Else
                FechaHastaAux = rs_NovEmp2!nehasta
            End If
        Else
            FechaDesdeAux = FechaDesde
            FechaHastaAux = FechaHasta
        End If
        '-------------------------------------------
    Else
        'controlo si existe una novedad sin vigencia
        StrSql = "SELECT * FROM novemp WHERE concnro = " & ConcNro
        StrSql = StrSql & " AND tpanro = " & tpanro & " And Empleado = " & Tercero
        StrSql = StrSql & " AND nedesde is null "
        OpenRecordset StrSql, rs_NovEmp
        If Not rs_NovEmp.EOF Then
            Select Case CInt(AccionNovedad)
                Case -1: 'reemplaza la novedad - la borro y se inserta abajo
                    StrSql = "DELETE FROM novemp WHERE nenro = " & rs_NovEmp!nenro
                    objConn.Execute StrSql, , adExecuteNoRecords
            End Select
        End If
    
        FechaDesdeAux = FechaDesde
        FechaHastaAux = FechaHasta
    End If
   '_______________________________________________________________________
    'Reviso que no se pise
    StrSql = "SELECT * FROM novemp WHERE "
    StrSql = StrSql & " concnro = " & ConcNro
    StrSql = StrSql & " AND tpanro = " & tpanro
    StrSql = StrSql & " AND empleado = " & Tercero
    StrSql = StrSql & " AND nevigencia = -1 "
    If Not EsNulo(FechaHastaAux) Then
        StrSql = StrSql & " AND nedesde = " & ConvFecha(FechaDesdeAux)
        StrSql = StrSql & " AND nehasta = " & ConvFecha(FechaHastaAux)
    Else
        StrSql = StrSql & " AND nedesde = " & ConvFecha(FechaDesdeAux)
        StrSql = StrSql & " AND nehasta is null"
    End If
    
    OpenRecordset StrSql, rs_NovEmp
    
    If Not rs_NovEmp.EOF And InsertoNovedad = False Then ' 4.54
    
        'Existe/n novedad/es con vigencia ==>
        Select Case CInt(AccionNovedad)
            Case -1: 'Actualizo la Novedad
                If Not EsRetroactivo Then
                    StrSql = "UPDATE novemp SET nevalor = " & Monto
                    StrSql = StrSql & " , tipmotnro =  " & TipoMotivo
                    StrSql = StrSql & " , motivo =  '" & Motivo & "'"
                    StrSql = StrSql & ", nedist = " & tieneDistribucion
                    '4.54 ---
                    StrSql = StrSql & StrSqlAux
                    '-------
                    
                    StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                Else
                    StrSql = "UPDATE novemp SET nevalor = " & Monto & _
                             " , nepliqdesde =  " & PeriodoDesde & _
                             " , nepliqhasta =  " & PeriodoHasta & _
                             " , tipmotnro =  " & TipoMotivo & _
                             " , motivo =  '" & Motivo & "'" & _
                             ", nedist = " & tieneDistribucion
                    StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                End If
                nenro = rs_NovEmp!nenro
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = "Novedad Actualizada "
                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                
                If (CLng(tieneDistribucion) = -1) Then
                    
                    StrSql = "SELECT novnro FROM nov_dist WHERE novnro=" & rs_NovEmp!nenro & " AND tiponov= 1"
                    OpenRecordset StrSql, rs_Aux
                    
                    'LED Si existe lo acutalizo
                    If Not rs_Aux.EOF Then
                        StrSql = "UPDATE nov_dist " & _
                                " SET masinro= " & masinro & ", tenro=" & tenro1 & ", estrnro= " & estrnro1 & ", tenro2= " & tenro2 & _
                                ",estrnro2= " & estrnro2 & ",tenro3= " & tenro3 & ", estrnro3= " & estrnro3 & _
                                " WHERE novnro = " & rs_NovEmp!nenro
                    Else
                        'LED Si No existe lo inserto
                        StrSql = "INSERT INTO nov_dist " & _
                                 " (novnro,auto,tiponov,concnro,tpanro,masinro,tenro,estrnro,tenro2,estrnro2,tenro3,estrnro3)" & _
                                 " VALUES (" & rs_NovEmp!nenro & ",0,1," & ConcNro & " ," & tpanro & "," & masinro & "," & tenro1 & "," & estrnro1 & "," & tenro2 & "," & estrnro2 & "," & tenro3 & "," & estrnro3 & ")"
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                
                Else
                    'LED- Verifica si tenía una distribución. Si existe la elimina
                    StrSql = "SELECT novnro FROM nov_dist WHERE novnro=" & rs_NovEmp!nenro & " AND tiponov= 1"
                    OpenRecordset StrSql, rs_Aux
                    If Not rs_Aux.EOF Then
                        StrSql = "DELETE nov_dist WHERE novnro=" & rs_NovEmp!nenro & " AND tiponov= 1"
                        objConn.Execute StrSql, , adExecuteNoRecords
                    End If
                End If
                
            Case 0: 'Mantiene Novedades - A pedido del cliente siempre se inserta la novedad
                Texto = "Existe la novedad pero se inserta de todos modos, campo reemplaza = 'No'."
                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                'LED - 11/11/2014
                If Not EsRetroactivo Then
                    StrSql = "INSERT INTO novemp ("
                    StrSql = StrSql & "empleado,concnro,tpanro,nevalor,nevigencia,nedesde"
                    If Not EsNulo(FechaHasta) Then
                        StrSql = StrSql & ",nehasta"
                    End If
                    StrSql = StrSql & ",tipmotnro,motivo, nedist"
                    StrSql = StrSql & ") VALUES (" & Tercero
                    StrSql = StrSql & "," & ConcNro
                    StrSql = StrSql & "," & tpanro
                    StrSql = StrSql & "," & Monto
                    StrSql = StrSql & ",-1"
                    StrSql = StrSql & "," & ConvFecha(FechaDesde)
                    If Not EsNulo(FechaHasta) Then
                        StrSql = StrSql & "," & ConvFecha(FechaHasta)
                    End If
                    StrSql = StrSql & "," & TipoMotivo & _
                        " ,'" & Motivo & "'" & _
                        " ," & tieneDistribucion & _
                        " )"
                Else
                    StrSql = "INSERT INTO novemp ("
                    StrSql = StrSql & "empleado,concnro,tpanro,nevalor,nevigencia,nedesde"
                    If Not EsNulo(FechaHasta) Then
                        StrSql = StrSql & ",nehasta"
                    End If
                    StrSql = StrSql & ",nepliqdesde,nepliqhasta"
                    StrSql = StrSql & ",tipmotnro,motivo, nedist"
                    StrSql = StrSql & ") VALUES (" & Tercero
                    StrSql = StrSql & "," & ConcNro
                    StrSql = StrSql & "," & tpanro
                    StrSql = StrSql & "," & Monto
                    StrSql = StrSql & ",-1"
                    StrSql = StrSql & "," & ConvFecha(FechaDesde)
                    If Not EsNulo(FechaHasta) Then
                        StrSql = StrSql & "," & ConvFecha(FechaHasta)
                    End If
                    StrSql = StrSql & "," & PeriodoDesde & _
                        " ," & PeriodoHasta & _
                        " ," & TipoMotivo & _
                        ",'" & Motivo & "'" & _
                        " ," & tieneDistribucion & _
                        " )"

                End If
                objConn.Execute StrSql, , adExecuteNoRecords
                gnovnro = getLastIdentity(objConn, "novemp")
                Texto = "Novedad insertada "
                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                
                If (CLng(tieneDistribucion) = -1) Then
                    nenro = getLastIdentity(objConn, "novemp")
                    
                    StrSql = "INSERT INTO nov_dist " & _
                             " (novnro,auto,tiponov,concnro,tpanro,masinro,tenro,estrnro,tenro2,estrnro2,tenro3,estrnro3)" & _
                             " VALUES (" & nenro & ",0,1," & ConcNro & " ," & tpanro & "," & masinro & "," & tenro1 & "," & estrnro1 & "," & tenro2 & "," & estrnro2 & "," & tenro3 & "," & estrnro3 & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = "Distribucion Insertada "
                    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                
                End If
                'LED - 11/11/2014 - FIN
            Case 1: 'Suma Novedades
                If Not EsRetroactivo Then
                    StrSql = "UPDATE novemp SET nevalor = nevalor + " & Monto
                    StrSql = StrSql & " , tipmotnro =  " & TipoMotivo
                    StrSql = StrSql & " , motivo =  '" & Motivo & "'"
                    StrSql = StrSql & ", nedist = " & tieneDistribucion
                    StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                Else
                    StrSql = " UPDATE novemp SET nevalor = nevalor + " & Monto & _
                             " , nepliqdesde =  " & PeriodoDesde & _
                             " , nepliqhasta =  " & PeriodoHasta & _
                             " , tipmotnro =  " & TipoMotivo & _
                             " , motivo =  '" & Motivo & "'" & _
                             " , nedist = " & tieneDistribucion & _
                             " WHERE nenro = " & rs_NovEmp!nenro
                End If
                nenro = rs_NovEmp!nenro
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = "Novedad Sumada "
                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                
                If (CLng(tieneDistribucion) = -1) Then
                    
                    StrSql = "SELECT novnro FROM nov_dist WHERE novnro=" & rs_NovEmp!nenro & " AND tiponov= 1"
                    OpenRecordset StrSql, rs_Aux
                    
                    'LED Si existe lo acutalizo
                    If Not rs_Aux.EOF Then
                        StrSql = "UPDATE nov_dist " & _
                                " SET masinro= " & masinro & ", tenro=" & tenro1 & ", estrnro= " & estrnro1 & ", tenro2= " & tenro2 & _
                                ",estrnro2= " & estrnro2 & ",tenro3= " & tenro3 & ", estrnro3= " & estrnro3 & _
                                " WHERE novnro = " & rs_NovEmp!nenro
                    Else
                        'LED Si No existe lo inserto
                        StrSql = "INSERT INTO nov_dist " & _
                                 " (novnro,auto,tiponov,concnro,tpanro,masinro,tenro,estrnro,tenro2,estrnro2,tenro3,estrnro3)" & _
                                 " VALUES (" & rs_NovEmp!nenro & ",0,1," & ConcNro & " ," & tpanro & "," & masinro & "," & tenro1 & "," & estrnro1 & "," & tenro2 & "," & estrnro2 & "," & tenro3 & "," & estrnro3 & ")"
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                
                Else
                    'LED- Verifica si tenía una distribución. Si existe la elimina
                    StrSql = "SELECT novnro FROM nov_dist WHERE novnro=" & rs_NovEmp!nenro & " AND tiponov= 1"
                    OpenRecordset StrSql, rs_Aux
                    If Not rs_Aux.EOF Then
                        StrSql = "DELETE nov_dist WHERE novnro=" & rs_NovEmp!nenro & " AND tiponov= 1"
                        objConn.Execute StrSql, , adExecuteNoRecords
                    End If
                End If
                
        End Select
        
    Else
        
        If ExisteNovedad = True Then 'V4.50
                Texto = "No se insertó la novedad. Ya existe y no se pisa."
                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
        Else
                If Not EsRetroactivo Then
                    StrSql = "INSERT INTO novemp ("
                    StrSql = StrSql & "empleado,concnro,tpanro,nevalor,nevigencia,nedesde"
                    If Not EsNulo(FechaHasta) Then
                        StrSql = StrSql & ",nehasta"
                    End If
                    StrSql = StrSql & ",tipmotnro,motivo, nedist"
                    StrSql = StrSql & ") VALUES (" & Tercero
                    StrSql = StrSql & "," & ConcNro
                    StrSql = StrSql & "," & tpanro
                    StrSql = StrSql & "," & Monto
                    StrSql = StrSql & ",-1"
                    StrSql = StrSql & "," & ConvFecha(FechaDesde)
                    If Not EsNulo(FechaHasta) Then
                        StrSql = StrSql & "," & ConvFecha(FechaHasta)
                    End If
                    StrSql = StrSql & "," & TipoMotivo & _
                        " ,'" & Motivo & "'" & _
                        " ," & tieneDistribucion & _
                        " )"
                Else
                    StrSql = "INSERT INTO novemp ("
                    StrSql = StrSql & "empleado,concnro,tpanro,nevalor,nevigencia,nedesde"
                    If Not EsNulo(FechaHasta) Then
                        StrSql = StrSql & ",nehasta"
                    End If
                    StrSql = StrSql & ",nepliqdesde,nepliqhasta"
                    StrSql = StrSql & ",tipmotnro,motivo, nedist"
                    StrSql = StrSql & ") VALUES (" & Tercero
                    StrSql = StrSql & "," & ConcNro
                    StrSql = StrSql & "," & tpanro
                    StrSql = StrSql & "," & Monto
                    StrSql = StrSql & ",-1"
                    StrSql = StrSql & "," & ConvFecha(FechaDesde)
                    If Not EsNulo(FechaHasta) Then
                        StrSql = StrSql & "," & ConvFecha(FechaHasta)
                    End If
                    StrSql = StrSql & "," & PeriodoDesde & _
                        " ," & PeriodoHasta & _
                        " ," & TipoMotivo & _
                        ",'" & Motivo & "'" & _
                        " ," & tieneDistribucion & _
                        " )"

                End If
                objConn.Execute StrSql, , adExecuteNoRecords
                gnovnro = getLastIdentity(objConn, "novemp")
                Texto = "Novedad insertada "
                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                
                If (CLng(tieneDistribucion) = -1) Then
                    nenro = getLastIdentity(objConn, "novemp")
                    
                    StrSql = "INSERT INTO nov_dist " & _
                             " (novnro,auto,tiponov,concnro,tpanro,masinro,tenro,estrnro,tenro2,estrnro2,tenro3,estrnro3)" & _
                             " VALUES (" & nenro & ",0,1," & ConcNro & " ," & tpanro & "," & masinro & "," & tenro1 & "," & estrnro1 & "," & tenro2 & "," & estrnro2 & "," & tenro3 & "," & estrnro3 & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = "Distribucion Insertada "
                    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                
                End If
            End If
        End If
  End If

    If Firmas = "OK" And gnovnro <> "" Then
    ' ====================================================================
    'INSERTO EN cysfirmas
    ' ====================================================================
        StrSql = "INSERT INTO cysfirmas ("
        StrSql = StrSql & "cysfirautoriza,cysfirfecaut,cysfirmhora,cysfirusuario,"
        StrSql = StrSql & "cysfirdestino,cystipnro,cysfircodext,cysfirsecuencia,cysfirdes"
        StrSql = StrSql & ",cysfirfin,cysfiryaaut,cysfirrecha,cystipnroft"
        StrSql = StrSql & ")"
        StrSql = StrSql & "VALUES("
        StrSql = StrSql & "'" & cysfirautoriza & "'," & ConvFecha(Date) & ",'" & FormatDateTime(Now(), vbShortTime) & "'"
        StrSql = StrSql & ",'" & cysfirusuario & "','" & cysfirdestino & "'," & cystipnro & "," & gnovnro & ",1,'Novedad desde interfaz'"
        StrSql = StrSql & "," & cysfirfin & "," & cysfiryaaut & "," & cysfirrecha & "," & cystipnro
        StrSql = StrSql & ")"
               
        objConn.Execute StrSql, , adExecuteNoRecords
        Texto = "Autorización insertada "
        Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
    
    ElseIf Firmas = "OK" And nenro <> "" Then
        ' ====================================================================
        'BORRO TODAS LAS FIMAS
        ' ====================================================================
        StrSql = "DELETE cysfirmas "
        StrSql = StrSql & " WHERE cystipnro=" & cystipnro
        StrSql = StrSql & " AND cysfircodext = " & nenro
        objConn.Execute StrSql, , adExecuteNoRecords
        Texto = "Se borraron las firmas"
        Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
       ' ====================================================================
            
       ' ====================================================================
       'INSERTO FIRMA NUEVA
       ' ====================================================================
        StrSql = "INSERT INTO cysfirmas ("
        StrSql = StrSql & "cysfirautoriza,cysfirfecaut,cysfirmhora,cysfirusuario,"
        StrSql = StrSql & "cysfirdestino,cystipnro,cysfircodext,cysfirsecuencia,cysfirdes"
        StrSql = StrSql & ",cysfirfin,cysfiryaaut,cysfirrecha,cystipnroft"
        StrSql = StrSql & ")"
        StrSql = StrSql & "VALUES("
        StrSql = StrSql & "'" & cysfirautoriza & "'," & ConvFecha(Date) & ",'" & FormatDateTime(Now(), vbShortTime) & "'"
        StrSql = StrSql & ",'" & cysfirusuario & "','" & cysfirdestino & "'," & cystipnro & "," & nenro & ",1,'Novedad desde interfaz'"
        StrSql = StrSql & "," & cysfirfin & "," & cysfiryaaut & "," & cysfirrecha & "," & cystipnro
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        Texto = "Autorización insertada "
        Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
    End If


Fin:
'Cierro todo y libero
If rs_Empleado.State = adStateOpen Then rs_Empleado.Close
If rs_Concepto.State = adStateOpen Then rs_Concepto.Close
If rs_TipoPar.State = adStateOpen Then rs_TipoPar.Close
If rs_NovEmp.State = adStateOpen Then rs_NovEmp.Close
If rs_NovEmp2.State = adStateOpen Then rs_NovEmp2.Close
If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
If rs_con_for_tpa.State = adStateOpen Then rs_con_for_tpa.Close
If rs_TipoMotivo.State = adStateOpen Then rs_TipoMotivo.Close
If rs_cft_resumen.State = adStateOpen Then rs_cft_resumen.Close
If rs_estado.State = adStateOpen Then rs_estado.Close
If rs_modAsi.State = adStateOpen Then rs_modAsi.Close
If rs_Estructura.State = adStateOpen Then rs_Estructura.Close
If rs_Aux.State = adStateOpen Then rs_Aux.Close

Set rs_NovEmp = Nothing
Set rs_Empleado = Nothing
Set rs_Concepto = Nothing
Set rs_TipoPar = Nothing
Set rs_Periodo = Nothing
Set rs_con_for_tpa = Nothing
Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    Texto = Err.Description
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(1, 7)
    GoTo Fin
End Sub

Public Sub LineaModelo_293_backup(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Inserta Novedad segun formato
' Autor      : Mauricio Zwenger
'              El formato es:
'                   Formato 1
'                       Legajo; conccod; tpanro; monto
'                   ó
'                   Formato 2.1
'                       Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta
'                   Formato 2.2
'                       Legajo; conccod; tpanro; monto; FechaDesdeo
'                   ó
'                   Formato 3
'                       Legajo; conccod; tpanro; monto; MarcaRetroactividad;PeriodoDesde(MMYYYY); PeriodoHasta(MMYYYY)
'                   ó
'                   Formato 4
'                       Legajo; conccod; tpanro; monto; tipo motivo; motivo

'                   ó
'                   Formato 5
'                       Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta; tipo motivo; motivo

'                   ó
'                   Formato 6
'                       Legajo; conccod; tpanro; monto; MarcaRetroactividad;PeriodoDesde(MMYYYY); PeriodoHasta(MMYYYY); tipo motivo; motivo
'                   ó
'                   Formato 7
'                       Legajo; conccod; tpanro; monto; FechaDesde; FechaHasta; MarcaRetroactividad;PeriodoDesde(MMYYYY); PeriodoHasta(MMYYYY); tipo motivo; motivo

' Fecha      : 13/08/2014

' ---------------------------------------------------------------------------------------------

Dim pos1 As Long
Dim pos2 As Long
    
Dim Tercero As Long
Dim NroLegajo As Long

Dim ConcNro As Long
Dim ConcCod As String
Dim fornro As Long

Dim tpanro As Long
Dim Aux_Monto As String
Dim Monto As Double
Dim FechaDesde As String
Dim FechaHasta As String

Dim FechaDesdeAux As String
Dim FechaHastaAux As String

Dim PeriodoDesde
Dim PeriodoHasta

Dim auxPeriodoDesde
Dim auxPeriodoHasta

Dim TieneVigencia As Boolean
Dim EsRetroactivo As Boolean

Dim TipoMotivo As String
Dim Motivo As String

Dim Aux As String
Dim Encontro As Boolean

Dim perfsegcon As Integer


Dim tienePermiso As Boolean

Dim sinVig As Boolean
Dim StrSqlAux As String
Dim ExisteNovedad As Boolean
Dim InsertoNovedad As Boolean

Dim rs_Empleado As New ADODB.Recordset
Dim rs_Concepto As New ADODB.Recordset
Dim rs_TipoPar As New ADODB.Recordset
Dim rs_NovEmp As New ADODB.Recordset
Dim rs_NovEmp2 As New ADODB.Recordset
Dim rs_Periodo As New ADODB.Recordset
Dim rs_con_for_tpa As New ADODB.Recordset
Dim rs_seguridad As New ADODB.Recordset
Dim rs_TipoMotivo As New ADODB.Recordset
Dim rs_cft_resumen As New ADODB.Recordset

    
    On Error GoTo Manejador_De_Error
    Tabs = 1
    
    TieneVigencia = False
    EsRetroactivo = False

    Texto = "Procesando linea " & strLinea
    Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    
    NroColumna = NroColumna + 1
    'Nro de Legajo
    pos1 = 1
    pos2 = InStr(pos1, strLinea, separador)
    If IsNumeric(Mid$(strLinea, pos1, pos2 - pos1)) Then
        NroLegajo = Mid$(strLinea, pos1, pos2 - pos1)
    Else
        Texto = ": " & "El legajo no es numerico "
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call InsertaError(1, 8)
        HuboError = True
        Exit Sub
    End If
    
   
    NroColumna = NroColumna + 1
    'Concepto
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    ConcCod = Mid(strLinea, pos1, pos2 - pos1)
    ConcCod = EliminarCHInvalidosII(ConcCod, 1, "")
    
    '------------------------------------------------
    'VALIDA QUE EL USUARIO TENGA ACTIVO EL CONCEPTO
    '16/07/2014
    If listaConceptosPermitidos(ConcCod) = True Then
        tienePermiso = True
    Else
        tienePermiso = False
    End If
     
    If tienePermiso = False Then
      Texto = ": El usuario:" & usuario & " no tiene autorización sobre el concepto:" & ConcCod
      Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
      HuboError = True
    End If
    'fin
    '------------------------------------------------
    
    
    NroColumna = NroColumna + 1
    'Tipo de Parametro
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    tpanro = Mid(strLinea, pos1, pos2 - pos1)
    

    NroColumna = NroColumna + 1
    'Monto
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    If pos2 = 0 Then
        pos2 = Len(strLinea)
        Aux_Monto = Mid(strLinea, pos1, pos2)
        Monto = CDbl(Replace(CStr(Aux_Monto), SeparadorDecimal, ".")) 'Modificado ver 4.15
    Else
        Aux_Monto = Mid(strLinea, pos1, pos2 - pos1)
        Monto = CDbl(Replace(CStr(Aux_Monto), SeparadorDecimal, ".")) 'Modificado ver 4.15
        
        'Puede veniar Fecha Desde; fecha Hasta ó Retroactivo, Periodo desde , Periodo Hasta
        pos1 = pos2 + 1
        pos2 = InStr(pos1 + 1, strLinea, separador)
        
        If pos2 > 0 Then
            NroColumna = NroColumna + 1
            Aux = Mid(strLinea, pos1, pos2 - pos1)
            
            If IsDate(Aux) Then
                TieneVigencia = True
                'Fecha desde
                FechaDesde = Mid(strLinea, pos1, pos2 - pos1)
            
                NroColumna = NroColumna + 1
                'Fecha Hasta
                pos1 = pos2 + 1
                pos2 = InStr(pos1, strLinea, separador)
                
                If pos2 > 0 Then
                    FechaHasta = Mid(strLinea, pos1, pos2 - pos1)
                    If IsDate(FechaHasta) Then
                        FechaHasta = CDate(FechaHasta)
                    Else
                        If Not EsNulo(FechaHasta) Then
                            Texto = ": Fecha no valida "
                            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                            Call InsertaError(1, 4)
                            HuboError = True
                            Exit Sub
                        End If
                    End If
                    NroColumna = NroColumna + 1
                    'Marca de Retroactividad
                    pos1 = pos2 + 1
                    pos2 = InStr(pos1 + 1, strLinea, separador)
                    Aux = Mid(strLinea, pos1, pos2 - pos1)
                    If UCase(Aux) = "SI" Then
                        EsRetroactivo = True
                    Else
'                        EsRetroactivo = False
                    End If
                    If EsRetroactivo Then
                        'Periodo desde
                        pos1 = pos2 + 1
                        pos2 = InStr(pos1 + 1, strLinea, separador)
                        auxPeriodoDesde = Mid(strLinea, pos1, pos2 - pos1)
                                                
                        'Periodo hasta
                        pos1 = pos2 + 1
                        pos2 = InStr(pos1 + 1, strLinea, separador)
                        If pos2 > 0 Then 'Se especifican tipo de motivo y motivo
                            auxPeriodoHasta = Mid(strLinea, pos1, pos2 - pos1)
                            
                            'Tipo de motivo
                            pos1 = pos2 + 1
                            pos2 = InStr(pos1 + 1, strLinea, separador)
                            If pos2 > 0 Then
                                TipoMotivo = Mid(strLinea, pos1, pos2 - pos1)
                                pos1 = pos2 + 1
                                pos2 = InStr(pos1 + 1, strLinea, separador)
                                If pos2 > 0 Then
                                    'Motivo
                                    Motivo = Mid(strLinea, pos1, pos2 - pos1)
                                    Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                                Else
                                    'Motivo
                                    pos2 = Len(strLinea)
                                    Motivo = Mid(strLinea, pos1, pos2)
                                    Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                                End If
                            Else
                                pos2 = Len(strLinea)
                                TipoMotivo = Mid(strLinea, pos1, pos2)
                                'Motivo
                                Motivo = ""
                            End If
                        Else
                            pos2 = Len(strLinea)
                            auxPeriodoHasta = Mid(strLinea, pos1, pos2)
                        End If
                    Else 'el siguiente dato es el tipo de motivo
                        TipoMotivo = Aux
                        pos1 = pos2 + 1
                        pos2 = InStr(pos1 + 1, strLinea, separador)
                        If pos2 > 0 Then 'Se especifican tipo de motivo y motivo
                            'Motivo
                            Motivo = Mid(strLinea, pos1, pos2 - pos1)
                            Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                        Else
                            pos2 = Len(strLinea)
                            Motivo = Mid(strLinea, pos1, pos2)
                            Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                        End If
                    End If
                    
                Else
                    pos2 = Len(strLinea)
                    FechaHasta = Mid(strLinea, pos1, pos2)
                    TieneVigencia = True
                End If
            Else
                If UCase(Aux) = "SI" Then
                    EsRetroactivo = True
                Else
                    EsRetroactivo = False
                End If
                If EsRetroactivo Then
                    'Periodo desde
                    pos1 = pos2 + 1
                    pos2 = InStr(pos1 + 1, strLinea, separador)
                    auxPeriodoDesde = Mid(strLinea, pos1, pos2 - pos1)
                    
                    'Periodo hasta
                    pos1 = pos2 + 1
                    pos2 = InStr(pos1 + 1, strLinea, separador)
                    If pos2 > 0 Then 'Se especifican tipo de motivo y motivo
                        auxPeriodoHasta = Mid(strLinea, pos1, pos2 - pos1)
                        
                        'Tipo de motivo
                        pos1 = pos2 + 1
                        pos2 = InStr(pos1 + 1, strLinea, separador)
                        If pos2 > 0 Then
                            TipoMotivo = Mid(strLinea, pos1, pos2 - pos1)
                            pos1 = pos2 + 1
                            pos2 = InStr(pos1 + 1, strLinea, separador)
                            If pos2 > 0 Then
                                'Motivo
                                Motivo = Mid(strLinea, pos1, pos2 - pos1)
                                Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                            Else
                                'Motivo
                                pos2 = Len(strLinea)
                                Motivo = Mid(strLinea, pos1, pos2)
                                Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                            End If
                        Else
                            pos2 = Len(strLinea)
                            TipoMotivo = Mid(strLinea, pos1, pos2)
                            'Motivo
                            Motivo = ""
                        End If
                    Else
                        pos2 = Len(strLinea)
                        auxPeriodoHasta = Mid(strLinea, pos1, pos2)
                    End If
                Else 'el siguiente dato es el tipo de motivo
                    TipoMotivo = Aux
                    pos1 = pos2 + 1
                    pos2 = InStr(pos1 + 1, strLinea, separador)
                    If pos2 > 0 Then 'Se especifican tipo de motivo y motivo
                        'Motivo
                        Motivo = Mid(strLinea, pos1, pos2 - pos1)
                        Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                    Else
                        pos2 = Len(strLinea)
                        Motivo = Mid(strLinea, pos1, pos2)
                        Motivo = EliminarCHInvalidosII(Motivo, 1, "")
                    End If
                End If
            End If
        Else
            If Not pos1 >= Len(strLinea) Then
                'Viene Vigencia con fecha desde y sin fecha hasta
                pos2 = Len(strLinea)
                FechaDesde = Mid(strLinea, pos1, pos2)
                TieneVigencia = True
                FechaHasta = ""
            End If
        End If
    End If



' ====================================================================
'   Validar los parametros Levantados



'EAM- Verifica que exista el legajo para la vista de empleado
'StrSql = "SELECT * FROM v_empleadoproc where empleg = " & NroLegajo
StrSql = "SELECT * FROM empleado where empleg = " & NroLegajo
OpenRecordset StrSql, rs_Empleado
If rs_Empleado.EOF Then
    Texto = ": " & "No se encontro el legajo " & NroLegajo
    NroColumna = 1
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(1, 8)
    HuboError = True
    Exit Sub
Else
    Tercero = rs_Empleado!Ternro
End If


'Que exista el concepto
StrSql = "SELECT * FROM concepto WHERE conccod = '" & ConcCod & "'"
'StrSql = StrSql & " OR conccod = '" & Conccod & "'"
OpenRecordset StrSql, rs_Concepto
If rs_Concepto.EOF Then
    Texto = ": " & "No se encontro el Concepto " & ConcCod
    NroColumna = 2
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(2, 10)
    HuboError = True
    Exit Sub
Else
    ConcNro = rs_Concepto!ConcNro
    fornro = rs_Concepto!fornro
End If

'Que exista el tipo de Parametro
StrSql = "SELECT * FROM tipopar WHERE tpanro = " & tpanro
OpenRecordset StrSql, rs_TipoPar

If rs_TipoPar.EOF Then
    Texto = ": " & "No se encontro el Tipo de Parametro " & tpanro
    NroColumna = 3
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(3, 11)
    HuboError = True
    Exit Sub
End If


'FGZ - 27/01/2004
'Faltaria revisar que el par concepto-parametro se resuelva por novedad
StrSql = "SELECT * FROM con_for_tpa "
StrSql = StrSql & " WHERE concnro = " & ConcNro
StrSql = StrSql & " AND fornro =" & fornro
StrSql = StrSql & " AND tpanro =" & tpanro
OpenRecordset StrSql, rs_con_for_tpa

If rs_con_for_tpa.EOF Then
    Texto = ": " & "El parametro " & tpanro & " no esta asociado a la formula del concepto " & ConcCod
    NroColumna = 3
    Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, "")
    Call InsertaError(3, 11)
    HuboError = True
    Exit Sub
Else
    Encontro = False
    Do While Not Encontro And Not rs_con_for_tpa.EOF
        If Not CBool(rs_con_for_tpa!cftauto) Then
            Encontro = True
        End If
        rs_con_for_tpa.MoveNext
    Loop
    If Not Encontro Then
        Texto = ": " & "El parametro " & tpanro & " del concepto " & ConcCod & " no se resuelve por novedad "
        NroColumna = 3
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call InsertaError(3, 11)
        HuboError = True
        Exit Sub
    End If
End If


If EsRetroactivo Then
  'Busco el Periodo Desde
  
  StrSql = "SELECT * FROM periodo WHERE pliqmes = " & Left(auxPeriodoDesde, 2) & " AND pliqanio=" & Right(auxPeriodoDesde, 4)
  If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
  OpenRecordset StrSql, rs_Periodo
  If rs_Periodo.EOF Then
      Texto = ": " & "Periodo Desde Invalido  " & auxPeriodoDesde
      NroColumna = 6
      Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
      Call InsertaError(6, 36)
      HuboError = True
      Exit Sub
  Else
    PeriodoDesde = rs_Periodo("pliqnro")
  End If
  
  'Chequeo Periodo Hasta
  StrSql = "SELECT * FROM periodo WHERE pliqmes = " & Left(auxPeriodoHasta, 2) & " AND pliqanio=" & Right(auxPeriodoHasta, 4)
  If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
  OpenRecordset StrSql, rs_Periodo
  If rs_Periodo.EOF Then
      Texto = ": " & "Periodo Hasta Invalido  " & auxPeriodoHasta
      NroColumna = 7
      Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
      Call InsertaError(7, 36)
      HuboError = True
      Exit Sub
  Else
    PeriodoHasta = rs_Periodo("pliqnro")
  End If
End If

'=============================================================
'Si viene el tipo de motivo cargo ese y valido que exista sino viene, busco si hay un default
If Len(TipoMotivo) = 0 Or (TipoMotivo = "N/A") Then
    'Verifico si hay un default
    StrSql = "SELECT tipmotnro, motivo FROM cft_resumen where concnro = " & ConcNro
    StrSql = StrSql & " AND tpanro = " & tpanro
    OpenRecordset StrSql, rs_cft_resumen
    If Not rs_cft_resumen.EOF Then
        TipoMotivo = IIf(IsNull(rs_cft_resumen!tipmotnro), "0", rs_cft_resumen!tipmotnro)
    End If
    rs_cft_resumen.Close
Else
    'Valido contra BD que exista el motivo
    StrSql = "SELECT * FROM tipomotivo where tipmotnro = " & TipoMotivo
    OpenRecordset StrSql, rs_TipoMotivo
    If rs_TipoMotivo.EOF Then
        Texto = ": " & "No se encontro el tipo de motivo " & TipoMotivo
        NroColumna = 13
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call InsertaError(13, 116)
        HuboError = True
        Exit Sub
    End If
    rs_TipoMotivo.Close
End If

'Si viene motivo cargo ese, sino viene, busco si hay un default
If Len(Motivo) = 0 Or (Motivo = "N/A") Then
    'Verifico si hay un default
    StrSql = "SELECT tipmotnro, motivo FROM cft_resumen where concnro = " & ConcNro
    StrSql = StrSql & " AND tpanro = " & tpanro
    OpenRecordset StrSql, rs_cft_resumen
    If Not rs_cft_resumen.EOF Then
        Motivo = IIf(IsNull(rs_cft_resumen!Motivo), "", rs_cft_resumen!Motivo)
    End If
    rs_cft_resumen.Close
End If

If Len(TipoMotivo) = 0 Then TipoMotivo = "null"
If TipoMotivo = "N/A" Then TipoMotivo = "null"
If TipoMotivo = "0" Then TipoMotivo = "null"
If Motivo = "N/A" Then Motivo = ""

'=============================================================
'Busco si existe la Novedad

  If Not TieneVigencia Then
    StrSql = "SELECT * FROM novemp WHERE "
    StrSql = StrSql & " concnro = " & ConcNro
    StrSql = StrSql & " AND tpanro = " & tpanro
    StrSql = StrSql & " AND empleado = " & Tercero
    StrSql = StrSql & " AND (nevigencia = -1 OR nevigencia = 0) "
    StrSql = StrSql & " ORDER BY nevigencia "
    If rs_NovEmp.State = adStateOpen Then rs_NovEmp.Close
    OpenRecordset StrSql, rs_NovEmp
    
    If Not rs_NovEmp.EOF Then
    
        'Busco si existe una novedad sin vigencia
        sinVig = False
        Do While Not rs_NovEmp.EOF
            If Not CBool(rs_NovEmp!nevigencia) Then
                sinVig = True
                Exit Do 'Para que quede posicionado en la nov a modificar
            End If
            rs_NovEmp.MoveNext
        Loop
        
            'A partir de la V4.50
            'Busco si existe una misma novedad s/vigencia o c/vigencia diferente
            ExisteNovedad = False
            StrSql = "SELECT * FROM novemp WHERE "
            StrSql = StrSql & " concnro = " & ConcNro
            StrSql = StrSql & " AND tpanro = " & tpanro
            StrSql = StrSql & " AND empleado = " & Tercero
            OpenRecordset StrSql, rs_NovEmp2
            If Not rs_NovEmp2.EOF Then
                Flog.writeline "Existe una novedad"
                ExisteNovedad = True
            End If
            rs_NovEmp2.Close
'            -------------------------------------------------
    
            If Not sinVig Then ' No encontre con licencia
                If ExisteNovedad = True Then 'V4.50
                    Texto = "No se insertó la novedad. Ya existe y no se pisa."
                    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                Else
                'Inserto---------------------------------------------------------
                    If Not EsRetroactivo Then
                        StrSql = "INSERT INTO novemp (" & _
                                 "empleado,concnro,tpanro,nevalor,nevigencia"
                        StrSql = StrSql & ",tipmotnro,motivo"
                        StrSql = StrSql & ") VALUES (" & Tercero & _
                                 "," & ConcNro & _
                                 "," & tpanro & _
                                 "," & Monto & _
                                 ",0"
                        StrSql = StrSql & "," & TipoMotivo & _
                        ",'" & Motivo & "')"
                    Else
                        StrSql = "INSERT INTO novemp (" & _
                                 "empleado,concnro,tpanro,nevalor,nevigencia,nepliqdesde,nepliqhasta "
                        StrSql = StrSql & ",tipmotnro,motivo"
                        StrSql = StrSql & ") VALUES (" & Tercero & _
                                 "," & ConcNro & _
                                 "," & tpanro & _
                                 "," & Monto & _
                                 "," & CLng(TieneVigencia) & _
                                 "," & PeriodoDesde & _
                                 "," & PeriodoHasta
                        StrSql = StrSql & "," & TipoMotivo & _
                        ",'" & Motivo & "')"
                    End If
                    
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = "Novedad Insertada "
                    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                End If
            '-----------------------------------------------------------------
        Else
            'Existe una novedad pero sin vigencia ==> Actualizo
            
            Select Case CInt(AccionNovedad)
                Case -1: 'Actualizo la Novedad
                    If Not EsRetroactivo Then
                        StrSql = "UPDATE novemp SET nevalor = " & Monto
                            StrSql = StrSql & " , tipmotnro =  " & TipoMotivo & _
                            " , motivo =  '" & Motivo & "'"
                        StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                    Else
                        StrSql = "UPDATE novemp SET nevalor = " & Monto & _
                                 " , nepliqdesde =  " & PeriodoDesde & _
                                 " , nepliqhasta =  " & PeriodoHasta & _
                                 " , tipmotnro =  " & TipoMotivo & _
                                 " , motivo =  '" & Motivo & "'"
                        StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = "Novedad Actualizada "
                    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                    'Flog.Writeline Espacios(Tabulador * 1) & "Novedad Actualizada "
                Case 0: 'Mantiene Novedades
                    Texto = "No se insertó la novedad. Ya existe y no se pisa."
                    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
                Case 1: 'Suma Novedades
                    If Not EsRetroactivo Then
                        StrSql = "UPDATE novemp SET nevalor = nevalor + " & Monto
                        StrSql = StrSql & " , tipmotnro =  " & TipoMotivo
                        StrSql = StrSql & " , motivo =  '" & Motivo & "'"
                        StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                    Else
                        StrSql = "UPDATE novemp SET nevalor = nevalor + " & Monto & _
                                 " , nepliqdesde =  " & PeriodoDesde & _
                                 " , nepliqhasta =  " & PeriodoHasta
                        StrSql = StrSql & " , tipmotnro =  " & TipoMotivo & _
                        " , motivo =  '" & Motivo & "'"
                        StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = "Novedad Sumada "
                    Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
            End Select

        End If
    Else 'No encontre novedad alguna para el conc y param
        If ExisteNovedad = True Then 'V4.50
            Texto = "No se insertó la novedad. Ya existe y no se pisa."
            Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
        Else
            'Inserto
            If Not EsRetroactivo Then
                StrSql = "INSERT INTO novemp (" & _
                         "empleado,concnro,tpanro,nevalor,nevigencia"
                StrSql = StrSql & ",tipmotnro,motivo"
                StrSql = StrSql & ") VALUES (" & Tercero & _
                         "," & ConcNro & _
                         "," & tpanro & _
                         "," & Monto & _
                         ",0"
                StrSql = StrSql & "," & TipoMotivo & _
                ",'" & Motivo & "')"
            Else
                StrSql = "INSERT INTO novemp (" & _
                         "empleado,concnro,tpanro,nevalor,nevigencia,nepliqdesde,nepliqhasta "
                StrSql = StrSql & ",tipmotnro,motivo"
                StrSql = StrSql & ") VALUES (" & Tercero & _
                         "," & ConcNro & _
                         "," & tpanro & _
                         "," & Monto & _
                         "," & CLng(TieneVigencia) & _
                         "," & PeriodoDesde & _
                         "," & PeriodoHasta
                StrSql = StrSql & "," & TipoMotivo & _
                ",'" & Motivo & "')"
            End If
            objConn.Execute StrSql, , adExecuteNoRecords
            'Flog.Writeline Espacios(Tabulador * 1) & "Novedad insertada "
            Texto = "Novedad insertada "
            Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
        End If
    End If
  Else 'Tiene Vigencia
    'A partir de la V4.50
    'Busco si existe una misma novedad s/vigencia o c/vigencia diferente
    ExisteNovedad = False
    
    '*******************************************
    'VER QUE PASA CUANDO TENGO MAS DE 1 CARGADA
    '*******************************************
    StrSql = "SELECT * FROM novemp WHERE "
    StrSql = StrSql & " concnro = " & ConcNro
    StrSql = StrSql & " AND tpanro = " & tpanro
    StrSql = StrSql & " AND empleado = " & Tercero
    
    
    StrSql = StrSql & " AND ("
    If EsNulo(FechaHasta) = False Then
    
    StrSql = StrSql & "((nedesde <= " & ConvFecha(FechaDesde) & " AND nedesde <= " & ConvFecha(FechaHasta) & " AND (nehasta >= " & ConvFecha(FechaDesde) & " OR nehasta IS NULL )) )"
    StrSql = StrSql & " OR ((nedesde >= " & ConvFecha(FechaDesde) & " AND nedesde <= " & ConvFecha(FechaHasta) & " AND (nehasta >= " & ConvFecha(FechaDesde) & " OR nehasta IS NULL)))"
    
    '    StrSql = StrSql & " (nedesde <= " & ConvFecha(FechaHasta) & ")"
        'StrSql = StrSql & " AND (nehasta >= " & ConvFecha(FechaHasta)
        'StrSql = StrSql & " AND (nedesde <= " & ConvFecha(FechaDesde) & " AND nehasta is null))"
    Else
    StrSql = StrSql & "((nedesde <= " & ConvFecha(FechaDesde) & " AND nedesde <= " & ConvFecha(FechaDesde) & " AND (nehasta >= " & ConvFecha(FechaDesde) & " OR nehasta IS NULL )) )"
    StrSql = StrSql & " OR ((nedesde >= " & ConvFecha(FechaDesde) & " AND nedesde <= " & ConvFecha(FechaDesde) & " AND (nehasta >= " & ConvFecha(FechaDesde) & " OR nehasta IS NULL)))"
        'StrSql = StrSql & " AND (nedesde >= " & ConvFecha(FechaHasta) & " AND nehasta is null)"
    '    StrSql = StrSql & " AND (nedesde <= " & ConvFecha(FechaHasta) & ")"
    End If
    StrSql = StrSql & ")"
    StrSql = StrSql & " ORDER BY nehasta ASC "
    
    OpenRecordset StrSql, rs_NovEmp2
    If Not rs_NovEmp2.EOF Then
        'Flog.WRITELINE "Existe una novedad"
        ExisteNovedad = True
        Do While Not rs_NovEmp2.EOF
            InsertoNovedad = False
            StrSqlAux = ""
            '***********************************************
            '***********************************************
            '  |__________#
            '  |__________|
            If EsNulo(rs_NovEmp2!nehasta) = True And EsNulo(FechaHasta) = False Then
            'Si la FechaHastaAux es nulo, debo cerrar vigencia
                 If CDate(rs_NovEmp2!nedesde) = CDate(FechaDesde) Then
                     'Actualizo novedad, y cierro vigencia.
                     StrSqlAux = ", nehasta=" & ConvFecha(FechaHasta)
                     Exit Do
                 End If
            End If
            '***********************************************
            '***********************************************
            If EsNulo(rs_NovEmp2!nehasta) = False Then
                If CDate(rs_NovEmp2!nehasta) < CDate(FechaDesde) Then
                    '  |__________|
                    '              |__________|
                    'Inserto nuevo registro.
                    ExisteNovedad = False
                    InsertoNovedad = True
                    Exit Do
                End If
            End If
            '***********************************************
            '***********************************************
            If EsNulo(rs_NovEmp2!nehasta) = True Then
                rs_NovEmp2.MoveNext
                'If Not rs_NovEmp2.EOF Then
                If Not rs_NovEmp2.EOF And EsNulo(FechaHasta) = False Then
                    If CDate(rs_NovEmp2!nehasta) > CDate(FechaHasta) Then
                        '            |__________|
                        '|__________|
                        'Inserto nuevo registro.
                        ExisteNovedad = False
                        InsertoNovedad = True
                        Exit Do
                    End If
                    'rs_NovEmp2.MovePrevious
                ElseIf EsNulo(FechaHasta) = False Then
                    rs_NovEmp2.MovePrevious
                    'Y ahora que hago?
                    If CDate(rs_NovEmp2!nedesde) > CDate(FechaHasta) Then
                        '            |__________|
                        '|__________|
                        'Inserto nuevo registro.
                        ExisteNovedad = False
                        InsertoNovedad = True
                        Exit Do
                    End If
                Else
                    rs_NovEmp2.MovePrevious
                End If
            End If
            '***********************************************
            '***********************************************
            rs_NovEmp2.MoveNext
        Loop
        '-------------------------------------------
        'V4.54 | Guardo fechas aux. de la licencia existente
        '____________________________________________
        If Not rs_NovEmp2.EOF Then
            FechaDesdeAux = rs_NovEmp2!nedesde
            If EsNulo(rs_NovEmp2!nehasta) Then
                FechaHastaAux = ""
            Else
                FechaHastaAux = rs_NovEmp2!nehasta
            End If
        Else
            FechaDesdeAux = FechaDesde
            FechaHastaAux = FechaHasta
        End If
        '-------------------------------------------
    Else
        FechaDesdeAux = FechaDesde
        FechaHastaAux = FechaHasta
    End If
    rs_NovEmp2.Close
   '---------------------------------------------------------
   '---------------------------------------------------------
   '---------------------------------------------------------
   'VALIDO FECHAS | DECIDO DE QUE FORMA ACTUALIZO / INSERTO
'   InsertoNovedad = False
'   StrSqlAux = ""
''  |__________#
''  |__________|
'   If EsNulo(FechaHastaAux) = True And EsNulo(FechaHasta) = False Then
'   'Si la FechaHastaAux es nulo, debo cerrar vigencia
'        If CDate(FechaDesdeAux) = CDate(FechaDesde) Then
'            StrSqlAux = ", nehasta=" & ConvFecha(FechaHasta)
'            'Actualizo novedad, y cierro vigencia.
'        End If
'   End If
   

'   If EsNulo(FechaHastaAux) = False Then
'        If CDate(FechaHastaAux) < CDate(FechaDesde) Then
'            '  |__________|
'            '              |__________|
'            'Inserto nuevo registro.
'            ExisteNovedad = False
'            InsertoNovedad = True
'        End If
'        '***********************************************
'        'If CDate(FechaHastaAux) > CDate(FechaHasta) Then
'            '            |__________|
'            '|__________|
'            'Inserto nuevo registro.
'        'End If
'
'
'   End If
   
   '---------------------------------------------------------
   '---------------------------------------------------------
   '---------------------------------------------------------
   
   
   '_______________________________________________________________________
    'Reviso que no se pise
    StrSql = "SELECT * FROM novemp WHERE "
    StrSql = StrSql & " concnro = " & ConcNro
    StrSql = StrSql & " AND tpanro = " & tpanro
    StrSql = StrSql & " AND empleado = " & Tercero
    'StrSql = StrSql & " AND (nevigencia = 0 "
    StrSql = StrSql & " AND nevigencia = -1 "
    If Not EsNulo(FechaHastaAux) Then
        StrSql = StrSql & " AND nedesde = " & ConvFecha(FechaDesdeAux)
        StrSql = StrSql & " AND nehasta = " & ConvFecha(FechaHastaAux)
    Else
        StrSql = StrSql & " AND nedesde = " & ConvFecha(FechaDesdeAux)
        StrSql = StrSql & " AND nehasta is null"
    End If
    
    'Se comento con V4.54
'    If Not EsNulo(FechaHasta) Then
''        StrSql = StrSql & " AND (nedesde <= " & ConvFecha(FechaHasta)
''        StrSql = StrSql & " AND nehasta >= " & ConvFecha(FechaDesde) & ")"
''        StrSql = StrSql & " OR  (nedesde <= " & ConvFecha(FechaHasta)
''        StrSql = StrSql & " AND nehasta is null )))"
'        StrSql = StrSql & " AND nedesde = " & ConvFecha(FechaDesde)
'        StrSql = StrSql & " AND nehasta = " & ConvFecha(FechaHasta)
'    Else
'        StrSql = StrSql & " AND nedesde = " & ConvFecha(FechaDesde)
'        StrSql = StrSql & " AND nehasta is null"
'    End If
    If rs_NovEmp.State = adStateOpen Then rs_NovEmp.Close
    OpenRecordset StrSql, rs_NovEmp
    
    'If Not rs_NovEmp.EOF Then
    If Not rs_NovEmp.EOF And InsertoNovedad = False Then ' 4.54
    
        'Existe/n novedad/es con vigencia ==>
        Select Case CInt(AccionNovedad)
            Case -1: 'Actualizo la Novedad
                If Not EsRetroactivo Then
                    StrSql = "UPDATE novemp SET nevalor = " & Monto
                    StrSql = StrSql & " , tipmotnro =  " & TipoMotivo
                    StrSql = StrSql & " , motivo =  '" & Motivo & "'"
                    '4.54 ---
                    StrSql = StrSql & StrSqlAux
                    '-------
                    
                    StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                Else
                    StrSql = "UPDATE novemp SET nevalor = " & Monto & _
                             " , nepliqdesde =  " & PeriodoDesde & _
                             " , nepliqhasta =  " & PeriodoHasta
                    StrSql = StrSql & " , tipmotnro =  " & TipoMotivo & _
                    " , motivo =  '" & Motivo & "'"
                    StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                End If
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = "Novedad Actualizada "
                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
            Case 0: 'Mantiene Novedades
                Texto = "No se insertó la novedad. Ya existe y no se pisa."
                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
            Case 1: 'Suma Novedades
                If Not EsRetroactivo Then
                    StrSql = "UPDATE novemp SET nevalor = nevalor + " & Monto
                    StrSql = StrSql & " , tipmotnro =  " & TipoMotivo
                    StrSql = StrSql & " , motivo =  '" & Motivo & "'"
                    StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                Else
                    StrSql = "UPDATE novemp SET nevalor = nevalor + " & Monto & _
                             " , nepliqdesde =  " & PeriodoDesde & _
                             " , nepliqhasta =  " & PeriodoHasta
                    StrSql = StrSql & " , tipmotnro =  " & TipoMotivo & _
                    " , motivo =  '" & Motivo & "'"
                    StrSql = StrSql & " WHERE nenro = " & rs_NovEmp!nenro
                End If
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = "Novedad Sumada "
                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
        End Select
        
    Else
        
        If ExisteNovedad = True Then 'V4.50
                Texto = "No se insertó la novedad. Ya existe y no se pisa."
                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
        Else
                If Not EsRetroactivo Then
                    StrSql = "INSERT INTO novemp ("
                    StrSql = StrSql & "empleado,concnro,tpanro,nevalor,nevigencia,nedesde"
                    If Not EsNulo(FechaHasta) Then
                        StrSql = StrSql & ",nehasta"
                    End If
                    StrSql = StrSql & ",tipmotnro,motivo"
                    StrSql = StrSql & ") VALUES (" & Tercero
                    StrSql = StrSql & "," & ConcNro
                    StrSql = StrSql & "," & tpanro
                    StrSql = StrSql & "," & Monto
                    StrSql = StrSql & ",-1"
                    StrSql = StrSql & "," & ConvFecha(FechaDesde)
                    If Not EsNulo(FechaHasta) Then
                        StrSql = StrSql & "," & ConvFecha(FechaHasta)
                    End If
                    StrSql = StrSql & "," & TipoMotivo & _
                    ",'" & Motivo & "')"
                Else
                    StrSql = "INSERT INTO novemp ("
                    StrSql = StrSql & "empleado,concnro,tpanro,nevalor,nevigencia,nedesde"
                    If Not EsNulo(FechaHasta) Then
                        StrSql = StrSql & ",nehasta"
                    End If
                    StrSql = StrSql & ",nepliqdesde,nepliqhasta"
                    StrSql = StrSql & ",tipmotnro,motivo"
                    StrSql = StrSql & ") VALUES (" & Tercero
                    StrSql = StrSql & "," & ConcNro
                    StrSql = StrSql & "," & tpanro
                    StrSql = StrSql & "," & Monto
                    StrSql = StrSql & ",-1"
                    StrSql = StrSql & "," & ConvFecha(FechaDesde)
                    If Not EsNulo(FechaHasta) Then
                        StrSql = StrSql & "," & ConvFecha(FechaHasta)
                    End If
                    StrSql = StrSql & "," & PeriodoDesde
                    StrSql = StrSql & "," & PeriodoHasta
                    StrSql = StrSql & "," & TipoMotivo & _
                    ",'" & Motivo & "')"
                End If
                objConn.Execute StrSql, , adExecuteNoRecords
                'Flog.Writeline Espacios(Tabulador * 1) & "Novedad insertada "
                Texto = "Novedad insertada "
                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
            End If
        
        
        End If
    
    

  End If







Fin:
'Cierro todo y libero
If rs_NovEmp.State = adStateOpen Then rs_NovEmp.Close
If rs_Empleado.State = adStateOpen Then rs_Empleado.Close
If rs_Concepto.State = adStateOpen Then rs_Concepto.Close
If rs_TipoPar.State = adStateOpen Then rs_TipoPar.Close
If rs_Periodo.State = adStateOpen Then rs_Periodo.Close
If rs_con_for_tpa.State = adStateOpen Then rs_con_for_tpa.Close

Set rs_NovEmp = Nothing
Set rs_Empleado = Nothing
Set rs_Concepto = Nothing
Set rs_TipoPar = Nothing
Set rs_Periodo = Nothing
Set rs_con_for_tpa = Nothing
Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    Texto = Err.Description
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(1, 7)
    GoTo Fin
End Sub

Public Sub LineaModelo_294(ByVal strLinea As String)
'Importacion de instituciones
'formato
'descripcion|abrev|codext|pais|educativa

Dim rs_consultas As New ADODB.Recordset
Dim Desc As String
Dim descabr As String
Dim CodExt As String
Dim Pais As String
Dim codPais As Integer
Dim educativa As String
Dim codEduca As Integer
Dim datos
Dim codIns As Integer
On Error GoTo Manejador_De_Error
Tabs = 1

Texto = "Procesando linea " & strLinea
Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
datos = Split(strLinea, separador)
If UBound(datos) = 4 Then
    Desc = datos(0)
    descabr = datos(1)
    CodExt = datos(2)
    Pais = datos(3)
    educativa = datos(4)
    Flog.writeline "Descripcion:" & Desc
    Flog.writeline "Desc Abrev:" & descabr
    Flog.writeline "codext:" & CodExt
    Flog.writeline "pais:" & Pais
    Flog.writeline "educativa:" & educativa
    
    If UCase(educativa) = "SI" Then
        codEduca = -1
    Else
        If UCase(educativa) = "NO" Then
            codEduca = 0
        Else
            Flog.writeline "No se configuro si la institucion es educativa o no "
            Exit Sub
        End If
    End If
    'busco el cod del pais
    StrSql = "SELECT paisnro, paisdesc "
    StrSql = StrSql & " FROM pais "
    StrSql = StrSql & " WHERE UPPER(paisdesc)='" & UCase(Pais) & "'"
    OpenRecordset StrSql, rs_consultas
    If Not rs_consultas.EOF Then
        codPais = rs_consultas!Paisnro
        Flog.writeline "El codigo del pais:" & Pais & " es " & codPais
    Else
        Flog.writeline "No se encontro el codigo del pais:" & Pais & " se aborta el proceso."
        GoTo Manejador_De_Error
    End If
    rs_consultas.Close
    
    'valido los campos obligatorios
    If EsNulo(Desc) Or EsNulo(CodExt) Or EsNulo(educativa) Or UCase(Desc) = "N/A" Or UCase(CodExt) = "N/A" Or UCase(educativa) = "N/A" Then
        Flog.writeline "Los campos descripcion, cod externo y educativa no pueden ser vacion ni N/A. Se aborta la linea"
        GoTo Manejador_De_Error
    End If
    
    'busco si ya existe una institucion con ese nombre o con ese codigo para el pais y del mismo tipo
    StrSql = " SELECT * FROM institucion "
    StrSql = StrSql & " WHERE "
    StrSql = StrSql & " (UPPER(instdes) = '" & Desc & "' "
    StrSql = StrSql & " OR (UPPER(instabre) = '" & descabr & "' "
    StrSql = StrSql & " OR UPPER(codext) = '" & CodExt & "') "
    StrSql = StrSql & " AND (paisnro= " & codPais & " or paisnro is null) And instedu = " & codEduca & ")"
    OpenRecordset StrSql, rs_consultas
    If rs_consultas.EOF Then
        'no existen los datos en la base ===> insertamos
        StrSql = " INSERT INTO institucion "
        StrSql = StrSql & " (instdes, instabre, codext,paisnro, instedu)"
        StrSql = StrSql & " VALUES "
        StrSql = StrSql & "("
        StrSql = StrSql & "'" & Desc & "'"
        StrSql = StrSql & ",'" & descabr & "'"
        StrSql = StrSql & ",'" & CodExt & "'"
        StrSql = StrSql & "," & codPais
        StrSql = StrSql & "," & codEduca
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline "Se inserto la Institucion:" & Desc & " con codigo: " & CodExt
    Else
        If Pisa = True Then  'si esta seteado pisar piso los datos
            codIns = rs_consultas!InstNro
            StrSql = " UPDATE institucion SET "
            StrSql = StrSql & " instdes='" & Desc & "'"
            StrSql = StrSql & " ,instabre='" & descabr & "'"
            StrSql = StrSql & " ,codext='" & CodExt & "'"
            StrSql = StrSql & " WHERE instnro=" & codIns
            objConn.Execute StrSql, , adExecuteNoRecords
            Flog.writeline "Se actualizaron los datos de la Institucion: cod:" & codIns & " descripcion: " & Desc & " con codigo: " & CodExt
        Else
            Flog.writeline " se encontro una institucion con los mismos datos, no se pisan "
            Flog.writeline "institucion: " & rs_consultas!Instdes & " cod externo:" & CodExt
        End If
    End If
    rs_consultas.Close
Else
    Flog.writeline " Se esperaban 5 parametros, se aborta el proceso"
    GoTo Manejador_De_Error:
End If

Exit Sub
Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    Texto = Err.Description
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(1, 7)
    Exit Sub
End Sub

Public Sub LineaModelo_295(ByVal strLinea As String)
'Importacion de carreras
'formato
'descripcion|descext|codext

Dim rs_consultas As New ADODB.Recordset
Dim Desc As String
Dim descext As String
Dim CodExt As String
Dim datos
Dim codIns As Integer
Dim codCarr As Integer
On Error GoTo Manejador_De_Error
Tabs = 1

Texto = "Procesando linea " & strLinea
Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
datos = Split(strLinea, separador)
If UBound(datos) = 2 Then
    Desc = datos(0)
    descext = datos(1)
    CodExt = datos(2)
    Flog.writeline "Descripcion:" & Desc
    Flog.writeline "Desc Extendida:" & descext
    Flog.writeline "codext:" & CodExt
    
    'valido los campos obligatorios
    If EsNulo(Desc) Or EsNulo(CodExt) Or UCase(Desc) = "N/A" Or UCase(CodExt) = "N/A" Then
        Flog.writeline "Los campos descripcion y cod externo no pueden ser vacios ni N/A. Se aborta la linea"
        GoTo Manejador_De_Error
    End If
    
      
    'busco si ya existe una institucion con ese nombre o con ese codigo para el pais y del mismo tipo
    StrSql = " SELECT * FROM cap_carr_edu "
    StrSql = StrSql & " WHERE "
    StrSql = StrSql & " (REPLACE(UPPER(carredudesabr),' ', '' ) = '" & Trim(Desc) & "' "
    StrSql = StrSql & " OR UPPER(codext) = '" & CodExt & "') "
    OpenRecordset StrSql, rs_consultas
    If rs_consultas.EOF Then
        'no existen los datos en la base ===> insertamos
        StrSql = " INSERT INTO cap_carr_edu "
        StrSql = StrSql & " (carredudesabr, carredudesext, codext)"
        StrSql = StrSql & " VALUES "
        StrSql = StrSql & "("
        StrSql = StrSql & "'" & Desc & "'"
        StrSql = StrSql & ",'" & descext & "'"
        StrSql = StrSql & ",'" & CodExt & "'"
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline "Se inserto la carrera:" & Desc & " con codigo: " & CodExt
    Else
        Flog.writeline "Ya existe una carrera con esos datos"
        If Pisa Then 'si esta seteado pisar piso los datos
            codCarr = rs_consultas!CarreduNro
            StrSql = " UPDATE cap_carr_edu SET"
            StrSql = StrSql & " carredudesabr='" & Desc & "'"
            StrSql = StrSql & " ,carredudesext='" & descext & "'"
            StrSql = StrSql & " ,codext='" & CodExt & "'"
            StrSql = StrSql & " WHERE carredunro=" & codCarr
            objConn.Execute StrSql, , adExecuteNoRecords
            Flog.writeline "Se actualizaron los datos de la Institucion: cod:" & codIns & " descripcion: " & Desc & " con codigo: " & CodExt
        Else
            Flog.writeline "Los datos no se pisan"
            Flog.writeline "carrera: " & rs_consultas!Carredudesabr & " cod externo:" & CodExt
        End If
    End If
    rs_consultas.Close
Else
    Flog.writeline " Se esperaban 3 parametros, se aborta el proceso"
    GoTo Manejador_De_Error:
End If

Exit Sub
Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    Texto = Err.Description
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(1, 7)
    Exit Sub
End Sub

Public Sub LineaModelo_296(ByVal strLinea As String)
'Importacion de archivo t-registro
'---------------------------------------------------------------------------
'pais|regimen|tipoInstitucion|Institucion|codInstitucion|Carrera|codCarrera
'---------------------------------------------------------------------------

Dim rs_consultas As New ADODB.Recordset
Dim Paisdesc As String
Dim paisCod As Integer

Dim regimenDesc As String
Dim regimenCod As Integer

Dim tipoInstDesc As String
Dim tipoInstCod As Integer

Dim InstDesc As String
Dim instCodExt As String
Dim instCod As Integer

Dim carrEduDesc As String
Dim carrEduCodExt As String
Dim carrEduCod As Integer
Dim datos
On Error GoTo Manejador_De_Error
Tabs = 1

Texto = "Procesando linea " & strLinea
Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
datos = Split(strLinea, separador)
If UBound(datos) = 6 Then
    Paisdesc = datos(0)
    Flog.writeline "Pais:" & Paisdesc
    regimenDesc = datos(1)
    Flog.writeline "Regimen:" & regimenDesc
    tipoInstDesc = datos(2)
    Flog.writeline "Tipo Institucion:" & tipoInstDesc
    instCodExt = datos(3)
    Flog.writeline "cod Externo Institucion:" & instCodExt
    InstDesc = datos(4)
    Flog.writeline "Institucion:" & InstDesc
    carrEduCodExt = datos(5)
    Flog.writeline "cod Externo Carrera:" & carrEduCodExt
    carrEduDesc = datos(6)
    Flog.writeline "Carrera:" & carrEduDesc
    
    'valido los campos obligatorios
'    If EsNulo(Desc) Or EsNulo(codext) Or UCase(Desc) = "N/A" Or UCase(codext) = "N/A" Then
'        Flog.writeline "Los campos descripcion y cod externo no pueden ser vacios ni N/A. Se aborta la linea"
'        GoTo Manejador_De_Error
'    End If
'
    'valido si existe el pais, sino existe lo creo
    StrSql = "SELECT * FROM pais "
    StrSql = StrSql & " WHERE UPPER(paisdesc)='" & UCase(Paisdesc) & "'"
    OpenRecordset StrSql, rs_consultas
    If Not rs_consultas.EOF Then
        Flog.writeline "Se encontro el pais:" & UCase(Paisdesc) & " codigo:" & rs_consultas!Paisnro
        paisCod = rs_consultas!Paisnro
    Else
        Flog.writeline "No se encontro el pais:" & UCase(Paisdesc) & " se va a crear."
        StrSql = " INSERT INTO paisnro (paisdesc) "
        StrSql = StrSql & " VALUES "
        StrSql = StrSql & "("
        StrSql = StrSql & "'" & UCase(Paisdesc) & "'"
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline "Se inserto el pais:" & Paisdesc
    End If
    rs_consultas.Close
    
    'Valido si existe el regimen
    StrSql = " SELECT * FROM institucion_regimen "
    StrSql = StrSql & " WHERE REPLACE(UPPER(descRegimen),' ', '' ) = '" & Trim(UCase(regimenDesc)) & "'"
    OpenRecordset StrSql, rs_consultas
     Flog.writeline "Regimen:" & StrSql
    If Not rs_consultas.EOF Then
        Flog.writeline "Se encontro el tipo de regimen"
        regimenCod = rs_consultas!codRegimen
    Else
        Flog.writeline "No se encontro el tipo de regimen."
    End If
    rs_consultas.Close
    
    'Valido si existe el tipo de institucion
    StrSql = " SELECT * FROM institucion_tipo"
    StrSql = StrSql & " WHERE "
    StrSql = StrSql & " REPLACE(UPPER(desctipo),' ', '' ) = '" & Trim(UCase(tipoInstDesc)) & "'"
    StrSql = StrSql & " AND paisnro=" & paisCod
    Flog.writeline "Tipo de institucion:" & StrSql
    OpenRecordset StrSql, rs_consultas
    If Not rs_consultas.EOF Then
        Flog.writeline "Se encontro el tipo de institucion"
        tipoInstCod = rs_consultas!codtipo
    Else
        Flog.writeline "No se encontro el tipo de institucion."
    End If
    rs_consultas.Close
    
    'Valido si existe la institucion
    StrSql = " SELECT * FROM institucion"
    StrSql = StrSql & " WHERE "
    StrSql = StrSql & " ( REPLACE(UPPER(instdes),' ', '' ) = '" & Trim(UCase(InstDesc)) & "'"
    StrSql = StrSql & " OR UPPER(codext) = " & UCase(instCodExt)
    StrSql = StrSql & ") AND paisnro=" & paisCod
     Flog.writeline "Institucion:" & StrSql
    OpenRecordset StrSql, rs_consultas
    If Not rs_consultas.EOF Then
        Flog.writeline "Se encontro la institucion"
        instCod = rs_consultas!InstNro
    Else
        Flog.writeline "No se encontro la institucion, se va a crear una nueva institucion."
        StrSql = "INSERT INTO institucion "
        StrSql = StrSql & "(instdes,instabre,instedu,codext,paisnro,regimen,tipoinst)"
        StrSql = StrSql & " VALUES "
        StrSql = StrSql & "("
        StrSql = StrSql & "'" & UCase(InstDesc) & "',"
        StrSql = StrSql & "'" & UCase(InstDesc) & "',"
        StrSql = StrSql & "-1,"
        StrSql = StrSql & "'" & UCase(instCodExt) & "',"
        StrSql = StrSql & paisCod & ","
        StrSql = StrSql & regimenCod & ","
        StrSql = StrSql & tipoInstCod
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline "Se inserto la institucion." & StrSql
        'busco el codigo insertado
        instCod = getLastIdentity(objConn, "institucion")
    End If
    rs_consultas.Close
    
    'Valido si existe la carrera
    StrSql = " SELECT * FROM cap_carr_edu"
    StrSql = StrSql & " WHERE "
    StrSql = StrSql & " REPLACE(UPPER(carredudesabr),' ', '' ) = '" & UCase(Replace(carrEduDesc, " ", "")) & "'"
       Flog.writeline "Carrera:" & StrSql
    OpenRecordset StrSql, rs_consultas
   
    If Not rs_consultas.EOF Then
        Flog.writeline "Se encontro la carrera"
        carrEduCod = rs_consultas!CarreduNro
    Else
        Flog.writeline "No se encontro la carrera, se va a crear una nueva carrera."
        StrSql = " INSERT INTO cap_carr_edu "
        StrSql = StrSql & "(carredudesabr)"
        StrSql = StrSql & " VALUES "
        StrSql = StrSql & "("
        StrSql = StrSql & "'" & UCase(carrEduDesc) & "'"
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline "Se inserto la carrera."
        'busco el codigo insertado
        carrEduCod = getLastIdentity(objConn, "cap_carr_edu")
        'hasta aca
    End If
    rs_consultas.Close
    
    'verifico si la carrera esta asignada a la institucion
    StrSql = " SELECT * FROM carrera_institucion"
    StrSql = StrSql & " WHERE "
    StrSql = StrSql & " carrnro=" & carrEduCod
    StrSql = StrSql & " AND instnro=" & instCod
    StrSql = StrSql & " AND upper(codcarrera)='" & UCase(carrEduCodExt) & "'"
    OpenRecordset StrSql, rs_consultas
    Flog.writeline "query carrera_inst:" & StrSql
    If Not rs_consultas.EOF Then
        Flog.writeline "La carrera ya esta asociada, se salta de linea"
    Else
        Flog.writeline "No se encontro la asociacion,Se inserta"
        StrSql = "INSERT INTO carrera_institucion "
        StrSql = StrSql & "(carrnro, instnro, codcarrera)"
        StrSql = StrSql & " VALUES "
        StrSql = StrSql & "("
        StrSql = StrSql & carrEduCod & ","
        StrSql = StrSql & instCod & ","
        StrSql = StrSql & "'" & carrEduCodExt & "'"
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline "Se inserto la asociacion."
    End If
    rs_consultas.Close
'
'    'busco si ya existe una institucion con ese nombre o con ese codigo para el pais y del mismo tipo
'    StrSql = " SELECT * FROM cap_carr_edu "
'    StrSql = StrSql & " WHERE "
'    StrSql = StrSql & " (UPPER(carredudesabr) = '" & Desc & "' "
'    StrSql = StrSql & " OR UPPER(codext) = '" & codext & "') "
'    OpenRecordset StrSql, rs_consultas
'    If rs_consultas.EOF Then
'        'no existen los datos en la base ===> insertamos
'        StrSql = " INSERT INTO cap_carr_edu "
'        StrSql = StrSql & " (carredudesabr, carredudesext, codext)"
'        StrSql = StrSql & " VALUES "
'        StrSql = StrSql & "("
'        StrSql = StrSql & "'" & Desc & "'"
'        StrSql = StrSql & ",'" & descext & "'"
'        StrSql = StrSql & ",'" & codext & "'"
'        StrSql = StrSql & ")"
'        objConn.Execute StrSql, , adExecuteNoRecords
'        Flog.writeline "Se inserto la carrera:" & Desc & " con codigo: " & codext
'    Else
'        Flog.writeline "Ya existe una carrera con esos datos"
'        If Pisa Then 'si esta seteado pisar piso los datos
'            codCarr = rs_consultas!CarreduNro
'            StrSql = " UPDATE cap_carr_edu SET"
'            StrSql = StrSql & " carredudesabr='" & Desc & "'"
'            StrSql = StrSql & " ,carredudesext='" & descext & "'"
'            StrSql = StrSql & " ,codext='" & codext & "'"
'            StrSql = StrSql & " WHERE carredunro=" & codCarr
'            objConn.Execute StrSql, , adExecuteNoRecords
'            Flog.writeline "Se actualizaron los datos de la Institucion: cod:" & codIns & " descripcion: " & Desc & " con codigo: " & codext
'        Else
'            Flog.writeline "Los datos no se pisan"
'            Flog.writeline "carrera: " & rs_consultas!Carredudesabr & " cod externo:" & codext
'        End If
'    End If
'    rs_consultas.Close
Else
    Flog.writeline " Se esperaban 3 parametros, se aborta el proceso"
    GoTo Manejador_De_Error:
End If

Exit Sub
Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    Texto = Err.Description
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(1, 7)
    Exit Sub
End Sub

Public Sub LineaModelo_297(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Inserta los estudios formales del empleado - Peru
' Autor      : Sebastian Stremel
' Fecha      : 10/10/2014
' Ultima Mod.:
' ---------------------------------------------------------------------------------------------

Dim Nro_Legajo As Long
Dim Ternro As Long
Dim nivdesc As String
Dim Titdesabr As String
Dim Instdes As String
Dim Carredudesabr As String
Dim l_tildeCompleto As Boolean
Dim CapComp As Long
Dim CapcantMat As Long
Dim CapfecDes
Dim CapfecHas
Dim CapestAct As Long
Dim CapRango As String
Dim CapProm As String
Dim CapActual As Long
Dim FutDesc As String
Dim CapanoCur As Long
Dim nivnro As Integer
Dim TitNro As Integer
Dim InstNro As Integer
Dim CarreduNro As Integer

Dim Linea
Dim Paisnro As Integer
Dim Paisdesc As String
Dim capestrrhh As Integer

Dim rs_Empleado As New ADODB.Recordset
Dim rs_Nivel As New ADODB.Recordset
Dim rs_Titulo As New ADODB.Recordset
Dim rs_institucion As New ADODB.Recordset
Dim rs_Cap_Carr_Edu As New ADODB.Recordset
Dim rs_Cap_Estformal As New ADODB.Recordset
Dim rs_Relacion As New ADODB.Recordset


On Error GoTo Manejador_De_Error
    Tabs = 1
    
    Texto = "Procesando linea " & strLinea
    Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    
    Linea = Split(strLinea, separador)
    
    'Nro de legajo
    Flog.writeline "Numero de legajo: " & Linea(0)
    Nro_Legajo = Linea(0)
    If CStr(Nro_Legajo) = "" Then
        Flog.writeline "El legajo no puede ser vacio"
        Exit Sub
    End If
    
    'Pais de la institucion
    Flog.writeline "Pais de la institucion: " & Linea(1)
    Paisdesc = Linea(1)
    'busco el codigo del pais
    StrSql = " SELECT paisnro FROM pais "
    StrSql = StrSql & " WHERE upper(paisdesc)='" & UCase(Paisdesc) & "'"
    OpenRecordset StrSql, rs_Empleado
    If Not rs_Empleado.EOF Then
        Paisnro = rs_Empleado!Paisnro
    Else
        Flog.writeline "No se encontro el pais, se aborta la linea."
        Exit Sub
    End If
    
    'Institucion
    Flog.writeline "Institucion: " & Linea(2)
    Instdes = UCase(Linea(2))

    'Nivel de estudio
    Flog.writeline "Nivel de estudio: " & Linea(3)
    nivdesc = UCase(Linea(3))
        
    'Titulo
    Flog.writeline "Titulo: " & Linea(4)
    Titdesabr = Linea(4)

    'Carrera Educacional
    Flog.writeline "Carrera Educacional:" & Linea(5)
    Carredudesabr = UCase(Linea(5))

    'Completo
    Flog.writeline "Estudio completo SI/NO: " & Linea(6)
    If UCase(Linea(6)) = "SI" Then
        CapComp = -1
    Else
        CapComp = 0
    End If

    'Cantidad de Materias
    Flog.writeline "Cantidad de materias: " & Linea(7)
    If Not IsNumeric(Linea(7)) Then
        CapcantMat = 0
    Else
        CapcantMat = Linea(7)
    End If
    
    'Fecha desde
    Flog.writeline "Fecha desde (DD/MM/AAAA): " & Linea(8)
    CapfecDes = ConvFecha(CDate(Left(Linea(8), 10)))

    'Fecha hasta
    Flog.writeline "Fecha hasta (DD/MM/AAAA): " & Linea(9)
    CapfecHas = Left(Linea(9), 10)

    'Estudia Actualmente
    Flog.writeline "Estudia Actualmente SI/NO " & Linea(10)
    If UCase(Trim(Linea(10))) = "SI" Then
        CapestAct = -1
    Else
        CapestAct = 0
    End If

    'Rango
    Flog.writeline "Rango: " & Linea(11)
    CapRango = Linea(11)

    'Promedio
    Flog.writeline "Promedio: " & Linea(12)
    If Not IsNumeric(Linea(12)) Then
        CapProm = 0
    Else
        CapProm = CStr(CDbl(Replace(CStr(Linea(12)), SeparadorDecimal, ".")))
    End If
    
    'Futuro Estudio
    Flog.writeline "Futuro Estudio SI/NO: " & Linea(13)
    If UCase(Trim(Linea(13))) = "SI" Then
        CapActual = -1
    Else
        CapActual = 0
    End If
    
    'Descripcion
    Flog.writeline "Descripcion: " & Linea(14)
    FutDesc = Left(Linea(14), 200)
    
    'Año Cursado
    Flog.writeline "Año cursado: " & Linea(15)
    If Not IsNumeric(Linea(15)) Then
        CapanoCur = 0
    Else
        CapanoCur = CInt(Linea(15))
    End If
    

            
    ' ====================================================================
    '   Validar los parametros Levantados
    ' ====================================================================
      
    'Que exista el legajo
    If Nro_Legajo <> 0 Then
      StrSql = "SELECT * FROM empleado where empleg = " & Nro_Legajo
      OpenRecordset StrSql, rs_Empleado
      If rs_Empleado.EOF Then
          Flog.writeline Espacios(Tabulador * 1) & "No se encontro el legajo " & Nro_Legajo
          FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": No se encontro el legajo " & Nro_Legajo
          InsertaError 1, 8
          HuboError = True
          Exit Sub
      Else
          Ternro = rs_Empleado!Ternro
      End If
    End If
    
    'Que exista la institucion
    If Len(Instdes) > 0 Then
        StrSql = "SELECT * FROM institucion "
        StrSql = StrSql & " WHERE REPLACE(upper(instdes),' ', '' ) = '" & UCase(Replace(Instdes, " ", "")) & "'"
        
        StrSql = StrSql & " AND paisnro=" & Paisnro
        OpenRecordset StrSql, rs_institucion
        If rs_institucion.EOF Then
            Flog.writeline "La institucion no existe, se aborta"
            Exit Sub
        Else
            InstNro = rs_institucion!InstNro
        End If
        rs_institucion.Close
    End If
    
   
    'Que exista el nivel de estudio
    If Len(nivdesc) > 0 Then
        StrSql = "SELECT * FROM nivest WHERE REPLACE(upper(nivdesc),' ', '' ) = '" & UCase(Replace(nivdesc, " ", "")) & "'"
        OpenRecordset StrSql, rs_Nivel
        If rs_Nivel.EOF Then
            Flog.writeline "No existe el nivel de estudio."
            nivnro = 0
        Else
            nivnro = rs_Nivel!nivnro
        End If
        rs_Nivel.Close
    End If
    
      
    'Que exista el titulo sino lo creo
    If Len(Titdesabr) > 0 Then
        StrSql = "SELECT * FROM titulo "
        StrSql = StrSql & " WHERE REPLACE(upper(titdesabr),' ', '' ) = '" & UCase(Replace(Titdesabr, " ", "")) & "'"
        If nivnro <> 0 Then
            StrSql = StrSql & " AND (nivnro =" & nivnro & " OR nivnro is null)"
        End If
        StrSql = StrSql & " AND (instnro =" & InstNro & " OR InstNro is null)"
        OpenRecordset StrSql, rs_Titulo
        If rs_Titulo.EOF Then
            Flog.writeline "No se encontro el titulo"
            TitNro = 0
        Else
            TitNro = rs_Titulo!TitNro
        End If
        rs_Titulo.Close
    End If
    
 
    
    'Que exista la carrera educacional sino lo creo
    If Len(Carredudesabr) > 0 Then
        StrSql = "SELECT * FROM cap_carr_edu WHERE REPLACE(upper(carredudesabr),' ', '' ) = '" & UCase(Replace(Carredudesabr, " ", "")) & "'"
        OpenRecordset StrSql, rs_Cap_Carr_Edu
        If rs_Cap_Carr_Edu.EOF Then
            Flog.writeline "La carrera no existe se aborta."
            Exit Sub
        Else
            CarreduNro = rs_Cap_Carr_Edu!CarreduNro
        End If
    End If
    
 
        

     
    'busco el perfil del usuario
    StrSql = " SELECT * FROM user_perfil "
    StrSql = StrSql & " WHERE iduser='" & usuario & "'"
    StrSql = StrSql & " AND listperfnro like '%,3,%'  or listperfnro like '3,%' or listperfnro like '%,3'"
    OpenRecordset StrSql, rs_Empleado
    If Not rs_Empleado.EOF Then
        capestrrhh = -1
    Else
        capestrrhh = 0
    End If
    'hasta aca
              
    If Ternro > 0 Then
        StrSql = "SELECT   ternro, nivnro, titnro, instnro, carredunro"
        StrSql = StrSql & " FROM  cap_estformal "
        StrSql = StrSql & " WHERE ternro = " & Ternro
        If TitNro <> 0 Then
            StrSql = StrSql & " AND titnro = " & TitNro
        End If
        StrSql = StrSql & " AND instnro = " & InstNro
        StrSql = StrSql & " AND carredunro = " & CarreduNro
        If nivnro <> 0 Then
            StrSql = StrSql & " AND nivnro = " & nivnro
        End If
        OpenRecordset StrSql, rs_Cap_Estformal
        If rs_Cap_Estformal.EOF Then
            StrSql = "INSERT INTO cap_estformal "
            StrSql = StrSql & "(ternro, nivnro, titnro, instnro, carredunro, capcomp, capcantmat, capfecdes, capfechas, capestact, caprango, capprom, capactual, capfutdesc, capanocur,capestrrhh)"
            StrSql = StrSql & " VALUES ( "
            StrSql = StrSql & " " & Ternro & ", "
            StrSql = StrSql & nivnro & ", "
            If TitNro <> 0 Then
                StrSql = StrSql & TitNro & ", "
            Else
                StrSql = StrSql & "NULL,"
            End If
            StrSql = StrSql & InstNro & ", "
            StrSql = StrSql & CarreduNro & ", "
            StrSql = StrSql & CapComp & ", "
            If CapcantMat = 0 Then
                StrSql = StrSql & "NULL,"
            Else
                StrSql = StrSql & CapcantMat & ", "
            End If
            StrSql = StrSql & CapfecDes & ", "
            If EsNulo(CapfecHas) Then
                StrSql = StrSql & "NULL, "
            Else
                StrSql = StrSql & ConvFecha(CapfecHas) & ", "
            End If
            StrSql = StrSql & CapestAct & ", "
            StrSql = StrSql & "'" & CapRango & "',"
            StrSql = StrSql & "'" & CapProm & "', "
            StrSql = StrSql & CapActual & ","
            StrSql = StrSql & "'" & FutDesc & "', "
            If CapanoCur = 0 Then
                StrSql = StrSql & "NULL"
            Else
                StrSql = StrSql & CapanoCur
            End If
            StrSql = StrSql & "," & capestrrhh
            StrSql = StrSql & " ) "
            objConn.Execute StrSql, , adExecuteNoRecords
            Texto = "Registro Insertado en estudios formales"
            Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
        End If
'        StrSql = "SELECT   ternro, nivnro, titnro, instnro, carredunro"
'        StrSql = StrSql & " FROM  cap_estformal "
'        StrSql = StrSql & " WHERE ternro = " & Ternro
'        StrSql = StrSql & " AND titnro = " & TitNro
'        StrSql = StrSql & " AND instnro = " & InstNro
'        StrSql = StrSql & " AND carredunro = " & CarreduNro
'        StrSql = StrSql & " AND nivnro = " & nivnro
'        OpenRecordset StrSql, rs_Cap_Estformal
'        If rs_Cap_Estformal.EOF Then
'            StrSql = "INSERT INTO cap_estformal "
'            StrSql = StrSql & "(ternro, nivnro, titnro, instnro, carredunro, capcomp, capcantmat, capfecdes, capfechas, capestact, caprango, capprom, capactual, capfutdesc, capanocur)"
'            StrSql = StrSql & " VALUES ( "
'            StrSql = StrSql & " " & Ternro & ", " & nivnro & ", " & TitNro & ", " & InstNro & ", " & CarreduNro & ", " & CapComp & ", " & CapcantMat & ", " & CapfecDes & ", " & CapfecHas & ", " & CapestAct & ", '" & CapRango & "', '" & CapProm & "', " & CapActual & ",'" & FutDesc & "', " & CapanoCur & ""
'            StrSql = StrSql & " ) "
'            objConn.Execute StrSql, , adExecuteNoRecords
'            Texto = "Registro Insertado en estudios formales"
'            Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strlinea)
'        End If
    End If
              
        
Fin:
'Cierro todo y libero
If rs_Empleado.State = adStateOpen Then rs_Empleado.Close
If rs_Nivel.State = adStateOpen Then rs_Nivel.Close
If rs_Titulo.State = adStateOpen Then rs_Titulo.Close
If rs_institucion.State = adStateOpen Then rs_institucion.Close
If rs_Cap_Carr_Edu.State = adStateOpen Then rs_Cap_Carr_Edu.Close
If rs_Cap_Estformal.State = adStateOpen Then rs_Cap_Estformal.Close




Set rs_Empleado = Nothing
Set rs_Nivel = Nothing
Set rs_Titulo = Nothing
Set rs_institucion = Nothing
Set rs_Cap_Carr_Edu = Nothing
Set rs_Cap_Estformal = Nothing
Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    Texto = Err.Description
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(1, 7)
    GoTo Fin
End Sub



Public Sub LineaModelo_298(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Carga de licencias de vacaciones R4
' Autor      : Margiotta, Emanuel
' Fecha      : 26/11/2011
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------

On Error GoTo Manejador_De_Error

Flog.writeline strLinea


Dim pos1 As Long
Dim pos2 As Long
    
Dim objHoras As New FechasHoras

Dim Tercero As Long
Dim NroLegajo As Long
Dim TDNro As Long
Dim DiaCompleto As Boolean
Dim FechaDesde As Date
Dim FechaHasta As Date
Dim HoraDesde As String
Dim HoraHasta As String
Dim CantidadHoras As Single
Dim CantidadDias As Single
Dim Estado As String
Dim AnioVac As Long
Dim LicEstNro As Long
Dim emp_licnro As Long
Dim LicTipo As Long
Dim tipoPeriodo As Integer
Dim vacnro As Integer
Dim TipoDia As Integer


Dim vdiascorcant As Long
Dim inserto_complemento As Boolean
Dim Aux As String
Dim Estrnro_SitRev

Dim textoError As String
Dim Observaciones As String

Dim rs_Empleado As New ADODB.Recordset
Dim rs_Lic As New ADODB.Recordset
Dim rs_TipDia As New ADODB.Recordset
Dim rs_estado As New ADODB.Recordset
Dim rs As New ADODB.Recordset
Dim rs_Est As New ADODB.Recordset
Dim rs_Vacacion As New ADODB.Recordset


Dim campos
Dim I As Long

TipoDia = 0
inserto_complemento = False


'Formato
' ------------------------------------------------------------------------------------------
'Campo              Columna Tipo de Dato    Formato         Ejemplo             Obligatorio
' ------------------------------------------------------------------------------------------
'Legajo                 1   Entero              9(6)        1
'Tipo de Licencia       2   Carácter            X(25)       Licencia por Examen
'Fecha Desde            3   Fecha           DD/MM/AAAA      01/01/2004
'Fecha Hasta            4   Fecha           DD/MM/AAAA      14/01/2004
'Día Completo           5   Logico              Si/No       Si
'Hora Desde             6   Carácter            X(5)        00:00
'Hora Hasta             7   Carácter            X(5)        23:59
'Cantidad de Horas      8   Decimal          9(15).999      8.5
'cant Dias              8   Decimal          1              1
'Estado                 9   Carácter           X(100)       Pendiente
'Año de vacacion        10  Entero              9(6)        12
'Tipo periodo           11  Entero            1/2           1-> es calendarios || 2-> Aniversario
'tipo de dia            12  Entero                          Tipo de Dia


' ------------------------------------------------------------------------------------------


    'FGZ - 13/08/2014 -------------------------
    campos = Split(strLinea, separador)
    
    'Nro de Legajo
    I = 0
    If IsNumeric(campos(I)) Then
        NroLegajo = campos(I)
    Else
        FlogE.writeline
        FlogE.writeline Espacios(Tabulador * 1) & "PROCESANDO LEGAJO "
        FlogE.writeline Espacios(Tabulador * 1) & "-------------------------------------"
        FlogE.writeline Espacios(Tabulador * 2) & "Linea " & NroLinea & ": El número de legajo no es numerico. "
        InsertaError 1, 8
        HuboError = True
        Exit Sub
    End If
        
    'Fecha desde
    I = 1
    FechaDesde = campos(I)
            
    'Fecha Hasta
    I = 2
    FechaHasta = campos(I)
                
    'Dia Completo
    I = 3
    Aux = campos(I)
    If UCase(Aux) = "SI" Or UCase(Aux) = "S" Then
        DiaCompleto = True
    Else
        DiaCompleto = False
    End If
    
    'Hora desde
    I = 4
    HoraDesde = campos(I)
    HoraDesde = Replace(HoraDesde, ":", "")
    
    'Hora hasta
    I = 5
    HoraHasta = campos(I)
    HoraHasta = Replace(HoraHasta, ":", "")
    
    'Cantidad de Horas
    I = 6
    If campos(I) = "" Or campos(I) = "N/A" Or campos(I) = "NA" Then
        CantidadHoras = 0
    Else
        CantidadHoras = CSng(campos(I))
    End If

    'Cantidad de días
    I = 7
    If campos(I) = "" Or campos(I) = "N/A" Or campos(I) = "NA" Then
        CantidadDias = 0
    Else
        CantidadDias = CSng(campos(I))
    End If
    
    'Estado
    I = 8
    Estado = UCase(campos(I))
    Estado = EliminarCHInvalidosII(Estado, 1, "")
    
    'Período de vacaciones (Año)
    I = 9
    If UCase(campos(I)) = "NA" Or UCase(campos(I)) = "" Then
        AnioVac = 0
        FlogE.writeline Espacios(Tabulador * 2) & "Linea " & NroLinea & ": formato incorrecto para el Año del Período de vacacion. "
        Exit Sub
    Else
        If EsNulo(campos(I)) Then
            AnioVac = 0
            FlogE.writeline Espacios(Tabulador * 2) & "Linea " & NroLinea & ": formato incorrecto para el Año del Período de vacacion. "
            Exit Sub
        Else
            If IsNumeric(campos(I)) Then
                AnioVac = UCase(campos(I))
            Else
                AnioVac = 0
                FlogE.writeline Espacios(Tabulador * 2) & "Linea " & NroLinea & ": formato incorrecto para el Año del Período de vacacion. "
                Exit Sub
            End If
        End If
    End If
    
    I = 10
    If UCase(campos(I)) = "NA" Or UCase(campos(I)) = "" Or UCase(campos(I)) = "N/A" Then
        tipoPeriodo = 0
        FlogE.writeline Espacios(Tabulador * 2) & "Linea " & NroLinea & ": formato incorrecto para Tipo de periodo. "
        Exit Sub
    Else
        If EsNulo(campos(I)) Then
            tipoPeriodo = 0
            FlogE.writeline Espacios(Tabulador * 2) & "Linea " & NroLinea & ": formato incorrecto para Tipo de periodo. "
            Exit Sub
        Else
            If IsNumeric(campos(I)) Then
                tipoPeriodo = CInt(campos(I))
            End If
        End If
    End If
    
    If UBound(campos) > 10 Then
        I = 11
        If UCase(campos(I)) = "NA" Or UCase(campos(I)) = "" Or UCase(campos(I)) = "N/A" Then
            TipoDia = 0
            FlogE.writeline Espacios(Tabulador * 2) & "Linea " & NroLinea & ": formato incorrecto para Tipo de dia. "
            Exit Sub
        Else
            If EsNulo(campos(I)) Then
                TipoDia = 0
                FlogE.writeline Espacios(Tabulador * 2) & "Linea " & NroLinea & ": formato incorrecto para Tipo de dia. "
                Exit Sub
            Else
                If IsNumeric(campos(I)) Then
                    TipoDia = CInt(campos(I))
                End If
            End If
        End If
    End If
        

   
    
' ====================================================================
'   Validar los parametros Levantados

Flog.writeline
Flog.writeline
Flog.writeline Espacios(Tabulador * 1) & "PROCESANDO LEGAJO: " & NroLegajo
Flog.writeline Espacios(Tabulador * 1) & "-------------------------------------------------------"

'EAM- Busco el empleado si existe
StrSql = "SELECT * FROM empleado where empleg = " & NroLegajo
OpenRecordset StrSql, rs_Empleado

If rs_Empleado.EOF Then
    Flog.writeline Espacios(Tabulador * 2) & "No se encontro el legajo " & NroLegajo
    
    FlogE.writeline
    FlogE.writeline Espacios(Tabulador * 1) & "PROCESANDO LEGAJO: " & NroLegajo
    FlogE.writeline Espacios(Tabulador * 1) & "-------------------------------------"
    FlogE.writeline Espacios(Tabulador * 2) & "Linea " & NroLinea & ": No se encontro el legajo " & NroLegajo
    
    InsertaError 1, 8
    HuboError = True
    Exit Sub
Else
    Tercero = rs_Empleado!Ternro
End If

 
'convierto la cantidad de dias al tipo espesificado
If TipoDia > 0 Then
    CantidadDias = ConvertiTipoVac(TipoDia, FechaDesde, FechaHasta, Tercero)
End If

'Que exista el Tipo de Licencia
StrSql = "SELECT * FROM tipdia WHERE tdnro=2"
OpenRecordset StrSql, rs_TipDia
If rs_TipDia.EOF Then
    Flog.writeline Espacios(Tabulador * 2) & "No se encontro el Tipo de Licencia 2"
    
    FlogE.writeline
    FlogE.writeline Espacios(Tabulador * 1) & "PROCESANDO LEGAJO: " & NroLegajo
    FlogE.writeline Espacios(Tabulador * 1) & "-------------------------------------"
    FlogE.writeline Espacios(Tabulador * 2) & "Linea " & NroLinea & ": No se encontro el Tipo de Licencia " & TDNro
    
    InsertaError 2, 84
    HuboError = True
    Exit Sub
Else
    TDNro = rs_TipDia!TDNro
End If


If Not DiaCompleto Then
    ' Es tipo 2 si las horas son validas
    ' Es tipo 3 si la cant de horas es valida
    ' Es tipo 2 si todos los param son validos, tomo las horas
    
    LicTipo = 0
    'Valido la cantidad de Horas
    If CantidadHoras <> 0 Then 'el parametro es valido, puede ser tipo 3
        LicTipo = 3
    End If
    
    'Validar Horas
    If objHoras.ValidarHora(HoraDesde) And objHoras.ValidarHora(HoraHasta) Then
        LicTipo = 2
    Else 'puede que sea tipo 3
        If LicTipo = 0 Then 'no, no es tipo 3
            If Not objHoras.ValidarHora(HoraDesde) Then
                Flog.writeline Espacios(Tabulador * 2) & "formato de Hora Desde incorrecto " & HoraDesde
                        
                FlogE.writeline
                FlogE.writeline Espacios(Tabulador * 1) & "PROCESANDO LEGAJO: " & NroLegajo
                FlogE.writeline Espacios(Tabulador * 1) & "-------------------------------------"
                FlogE.writeline Espacios(Tabulador * 2) & "Linea " & NroLinea & ": formato de Hora Desde incorrecto " & HoraDesde
                
                InsertaError 6, 98
                HuboError = True
                Exit Sub
            End If
            If Not objHoras.ValidarHora(HoraHasta) Then
                Flog.writeline Espacios(Tabulador * 2) & "formato de Hora Hasta incorrecto " & HoraHasta
                
                FlogE.writeline
                FlogE.writeline Espacios(Tabulador * 1) & "PROCESANDO LEGAJO: " & NroLegajo
                FlogE.writeline Espacios(Tabulador * 1) & "-------------------------------------"
                FlogE.writeline Espacios(Tabulador * 2) & "Linea " & NroLinea & ": formato de Hora Hasta incorrecto " & HoraHasta
                
                InsertaError 7, 98
                HuboError = True
                Exit Sub
            End If
        End If
    End If
    If LicTipo = 3 And CantidadHoras > rs_TipDia!tdcanthoras Then ' si era tipo 3 que no exceda el limite
        Flog.writeline Espacios(Tabulador * 2) & "La cantidad de Horas " & CantidadHoras & " excede el maximo " & rs_TipDia!tdcanthoras
        CantidadHoras = rs_TipDia!tdcanthoras
    End If
Else
    LicTipo = 1
End If

'Que exista el Tipo de Estado
StrSql = "SELECT * FROM lic_estado WHERE upper(licestdesabr) = '" & Estado & "'"
OpenRecordset StrSql, rs_estado
If rs_estado.EOF Then
    Flog.writeline Espacios(Tabulador * 2) & "No se encontro el Tipo de Estado " & Estado
    
    FlogE.writeline
    FlogE.writeline Espacios(Tabulador * 1) & "PROCESANDO LEGAJO: " & NroLegajo
    FlogE.writeline Espacios(Tabulador * 1) & "-------------------------------------"
    FlogE.writeline Espacios(Tabulador * 2) & "Linea " & NroLinea & ": No se encontro el Tipo de Estado " & Estado
    
    InsertaError 9, 97
    HuboError = True
    Exit Sub
Else
    LicEstNro = rs_estado!LicEstNro
End If


    '¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬
    'Valido que existe período de vacaciones
    '¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬
    If (tipoPeriodo = 2) Then
        StrSql = "SELECT v.vacnro from vacacion v" & _
                " INNER JOIN vacacion_detalle vd ON v.vacnro = vd.vacnro AND v.vacanio= " & AnioVac & " AND vd.ternro= " & Tercero & " AND vactipo= " & tipoPeriodo
    Else
        StrSql = "SELECT v.vacnro from vacacion v" & _
                " INNER JOIN vacacion_detalle vd ON v.vacnro = vd.vacnro AND v.vacanio= " & AnioVac & " AND vactipo= " & tipoPeriodo
    End If
    OpenRecordset StrSql, rs_Vacacion
    
    If Not rs_Vacacion.EOF Then
        If EsNulo(rs_Vacacion!vacnro) Then
            FlogE.writeline Espacios(Tabulador * 2) & "Linea " & NroLinea & ": No se encontro el Periodo de vacacion para el año: " & AnioVac
            Exit Sub
        Else
            vacnro = rs_Vacacion!vacnro
        End If
    Else
        FlogE.writeline Espacios(Tabulador * 2) & "Linea " & NroLinea & ": No se encontro el Periodo de vacacion para el año: " & AnioVac
        Exit Sub
    End If
    
    
    '____________________________________________
    'Verifico que tenga dias de vacaciones
    StrSql = "SELECT vacdiascor.vdiascorcant,vacdiascor.tipvacnro FROM vacdiascor"
    StrSql = StrSql & " WHERE vacdiascor.vacnro = " & vacnro & " AND ternro = " & Tercero
    OpenRecordset StrSql, rs_Vacacion
    If rs_Vacacion.EOF Then
        FlogE.writeline Espacios(Tabulador * 2) & "El empleado no tiene días disponibles para el período " & AnioVac
        InsertaError 1, 50
        HuboError = True
        Exit Sub
    Else
        vdiascorcant = rs_Vacacion!vdiascorcant
    End If
    rs_Vacacion.Close


    StrSql = "SELECT SUM(elcantdias) cantdias FROM emp_lic e" & _
            " INNER JOIN lic_vacacion lv on e.emp_licnro = lv.emp_licnro " & _
            " WHERE vacnro = " & vacnro & " AND empleado = " & Tercero
    OpenRecordset StrSql, rs_Vacacion
    
    If Not EsNulo(rs_Vacacion!cantdias) Then
        vdiascorcant = vdiascorcant - rs_Vacacion!cantdias
    End If
        

'    'Valida que las fechas esten dentro del período seleccionado
'    StrSql = "SELECT * FROM vacacion_detalle"
'    StrSql = StrSql & " WHERE vacnro = " & vacNro & " "
'    StrSql = StrSql & " AND vdetfdesde <= " & ConvFecha(FechaDesde) & " AND vdetfhasta >= " & ConvFecha(FechaHasta)
'    OpenRecordset StrSql, rs_Vacacion
'    If rs_Vacacion.EOF Then
'        FlogE.writeline Espacios(Tabulador * 2) & "Las fechas de la licencia no estan contenidas en el período " & AnioVac
'        InsertaError 1, 49
'        HuboError = True
'        Exit Sub
'    End If
'    rs_Vacacion.Close
        
    
    'Valido que tenga dias disponibles
    If (vdiascorcant) >= CantidadDias Then
        inserto_complemento = True
    Else
        inserto_complemento = False
        FlogE.writeline Espacios(Tabulador * 2) & "El empleado no tiene días disponibles para el período " & AnioVac
        InsertaError 1, 50
        HuboError = True
        Exit Sub
    End If
    

'¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬


'=============================================================
'Busco si existe la Licencia
StrSql = "SELECT * FROM emp_lic " & _
         " WHERE (empleado = " & Tercero & " )" & _
         " AND elfechadesde <=" & ConvFecha(FechaHasta) & _
         " AND elfechahasta >= " & ConvFecha(FechaDesde)
If LicTipo = 3 Then
    StrSql = StrSql & " and eltipo <> 3"
End If
OpenRecordset StrSql, rs_Lic

    If Not rs_Lic.EOF Then
            Flog.writeline Espacios(Tabulador * 2) & "No se puede insertar la Licencia porque se superpone con otra ya existente"
            Flog.writeline Espacios(Tabulador * 2) & "(" & rs_Lic!emp_licnro & ") desde " & rs_Lic!elfechadesde & " hasta " & rs_Lic!elfechahasta & " de tipo " & rs_Lic!TDNro
            
            FlogE.writeline
            FlogE.writeline Espacios(Tabulador * 1) & "PROCESANDO LEGAJO: " & NroLegajo
            FlogE.writeline Espacios(Tabulador * 1) & "-------------------------------------"
            FlogE.writeline Espacios(Tabulador * 2) & "Linea " & NroLinea & ": No se puede insertar la Licencia porque se superpone con otra ya existente"
            FlogE.writeline Espacios(Tabulador * 2) & "         (" & rs_Lic!emp_licnro & ") desde " & rs_Lic!elfechadesde & " hasta " & rs_Lic!elfechahasta & " de tipo " & rs_Lic!TDNro
            
            InsertaError 1, 99
            HuboError = True
            Exit Sub
    Else
            'Inserto la Licencia
            StrSql = "INSERT INTO emp_lic ("
            StrSql = StrSql & "empleado,elfechadesde,elfechahasta,tdnro,eldiacompleto,eltipo"
            If LicTipo = 2 Then
                StrSql = StrSql & ",elhoradesde,elhorahasta"
            End If
            If LicTipo = 3 Then
                StrSql = StrSql & ",elmaxhoras,elcanthrs"
            End If
            StrSql = StrSql & ",elcantdias,licestnro"
            
            StrSql = StrSql & ") VALUES ("
            StrSql = StrSql & Tercero
            StrSql = StrSql & "," & ConvFecha(FechaDesde)
            StrSql = StrSql & "," & ConvFecha(FechaHasta)
            StrSql = StrSql & "," & TDNro
            StrSql = StrSql & "," & CLng(DiaCompleto)
            StrSql = StrSql & "," & LicTipo ' 1 = Dia Completo
            
            If LicTipo = 2 Then ' Parcial Fija
                StrSql = StrSql & ",'" & HoraDesde & "'"
                StrSql = StrSql & ",'" & HoraHasta & "'"
            End If
            If LicTipo = 3 Then ' Parcial Variable
                StrSql = StrSql & "," & CantidadHoras
                StrSql = StrSql & "," & CantidadHoras
            End If
            
            
            If TipoDia > 0 Then
                StrSql = StrSql & "," & CantidadDias
            Else
                StrSql = StrSql & "," & (DateDiff("d", FechaDesde, FechaHasta) + 1)
            End If
    
            StrSql = StrSql & "," & LicEstNro
            
            StrSql = StrSql & " )"
            objConn.Execute StrSql, , adExecuteNoRecords
            Flog.writeline Espacios(Tabulador * 2) & "Licencia insertada "
                
            emp_licnro = getLastIdentity(objConn, "emp_lic")
            

            '__________________________________
            'INSERTO COMPLEMENTOS
            '----------------------------------
            If inserto_complemento = True Then
                Select Case TDNro
                    Case 2:
                        'Inserto Complemento de vacaciones
                        If (CInt(tipoPeriodo) > 0) Then 'valida la variable, si es mayor que cero inserta los datos
                            StrSql = "INSERT INTO lic_vacacion  (emp_licnro,vacnro,vacnotifnro,licvacmanual) "
                            StrSql = StrSql & " VALUES ("
                            StrSql = StrSql & emp_licnro & "," & vacnro & ",NULL,-1"
                            StrSql = StrSql & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                            Flog.writeline Espacios(Tabulador * 2) & "Complemento de Vacaciones Insertado "
                        End If
                        '------------------------------------
                End Select
            End If
            
            
            'Genero la Justificacion
             StrSql = " INSERT INTO gti_justificacion ( jusanterior,juscodext,jusdesde,jusdiacompleto,jushasta,jussigla,jussistema,ternro,tjusnro,turnro,jushoradesde,jushorahasta,juseltipo,juselmaxhoras ) VALUES ("
             StrSql = StrSql & "-1"
             StrSql = StrSql & "," & emp_licnro
             StrSql = StrSql & "," & ConvFecha(FechaDesde)
             StrSql = StrSql & ",-1"
             StrSql = StrSql & "," & ConvFecha(FechaHasta)
             StrSql = StrSql & ",'LIC'"
             StrSql = StrSql & ",-1"
             StrSql = StrSql & "," & Tercero
             StrSql = StrSql & ",1"
             StrSql = StrSql & ",0"
             StrSql = StrSql & ",'" & HoraDesde & "'"
             StrSql = StrSql & ",'" & HoraHasta & "'"
             'FGZ - 17/06/2011 -----------------
             'StrSql = StrSql & "," & TDNro
             StrSql = StrSql & "," & LicTipo
             StrSql = StrSql & "," & CantidadHoras
             StrSql = StrSql & ")"
             objConn.Execute StrSql, , adExecuteNoRecords
             Flog.writeline Espacios(Tabulador * 2) & "Justificacion insertada "
             
             
            ' Codigo de Sit. Revista
            ' ___________________________________________________________
             Flog.writeline Espacios(Tabulador * 2) & "Situacion de revista"
            
            
            StrSql = "SELECT estrnro, tdnro FROM csijp_srtd "
            StrSql = StrSql & " WHERE tdnro =" & TDNro
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                Estrnro_SitRev = rs!Estrnro
            End If
            If rs.State = adStateOpen Then rs.Close
            
            
            If Trim(Estrnro_SitRev) <> "" Then
                
                    'Busco el tipo de la situacion de revista anterior
                    StrSql = "SELECT * FROM his_estructura "
                    StrSql = StrSql & " WHERE tenro = 30 "
                    StrSql = StrSql & " AND ternro = " & Tercero
                    StrSql = StrSql & " AND htetdesde <= " & ConvFecha(FechaDesde)
                    StrSql = StrSql & " AND ( htethasta >= " & ConvFecha(FechaDesde) & " OR htethasta IS Null )"
                    If rs_Est.State = adStateOpen Then rs_Est.Close
                    OpenRecordset StrSql, rs_Est
                    
                    If Not rs_Est.EOF Then
                        'la cierro un dia antes
                        If EsNulo(rs_Est!htethasta) Then
                            If Not (rs_Est!htetdesde = FechaDesde) Then
                                StrSql = " UPDATE his_estructura SET "
                                StrSql = StrSql & " htethasta = " & ConvFecha(CDate(FechaDesde - 1))
                                StrSql = StrSql & " WHERE tenro   = 30 "
                                StrSql = StrSql & " AND   estrnro  = " & rs_Est!Estrnro
                                StrSql = StrSql & " AND   ternro  = " & Tercero
                                StrSql = StrSql & " AND   htetdesde = " & ConvFecha(rs_Est!htetdesde)
                                StrSql = StrSql & " AND   htethasta  is null "
                                objConn.Execute StrSql, , adExecuteNoRecords
                            Else
                                'la borro porque se va superponer con la licencia
                                StrSql = " DELETE his_estructura "
                                StrSql = StrSql & " WHERE tenro   = 30 "
                                StrSql = StrSql & " AND   estrnro  = " & rs_Est!Estrnro
                                StrSql = StrSql & " AND   ternro =" & Tercero
                                StrSql = StrSql & " AND   htetdesde = " & ConvFecha(rs_Est!htetdesde)
                                StrSql = StrSql & " AND   htethasta  is null "
                                objConn.Execute StrSql, , adExecuteNoRecords
                            End If
                            
                            'Inserto la misma situacion despues de la nueva situacion (la de la licencia)
                            StrSql = "INSERT INTO his_estructura(tenro, ternro, estrnro, htetdesde)"
                            StrSql = StrSql & " VALUES (30, " & Tercero & ", " & rs_Est!Estrnro & ", "
                            StrSql = StrSql & ConvFecha(CDate(FechaHasta + 1)) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                            
                        Else
                            If rs_Est!htethasta > FechaHasta Then
                                If rs_Est!htetdesde > FechaDesde Then
                                    StrSql = " UPDATE his_estructura SET "
                                    StrSql = StrSql & " htethasta = " & ConvFecha(CDate(FechaDesde - 1))
                                    StrSql = StrSql & " WHERE tenro   = 30 "
                                    StrSql = StrSql & " AND   ternro  = " & Tercero
                                    StrSql = StrSql & " AND   htetdesde = " & ConvFecha(rs_Est!htetdesde)
                                    StrSql = StrSql & " AND   htethasta  = " & ConvFecha(rs_Est!htethasta)
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                Else
                                    'la borro porque se va superponer con la licencia
                                    StrSql = " DELETE his_estructura "
                                    StrSql = StrSql & " WHERE tenro = 30 "
                                    StrSql = StrSql & " AND   estrnro = " & rs_Est!Estrnro
                                    StrSql = StrSql & " AND   ternro  = " & Tercero
                                    StrSql = StrSql & " AND   htetdesde = " & ConvFecha(rs_Est!htetdesde)
                                    StrSql = StrSql & " AND   htethasta  = " & ConvFecha(rs_Est!htethasta)
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                End If
                                
                                'Inserto la misma situacion despues de la nueva situacion (la de la licencia)
                                StrSql = "INSERT INTO his_estructura "
                                StrSql = StrSql & " (tenro, ternro, estrnro, htetdesde,htethasta) "
                                StrSql = StrSql & " VALUES (30, " & Tercero & ", " & rs_Est!Estrnro & ", "
                                StrSql = StrSql & ConvFecha(CDate(FechaHasta + 1)) & ", " & ConvFecha(rs_Est!htethasta) & ")"
                                objConn.Execute StrSql, , adExecuteNoRecords
                                
                            Else
                                If rs_Est!htetdesde > FechaDesde Then
                                    StrSql = " UPDATE his_estructura SET "
                                    StrSql = StrSql & " htethasta = " & ConvFecha(CDate(FechaDesde - 1))
                                    StrSql = StrSql & " WHERE tenro   = 30 "
                                    StrSql = StrSql & " AND   ternro  = " & Tercero
                                    StrSql = StrSql & " AND   htetdesde = " & ConvFecha(rs_Est!htetdesde)
                                    StrSql = StrSql & " AND   htethasta  is null "
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                Else
                                    'la borro porque se va superponer con la licencia
                                    StrSql = " DELETE his_estructura "
                                    StrSql = StrSql & " WHERE tenro = 30 "
                                    StrSql = StrSql & "     AND estrnro  = " & rs_Est!Estrnro
                                    StrSql = StrSql & "     AND ternro  = " & Tercero
                                    StrSql = StrSql & "     AND htetdesde = " & ConvFecha(rs_Est!htetdesde)
                                    StrSql = StrSql & "     AND htethasta  = " & ConvFecha(rs_Est!htethasta)
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                End If
                            End If
                        End If
                    End If
                
                    StrSql = "INSERT INTO his_estructura(tenro, ternro, estrnro, htetdesde,htethasta) "
                    StrSql = StrSql & " VALUES (30, " & Tercero & ", " & Estrnro_SitRev & ", "
                    StrSql = StrSql & ConvFecha(FechaDesde) & ", " & ConvFecha(FechaHasta) & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                Else
                    Flog.writeline Espacios(Tabulador * 2) & "La Licencia no tienen Situacion de Revista asociado"
                End If
                
                
        
            
    End If

Fin:
'Cierro todo y libero
If rs_Lic.State = adStateOpen Then rs_Lic.Close
If rs_Empleado.State = adStateOpen Then rs_Empleado.Close
If rs_TipDia.State = adStateOpen Then rs_TipDia.Close
If rs_estado.State = adStateOpen Then rs_estado.Close
If rs_Est.State = adStateOpen Then rs_Est.Close
'If rs_Vacacion = adStateOpen Then rs_Vacacion.Close

Set rs_Lic = Nothing
Set rs_Empleado = Nothing
Set rs_TipDia = Nothing
Set rs_estado = Nothing
Set rs_Est = Nothing
Set rs_Vacacion = Nothing
Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    
    FlogE.writeline
    FlogE.writeline Espacios(Tabulador * 1) & "***************************************************"
    FlogE.writeline Espacios(Tabulador * 1) & "Error insalvable en la Linea " & NroLinea
    FlogE.writeline Espacios(Tabulador * 1) & "   " & strLinea
    FlogE.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    FlogE.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    FlogE.writeline Espacios(Tabulador * 1) & "***************************************************"
    FlogE.writeline
    
    
    GoTo Fin
End Sub
Public Sub LineaModelo_299(ByVal strReg As String, ByRef OK As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de Familiares (SIN DOMICILIOS)
' Autor      : Gonzalez Nicolás
' Fecha      : 02/12/2014
' Ultima Mod.:
' ---------------------------------------------------------------------------------------------
Dim Legajo          As Long    ' Legajo del Empleado
Dim Apellido()      As String  ' Apellido del Familiar
Dim Apellido1       As String  ' Apellido del Familiar
Dim Apellido2       As String  ' Apellido del Familiar
Dim nombre()        As String  ' Nombre del Familiar
Dim nombre1         As String  ' Nombre del Familiar
Dim nombre2         As String  ' Nombre del Familiar
Dim Fnac            As String  ' Fecha de Nacimiento del Familiar
Dim NAC             As String  ' Nacionalidad del Familiar
Dim PaisNac         As String  ' Pais de Nacimiento
Dim EstCiv          As String  ' Estado Civil
Dim Sexo            As String  ' Sexo del Familiar
Dim GPare           As String  ' Grado de Parentesco
Dim Disc            As String  ' Discapacitado
Dim Estudia         As String  ' Estudia
Dim NivEst          As String  ' Nivel de Estudio
Dim TipDoc          As String  ' Tipo de Documento del Familiar
Dim NroDoc          As String  ' Nº de Documento del Familiar
Dim ObraSocial      As String   'Obra Social
Dim PlanOSocial     As String   'Plan Obra Social
Dim AvisoEmer       As String   'Aviso ante Emergencia
Dim PagaSalario     As String   'Paga Salario Familiar
Dim Ganancias       As String   'Se lo toma para ganancias
Dim fechaInicio     As String   ' Fecha de inicio de familiar
Dim fechaVto        As String   ' Fecha de vencimiento de familiar
Dim Cuil            As String  ' CUIL del Familiar
Dim ESC             As String  ' Escolaridad
Dim GRADO           As String  ' Grado al que concurre
Dim NroTDoc         As String
Dim TipDoc2          As String  ' Tipo de Documento 2 del Familiar
Dim NroDoc2          As String  ' Nº de Documento 2 del Familiar
Dim Guarderia        As String  ' SI/NO
Dim FechaGuarderia   As String  ' DD/MM/AAAA
Dim Nro_TDocumento2  As Long
Dim pos1            As Long
Dim pos2            As Long
Dim NroTercero      As Long
Dim NroEmpleado     As Long
Dim CodTerFam       As String
Dim Nro_TDocumento  As Long
Dim nro_nacionalidad As Long
Dim nro_paisnac      As Long
Dim nro_estciv      As Long
Dim nro_Sexo        As Long
Dim nro_estudia     As Long
Dim nro_nivest      As String
Dim nro_osocial     As Long
Dim nro_planos      As Long
Dim nro_aviso       As Long
Dim nro_salario     As Long
Dim nro_gan         As Long
Dim nro_disc        As Long
Dim nro_paren        As Long
Dim OSocial             As String
Dim ter_osocial         As Long
Dim Inserto_estr        As Boolean
Dim Nro_Institucion As Long
Dim Item_DDJJ         As Long
Dim Anio_DDJJ         As String
Dim Desde_DDJJ        As String
Dim Hasta_DDJJ        As String
Dim rs_Sql          As New ADODB.Recordset
Dim rs              As New ADODB.Recordset
Dim rs_Tel          As New ADODB.Recordset
Dim rs_Doc          As New ADODB.Recordset
Dim b
Dim a
'-----------MDF-------------
Dim fecdocu
Dim acta
Dim tomo
Dim folio
Dim tribunal
Dim juzgado
Dim secretaria
Dim comuna
'-------- fin MDF-----


'--A eliminar
'========================================
'Dim IngresoDom          As Boolean
'Dim Nro_Barrio          As Long
'Dim Nro_Localidad       As Long
'Dim Nro_Partido         As Long
'Dim Nro_Zona            As Long
'Dim Nro_Provincia       As Long
'Dim Nro_Pais            As Long
'Dim Nro_Nrodom      As String
'Dim NroDom          As Long
'
'
'Dim Calle           As String   'Calle                    -- detdom.calle
'Dim Nro             As String   'Número                   -- detdom.nro
'Dim Piso            As String   'Piso                     -- detdom.piso
'Dim Depto           As String   'Depto                    -- detdom.depto
'Dim Torre           As String   'Torre                    -- detdom.torre
'Dim Manzana         As String   'Manzana                  -- detdom.manzana
'Dim Cpostal         As String   'Cpostal                  -- detdom.codigopostal
'Dim Entre           As String   'Entre Calles             -- detdom.entrecalles
'Dim Barrio          As String   'Barrio                   -- detdom.barrio
'Dim Localidad       As String   'Localidad                -- detdom.locnro
'Dim Partido         As String   'Partido                  -- detdom.partnro
'Dim Zona            As String   'Zona                     -- detdom.zonanro
'Dim Provincia       As String   'Provincia                -- detdom.provnro
'Dim Pais            As String   'Pais                     -- detdom.paisnro
'Dim Telefono        As String   'Telefono                 -- telefono.telnro
'========================================



    LineaCarga = LineaCarga + 1
    Tabs = 1
    
    On Error GoTo SaltoLinea
    
    Flog.writeline
    FlogE.writeline
    FlogP.writeline
    
    'Legajo
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Legajo"
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If IsNumeric(Aux) Then
        Legajo = Aux
    Else
        Texto = ": " & "El legajo no es numerico "
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        InsertaError 1, 8
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Apellido
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Apellido"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
   ' Aux = EliminarCHInvalidosII(Aux, 0, "")
    'Apellido = Left(Aux, 25)
    Apellido = Split(Left(Aux, 25), "@")
    
    If UBound(Apellido) = 0 Then
        'Si no se ingreso el apellido separado con @, todo el apellido ingresado se guarda en terape
        Apellido1 = Apellido(0)
        Apellido2 = ""
    Else
        Apellido1 = Apellido(0)
        Apellido2 = Apellido(1)
    End If
    
    'Nombre
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Nombre"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    'Aux = EliminarCHInvalidosII(Aux, 0, "")
    'nombre = Left(Aux, 25)
    nombre = Split(Left(Aux, 25), "@")
    If UBound(nombre) = 0 Then
        nombre1 = nombre(0)
        nombre2 = ""
    Else
        nombre1 = nombre(0)
        nombre2 = nombre(1)
    End If
    
    'Fecha de Nacimiento
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Fecha de Nacimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Fnac = Aux
    If Fnac = "N/A" Or EsNulo(Fnac) Then
        Fnac = "Null"
    End If
    
    'Pais de Nacimiento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Pais de Nacimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    PaisNac = Aux
    If PaisNac <> "N/A" Then
        StrSql = " SELECT paisnro FROM pais WHERE UPPER(paisdesc) = '" & UCase(PaisNac) & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            nro_paisnac = rs!Paisnro
        Else
            StrSql = " INSERT INTO pais(paisdesc,paisdef) VALUES ('" & UCase(PaisNac) & "',0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_paisnac = getLastIdentity(objConn, "pais")
        End If
    Else
        nro_paisnac = 0
    End If
    
    'Nacionalidad
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Nacionalidad"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    NAC = UCase(Aux)
    If NAC <> "N/A" And Not EsNulo(NAC) Then
        StrSql = " SELECT nacionalnro FROM nacionalidad WHERE upper(nacionaldes) = '" & NAC & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            nro_nacionalidad = rs!nacionalnro
        Else
            StrSql = " INSERT INTO nacionalidad(nacionaldes) VALUES ('" & UCase(NAC) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_nacionalidad = getLastIdentity(objConn, "nacionalidad")
        End If
    Else
        nro_nacionalidad = 0
    End If
    If nro_nacionalidad = 0 Then
        Texto = ": " & " - Debe ingresar Nacionalidad."
        NroColumna = 5
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    
    
    'Estado Civil
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Estado Civil"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    EstCiv = Left(UCase(Aux), 30)
    If EstCiv <> "N/A" And Not EsNulo(EstCiv) Then
        StrSql = " SELECT estcivnro FROM estcivil WHERE upper(estcivdesabr) = '" & UCase(EstCiv) & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            nro_estciv = rs!estcivnro
        Else
            StrSql = " INSERT INTO estcivil(estcivdesabr) VALUES ('" & UCase(EstCiv) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_estciv = getLastIdentity(objConn, "estcivil")
        End If
    Else
        nro_estciv = 0
    End If
    If nro_estciv = 0 Then
        Texto = ": " & " - Debe ingresar Estado Civil."
        NroColumna = 6
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Sexo
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Sexo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Sexo = UCase(Aux)
    If Sexo = "M" Or Sexo = "MASCULINO" Or Sexo = "-1" Then
        nro_Sexo = -1
    Else
        nro_Sexo = 0
    End If
    
    'Parentesco
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Parentesco"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    GPare = UCase(Aux)
    StrSql = " SELECT parenro FROM parentesco WHERE upper(paredesc) = '" & UCase(GPare) & "'"
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        nro_paren = rs!parenro
    Else
        nro_paren = 0
    End If
    If nro_paren = 0 Then
        Texto = ": " & " - El parentesco ingresado no existe, verifíquelo." & GPare
        NroColumna = 8
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Discapacitado
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Discapacitado"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Disc = UCase(Aux)
    If Disc = "N/A" Or Disc = "NO" Then
        nro_disc = 0
    Else
        nro_disc = -1
    End If
    
    'Estudia
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estudia"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = UCase(Trim(Mid(strReg, pos1, pos2 - pos1 + 1)))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Estudia = Aux
    If Estudia = "N/A" Or Estudia = "NO" Then
        nro_estudia = 0
    Else
        nro_estudia = -1
    End If
    
    'Nivel de estudio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nivel de estudio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = UCase(Trim(Mid(strReg, pos1, pos2 - pos1 + 1)))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    NivEst = Aux
    'Por ahora no hago nada con el nivel de estudio porque en Accor no lo pasaron
    If NivEst = "N/A" Or EsNulo(NivEst) Then
        'StrSql = " SELECT nivnro FROM nivest WHERE nivdes = '" & NivEst & "'"
        'OpenRecordset StrSql, rs
        nro_nivest = 0
    Else
        'busco el primer novel de estudio, si no existe la creo
        StrSql = " SELECT * FROM nivest WHERE nivdesc = '" & NivEst & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            nro_nivest = rs!nivnro
        Else
            'creo una
            StrSql = " INSERT INTO nivest (nivdesc) VALUES ('" & NivEst & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_nivest = getLastIdentity(objConn, "nivest")
        End If
     End If

    'Tipo de Doc
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Tipo de Doc"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    TipDoc = Aux
    If TipDoc <> "N/A" And Not EsNulo(TipDoc) Then
        StrSql = " SELECT tidnro FROM tipodocu WHERE UPPER(tidsigla) = '" & UCase(TipDoc) & "'"
        If rs_Sql.State = adStateOpen Then rs_Sql.Close
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            Nro_TDocumento = rs_Sql!tidnro
        Else
            'busco la primera institucion, si no existe la creo
            StrSql = " SELECT * FROM institucion "
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                Nro_Institucion = rs!InstNro
            Else
                'creo una
                StrSql = " INSERT INTO institucion (instdes,instabre) VALUES ('NACIONAL','NAC')"
                objConn.Execute StrSql, , adExecuteNoRecords
                Nro_Institucion = getLastIdentity(objConn, "institucion")
            End If
            'creo el tipo de documento
            StrSql = " INSERT INTO tipodocu(tidnom,tidsigla,tidsist,instnro,tidunico) VALUES ('" & UCase(TipDoc) & "','" & UCase(TipDoc) & "',0," & Nro_Institucion & ",0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            Nro_TDocumento = getLastIdentity(objConn, "tipodocu")
        End If
    Else
        Nro_TDocumento = 0
    End If
    
    'Nro de Doc
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Nro de Doc"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    NroDoc = Aux
    If NroDoc = "N/A" Or EsNulo(NroDoc) Then
        NroDoc = "0"
    End If
    
        
    'Obra Social
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Obra Social"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    ObraSocial = Aux
    If ObraSocial = "N/A" Or ObraSocial = "" Then
        nro_osocial = 0
    Else
        StrSql = " SELECT ternro FROM osocial WHERE UPPER(osdesc) = '" & UCase(ObraSocial) & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            nro_osocial = rs!Ternro
        Else
            nro_osocial = 0
        End If
    End If

    'Plan de OS
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Plan de Obra Social"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    PlanOSocial = Aux
    If PlanOSocial = "N/A" Or PlanOSocial = "" Then
        nro_planos = 0
    Else
        If nro_osocial <> 0 Then
            StrSql = " SELECT plnro FROM planos WHERE UPPER(plnom) = '" & UCase(PlanOSocial) & "'"
            StrSql = StrSql & " AND osocial = " & nro_osocial
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                nro_planos = rs!plnro
            Else
                nro_planos = 0
            End If
        Else
            nro_planos = 0
        End If
    End If

    'Aviso Emergencia
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Aviso emergencia"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = UCase(Trim(Mid(strReg, pos1, pos2 - pos1 + 1)))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    AvisoEmer = Aux
    If AvisoEmer = "N/A" Or AvisoEmer = "NO" Then
        nro_aviso = 0
    Else
        nro_aviso = -1
    End If

    'Paga Salario fliar
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Paga salario familiar"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = UCase(Trim(Mid(strReg, pos1, pos2 - pos1 + 1)))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    PagaSalario = Aux
    If PagaSalario = "N/A" Or PagaSalario = "NO" Then
        nro_salario = 0
    Else
        nro_salario = -1
    End If

    'Ganancias
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Ganancias"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1)) 'mdf +1
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Ganancias = Aux
    If Ganancias = "N/A" Or Ganancias = "NO" Or Ganancias = "N" Then
        nro_gan = 0
    Else
        nro_gan = -1
    End If


    'Fecha de Inicio del vinculo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de Inicio de Vinculo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    fechaInicio = Aux
    If fechaInicio = "N/A" Or EsNulo(fechaInicio) Then
        fechaInicio = "Null"
    End If
    If fechaInicio = "Null" Then
        ' Busco la fecha de alta reconocida
         Campoetiqueta = " Fecha de alta reconocida del empleado "
         StrSql = "SELECT altfec FROM fases "
         StrSql = StrSql & " INNER JOIN empleado ON empleado.ternro = fases.empleado "
         StrSql = StrSql & " WHERE empleg = " & Legajo
         StrSql = StrSql & " AND fasrecofec = -1 "
         OpenRecordset StrSql, rs
         If rs.EOF Then
             Texto = ": " & " - Campo " & Campoetiqueta & " no esta configurado para el empleado "
             NroColumna = 1
             Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
             Exit Sub
         End If
         'Calculo la fecha de Inicio
         If IsDate(Fnac) Then
             If CDate(rs!altfec) > CDate(Fnac) Then
                     fechaInicio = rs!altfec
             Else
                     fechaInicio = Fnac
             End If
         Else
             Texto = ": " & " - Campo Fecha de Nacimiento del familiar no es válida.El formato es (dd/mm/aaaa) "
             NroColumna = 1
             Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
             Exit Sub
         End If
    End If


   'Fecha Vto
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de Vencimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    'pos2 = Len(strReg)
    If pos2 <= pos1 Then
        pos2 = Len(strReg)
        
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        ' Es obligatoria si el empleado paga salario familiar
        If nro_salario = -1 Then
            Obligatorio = True
        Else
            Obligatorio = False
        End If
        
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            Exit Sub
            If Not IsDate(Aux) Then
                Texto = ": " & " - Campo " & Campoetiqueta & " con valor: " & Aux & " no tiene un formato de fecha válido (dd/mm/aaaa)."
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                Exit Sub
            End If
        End If
        fechaVto = Aux
        If fechaVto = "N/A" Or EsNulo(fechaVto) Then
            fechaVto = "Null"
        End If
    Else
    
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        ' Es obligatoria si el empleado paga salario familiar
        If nro_salario = -1 Then
            Obligatorio = True
        Else
            Obligatorio = False
        End If
        
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            Exit Sub
            If Not IsDate(Aux) Then
                Texto = ": " & " - Campo " & Campoetiqueta & " con valor: " & Aux & " no tiene un formato de fecha válido (dd/mm/aaaa)."
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                Exit Sub
            End If
        End If
        fechaVto = Aux
        If fechaVto = "N/A" Or EsNulo(fechaVto) Then
            fechaVto = "Null"
        End If
    
        Item_DDJJ = 0
      
        'Nro de Item
        NroColumna = NroColumna + 1
        Obligatorio = False
        Campoetiqueta = "ITEM DDJJ"
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        Else
            
            If Aux = "N/A" Or EsNulo(Aux) Then
                Item_DDJJ = 0
            Else
                Item_DDJJ = Aux
            End If
            If CBool(nro_gan) Then
                StrSql = "SELECT itenro FROM item WHERE itenro = " & Item_DDJJ
                OpenRecordset StrSql, rs
                If rs.EOF Then
                    Texto = ": " & " - Campo " & Campoetiqueta & " no se encuentra"
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                End If
            End If
        End If
        
        'EGO - 07/06/2010 - fechas DDJJ
        
        Desde_DDJJ = 0
        'Desde fecha de DDJJ
        NroColumna = NroColumna + 1
        Obligatorio = False
        Campoetiqueta = "Fecha desde DDJJ"
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Desde_DDJJ = Aux
        If Desde_DDJJ = "N/A" Or EsNulo(Desde_DDJJ) Then
            Desde_DDJJ = "Null"
        End If
        
        Hasta_DDJJ = 0
        'Hasta fecha de DDJJ
        NroColumna = NroColumna + 1
        Obligatorio = False
        Campoetiqueta = "Fecha hasta DDJJ"
        pos1 = pos2 + 2
        'pos2 = Len(strReg)
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Hasta_DDJJ = Aux
        If Hasta_DDJJ = "N/A" Or EsNulo(Desde_DDJJ) Then
            Hasta_DDJJ = "Null"
        End If
        
    End If
    
    
'-------------------------------------------------
'-------------------------------------------------
    'TIPO DOCUMENTO 2
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tipo de Documento 2"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))

    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Or (TipDoc = Aux) Then
    
        If (TipDoc = Aux) Then
            Texto = ": " & " - Campo " & Campoetiqueta & " no puede ser el mismo tipo de doc. que el Documento 1"
        Else
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        End If
        
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    TipDoc2 = Aux
    If TipDoc2 <> "N/A" And Not EsNulo(TipDoc2) Then
        StrSql = " SELECT tidnro FROM tipodocu WHERE UPPER(tidsigla) = '" & UCase(TipDoc2) & "'"
        If rs_Sql.State = adStateOpen Then rs_Sql.Close
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            Nro_TDocumento2 = rs_Sql!tidnro
        Else
            'busco la primera institucion, si no existe la creo
            StrSql = " SELECT * FROM institucion "
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                Nro_Institucion = rs!InstNro
            Else
                'creo una
                StrSql = " INSERT INTO institucion (instdes,instabre) VALUES ('NACIONAL','NAC')"
                objConn.Execute StrSql, , adExecuteNoRecords
                Nro_Institucion = getLastIdentity(objConn, "institucion")
            End If
            'creo el tipo de documento
            StrSql = " INSERT INTO tipodocu(tidnom,tidsigla,tidsist,instnro,tidunico) VALUES ('" & UCase(TipDoc2) & "','" & UCase(TipDoc2) & "',0," & Nro_Institucion & ",0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            Nro_TDocumento2 = getLastIdentity(objConn, "tipodocu")
        End If
    Else
        Nro_TDocumento2 = 0
        
    End If
    
    
    If Nro_TDocumento2 <> 0 Then
        'Nro de Doc
        NroColumna = NroColumna + 1
        Obligatorio = True
        Campoetiqueta = "Nro de Documento 2"
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        NroDoc2 = Aux
        If NroDoc2 = "N/A" Or EsNulo(NroDoc2) Then
            NroDoc2 = "0"
        End If
    Else
        NroDoc2 = "0"
        pos1 = pos2 + 2 'mdf
        pos2 = InStr(pos1, strReg, separador) - 1 'mdf
    End If
    
    '____________________________________________________
    'GUARDERÍA
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Guardería"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = UCase(Trim(Mid(strReg, pos1, pos2 - pos1 + 1)))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    
    If Aux = "N/A" Or Aux = "NO" Then
        pos1 = pos2 + 2 'mdf
        pos2 = InStr(pos1, strReg, separador) - 1 'mdf
        Guarderia = 0
        FechaGuarderia = "Null"
    Else
        Guarderia = -1
        'FechaGuarderia
        NroColumna = NroColumna + 1
        Obligatorio = True
        Campoetiqueta = "Fecha Guarderia"
        pos1 = pos2 + 2
        'pos2 = Len(strReg)mdf
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            Exit Sub
            If Not IsDate(Aux) Then
                Texto = ": " & " - Campo " & Campoetiqueta & " con valor: " & Aux & " no tiene un formato de fecha válido (dd/mm/aaaa)."
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                Exit Sub
            End If
        End If
        FechaGuarderia = Aux
        If FechaGuarderia = "N/A" Or EsNulo(FechaGuarderia) Then
            FechaGuarderia = "Null"
        End If
    End If
    
'--------------------------------------------------------------------------------------------
'MDF agrego: fecha de documentacion, acta, tomo, folio, tribunal,juzgado, secretaria, comuna
'--------------------------------------------------------------------------------------------
    
    
   'fecha de la documentacion (famfecadopcion, campo en la tabla familiar)
   NroColumna = NroColumna + 1
   Obligatorio = False
   Campoetiqueta = "fecha de documentacion"
   pos1 = pos2 + 2
   pos2 = InStr(pos1, strReg, separador) - 1
   Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
   If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
       Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
       Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
       RegError = RegError + 1
       Exit Sub
       If Not IsDate(Aux) Then
          Texto = ": " & " - Campo " & Campoetiqueta & " con valor: " & Aux & " no tiene un formato de fecha válido (dd/mm/aaaa)."
          Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
          RegError = RegError + 1
          Exit Sub
       End If
   End If
   fecdocu = Aux
   If (Aux = "N/A") Then
    fecdocu = "Null"
   End If
 
  
   'Acta (famceracta, campo en la tabla familiar)
   NroColumna = NroColumna + 1
   Obligatorio = False
   Campoetiqueta = "Acta"
   pos1 = pos2 + 2
   pos2 = InStr(pos1, strReg, separador) - 1
   Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
   If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
      Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
      Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
      RegError = RegError + 1
      Exit Sub
   End If
   acta = Aux
   If (Aux = "N/A") Then
      acta = "Null"
   End If
   
   'Tomo (famcertomo, campo en la tabla familiar)
   NroColumna = NroColumna + 1
   Obligatorio = False
   Campoetiqueta = "Tomo"
   pos1 = pos2 + 2
   pos2 = InStr(pos1, strReg, separador) - 1
   Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
   If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
      Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
      Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
      RegError = RegError + 1
      Exit Sub
   End If
   tomo = Aux
   If (Aux = "N/A") Then
      tomo = "Null"
   End If
   
    'Folio (famcerfolio, campo en la tabla familiar)
   NroColumna = NroColumna + 1
   Obligatorio = False
   Campoetiqueta = "Folio"
   pos1 = pos2 + 2
   pos2 = InStr(pos1, strReg, separador) - 1
   Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
   If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
      Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
      Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
      RegError = RegError + 1
      Exit Sub
   End If
   folio = Aux
   If (Aux = "N/A") Then
      folio = "Null"
   End If
   
   'Tribunal (famtribunal, campo en la tabla familiar)
   NroColumna = NroColumna + 1
   Obligatorio = False
   Campoetiqueta = "Tribunal"
   pos1 = pos2 + 2
   pos2 = InStr(pos1, strReg, separador) - 1
   Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
   If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
      Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
      Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
      RegError = RegError + 1
      Exit Sub
   End If
   tribunal = Aux
   If (Aux = "N/A") Then
      tribunal = "Null"
   End If
   
   'Juzgado (famjuzgado, campo en la tabla familiar)
   NroColumna = NroColumna + 1
   Obligatorio = False
   Campoetiqueta = "Juzgado"
   pos1 = pos2 + 2
   pos2 = InStr(pos1, strReg, separador) - 1
   Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
   If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
      Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
      Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
      RegError = RegError + 1
      Exit Sub
   End If
   juzgado = Aux
   If (Aux = "N/A") Then
      juzgado = "Null"
   End If
   
   'Secretaria (famsecretaria, campo en la tabla familiar)
   NroColumna = NroColumna + 1
   Obligatorio = False
   Campoetiqueta = "Secretaria"
   pos1 = pos2 + 2
   pos2 = InStr(pos1, strReg, separador) - 1
   Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
   If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
      Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
      Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
      RegError = RegError + 1
      Exit Sub
   End If
   secretaria = Aux
   If (Aux = "N/A") Then
      secretaria = "Null"
   End If
   
   'Comuna (famcomuna, campo en la tabla familiar)
   NroColumna = NroColumna + 1
   Obligatorio = False
   Campoetiqueta = "Comuna"
   pos1 = pos2 + 2
   pos2 = Len(strReg) 'mdf
  ' pos2 = InStr(pos1, strReg, separador) - 1
   Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
   If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
      Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
      Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
      RegError = RegError + 1
      Exit Sub
   End If
   comuna = Aux
   If (Aux = "N/A") Then
      comuna = "Null"
   End If
    

'-------------------------------------------------
' fin mdf
'-------------------------------------------------

    

    
    ' Veo que la fecha de vencimiento no sea menor que la de inicio
    If IsDate(fechaVto) Then
        If CDate(fechaInicio) > CDate(fechaVto) Then
            Texto = ": " & " - Campo Fecha de vencimiento es mayor al de fecha de inicio."
            NroColumna = 1
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            Exit Sub
        Else
            fechaVto = ConvFecha(fechaVto)
        End If
    End If
    
    
    
    fechaInicio = ConvFecha(fechaInicio)
    Fnac = ConvFecha(Fnac)
    
' ==================================================================================
' ==================================================================================


'Busco el empleado asociado
StrSql = "SELECT ternro FROM empleado WHERE empleg = " & Legajo
If rs.State = adStateOpen Then rs.Close
OpenRecordset StrSql, rs
If Not rs.EOF Then
    NroEmpleado = rs!Ternro
Else
    Texto = ": " & " - Campo " & Campoetiqueta & " El legajo no existe"
    NroColumna = 1
    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    RegError = RegError + 1
    Exit Sub
End If
  
StrSql = "SELECT * FROM tercero "
StrSql = StrSql & " INNER JOIN ter_tip ON tercero.ternro = ter_tip.ternro AND ter_tip.tipnro = 3 "
StrSql = StrSql & " INNER JOIN familiar ON familiar.ternro = tercero.ternro AND familiar.empleado = " & NroEmpleado
StrSql = StrSql & " WHERE ternom = '" & nombre1 & "'"
StrSql = StrSql & " AND terape = '" & Apellido1 & "'"
If rs.State = adStateOpen Then rs.Close
OpenRecordset StrSql, rs
If rs.EOF Then
    'Inserto el tercero asociado al familiar
    
    StrSql = " INSERT INTO tercero(ternom,ternom2,terape,terape2,terfecnac,tersex,nacionalnro,paisnro,estcivnro)"
    StrSql = StrSql & " VALUES('" & nombre1 & "','" & nombre2 & "','" & Apellido1 & "','" & Apellido2 & "'," & Fnac & "," & nro_Sexo & ","
    If nro_nacionalidad <> 0 Then
      StrSql = StrSql & nro_nacionalidad & ","
    Else
      StrSql = StrSql & "Null,"
    End If
    If nro_paisnac <> 0 Then
      StrSql = StrSql & nro_paisnac & ","
    Else
      StrSql = StrSql & "Null,"
    End If
    StrSql = StrSql & nro_estciv & ")"
    objConn.Execute StrSql, , adExecuteNoRecords

    NroTercero = getLastIdentity(objConn, "tercero")
    
    'Inserto el Registro correspondiente en ter_tip
    StrSql = " INSERT INTO ter_tip(ternro,tipnro) VALUES(" & NroTercero & ",3)"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    '----------------------------------------------------------------------------
    'INSERTO FAMILIAR
    '----------------------------------------------------------------------------
    'NG - Se agregó famfecvtoguard,famguarderia
    StrSql = " INSERT INTO familiar(empleado,ternro,parenro,famest,famestudia,famcernac,faminc,famsalario,famemergencia,famcargadgi,osocial,plnro,famternro,famfec,famfecvto,famfecvtoguard,famguarderia,famfecadopcion,famceracta,famcertomo,famcerfolio,famtribunal,famjuzgado,famsecretaria,famcomuna)" 'mdf
    StrSql = StrSql & " values(" & NroEmpleado & "," & NroTercero & "," & nro_paren & ",-1," & nro_estudia & ",0," & nro_disc & "," & nro_salario & "," & nro_aviso & "," & nro_gan & "," & nro_osocial & "," & nro_planos & ",0," & fechaInicio & "," & fechaVto
    If EsNulo(FechaGuarderia) Then
        StrSql = StrSql & ",null," & Guarderia
    Else
        StrSql = StrSql & "," & ConvFecha(FechaGuarderia) & "," & Guarderia
    End If
    '-------mdf
    If EsNulo(fecdocu) Then
        StrSql = StrSql & ",null "
    Else
        StrSql = StrSql & "," & ConvFecha(fecdocu)
    End If
    
    If EsNulo(acta) Then
        StrSql = StrSql & ",null "
    Else
        StrSql = StrSql & ", '" & acta & "' "
    End If
    
    If EsNulo(tomo) Then
        StrSql = StrSql & ",null "
    Else
        StrSql = StrSql & ", '" & tomo & "' "
    End If
    
    If EsNulo(folio) Then
        StrSql = StrSql & ",null "
    Else
        StrSql = StrSql & ", '" & folio & "' "
    End If
    
    If EsNulo(tribunal) Then
        StrSql = StrSql & ",null "
    Else
        StrSql = StrSql & ", '" & tribunal & "' "
    End If
    
    If EsNulo(juzgado) Then
        StrSql = StrSql & ",null "
    Else
        StrSql = StrSql & ", '" & juzgado & "' "
    End If
    
    If EsNulo(secretaria) Then
        StrSql = StrSql & ",null "
    Else
        StrSql = StrSql & ", '" & secretaria & "' "
    End If
    
    If EsNulo(comuna) Then
        StrSql = StrSql & ",null "
    Else
        StrSql = StrSql & ", '" & comuna & "' "
    End If
    
    
    '------ fin mdf
    
    StrSql = StrSql & ")"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    'Inserto los estudios de familiar
    If nro_estudia = -1 Then
        StrSql = " INSERT INTO estudio_actual (ternro, nivnro) VALUES (" & NroTercero & "," & nro_nivest & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
    End If
    
    Texto = "Inserte el Familiar - " & Legajo & " - " & Apellido1 & " - " & nombre1
    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
Else
    'Actualizo los datos
    StrSql = "UPDATE tercero SET "
    StrSql = StrSql & " terfecnac = " & Fnac
    StrSql = StrSql & " ,tersex = " & nro_Sexo
    If nro_nacionalidad <> 0 Then
        StrSql = StrSql & " ,nacionalnro = " & nro_nacionalidad
    End If
    If nro_paisnac <> 0 Then
        StrSql = StrSql & " ,paisnro = " & nro_paisnac
    End If
    StrSql = StrSql & " WHERE ternro = " & rs!Ternro
    objConn.Execute StrSql, , adExecuteNoRecords

    NroTercero = rs!Ternro

    StrSql = "UPDATE familiar SET "
    StrSql = StrSql & " parenro = " & nro_paren
    StrSql = StrSql & " ,famestudia = " & nro_estudia
    StrSql = StrSql & " ,faminc = " & nro_disc
    StrSql = StrSql & " ,famsalario = " & nro_salario
    StrSql = StrSql & " ,famemergencia = " & nro_aviso
    StrSql = StrSql & " ,famcargadgi = " & nro_gan
    StrSql = StrSql & " ,osocial = " & nro_osocial
    StrSql = StrSql & " ,plnro = " & nro_planos
    StrSql = StrSql & " ,famternro = 0"
    'NG 05/07/2013
    If EsNulo(FechaGuarderia) Then
        StrSql = StrSql & " ,famfecvtoguard=NULL"
    Else
        StrSql = StrSql & " ,famfecvtoguard=" & ConvFecha(FechaGuarderia)
    End If
    StrSql = StrSql & " ,famguarderia=" & Guarderia
    '------------------mdf famfecadopcion,famceracta,famcertomo,famcerfolio,famtribunal,famjuzgado,famsecretaria,famcomuna
     If EsNulo(fecdocu) Then
        StrSql = StrSql & ",famfecadopcion = null "
    Else
        StrSql = StrSql & ", famfecadopcion=" & ConvFecha(fecdocu)
    End If
    
    If EsNulo(acta) Then
        StrSql = StrSql & ",famceracta=null "
    Else
        StrSql = StrSql & ",famceracta= '" & acta & "' "
    End If
    
    If EsNulo(tomo) Then
        StrSql = StrSql & ", famcertomo= null "
    Else
        StrSql = StrSql & ", famcertomo= '" & tomo & "' "
    End If
    
    If EsNulo(folio) Then
        StrSql = StrSql & ", famcerfolio=null "
    Else
        StrSql = StrSql & ",famcerfolio= '" & folio & "' "
    End If
    
    If EsNulo(tribunal) Then
        StrSql = StrSql & ", famtribunal=null "
    Else
        StrSql = StrSql & ",famtribunal= '" & tribunal & "' "
    End If
    
    If EsNulo(juzgado) Then
        StrSql = StrSql & ",famjuzgado=null "
    Else
        StrSql = StrSql & ",famjuzgado= '" & juzgado & "' "
    End If
    
    If EsNulo(secretaria) Then
        StrSql = StrSql & ",famsecretaria=null "
    Else
        StrSql = StrSql & ",famsecretaria= '" & secretaria & "' "
    End If
    
    If EsNulo(comuna) Then
        StrSql = StrSql & ",famcomuna=null "
    Else
        StrSql = StrSql & ", famcomuna='" & comuna & "' "
    End If
    
    '-------------------- fin mdf
    
    StrSql = StrSql & " WHERE empleado = " & NroEmpleado
    StrSql = StrSql & " AND ternro = " & NroTercero
    objConn.Execute StrSql, , adExecuteNoRecords

    If nro_estudia = -1 Then
        StrSql = " SELECT ternro FROM estudio_actual WHERE ternro = " & NroTercero
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
            StrSql = " INSERT INTO estudio_actual (ternro, nivnro) VALUES (" & NroTercero & "," & nro_nivest & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
        Else
            StrSql = " UPDATE estudio_actual SET nivnro = " & nro_nivest
            StrSql = StrSql & "WHERE ternro = " & NroTercero
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
    
    Else
        'StrSql = " DELETE FROM estudio_actual WHERE ternro = " & NroTercero
        'objConn.Execute StrSql, , adExecuteNoRecords
    End If
    
    Texto = "Familiar actualizado - " & Legajo & " - " & Apellido1 & " - " & nombre1
    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
End If



'Inserto los Documentos
' Dimatz Rafael valido que no exista el documento

If NroDoc2 <> "0" Then
    b = 1
Else
    b = 0
End If


For a = 0 To b

    If a = 1 Then
        NroDoc = NroDoc2
        Nro_TDocumento = Nro_TDocumento2
    End If

    StrSql = "SELECT * FROM ter_doc WHERE nrodoc = '" & NroDoc & "'"
    StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
    OpenRecordset StrSql, rs_Doc
    If Not rs_Doc.EOF Then
         'MsgBox ("Este documento ya existe") ' 13-12-2010 -se comenta-cuelga el proceso
        Texto = ": " & "Este documento ya existe"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
    Else
        If NroDoc <> "" And NroDoc <> "N/A" And TipDoc <> "N/A" Then
            StrSql = "SELECT * FROM ter_doc WHERE ternro = " & NroTercero
            StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If rs.EOF Then
                StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
                StrSql = StrSql & " VALUES(" & NroTercero & "," & Nro_TDocumento & ",'" & NroDoc & "')"
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = ": " & "Inserte el Documento - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            Else
                StrSql = " UPDATE ter_doc SET "
                StrSql = StrSql & " nrodoc = '" & NroDoc & "'"
                StrSql = StrSql & " WHERE ternro = " & NroTercero
                StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = ": " & "Documento actualizado - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
    End If
Next


'Inserto el Domicilio
'If Not IngresoDom = False Then
'    StrSql = "SELECT * FROM cabdom  "
'    StrSql = StrSql & " WHERE tipnro = 1"
'    StrSql = StrSql & " AND ternro = " & NroTercero
'    StrSql = StrSql & " AND domdefault = -1"
'    StrSql = StrSql & " AND tidonro = 2"
'    If rs.State = adStateOpen Then rs.Close
'    OpenRecordset StrSql, rs
'    If rs.EOF Then
'        StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
'        StrSql = StrSql & " VALUES(1," & NroTercero & ",-1,2)"
'        objConn.Execute StrSql, , adExecuteNoRecords
'
'        NroDom = getLastIdentity(objConn, "cabdom")
'
'        StrSql = " INSERT INTO detdom(domnro,calle,nro,piso,oficdepto,torre,manzana,codigopostal,"
'        StrSql = StrSql & "locnro,provnro,paisnro,barrio,partnro,zonanro) "
'        StrSql = StrSql & " VALUES (" & NroDom & ",'" & Calle & "','" & Nro_Nrodom & "','" & Piso & "','"
'        StrSql = StrSql & Depto & "','" & Torre & "','" & Manzana & "','" & Cpostal & "'," & Nro_Localidad & ","
'        StrSql = StrSql & Nro_Provincia & "," & Nro_Pais & ",'" & Barrio & "'," & Nro_Partido & "," & Nro_Zona & ")"
'        objConn.Execute StrSql, , adExecuteNoRecords
'
'        Texto = ": " & "Domicilio Insertado - "
'        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
'
'        If Telefono <> "" Then
'            StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
'            StrSql = StrSql & " VALUES(" & NroDom & ",'" & Telefono & "',0,-1,0,1)"
'            objConn.Execute StrSql, , adExecuteNoRecords
'
'            Texto = ": " & "Inserte el Telefono Principal - "
'            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
'        End If
'    Else
'        StrSql = " UPDATE detdom SET "
'        StrSql = StrSql & " calle =" & "'" & Calle & "'"
'        StrSql = StrSql & ",nro =" & "'" & Nro_Nrodom & "'"
'        StrSql = StrSql & ",piso =" & "'" & Piso & "'"
'        StrSql = StrSql & ",oficdepto =" & "'" & Depto & "'"
'        StrSql = StrSql & ",torre =" & "'" & Torre & "'"
'        StrSql = StrSql & ",manzana =" & "'" & Manzana & "'"
'        StrSql = StrSql & ",codigopostal =" & "'" & Cpostal & "'"
'        StrSql = StrSql & ",entrecalles =" & "'" & Entre & "'"
'        StrSql = StrSql & ",locnro =" & Nro_Localidad
'        StrSql = StrSql & ",provnro =" & Nro_Provincia
'        StrSql = StrSql & ",paisnro =" & Nro_Pais
'        StrSql = StrSql & ", partnro = " & Nro_Partido
'        StrSql = StrSql & ", zonanro =" & Nro_Zona
'        StrSql = StrSql & " WHERE domnro = " & rs!domnro
'        objConn.Execute StrSql, , adExecuteNoRecords
'
'        Texto = ": " & "Domicilio Actualizado - "
'        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
'
'        If Telefono <> "" Then
'            StrSql = "SELECT * FROM telefono "
'            StrSql = StrSql & " WHERE domnro =" & rs!domnro
'            StrSql = StrSql & " AND telnro ='" & Telefono & "'"
'            If rs_Tel.State = adStateOpen Then rs_Tel.Close
'            OpenRecordset StrSql, rs_Tel
'            If rs_Tel.EOF Then
'                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
'                StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
'                StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & Telefono & "',0,-1,0,1)"
'                objConn.Execute StrSql, , adExecuteNoRecords
'
'                Texto = ": " & "Inserte el Telefono Principal - "
'                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
'            End If
'        End If
'    End If
'End If



'FGZ - 12/04/2010 - DDJJ
'EGO - 07/06/2010 - DDJJ
If CBool(nro_gan) And Item_DDJJ <> 0 Then
    Anio_DDJJ = Year(Desde_DDJJ)

    StrSql = "SELECT desmondec "
    StrSql = StrSql & " FROM desmen "
    StrSql = StrSql & " WHERE empleado = " & NroEmpleado
    StrSql = StrSql & " AND     itenro = " & Item_DDJJ
    StrSql = StrSql & " AND  desfecdes = " & ConvFecha(Desde_DDJJ)
    StrSql = StrSql & " AND  desfechas = " & ConvFecha(Hasta_DDJJ)
    OpenRecordset StrSql, rs
    If rs.EOF Then
        StrSql = "INSERT INTO desmen (itenro, desano, desfecdes, desfechas, desmondec, empleado)"
        StrSql = StrSql & "VALUES (" & Item_DDJJ
        StrSql = StrSql & "," & Anio_DDJJ
        StrSql = StrSql & "," & ConvFecha(Desde_DDJJ)
        StrSql = StrSql & "," & ConvFecha(Hasta_DDJJ)
        StrSql = StrSql & ",1"
        StrSql = StrSql & "," & NroEmpleado
        StrSql = StrSql & ")"
    Else
        StrSql = "UPDATE desmen SET desmondec = desmondec + 1"
        StrSql = StrSql & " WHERE itenro = " & Item_DDJJ
        StrSql = StrSql & " AND empleado = " & NroEmpleado
        StrSql = StrSql & " AND desfecdes = " & ConvFecha(Desde_DDJJ)
        StrSql = StrSql & " AND desfechas = " & ConvFecha(Hasta_DDJJ)
    End If
    objConn.Execute StrSql, , adExecuteNoRecords
End If

OK = True

'Cierro y libero
If rs.State = adStateOpen Then rs.Close
If rs_Tel.State = adStateOpen Then rs_Tel.Close
Set rs = Nothing
Set rs_Tel = Nothing


Exit Sub

SaltoLinea:
    Texto = " Error (299): " & Err.Description
    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, strReg)
    MyRollbackTrans
    OK = False
End Sub



Public Sub LineaModelo_2000(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion:  Interface Indicadores individuales
'               Inserta en la tabla entregas
' Autor      : Ruiz Miriam
'              El formato es:
'                      Legajo, Año, Mes, Cantidad de Entregas ,Cantidad FT ,Cantidad de Rechazos, Observaciones,
'                      Actualización, Bug ,Cambios Legales, Custom, Mejora de producto,
'                      Nacionalizaciones, Productos ,QA Actualización contínua
' Fecha      : 11/12/2014
' Ultima Mod.:
' ---------------------------------------------------------------------------------------------

Dim pos1 As Long
Dim pos2 As Long
Dim Aux As String
Dim campos

Dim Tercero As Long
Dim NroLegajo As Long
Dim Anio As Integer
Dim Mes As Integer
Dim Entregas As Integer
Dim FT As Integer
Dim Rechazos As Integer
Dim Observaciones As String
Dim Actualizacion As Integer
Dim Bug As Integer
Dim Cambios_legales As Integer
Dim Custom As Integer
Dim Mejoras As Integer
Dim Nacionalizaciones As Integer
Dim Productos As Integer
Dim Act_continua As Integer
Dim Suma_Entregas As Integer

Dim errnro As Long

Dim rs_Empleado As New ADODB.Recordset
Dim rs As New ADODB.Recordset

    
    On Error GoTo Manejador_De_Error
    ' RegError = 0
    Texto = "Procesando linea " & strLinea
    Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    
    campos = Split(strLinea, separador)
     'FGZ - 29/12/2014 ------------
    'If UBound(campos) = 15 Then
      If UBound(campos) = 14 Then
        '==========================================================================================================
        'Nro de Legajo
        '==========================================================================================================
        NroColumna = NroColumna + 1
        Aux = campos(0)
        If IsNumeric(Aux) Then
            NroLegajo = Aux
        Else
            Texto = ": " & "El legajo no es numerico "
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
           
            Texto = " "
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            HuboError = True
            RegError = RegError + 1
            Exit Sub
        End If
        
        'Que exista el legajo
        StrSql = "SELECT ternro, empleg, terape, ternom FROM empleado where empleg = " & NroLegajo
        OpenRecordset StrSql, rs_Empleado
        If rs_Empleado.EOF Then
            Texto = ": " & "No se encontro el legajo " & NroLegajo
            NroColumna = 1
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            HuboError = True
            RegError = RegError + 1
            Exit Sub
        Else
            Tercero = rs_Empleado!Ternro
            Flog.writeline "Empleado encontrado."
        End If
        
     
        '==========================================================================================================
        'Año
        '==========================================================================================================
        NroColumna = NroColumna + 1
        Aux = campos(1)
       
        If Not IsNumeric(Aux) Then
          
            Texto = ": " & "El año no es numerico " & Aux
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            RegError = RegError + 1
            HuboError = True
            Exit Sub
        Else
            Anio = Aux
        End If
    
         
        
        '==========================================================================================================
        'Mes
        '==========================================================================================================
        NroColumna = NroColumna + 1
        Aux = campos(2)
     
        If Not IsNumeric(Aux) Then
          
            Texto = ": " & "El mes no es numerico " & Aux
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            RegError = RegError + 1
            HuboError = True
            Exit Sub
        Else
            Mes = Aux
            If Mes < 1 Or Mes > 12 Then
                Texto = ": " & "El número de mes es incorrecto. " & Aux
                Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                HuboError = True
                RegError = RegError + 1
                Exit Sub
            End If
            
        End If
        
        
        '==========================================================================================================
        'Cantidad de entregas
        '==========================================================================================================
        NroColumna = NroColumna + 1
        
         Aux = campos(3)
       
        If Not IsNumeric(Aux) Then
          
            Texto = ": " & "La cantidad de entregas no es numérica " & Aux
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            RegError = RegError + 1
            HuboError = True
            Exit Sub
        Else
           If Aux >= 0 Then
                Entregas = Aux
            Else
                 Texto = ": " & "La cantidad de entregas no puede ser negativa " & Aux
                  Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            RegError = RegError + 1
            HuboError = True
            Exit Sub
            End If
        End If
     
        '==========================================================================================================
        'Cantidad FT
        '==========================================================================================================
        NroColumna = NroColumna + 1
        
         Aux = campos(4)
       
        If Not IsNumeric(Aux) Then
          
            Texto = ": " & "La cantidad de entregas FT no es numérica " & Aux
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            RegError = RegError + 1
            HuboError = True
            Exit Sub
        Else
            
            If Aux >= 0 Then
               FT = Aux
            Else
                 Texto = ": " & "La cantidad de FT no puede ser negativa " & Aux
                  Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            RegError = RegError + 1
                HuboError = True
                Exit Sub
            End If
            
        End If
    
         
        '==========================================================================================================
        'Cantidad de Rechazos
        '==========================================================================================================
        NroColumna = NroColumna + 1
        
         Aux = campos(5)
       
        If Not IsNumeric(Aux) Then
          
            Texto = ": " & "La cantidad de rechazos no es numérica " & Aux
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            RegError = RegError + 1
            HuboError = True
            Exit Sub
        Else
            
            If Aux >= 0 Then
               Rechazos = Aux
            Else
                 Texto = ": " & "La cantidad de rechazos no puede ser negativa " & Aux
                  Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                 RegError = RegError + 1
                HuboError = True
                Exit Sub
            End If
        End If
    
     
        '==========================================================================================================
        'Observaciones
        '==========================================================================================================
        NroColumna = NroColumna + 1
        
         Observaciones = campos(6)
        
        '==========================================================================================================
        'Cantidad de Actualizaciones
        '==========================================================================================================
        NroColumna = NroColumna + 1
        
         Aux = campos(7)
       
        If Not IsNumeric(Aux) Then
          
            Texto = ": " & "La cantidad de Actualizaciones no es numérica " & Aux
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            RegError = RegError + 1
            HuboError = True
            Exit Sub
        Else
           
            If Aux >= 0 Then
                Actualizacion = Aux
            Else
                 Texto = ": " & "La cantidad de Actualizaciones no puede ser negativa " & Aux
                  Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            RegError = RegError + 1
                HuboError = True
                Exit Sub
            End If
        End If
        '==========================================================================================================
        'Cantidad de Bug
        '==========================================================================================================
        NroColumna = NroColumna + 1
        
         Aux = campos(8)
       
        If Not IsNumeric(Aux) Then
          
            Texto = ": " & "La cantidad de Bug no es numérica " & Aux
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            RegError = RegError + 1
            HuboError = True
            Exit Sub
        Else
           
            If Aux >= 0 Then
                 Bug = Aux
            Else
                 Texto = ": " & "La cantidad de Bug no puede ser negativa " & Aux
                  Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            RegError = RegError + 1
                HuboError = True
                Exit Sub
            End If
        End If
    
           '==========================================================================================================
        'Cantidad de Cambios Legales
        '==========================================================================================================
        NroColumna = NroColumna + 1
        
         Aux = campos(9)
       
        If Not IsNumeric(Aux) Then
          
            Texto = ": " & "La cantidad de Cambios legales no es numérica " & Aux
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            RegError = RegError + 1
            HuboError = True
            Exit Sub
        Else
            
              If Aux >= 0 Then
                 Cambios_legales = Aux
            Else
                 Texto = ": " & "La cantidad de Cambios_legales no puede ser negativa " & Aux
                  Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            RegError = RegError + 1
                HuboError = True
                Exit Sub
            End If
        End If
    
        
        '==========================================================================================================
        'Cantidad de Custom
        '==========================================================================================================
        NroColumna = NroColumna + 1
        
         Aux = campos(10)
       
        If Not IsNumeric(Aux) Then
          
            Texto = ": " & "La cantidad de Custom no es numérica " & Aux
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            RegError = RegError + 1
            HuboError = True
            Exit Sub
        Else
            
            If Aux >= 0 Then
                 Custom = Aux
            Else
                 Texto = ": " & "La cantidad de custom no puede ser negativa " & Aux
                  Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            RegError = RegError + 1
                HuboError = True
                Exit Sub
            End If
        End If
        
        '==========================================================================================================
        'Cantidad de Mejoras de producto
        '==========================================================================================================
        NroColumna = NroColumna + 1
        
         Aux = campos(11)
       
        If Not IsNumeric(Aux) Then
          
            Texto = ": " & "La cantidad de Mejoras no es numérica " & Aux
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            RegError = RegError + 1
            HuboError = True
            Exit Sub
        Else
            
            If Aux >= 0 Then
                 Mejoras = Aux
            Else
                 Texto = ": " & "La cantidad de mejoras no puede ser negativa " & Aux
                  Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            RegError = RegError + 1
                HuboError = True
                Exit Sub
            End If
        End If
        '==========================================================================================================
        'Cantidad de Nacionalizaciones
        '==========================================================================================================
        NroColumna = NroColumna + 1
        
         Aux = campos(12)
       
        If Not IsNumeric(Aux) Then
          
            Texto = ": " & "La cantidad de Nacionalizaciones no es numérica " & Aux
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            RegError = RegError + 1
            HuboError = True
            Exit Sub
        Else
            
            If Aux >= 0 Then
                 Nacionalizaciones = Aux
            Else
                 Texto = ": " & "La cantidad de Nacionalizaciones no puede ser negativa " & Aux
                  Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            RegError = RegError + 1
                HuboError = True
                Exit Sub
            End If
        End If
        '==========================================================================================================
        'Cantidad de Productos
        '==========================================================================================================
        NroColumna = NroColumna + 1
        
         Aux = campos(13)
       
        If Not IsNumeric(Aux) Then
          
            Texto = ": " & "La cantidad de Productos no es numérica " & Aux
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            RegError = RegError + 1
            HuboError = True
            Exit Sub
        Else
            
            If Aux >= 0 Then
                 Productos = Aux
            Else
                 Texto = ": " & "La cantidad de Productos no puede ser negativa " & Aux
                  Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            RegError = RegError + 1
                HuboError = True
                Exit Sub
            End If
        End If
    
        '==========================================================================================================
        'Cantidad de Actualizacion continua
        '==========================================================================================================
        NroColumna = NroColumna + 1
        
         Aux = campos(14)
       
        If Not IsNumeric(Aux) Then
          
            Texto = ": " & "La cantidad de Actualizaciones continuas no es numérica " & Aux
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            RegError = RegError + 1
            HuboError = True
            Exit Sub
        Else
            
            If Aux >= 0 Then
                 Act_continua = Aux
            Else
                 Texto = ": " & "La cantidad de Actualizaciones continuas no puede ser negativa " & Aux
                  Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            RegError = RegError + 1
                HuboError = True
                Exit Sub
            End If
        End If
        
        Suma_Entregas = Actualizacion + Bug + Cambios_legales + Custom + Mejoras + Nacionalizaciones + Productos + Act_continua
        If Suma_Entregas <> Entregas Then
                Texto = "La cantidad de entregas no coincide con el desglose. Tercero:" & Tercero & " Año:" & Anio & " Mes: " & Mes
                Call Escribir_Log("floge", NroLinea, 1, Texto, Tabs, strLinea)
                 RegError = RegError + 1
        Else
            '==========================================================================================================
            'Verifico si existe en entregas el empleado para este mes y año
            '==========================================================================================================
            StrSql = " SELECT * FROM Entregas " & _
                     " WHERE Ternro = " & Tercero & " AND anio = " & Anio & _
                     " AND mes = " & Mes
            
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                '==========================================================================================================
                'Existe algún registro en  entregas del empleado para este mes y año
                '==========================================================================================================
                StrSql = "UPDATE Entregas SET ternro= " & Tercero & " , legajo= " & NroLegajo & " ,anio= " & Anio & ",mes= " & Mes
                StrSql = StrSql & " , cant_entregas= " & Entregas & " ,cant_ft= " & FT & ",cant_rech= " & Rechazos & " ,obs='" & Observaciones
                StrSql = StrSql & "' , s1= " & Actualizacion & ",s2= " & Bug & ",s3= " & Cambios_legales & ",s4=" & Custom & ",s5=" & Mejoras
                StrSql = StrSql & " ,s6=" & Nacionalizaciones & ",s7=" & Productos & ",s8=" & Act_continua
                StrSql = StrSql & " WHERE entnro = " & rs!entnro
                
                objConn.Execute StrSql, , adExecuteNoRecords
               
               
            Else
                '==========================================================================================================
                'Inserto los datos ternro,legajo,anio,mes,cant_entregas,cant_ft,cant_rech,obs,s1,s2,s3,s4,s5,s6,s7,s8
                '==========================================================================================================
                StrSql = "INSERT INTO Entregas (ternro,legajo,anio,mes"
                StrSql = StrSql & " , cant_entregas,cant_ft,cant_rech,obs"
                StrSql = StrSql & " , s1,s2,s3,s4,s5,s6,s7,s8"
                StrSql = StrSql & " ) VALUES (" & Tercero & "," & NroLegajo & ", " & Anio
                StrSql = StrSql & " ," & Mes & "," & Entregas
                StrSql = StrSql & " ," & FT & "," & Rechazos
                StrSql = StrSql & " ,'" & Observaciones & "'," & Actualizacion
                StrSql = StrSql & " ," & Bug & "," & Cambios_legales & "," & Custom
                StrSql = StrSql & " ," & Mejoras & "," & Nacionalizaciones & "," & Productos
                StrSql = StrSql & " ," & Act_continua & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = "Datos Insertados "
                Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
            End If
        End If
     Else
         Texto = "Cantidad de parámetros incorrecta"
         Call Escribir_Log("floge", NroLinea, 1, Texto, Tabs, strLinea)
          RegError = RegError + 1
     End If
     
Fin:
'Cierro todo y libero
If rs_Empleado.State = adStateOpen Then rs_Empleado.Close
If rs.State = adStateOpen Then rs.Close

Set rs_Empleado = Nothing
Set rs = Nothing
Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    Texto = Err.Description
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    GoTo Fin
End Sub

Public Sub LineaModelo_2001(ByVal strLinea As String, ByRef OK As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Interface Planilla Horaria
' Autor      : Gonzalez Nicolás
' Fecha      : 22/12/2014
' Ultima Mod.:
' ---------------------------------------------------------------------------------------------
' FORMATO : legajo, Día, Hora desde, Hora Hasta, Hora desde (Descanso), Hora Hasta (Descanso)
' ---------------------------------------------------------------------------------------------
Dim pos1 As Long
Dim pos2 As Long
Dim Aux As String
Dim campos

Dim Tercero As Long
Dim NroLegajo As Long
Dim Dia As String

Dim plahordia As Integer
Dim plahorent As String
Dim plahorsal As String
Dim plahordescom As String
Dim plahordesfin As String
Dim objHoras As New FechasHoras
HuboError = False
Dim rs_Empleado As New ADODB.Recordset
Dim rs As New ADODB.Recordset

    

    ' RegError = 0
    Tabs = 1
    Flog.writeline ""
    Texto = "Procesando linea " & strLinea
    Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    campos = Split(strLinea, separador)

    '==========================================================================================================
    'Nro de Legajo
    '==========================================================================================================
    NroColumna = NroColumna + 1
    Aux = campos(0)
    If IsNumeric(Aux) Then
        NroLegajo = Aux
    Else
        Texto = ": " & "El legajo no es numerico "
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        HuboError = True
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Que exista el legajo
    StrSql = "SELECT ternro, empleg, terape, ternom FROM empleado where empleg = " & NroLegajo
    OpenRecordset StrSql, rs_Empleado
    If rs_Empleado.EOF Then
        Texto = ": " & "No se encontro el legajo " & NroLegajo
        NroColumna = 1
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        HuboError = True
        RegError = RegError + 1
        Exit Sub
    Else
        Tercero = rs_Empleado!Ternro
        Texto = EscribeLogMI("Empleado") & ": " & rs_Empleado!empleg & " - " & rs_Empleado!terape & ", " & rs_Empleado!ternom
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    End If
        
     
    '==========================================================================================================
    'Valido el día
    '==========================================================================================================
    NroColumna = NroColumna + 1
    Aux = campos(1)
    If Aux <> "" Then
        Dia = EliminarCHInvalidosII(Aux, 0, "")
        plahordia = 0
        Select Case UCase(Dia)
            Case UCase(EscribeLogMI("Domingo")):
                    plahordia = 1
            Case UCase(EscribeLogMI("Lunes")):
                    plahordia = 2
            Case UCase(EscribeLogMI("Martes")):
                    plahordia = 3
            Case UCase(EscribeLogMI("Miércoles")), UCase(EscribeLogMI("Miercoles")):
                    plahordia = 4
            Case UCase(EscribeLogMI("Jueves")):
                    plahordia = 5
            Case UCase(EscribeLogMI("Viernes")):
                    plahordia = 6
            Case UCase(EscribeLogMI("Sábado")), UCase(EscribeLogMI("Sabado")):
                    plahordia = 7
        End Select
        If plahordia = 0 Then
         Texto = ": " & "El Día es incorrecto "
         Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        
         Texto = " "
         Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
         HuboError = True
         RegError = RegError + 1
         Exit Sub
        End If
    
    Else
        Texto = ": " & "El Día es incorrecto "
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
       
        Texto = " "
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        HuboError = True
        RegError = RegError + 1
        Exit Sub
    End If
    
      
      
      '==========================================================================================================
      'Hora Desde
      '==========================================================================================================
        NroColumna = NroColumna + 1
        Aux = campos(2)
        'Aux = controlHora(Aux)
        If objHoras.ValidarHora(Aux) = False Then
            Texto = ": " & EscribeLogMI("La Hora Desde es Invalida") & " " & Aux
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            RegError = RegError + 1
            HuboError = True
            Exit Sub
        Else
            plahorent = Trim(Aux)
        End If
     
        '==========================================================================================================
        'Hora Hasta
        '==========================================================================================================
        NroColumna = NroColumna + 1
        Aux = campos(3)
        If objHoras.ValidarHora(Aux) = False Then
            Texto = ": " & EscribeLogMI("Debe ingresar la hora hasta o esta mal ingresada") & " " & Aux
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            RegError = RegError + 1
            HuboError = True
            Exit Sub
        Else
            plahorsal = Trim(Aux)
        End If
    
         
        '==========================================================================================================
        'Descanso
        '==========================================================================================================
        NroColumna = NroColumna + 1
        Aux = campos(4)
        If Trim(Aux) <> "" Then
            If objHoras.ValidarHora(Aux) = False Then
                Texto = ": " & EscribeLogMI("Descanso") & " " & EscribeLogMI("La Hora Desde es Invalida") & " " & Aux
                Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                RegError = RegError + 1
                HuboError = True
                Exit Sub
            Else
                plahordescom = Aux
                'Valido hora hasta
                NroColumna = NroColumna + 1
                Aux = campos(5)
                If objHoras.ValidarHora(Aux) = False Then
                    Texto = ": " & EscribeLogMI("Descanso") & " " & EscribeLogMI("Debe ingresar la hora hasta o esta mal ingresada") & " " & Aux
                    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                    RegError = RegError + 1
                    HuboError = True
                    Exit Sub
                Else
                    plahordesfin = Aux
                End If
            End If
        End If
     

        '==========================================================================================================
        'Si existe hago update sino lo inserto
        '==========================================================================================================
        StrSql = " SELECT plahornro FROM planillahorario WHERE ternro = " & Tercero
        StrSql = StrSql & " AND plahordia= " & plahordia
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            '==========================================================================================================
            'PISO EL REGISTRO EXISTENTE
            '==========================================================================================================
            StrSql = "UPDATE planillahorario SET "
            StrSql = StrSql & " plahorent='" & plahorent & "'"
            StrSql = StrSql & ",plahorsal='" & plahorsal & "'"
            StrSql = StrSql & ",plahordescom='" & plahordescom & "'"
            StrSql = StrSql & ",plahordesfin='" & plahordesfin & "'"
            StrSql = StrSql & " WHERE plahornro = " & rs!plahornro
            objConn.Execute StrSql, , adExecuteNoRecords
            Texto = "Datos Actualizados "
            Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
            
        Else
            '==========================================================================================================
            'INSERTO DATOS
            '==========================================================================================================
            StrSql = "INSERT INTO planillahorario"
            StrSql = StrSql & "(ternro,plahordia,plahorent,plahorsal,plahordescom,plahordesfin)"
            StrSql = StrSql & " VALUES (" & Tercero & "," & plahordia
            StrSql = StrSql & " ,'" & plahorent & "','" & plahorsal & "','" & plahordescom & "','" & plahordesfin & "'"
            StrSql = StrSql & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            Texto = "Datos Insertados "
            'Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
        End If

Texto = ": " & "Linea procesada correctamente "
Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strLinea)

OK = True
         
FinLinea:
If rs.State = adStateOpen Then
    rs.Close
End If
Exit Sub

SaltoLinea:
    Texto = ": " & " - Error:" & Err.Description & " -- Ultima consulta: " & StrSql
    NroColumna = 1
    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
    MyRollbackTrans
    OK = False
    GoTo FinLinea
End Sub


Public Sub LineaModelo_2002(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Interface Horario Cumplido
' Autor      : Miriam Ruiz
' Fecha      : 13/05/2015
' Ultima Mod.:
' ---------------------------------------------------------------------------------------------
' FORMATO : legajo, Fecha procesamiento, Tipo de Hora, Cant Horas(decimal), Fecha Desde, Hora desde, Fecha Hasta, Hora Hasta
' ---------------------------------------------------------------------------------------------
Dim pos1 As Long
Dim pos2 As Long
Dim Aux As String
Dim campos

Dim Tercero As Long
Dim NroLegajo As Long
Dim Dia As String

Dim FechaProc As String
Dim DescHora As String ' descripción del tipo de hora
Dim TipoHora As Integer
Dim canthoras As Double
Dim HoraHexa As String
Dim FechaD As Date
Dim FechaH As Date
Dim HoraD  As String
Dim HoraH  As String

Dim objHoras As New FechasHoras
HuboError = False
Dim rs_Empleado As New ADODB.Recordset
Dim rs As New ADODB.Recordset
Dim TotDias As Integer
Dim Horas As Long
Dim Minutos As Long
Dim objFechasHoras As New FechasHoras
Dim horaAux As Double
Dim l_hornro
Dim l_thnro
    

    ' RegError = 0
    Tabs = 1
    Flog.writeline ""
    Texto = "Procesando linea " & strLinea
    Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    campos = Split(strLinea, separador)
If UBound(campos) < 7 Then

        Texto = ": " & "Faltan parámetros "
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        HuboError = True
        RegError = RegError + 1
        Exit Sub
Else
    '==========================================================================================================
    'Nro de Legajo
    '==========================================================================================================
    NroColumna = NroColumna + 1
    Aux = campos(0)
    If IsNumeric(Aux) Then
        NroLegajo = Aux
    Else
        Texto = ": " & "El legajo no es numerico "
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        HuboError = True
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Que exista el legajo
    StrSql = "SELECT ternro, empleg, terape, ternom FROM empleado where empleg = " & NroLegajo
    OpenRecordset StrSql, rs_Empleado
    If rs_Empleado.EOF Then
        Texto = ": " & "No se encontro el legajo " & NroLegajo
        NroColumna = 1
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        HuboError = True
        RegError = RegError + 1
        Exit Sub
    Else
        Tercero = rs_Empleado!Ternro
        Texto = EscribeLogMI("Empleado") & ": " & rs_Empleado!empleg & " - " & rs_Empleado!terape & ", " & rs_Empleado!ternom
        Call Escribir_Log("flogp", NroLinea, NroColumna, Texto, Tabs, strLinea)
    End If
        
     
    '==========================================================================================================
    'Fecha procesamiento
    '==========================================================================================================
    NroColumna = NroColumna + 1
    Aux = campos(1)
    If IsDate(Aux) Then
        FechaProc = Aux
    Else
          Texto = ": " & EscribeLogMI("La fecha de procesamiento es inválida") & " " & Aux
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            RegError = RegError + 1
            HuboError = True
            Exit Sub
    End If
    '==========================================================================================================
    'Tipo Hora
    '==========================================================================================================
    NroColumna = NroColumna + 1
    Aux = campos(2)
    If Aux <> "" Then
        DescHora = Aux
        StrSql = " SELECT thnro FROM tiphora WHERE thdesc = '" & Trim(DescHora) & "'"
        OpenRecordset StrSql, rs
        If rs.EOF Then
             Texto = ": " & EscribeLogMI("El tipo de Hora No existe") & " " & Aux
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            RegError = RegError + 1
            HuboError = True
            Exit Sub
         Else
            TipoHora = rs!thnro
            
        End If
        rs.Close
    Else
          Texto = ": " & EscribeLogMI("El tipo de Hora es inválido") & " " & Aux
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            RegError = RegError + 1
            HuboError = True
            Exit Sub
    End If


    '==========================================================================================================
    ' Cantidad Horas (decimal)
    '==========================================================================================================
        NroColumna = NroColumna + 1
        Aux = campos(3)
        If IsNumeric(Aux) Then
            canthoras = Aux
        Else
            Texto = ": " & EscribeLogMI("La cantidad de horas es inválida") & " " & Aux
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            RegError = RegError + 1
            HuboError = True
            Exit Sub
        End If
    '==========================================================================================================
    'Fecha Desde
    '==========================================================================================================
    NroColumna = NroColumna + 1
    Aux = campos(4)
    If IsDate(Aux) Then
        FechaD = Aux
    Else
          Texto = ": " & EscribeLogMI("La fecha desde es inválida") & " " & Aux
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            RegError = RegError + 1
            HuboError = True
            Exit Sub
    End If
     
    '==========================================================================================================
    'Hora Desde
    '==========================================================================================================
        NroColumna = NroColumna + 1
        Aux = campos(5)
        If objHoras.ValidarHora(Aux) = False Then
            Texto = ": " & EscribeLogMI("Debe ingresar la hora Desde o esta mal ingresada") & " " & Aux
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            RegError = RegError + 1
            HuboError = True
            Exit Sub
        Else
            HoraD = Left(Replace(Trim(Aux), ":", ""), 4)
        End If
    
         
      '==========================================================================================================
    'Fecha Hasta
    '==========================================================================================================
    NroColumna = NroColumna + 1
    Aux = campos(6)
    If IsDate(Aux) Then
        FechaH = Aux
    Else
          Texto = ": " & EscribeLogMI("La fecha Hasta es inválida") & " " & Aux
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            RegError = RegError + 1
            HuboError = True
            Exit Sub
    End If
     
    '==========================================================================================================
    'Hora Hasta
    '==========================================================================================================
        NroColumna = NroColumna + 1
        Aux = campos(7)
        If objHoras.ValidarHora(Aux) = False Then
            Texto = ": " & EscribeLogMI("Debe ingresar la hora Hasta o esta mal ingresada") & " " & Aux
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            RegError = RegError + 1
            HuboError = True
            Exit Sub
        Else
            TotDias = 0
            HoraH = Left(Replace(Trim(Aux), ":", ""), 4)
            objFechasHoras.RestaHs FechaD, HoraD, FechaH, HoraH, TotDias, Horas, Minutos
            horaAux = Horas + (Minutos / 60)
          '  If Int(Horas) < 10 Then
           '    Horas = "0" & Horas
           ' End If
           ' If Int(Minutos) < 10 Then
           '    Minutos = "0" & Minutos
           ' End If
            If Int(Horas) < 10 Then
                HoraHexa = "0" & Horas & ":"
            Else
                HoraHexa = Horas & ":"
            End If
             If Int(Minutos) < 10 Then
                HoraHexa = HoraHexa & "0" & Minutos
            Else
                HoraHexa = HoraHexa & Minutos
            End If
            
            Texto = ": " & "canthoras:" & canthoras & " - Hora hexadecimal: " & HoraHexa & " - Hora: " & Horas & " - Minutos: " & Minutos
           ' Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strLinea)
            If canthoras <> horaAux Then
                 Texto = ": " & EscribeLogMI("La cantidad de horas ingresadas no coincide con la hora desde y hasta")
                 Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                 RegError = RegError + 1
                 HuboError = True
                 Exit Sub
            End If
            Texto = ": " & "Hora desde:" & HoraD & " - Hora Hasta:" & HoraH & " - Hora hexadecimal: " & HoraHexa
            'Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strLinea)
        End If
    
        '==========================================================================================================
        'Si existe el horario cumplido para la fecha de procesamiento, lo borro
        '==========================================================================================================
        StrSql = " SELECT hornro,thnro FROM gti_horcumplido WHERE ternro = " & Tercero
        StrSql = StrSql & " AND horfecgen = " & ConvFecha(FechaProc)
        StrSql = StrSql & " AND thnro = " & TipoHora
        OpenRecordset StrSql, rs
       
        If rs.EOF Then
            l_hornro = 0
            l_thnro = 0
        Else
            l_hornro = rs!hornro
        l_thnro = rs!thnro
        End If
        rs.Close
        Do While Not l_hornro = 0
            '==========================================================================================================
            'Borro el horario para el empleado
            '==========================================================================================================
            
            StrSql = "DELETE FROM gti_horcumplido "
            StrSql = StrSql & " WHERE hornro = " & l_hornro
            StrSql = StrSql & " AND thnro = " & l_thnro
            objConn.Execute StrSql, , adExecuteNoRecords
            Texto = "Datos Eliminados "
            Call Escribir_Log("flogp", NroLinea, 1, Texto, Tabs, strLinea)
            
            StrSql = " SELECT hornro,thnro FROM gti_horcumplido WHERE ternro = " & Tercero
            StrSql = StrSql & " AND horfecgen = " & ConvFecha(FechaProc)
            StrSql = StrSql & " AND thnro = " & TipoHora
            OpenRecordset StrSql, rs
            If rs.EOF Then
                l_hornro = 0
                l_thnro = 0
            Else
                l_hornro = rs!hornro
                l_thnro = rs!thnro
            End If
            rs.Close
        Loop
        
            '==========================================================================================================
            'INSERTO DATOS
            '==========================================================================================================
            StrSql = "INSERT INTO gti_horcumplido "
            StrSql = StrSql & "(horfecgen,horfecrep,thnro,horcant,hordesde,horhasta,hormanual,ternro,horhoradesde,horhorahasta,horas,horvalido,horestado)"
            StrSql = StrSql & " VALUES ("
            StrSql = StrSql & ConvFecha(FechaProc)
            StrSql = StrSql & " ," & ConvFecha(FechaProc)
            StrSql = StrSql & " ," & TipoHora
            StrSql = StrSql & " ," & Replace(canthoras, ",", ".")
            StrSql = StrSql & "," & ConvFecha(FechaD)
            StrSql = StrSql & " ," & ConvFecha(FechaH)
            StrSql = StrSql & " ,-1"
            StrSql = StrSql & " ," & Tercero
            StrSql = StrSql & " ,'" & HoraD
            StrSql = StrSql & "' ,'" & HoraH
            StrSql = StrSql & "' ,'" & HoraHexa
            StrSql = StrSql & "',-1,' ')"
            objConn.Execute StrSql, , adExecuteNoRecords
            Texto = "Datos Insertados "
            Texto = ": " & "Linea procesada correctamente "
            Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strLinea)
End If

         
FinLinea:
If rs.State = adStateOpen Then
    rs.Close
End If
Exit Sub

SaltoLinea:
    Texto = ": " & " - Error:" & Err.Description & " -- Ultima consulta: " & StrSql
    NroColumna = 1
    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
    MyRollbackTrans

    GoTo FinLinea
End Sub

Public Sub CalcularDias(ByVal ExcluyeFeriados As Boolean, ByVal FechaInicial As Date, ByRef FechaFinal As Date, ByVal Ternro As Long, ByRef cNoHabiles As Integer, ByRef cFeriados As Integer)
'Calcula la cantidad de dias  no habiles y feriados entre 2 fechas teniendo en cuenta el tipo de lic

Dim I As Integer
Dim j As Integer
Dim objFeriado As New Feriado
Dim DHabiles(1 To 7) As Boolean
Dim EsFeriado As Boolean
Dim objRs As New ADODB.Recordset
Dim CHabiles As Long
'Dim cNoHabiles As Long
'Dim cFeriados As Long

Dim Fecha As Date


      
    Set objFeriado.Conexion = objConn
    Set objFeriado.ConexionTraza = objConn
    
    I = 0
    j = 0
    CHabiles = 0
    cNoHabiles = 0
    cFeriados = 0
    
    Fecha = FechaInicial
        DHabiles(1) = False
        DHabiles(2) = True
        DHabiles(3) = True
        DHabiles(4) = True
        DHabiles(5) = True
        DHabiles(6) = True
        DHabiles(7) = False
    Do While Fecha <= FechaFinal
    
        EsFeriado = objFeriado.Feriado(Fecha, Ternro, False)
        
        If (EsFeriado) And Not ExcluyeFeriados Then
            cFeriados = cFeriados + 1
        Else
            If DHabiles(Weekday(Fecha)) Or (EsFeriado And ExcluyeFeriados) Then
                I = I + 1
                If DHabiles(Weekday(Fecha)) Then
                    CHabiles = CHabiles + 1
                End If
            Else
                cNoHabiles = cNoHabiles + 1
            End If
        End If
        Fecha = DateAdd("d", 1, Fecha)
    Loop
     Flog.writeline Espacios(Tabulador * 2) & "Días habiles " & CHabiles
     Flog.writeline Espacios(Tabulador * 2) & "Días Nohabiles " & cNoHabiles
     Flog.writeline Espacios(Tabulador * 2) & "Días feriados" & cFeriados
    Set objFeriado = Nothing
End Sub





Public Sub LineaModelo_2003(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Importación de Licencias con control de días habiles (madificacion del modelo 233)
' Autor      : FGZ
' Fecha      : 02/06/2015
' Ultima Mod.:
' ---------------------------------------------------------------------------------------------
Dim pos1 As Long
Dim pos2 As Long
    
Dim objHoras As New FechasHoras

Dim Tercero As Long
Dim NroLegajo As Long
Dim Licencia_Descripcion As String
Dim TDNro As Long
Dim DiaCompleto As Boolean
Dim FechaDesde As Date
Dim FechaHasta As Date
Dim HoraDesde As String
Dim HoraHasta As String
Dim CantidadHoras As Single
Dim Estado As String
Dim PeriodoVac As Long
Dim LicEstNro As Long
Dim emp_licnro As Long
Dim LicTipo As Long
Dim TotDias As Long

Dim ExcluyeFeriados As Boolean
Dim Diascorridos As Boolean
Dim vacfecdesde As Date
Dim vacfechasta As Date
Dim vdiascorcant As Long
Dim dias_vac As Long
Dim dias_tomados As Long
Dim inserto_complemento As Boolean
Dim Aux As String
Dim Estrnro_SitRev

Dim textoError As String
Dim Observaciones As String

Dim rs_Empleado As New ADODB.Recordset
Dim rs_Lic As New ADODB.Recordset
Dim rs_TipDia As New ADODB.Recordset
Dim rs_estado As New ADODB.Recordset
Dim rs As New ADODB.Recordset
Dim rs_Est As New ADODB.Recordset
Dim rs_Vacacion As New ADODB.Recordset
Dim Fecha_Certif As Date
Dim ConCertificado As Boolean

Dim campos
Dim I As Long

Dim TotFeriados As Integer
Dim TotHabiles As Integer
Dim TotNoHabiles As Integer
Dim NroTipVac As Long
Dim DiasPend As Integer

ConCertificado = False
inserto_complemento = False
PeriodoVac = 0

'Formato
' ------------------------------------------------------------------------------------------
'Campo              Columna Tipo de Dato    Formato         Ejemplo             Obligatorio
' ------------------------------------------------------------------------------------------
'Legajo                 1   Entero              9(6)        1
'Tipo de Licencia       2   Carácter            X(25)       Licencia por Examen
'Fecha Desde            3   Fecha           DD/MM/AAAA      01/01/2004
'Fecha Hasta            4   Fecha           DD/MM/AAAA      14/01/2004
'Día Completo           5   Logico              Si/No       Si
'Hora Desde             6   Carácter            X(5)        00:00
'Hora Hasta             7   Carácter            X(5)        23:59
'Cantidad de Horas      8   Decimal          9(15).999      8.5
'Estado                 9   Carácter           X(100)       Pendiente
'Período de vacaciones  10  Entero              9(6)        12                    (OPCIONAL)
'observaciones          11  caracter            1500        licencia de prueba    (OPCIONAL) el campo de arriba pasa a oblig.
'Fecha Certificado      12  Fecha            DD/MM/AAAA      14/01/2004           (OPCIONAL) el campo de arriba pasa a oblig.
' ------------------------------------------------------------------------------------------
On Error GoTo Manejador_De_Error

    'FGZ - 13/08/2014 -------------------------
    campos = Split(strLinea, separador)
    
    'Nro de Legajo
    I = 0
    If IsNumeric(campos(I)) Then
        NroLegajo = campos(I)
    Else
        FlogE.writeline
        FlogE.writeline Espacios(Tabulador * 1) & "PROCESANDO LEGAJO "
        FlogE.writeline Espacios(Tabulador * 1) & "-------------------------------------"
        FlogE.writeline Espacios(Tabulador * 2) & "Linea " & NroLinea & ": El número de legajo no es numerico. " & Licencia_Descripcion
        InsertaError 1, 8
        HuboError = True
        Exit Sub
    End If
    
    'Tipo de Licencia
    I = 1
    Licencia_Descripcion = UCase(campos(I))
    Licencia_Descripcion = EliminarCHInvalidosII(Licencia_Descripcion, 1, "")

    'Fecha desde
    I = 2
    FechaDesde = campos(I)
            
    'Fecha Hasta
    I = 3
    FechaHasta = campos(I)
                
    'Dia Completo
    I = 4
    Aux = campos(I)
    If UCase(Aux) = "SI" Or UCase(Aux) = "S" Then
        DiaCompleto = True
        LicTipo = 1
    Else
        DiaCompleto = False
    End If
    
    'Hora desde
    I = 5
    HoraDesde = campos(I)
    HoraDesde = Replace(HoraDesde, ":", "")
    
    'Hora hasta
    I = 6
    HoraHasta = campos(I)
    HoraHasta = Replace(HoraHasta, ":", "")
    
    'Cantidad de Horas
    I = 7
    If campos(I) = "" Or campos(I) = "NA" Then
        CantidadHoras = 0
    Else
        CantidadHoras = CSng(campos(I))
    End If

    'Estado
    I = 8
    Estado = UCase(campos(I))
    Estado = EliminarCHInvalidosII(Estado, 1, "")
    
    'Período de vacaciones
    I = 9
    If UCase(campos(I)) = "NA" Or UCase(campos(I)) = "" Then
        PeriodoVac = 0
    Else
        If EsNulo(campos(I)) Then
            PeriodoVac = 0
        Else
            If IsNumeric(campos(I)) Then
                PeriodoVac = UCase(campos(I))
                PeriodoVac = EliminarCHInvalidosII(PeriodoVac, 1, "")
            Else
                PeriodoVac = 0
                FlogE.writeline Espacios(Tabulador * 2) & "Linea " & NroLinea & ": formato incorrecto para Periodo de vacaciones. " & Licencia_Descripcion
            End If
        End If
    End If
        
        
    'Observaciones
    I = 10
    If UBound(campos) >= I Then
        Observaciones = UCase(campos(I))
        Observaciones = EliminarCHInvalidosII(Observaciones, 1, "")
        If (Len(Observaciones) > 1500) Then
            Observaciones = Left(Observaciones, 1500)
        End If
    End If
    
    'Fecha Certificado
    I = 11
    If UBound(campos) >= I Then
        Aux = Trim(UCase(campos(I)))
        If IsDate(Aux) Then
            Fecha_Certif = CDate(Aux)
            ConCertificado = True
        Else
            If (Aux = "NA") Or (Aux = "N/A") Or (Aux = "") Then
                ConCertificado = False
            Else
                Flog.writeline Espacios(Tabulador * 2) & "formato de Fecha incorrecto. Se esperaba Fecha de Certtificado. Se asume SIN CERTIFICADO."
                ConCertificado = False
            End If
        End If
    End If
    'FGZ - 13/08/2014 ---------------------------
    '--------------------------------------------------------------------------
    
    
' ====================================================================
'   Validar los parametros Levantados

Flog.writeline
Flog.writeline
Flog.writeline Espacios(Tabulador * 1) & "PROCESANDO LEGAJO: " & NroLegajo
Flog.writeline Espacios(Tabulador * 1) & "-------------------------------------------------------"

'EAM- Verifica que exista el legajo para la vista de empleado
'StrSql = "SELECT * FROM v_empleadoproc where empleg = " & NroLegajo
StrSql = "SELECT * FROM empleado where empleg = " & NroLegajo
OpenRecordset StrSql, rs_Empleado

If rs_Empleado.EOF Then
    Flog.writeline Espacios(Tabulador * 2) & "No se encontro el legajo " & NroLegajo
    
    FlogE.writeline
    FlogE.writeline Espacios(Tabulador * 1) & "PROCESANDO LEGAJO: " & NroLegajo
    FlogE.writeline Espacios(Tabulador * 1) & "-------------------------------------"
    FlogE.writeline Espacios(Tabulador * 2) & "Linea " & NroLinea & ": No se encontro el legajo " & NroLegajo
    
    InsertaError 1, 8
    HuboError = True
    Exit Sub
Else
    Tercero = rs_Empleado!Ternro
End If

'Que exista el Tipo de Licencia
StrSql = "SELECT * FROM tipdia WHERE upper(tddesc) = '" & Licencia_Descripcion & "'"
OpenRecordset StrSql, rs_TipDia
If rs_TipDia.EOF Then
    Flog.writeline Espacios(Tabulador * 2) & "No se encontro el Tipo de Licencia " & Licencia_Descripcion
    
    FlogE.writeline
    FlogE.writeline Espacios(Tabulador * 1) & "PROCESANDO LEGAJO: " & NroLegajo
    FlogE.writeline Espacios(Tabulador * 1) & "-------------------------------------"
    FlogE.writeline Espacios(Tabulador * 2) & "Linea " & NroLinea & ": No se encontro el Tipo de Licencia " & Licencia_Descripcion
    
    InsertaError 2, 84
    HuboError = True
    Exit Sub
Else
    TDNro = rs_TipDia!TDNro
    Diascorridos = rs_TipDia!tdsuma
    ExcluyeFeriados = rs_TipDia!feriados
End If

If Not DiaCompleto Then
    ' Es tipo 2 si las horas son validas
    ' Es tipo 3 si la cant de horas es valida
    ' Es tipo 2 si todos los param son validos, tomo las horas
    
    LicTipo = 0
    'Valido la cantidad de Horas
    If CantidadHoras <> 0 Then 'el parametro es valido, puede ser tipo 3
        LicTipo = 3
    End If
    
    'Validar Horas
    If objHoras.ValidarHora(HoraDesde) And objHoras.ValidarHora(HoraHasta) Then
        LicTipo = 2
    Else 'puede que sea tipo 3
        If LicTipo = 0 Then 'no, no es tipo 3
            If Not objHoras.ValidarHora(HoraDesde) Then
                Flog.writeline Espacios(Tabulador * 2) & "formato de Hora Desde incorrecto " & HoraDesde
                        
                FlogE.writeline
                FlogE.writeline Espacios(Tabulador * 1) & "PROCESANDO LEGAJO: " & NroLegajo
                FlogE.writeline Espacios(Tabulador * 1) & "-------------------------------------"
                FlogE.writeline Espacios(Tabulador * 2) & "Linea " & NroLinea & ": formato de Hora Desde incorrecto " & HoraDesde
                
                InsertaError 6, 98
                HuboError = True
                Exit Sub
            End If
            If Not objHoras.ValidarHora(HoraHasta) Then
                Flog.writeline Espacios(Tabulador * 2) & "formato de Hora Hasta incorrecto " & HoraHasta
                
                FlogE.writeline
                FlogE.writeline Espacios(Tabulador * 1) & "PROCESANDO LEGAJO: " & NroLegajo
                FlogE.writeline Espacios(Tabulador * 1) & "-------------------------------------"
                FlogE.writeline Espacios(Tabulador * 2) & "Linea " & NroLinea & ": formato de Hora Hasta incorrecto " & HoraHasta
                
                InsertaError 7, 98
                HuboError = True
                Exit Sub
            End If
        End If
    End If
    If LicTipo = 3 And CantidadHoras > rs_TipDia!tdcanthoras Then ' si era tipo 3 que no exceda el limite
        Flog.writeline Espacios(Tabulador * 2) & "La cantidad de Horas " & CantidadHoras & " excede el maximo " & rs_TipDia!tdcanthoras
        CantidadHoras = rs_TipDia!tdcanthoras
    End If
End If

'Que exista el Tipo de Estado
StrSql = "SELECT * FROM lic_estado WHERE upper(licestdesabr) = '" & Estado & "'"
OpenRecordset StrSql, rs_estado
If rs_estado.EOF Then
    Flog.writeline Espacios(Tabulador * 2) & "No se encontro el Tipo de Estado " & Estado
    
    FlogE.writeline
    FlogE.writeline Espacios(Tabulador * 1) & "PROCESANDO LEGAJO: " & NroLegajo
    FlogE.writeline Espacios(Tabulador * 1) & "-------------------------------------"
    FlogE.writeline Espacios(Tabulador * 2) & "Linea " & NroLinea & ": No se encontro el Tipo de Estado " & Estado
    
    InsertaError 9, 97
    HuboError = True
    Exit Sub
Else
    LicEstNro = rs_estado!LicEstNro
End If


'¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬
'SI ES DE TIPO VACACION
'¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬
'Valido que existe período de vacaciones
If TDNro = 2 And CInt(PeriodoVac) > 0 Then 'valida la variable, si es mayor que 0, tiene periodo de vacaiones
    StrSql = "SELECT vacfecdesde,vacfechasta,vacestado FROM vacacion"
    StrSql = StrSql & " WHERE vacnro = " & PeriodoVac & " And vacestado = -1"
    OpenRecordset StrSql, rs_Vacacion
    If rs_Vacacion.EOF Then
        FlogE.writeline Espacios(Tabulador * 2) & "No existe el período de tipo " & PeriodoVac & " o esta cerrado"
        InsertaError 1, 50
        HuboError = True
        Exit Sub
    Else
        vacfecdesde = rs_Vacacion!vacfecdesde
        vacfechasta = rs_Vacacion!vacfechasta
    End If
    rs_Vacacion.Close
    '_______________________________
    'Verifico que tenga dias de vacaciones
    StrSql = "SELECT vacdiascor.vdiascorcant,vacdiascor.tipvacnro FROM vacdiascor"
    StrSql = StrSql & " WHERE vacdiascor.vacnro = " & PeriodoVac & " AND ternro = " & Tercero
    OpenRecordset StrSql, rs_Vacacion
    If rs_Vacacion.EOF Then
        FlogE.writeline Espacios(Tabulador * 2) & "El empleado no tiene días disponibles para el período " & PeriodoVac
        InsertaError 1, 50
        HuboError = True
        Exit Sub
    Else
        vdiascorcant = rs_Vacacion!vdiascorcant
        NroTipVac = rs_Vacacion!tipvacnro
    End If
    rs_Vacacion.Close


    'Valida que las fechas esten dentro del período seleccionado
    StrSql = "SELECT vacfecdesde,vacfechasta,vacestado FROM vacacion"
    StrSql = StrSql & " WHERE vacnro = " & PeriodoVac & " And vacestado = -1"
    StrSql = StrSql & " AND vacfecdesde <= " & ConvFecha(FechaDesde) & " AND vacfechasta >= " & ConvFecha(FechaHasta)
    OpenRecordset StrSql, rs_Vacacion
    If rs_Vacacion.EOF Then
        FlogE.writeline Espacios(Tabulador * 2) & "Las fechas de la licencia no estan contenidas en el período " & PeriodoVac
        InsertaError 1, 49
        HuboError = True
        Exit Sub
    Else
        'FGZ - 02/06/2015 -------------------------------------------------------------------------
        'La cantidad de dias depende del tipo de vacacion y las fechas donde se soliciten.
        'Se deben calcular la cantidad de dias habiles, no habiles y feriados
        dias_vac = DateDiff("d", FechaDesde, FechaHasta) + 1
        
        'Call CalcularDiasVac(nroTipvac, Aux_Fecha_Desde, Hasta, Ternro, diaspend, tothabiles, totNohabiles, totferiados)
        'Call CalcularDiasVac(NroTipVac, FechaDesde, FechaHasta, Tercero, DiasPend, TotHabiles, TotNoHabiles, TotFeriados)
        Call CalcularDiasVac(NroTipVac, FechaDesde, FechaHasta, Tercero, TotHabiles, TotNoHabiles, TotFeriados)
        dias_vac = TotHabiles
        'FGZ - 02/06/2015 -------------------------------------------------------------------------
        
        
    End If
    rs_Vacacion.Close
    
    'SUMO DIAS TOMADOS EN PERIODO
    StrSql = "SELECT SUM(elcantdias) total FROM emp_lic"
    StrSql = StrSql & " INNER JOIN lic_vacacion ON lic_vacacion.emp_licnro = emp_lic.emp_licnro "
    StrSql = StrSql & " WHERE Empleado = " & Tercero & " And tdnro = " & TDNro
    StrSql = StrSql & " AND lic_vacacion.vacnro = " & PeriodoVac
    'StrSql = StrSql & " AND elfechadesde >= " & ConvFecha(vacfecdesde) & " and elfechahasta <= " & ConvFecha(vacfechasta)
    OpenRecordset StrSql, rs_Vacacion
    If Not rs_Vacacion.EOF Then
        If IsNull(rs_Vacacion!total) Then
            dias_tomados = 0
        Else
            dias_tomados = rs_Vacacion!total
        End If
    Else
        dias_tomados = 0
    End If
    rs_Vacacion.Close
    
    'Valido que tenga dias disponibles
    If (vdiascorcant - dias_tomados) >= dias_vac Then
        inserto_complemento = True
    Else
        inserto_complemento = False
        FlogE.writeline Espacios(Tabulador * 2) & "El empleado no tiene días disponibles para el período " & PeriodoVac
        InsertaError 1, 50
        HuboError = True
        Exit Sub
    End If
    
Else
  Call CalcularDias(ExcluyeFeriados, FechaDesde, FechaHasta, Tercero, TotNoHabiles, TotFeriados)
End If
'¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬


'=============================================================
'Busco si existe la Licencia
StrSql = "SELECT * FROM emp_lic " & _
         " WHERE (empleado = " & Tercero & " )" & _
         " AND elfechadesde <=" & ConvFecha(FechaHasta) & _
         " AND elfechahasta >= " & ConvFecha(FechaDesde)
If LicTipo = 3 Then
    'NG - 20/01/2013- si es parcial variable permito insertar.
    StrSql = StrSql & " and eltipo <> 3"
End If
OpenRecordset StrSql, rs_Lic

    If Not rs_Lic.EOF Then
            Flog.writeline Espacios(Tabulador * 2) & "No se puede insertar la Licencia porque se superpone con otra ya existente"
            Flog.writeline Espacios(Tabulador * 2) & "(" & rs_Lic!emp_licnro & ") desde " & rs_Lic!elfechadesde & " hasta " & rs_Lic!elfechahasta & " de tipo " & rs_Lic!TDNro
            
            FlogE.writeline
            FlogE.writeline Espacios(Tabulador * 1) & "PROCESANDO LEGAJO: " & NroLegajo
            FlogE.writeline Espacios(Tabulador * 1) & "-------------------------------------"
            FlogE.writeline Espacios(Tabulador * 2) & "Linea " & NroLinea & ": No se puede insertar la Licencia porque se superpone con otra ya existente"
            FlogE.writeline Espacios(Tabulador * 2) & "         (" & rs_Lic!emp_licnro & ") desde " & rs_Lic!elfechadesde & " hasta " & rs_Lic!elfechahasta & " de tipo " & rs_Lic!TDNro
            
            InsertaError 1, 99
            HuboError = True
            Exit Sub
    Else
            'Inserto la Licencia
            StrSql = "INSERT INTO emp_lic ("
            StrSql = StrSql & "empleado,elfechadesde,elfechahasta,tdnro,eldiacompleto,eltipo"
            If LicTipo = 2 Then
                StrSql = StrSql & ",elhoradesde,elhorahasta"
            End If
            If LicTipo = 3 Then
                StrSql = StrSql & ",elmaxhoras,elcanthrs"
            End If
            StrSql = StrSql & ",elcantdias,elcantdiashab,elcantdiasfer,licestnro"
            StrSql = StrSql & ",elobs"
            If ConCertificado Then
                StrSql = StrSql & ",elfechacert"
            End If
            StrSql = StrSql & ") VALUES ("
            StrSql = StrSql & Tercero
            StrSql = StrSql & "," & ConvFecha(FechaDesde)
            StrSql = StrSql & "," & ConvFecha(FechaHasta)
            StrSql = StrSql & "," & TDNro
            StrSql = StrSql & "," & CLng(DiaCompleto)
            StrSql = StrSql & "," & LicTipo ' 1 = Dia Completo
            
            If LicTipo = 2 Then ' Parcial Fija
                StrSql = StrSql & ",'" & HoraDesde & "'"
                StrSql = StrSql & ",'" & HoraHasta & "'"
            End If
            If LicTipo = 3 Then ' Parcial Variable
                StrSql = StrSql & "," & CantidadHoras
                StrSql = StrSql & "," & CantidadHoras
            End If
            
            If TDNro = 2 Then
                'TotHabiles, TotNoHabiles, TotFeriados
                StrSql = StrSql & "," & TotHabiles
                StrSql = StrSql & "," & TotNoHabiles
                StrSql = StrSql & "," & TotFeriados
            Else
                If Diascorridos Then
                    StrSql = StrSql & "," & (DateDiff("d", FechaDesde, FechaHasta) + 1)
                Else
                  '
                    TotDias = (DateDiff("d", FechaDesde, FechaHasta) + 1) - TotNoHabiles - TotFeriados
                    Flog.writeline Espacios(Tabulador * 2) & "Total dias " & TotDias
                      StrSql = StrSql & "," & TotDias
                End If
                StrSql = StrSql & "," & TotNoHabiles
                StrSql = StrSql & "," & TotFeriados
            End If
            StrSql = StrSql & "," & LicEstNro
            StrSql = StrSql & ",'" & Observaciones & "'"
            'FGZ - 29/07/2014 ---------------------------------------------
            If ConCertificado Then
                StrSql = StrSql & "," & ConvFecha(Fecha_Certif)
            End If
            'FGZ - 29/07/2014 ---------------------------------------------
            StrSql = StrSql & " )"
            objConn.Execute StrSql, , adExecuteNoRecords
            Flog.writeline Espacios(Tabulador * 2) & "Licencia insertada "
                
            emp_licnro = getLastIdentity(objConn, "emp_lic")
            

            '__________________________________
            'INSERTO COMPLEMENTOS
            '----------------------------------
            If inserto_complemento = True Then
                Select Case TDNro
                    Case 2:
                        'Inserto Complemento de vacaciones
                        If (CInt(PeriodoVac) > 0) Then 'valida la variable, si es mayor que cero inserta los datos
                            StrSql = "INSERT INTO lic_vacacion  (emp_licnro,vacnro,vacnotifnro,licvacmanual) "
                            StrSql = StrSql & " VALUES ("
                            StrSql = StrSql & emp_licnro & "," & PeriodoVac & ",NULL,-1"
                            StrSql = StrSql & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                            Flog.writeline Espacios(Tabulador * 2) & "Complemento de Vacaciones Insertado "
                        End If
                        '------------------------------------
                End Select
            End If
            
            
            'Genero la Justificacion
             StrSql = " INSERT INTO gti_justificacion ( jusanterior,juscodext,jusdesde,jusdiacompleto,jushasta,jussigla,jussistema,ternro,tjusnro,turnro,jushoradesde,jushorahasta,juseltipo,juselmaxhoras ) VALUES ("
             StrSql = StrSql & "-1"
             StrSql = StrSql & "," & emp_licnro
             StrSql = StrSql & "," & ConvFecha(FechaDesde)
             StrSql = StrSql & ",-1"
             StrSql = StrSql & "," & ConvFecha(FechaHasta)
             StrSql = StrSql & ",'LIC'"
             StrSql = StrSql & ",-1"
             StrSql = StrSql & "," & Tercero
             StrSql = StrSql & ",1"
             StrSql = StrSql & ",0"
             StrSql = StrSql & ",'" & HoraDesde & "'"
             StrSql = StrSql & ",'" & HoraHasta & "'"
             'FGZ - 17/06/2011 -----------------
             'StrSql = StrSql & "," & TDNro
             StrSql = StrSql & "," & LicTipo
             StrSql = StrSql & "," & CantidadHoras
             StrSql = StrSql & ")"
             objConn.Execute StrSql, , adExecuteNoRecords
             Flog.writeline Espacios(Tabulador * 2) & "Justificacion insertada "
             
             
            ' Codigo de Sit. Revista
            ' ___________________________________________________________
             Flog.writeline Espacios(Tabulador * 2) & "Situacion de revista"
            
            
            StrSql = "SELECT estrnro, tdnro FROM csijp_srtd "
            StrSql = StrSql & " WHERE tdnro =" & TDNro
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                Estrnro_SitRev = rs!Estrnro
            End If
            If rs.State = adStateOpen Then rs.Close
            
            
            If Trim(Estrnro_SitRev) <> "" Then
                
                    'Busco el tipo de la situacion de revista anterior
                    StrSql = "SELECT * FROM his_estructura "
                    StrSql = StrSql & " WHERE tenro = 30 "
                    StrSql = StrSql & " AND ternro = " & Tercero
                    StrSql = StrSql & " AND htetdesde <= " & ConvFecha(FechaDesde)
                    StrSql = StrSql & " AND ( htethasta >= " & ConvFecha(FechaDesde) & " OR htethasta IS Null )"
                    If rs_Est.State = adStateOpen Then rs_Est.Close
                    OpenRecordset StrSql, rs_Est
                    
                    If Not rs_Est.EOF Then
                        'la cierro un dia antes
                        If EsNulo(rs_Est!htethasta) Then
                            If Not (rs_Est!htetdesde = FechaDesde) Then
                                StrSql = " UPDATE his_estructura SET "
                                StrSql = StrSql & " htethasta = " & ConvFecha(CDate(FechaDesde - 1))
                                StrSql = StrSql & " WHERE tenro   = 30 "
                                StrSql = StrSql & " AND   estrnro  = " & rs_Est!Estrnro
                                StrSql = StrSql & " AND   ternro  = " & Tercero
                                StrSql = StrSql & " AND   htetdesde = " & ConvFecha(rs_Est!htetdesde)
                                StrSql = StrSql & " AND   htethasta  is null "
                                objConn.Execute StrSql, , adExecuteNoRecords
                            Else
                                'la borro porque se va superponer con la licencia
                                StrSql = " DELETE his_estructura "
                                StrSql = StrSql & " WHERE tenro   = 30 "
                                StrSql = StrSql & " AND   estrnro  = " & rs_Est!Estrnro
                                StrSql = StrSql & " AND   ternro =" & Tercero
                                StrSql = StrSql & " AND   htetdesde = " & ConvFecha(rs_Est!htetdesde)
                                StrSql = StrSql & " AND   htethasta  is null "
                                objConn.Execute StrSql, , adExecuteNoRecords
                            End If
                            
                            'Inserto la misma situacion despues de la nueva situacion (la de la licencia)
                            StrSql = "INSERT INTO his_estructura(tenro, ternro, estrnro, htetdesde)"
                            StrSql = StrSql & " VALUES (30, " & Tercero & ", " & rs_Est!Estrnro & ", "
                            StrSql = StrSql & ConvFecha(CDate(FechaHasta + 1)) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                            
                        Else
                            If rs_Est!htethasta > FechaHasta Then
                                If rs_Est!htetdesde > FechaDesde Then
                                    StrSql = " UPDATE his_estructura SET "
                                    StrSql = StrSql & " htethasta = " & ConvFecha(CDate(FechaDesde - 1))
                                    StrSql = StrSql & " WHERE tenro   = 30 "
                                    StrSql = StrSql & " AND   ternro  = " & Tercero
                                    StrSql = StrSql & " AND   htetdesde = " & ConvFecha(rs_Est!htetdesde)
                                    StrSql = StrSql & " AND   htethasta  = " & ConvFecha(rs_Est!htethasta)
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                Else
                                    'la borro porque se va superponer con la licencia
                                    StrSql = " DELETE his_estructura "
                                    StrSql = StrSql & " WHERE tenro = 30 "
                                    StrSql = StrSql & " AND   estrnro = " & rs_Est!Estrnro
                                    StrSql = StrSql & " AND   ternro  = " & Tercero
                                    StrSql = StrSql & " AND   htetdesde = " & ConvFecha(rs_Est!htetdesde)
                                    StrSql = StrSql & " AND   htethasta  = " & ConvFecha(rs_Est!htethasta)
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                End If
                                
                                'Inserto la misma situacion despues de la nueva situacion (la de la licencia)
                                StrSql = "INSERT INTO his_estructura "
                                StrSql = StrSql & " (tenro, ternro, estrnro, htetdesde,htethasta) "
                                StrSql = StrSql & " VALUES (30, " & Tercero & ", " & rs_Est!Estrnro & ", "
                                StrSql = StrSql & ConvFecha(CDate(FechaHasta + 1)) & ", " & ConvFecha(rs_Est!htethasta) & ")"
                                objConn.Execute StrSql, , adExecuteNoRecords
                                
                            Else
                                If rs_Est!htetdesde > FechaDesde Then
                                    StrSql = " UPDATE his_estructura SET "
                                    StrSql = StrSql & " htethasta = " & ConvFecha(CDate(FechaDesde - 1))
                                    StrSql = StrSql & " WHERE tenro   = 30 "
                                    StrSql = StrSql & " AND   ternro  = " & Tercero
                                    StrSql = StrSql & " AND   htetdesde = " & ConvFecha(rs_Est!htetdesde)
                                    StrSql = StrSql & " AND   htethasta  is null "
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                Else
                                    'la borro porque se va superponer con la licencia
                                    StrSql = " DELETE his_estructura "
                                    StrSql = StrSql & " WHERE tenro = 30 "
                                    StrSql = StrSql & "     AND estrnro  = " & rs_Est!Estrnro
                                    StrSql = StrSql & "     AND ternro  = " & Tercero
                                    StrSql = StrSql & "     AND htetdesde = " & ConvFecha(rs_Est!htetdesde)
                                    StrSql = StrSql & "     AND htethasta  = " & ConvFecha(rs_Est!htethasta)
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                End If
                            End If
                        End If
                    End If
                
                    StrSql = "INSERT INTO his_estructura(tenro, ternro, estrnro, htetdesde,htethasta) "
                    StrSql = StrSql & " VALUES (30, " & Tercero & ", " & Estrnro_SitRev & ", "
                    StrSql = StrSql & ConvFecha(FechaDesde) & ", " & ConvFecha(FechaHasta) & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                Else
                    Flog.writeline Espacios(Tabulador * 2) & "La Licencia no tienen Situacion de Revista asociado"
                End If
                
                
        
            
    End If

Fin:
'Cierro todo y libero
If rs_Lic.State = adStateOpen Then rs_Lic.Close
If rs_Empleado.State = adStateOpen Then rs_Empleado.Close
If rs_TipDia.State = adStateOpen Then rs_TipDia.Close
If rs_estado.State = adStateOpen Then rs_estado.Close
If rs_Est.State = adStateOpen Then rs_Est.Close
'If rs_Vacacion = adStateOpen Then rs_Vacacion.Close

Set rs_Lic = Nothing
Set rs_Empleado = Nothing
Set rs_TipDia = Nothing
Set rs_estado = Nothing
Set rs_Est = Nothing
Set rs_Vacacion = Nothing
Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    
    FlogE.writeline
    FlogE.writeline Espacios(Tabulador * 1) & "***************************************************"
    FlogE.writeline Espacios(Tabulador * 1) & "Error insalvable en la Linea " & NroLinea
    FlogE.writeline Espacios(Tabulador * 1) & "   " & strLinea
    FlogE.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    FlogE.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    FlogE.writeline Espacios(Tabulador * 1) & "***************************************************"
    FlogE.writeline
    
    
    GoTo Fin

End Sub

Public Sub LineaModelo_2009(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Inserta o Actualiza roles de las secciones de evaluaciones de los empleados
' Autor      : LED
'     Formato es: Evento;Legajo;Legajo Reporta A;Tipo Evaluador;Legajo Reporta A de Reporta A;Tipo Evaluador
' Fecha      : 10/12/2015
' Ultima Mod.:
' ---------------------------------------------------------------------------------------------
Dim rs_datos As New ADODB.Recordset
Dim rs_evaluador As New ADODB.Recordset
Dim rs_secciones As New ADODB.Recordset

Dim ArrDatos
Dim indice As Integer
Dim evaevenro As Integer
Dim Empleado As Long
Dim empreporta As Long
Dim empReportaReporta As Long

Dim autoEvaluador As Long
Dim revisor As Long
Dim supEvaluador As Long
Dim insertarAutoEvaluador As Boolean

On Error GoTo Manejador_De_Error
    Tabs = 1
    
    Texto = "Procesando linea " & strLinea
    Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
        
    ArrDatos = Split(strLinea, separador)
     
    autoEvaluador = 1       'Tipo de evaluador 1: Autoevaluador
     
    For indice = 0 To UBound(ArrDatos)
        NroColumna = indice + 1
        Select Case CLng(indice)
            Case 0: 'Codigo de evento
                If Trim(ArrDatos(indice)) <> "" And Trim(UCase(ArrDatos(indice))) <> "N/A" Then
                    evaevenro = ArrDatos(indice)
                    'Controlo que exista el evento
                    StrSql = " SELECT evaevenro FROM evaevento WHERE evaevento.evaevenro = " & evaevenro
                    OpenRecordset StrSql, rs_datos
                    If rs_datos.EOF Then
                        Texto = "El evento no existe, codigo: " & evaevenro & "."
                        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                        HuboError = True
                        Exit Sub
                    End If
                Else
                    Texto = "El codigo del evento es obligatorio."
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                    HuboError = True
                    Exit Sub
                End If
        
            Case 1: 'Legajo del Autoevaluador
                If Trim(ArrDatos(indice)) <> "" And Trim(UCase(ArrDatos(indice))) <> "N/A" Then
                    StrSql = " SELECT ternro FROM empleado WHERE empleg = " & ArrDatos(indice) & " AND empest = -1 "
                    OpenRecordset StrSql, rs_datos
                    If Not rs_datos.EOF Then
                        Empleado = rs_datos!Ternro
                    Else
                        Texto = "No existe empleado activo con legajo:" & ArrDatos(indice) & "."
                        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                        HuboError = True
                        Exit Sub
                    End If

                Else
                    Texto = "El legajo del autoevaluador es obligatorio."
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                    HuboError = True
                    Exit Sub
                End If
        
            Case 2: 'Legajo del Revisor (reporta A del legajo del autoevaluador)
                If Trim(ArrDatos(indice)) <> "" And Trim(UCase(ArrDatos(indice))) <> "N/A" Then
                    'Obtengo el nro de ternro del reporta A
                    StrSql = " SELECT ternro FROM empleado WHERE empleg = " & ArrDatos(indice) & " AND empest = -1 "
                    OpenRecordset StrSql, rs_datos
                    If Not rs_datos.EOF Then
                        empreporta = rs_datos!Ternro
                    Else
                        Texto = "No existe empleado activo con legajo:" & ArrDatos(indice) & "."
                        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                        HuboError = True
                        Exit Sub
                    End If
                Else
                    Texto = "El legajo del autoevaluador es obligatorio."
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                    HuboError = True
                    Exit Sub
                End If
                
            Case 3: 'Tipo de evaluador para el reporta A
                If Trim(ArrDatos(indice)) <> "" And Trim(UCase(ArrDatos(indice))) <> "N/A" Then
                    'Obtengo el nro de ternro del reporta A
                    StrSql = " SELECT evatevnro FROM evatipevalua WHERE evatevnro = " & ArrDatos(indice)
                    OpenRecordset StrSql, rs_datos
                    If Not rs_datos.EOF Then
                        revisor = ArrDatos(indice)
                    Else
                        Texto = "No existe tipo de evaluador: " & ArrDatos(indice)
                        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                        HuboError = True
                        Exit Sub
                    End If
                Else
                    Texto = "El tipo de evaluador es obligatorio"
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                    HuboError = True
                    Exit Sub
                End If
                
            Case 4: 'Legajo del sup. Evaluador (reporta A del reporta A del legajo del autoevaluador)
                If Trim(ArrDatos(indice)) <> "" And Trim(UCase(ArrDatos(indice))) <> "N/A" Then
                    'Obtengo el nro de ternro del reporta A
                    StrSql = " SELECT ternro FROM empleado WHERE empleg = " & ArrDatos(indice) & " AND empest = -1 "
                    OpenRecordset StrSql, rs_datos
                    If Not rs_datos.EOF Then
                        empReportaReporta = rs_datos!Ternro
                    Else
                        Texto = "No existe empleado activo con legajo:" & ArrDatos(indice) & "."
                        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                        HuboError = True
                        Exit Sub
                    End If
                Else
                    empReportaReporta = 0 'Este campo NO es obligatorio
                End If
                
            Case 5: 'Tipo de evaluador para el reporta A de Reporta A
                If Trim(ArrDatos(indice)) <> "" And Trim(UCase(ArrDatos(indice))) <> "N/A" Then
                    'Obtengo el nro de ternro del reporta A
                    StrSql = " SELECT evatevnro FROM evatipevalua WHERE evatevnro = " & ArrDatos(indice)
                    OpenRecordset StrSql, rs_datos
                    If Not rs_datos.EOF Then
                        supEvaluador = ArrDatos(indice)
                    Else
                        Texto = "No existe tipo de evaluador: " & ArrDatos(indice)
                        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
                        HuboError = True
                        Exit Sub
                    End If
                End If
        End Select
    
    Next


StrSql = " SELECT evacabnro FROM evacab WHERE evaevenro = " & evaevenro & " AND empleado = " & Empleado
OpenRecordset StrSql, rs_datos
If Not rs_datos.EOF Then
    'Busco todas las secciones asociadas al evento
    StrSql = " SELECT DISTINCT evaseccnro, evatiposecc.tipsecnro, evatiposecc.tipsecsigla FROM evasecc " & _
             " INNER JOIN evatipoeva ON evatipoeva.evatipnro= evasecc.evatipnro " & _
             " INNER JOIN evaevento  ON evaevento.evatipnro = evatipoeva.evatipnro " & _
             " INNER JOIN evatiposecc ON evatiposecc.tipsecnro= evasecc.tipsecnro " & _
             " WHERE evaevenro = " & evaevenro
    'rs_secciones.CursorType = 3
    
    OpenRecordset StrSql, rs_secciones
    
    'Si algun evento tiene una seccion people review, no cargo autoevaluador ninguna seccion
    rs_secciones.Filter = " tipsecsigla = 'RAF002'"
    
    If Not rs_secciones.EOF Then
        insertarAutoEvaluador = False
    Else
        insertarAutoEvaluador = True
    End If
    
    rs_secciones.Filter = ""
    Do While Not rs_secciones.EOF
        
        If insertarAutoEvaluador Then
            'AUTOEVALUADOR - Controlo si existen los autoevaluadores para cada seccion
            StrSql = " SELECT evldrnro FROM evadetevldor WHERE evacabnro = " & rs_datos!evacabnro & _
                     " AND evaseccnro = " & rs_secciones!evaseccnro & " AND evatevnro = " & autoEvaluador & _
                     " AND evacabnro = " & rs_datos!evacabnro
            OpenRecordset StrSql, rs_evaluador
            If Not rs_evaluador.EOF Then
                'si existe lo actualizo
                StrSql = " UPDATE evadetevldor SET " & _
                         " evaluador = " & Empleado & _
                         " WHERE evldrnro = " & rs_evaluador!evldrnro
                objConn.Execute StrSql, , adExecuteNoRecords
                Flog.writeline Espacios(Tabulador * 1) & "Autoevaluador actualizado, ternro: " & Empleado
            Else
                'si no existe lo inserto
                StrSql = " INSERT INTO evadetevldor (evacabnro,evaseccnro,evatevnro,evaluador,evldorcargada,habilitado,fechahab, horahab,ingreso) " & _
                         " VALUES (" & rs_datos!evacabnro & "," & rs_secciones!evaseccnro & "," & autoEvaluador & _
                         " ," & Empleado & ",0,0," & ConvFecha(Date) & ",'0001',0)"
                objConn.Execute StrSql, , adExecuteNoRecords
                Flog.writeline Espacios(Tabulador * 1) & "Autoevaluador insertado, ternro: " & Empleado
            End If
        Else
            Flog.writeline Espacios(Tabulador * 1) & "Seccion people review encontrada, no se inserta autoevaluador."
        End If
        
        'REVISOR - Controlo si existen los evaluadores para cada seccion
        StrSql = " SELECT evldrnro FROM evadetevldor WHERE evacabnro = " & rs_datos!evacabnro & _
                 " AND evaseccnro = " & rs_secciones!evaseccnro & " AND evatevnro = " & revisor & _
                 " AND evacabnro = " & rs_datos!evacabnro
                 
        OpenRecordset StrSql, rs_evaluador
        If Not rs_evaluador.EOF Then
            'si existe lo actualizo
            StrSql = " UPDATE evadetevldor SET " & _
                     " evaluador = " & empreporta & _
                     " WHERE evldrnro = " & rs_evaluador!evldrnro
            objConn.Execute StrSql, , adExecuteNoRecords
            Flog.writeline Espacios(Tabulador * 1) & "Revisor actualizado, ternro: " & empreporta
        Else
            'si no existe lo inserto
            StrSql = " INSERT INTO evadetevldor (evacabnro,evaseccnro,evatevnro,evaluador,evldorcargada,habilitado,fechahab, horahab,ingreso) " & _
                     " VALUES (" & rs_datos!evacabnro & "," & rs_secciones!evaseccnro & "," & revisor & _
                     " ," & empreporta & ",0,0," & ConvFecha(Date) & ",'0001',0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            Flog.writeline Espacios(Tabulador * 1) & "Revisor insertado, ternro: " & empreporta
        End If
        
        'Controlo si se informo el registro ya que NO es obligatorio
        If CLng(empReportaReporta) <> 0 Then
            'Supervisor Evaluador - Controlo si existen los evaluadores para cada seccion
            StrSql = " SELECT evldrnro FROM evadetevldor WHERE evacabnro = " & rs_datos!evacabnro & _
                     " AND evaseccnro = " & rs_secciones!evaseccnro & " AND evatevnro = " & supEvaluador & _
                     " AND evacabnro = " & rs_datos!evacabnro
                     
            OpenRecordset StrSql, rs_evaluador
            If Not rs_evaluador.EOF Then
                'si existe lo actualizo
                StrSql = " UPDATE evadetevldor SET " & _
                         " evaluador = " & empReportaReporta & _
                         " WHERE evldrnro = " & rs_evaluador!evldrnro
                objConn.Execute StrSql, , adExecuteNoRecords
                Flog.writeline Espacios(Tabulador * 1) & "Supervisor Revisor actualizado, ternro: " & empReportaReporta
            Else
                'si no existe lo inserto
                StrSql = " INSERT INTO evadetevldor (evacabnro,evaseccnro,evatevnro,evaluador,evldorcargada,habilitado,fechahab, horahab,ingreso) " & _
                         " VALUES (" & rs_datos!evacabnro & "," & rs_secciones!evaseccnro & "," & supEvaluador & _
                         " ," & empReportaReporta & ",0,0," & ConvFecha(Date) & ",'0001',0)"
                objConn.Execute StrSql, , adExecuteNoRecords
                Flog.writeline Espacios(Tabulador * 1) & "Supervisor Revisor insertado, ternro: " & empReportaReporta
            End If
            
        End If
        rs_secciones.MoveNext
    Loop
        
    
Else
    Texto = "No existe evaluacion para el empleado, ternro: " & Empleado
    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strLinea)
    HuboError = True
    Exit Sub
End If

Fin:
'Cierro todo y libero
If rs_datos.State = adStateOpen Then rs_datos.Close
If rs_evaluador.State = adStateOpen Then rs_evaluador.Close
If rs_secciones.State = adStateOpen Then rs_secciones.Close

Set rs_datos = Nothing
Set rs_evaluador = Nothing
Set rs_secciones = Nothing

Exit Sub

Manejador_De_Error:
    HuboError = True

    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    Flog.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    Flog.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    Flog.writeline
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
    Flog.writeline
    Flog.writeline Espacios(Tabulador * 1) & "**********************************************************"
    Flog.writeline
    Texto = Err.Description
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Call InsertaError(1, 7)
    GoTo Fin
End Sub


