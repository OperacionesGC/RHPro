Attribute VB_Name = "MdlInterfacesMigraInicial"
Option Explicit
Global OK As Boolean
Global Obligatorio As Boolean
Global Campoetiqueta As String
Global Aux As String
Global l_ess_Perfil_Estandar
Global l_ess_Pass_Estandar
Global l_confnro

Public Function Cuil_Valido605(ByVal strCUIL As String, ByVal Ndocu As String, ByRef MensajeError As String, ByVal Tdocu, ByVal nro_nacionalidad) As Boolean
' ---------------------------------------------------------------------------------------------
' Descripcion: Valida el Nro de CUIL
' Autor      : DNN
' Fecha      : 06/03/2009
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
'Números por los que hay que multiplicar cada dígito del CUIL
Const FACTORES = "54327654321"
Dim lngSuma As Long
Dim I As Long
Dim Valido As Boolean
Dim extranjero As Boolean

    strCUIL = Replace(strCUIL, "-", "")
    Valido = False
    If Tdocu = "DNI" Then
    If Len(strCUIL) = 11 Then
        If IsNumeric(strCUIL) Then
            For I = 1 To Len(strCUIL) '11
                lngSuma = lngSuma + (CLng(Mid(strCUIL, I, 1)) * CLng(Mid(FACTORES, I, 1)))
            Next I
            Valido = (lngSuma Mod Len(strCUIL) = 0) '11 = 0)
        End If
    Else
        MensajeError = "El cuil debe tener 11 dígitos"
    End If
    End If
    '----------------------Agregado por DNN 06-03-2009 validación de cuil con nro de documento------------------------------
    '--------------------------------------------- Rafa ------------------------------------------
    If Tdocu = "DNI" Then
        Dim rs_nac As New ADODB.Recordset
    
        StrSql = " SELECT nacionalnro FROM nacionalidad WHERE nacionaldefault = -1"
        OpenRecordset StrSql, rs_nac
        If Not rs_nac.EOF Then
            If rs_nac!nacionalnro = nro_nacionalidad Then
                 extranjero = False
            Else
                 extranjero = True
            End If
        End If
        If Valido And Ndocu <> "" Then
            If Not extranjero Then
                Valido = False
                If EsNulo(strCUIL) Then
                    MensajeError = "El número de documento ingresado no coincide con el número de cuil. Se cambiará CUIL acorde al número de documento."
                Else
                    MensajeError = "El número de documento ingresado no coincide con el número de cuil."
                End If
                For I = 1 To Len(strCUIL)
                    If Mid(strCUIL, I, Len(Ndocu)) = Ndocu Then
                        Valido = True
                        MensajeError = ""
                    End If
                Next
            Else
                MensajeError = "El DNI es Extranjero no se fija si esta dentro del CUIL"
                Valido = True
            End If
        Else
            MensajeError = "El cuil es incorrecto"
        End If
    Else
        MensajeError = " No Tiene DNI para comparar con CUIL"
        Valido = True
    End If
    '------------------------------------------------------------------------------------------------------------------
    
    
    Cuil_Valido605 = Valido
End Function
Public Sub Replica_OS_Plan(CodTer As Long, codEstr As Long, Valor As String, tipo As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Replica las Obras Sociales y Planes OS Ley en los Elejidos y viceversa
' Autor      : Zamarbide Juan
' Fecha      : 22/11/2011
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim rs_os As New ADODB.Recordset
 
If tipo = "OS" Then 'Obra Social
    StrSql = "SELECT * FROM osocial  where osdesc = '" & Valor & "'" 'Comprueba Si existe
    If rs_os.State = adStateOpen Then rs_os.Close
    OpenRecordset StrSql, rs_os
    
    If rs_os.EOF Then
        StrSql = " INSERT INTO osocial(ternro,osdesc) VALUES(" & CodTer & ",'" & Valor & "')" 'Si no existe inserta
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
        
Else 'Plan de Obra Social
        StrSql = "SELECT * FROM planos WHERE plnom = '" & Valor & "' AND osocial = " & CodTer 'Compruebo si existe
    If rs_os.State = adStateOpen Then rs_os.Close
    OpenRecordset StrSql, rs_os

    If rs_os.EOF Then
        StrSql = " INSERT INTO planos(plnom,osocial) VALUES('" & Valor & "'," & CodTer & ")" 'Inserto si no existe
            objConn.Execute StrSql, , adExecuteNoRecords
    End If
End If
If rs_os.State = adStateOpen Then rs_os.Close
Set rs_os = Nothing

End Sub

Public Sub Insertar_Linea_Segun_Modelo_MigraInicial(ByVal Linea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Procedimiento llamador de acuerdo al modelo. Interfaces de Migracion 0.
' Autor      : FGZ
' Fecha      : 30/07/2004
' Ultima Mod.: 14-12-2010 - Leticia A. - se inicializa la variable HuboError a False y nroclumna a 0
' Descripcion:
' ---------------------------------------------------------------------------------------------

    MyBeginTrans
    OK = True
    
    HuboError = False
    NroColumna = 0
    
    ' Segun Formato en Plantilla de Formatos Migracion Inicial
    Flog.writeline Espacios(Tabulador * 0) & "  Modelo " & NroModelo
    Select Case NroModelo
    Case 600: 'Familiares
        Call LineaModelo_600(Linea, OK)
    Case 601: 'Familiares - Goyaike
        Call LineaModelo_601(Linea)
    Case 602: 'Importación de Familiares
        Call LineaModelo_602(Linea, OK)
    Case 603: 'Empleados de Costa Rica
        Call LineaModelo_603(Linea, OK)
    Case 604: 'Empleados Walmart
        Call LineaModelo_604(Linea, OK)
    Case 605: 'Empleados Argentina
        Call LineaModelo_605(Linea, OK)
    Case 606: 'Empleados Uruguay
        Call LineaModelo_606(Linea, OK)
    Case 607: 'Empleados Chile
        Call LineaModelo_607(Linea, OK)
    Case 608: 'Empleados Colombia
        Call LineaModelo_608(Linea, OK)
    Case 609: 'Empleados Radiotronica
        Call LineaModelo_609(Linea, OK)
    Case 610: 'DesmenFamiliar
        Call LineaModelo_610
    Case 611: 'Empleados de Agencia - Argentina
        Call LineaModelo_611(Linea, OK)
    
    Case 612: 'Empleados Portugal - MI
        Call LineaModelo_612(Linea, OK)
    'Agregado ver 3.89--------------------
    Case 613: 'Empleados Chile - Custom INDAP
        Call LineaModelo_613(Linea, OK)
    Case 615: 'DDJJ
        Call LineaModelo_615(Linea)
    Case 616: 'Empleados Bolivia
        Call LineaModelo_616(Linea, OK)
    Case 620: 'Desglose de Ganancias - Se hizo para Accor
        Call LineaModelo_620(Linea)
    Case 625: 'Liquidaciones - Se hizo para Accor
        Call LineaModelo_625(Linea)
    Case 630: 'Historico de Estructuras
        Call LineaModelo_630(Linea)
    Case 635: 'Titulos
        Call LineaModelo_635(Linea)
    Case 640: 'Fases
        Call LineaModelo_640(Linea)
    Case 645: 'Acumuladores Mensuales
        Call LineaModelo_645(Linea)
        'Eliminado. Es la misma importacion que el modelo 250
    Case 650: 'Empleados CODELCO
        OK = True
        Call LineaModelo_650(Linea, OK)
        If OK Then
            MyCommitTrans
            Call LineaModelo_653(Linea, OK)
        End If
    Case 651: 'Password CODELCO
        Call LineaModelo_651(Linea, OK)
    Case 652: 'Historicos de Estructuras CODELCO
        Call LineaModelo_652(Linea, OK)
    Case 653: 'Empreporta Estandar
        Call LineaModelo_653(Linea, OK)
    Case 654: 'Ganancias - Ficharet
        Call LineaModelo_654(Linea)
    Case 655: 'Importación de cursos de capacitación - Deloitte
        Call LineaModelo_655(Linea)
    Case 656: 'Importación de eventos de capacitación - Deloitte
        Call LineaModelo_656(Linea)
    Case 657: 'Importación de calendarios de capacitación - Deloitte
        Call LineaModelo_657(Linea)
    Case 658: 'Importación de participantes de capacitación - Deloitte
        Call LineaModelo_658(Linea)
    Case 659: 'Importación de asistencias de capacitación - Deloitte
        Call LineaModelo_659(Linea)
    Case 660: 'Importación de Cuestionarios de Capacitacion - Estandar
        Call LineaModelo_660(Linea, OK)
    Case 661: 'Importación de Imágenes de Empleados - Estandar
        Call LineaModelo_661(Linea)
    Case 662: 'Importación de mails
        Call LineaModelo_662(Linea)
    Case 663: 'Importación de Prestadores Medicos
        Call LineaModelo_663(Linea, OK)
    Case 664: 'Importación de Empleados - Similar a Modelo 605
        Call LineaModelo_664(Linea, OK)
    Case 668: 'Importación de Domicilios Multi - Pais
        Call LineaModelo_668(Linea, OK)
    Case 672: 'Importación de Empleados - Similar a Modelo 664 pero con Documentos multi bd multi pais
        Call LineaModelo_672(Linea, OK)
    Case 675: 'Importación de Nick Names
        Call LineaModelo_675(Linea, OK)

    Case 909: 'Familiares - Uruguay
        Call LineaModelo_909(Linea)
    Case 910: 'Familiares - Colombia
        Call LineaModelo_910(Linea, OK)
    Case 911: 'Familiares - Chile
        Call LineaModelo_911(Linea, OK)
    Case 912: 'Familiares - Portugal
        Call LineaModelo_912(Linea, OK)
    Case 922: 'Importación de Domicilios Multipais (Tipo y N° de doc)
        Call LineaModelo_922(Linea, OK)
    Case 1006: 'Importación Organización Territorial Multipaís.
        Call LineaModelo_1006(Linea, OK)
    End Select
    
    If OK Then
        MyCommitTrans
    Else
        Flog.writeline Espacios(Tabulador * 0) & "  NO hizo Commit del Modelo " & NroModelo
    End If
    
End Sub


Public Sub ValidarLocalidad(Localidad As String, ByRef Nro_Localidad As Long, Nro_Pais As Long, Nro_Provincia As Long, Optional Nro_Zona As Long)
'modificado: 22-12-2006 Diego Rosso - se le agrego un parametro necesario para el modelo 607
            '04/06/2013 Ana Annese - se descomento el IF Nro_Pais y IF Nro_Provincia

Dim rs_sub As New ADODB.Recordset
Dim Sql_Ins As String
Dim SQL_Val As String

If Not EsNulo(Localidad) Then
    StrSql = " SELECT * FROM localidad WHERE UPPER(locdesc) = '" & UCase(Localidad) & "'"
    
    If Nro_Pais <> 0 Then
        StrSql = StrSql & " AND paisnro = " & Nro_Pais
    End If

    If Nro_Provincia <> 0 Then
        StrSql = StrSql & " AND provnro = " & Nro_Provincia
    End If
    OpenRecordset StrSql, rs_sub
    
    If rs_sub.EOF Then
    
        Sql_Ins = " INSERT INTO localidad(locdesc"
        SQL_Val = " VALUES('" & UCase(Localidad) & "'"
    
        If Nro_Pais <> 0 Then
        
            Sql_Ins = Sql_Ins & ",paisnro"
            SQL_Val = SQL_Val & "," & Nro_Pais
        
        End If
    
        If Nro_Zona <> 0 Then
            Sql_Ins = Sql_Ins & ",zonanro"
            SQL_Val = SQL_Val & "," & Nro_Zona
        End If
    
    
        If Nro_Provincia <> 0 Then
            Sql_Ins = Sql_Ins & ",provnro"
            SQL_Val = SQL_Val & "," & Nro_Provincia
        End If
        
        StrSql = Sql_Ins & ")" & SQL_Val & ")"
        
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Nro_Localidad = getLastIdentity(objConn, "localidad")
        
    Else
    
        Nro_Localidad = rs_sub!Locnro
    
    End If
End If
End Sub

Public Sub ValidarVia(via As String, ByRef Nro_Via As Long)

    Dim rs_sub As New ADODB.Recordset

    If Not EsNulo(via) Then
        StrSql = " SELECT * FROM via WHERE UPPER(viadesc) = '" & UCase(via) & "'"
        OpenRecordset StrSql, rs_sub
        
        If rs_sub.EOF Then
            StrSql = "INSERT INTO via(viadesc) VALUES('"
            StrSql = StrSql & UCase(via) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
                    
            Nro_Via = getLastIdentity(objConn, "via")
        Else
            Nro_Via = rs_sub!Vianro
        End If
    End If
End Sub
Public Sub ValidarCodTelef(ByVal modcodorinro As Long, ByVal modcodoriid As Long, ByVal codtel As String)
    ' ---------------------------------------------------------------------------------------------
    ' Descripcion: Crea/Modifica código telefonico según origen de tabla ||Se utiliza en el modelo 1006||
    ' Autor      : Gonzalez Nicolás
    ' Fecha      : 26/08/2015
    ' Ultima Mod.:
    Dim rs_sub As New ADODB.Recordset
    StrSql = "SELECT modcodtelnro,modcodtelcod FROM modelo_etiq_codtel"
    StrSql = StrSql & " WHERE modcodorinro = " & modcodorinro
    StrSql = StrSql & " AND modcodoriid = " & modcodoriid
    OpenRecordset StrSql, rs_sub
    If Not rs_sub.EOF Then
        If rs_sub!modcodtelcod <> codtel Then
            StrSql = "UPDATE modelo_etiq_codtel SET modcodtelcod = '" & codtel & "'"
            StrSql = StrSql & " WHERE modcodtelnro = " & rs_sub!modcodtelnro
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
    Else
        If Not EsNulo(codtel) Then
            StrSql = "INSERT INTO modelo_etiq_codtel (modcodorinro,modcodoriid,modcodtelcod) "
            StrSql = StrSql & " VALUES ("
            StrSql = StrSql & " " & modcodorinro
            StrSql = StrSql & "," & modcodoriid
            StrSql = StrSql & ",'" & codtel & "'"
            StrSql = StrSql & " )"
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
    End If
End Sub
Public Sub ValidarLogradouro(ByRef Aux As String, ByRef Auxchr2 As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Valida si existe Tipo de Logradouro  - Para Modelo de BRASIL (interfaces MultiPaís)
' Autor      : Gonzalez Nicolás
' Fecha      : 29/06/2015
' ---------------------------------------------------------------------------------------------
Dim ArrTipLog(49, 1)
Dim resultado
Dim I
If Not EsNulo(Aux) Then
    ArrTipLog(0, 0) = "AER"
    ArrTipLog(0, 1) = "Aeroporto"
    ArrTipLog(1, 0) = "AL"
    ArrTipLog(1, 1) = "Alameda"
    ArrTipLog(2, 0) = "A"
    ArrTipLog(2, 1) = "Área"
    ArrTipLog(3, 0) = "AV"
    ArrTipLog(3, 1) = "Avenida"
    ArrTipLog(4, 0) = "BAL"
    ArrTipLog(4, 1) = "Balneário"
    ArrTipLog(5, 0) = "BL"
    ArrTipLog(5, 1) = "Bloco"
    ArrTipLog(6, 0) = "CPO"
    ArrTipLog(6, 1) = "Campo"
    ArrTipLog(7, 0) = "CH"
    ArrTipLog(7, 1) = "Chácara"
    ArrTipLog(8, 0) = "COL"
    ArrTipLog(8, 1) = "Colônia"
    ArrTipLog(9, 0) = "COND"
    ArrTipLog(9, 1) = "Condomínio"
    ArrTipLog(10, 0) = "CJ"
    ArrTipLog(10, 1) = "Conjunto"
    ArrTipLog(11, 0) = "DT"
    ArrTipLog(11, 1) = "Distrito"
    ArrTipLog(12, 0) = "ESP"
    ArrTipLog(12, 1) = "Esplanada"
    ArrTipLog(13, 0) = "ETC"
    ArrTipLog(13, 1) = "Estação"
    ArrTipLog(14, 0) = "EST"
    ArrTipLog(14, 1) = "Estrada"
    ArrTipLog(15, 0) = "FAV"
    ArrTipLog(15, 1) = "Favela"
    ArrTipLog(16, 0) = "FAZ"
    ArrTipLog(16, 1) = "Fazenda"
    ArrTipLog(17, 0) = "FRA"
    ArrTipLog(17, 1) = "Feira"
    ArrTipLog(18, 0) = "GAL"
    ArrTipLog(18, 1) = "Galeria"
    ArrTipLog(19, 0) = "GJA"
    ArrTipLog(19, 1) = "Granja"
    ArrTipLog(20, 0) = "JD"
    ArrTipLog(20, 1) = "Jardim"
    ArrTipLog(21, 0) = "LD"
    ArrTipLog(21, 1) = "Ladeira"
    ArrTipLog(22, 0) = "LGO"
    ArrTipLog(22, 1) = "Lago"
    ArrTipLog(23, 0) = "LGA"
    ArrTipLog(23, 1) = "Lagoa"
    ArrTipLog(24, 0) = "LRG"
    ArrTipLog(24, 1) = "Largo"
    ArrTipLog(25, 0) = "LOT"
    ArrTipLog(25, 1) = "Loteamento"
    ArrTipLog(26, 0) = "MRO"
    ArrTipLog(26, 1) = "Morro"
    ArrTipLog(27, 0) = "NUC"
    ArrTipLog(27, 1) = "Núcleo"
    ArrTipLog(28, 0) = "O"
    ArrTipLog(28, 1) = "Outros"
    ArrTipLog(29, 0) = "PRQ"
    ArrTipLog(29, 1) = "Parque"
    ArrTipLog(30, 0) = "PSA"
    ArrTipLog(30, 1) = "Passarela"
    ArrTipLog(31, 0) = "PAT"
    ArrTipLog(31, 1) = "Pátio"
    ArrTipLog(32, 0) = "PC"
    ArrTipLog(32, 1) = "Praça"
    ArrTipLog(33, 0) = "PR"
    ArrTipLog(33, 1) = "Praia"
    ArrTipLog(34, 0) = "Q"
    ArrTipLog(34, 1) = "Quadra"
    ArrTipLog(35, 0) = "REC"
    ArrTipLog(35, 1) = "Recanto"
    ArrTipLog(36, 0) = "RES"
    ArrTipLog(36, 1) = "Residencial"
    ArrTipLog(37, 0) = "ROD"
    ArrTipLog(37, 1) = "Rodovia"
    ArrTipLog(38, 0) = "R"
    ArrTipLog(38, 1) = "Rua"
    ArrTipLog(39, 0) = "ST"
    ArrTipLog(39, 1) = "Setor"
    ArrTipLog(40, 0) = "SIT"
    ArrTipLog(40, 1) = "Sítio"
    ArrTipLog(41, 0) = "TV"
    ArrTipLog(41, 1) = "Travessa"
    ArrTipLog(42, 0) = "TRC"
    ArrTipLog(42, 1) = "Trecho"
    ArrTipLog(43, 0) = "TRV"
    ArrTipLog(43, 1) = "Trevo"
    ArrTipLog(44, 0) = "VLE"
    ArrTipLog(44, 1) = "Vale"
    ArrTipLog(45, 0) = "VER"
    ArrTipLog(45, 1) = "Vereda"
    ArrTipLog(46, 0) = "V"
    ArrTipLog(46, 1) = "Via"
    ArrTipLog(47, 0) = "VD"
    ArrTipLog(47, 1) = "Viaduto"
    ArrTipLog(48, 0) = "VLA"
    ArrTipLog(48, 1) = "Viela"
    ArrTipLog(49, 0) = "VL"
    ArrTipLog(49, 1) = "Vila"
    Auxchr2 = ""
    For I = 0 To UBound(ArrTipLog)
        If UCase(ArrTipLog(I, 1)) = UCase(Aux) Then
            Aux = ArrTipLog(I, 0)
            Auxchr2 = ArrTipLog(I, 1)
            Exit For
        End If
    Next
    If Auxchr2 = "" Then
        Aux = ""
    End If
    
End If
End Sub

Public Sub ValidarPartido(Partido As String, ByRef Nro_Partido As Long)

Dim rs_sub As New ADODB.Recordset

If Not EsNulo(Partido) Then
    StrSql = " SELECT * FROM partido WHERE UPPER(partnom) = '" & UCase(Partido) & "'"
    OpenRecordset StrSql, rs_sub
    
    If rs_sub.EOF Then
    
        StrSql = "INSERT INTO partido(partnom) VALUES('"
        StrSql = StrSql & UCase(Partido) & "')"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        
        Nro_Partido = getLastIdentity(objConn, "partido")
        
'        StrSql = " SELECT MAX(partnro) AS MaxPart FROM partido "
'        'StrSql = " SELECT @@IDENTITY AS MaxPart "
'        OpenRecordset StrSql, rs_sub
'
'        nro_partido = rs_sub!MaxPart
    
    Else
        
        Nro_Partido = rs_sub!Partnro
    
    End If
End If
End Sub

Public Sub ValidarZona(Zona As String, ByRef Nro_Zona As Long, Nro_Provincia As Long)
' JPB - Se controla que el Nro_Provincia no sea 0
Dim rs_sub As New ADODB.Recordset

    If Not EsNulo(Zona) Then
        StrSql = " SELECT * FROM zona WHERE UPPER(zonadesc) = '" & UCase(Zona) & "' AND provnro = " & Nro_Provincia
        OpenRecordset StrSql, rs_sub
        
        If rs_sub.EOF Then
           If Nro_Provincia <> 0 Then
              StrSql = "INSERT INTO zona(zonadesc,provnro) VALUES('"
              StrSql = StrSql & UCase(Zona) & "'," & Nro_Provincia & ")"
              objConn.Execute StrSql, , adExecuteNoRecords
            
'            StrSql = " SELECT MAX(zona) AS MaxZona FROM zona "
'            'StrSql = " SELECT @@IDENTITY AS MaxZona "
'            OpenRecordset StrSql, rs_sub
'
'            nro_zona = rs_sub!MaxZona
              Nro_Zona = getLastIdentity(objConn, "zona")
           End If
        Else
            Nro_Zona = rs_sub!Zonanro
            Nro_Provincia = rs_sub!Provnro
        End If
    End If

End Sub

Public Sub ValidarPaisMpais(Pais As String, ByRef Nro_Pais As Long)
' ---------------------------------------------------------------------------------------------
' Descripcion: Valida si existe el país  - Para interfaces MultiPaís
' Autor      : Gonzalez Nicolás
' Fecha      : 19/06/2014
' ---------------------------------------------------------------------------------------------
    Dim rs_sub As New ADODB.Recordset
    If Not EsNulo(Pais) Then
        StrSql = " SELECT * FROM pais WHERE UPPER(paisdesc) = '" & UCase(Pais) & "'"
        OpenRecordset StrSql, rs_sub
        If Not rs_sub.EOF Then
            Nro_Pais = rs_sub!Paisnro
        Else
            Nro_Pais = 0
        End If
    End If
End Sub

Public Sub ValidarProvinciaMpais(Provincia As String, ByRef Nro_Provincia As Long, ByRef Nro_Pais As Long)
' ---------------------------------------------------------------------------------------------
' Descripcion: Valida si existe la Provincia  - Para interfaces MultiPaís
' Autor      : Gonzalez Nicolás
' Fecha      : 19/06/2014
' ---------------------------------------------------------------------------------------------
    Dim rs_sub As New ADODB.Recordset
    If Not EsNulo(Provincia) Then
        StrSql = " SELECT * FROM provincia WHERE upper(provdesc) = '" & UCase(Provincia) & "'"
        OpenRecordset StrSql, rs_sub
        If Not rs_sub.EOF Then
            Nro_Provincia = rs_sub!Provnro
        Else
            Nro_Provincia = 0
        End If
    End If
End Sub

Public Sub ValidarLocalidadMPais(Localidad As String, ByRef Nro_Localidad As Long, Nro_Pais As Long, Nro_Provincia As Long, Optional Nro_Zona As Long)
' ---------------------------------------------------------------------------------------------
' Descripcion: Valida si existe la Localidad  - Para interfaces MultiPaís
' Autor      : Gonzalez Nicolás
' Fecha      : 19/06/2014
' ---------------------------------------------------------------------------------------------
    
    Dim rs_sub As New ADODB.Recordset
    Dim Sql_Ins As String
    Dim SQL_Val As String

    If Not EsNulo(Localidad) Then
        StrSql = " SELECT * FROM localidad WHERE UPPER(locdesc) = '" & UCase(Localidad) & "'"
        If Nro_Pais <> 0 Then
            StrSql = StrSql & " AND paisnro = " & Nro_Pais
        End If
        If Nro_Provincia <> 0 Then
            StrSql = StrSql & " AND provnro = " & Nro_Provincia
        End If
        OpenRecordset StrSql, rs_sub
        If Not rs_sub.EOF Then
            Nro_Localidad = rs_sub!Locnro
        Else
            Nro_Localidad = 0
        End If
    End If
End Sub

Public Sub ValidarZonaMPais(Zona As String, ByRef Nro_Zona As Long, Nro_Provincia As Long)
' ---------------------------------------------------------------------------------------------
' Descripcion: Valida si existe la Zona  - Para interfaces MultiPaís
' Autor      : Gonzalez Nicolás
' Fecha      : 19/06/2014
' ---------------------------------------------------------------------------------------------
    Dim rs_sub As New ADODB.Recordset
    If Not EsNulo(Zona) Then
        StrSql = " SELECT * FROM zona WHERE UPPER(zonadesc) = '" & UCase(Zona) & "' AND provnro = " & Nro_Provincia
        OpenRecordset StrSql, rs_sub
        If Not rs_sub.EOF Then
            Nro_Zona = rs_sub!Zonanro
        Else
            Nro_Zona = 0
        End If
    End If
End Sub

Public Sub ValidarPartidoMpais(Partido As String, ByRef Nro_Partido As Long)
' ---------------------------------------------------------------------------------------------
' Descripcion: Valida si existe El Partido  - Para interfaces MultiPaís
' Autor      : Gonzalez Nicolás
' Fecha      : 19/06/2014
' ---------------------------------------------------------------------------------------------
    Dim rs_sub As New ADODB.Recordset
    If Not EsNulo(Partido) Then
        StrSql = " SELECT * FROM partido WHERE UPPER(partnom) = '" & UCase(Partido) & "'"
        OpenRecordset StrSql, rs_sub
        If Not rs_sub.EOF Then
            Nro_Partido = rs_sub!Partnro
        Else
            Nro_Partido = 0
        End If
    End If
End Sub

Public Sub ValidarProvincia(Provincia As String, ByRef Nro_Provincia As Long, ByRef Nro_Pais As Long)

Dim rs_sub As New ADODB.Recordset
' JPB - Se controla que el Nro_Pais no sea 0
If Not EsNulo(Provincia) Then
   
        'StrSql = " SELECT * FROM provincia WHERE provdesc = '" & Provincia & "' AND paisnro = " & nro_pais
        StrSql = " SELECT * FROM provincia WHERE upper(provdesc) = '" & UCase(Provincia) & "'"
        OpenRecordset StrSql, rs_sub
        
         If rs_sub.EOF Then
         
           If Nro_Pais <> 0 Then
             StrSql = "INSERT INTO provincia(provdesc,paisnro) VALUES('"
             StrSql = StrSql & UCase(Provincia) & "'," & Nro_Pais & ")"
             objConn.Execute StrSql, , adExecuteNoRecords
            
             Nro_Provincia = getLastIdentity(objConn, "provincia")
    '        StrSql = " SELECT MAX(provnro) AS MaxProv FROM provincia "
    '        'StrSql = " SELECT @@IDENTITY AS MaxProv "
    '        OpenRecordset StrSql, rs_sub
    '
    '        nro_provincia = rs_sub!MaxProv
           End If
         
        Else
           Nro_Provincia = rs_sub!Provnro
           Nro_Pais = rs_sub!Paisnro
        End If
        
End If
End Sub

Public Sub ValidarPais(Pais As String, ByRef Nro_Pais As Long)

Dim rs_sub As New ADODB.Recordset

    If Not EsNulo(Pais) Then
        StrSql = " SELECT * FROM pais WHERE UPPER(paisdesc) = '" & UCase(Pais) & "'"
        OpenRecordset StrSql, rs_sub
        
        If rs_sub.EOF Then
        
            StrSql = "INSERT INTO pais(paisdesc,paisdef) VALUES('"
            StrSql = StrSql & UCase(Pais) & "',0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            Nro_Pais = getLastIdentity(objConn, "pais")
        Else
            Nro_Pais = rs_sub!Paisnro
        End If
    End If


End Sub

Public Sub CalcularLegajo(ByVal NroEmp As Long, ByRef Legajo As String)
Dim rs_leg As New ADODB.Recordset
Dim rs_emp As New ADODB.Recordset
Dim NroLegajo As Long
Dim continuar As Boolean
    
        StrSql = "SELECT MAX(empleg) AS ProxLegajo FROM empleado"
        StrSql = StrSql & " WHERE ternro in (SELECT ternro FROM his_estructura"
        StrSql = StrSql & " WHERE tenro = 10 AND estrnro = " & NroEmp & " AND htethasta IS NULL)"
        OpenRecordset StrSql, rs_leg
        If Not EsNulo(rs_leg!ProxLegajo) Then
            NroLegajo = rs_leg!ProxLegajo + 1
        Else
            StrSql = "SELECT MAX(empleg) AS ProxLegajo FROM empleado"
            OpenRecordset StrSql, rs_leg
            If Not EsNulo(rs_leg!ProxLegajo) Then
                NroLegajo = rs_leg!ProxLegajo + 1
            Else
                NroLegajo = 1
            End If
        End If
        
        
        continuar = True
                
        Do While continuar
            StrSql = "SELECT empleg FROM empleado WHERE empleg = " & NroLegajo
            OpenRecordset StrSql, rs_emp
        
            If rs_emp.EOF Then
                continuar = False
            Else
                NroLegajo = NroLegajo + 1
            End If
        Loop
        Legajo = Str(NroLegajo)
        
If rs_leg.State = adStateOpen Then rs_leg.Close
If rs_emp.State = adStateOpen Then rs_emp.Close

Set rs_leg = Nothing
Set rs_emp = Nothing
End Sub

Public Sub CalcularLegajo2(ByVal NroEmp As Long, ByRef Legajo As String)
Dim rs_leg As New ADODB.Recordset
Dim rs_emp As New ADODB.Recordset
Dim rs_Aux As New ADODB.Recordset
Dim NroLegajo As Long
Dim continuar As Boolean
Dim l_desde
Dim l_hasta
    



    StrSql = " SELECT legdesde,leghasta FROM Empresa_Rango_Leg "
    StrSql = StrSql & " WHERE estrnro = " & NroEmp
    StrSql = StrSql & " ORDER BY estrnro DESC "
    OpenRecordset StrSql, rs_Aux
    
    If Not rs_Aux.EOF Then
        l_desde = rs_Aux!legdesde
        l_hasta = rs_Aux!leghasta
                rs_Aux.Close

        StrSql = "SELECT Max(empleg) ProxLegajo  FROM empleado "
        StrSql = StrSql & "  WHERE empleg >= " & l_desde
        StrSql = StrSql & "  AND   empleg <= " & l_hasta
       ' StrSql = StrSql & " ORDER BY empleg DESC "
        OpenRecordset StrSql, rs_leg
        If Not rs_leg.EOF Then
             If Not EsNulo(rs_leg!ProxLegajo) Then
                    If rs_leg!ProxLegajo < l_hasta Then
                        NroLegajo = rs_leg!ProxLegajo + 1
                    Else
                     ' no hay mas nros de legajo
                     Texto = " Error (de legajo): no hay mas n{umeros disponibles "
                     Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, "")
                     Exit Sub
                    End If
            Else
                NroLegajo = l_desde
            End If
        Else
            NroLegajo = l_desde
        End If
    Else
            StrSql = "SELECT MAX(empleg) AS ProxLegajo FROM empleado"
            OpenRecordset StrSql, rs_leg
            If Not EsNulo(rs_leg!ProxLegajo) Then
                NroLegajo = rs_leg!ProxLegajo + 1
            Else
                NroLegajo = 1
            End If
       
            continuar = True
                
           Do While continuar
            StrSql = "SELECT empleg FROM empleado WHERE empleg = " & NroLegajo
            OpenRecordset StrSql, rs_emp
        
            If rs_emp.EOF Then
                continuar = False
            Else
                NroLegajo = NroLegajo + 1
            End If
        Loop
  
End If
      Legajo = Str(NroLegajo)
If rs_Aux.State = adStateOpen Then rs_leg.Close
If rs_leg.State = adStateOpen Then rs_leg.Close
If rs_emp.State = adStateOpen Then rs_emp.Close

Set rs_leg = Nothing
Set rs_emp = Nothing
End Sub


Public Sub ValidaEstructura(ByRef TipoEstr As Long, ByRef Valor As String, ByRef CodEst As Long, ByRef Inserto_estr As Boolean)
Dim Rs_Estr As New ADODB.Recordset
Dim d_estructura As String
Dim CodExt As String
Dim l_pos1 As Long
Dim l_pos2 As Long

On Error GoTo validaE

    'Flog.writeline "Entro x ValidaEstructura"
    If InStr(1, Valor, "$") > 0 Then
        l_pos1 = InStr(1, Valor, "$")
        l_pos2 = Len(Valor)
    
        'FGZ - 27/08/2010 -------------------------------------
        'd_estructura = Trim(Mid(Valor, l_pos1 + 2, l_pos2))
        d_estructura = Trim(Mid(Valor, l_pos1 + 1, l_pos2))
        'FGZ - 27/08/2010 -------------------------------------
        If l_pos1 <> 0 Then
            CodExt = Mid(Valor, 1, l_pos1 - 1)
        Else
            CodExt = ""
        End If
    Else
        d_estructura = Trim(Valor)
        CodExt = ""
    End If
    
    Valor = d_estructura

    
    StrSql = " SELECT estrnro FROM estructura WHERE UPPER(estructura.estrdabr) = '" & UCase(Mid(d_estructura, 1, 60)) & "'"
    StrSql = StrSql & " AND estructura.tenro = " & TipoEstr
    
    'Flog.writeline "SQL: " & StrSql
    
    OpenRecordset StrSql, Rs_Estr
    If Not Rs_Estr.EOF Then
                
            CodEst = Rs_Estr!Estrnro
            Inserto_estr = False
            
    Else
            
            StrSql = " INSERT INTO estructura(tenro,estrdabr,empnro,estrest,estrcodext)"
            StrSql = StrSql & " VALUES(" & TipoEstr & ",'" & UCase(Mid(d_estructura, 1, 60)) & "',1,-1,'" & Mid(CodExt, 1, 30) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            CodEst = getLastIdentity(objConn, "estructura")
            
            Inserto_estr = True
    End If

Exit Sub

validaE:
    Texto = " Error (valida) " & Err.Number & " - " & Err.Description
    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, "")
    '  My R ol lbackTrans   O K = False


End Sub
Public Sub ValidaEstructura2(TipoEstr As Long, ByRef Valor As String, ByRef CodEst As Long, ByRef Inserto_estr2 As Boolean)
'Modificado: 16-04-2012 - Zamarbide Juan
Dim Rs_Estr As New ADODB.Recordset
Dim d_estructura As String
Dim CodExt As String
Dim l_pos1 As Long
Dim l_pos2 As Long

On Error GoTo validaE

    'Flog.writeline "Entro x ValidaEstructura"
    If InStr(1, Valor, "$") > 0 Then
        l_pos1 = InStr(1, Valor, "$")
        l_pos2 = Len(Valor)
    
        'FGZ - 27/08/2010 -------------------------------------
        'd_estructura = Trim(Mid(Valor, l_pos1 + 2, l_pos2))
        d_estructura = Trim(Mid(Valor, l_pos1 + 1, l_pos2))
        'FGZ - 27/08/2010 -------------------------------------
        If l_pos1 <> 0 Then
            CodExt = Mid(Valor, 1, l_pos1 - 1)
        Else
            CodExt = ""
        End If
    Else
        d_estructura = Trim(Valor)
        CodExt = ""
    End If
    
    Valor = d_estructura

    
    StrSql = " SELECT estrnro FROM estructura WHERE UPPER(estructura.estrdabr) = '" & UCase(Mid(d_estructura, 1, 60)) & "'"
    StrSql = StrSql & " AND estructura.tenro = " & TipoEstr
    
    'Flog.writeline "SQL: " & StrSql
    
    OpenRecordset StrSql, Rs_Estr
    If Not Rs_Estr.EOF Then
                
            CodEst = Rs_Estr!Estrnro
            Inserto_estr2 = False
            
    Else
            StrSql = " INSERT INTO estructura(tenro,estrdabr,empnro,estrest,estrcodext)"
            StrSql = StrSql & " VALUES(" & TipoEstr & ",'" & UCase(Mid(d_estructura, 1, 60)) & "',1,-1,'" & Mid(CodExt, 1, 30) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            CodEst = getLastIdentity(objConn, "estructura")
            Inserto_estr2 = True
    End If

Exit Sub

validaE:
    Texto = " Error (valida) " & Err.Number & " - " & Err.Description
    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, "")
    '  My R ol lbackTrans   O K = False


End Sub
Public Sub VerSiCrearTercero(Tenro As Long, Valor As String, ByRef CodTer)


  Select Case Tenro

    Case 1
        'Sucursal
        CreaTercero 10, Valor, CodTer
    Case 10
        'Empresa
        CreaTercero 10, Valor, CodTer
    Case 15
        'Caja de Jubilacion
        CreaTercero 6, Valor, CodTer
    Case 16
        'Sindicato
        CreaTercero 5, Valor, CodTer
    Case 17
        'OS Elegida
        CreaTercero 4, Valor, CodTer
    Case 24
        'Obra social por Ley
        CreaTercero 4, Valor, CodTer
    Case 28
        'Agencia
        CreaTercero 7, Valor, CodTer
    Case 40
        'ART
        CreaTercero 8, Valor, CodTer
    Case 41
        'Banco de Pago
        CreaTercero 13, Valor, CodTer
    Case Else
        'Cuando no se crea el tercero
        CodTer = 0

  End Select
 
End Sub
Public Sub VerSiCrearComplemento(Tenro As Long, codEstr As Long, Valor As String, CodTer As Long)

  Select Case Tenro

    Case 1
        'Sucursal
        Complementos1 CodTer, codEstr
    Case 4
        'Puesto
        Complementos4 codEstr, Valor
    Case 10
        'Empresa
        Complementos10 CodTer, codEstr, Valor
    Case 15
        'Caja de Jubilacion
        Complementos15 CodTer, codEstr
    Case 16
        'Sindicato
        Complementos16 CodTer, codEstr
    Case 17
        'OS Elegida
        Complementos17 CodTer, codEstr, Valor
    Case 18
        'Contrato
        Complementos18 CodTer, codEstr, Valor
    Case 19
        'Convenio
        Complementos19 codEstr
    Case 22
        'Forma de Liquidacion
        Complementos22 CodTer, codEstr, Valor
    Case 23
        'Plan de Obra social Elegida
        Complementos23 CodTer, codEstr, Valor
    Case 24
        'Obra social por Ley
        Complementos17 CodTer, codEstr, Valor
    Case 25
        'Plan de Obra social por Ley
        Complementos23 CodTer, codEstr, Valor
    Case 28
        'Agencia
        Complementos28 CodTer, codEstr, Valor
    Case 40
        'ART
        Complementos40 CodTer, codEstr, Valor
    Case 41
        'Banco de Pago
        Complementos41 CodTer, codEstr, Valor


  End Select
 
End Sub


Public Sub CreaComplemento(TipoEstr As Long, CodTer As Long, codEstr As Long, Valor As String)


  Select Case TipoEstr

    Case 1
        Complementos1 CodTer, codEstr
    Case 3
        Complementos3 CodTer, codEstr
    Case 4
        Complementos4 codEstr, Valor
    Case 10
        Complementos10 CodTer, codEstr, Valor
    Case 15
        Complementos15 CodTer, codEstr
    Case 16
        Complementos16 CodTer, codEstr
    Case 17
        Complementos17 CodTer, codEstr, Valor
        
        'Replica_OS_Plan CodTer, codEstr, Valor, "OS" 'Agregado ver. 3.96 - JAZ
    Case 18
        Complementos18 CodTer, codEstr, Valor
    Case 19
        Complementos19 codEstr
    Case 22
        Complementos22 CodTer, codEstr, Valor
    Case 23
        Complementos23 CodTer, codEstr, Valor
        'Replica_OS_Plan CodTer, codEstr, Valor, "POS" 'Agregado ver. 3.96 - JAZ
    Case 28
        Complementos28 CodTer, codEstr, Valor
    Case 24
        Complementos17 CodTer, codEstr, Valor
        'Replica_OS_Plan CodTer, codEstr, Valor, "OS" 'Agregado ver. 3.96 - JAZ
    Case 40
        Complementos40 CodTer, codEstr, Valor
    Case 41
        Complementos41 CodTer, codEstr, Valor

  End Select
 
End Sub

Public Sub Complementos1(CodTer As Long, codEstr As Long)

    StrSql = " INSERT INTO sucursal(estrnro,ternro,sucest) VALUES(" & codEstr & "," & CodTer & ",-1)"
    objConn.Execute StrSql, , adExecuteNoRecords

End Sub

Public Sub Complementos3(CodTer As Long, codEstr As Long)

    StrSql = " INSERT INTO categoria(estrnro,convnro) VALUES(" & codEstr & "," & CodTer & ")"
    objConn.Execute StrSql, , adExecuteNoRecords

End Sub

Public Sub Complementos4(codEstr As Long, Valor As String)

    StrSql = " INSERT INTO puesto(estrnro,puedesc,puenroreemp) VALUES(" & codEstr & ",'" & Valor & "',0)"
    objConn.Execute StrSql, , adExecuteNoRecords

End Sub

Public Sub Complementos10(CodTer As Long, codEstr As Long, Valor As String)

    StrSql = " INSERT INTO empresa(estrnro,ternro,empnom) VALUES(" & codEstr & "," & CodTer & ",'" & Valor & "')"
    objConn.Execute StrSql, , adExecuteNoRecords

End Sub

Public Sub Complementos15(CodTer As Long, codEstr As Long)

    ' Hay que crear un Tipo de Caja de Jubilacion "Migracion"

    StrSql = " INSERT INTO cajjub(estrnro,ternro,cajest,ticnro) VALUES(" & codEstr & "," & CodTer & ",-1,1)"
    objConn.Execute StrSql, , adExecuteNoRecords

End Sub

Public Sub Complementos16(CodTer As Long, codEstr As Long)

    StrSql = " INSERT INTO gremio(estrnro,ternro) VALUES(" & codEstr & "," & CodTer & ")"
    objConn.Execute StrSql, , adExecuteNoRecords

End Sub

Public Sub Complementos17(CodTer As Long, codEstr As Long, Valor As String)
' Ultima Modificacion:  FGZ
' Fecha:                17/12/2004
'---------------------------------------------------------
Dim rs_17 As New ADODB.Recordset

    StrSql = "SELECT * FROM osocial  where osdesc = '" & Valor & "'"
    If rs_17.State = adStateOpen Then rs_17.Close
    OpenRecordset StrSql, rs_17
    
    If rs_17.EOF Then
        StrSql = " INSERT INTO osocial(ternro,osdesc) VALUES(" & CodTer & ",'" & Valor & "')"
        objConn.Execute StrSql, , adExecuteNoRecords
    End If
    
    StrSql = "SELECT * FROM replica_estr  where origen = " & CodTer
    StrSql = StrSql & " AND estrnro = " & codEstr
    If rs_17.State = adStateOpen Then rs_17.Close
    OpenRecordset StrSql, rs_17
    If rs_17.EOF Then
        StrSql = " INSERT INTO replica_estr(origen,estrnro) VALUES (" & CodTer & "," & codEstr & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
    End If
    
    If rs_17.State = adStateOpen Then rs_17.Close
    Set rs_17 = Nothing
End Sub

Public Sub Complementos18(CodTer As Long, codEstr As Long, Valor As String)
Dim rs_tipocont As New ADODB.Recordset
Dim rs_TC As New ADODB.Recordset
Dim CodTC As Long


    
    StrSql = "SELECT * FROM tipocont  where tcdabr = '" & Valor & "'"
    OpenRecordset StrSql, rs_tipocont
    
    If rs_tipocont.EOF Then
        '22-11-06 -Diego Rosso - se agregaron los campos tcdesc(se pone = a tcdabr) y leynro
        StrSql = " INSERT INTO tipocont(tcdabr,estrnro,tcind,tcdesc,leynro) VALUES('" & Valor & "'," & codEstr & ",-1,'" & Valor & "',1)"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        CodTC = getLastIdentity(objConn, "tipocont")
        
        'StrSql = " INSERT INTO replica_estr(origen,estrnro) VALUES (" & CodTC & "," & CodEstr & ")"
        'objConn.Execute StrSql, , adExecuteNoRecords
    End If
End Sub

Public Sub Complementos19(codEstr As Long)

    StrSql = " INSERT INTO convenios(estrnro) VALUES(" & codEstr & ")"
    objConn.Execute StrSql, , adExecuteNoRecords

End Sub

Public Sub Complementos22(CodTer As Long, codEstr As Long, Valor As String)

    StrSql = " INSERT INTO formaliq(estrnro,folisistema) VALUES(" & codEstr & ",0)"
    objConn.Execute StrSql, , adExecuteNoRecords

End Sub

Public Sub Complementos23(CodTer As Long, codEstr As Long, Valor As String)

Dim rs_pos As New ADODB.Recordset
Dim CodPlan As Long

      StrSql = "SELECT * FROM planos  where plnom = '" & Valor & "'"
      StrSql = StrSql & " AND  osocial = " & CodTer
       OpenRecordset StrSql, rs_pos
    If rs_pos.EOF Then
    ' Hay que ver la relacion entra la Osocial y el Plan
    
        StrSql = " INSERT INTO planos(plnom,osocial) VALUES('" & Valor & "'," & CodTer & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        CodPlan = getLastIdentity(objConn, "planos")
    Else
        CodPlan = rs_pos!plnro
    End If
    rs_pos.Close
         
    StrSql = "SELECT * FROM replica_estr  where origen = " & CodPlan
    StrSql = StrSql & " AND  estrnro = " & codEstr
    OpenRecordset StrSql, rs_pos
    If rs_pos.EOF Then
        StrSql = " INSERT INTO replica_estr(origen,estrnro) VALUES (" & CodPlan & "," & codEstr & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
    End If

End Sub

Public Sub Complementos28(CodTer As Long, codEstr As Long, Valor As String)

    StrSql = " INSERT INTO agencia(estrnro,ternro,agedes,ageest) VALUES(" & codEstr & "," & CodTer & ",'" & Valor & "'" & ",-1)"
    objConn.Execute StrSql, , adExecuteNoRecords

End Sub
Public Sub Complementos40(codEstr As Long, CodTer As Long, Valor As String)

    StrSql = " INSERT INTO seguro(ternro,estrnro,segdesc,segest) VALUES(" & codEstr & "," & CodTer & ",'" & Valor & "',-1)"
    objConn.Execute StrSql, , adExecuteNoRecords

End Sub

Public Sub Complementos41(codEstr As Long, CodTer As Long, Valor As String)

    StrSql = " INSERT INTO banco(ternro,estrnro,bansucdesc,banest) VALUES(" & codEstr & "," & CodTer & ",'" & Valor & "',-1)"
    objConn.Execute StrSql, , adExecuteNoRecords

End Sub

Public Sub CreaTercero(TipoTer As Long, Valor As String, ByRef CodTer)

Dim rs As New ADODB.Recordset
Dim rs_Ter As New ADODB.Recordset

Dim d_estructura As String
Dim l_pos1 As Long
Dim l_pos2 As Long

    
  d_estructura = Valor
    
  StrSql = " SELECT * FROM tercero "
  StrSql = StrSql & " INNER JOIN ter_tip ON tercero.ternro = ter_tip.ternro AND ter_tip.tipnro =" & TipoTer
  StrSql = StrSql & " WHERE terrazsoc = '" & Valor & "'"
  If rs_Ter.State = adStateOpen Then rs_Ter.Close
  OpenRecordset StrSql, rs_Ter
  If rs_Ter.EOF Then
    
      StrSql = " INSERT INTO tercero(terrazsoc,tersex)"
      StrSql = StrSql & " VALUES('" & Mid(d_estructura, 1, 60) & "',-1)"
      objConn.Execute StrSql, , adExecuteNoRecords
    
      CodTer = getLastIdentity(objConn, "tercero")
    
      StrSql = " INSERT INTO ter_tip(ternro,tipnro) "
      StrSql = StrSql & " VALUES(" & CodTer & "," & TipoTer & ")"
      objConn.Execute StrSql, , adExecuteNoRecords
    Else
        CodTer = rs_Ter!Ternro
    End If

    If rs_Ter.State = adStateOpen Then rs_Ter.Close
    Set rs_Ter = Nothing
End Sub

Public Sub GetTipoEstrucNro(ByVal estrdesc As String, ByRef tipoestrnro As Long)
    Dim Rs_Estr As New ADODB.Recordset
    
    StrSql = " SELECT tenro FROM tipoestructura"
    StrSql = StrSql & " WHERE upper(tedabr) = '" & UCase(Mid(estrdesc, 1, 25)) & "'"
    OpenRecordset StrSql, Rs_Estr
    If Not Rs_Estr.EOF Then
        tipoestrnro = Rs_Estr!Tenro
    Else
        tipoestrnro = 0
    End If
End Sub

Public Sub ValidaEstructuraCodExt(TipoEstr As Long, ByRef Valor As String, ByRef CodEst As Long, ByRef Inserto_estr As Boolean)

Dim Rs_Estr As New ADODB.Recordset

Dim d_estructura As String
Dim CodExt As String
Dim l_pos1 As Byte
Dim l_pos2 As Byte

On Error GoTo ValidaEExt

    d_estructura = Trim(Valor)
    StrSql = " SELECT estrnro FROM estructura WHERE upper(estructura.estrcodext) = '" & UCase(Mid(Valor, 1, 30)) & "'"
    StrSql = StrSql & " AND estructura.tenro = " & TipoEstr
    OpenRecordset StrSql, Rs_Estr
        
    If Not Rs_Estr.EOF Then
            CodEst = Rs_Estr!Estrnro
            Inserto_estr = False
    Else
    
            
            StrSql = " INSERT INTO estructura(tenro,estrdabr,empnro,estrest,estrcodext)"
            StrSql = StrSql & " VALUES(" & TipoEstr & ",'" & UCase(Mid(d_estructura, 1, 60)) & "',1,-1,'" & UCase(Mid(d_estructura, 1, 30)) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            CodEst = getLastIdentity(objConn, "estructura")

            Inserto_estr = True
    End If

Exit Sub

ValidaEExt:
    Texto = " Error (valida -cod ext) " & Err.Number & " - " & Err.Description
    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, "")
    ' MyRo l lbackTrans   O K = False

End Sub

Public Sub ValidaCategoria(TipoEstr As Long, ByRef Valor As String, nroConv As Long, ByRef CodEst As Long, ByRef Inserto_estr As Boolean)
Dim pos1 As Long
Dim pos2 As Long

Dim Rs_Estr As New ADODB.Recordset
Dim Rs_Conv As New ADODB.Recordset
Dim Rs_NroC As New ADODB.Recordset


Dim d_estructura As String
Dim l_pos1 As Byte
Dim l_pos2 As Byte
Dim CodExt As String

Dim nro_convenio As Long

    If InStr(1, Valor, "$") > 0 Then
        l_pos1 = InStr(1, Valor, "$")
        l_pos2 = Len(Valor)
    
        d_estructura = Trim(Mid(Valor, l_pos1 + 2, l_pos2))
        If l_pos1 <> 0 Then
            CodExt = Trim(Mid(Valor, 1, l_pos1 - 1))
        Else
            CodExt = ""
        End If
    Else
        d_estructura = Trim(Valor)
        CodExt = ""
    End If
    
    Valor = d_estructura
    
    If nroConv <> 0 Then
    
        StrSql = "SELECT * FROM convenios WHERE estrnro = " & nroConv
        OpenRecordset StrSql, Rs_NroC
    
        If Not Rs_NroC.EOF Then
        
            nro_convenio = Rs_NroC!convnro
            
        End If
        
    
    End If
    
    
            
    StrSql = " SELECT estrnro FROM estructura WHERE UPPER(estructura.estrdabr) = '" & UCase(Mid(d_estructura, 1, 60)) & "'"
    StrSql = StrSql & " AND estructura.tenro = " & TipoEstr
    OpenRecordset StrSql, Rs_Estr
        
    If Not Rs_Estr.EOF Then
                
          StrSql = " SELECT convnro FROM categoria WHERE categoria.estrnro = " & Rs_Estr!Estrnro
          OpenRecordset StrSql, Rs_Conv
                
          'If (Not Rs_Conv.EOF) And (nro_convenio = Rs_Conv!convnro) Then
          If Not Rs_Conv.EOF Then
            If (nro_convenio = Rs_Conv!convnro) Then
                CodEst = Rs_Estr!Estrnro
                Inserto_estr = False
            End If
                
          Else
          
           
            StrSql = " INSERT INTO estructura(tenro,estrdabr,empnro,estrest,estrcodext)"
            StrSql = StrSql & " VALUES(" & TipoEstr & ",'" & UCase(Mid(d_estructura, 1, 60)) & "',1,-1,'" & UCase(Mid(CodExt, 1, 30)) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            CodEst = getLastIdentity(objConn, "estructura")
            
            Inserto_estr = True
            
            If nro_convenio <> 0 Then
                StrSql = " INSERT INTO categoria(estrnro,convnro) VALUES(" & CodEst & "," & nro_convenio & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
            
          End If
                
            
    Else
            StrSql = " INSERT INTO estructura(tenro,estrdabr,empnro,estrest,estrcodext)"
            StrSql = StrSql & " VALUES(" & TipoEstr & ",'" & UCase(Mid(d_estructura, 1, 60)) & "',1,-1,'" & UCase(Mid(CodExt, 1, 30)) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            CodEst = getLastIdentity(objConn, "estructura")
            
            Inserto_estr = True
            
            If nro_convenio <> 0 Then
                StrSql = " INSERT INTO categoria(estrnro,convnro) VALUES(" & CodEst & "," & nro_convenio & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
    End If


End Sub


Public Sub ValidaCategoriaCodExt(TipoEstr As Long, ByRef Valor As String, nroConv As Long, ByRef CodEst As Long, ByRef Inserto_estr As Boolean)
Dim pos1 As Long
Dim pos2 As Long

Dim Rs_Estr As New ADODB.Recordset
Dim Rs_Conv As New ADODB.Recordset

Dim d_estructura As String
Dim l_pos1 As Byte
Dim l_pos2 As Byte
Dim CodExt As String

    If InStr(1, Valor, "$") > 0 Then
        l_pos1 = InStr(1, Valor, "$")
        l_pos2 = Len(Valor)
    
        d_estructura = Mid(Valor, l_pos1 + 2, l_pos2)
        If l_pos1 <> 0 Then
            CodExt = Mid(Valor, 1, l_pos1 - 1)
        Else
            CodExt = ""
        End If
    Else
        d_estructura = Valor
        CodExt = ""
    End If
    
    Valor = d_estructura
    
    
    StrSql = " SELECT estrnro FROM estructura WHERE UPPER(estructura.estrcodext) = '" & UCase(Mid(d_estructura, 1, 30)) & "'"
    StrSql = StrSql & " AND estructura.tenro = " & TipoEstr
    OpenRecordset StrSql, Rs_Estr
        
    If Not Rs_Estr.EOF Then
                
          StrSql = " SELECT convnro FROM categoria WHERE categoria.estrnro = " & Rs_Estr!Estrnro
          OpenRecordset StrSql, Rs_Conv
                
          If (Not Rs_Conv.EOF) And (nroConv = Rs_Conv!convnro) Then
            
            CodEst = Rs_Estr!Estrnro
            Inserto_estr = False
                
          Else
            
                       
            StrSql = " INSERT INTO estructura(tenro,estrdabr,empnro,estrest,estrcodext)"
            StrSql = StrSql & " VALUES(" & TipoEstr & ",'" & UCase(Mid(d_estructura, 1, 60)) & "',1,-1," & UCase(Mid(CodExt, 1, 30)) & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            CodEst = getLastIdentity(objConn, "estructura")
            
            Inserto_estr = True
            
            StrSql = " INSERT INTO categoria(estrnro,convnro) VALUES(" & CodEst & "," & nroConv & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            
          End If
                
            
    Else
            
            StrSql = " INSERT INTO estructura(tenro,estrdabr,empnro,estrest,estrcodext)"
            StrSql = StrSql & " VALUES(" & TipoEstr & ",'" & UCase(Mid(d_estructura, 1, 60)) & "',1,-1," & UCase(Mid(CodExt, 1, 30)) & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            CodEst = getLastIdentity(objConn, "estructura")
            
            Inserto_estr = True
            
            StrSql = " INSERT INTO categoria(estrnro,convnro) VALUES(" & CodEst & "," & nroConv & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
    End If


End Sub


Public Sub AsignarEstructura(TipoEstr As Long, CodEst As Long, CodTer As Long, FAlta As String, FBaja As String)
Dim rs As New ADODB.Recordset
Dim rs_his As New ADODB.Recordset

    If CodEst <> 0 Then
    
        If nro_ModOrg <> 0 Then
        
            StrSql = "SELECT * FROM adptte_estr WHERE tplatenro = " & nro_ModOrg & " AND tenro = " & TipoEstr
            OpenRecordset StrSql, rs
            
            If rs.EOF Then
            
                tplaorden = tplaorden + 1
                StrSql = "INSERT INTO adptte_estr(tplatenro,tenro,tplaestroblig,tplaestrorden) VALUES (" & nro_ModOrg & "," & TipoEstr & ",0," & tplaorden & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
            
            End If
    
        End If
    
        StrSql = "SELECT * FROM his_estructura "
        StrSql = StrSql & " WHERE estrnro =" & CodEst
        StrSql = StrSql & " AND tenro = " & TipoEstr
        StrSql = StrSql & " AND ternro = " & CodTer
        If rs_his.State = adStateOpen Then rs_his.Close
        OpenRecordset StrSql, rs_his
        If Not rs_his.EOF Then
            If Pisa Then
                If Not FBaja = "Null" Then
                    StrSql = " UPDATE his_estructura SET htetdesde = " & ConvFecha(FAlta)
                    StrSql = StrSql & ",htethasta = " & ConvFecha(FBaja)
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    StrSql = " UPDATE his_estructura SET htetdesde = " & ConvFecha(FAlta)
                    objConn.Execute StrSql, , adExecuteNoRecords
                End If
            End If
        Else
            If Not FBaja = "Null" Then
                StrSql = " INSERT INTO his_estructura(ternro,estrnro,tenro,htetdesde,htethasta) VALUES("
                StrSql = StrSql & CodTer & "," & CodEst & "," & TipoEstr & "," & FAlta & "," & FBaja & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
            Else
                StrSql = " INSERT INTO his_estructura(ternro,estrnro,tenro,htetdesde) VALUES("
                StrSql = StrSql & CodTer & "," & CodEst & "," & TipoEstr & "," & FAlta & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
        End If
    End If
    
    If rs_his.State = adStateOpen Then rs_his.Close
    Set rs_his = Nothing
End Sub

Public Sub AsignarEstructura_NEWNEW_OLD(TipoEstr As Long, CodEst As Long, CodTer As Long, FAlta As String, FBaja As String)
    ' ---------------------------------------------------------------------------------------------
' Descripcion: Procedimiento que inserta la estructura.
'              Si existe una estructura del mismo tipo en el intervalo la estructura será actualizada.
'              Modifica,elimina y crea Sit. Revista cuando hay Baja o Intersección con fecha anterior a salida de vacaciones
' Autor      : Gonzalez Nicolás
' Fecha      : 01/06/2011
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------

Dim rs As New ADODB.Recordset
Dim rs_his As New ADODB.Recordset

Dim F_Cierre_Temp As Date


On Error GoTo EstrNew


    F_Cierre_Temp = DateAdd("d", -1, CDate(Mid(FAlta, 2, Len(FAlta) - 2)))

    If CodEst <> 0 Then
        If nro_ModOrg <> 0 Then
            StrSql = "SELECT * FROM adptte_estr WHERE tplatenro = " & nro_ModOrg & " AND tenro = " & TipoEstr
            OpenRecordset StrSql, rs
            If rs.EOF Then
                tplaorden = tplaorden + 1
                StrSql = "INSERT INTO adptte_estr(tplatenro,tenro,tplaestroblig,tplaestrorden) VALUES (" & nro_ModOrg & "," & TipoEstr & ",0," & tplaorden & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
        End If
    
        StrSql = "SELECT * FROM his_estructura "
        'StrSql = StrSql & " WHERE estrnro =" & CodEst
        StrSql = StrSql & " WHERE tenro = " & TipoEstr
        StrSql = StrSql & " AND ternro = " & CodTer
        StrSql = StrSql & " AND (htetdesde <= " & FAlta & ") AND"
        StrSql = StrSql & " ((" & FAlta & " <= htethasta) or (htethasta is null))"
        StrSql = StrSql & " ORDER BY htetdesde "
        If rs_his.State = adStateOpen Then rs_his.Close
        OpenRecordset StrSql, rs_his
        If Not rs_his.EOF Then
            If Pisa Then
                If rs_his!Estrnro = CodEst Then
                    'If Not FBaja = "Null" Then
                        StrSql = " UPDATE his_estructura SET htetdesde = " & FAlta
                        StrSql = StrSql & ",htethasta = " & FBaja
                        StrSql = StrSql & " WHERE tenro = " & TipoEstr
                        StrSql = StrSql & " AND ternro = " & CodTer
                        StrSql = StrSql & " AND estrnro = " & rs_his!Estrnro
                        StrSql = StrSql & " AND htetdesde = " & ConvFecha(rs_his!htetdesde)
                        objConn.Execute StrSql, , adExecuteNoRecords
                    'Else
                    '    StrSql = " UPDATE his_estructura SET htetdesde = " & FAlta
                    '    objConn.Execute StrSql, , adExecuteNoRecords
                    'End If
                    
                    Texto = " Pisa -- Actualizo el Tipo de Estructura " & TipoEstr & " para el tercero: " & CodTer
                    Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, "")
    
                Else
                    'If Not FBaja = "Null" Then
                        StrSql = " UPDATE his_estructura SET "
                        StrSql = StrSql & " estrnro = " & CodEst
                        StrSql = StrSql & ",htetdesde = " & FAlta
                        'StrSql = StrSql & ",htethasta = " & FBaja
                        StrSql = StrSql & " WHERE tenro = " & TipoEstr
                        StrSql = StrSql & " AND ternro = " & CodTer
                        StrSql = StrSql & " AND estrnro = " & rs_his!Estrnro
                        StrSql = StrSql & " AND htetdesde = " & ConvFecha(rs_his!htetdesde)
                        objConn.Execute StrSql, , adExecuteNoRecords
                    'Else
                    '    StrSql = " UPDATE his_estructura SET htetdesde = " & FAlta
                    '    StrSql = StrSql & ",estrnro = " & CodEst
                    '    objConn.Execute StrSql, , adExecuteNoRecords
                    'End If
                    
                    Texto = " Pisa - Actualizo el Tipo de Estructura " & TipoEstr & " para el tercero: " & CodTer
                    Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, "")
    
                End If
            Else ' no Pisa
                'FGZ - 23/07/2010 -  se agregó este control
                If rs_his!Estrnro = CodEst Then
                    If Not UCase(FBaja) = "NULL" Then
                        StrSql = " UPDATE his_estructura SET "
                        StrSql = StrSql & "htethasta = " & FBaja
                        StrSql = StrSql & " WHERE tenro = " & TipoEstr
                        StrSql = StrSql & " AND ternro = " & CodTer
                        StrSql = StrSql & " AND estrnro = " & rs_his!Estrnro
                        StrSql = StrSql & " AND htetdesde = " & ConvFecha(rs_his!htetdesde)
                        objConn.Execute StrSql, , adExecuteNoRecords
                        
                        Texto = " Actualizo el Tipo de Estructura " & TipoEstr & " para el tercero: " & CodTer
                        Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, "")
                    Else
                        'Nada
                        Texto = " Nada para TE " & TipoEstr & " para el tercero: " & CodTer
                        Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, "")

                    End If
                Else
                    
                    If EsNulo(rs_his!htethasta) Then
                        
                        If (FAlta) = ConvFecha(rs_his!htetdesde) Then
                            ' si la fecha es = Reeemplazar la estructura anterior (pedido x Teletech)
                            
                            StrSql = " UPDATE his_estructura SET "
                            StrSql = StrSql & " estrnro = " & CodEst & ", "
                            StrSql = StrSql & " htethasta = " & FBaja
                            StrSql = StrSql & " WHERE tenro = " & TipoEstr
                            StrSql = StrSql & " AND ternro = " & CodTer
                            StrSql = StrSql & " AND estrnro = " & rs_his!Estrnro
                            StrSql = StrSql & " AND htetdesde = " & ConvFecha(rs_his!htetdesde)
                            objConn.Execute StrSql, , adExecuteNoRecords
                            
                            Texto = " Actualizo el Tipo de Estructura " & TipoEstr & " para el tercero: " & CodTer
                            Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, "")
       
       
                        Else
                        
                            StrSql = " UPDATE his_estructura SET "
                            StrSql = StrSql & "htethasta = " & ConvFecha(F_Cierre_Temp)
                            StrSql = StrSql & " WHERE tenro = " & TipoEstr
                            StrSql = StrSql & " AND ternro = " & CodTer
                            StrSql = StrSql & " AND estrnro = " & rs_his!Estrnro
                            StrSql = StrSql & " AND htetdesde = " & ConvFecha(rs_his!htetdesde)
                            objConn.Execute StrSql, , adExecuteNoRecords
                        
                    
                            'FGZ - 23/07/2010 - se cambió esta parte
                            If UCase(FBaja) = "NULL" Then
                                StrSql = " INSERT INTO his_estructura(ternro,estrnro,tenro,htetdesde) VALUES("
                                StrSql = StrSql & CodTer & "," & CodEst & "," & TipoEstr & "," & FAlta & ")"
                                objConn.Execute StrSql, , adExecuteNoRecords
                            Else
                                StrSql = " INSERT INTO his_estructura(ternro,estrnro,tenro,htetdesde,htethasta) VALUES("
                                StrSql = StrSql & CodTer & "," & CodEst & "," & TipoEstr & "," & FAlta & "," & FBaja & ")"
                                objConn.Execute StrSql, , adExecuteNoRecords
                            End If
                        
                            Texto = " Inserto el Tipo de Estructura " & TipoEstr & " para el tercero: " & CodTer
                            Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs, "")
                            
                        End If
                        
                    Else
                    '=============================================================================================================
                    'MODIFICA, ELIMINA Y CREA SIT.REVISTA CUANDO HAY BAJA O INTERSECCION CON FECHA ANTERIOR A SALIDA DE VACACIONES
                    '=============================================================================================================
                        
                        '___________________________________________________________________
                        'ACTUALIZA LA ESTRUCTURA ACTUAL A LA FECHA DE cierre_temp
                            StrSql = " UPDATE his_estructura SET "
                            StrSql = StrSql & "htethasta = " & ConvFecha(F_Cierre_Temp)
                            StrSql = StrSql & " WHERE tenro = " & TipoEstr
                            StrSql = StrSql & " AND ternro = " & CodTer
                            StrSql = StrSql & " AND estrnro = " & rs_his!Estrnro
                            StrSql = StrSql & " AND htetdesde = " & ConvFecha(rs_his!htetdesde)
                            objConn.Execute StrSql, , adExecuteNoRecords
                                                
                        '___________________________________________________________________
                        'ELIMINA LAS SITUACIONES DE REVISTA POSTERIORES A LA FECHA DE BAJA
                            StrSql = "DELETE FROM his_estructura WHERE tenro =  " & TipoEstr & " AND ternro = " & CodTer
                            StrSql = StrSql & " AND (htetdesde > " & ConvFecha(F_Cierre_Temp) & ")"
                            StrSql = StrSql & " AND((" & ConvFecha(F_Cierre_Temp) & " < htethasta) or (htethasta is null))"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        
                        '___________________________________________________________________
                        'INSERTA NUEVA SITUACION DE REVISTA
                            If UCase(FBaja) = "NULL" Then
                                StrSql = " INSERT INTO his_estructura(ternro,estrnro,tenro,htetdesde) VALUES("
                                StrSql = StrSql & CodTer & "," & CodEst & "," & TipoEstr & "," & FAlta & ")"
                                objConn.Execute StrSql, , adExecuteNoRecords
                            Else
                                StrSql = " INSERT INTO his_estructura(ternro,estrnro,tenro,htetdesde,htethasta) VALUES("
                                StrSql = StrSql & CodTer & "," & CodEst & "," & TipoEstr & "," & FAlta & "," & FBaja & ")"
                                objConn.Execute StrSql, , adExecuteNoRecords
                            End If
                       
                        
                        'Texto = ": " & "Ya existe una estructura de tipo " & TipoEstr
                        'Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs, "")
                    End If
                End If
                'Texto = ": " & "Ya existe una estructura de tipo " & TipoEstr
                'Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs, "")
            End If
        Else
'            'If Not FBaja = "Null" Then
'            '    StrSql = " INSERT INTO his_estructura(ternro,estrnro,tenro,htetdesde,htethasta) VALUES("
'            '    StrSql = StrSql & CodTer & "," & CodEst & "," & TipoEstr & "," & FAlta & "," & FBaja & ")"
'            '    objConn.Execute StrSql, , adExecuteNoRecords
'            'Else
'                StrSql = " INSERT INTO his_estructura(ternro,estrnro,tenro,htetdesde) VALUES("
'                StrSql = StrSql & CodTer & "," & CodEst & "," & TipoEstr & "," & FAlta & ")"
'                objConn.Execute StrSql, , adExecuteNoRecords
'            'End If
            
            
            
            ' ver si la Fecha de Alta es menor que la fecha desde del Tipo de Estructura.
            StrSql = "SELECT * FROM his_estructura "
            StrSql = StrSql & " WHERE tenro=" & TipoEstr
            StrSql = StrSql & "   AND ternro=" & CodTer
            StrSql = StrSql & "   AND htetdesde > " & FAlta
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            
            If Not rs.EOF Then
                
                Texto = " - Ya existe una estructura de tipo " & TipoEstr & " con Fecha de inicio mayor a la Fecha de Alta. "
                Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs, "")
            
            Else
            
                'FGZ - 23/07/2010 - se cambió esta parte
                If UCase(FBaja) = "NULL" Then
                    StrSql = " INSERT INTO his_estructura(ternro,estrnro,tenro,htetdesde) VALUES("
                    StrSql = StrSql & CodTer & "," & CodEst & "," & TipoEstr & "," & FAlta & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    StrSql = " INSERT INTO his_estructura(ternro,estrnro,tenro,htetdesde,htethasta) VALUES("
                    StrSql = StrSql & CodTer & "," & CodEst & "," & TipoEstr & "," & FAlta & "," & FBaja & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                End If
                                    
                Texto = " Inserto el Tipo de Estructura " & TipoEstr & " para el tercero: " & CodTer
                Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, "")
        
            End If
            rs.Close
            
            
        End If
        
    
    Else ' de CodEst <> 0
    
        'Texto = " Al cargar el tipo de Estructura " & TipoEstr & " - CodEst = 0 "
        'Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs, "")
    
    End If
    
    If rs_his.State = adStateOpen Then rs_his.Close
    Set rs_his = Nothing
    
Exit Sub

EstrNew:
    Texto = " Error (Estr New) " & Err.Number & " - " & Err.Description & " -- Ultima consulta: " & StrSql
    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, "")
     
     ' cartel de 630 - My Roll ba ckTrans -  'OK = False
End Sub
Public Sub AsignarEstructura_SitRev(TipoEstr As Long, CodEst As Long, CodTer As Long, FAlta As String, FBaja As String)
    ' ---------------------------------------------------------------------------------------------
' Descripcion: Procedimiento que inserta la estructura.
'              Si existe una estructura del mismo tipo en el intervalo la estructura será actualizada.
'              Modifica,elimina y crea Sit. Revista cuando hay Baja o Intersección con fecha anterior a salida de vacaciones
' Autor      : Gonzalez Nicolás
' Fecha      : 01/06/2011
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------

Dim rs As New ADODB.Recordset
Dim rs_his As New ADODB.Recordset

Dim F_Cierre_Temp As Date


On Error GoTo EstrNew


    F_Cierre_Temp = DateAdd("d", -1, CDate(Mid(FAlta, 2, Len(FAlta) - 2)))

    If CodEst <> 0 Then
        StrSql = "SELECT * FROM his_estructura "
        'StrSql = StrSql & " WHERE estrnro =" & CodEst
        StrSql = StrSql & " WHERE tenro = " & TipoEstr
        StrSql = StrSql & " AND ternro = " & CodTer
        StrSql = StrSql & " AND (htetdesde <= " & FAlta & ") AND"
        StrSql = StrSql & " ((" & FAlta & " <= htethasta) or (htethasta is null))"
        StrSql = StrSql & " ORDER BY htetdesde "
        If rs_his.State = adStateOpen Then rs_his.Close
        OpenRecordset StrSql, rs_his
        If Not rs_his.EOF Then
            '=============================================================================================================
            'MODIFICA, ELIMINA Y CREA SIT.REVISTA CUANDO HAY BAJA O INTERSECCION CON FECHA ANTERIOR A SALIDA DE VACACIONES
            '=============================================================================================================
   
            '___________________________________________________________________
            'ACTUALIZA LA ESTRUCTURA ACTUAL A LA FECHA DE cierre_temp
                StrSql = " UPDATE his_estructura SET "
                StrSql = StrSql & "htethasta = " & ConvFecha(F_Cierre_Temp)
                StrSql = StrSql & " WHERE tenro = " & TipoEstr
                StrSql = StrSql & " AND ternro = " & CodTer
                StrSql = StrSql & " AND estrnro = " & rs_his!Estrnro
                StrSql = StrSql & " AND htetdesde = " & ConvFecha(rs_his!htetdesde)
                objConn.Execute StrSql, , adExecuteNoRecords
            '___________________________________________________________________
            'ELIMINA LAS SITUACIONES DE REVISTA POSTERIORES A LA FECHA DE BAJA
                StrSql = "DELETE FROM his_estructura WHERE tenro =  " & TipoEstr & " AND ternro = " & CodTer
                StrSql = StrSql & " AND (htetdesde > " & ConvFecha(F_Cierre_Temp) & ")"
                StrSql = StrSql & " AND((" & ConvFecha(F_Cierre_Temp) & " < htethasta) or (htethasta is null))"
                objConn.Execute StrSql, , adExecuteNoRecords
            '___________________________________________________________________
            'INSERTA NUEVA SITUACION DE REVISTA
                If UCase(FBaja) = "NULL" Then
                    StrSql = " INSERT INTO his_estructura(ternro,estrnro,tenro,htetdesde) VALUES("
                    StrSql = StrSql & CodTer & "," & CodEst & "," & TipoEstr & "," & FAlta & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    StrSql = " INSERT INTO his_estructura(ternro,estrnro,tenro,htetdesde,htethasta) VALUES("
                    StrSql = StrSql & CodTer & "," & CodEst & "," & TipoEstr & "," & FAlta & "," & FBaja & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                End If

        End If
   
    Else ' de CodEst <> 0
    
        Texto = " Al cargar el tipo de Estructura " & TipoEstr & " - CodEst = 0 "
        Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs, "")
    
    End If
    
    If rs_his.State = adStateOpen Then rs_his.Close
    Set rs_his = Nothing
    
Exit Sub

EstrNew:
    Texto = " Error (Estr New) " & Err.Number & " - " & Err.Description & " -- Ultima consulta: " & StrSql
    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, "")
 
End Sub

Public Sub AsignarEstructura_SitRev2(TipoEstr As Long, CodEst As Long, CodTer As Long, FAlta As String, FBaja As String)
    ' ---------------------------------------------------------------------------------------------
' Descripcion: Procedimiento que inserta la estructura.
'              Si existe una estructura del mismo tipo anterior ==> la estructura NO será actualizada.
' Autor      : FGZ
' Fecha      : 18/08/2011
' Ultima Mod.: 15/05/2012 - Zamarbide Juan - Se agregó el Else en el caso de que un empleado le den Alta, ingresa la situación de Revista Inicial.
' Descripcion:
' ---------------------------------------------------------------------------------------------

Dim rs As New ADODB.Recordset
Dim rs_his As New ADODB.Recordset

Dim F_Cierre_Temp As Date


On Error GoTo EstrNew


    F_Cierre_Temp = DateAdd("d", -1, CDate(Mid(FAlta, 2, Len(FAlta) - 2)))

    If CodEst <> 0 Then
        StrSql = "SELECT * FROM his_estructura "
        'StrSql = StrSql & " WHERE estrnro =" & CodEst
        StrSql = StrSql & " WHERE tenro = " & TipoEstr
        StrSql = StrSql & " AND ternro = " & CodTer
        StrSql = StrSql & " AND (htetdesde <= " & FAlta & ") AND"
        StrSql = StrSql & " ((" & FAlta & " <= htethasta) or (htethasta is null))"
        StrSql = StrSql & " ORDER BY htetdesde "
        If rs_his.State = adStateOpen Then rs_his.Close
        OpenRecordset StrSql, rs_his
        If Not rs_his.EOF Then
            If rs_his!Estrnro = CodEst Then
                'No hago nada
            Else
                 '=============================================================================================================
                 'MODIFICA, ELIMINA Y CREA SIT.REVISTA CUANDO HAY BAJA O INTERSECCION CON FECHA ANTERIOR A SALIDA DE VACACIONES
                 '=============================================================================================================
        
                 '___________________________________________________________________
                 'ACTUALIZA LA ESTRUCTURA ACTUAL A LA FECHA DE cierre_temp
                     StrSql = " UPDATE his_estructura SET "
                     StrSql = StrSql & "htethasta = " & ConvFecha(F_Cierre_Temp)
                     StrSql = StrSql & " WHERE tenro = " & TipoEstr
                     StrSql = StrSql & " AND ternro = " & CodTer
                     StrSql = StrSql & " AND estrnro = " & rs_his!Estrnro
                     StrSql = StrSql & " AND htetdesde = " & ConvFecha(rs_his!htetdesde)
                     objConn.Execute StrSql, , adExecuteNoRecords
                 '___________________________________________________________________
                 'ELIMINA LAS SITUACIONES DE REVISTA POSTERIORES A LA FECHA DE BAJA
                     StrSql = "DELETE FROM his_estructura WHERE tenro =  " & TipoEstr & " AND ternro = " & CodTer
                     StrSql = StrSql & " AND (htetdesde > " & ConvFecha(F_Cierre_Temp) & ")"
                     StrSql = StrSql & " AND((" & ConvFecha(F_Cierre_Temp) & " < htethasta) or (htethasta is null))"
                     objConn.Execute StrSql, , adExecuteNoRecords
                 '___________________________________________________________________
                 'INSERTA NUEVA SITUACION DE REVISTA
                     If UCase(FBaja) = "NULL" Then
                         StrSql = " INSERT INTO his_estructura(ternro,estrnro,tenro,htetdesde) VALUES("
                         StrSql = StrSql & CodTer & "," & CodEst & "," & TipoEstr & "," & FAlta & ")"
                         objConn.Execute StrSql, , adExecuteNoRecords
                     Else
                         StrSql = " INSERT INTO his_estructura(ternro,estrnro,tenro,htetdesde,htethasta) VALUES("
                         StrSql = StrSql & CodTer & "," & CodEst & "," & TipoEstr & "," & FAlta & "," & FBaja & ")"
                         objConn.Execute StrSql, , adExecuteNoRecords
                     End If
            End If
        Else 'JAZ 15-05-12
            StrSql = " INSERT INTO his_estructura(ternro,estrnro,tenro,htetdesde) VALUES("
            StrSql = StrSql & CodTer & "," & CodEst & "," & TipoEstr & "," & FAlta & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
    Else ' de CodEst <> 0
        Texto = " Al cargar el tipo de Estructura " & TipoEstr & " - CodEst = 0 "
        Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs, "")
    End If
    
    If rs_his.State = adStateOpen Then rs_his.Close
    Set rs_his = Nothing
    
Exit Sub

EstrNew:
    Texto = " Error (Estr New) " & Err.Number & " - " & Err.Description & " -- Ultima consulta: " & StrSql
    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, "")
 
End Sub



Public Sub AsignarEstructura_NEW(TipoEstr As Long, CodEst As Long, CodTer As Long, FAlta As String, FBaja As String)
    ' ---------------------------------------------------------------------------------------------
' Descripcion: Procedimiento que inserta la estructura. si existe una estructura del mismo tipo en el intervalo
'               la estructura será actualizada.
' Autor      : FGZ
' Fecha      : 22/04/2005
' Ultima Mod.:
' Descripcion: 12-11-2010 - Leti A. - (si no pisa)  si el tipo estructura tiene la misma fecha desde, se reemplaza - si es menor da mensaje de error,
'            : 13/02/2012 - Gonzalez Nicolás - Se agregó Multilenguaje
' ---------------------------------------------------------------------------------------------

Dim rs As New ADODB.Recordset
Dim rs_his As New ADODB.Recordset

Dim F_Cierre_Temp As Date


On Error GoTo EstrNew


    F_Cierre_Temp = DateAdd("d", -1, CDate(Mid(FAlta, 2, Len(FAlta) - 2)))

    If CodEst <> 0 Then
        If nro_ModOrg <> 0 Then
            StrSql = "SELECT * FROM adptte_estr WHERE tplatenro = " & nro_ModOrg & " AND tenro = " & TipoEstr
            OpenRecordset StrSql, rs
            If rs.EOF Then
                tplaorden = tplaorden + 1
                StrSql = "INSERT INTO adptte_estr(tplatenro,tenro,tplaestroblig,tplaestrorden) VALUES (" & nro_ModOrg & "," & TipoEstr & ",0," & tplaorden & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
        End If
    
        StrSql = "SELECT * FROM his_estructura "
        'StrSql = StrSql & " WHERE estrnro =" & CodEst
        StrSql = StrSql & " WHERE tenro = " & TipoEstr
        StrSql = StrSql & " AND ternro = " & CodTer
        StrSql = StrSql & " AND (htetdesde <= " & FAlta & ") AND"
        StrSql = StrSql & " ((" & FAlta & " <= htethasta) or (htethasta is null))"
        StrSql = StrSql & " ORDER BY htetdesde "
        If rs_his.State = adStateOpen Then rs_his.Close
        OpenRecordset StrSql, rs_his
        If Not rs_his.EOF Then
            If Pisa Then
                If rs_his!Estrnro = CodEst Then
                    'If Not FBaja = "Null" Then
                        StrSql = " UPDATE his_estructura SET htetdesde = " & FAlta
                        StrSql = StrSql & ",htethasta = " & FBaja
                        StrSql = StrSql & " WHERE tenro = " & TipoEstr
                        StrSql = StrSql & " AND ternro = " & CodTer
                        StrSql = StrSql & " AND estrnro = " & rs_his!Estrnro
                        StrSql = StrSql & " AND htetdesde = " & ConvFecha(rs_his!htetdesde)
                        objConn.Execute StrSql, , adExecuteNoRecords
                    'Else
                    '    StrSql = " UPDATE his_estructura SET htetdesde = " & FAlta
                    '    objConn.Execute StrSql, , adExecuteNoRecords
                    'End If
                    
                    'Texto = " " & EscribeLogMI("Pisa") & " -- " & EscribeLogMI("Actualizo el Tipo de Estructura") & " " & TipoEstr & " para el tercero: " & CodTer
                    Texto = " " & EscribeLogMI("Pisa") & " -- "
                    Texto = Texto & Replace(EscribeLogMI("Actualizo Tipo de Estructura @@TXT@@ p/ el tercero: @@NUM@@"), "@@TXT@@", TipoEstr)
                    Texto = Replace(Texto, "@@NUM@@", CodTer)
                    Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, "")
    
                Else
                    'If Not FBaja = "Null" Then
                        StrSql = " UPDATE his_estructura SET "
                        StrSql = StrSql & " estrnro = " & CodEst
                        StrSql = StrSql & ",htetdesde = " & FAlta
                        'StrSql = StrSql & ",htethasta = " & FBaja
                        StrSql = StrSql & " WHERE tenro = " & TipoEstr
                        StrSql = StrSql & " AND ternro = " & CodTer
                        StrSql = StrSql & " AND estrnro = " & rs_his!Estrnro
                        StrSql = StrSql & " AND htetdesde = " & ConvFecha(rs_his!htetdesde)
                        objConn.Execute StrSql, , adExecuteNoRecords
                    'Else
                    '    StrSql = " UPDATE his_estructura SET htetdesde = " & FAlta
                    '    StrSql = StrSql & ",estrnro = " & CodEst
                    '    objConn.Execute StrSql, , adExecuteNoRecords
                    'End If
                    
                    'Texto = " Pisa - Actualizo el Tipo de Estructura " & TipoEstr & " para el tercero: " & CodTer
                    Texto = " " & EscribeLogMI("Pisa") & " -- "
                    Texto = Texto & Replace(EscribeLogMI("Actualizo Tipo de Estructura @@TXT@@ p/ el tercero: @@NUM@@"), "@@TXT@@", TipoEstr)
                    Texto = Replace(Texto, "@@NUM@@", CodTer)
                    Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, "")
    
                End If
            Else ' no Pisa
                'FGZ - 23/07/2010 -  se agregó este control
                If rs_his!Estrnro = CodEst Then
                    If Not UCase(FBaja) = "NULL" Then
                        StrSql = " UPDATE his_estructura SET "
                        StrSql = StrSql & "htethasta = " & FBaja
                        StrSql = StrSql & " WHERE tenro = " & TipoEstr
                        StrSql = StrSql & " AND ternro = " & CodTer
                        StrSql = StrSql & " AND estrnro = " & rs_his!Estrnro
                        StrSql = StrSql & " AND htetdesde = " & ConvFecha(rs_his!htetdesde)
                        objConn.Execute StrSql, , adExecuteNoRecords
                        
                        'Texto = " Actualizo el Tipo de Estructura " & TipoEstr & " para el tercero: " & CodTer
                        Texto = Replace(EscribeLogMI("Actualizo Tipo de Estructura @@TXT@@ p/ el tercero: @@NUM@@"), "@@TXT@@", TipoEstr)
                        Texto = Replace(Texto, "@@NUM@@", CodTer)
                        Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, "")
                    Else
                        'Nada
                        'Texto = " Nada para TE " & TipoEstr & " para el tercero: " & CodTer
                        Texto = Replace(EscribeLogMI("Nada para TE @@TXT@@ para el tercero: @@NUM@@"), "@@TXT@@", TipoEstr)
                        Texto = Replace(Texto, "@@NUM@@", CodTer)
                        Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, "")

                    End If
                Else
                    
                    If EsNulo(rs_his!htethasta) Then
                        
                        If (FAlta) = ConvFecha(rs_his!htetdesde) Then
                            ' si la fecha es = Reeemplazar la estructura anterior (pedido x Teletech)
                            
                            StrSql = " UPDATE his_estructura SET "
                            StrSql = StrSql & " estrnro = " & CodEst & ", "
                            StrSql = StrSql & " htethasta = " & FBaja
                            StrSql = StrSql & " WHERE tenro = " & TipoEstr
                            StrSql = StrSql & " AND ternro = " & CodTer
                            StrSql = StrSql & " AND estrnro = " & rs_his!Estrnro
                            StrSql = StrSql & " AND htetdesde = " & ConvFecha(rs_his!htetdesde)
                            objConn.Execute StrSql, , adExecuteNoRecords
                            
                            'Texto = " Actualizo el Tipo de Estructura " & TipoEstr & " para el tercero: " & CodTer
                            Texto = Replace(EscribeLogMI("Actualizo Tipo de Estructura @@TXT@@ p/ el tercero: @@NUM@@"), "@@TXT@@", TipoEstr)
                            Texto = Replace(Texto, "@@NUM@@", CodTer)
                            Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, "")
       
       
                        Else
                        
                            StrSql = " UPDATE his_estructura SET "
                            StrSql = StrSql & "htethasta = " & ConvFecha(F_Cierre_Temp)
                            StrSql = StrSql & " WHERE tenro = " & TipoEstr
                            StrSql = StrSql & " AND ternro = " & CodTer
                            StrSql = StrSql & " AND estrnro = " & rs_his!Estrnro
                            StrSql = StrSql & " AND htetdesde = " & ConvFecha(rs_his!htetdesde)
                            objConn.Execute StrSql, , adExecuteNoRecords
                        
                    
                            'FGZ - 23/07/2010 - se cambió esta parte
                            If UCase(FBaja) = "NULL" Then
                                StrSql = " INSERT INTO his_estructura(ternro,estrnro,tenro,htetdesde) VALUES("
                                StrSql = StrSql & CodTer & "," & CodEst & "," & TipoEstr & "," & FAlta & ")"
                                objConn.Execute StrSql, , adExecuteNoRecords
                            Else
                                StrSql = " INSERT INTO his_estructura(ternro,estrnro,tenro,htetdesde,htethasta) VALUES("
                                StrSql = StrSql & CodTer & "," & CodEst & "," & TipoEstr & "," & FAlta & "," & FBaja & ")"
                                objConn.Execute StrSql, , adExecuteNoRecords
                            End If
                        
                            'Texto = " Inserto el Tipo de Estructura " & TipoEstr & " para el tercero: " & CodTer
                            Texto = Replace(EscribeLogMI("Inserto el Tipo de Estructura @@TXT@@ para el tercero: @@NUM@@"), "@@TXT@@", TipoEstr)
                            Texto = Replace(Texto, "@@NUM@@", CodTer)
                            Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs, "")
                            
                        End If
                        
                    Else
                        'Texto = ": " & "Ya existe una estructura de tipo " & TipoEstr
                        Texto = ": " & Replace(EscribeLogMI("Ya existe una estructura de tipo @@TXT@@"), "@@TXT@@", TipoEstr)
                        Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs, "")
                    End If
                End If
                'Texto = ": " & "Ya existe una estructura de tipo " & TipoEstr
                'Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs, "")
            End If
        Else
'            'If Not FBaja = "Null" Then
'            '    StrSql = " INSERT INTO his_estructura(ternro,estrnro,tenro,htetdesde,htethasta) VALUES("
'            '    StrSql = StrSql & CodTer & "," & CodEst & "," & TipoEstr & "," & FAlta & "," & FBaja & ")"
'            '    objConn.Execute StrSql, , adExecuteNoRecords
'            'Else
'                StrSql = " INSERT INTO his_estructura(ternro,estrnro,tenro,htetdesde) VALUES("
'                StrSql = StrSql & CodTer & "," & CodEst & "," & TipoEstr & "," & FAlta & ")"
'                objConn.Execute StrSql, , adExecuteNoRecords
'            'End If
            
            
            
            ' ver si la Fecha de Alta es menor que la fecha desde del Tipo de Estructura.
            StrSql = "SELECT * FROM his_estructura "
            StrSql = StrSql & " WHERE tenro=" & TipoEstr
            StrSql = StrSql & "   AND ternro=" & CodTer
            StrSql = StrSql & "   AND htetdesde > " & FAlta
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            
            If Not rs.EOF Then
                
                'Texto = " - Ya existe una estructura de tipo " & TipoEstr & " con Fecha de inicio mayor a la Fecha de Alta. "
                Texto = " - " & Replace(EscribeLogMI("Ya existe una estructura de tipo @@TXT@@ con Fecha de inicio mayor a la Fecha de Alta."), "@@TXT@@", TipoEstr)
                Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs, "")
            
            Else
            
                'FGZ - 23/07/2010 - se cambió esta parte
                If UCase(FBaja) = "NULL" Then
                    StrSql = " INSERT INTO his_estructura(ternro,estrnro,tenro,htetdesde) VALUES("
                    StrSql = StrSql & CodTer & "," & CodEst & "," & TipoEstr & "," & FAlta & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    StrSql = " INSERT INTO his_estructura(ternro,estrnro,tenro,htetdesde,htethasta) VALUES("
                    StrSql = StrSql & CodTer & "," & CodEst & "," & TipoEstr & "," & FAlta & "," & FBaja & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                End If
                                    
                'Texto = " Inserto el Tipo de Estructura " & TipoEstr & " para el tercero: " & CodTer
                Texto = Replace(EscribeLogMI("Inserto el Tipo de Estructura @@TXT@@ para el tercero: @@NUM@@"), "@@TXT@@", TipoEstr)
                Texto = Replace(Texto, "@@NUM@@", CodTer)
                Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, "")
        
            End If
            rs.Close
            
            
        End If
        
    
    Else ' de CodEst <> 0
    
        'Texto = " Al cargar el tipo de Estructura " & TipoEstr & " - CodEst = 0 "
        'Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs, "")
    
    End If
    
    If rs_his.State = adStateOpen Then rs_his.Close
    Set rs_his = Nothing
    
Exit Sub

EstrNew:
    'Texto = " Error (Estr New) " & Err.Number & " - " & Err.Description & " -- Ultima consulta: " & StrSql
    Texto = EscribeLogMI("Error") & " (Estr New) " & Err.Number & " - " & Err.Description & " -- " & EscribeLogMI("Ultima consulta") & ": " & StrSql
    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, "")
     
     ' cartel de 630 - My Roll ba ckTrans -  'OK = False
End Sub

Public Sub AsignarEstructura_NEWHIS(TipoEstr As Long, CodEst As Long, CodTer As Long, FAlta As String, FBaja As String)
    ' ---------------------------------------------------------------------------------------------
' Descripcion: Procedimiento que inserta la estructura. si existe una estructura del mismo tipo en el intervalo
'               la estructura será actualizada.
' Autor      : FGZ
' Fecha      : 22/04/2005
' Ultima Mod.:
' Descripcion: 17-05-2011 - FGZ. - Si el registro es menor al actual lo inserta igual
' ---------------------------------------------------------------------------------------------

Dim rs As New ADODB.Recordset
Dim rs_his As New ADODB.Recordset

Dim F_Cierre_Temp As Date


On Error GoTo EstrNew


    F_Cierre_Temp = DateAdd("d", -1, CDate(Mid(FAlta, 2, Len(FAlta) - 2)))

    If CodEst <> 0 Then
        If nro_ModOrg <> 0 Then
            StrSql = "SELECT * FROM adptte_estr WHERE tplatenro = " & nro_ModOrg & " AND tenro = " & TipoEstr
            OpenRecordset StrSql, rs
            If rs.EOF Then
                tplaorden = tplaorden + 1
                StrSql = "INSERT INTO adptte_estr(tplatenro,tenro,tplaestroblig,tplaestrorden) VALUES (" & nro_ModOrg & "," & TipoEstr & ",0," & tplaorden & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
        End If
    
        StrSql = "SELECT * FROM his_estructura "
        'StrSql = StrSql & " WHERE estrnro =" & CodEst
        StrSql = StrSql & " WHERE tenro = " & TipoEstr
        StrSql = StrSql & " AND ternro = " & CodTer
        StrSql = StrSql & " AND (htetdesde <= " & FAlta & ") AND"
        StrSql = StrSql & " ((" & FAlta & " <= htethasta) or (htethasta is null))"
        StrSql = StrSql & " ORDER BY htetdesde "
        If rs_his.State = adStateOpen Then rs_his.Close
        OpenRecordset StrSql, rs_his
        If Not rs_his.EOF Then
            If Pisa Then
                If rs_his!Estrnro = CodEst Then
                    'If Not FBaja = "Null" Then
                        StrSql = " UPDATE his_estructura SET htetdesde = " & FAlta
                        StrSql = StrSql & ",htethasta = " & FBaja
                        StrSql = StrSql & " WHERE tenro = " & TipoEstr
                        StrSql = StrSql & " AND ternro = " & CodTer
                        StrSql = StrSql & " AND estrnro = " & rs_his!Estrnro
                        StrSql = StrSql & " AND htetdesde = " & ConvFecha(rs_his!htetdesde)
                        objConn.Execute StrSql, , adExecuteNoRecords
                    'Else
                    '    StrSql = " UPDATE his_estructura SET htetdesde = " & FAlta
                    '    objConn.Execute StrSql, , adExecuteNoRecords
                    'End If
                    
                    Texto = " Pisa -- Actualizo el Tipo de Estructura " & TipoEstr & " para el tercero: " & CodTer
                    Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, "")
    
                Else
                    'If Not FBaja = "Null" Then
                        StrSql = " UPDATE his_estructura SET "
                        StrSql = StrSql & " estrnro = " & CodEst
                        StrSql = StrSql & ",htetdesde = " & FAlta
                        'StrSql = StrSql & ",htethasta = " & FBaja
                        StrSql = StrSql & " WHERE tenro = " & TipoEstr
                        StrSql = StrSql & " AND ternro = " & CodTer
                        StrSql = StrSql & " AND estrnro = " & rs_his!Estrnro
                        StrSql = StrSql & " AND htetdesde = " & ConvFecha(rs_his!htetdesde)
                        objConn.Execute StrSql, , adExecuteNoRecords
                    'Else
                    '    StrSql = " UPDATE his_estructura SET htetdesde = " & FAlta
                    '    StrSql = StrSql & ",estrnro = " & CodEst
                    '    objConn.Execute StrSql, , adExecuteNoRecords
                    'End If
                    
                    Texto = " Pisa - Actualizo el Tipo de Estructura " & TipoEstr & " para el tercero: " & CodTer
                    Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, "")
    
                End If
            Else ' no Pisa
                'FGZ - 23/07/2010 -  se agregó este control
                If rs_his!Estrnro = CodEst Then
                    If Not UCase(FBaja) = "NULL" Then
                        StrSql = " UPDATE his_estructura SET "
                        StrSql = StrSql & "htethasta = " & FBaja
                        StrSql = StrSql & " WHERE tenro = " & TipoEstr
                        StrSql = StrSql & " AND ternro = " & CodTer
                        StrSql = StrSql & " AND estrnro = " & rs_his!Estrnro
                        StrSql = StrSql & " AND htetdesde = " & ConvFecha(rs_his!htetdesde)
                        objConn.Execute StrSql, , adExecuteNoRecords
                        
                        Texto = " Actualizo el Tipo de Estructura " & TipoEstr & " para el tercero: " & CodTer
                        Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, "")
                    Else
                        'Nada
                        Texto = " Nada para TE " & TipoEstr & " para el tercero: " & CodTer
                        Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, "")

                    End If
                Else
                    
                    If EsNulo(rs_his!htethasta) Then
                        
                        If (FAlta) = ConvFecha(rs_his!htetdesde) Then
                            ' si la fecha es = Reeemplazar la estructura anterior (pedido x Teletech)
                            
                            StrSql = " UPDATE his_estructura SET "
                            StrSql = StrSql & " estrnro = " & CodEst & ", "
                            StrSql = StrSql & " htethasta = " & FBaja
                            StrSql = StrSql & " WHERE tenro = " & TipoEstr
                            StrSql = StrSql & " AND ternro = " & CodTer
                            StrSql = StrSql & " AND estrnro = " & rs_his!Estrnro
                            StrSql = StrSql & " AND htetdesde = " & ConvFecha(rs_his!htetdesde)
                            objConn.Execute StrSql, , adExecuteNoRecords
                            
                            Texto = " Actualizo el Tipo de Estructura " & TipoEstr & " para el tercero: " & CodTer
                            Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, "")
       
       
                        Else
                        
                            StrSql = " UPDATE his_estructura SET "
                            StrSql = StrSql & "htethasta = " & ConvFecha(F_Cierre_Temp)
                            StrSql = StrSql & " WHERE tenro = " & TipoEstr
                            StrSql = StrSql & " AND ternro = " & CodTer
                            StrSql = StrSql & " AND estrnro = " & rs_his!Estrnro
                            StrSql = StrSql & " AND htetdesde = " & ConvFecha(rs_his!htetdesde)
                            objConn.Execute StrSql, , adExecuteNoRecords
                        
                    
                            'FGZ - 23/07/2010 - se cambió esta parte
                            If UCase(FBaja) = "NULL" Then
                                StrSql = " INSERT INTO his_estructura(ternro,estrnro,tenro,htetdesde) VALUES("
                                StrSql = StrSql & CodTer & "," & CodEst & "," & TipoEstr & "," & FAlta & ")"
                                objConn.Execute StrSql, , adExecuteNoRecords
                            Else
                                StrSql = " INSERT INTO his_estructura(ternro,estrnro,tenro,htetdesde,htethasta) VALUES("
                                StrSql = StrSql & CodTer & "," & CodEst & "," & TipoEstr & "," & FAlta & "," & FBaja & ")"
                                objConn.Execute StrSql, , adExecuteNoRecords
                            End If
                        
                            Texto = " Inserto el Tipo de Estructura " & TipoEstr & " para el tercero: " & CodTer
                            Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs, "")
                            
                        End If
                        
                    Else
                        Texto = ": " & "Ya existe una estructura de tipo " & TipoEstr
                        Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs, "")
                    End If
                End If
                'Texto = ": " & "Ya existe una estructura de tipo " & TipoEstr
                'Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs, "")
            End If
        Else
                'FGZ - 23/07/2010 - se cambió esta parte
                If UCase(FBaja) = "NULL" Then
                    StrSql = " INSERT INTO his_estructura(ternro,estrnro,tenro,htetdesde) VALUES("
                    StrSql = StrSql & CodTer & "," & CodEst & "," & TipoEstr & "," & FAlta & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    StrSql = " INSERT INTO his_estructura(ternro,estrnro,tenro,htetdesde,htethasta) VALUES("
                    StrSql = StrSql & CodTer & "," & CodEst & "," & TipoEstr & "," & FAlta & "," & FBaja & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                End If
                                    
                Texto = " Inserto el Tipo de Estructura " & TipoEstr & " para el tercero: " & CodTer
                Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, "")
        End If
        
    
    Else ' de CodEst <> 0
    
        'Texto = " Al cargar el tipo de Estructura " & TipoEstr & " - CodEst = 0 "
        'Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs, "")
    
    End If
    
    If rs_his.State = adStateOpen Then rs_his.Close
    Set rs_his = Nothing
    
Exit Sub

EstrNew:
    Texto = " Error (Estr New) " & Err.Number & " - " & Err.Description & " -- Ultima consulta: " & StrSql
    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, "")
     
     ' cartel de 630 - My Roll ba ckTrans -  'OK = False
End Sub


Public Sub AsignarEstructura_temporal(TipoEstr As Long, CodEst As Long, CodTer As Long, FAlta As String, FBaja As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Procedimiento que actualiza el historico de estructuras.
'   Utiliza un parametro PISA.
'               SI es verdadero se entiende que de existir una estructura debe reemplazarse
'               SI es False se entiende que de existir una estructura debe actualizarse la vigencia (de ser posible)
' Autor      : FGZ
' Fecha      : 23/07/2010
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim rs As New ADODB.Recordset
Dim rs_his As New ADODB.Recordset

Dim F_Alta As Date
Dim F_Baja As Date




    F_Alta = CDate(Mid(FAlta, 2, Len(FAlta) - 2))
    If UCase(FBaja) <> "NULL" Then
        F_Baja = CDate(Mid(FBaja, 2, Len(FBaja) - 2))
    End If
    

    If CodEst <> 0 Then
        If nro_ModOrg <> 0 Then
            StrSql = "SELECT * FROM adptte_estr WHERE tplatenro = " & nro_ModOrg & " AND tenro = " & TipoEstr
            OpenRecordset StrSql, rs
            If rs.EOF Then
                tplaorden = tplaorden + 1
                StrSql = "INSERT INTO adptte_estr(tplatenro,tenro,tplaestroblig,tplaestrorden) VALUES (" & nro_ModOrg & "," & TipoEstr & ",0," & tplaorden & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
        End If
    
        StrSql = "SELECT * FROM his_estructura "
        StrSql = StrSql & " WHERE tenro = " & TipoEstr
        StrSql = StrSql & " AND ternro = " & CodTer
        StrSql = StrSql & " ORDER BY htetdesde desc "
        OpenRecordset StrSql, rs_his
        If Not rs_his.EOF Then
            If Pisa Then
                '1) --------[-----]------
                '   --[--]---------------
                '   No hago nada (informo error)
                '2) --------[-----]------
                '   --[-------]----------
                '   No hago nada (informo error)
                '3) --------[-----]------
                '   --[--------------]---
                '   No hago nada (informo error)
                '4) --------[-----]------
                '   ----------[--]-------
                '   No hago nada (informo error)
                '5) --------[------------
                '   ----------[--]-------
                '   cierro y creo una nueva
                '6) --------[-----]------
                '   ----------[------]---
                '   No hago nada (informo error)
                '7) ------[-----]--------
                '   --------------[---]--
                '   creo una nueva
                
                
                
                'SI solapa vigencia ==> reeamplazo
                If EsNulo(rs_his!htethasta) Then
                    If rs_his!Estrnro = CodEst Then 'Si es el mismo codifo de estructura ==> reeamplazo
                        StrSql = " UPDATE his_estructura SET "
                        StrSql = StrSql & " estrnro = " & CodEst
                        StrSql = StrSql & ",htetdesde = " & FAlta
                        StrSql = StrSql & ",htethasta = " & FBaja
                        StrSql = StrSql & " WHERE tenro = " & TipoEstr
                        StrSql = StrSql & " AND ternro = " & CodTer
                        StrSql = StrSql & " AND estrnro = " & rs_his!Estrnro
                        StrSql = StrSql & " AND htetdesde = " & ConvFecha(rs_his!htetdesde)
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        ' Si es otra estructura ==> cierro la que está y creo una nueva
                        StrSql = " UPDATE his_estructura SET "
                        StrSql = StrSql & ",htethasta = " & FBaja
                        StrSql = StrSql & " WHERE tenro = " & TipoEstr
                        StrSql = StrSql & " AND ternro = " & CodTer
                        StrSql = StrSql & " AND estrnro = " & rs_his!Estrnro
                        StrSql = StrSql & " AND htetdesde = " & ConvFecha(rs_his!htetdesde)
                        objConn.Execute StrSql, , adExecuteNoRecords
                        
                        StrSql = " INSERT INTO his_estructura(ternro,estrnro,tenro,htetdesde) VALUES("
                        StrSql = StrSql & CodTer & "," & CodEst & "," & TipoEstr & "," & FAlta & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                    End If
                Else
                    If rs_his!htetdesde <= F_Alta And rs_his!htethasta >= F_Alta Then
                        ' ---[--------------]---------
                        '-----------[------------]----
                        StrSql = " UPDATE his_estructura SET "
                        StrSql = StrSql & " estrnro = " & CodEst
                        StrSql = StrSql & ",htetdesde = " & FAlta
                        StrSql = StrSql & ",htethasta = " & FBaja
                        StrSql = StrSql & " WHERE tenro = " & TipoEstr
                        StrSql = StrSql & " AND ternro = " & CodTer
                        StrSql = StrSql & " AND estrnro = " & rs_his!Estrnro
                        StrSql = StrSql & " AND htetdesde = " & ConvFecha(rs_his!htetdesde)
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        If rs_his!htetdesde <= F_Alta And rs_his!htethasta <= F_Alta Then
                            ' ---[-----]-----------
                            '-----------[-----]----
                            StrSql = " INSERT INTO his_estructura(ternro,estrnro,tenro,htetdesde) VALUES("
                            StrSql = StrSql & CodTer & "," & CodEst & "," & TipoEstr & "," & FAlta & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                        Else
                            If rs_his!htetdesde >= F_Alta Then
                                ' -------------[-----]-----------
                                ' ----------[-----]--------------
                                'Si es el mismo codigo ==> actualizo sino nada
                                If rs_his!Estrnro = CodEst Then 'Si es el mismo codifo de estructura ==> reeamplazo
                                    StrSql = " UPDATE his_estructura SET "
                                    StrSql = StrSql & ",htetdesde = " & FAlta
                                    StrSql = StrSql & ",htethasta = " & FBaja
                                    StrSql = StrSql & " WHERE tenro = " & TipoEstr
                                    StrSql = StrSql & " AND ternro = " & CodTer
                                    StrSql = StrSql & " AND estrnro = " & rs_his!Estrnro
                                    StrSql = StrSql & " AND htetdesde = " & ConvFecha(rs_his!htetdesde)
                                    objConn.Execute StrSql, , adExecuteNoRecords
                                Else
                                    Texto = ": " & "Ya existe una estructura de tipo " & TipoEstr
                                    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs, "")
                                End If
                            Else
                                ' -------------[-----]-----------
                                ' ----------[-----]--------------
                                Texto = ": " & "Ya existe una estructura de tipo " & TipoEstr
                                Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs, "")
                            End If
                        End If
                    End If
                End If
            Else    'NO PISA
                '1) --------[-----]------
                '   --[--]---------------
                '   No hago nada (informo error)
                '2) --------[-----]------
                '   --[-------]----------
                '   No hago nada (informo error)
                '3) --------[-----]------
                '   --[--------------]---
                '   No hago nada (informo error)
                '4) --------[-----]------
                '   ----------[--]-------
                '   No hago nada (informo error)
                '5) --------[------------
                '   ----------[--]-------
                '   cierro y creo una nueva
                '6) --------[-----]------
                '   ----------[------]---
                '   No hago nada (informo error)
                '7) ------[-----]--------
                '   --------------[---]--
                '   creo una nueva
                
                If EsNulo(rs_his!htethasta) And rs_his!htetdesde < F_Alta Then
                    StrSql = " UPDATE his_estructura SET "
                    StrSql = StrSql & " htethasta = " & ConvFecha(DateAdd("d", -1, F_Alta))
                    StrSql = StrSql & " WHERE tenro = " & rs_his!Tenro
                    StrSql = StrSql & " AND ternro = " & CodTer
                    StrSql = StrSql & " AND estrnro = " & rs_his!Estrnro
                    StrSql = StrSql & " AND htetdesde = " & ConvFecha(rs_his!htetdesde)
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    StrSql = " INSERT INTO his_estructura(ternro,estrnro,tenro,htetdesde) VALUES("
                    StrSql = StrSql & CodTer & "," & CodEst & "," & TipoEstr & "," & ConvFecha(FAlta) & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    'Texto = ": " & "Estructuras actualizadas"
                    'Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs, "")
                Else
                    If Not EsNulo(rs_his!htethasta) Then
                        If rs_his!htethasta < F_Alta Then
                            StrSql = " INSERT INTO his_estructura(ternro,estrnro,tenro,htetdesde) VALUES("
                            StrSql = StrSql & CodTer & "," & CodEst & "," & TipoEstr & "," & ConvFecha(FAlta) & ")"
                            objConn.Execute StrSql, , adExecuteNoRecords
                    
                            'Texto = ": " & "Estructura Insertada"
                            'Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs, "")
                        Else
                            Texto = ": " & "Ya existe una estructura de tipo " & TipoEstr
                            Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs, "")
                        End If
                    Else
                        Texto = ": " & "Ya existe una estructura de tipo " & TipoEstr
                        Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs, "")
                    End If
                End If
            End If
        Else
            StrSql = " INSERT INTO his_estructura(ternro,estrnro,tenro,htetdesde) VALUES("
            StrSql = StrSql & CodTer & "," & CodEst & "," & TipoEstr & "," & FAlta & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            'Texto = ": " & "Estructura Insertada"
            'Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs, "")
        End If
    End If
    
    If rs_his.State = adStateOpen Then rs_his.Close
    Set rs_his = Nothing
End Sub

Public Sub AsignarEstructuraRadiotronica_NEW(TipoEstr As Long, CodEst As Long, CodTer As Long, FAlta As String, FBaja As String, FAltaStr As String, FBajaStr As String)
' ---------------------------------------------------------------------------------------------
' Autor      : DNN
' Fecha      : 24/06/2009
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim rs As New ADODB.Recordset
Dim rs_his As New ADODB.Recordset
Dim FBajaUpdate As Date

FBajaUpdate = DateAdd("d", -1, CDate(FAltaStr))

    If CodEst <> 0 Then
        If nro_ModOrg <> 0 Then
            StrSql = "SELECT * FROM adptte_estr WHERE tplatenro = " & nro_ModOrg & " AND tenro = " & TipoEstr
            OpenRecordset StrSql, rs
            If rs.EOF Then
                tplaorden = tplaorden + 1
                StrSql = "INSERT INTO adptte_estr(tplatenro,tenro,tplaestroblig,tplaestrorden) VALUES (" & nro_ModOrg & "," & TipoEstr & ",0," & tplaorden & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
        End If
    
        
        'Primero detecto el único caso para el cual envío un error al log (no se modifica ni se inserta nada)
        'Base de datos: ------------|----------------------->
        'Actualizacion: -------|---------------------------->
        StrSql = "SELECT * FROM his_estructura "
        StrSql = StrSql & " WHERE tenro = " & TipoEstr
        StrSql = StrSql & " AND ternro = " & CodTer
        StrSql = StrSql & " AND (htetdesde >= " & FAlta & ")"
        StrSql = StrSql & " ORDER BY htetdesde "
        If rs_his.State = adStateOpen Then rs_his.Close
        OpenRecordset StrSql, rs_his
        If Not rs_his.EOF Then
            Texto = ": " & "La estructura del tipo " & TipoEstr & "tiene una fase posterior a la fecha desde elegida"
            Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs, "")
            If rs_his.State = adStateOpen Then rs_his.Close
            Set rs_his = Nothing
            Exit Sub
        End If
        'Detecto aquellos casos en los cuales exista una fase de la estructura a modificar
        'Base de datos: ------------|----------------------->
        'Actualizacion: -------------------|----------------->
        StrSql = "SELECT * FROM his_estructura "
        StrSql = StrSql & " WHERE tenro = " & TipoEstr
        StrSql = StrSql & " AND ternro = " & CodTer
        StrSql = StrSql & " AND (htetdesde <= " & FAlta & ") AND"
        StrSql = StrSql & " ((" & FAlta & " <= htethasta) or (htethasta is null))"
        StrSql = StrSql & " ORDER BY htetdesde "
        If rs_his.State = adStateOpen Then rs_his.Close
        OpenRecordset StrSql, rs_his
        If Not rs_his.EOF Then
            If Pisa Then
                If rs_his!Estrnro = CodEst Then
                        StrSql = " UPDATE his_estructura SET htetdesde = " & FAlta
                        StrSql = StrSql & ",htethasta = " & FBaja
                        StrSql = StrSql & " WHERE tenro = " & TipoEstr
                        StrSql = StrSql & " AND ternro = " & CodTer
                        StrSql = StrSql & " AND estrnro = " & rs_his!Estrnro
                        StrSql = StrSql & " AND htetdesde = " & ConvFecha(rs_his!htetdesde)
                        objConn.Execute StrSql, , adExecuteNoRecords
                Else
                        StrSql = " UPDATE his_estructura SET "
                        StrSql = StrSql & " estrnro = " & CodEst
                        StrSql = StrSql & ",htetdesde = " & FAlta
                        StrSql = StrSql & ",htethasta = " & FBaja
                        StrSql = StrSql & " WHERE tenro = " & TipoEstr
                        StrSql = StrSql & " AND ternro = " & CodTer
                        StrSql = StrSql & " AND estrnro = " & rs_his!Estrnro
                        StrSql = StrSql & " AND htetdesde = " & ConvFecha(rs_his!htetdesde)
                        objConn.Execute StrSql, , adExecuteNoRecords
                End If
            Else
                'Como no piso, actualizo la fase anterior e inserto la nueva
                StrSql = " UPDATE his_estructura SET htethasta = " & ConvFecha(CStr(FBajaUpdate))
                StrSql = StrSql & " WHERE tenro = " & TipoEstr
                StrSql = StrSql & " AND ternro = " & CodTer
                StrSql = StrSql & " AND estrnro = " & rs_his!Estrnro
                StrSql = StrSql & " AND htetdesde = " & ConvFecha(rs_his!htetdesde)
                objConn.Execute StrSql, , adExecuteNoRecords
                If Not FBaja = "Null" Then
                    StrSql = " INSERT INTO his_estructura(ternro,estrnro,tenro,htetdesde,htethasta) VALUES("
                    StrSql = StrSql & CodTer & "," & CodEst & "," & TipoEstr & "," & FAlta & "," & FBaja & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                Else
                    StrSql = " INSERT INTO his_estructura(ternro,estrnro,tenro,htetdesde) VALUES("
                    StrSql = StrSql & CodTer & "," & CodEst & "," & TipoEstr & "," & FAlta & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                End If
            End If
        Else
            If Not FBaja = "Null" Then
                StrSql = " INSERT INTO his_estructura(ternro,estrnro,tenro,htetdesde,htethasta) VALUES("
                StrSql = StrSql & CodTer & "," & CodEst & "," & TipoEstr & "," & FAlta & "," & FBaja & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
            Else
                StrSql = " INSERT INTO his_estructura(ternro,estrnro,tenro,htetdesde) VALUES("
                StrSql = StrSql & CodTer & "," & CodEst & "," & TipoEstr & "," & FAlta & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
        End If
    
    
    
    
    
    
    End If
        
    
    If rs_his.State = adStateOpen Then rs_his.Close
    Set rs_his = Nothing
End Sub




' _____________________________________________________________________________________________
' Descripcion: Procedimiento que inserta la estructura Situacion Revista asociada a la causa de baja.
' Autor      : Leticia Amadio.
' Fecha      : 18-11-2010
' Ultima Mod.: 01/06/2011 - Gonzalez Nicolás - Se cambio AsignarEstructura_NEW() Por AsignarEstructura_NEWNEW()
' _____________________________________________________________________________________________
Public Sub AsignarSitRevistaAsoc(CausaCod As Long, CodTer As Long, FAlta As String)

Dim rs As New ADODB.Recordset

Dim Estrnro As Long
Dim caudesvin As Integer
Dim fecAlta As String
Dim fecBaja As String


On Error GoTo ME_SitRev


        fecAlta = FAlta    ' la fecha de alta de la Sit. Rev es la fecha de baja -FBaja (de la fase)
        fecBaja = "NULL"
        
        Estrnro = 0
        caudesvin = 0
        
        StrSql = "SELECT estrnro, caunro "
        StrSql = StrSql & " FROM causa_sitrev "
        StrSql = StrSql & " WHERE caunro=" & CausaCod
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
    
        If Not rs.EOF Then
            Estrnro = rs!Estrnro
        End If
        rs.Close
        
        
        StrSql = "SELECT caudesvin from causa WHERE caunro=" & CausaCod
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            caudesvin = rs!caudesvin
        End If
        rs.Close
        

        'Si la causa de baja indicada tiene la marca de desvinculación en true: se debe colocar empest=false
        If caudesvin = -1 Then
            StrSql = " UPDATE empleado "
            StrSql = StrSql & " SET empest = 0 "
            StrSql = StrSql & " WHERE ternro = " & CodTer
            objConn.Execute StrSql, , adExecuteNoRecords
            
            Texto = " - La causa de Baja tiene marca de Desvinculación - el Empleado se deja en estado inactivo. "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, "")
        End If
        
        
        ' asignar la Sit. Rev. asociada a la causa de baja
        If Estrnro <> 0 Then
            'Call AsignarEstructura_NEW(30, estrnro, CodTer, fecAlta, fecBaja)
            Call AsignarEstructura_SitRev(30, Estrnro, CodTer, fecAlta, fecBaja)
            Texto = " - Carga de la Situación de Revista asociada a la Causa de Baja "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, "")
        End If


    
Set rs = Nothing

Exit Sub

ME_SitRev:
    
    Texto = ": " & Err.Description
    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, "")
    
    
    'MyRollbackTrans - OK = False


End Sub

' _____________________________________________________________________________________________
' Descripcion: Procedimiento que inserta la estructura Situacion Revista asociada a la causa de baja.
' Autor      : Leticia Amadio.
' Fecha      : 18-11-2010
' Ultima Mod.: 21/09/2012 Carmen Quintero - CAS-13764  H&A  Error en Interfaz 640
'                         Modelo 640 - Se verifica que el empleado no tenga una fase activa actual
'                         a la fecha de la fase historica que se esta actualizando, al momento de desvincularlo.

' _____________________________________________________________________________________________
Public Sub AsignarSitRevistaAsocHIS(CausaCod As Long, CodTer As Long, ByVal FAlta As String, ByVal FBaja As String)
Dim rs As New ADODB.Recordset

Dim Estrnro As Long
Dim caudesvin As Integer
Dim fecAlta As String
Dim fecBaja As String


On Error GoTo ME_SitRev


        fecAlta = FAlta    ' la fecha de alta de la Sit. Rev es la fecha de baja -FBaja (de la fase)
        fecBaja = FBaja
        
        Estrnro = 0
        caudesvin = 0
        
        StrSql = "SELECT estrnro, caunro "
        StrSql = StrSql & " FROM causa_sitrev "
        StrSql = StrSql & " WHERE caunro=" & CausaCod
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
    
        If Not rs.EOF Then
            Estrnro = rs!Estrnro
        End If
        rs.Close
        
        
        StrSql = "SELECT caudesvin from causa WHERE caunro=" & CausaCod
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            caudesvin = rs!caudesvin
        End If
        rs.Close
        

        'Si la causa de baja indicada tiene la marca de desvinculación en true: se debe colocar empest=false
        If caudesvin = -1 Then
            'Agregado el 21/09/2012 Carmen Quintero
            StrSql = "SELECT altfec FROM fases"
            StrSql = StrSql & " WHERE Empleado = " & CodTer
            StrSql = StrSql & " AND (fases.altfec >= " & FAlta & " AND (fases.bajfec IS NULL OR fases.bajfec >=" & FAlta & " ))"
            StrSql = StrSql & " ORDER BY altfec DESC"
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If rs.EOF Then
                StrSql = " UPDATE empleado "
                StrSql = StrSql & " SET empest = 0 "
                StrSql = StrSql & " WHERE ternro = " & CodTer
                objConn.Execute StrSql, , adExecuteNoRecords

                Texto = " - La causa de Baja tiene marca de Desvinculación - el Empleado se deja en estado inactivo. "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, "")
            Else
                Texto = " El Empleado se deja en estado activo. "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, "")
            End If
            rs.Close
                            
'            StrSql = " UPDATE empleado "
'            StrSql = StrSql & " SET empest = 0 "
'            StrSql = StrSql & " WHERE ternro = " & CodTer
'            objConn.Execute StrSql, , adExecuteNoRecords
'
'            Texto = " - La causa de Baja tiene marca de Desvinculación - el Empleado se deja en estado inactivo. "
'            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, "")
        End If
        
        
        ' asignar la Sit. Rev. asociada a la causa de baja
        If Estrnro <> 0 Then
            Call AsignarEstructura_NEWHIS(30, Estrnro, CodTer, fecAlta, fecBaja)
            
            Texto = " - Carga de la Situación de Revista asociada a la Causa de Baja "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, "")
        End If


    
Set rs = Nothing

Exit Sub

ME_SitRev:
    
    Texto = ": " & Err.Description
    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, "")
    
    
    'MyRollbackTrans - OK = False


End Sub



Public Sub Insertar_His_Estructura(Tenro As Long, Estrnro As Long, Tercero As Long, FechaDesde As String, FechaHasta As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Procedimiento que inserta en his_estructura la estructura del tipo especificada
'               en el rango de fechas especificado. Si ya existe una estructura del mismo tipo abierta ==> se cierra el dia anterior al la
'               fecha_desde y se abre la nueva estructura.
' Autor      : Raul Chinestra
' Fecha      : 07/09/2006
' ---------------------------------------------------------------------------------------------
Dim rs_His_Estructura As New ADODB.Recordset
Dim Fecha_Desde As Date
Dim Fecha_Hasta As Date

    If Estrnro <> 0 Then
        Fecha_Desde = CDate(Replace(FechaDesde, "'", ""))
        If Not EsNulo(FechaHasta) Then
            Fecha_Hasta = CDate(Replace(FechaHasta, "'", ""))
        End If
    
        StrSql = " SELECT * FROM his_estructura "
        StrSql = StrSql & " WHERE ternro = " & Tercero
        StrSql = StrSql & " AND tenro = " & Tenro
        StrSql = StrSql & " AND (htetdesde <= " & FechaDesde & " ) "
        StrSql = StrSql & " AND ((" & FechaDesde & " <= htethasta) or (htethasta is null))"
        StrSql = StrSql & " ORDER BY htetdesde "
        If rs_His_Estructura.State = adStateOpen Then rs_His_Estructura.Close
        OpenRecordset StrSql, rs_His_Estructura
        If Not rs_His_Estructura.EOF Then
            rs_His_Estructura.MoveLast
            If rs_His_Estructura!Estrnro = Estrnro Then
                'la estructura es la misma, reviso las fechas
                If Fecha_Desde < rs_His_Estructura!htetdesde Then
                    StrSql = "UPDATE his_estructura SET htetdesde = " & FechaDesde
                    StrSql = StrSql & " WHERE ternro = " & Tercero
                    StrSql = StrSql & " AND tenro = " & Tenro
                    StrSql = StrSql & " AND (htetdesde <= " & FechaDesde & ") "
                    StrSql = StrSql & " AND ((" & FechaDesde & " <= htethasta) or (htethasta is null))"
                    objConn.Execute StrSql, , adExecuteNoRecords
                End If
                If Not EsNulo(FechaHasta) Then
                    If Not EsNulo(rs_His_Estructura!htethasta) Then
                        'If Fecha_Hasta < rs_His_Estructura!htethasta Then
                        If Fecha_Hasta > rs_His_Estructura!htethasta Then
                            StrSql = "UPDATE his_estructura SET htethasta = " & FechaHasta
                            StrSql = StrSql & " WHERE ternro = " & Tercero
                            StrSql = StrSql & " AND tenro = " & Tenro
                            StrSql = StrSql & " AND estrnro = " & Estrnro
                            StrSql = StrSql & " AND htetdesde = " & ConvFecha(rs_His_Estructura!htetdesde)
                            StrSql = StrSql & " AND htethasta = " & ConvFecha(rs_His_Estructura!htethasta)
                            objConn.Execute StrSql, , adExecuteNoRecords
                        Else
                            'no actualizo porque la que estaba abarca mayor rango
                            FlogE.writeline Espacios(Tabulador * 3) & "Estructura no insertada. No actualizo porque la que estaba abarca mayor rango"
                        End If
                    Else
                        StrSql = "UPDATE his_estructura SET htethasta = " & FechaHasta
                        StrSql = StrSql & " WHERE ternro = " & Tercero
                        StrSql = StrSql & " AND estrnro = " & Estrnro
                        StrSql = StrSql & " AND tenro = " & Tenro
                        StrSql = StrSql & " AND htetdesde = " & ConvFecha(rs_His_Estructura!htetdesde)
                        StrSql = StrSql & " AND htethasta is null"
                        objConn.Execute StrSql, , adExecuteNoRecords
                    End If
                Else
                    If Not EsNulo(rs_His_Estructura!htethasta) Then
                        StrSql = "UPDATE his_estructura SET htethasta = NULL "
                        StrSql = StrSql & " WHERE ternro = " & Tercero
                        StrSql = StrSql & " AND tenro = " & Tenro
                        StrSql = StrSql & " AND estrnro = " & Estrnro
                        StrSql = StrSql & " AND htetdesde = " & ConvFecha(rs_His_Estructura!htetdesde)
                        StrSql = StrSql & " AND htethasta = " & ConvFecha(rs_His_Estructura!htethasta)
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
    '                    StrSql = "UPDATE his_estructura SET htethasta = NULL "
    '                    StrSql = StrSql & " WHERE ternro = " & Tercero
    '                    StrSql = StrSql & " AND tenro = " & Tenro
    '                    StrSql = StrSql & " AND estrnro = " & Estrnro
    '                    StrSql = StrSql & " AND htetdesde = " & ConvFecha(rs_His_Estructura!htetdesde)
    '                    objConn.Execute StrSql, , adExecuteNoRecords
                    End If
                End If
            Else    'tiene abierta otra estructura, la cierro y le abro la nueva
'                If Fecha_Desde = rs_His_Estructura!htetdesde Then
'                    StrSql = "UPDATE his_estructura SET estrnro = " & Estrnro
'                    If Not EsNulo(FechaHasta) Then
'                        StrSql = StrSql & " ,htethasta = " & FechaHasta
'                    Else
'                        StrSql = StrSql & " ,htethasta = null"
'                    End If
'                    StrSql = StrSql & " WHERE ternro = " & Tercero
'                    StrSql = StrSql & " AND tenro = " & Tenro
'                    StrSql = StrSql & " AND (htetdesde = " & FechaDesde & ") "
'                    objConn.Execute StrSql, , adExecuteNoRecords
'                Else
                    ' Se agrego para que tome la fecha Actual para Actualizar las estructuras
                    FechaDesde = ConvFecha(Date)
                    Fecha_Desde = Date
                    StrSql = "UPDATE his_estructura SET htethasta = " & ConvFecha(Fecha_Desde - 1)
                    StrSql = StrSql & " WHERE ternro = " & Tercero
                     StrSql = StrSql & " AND tenro = " & Tenro
                    StrSql = StrSql & " AND estrnro = " & rs_His_Estructura!Estrnro
                    StrSql = StrSql & " AND htetdesde = " & ConvFecha(rs_His_Estructura!htetdesde)
                    If Not EsNulo(rs_His_Estructura!htethasta) Then
                        StrSql = StrSql & " AND htethasta = " & ConvFecha(rs_His_Estructura!htethasta)
                    Else
                        StrSql = StrSql & " AND htethasta is null"
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                
                    'Inserto la nueva estructura
                    If Not EsNulo(FechaHasta) Then
                        StrSql = " INSERT INTO his_estructura(ternro,estrnro,tenro,htetdesde,htethasta) VALUES("
                        StrSql = StrSql & Tercero & "," & Estrnro & "," & Tenro & "," & FechaDesde & "," & FechaHasta & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        StrSql = " INSERT INTO his_estructura(ternro,estrnro,tenro,htetdesde) VALUES("
                        StrSql = StrSql & Tercero & "," & Estrnro & "," & Tenro & "," & FechaDesde & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                    End If
                'End If
            End If
        Else
            'Inserto la nueva estructura
            If Not EsNulo(FechaHasta) Then
                StrSql = " INSERT INTO his_estructura(ternro,estrnro,tenro,htetdesde,htethasta) VALUES("
                StrSql = StrSql & Tercero & "," & Estrnro & "," & Tenro & "," & FechaDesde & "," & FechaHasta & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
            Else
                StrSql = " INSERT INTO his_estructura(ternro,estrnro,tenro,htetdesde) VALUES("
                StrSql = StrSql & Tercero & "," & Estrnro & "," & Tenro & "," & FechaDesde & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
        End If
    End If
    'Call InsertarLogcambio(Tenro, Estrnro, Estrnro, FechaDesde, FechaHasta)
'Exit Sub
'MELocal:
'    Resume Next
End Sub



Public Sub ESS_Configuracion_Default()
' ---------------------------------------------------------------------------------------------
' Descripcion: Esta función retorna un arreglo con el perfil@@pass que estan configurados por defecto para el ingreso a ESS.
'              Siempre y cuando en el confper este habilitado. Si está deshabilitado retorna una cadena vacia
' Autor      : Brzozowski Juan Pablo
' Fecha      : 05/06/2012
' ---------------------------------------------------------------------------------------------
Dim rs_tpl  As New ADODB.Recordset
   'Numero de configuracion del confper para la habilitacion del pass+perfil default de ESS
   l_confnro = "12"
   
   StrSql = "SELECT auxint1,auxchar1 "
   StrSql = StrSql & " FROM  confper_complemento "
   StrSql = StrSql & "  INNER JOIN confper ON confper.confnro = confper_complemento.confnro "
   StrSql = StrSql & " WHERE confper_complemento.confnro = " & l_confnro & " AND confper.confactivo = -1 "
   l_ess_Pass_Estandar = ""
   l_ess_Perfil_Estandar = ""
  
   OpenRecordset StrSql, rs_tpl
   If Not rs_tpl.EOF Then
        l_ess_Pass_Estandar = rs_tpl!Auxchar1
        l_ess_Perfil_Estandar = rs_tpl!Auxint1
   End If
     
   Flog.writeline Espacios(Tabulador * 1) & "Se asocio pass+perfil por defecto al empleado para el acceso al ESS"
End Sub



Public Sub LineaModelo_600(ByVal strReg As String, ByRef OK As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de Familiares
' Autor      : MAB
' Fecha      :
' Ultima Mod.: 27/04/2005 - FGZ
' Descripcion: Estandarizacion
'            : 23/08/2006 - Lisandro Moro - Correccion en los estudios, Avisar ante Emergencia,
'                                            Paga Salario Familiar.
' ---------------------------------------------------------------------------------------------
Dim Legajo          As Long    ' Legajo del Empleado
Dim Apellido        As String  ' Apellido del Familiar
Dim nombre          As String  ' Nombre del Familiar
Dim Fnac            As String  ' Fecha de Nacimiento del Familiar
Dim NAC             As String  ' Nacionalidad del Familiar
Dim PaisNac         As String  ' Pais de Nacimiento
Dim EstCiv          As String  ' Estado Civil
Dim Sexo            As String  ' Sexo del Familiar
Dim GPare           As String  ' Grado de Parentesco
Dim Disc            As String  ' Discapacitado
Dim Estudia         As String  ' Estudia
Dim NivEst          As String  ' Nivel de Estudio
Dim TipDoc          As String  ' Tipo de Documento del Familiar
Dim NroDoc          As String  ' Nº de Documento del Familiar
Dim Calle           As String   'Calle                    -- detdom.calle
Dim Nro             As String   'Número                   -- detdom.nro
Dim Piso            As String   'Piso                     -- detdom.piso
Dim Depto           As String   'Depto                    -- detdom.depto
Dim Torre           As String   'Torre                    -- detdom.torre
Dim Manzana         As String   'Manzana                  -- detdom.manzana
Dim Cpostal         As String   'Cpostal                  -- detdom.codigopostal
Dim Entre           As String   'Entre Calles             -- detdom.entrecalles
Dim Barrio          As String   'Barrio                   -- detdom.barrio
Dim Localidad       As String   'Localidad                -- detdom.locnro
Dim Partido         As String   'Partido                  -- detdom.partnro
Dim Zona            As String   'Zona                     -- detdom.zonanro
Dim Provincia       As String   'Provincia                -- detdom.provnro
Dim Pais            As String   'Pais                     -- detdom.paisnro
Dim Telefono        As String   'Telefono                 -- telefono.telnro
Dim ObraSocial      As String   'Obra Social
Dim PlanOSocial     As String   'Plan Obra Social
Dim AvisoEmer       As String   'Aviso ante Emergencia
Dim PagaSalario     As String   'Paga Salario Familiar
Dim Ganancias       As String   'Se lo toma para ganancias

Dim Cuil            As String  ' CUIL del Familiar
Dim ESC             As String  ' Escolaridad
Dim GRADO           As String  ' Grado al que concurre
Dim NroTDoc         As String

Dim pos1            As Long
Dim pos2            As Long

Dim NroTercero      As Long
Dim NroEmpleado     As Long
Dim CodTerFam       As String
Dim Nro_Nrodom      As String
Dim NroDom          As Long
Dim Nro_TDocumento  As Long
Dim nro_nacionalidad As Long
Dim nro_paisnac      As Long
Dim nro_estciv      As Long
Dim nro_Sexo        As Long
Dim nro_estudia     As Long
Dim nro_nivest      As String
Dim nro_osocial     As Long
Dim nro_planos      As Long
Dim nro_aviso       As Long
Dim nro_salario     As Long
Dim nro_gan         As Long
Dim nro_disc        As Long
Dim nro_paren        As Long
Dim Nro_Barrio          As Long
Dim Nro_Localidad       As Long
Dim Nro_Partido         As Long
Dim Nro_Zona            As Long
Dim Nro_Provincia       As Long
Dim Nro_Pais            As Long
Dim OSocial             As String
Dim ter_osocial         As Long
Dim Inserto_estr        As Boolean
Dim IngresoDom          As Boolean
Dim Nro_Institucion As Long

Dim rs_Sql          As New ADODB.Recordset
Dim rs              As New ADODB.Recordset
Dim rs_Tel          As New ADODB.Recordset


    LineaCarga = LineaCarga + 1
    Tabs = 1
    
    On Error GoTo SaltoLinea
    
    Flog.writeline
    FlogE.writeline
    FlogP.writeline
    
    'Legajo
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Legajo"
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If IsNumeric(Aux) Then
        Legajo = Aux
    Else
        Texto = ": " & "El legajo no es numerico "
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        InsertaError 1, 8
        'RegError = RegError + 1 - ya lo hace en InsertarError
        Exit Sub
    End If
    
    'Apellido
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Apellido"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Apellido = Left(Aux, 25)
    
    'Nombre
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Nombre"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    nombre = Left(Aux, 25)
    
    'Fecha de Nacimiento
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Fecha de Nacimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Fnac = Aux
    If Fnac = "N/A" Or EsNulo(Fnac) Then
        Fnac = "Null"
    Else
       Fnac = ConvFecha(Fnac)
    End If
    
    'Pais de Nacimiento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Pais de Nacimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    PaisNac = Aux
    If PaisNac <> "N/A" Then
        StrSql = " SELECT paisnro FROM pais WHERE UPPER(paisdesc) = '" & UCase(PaisNac) & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            nro_paisnac = rs!Paisnro
        Else
            StrSql = " INSERT INTO pais(paisdesc,paisdef) VALUES ('" & UCase(PaisNac) & "',0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_paisnac = getLastIdentity(objConn, "pais")
        End If
    Else
        nro_paisnac = 0
    End If
    
    'Nacionalidad
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Nacionalidad"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    NAC = UCase(Aux)
    If NAC <> "N/A" And Not EsNulo(NAC) Then
        StrSql = " SELECT nacionalnro FROM nacionalidad WHERE upper(nacionaldes) = '" & NAC & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            nro_nacionalidad = rs!nacionalnro
        Else
            StrSql = " INSERT INTO nacionalidad(nacionaldes) VALUES ('" & UCase(NAC) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_nacionalidad = getLastIdentity(objConn, "nacionalidad")
        End If
    Else
        nro_nacionalidad = 0
    End If
    If nro_nacionalidad = 0 Then
        Texto = ": " & " - Debe ingresar Nacionalidad."
        NroColumna = 5
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    
    
    'Estado Civil
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Estado Civil"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    EstCiv = Left(UCase(Aux), 30)
    If EstCiv <> "N/A" And Not EsNulo(EstCiv) Then
        StrSql = " SELECT estcivnro FROM estcivil WHERE upper(estcivdesabr) = '" & UCase(EstCiv) & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            nro_estciv = rs!estcivnro
        Else
            StrSql = " INSERT INTO estcivil(estcivdesabr) VALUES ('" & UCase(EstCiv) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_estciv = getLastIdentity(objConn, "estcivil")
        End If
    Else
        nro_estciv = 0
    End If
    If nro_estciv = 0 Then
        Texto = ": " & " - Debe ingresar Estado Civil."
        NroColumna = 6
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Sexo
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Sexo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Sexo = UCase(Aux)
    If Sexo = "M" Or Sexo = "MASCULINO" Or Sexo = "-1" Then
        nro_Sexo = -1
    Else
        nro_Sexo = 0
    End If
    
    'Parentesco
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Parentesco"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    GPare = UCase(Aux)
    StrSql = " SELECT parenro FROM parentesco WHERE upper(paredesc) = '" & UCase(GPare) & "'"
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        nro_paren = rs!parenro
    Else
        nro_paren = 0
    End If
    If nro_paren = 0 Then
        Texto = ": " & " - El parentesco ingresado no existe, verifíquelo." & GPare
        NroColumna = 8
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Discapacitado
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Discapacitado"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Disc = UCase(Aux)
    If Disc = "N/A" Or Disc = "NO" Then
        nro_disc = 0
    Else
        nro_disc = -1
    End If
    
    'Estudia
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estudia"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = UCase(Trim(Mid(strReg, pos1, pos2 - pos1 + 1)))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Estudia = Aux
    If Estudia = "N/A" Or Estudia = "NO" Then
        nro_estudia = 0
    Else
        nro_estudia = -1
    End If
    
    'Nivel de estudio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nivel de estudio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = UCase(Trim(Mid(strReg, pos1, pos2 - pos1 + 1)))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    NivEst = Aux
    'Por ahora no hago nada con el nivel de estudio porque en Accor no lo pasaron
    If NivEst = "N/A" Or EsNulo(NivEst) Then
        'StrSql = " SELECT nivnro FROM nivest WHERE nivdes = '" & NivEst & "'"
        'OpenRecordset StrSql, rs
        nro_nivest = 0
    Else
        'busco el primer novel de estudio, si no existe la creo
        StrSql = " SELECT * FROM nivest WHERE nivdesc = '" & NivEst & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            nro_nivest = rs!nivnro
        Else
            'creo una
            StrSql = " INSERT INTO nivest (nivdesc) VALUES ('" & NivEst & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_nivest = getLastIdentity(objConn, "nivest")
        End If
     End If

    'Tipo de Doc
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Tipo de Doc"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    TipDoc = Aux
    If TipDoc <> "N/A" And Not EsNulo(TipDoc) Then
        StrSql = " SELECT tidnro FROM tipodocu WHERE UPPER(tidsigla) = '" & UCase(TipDoc) & "'"
        If rs_Sql.State = adStateOpen Then rs_Sql.Close
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            Nro_TDocumento = rs_Sql!tidnro
        Else
            'busco la primera institucion, si no existe la creo
            StrSql = " SELECT * FROM institucion "
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                Nro_Institucion = rs!InstNro
            Else
                'creo una
                StrSql = " INSERT INTO institucion (instdes,instabre) VALUES ('NACIONAL','NAC')"
                objConn.Execute StrSql, , adExecuteNoRecords
                Nro_Institucion = getLastIdentity(objConn, "institucion")
            End If
            'creo el tipo de documento
            StrSql = " INSERT INTO tipodocu(tidnom,tidsigla,tidsist,instnro,tidunico) VALUES ('" & UCase(TipDoc) & "','" & UCase(TipDoc) & "',0," & Nro_Institucion & ",0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            Nro_TDocumento = getLastIdentity(objConn, "tipodocu")
        End If
    Else
        Nro_TDocumento = 0
    End If
    
    'Nro de Doc
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Nro de Doc"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    NroDoc = Aux
    If NroDoc = "N/A" Or EsNulo(NroDoc) Then
        NroDoc = "0"
    End If
    
    'Calle
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Calle"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Calle = Left(Aux, 250)
    IngresoDom = True
    If Calle = "N/A" Or EsNulo(Calle) Then
        Calle = ""
        IngresoDom = False
    End If
    
    'Nro
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nro"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Nro = Left(Aux, 8)
    If (Nro <> "N/A") And Not EsNulo(Nro) Then
        Nro_Nrodom = Nro
    Else
        Nro_Nrodom = "S/N"
    End If
    
    'Piso
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Piso"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Piso = Left(Aux, 8)
    If Piso = "N/A" Then
        Piso = ""
    End If
    
    'Depto
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Depto"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Depto = Left(Aux, 8)
    If Depto = "N/A" Then
        Depto = ""
    End If

    'Torre
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Torre"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Torre = Left(Aux, 8)
    If Torre = "N/A" Then
        Torre = ""
    End If
    
    'Manzana
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Manzana"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Manzana = Left(Aux, 8)
    If Manzana = "N/A" Then
        Manzana = ""
    End If

    'Codigo postal
    NroColumna = NroColumna + 1
    Obligatorio = IngresoDom
    Campoetiqueta = "Codigo postal"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Cpostal = Left(Aux, 12)
    If Cpostal = "N/A" Then
        Cpostal = ""
    End If

    'Entre calles
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Entre calles"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Entre = Left(Aux, 80)
    If Entre = "N/A" Then
        Entre = ""
    End If

    'Barrio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Barrio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Barrio = Left(Aux, 30)
    If Barrio = "N/A" Then
        Barrio = ""
    End If

    'Localidad
    NroColumna = NroColumna + 1
    Obligatorio = IngresoDom
    Campoetiqueta = "Localidad"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    '19/03/2010 - Se cambio la longitud a 60
    'Localidad = aux
    Localidad = Left(Aux, 60)
    
    
    
    'Partido
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Partido"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Partido = Aux
    
    'Zona
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Zona"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    '19/03/2010 - Se cambio la longitud a 60
    'Zona = aux
    Zona = Left(Aux, 60)
    
    'Provincia
    NroColumna = NroColumna + 1
    Obligatorio = IngresoDom
    Campoetiqueta = "Provincia"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Provincia = Aux
    
    'Pais
    NroColumna = NroColumna + 1
    Obligatorio = IngresoDom
    Campoetiqueta = "Pais"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Pais = Aux
    If Pais <> "N/A" Then
        Call ValidarPais(Pais, Nro_Pais)
    Else
        Nro_Pais = 0
    End If
    If (Provincia <> "N/A") And (Pais <> "N/A") Then
        Call ValidarProvincia(Provincia, Nro_Provincia, Nro_Pais)
    Else
        Nro_Provincia = 0
    End If
    If (Localidad <> "N/A") And (Provincia <> "N/A") And (Pais <> "N/A") Then
        Call ValidarLocalidad(Localidad, Nro_Localidad, Nro_Pais, Nro_Provincia)
    Else
        Nro_Localidad = 0
    End If
    If Partido <> "N/A" Then
        Call ValidarPartido(Partido, Nro_Partido)
    Else
        Nro_Partido = 0
    End If
    If Zona <> "N/A" Then
        Call ValidarZona(Zona, Nro_Zona, Nro_Provincia)
    Else
        Nro_Zona = 0
    End If
    
    If (IngresoDom = True) And (Nro_Localidad = 0) Then
        Texto = ": " & " - Debe Ingresar la Localidad."
        NroColumna = 23
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    
    If (IngresoDom = True) And (Nro_Provincia = 0) Then
        Texto = ": " & " - Debe Ingresar la Provincia."
        NroColumna = 26
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    
    If (IngresoDom = True) And (Nro_Pais = 0) Then
        Texto = ": " & " - Debe Ingresar la Pais."
        NroColumna = 27
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Telefono
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Legajo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Telefono = Aux
    If Telefono = "N/A" Then
        Telefono = ""
    End If

    'Obra Social
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Obra Social"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    ObraSocial = Aux
    If ObraSocial = "N/A" Or ObraSocial = "" Then
        nro_osocial = 0
    Else
        StrSql = " SELECT ternro FROM osocial WHERE UPPER(osdesc) = '" & UCase(ObraSocial) & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            nro_osocial = rs!Ternro
        Else
            nro_osocial = 0
        End If
    End If

    'Plan de OS
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Plan de Obra Social"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    PlanOSocial = Aux
    If PlanOSocial = "N/A" Or PlanOSocial = "" Then
        nro_planos = 0
    Else
        If nro_osocial <> 0 Then
            StrSql = " SELECT plnro FROM planos WHERE UPPER(plnom) = '" & UCase(PlanOSocial) & "'"
            StrSql = StrSql & " AND osocial = " & nro_osocial
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                nro_planos = rs!plnro
            Else
                nro_planos = 0
            End If
        Else
            nro_planos = 0
        End If
    End If

    'Aviso Emergencia
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Aviso emergencia"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = UCase(Trim(Mid(strReg, pos1, pos2 - pos1 + 1)))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    AvisoEmer = Aux
    If AvisoEmer = "N/A" Or AvisoEmer = "NO" Then
        nro_aviso = 0
    Else
        nro_aviso = -1
    End If

    'Paga Salario fliar
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Paga salario familiar"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = UCase(Trim(Mid(strReg, pos1, pos2 - pos1 + 1)))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    PagaSalario = Aux
    If PagaSalario = "N/A" Or PagaSalario = "NO" Then
        nro_salario = 0
    Else
        nro_salario = -1
    End If

    'Ganancias
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Ganancias"
    pos1 = pos2 + 2
    pos2 = Len(strReg)
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Ganancias = Aux
    If Ganancias = "N/A" Or Ganancias = "NO" Or Ganancias = "N" Then
        nro_gan = 0
    Else
        nro_gan = -1
    End If

' ==================================================================================
' ==================================================================================

'Busco el empleado asociado
StrSql = "SELECT ternro FROM empleado WHERE empleg = " & Legajo
If rs.State = adStateOpen Then rs.Close
OpenRecordset StrSql, rs
If Not rs.EOF Then
    NroEmpleado = rs!Ternro
Else
    Texto = ": " & " - Campo " & Campoetiqueta & " El legajo no existe"
    NroColumna = 1
    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    RegError = RegError + 1
    Exit Sub
End If
  
StrSql = "SELECT * FROM tercero "
StrSql = StrSql & " INNER JOIN ter_tip ON tercero.ternro = ter_tip.ternro AND ter_tip.tipnro = 3 "
StrSql = StrSql & " INNER JOIN familiar ON familiar.ternro = tercero.ternro AND familiar.empleado = " & NroEmpleado
StrSql = StrSql & " WHERE ternom = '" & nombre & "'"
StrSql = StrSql & " AND terape = '" & Apellido & "'"
If rs.State = adStateOpen Then rs.Close
OpenRecordset StrSql, rs
If rs.EOF Then
    'Inserto el tercero asociado al familiar
    StrSql = " INSERT INTO tercero(ternom,terape,terfecnac,tersex,nacionalnro,paisnro,estcivnro)"
    StrSql = StrSql & " VALUES('" & nombre & "','" & Apellido & "'," & Fnac & "," & nro_Sexo & ","
    If nro_nacionalidad <> 0 Then
      StrSql = StrSql & nro_nacionalidad & ","
    Else
      StrSql = StrSql & "Null,"
    End If
    If nro_paisnac <> 0 Then
      StrSql = StrSql & nro_paisnac & ","
    Else
      StrSql = StrSql & "Null,"
    End If
    StrSql = StrSql & nro_estciv & ")"
    objConn.Execute StrSql, , adExecuteNoRecords

    NroTercero = getLastIdentity(objConn, "tercero")
    
    'Inserto el Registro correspondiente en ter_tip
    StrSql = " INSERT INTO ter_tip(ternro,tipnro) VALUES(" & NroTercero & ",3)"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    'Inserto el Familiar
    StrSql = " INSERT INTO familiar(empleado,ternro,parenro,famest,famestudia,famcernac,faminc,famsalario,famemergencia,famcargadgi,osocial,plnro,famternro)"
    StrSql = StrSql & " values(" & NroEmpleado & "," & NroTercero & "," & nro_paren & ",-1," & nro_estudia & ",0," & nro_disc & "," & nro_salario & "," & nro_aviso & "," & nro_gan & "," & nro_osocial & "," & nro_planos & ",0)"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    'Inserto los estudios de familiar
    If nro_estudia = -1 Then
        StrSql = " INSERT INTO estudio_actual (ternro, nivnro) VALUES (" & NroTercero & "," & nro_nivest & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
    End If
    
    Texto = "Inserte el Familiar - " & Legajo & " - " & Apellido & " - " & nombre
    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
Else
    'Actualizo los datos
    StrSql = "UPDATE tercero SET "
    StrSql = StrSql & " terfecnac = " & Fnac
    StrSql = StrSql & " ,tersex = " & nro_Sexo
    If nro_nacionalidad <> 0 Then
        StrSql = StrSql & " ,nacionalnro = " & nro_nacionalidad
    End If
    If nro_paisnac <> 0 Then
        StrSql = StrSql & " ,paisnro = " & nro_paisnac
    End If
    StrSql = StrSql & " WHERE ternro = " & rs!Ternro
    objConn.Execute StrSql, , adExecuteNoRecords

    NroTercero = rs!Ternro

    StrSql = "UPDATE familiar SET "
    StrSql = StrSql & " parenro = " & nro_paren
    StrSql = StrSql & " ,famestudia = " & nro_estudia
    StrSql = StrSql & " ,faminc = " & nro_disc
    StrSql = StrSql & " ,famsalario = " & nro_salario
    StrSql = StrSql & " ,famemergencia = " & nro_aviso
    StrSql = StrSql & " ,famcargadgi = " & nro_gan
    StrSql = StrSql & " ,osocial = " & nro_osocial
    StrSql = StrSql & " ,plnro = " & nro_planos
    StrSql = StrSql & " ,famternro = 0"
    StrSql = StrSql & " WHERE empleado = " & NroEmpleado
    StrSql = StrSql & " AND ternro = " & NroTercero
    objConn.Execute StrSql, , adExecuteNoRecords

    If nro_estudia = -1 Then
        StrSql = " SELECT ternro FROM estudio_actual WHERE ternro = " & NroTercero
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
            StrSql = " INSERT INTO estudio_actual (ternro, nivnro) VALUES (" & NroTercero & "," & nro_nivest & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
        Else
            StrSql = " UPDATE estudio_actual SET nivnro = " & nro_nivest
            StrSql = StrSql & "WHERE ternro = " & NroTercero
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
    
    Else
        'StrSql = " DELETE FROM estudio_actual WHERE ternro = " & NroTercero
        'objConn.Execute StrSql, , adExecuteNoRecords
    End If
    
    Texto = "Familiar actualizado - " & Legajo & " - " & Apellido & " - " & nombre
    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
End If


'Inserto los Documentos
If NroDoc <> "" And NroDoc <> "N/A" And TipDoc <> "N/A" Then
    StrSql = "SELECT * FROM ter_doc WHERE ternro = " & NroTercero
    StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs
    If rs.EOF Then
        StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
        StrSql = StrSql & " VALUES(" & NroTercero & "," & Nro_TDocumento & ",'" & NroDoc & "')"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = ": " & "Inserte el Documento - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
    Else
        StrSql = " UPDATE ter_doc SET "
        StrSql = StrSql & " nrodoc = '" & NroDoc & "'"
        StrSql = StrSql & " WHERE ternro = " & NroTercero
        StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = ": " & "Documento actualizado - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
    End If
End If


'Inserto el Domicilio
If Not IngresoDom = False Then
    StrSql = "SELECT * FROM cabdom  "
    StrSql = StrSql & " WHERE tipnro = 1"
    StrSql = StrSql & " AND ternro = " & NroTercero
    StrSql = StrSql & " AND domdefault = -1"
    StrSql = StrSql & " AND tidonro = 2"
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs
    If rs.EOF Then
        StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
        StrSql = StrSql & " VALUES(1," & NroTercero & ",-1,2)"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        NroDom = getLastIdentity(objConn, "cabdom")
        
        StrSql = " INSERT INTO detdom(domnro,calle,nro,piso,oficdepto,torre,manzana,codigopostal,"
        StrSql = StrSql & "locnro,provnro,paisnro,barrio,partnro,zonanro) "
        StrSql = StrSql & " VALUES (" & NroDom & ",'" & Calle & "','" & Nro_Nrodom & "','" & Piso & "','"
        StrSql = StrSql & Depto & "','" & Torre & "','" & Manzana & "','" & Cpostal & "'," & Nro_Localidad & ","
        StrSql = StrSql & Nro_Provincia & "," & Nro_Pais & ",'" & Barrio & "'," & Nro_Partido & "," & Nro_Zona & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = ": " & "Domicilio Insertado - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)

        If Telefono <> "" Then
            'sebastian stremel le agrege tipo de telefono
            'StrSql = " INSERT INTO telefono(domnro,telnro,teldefault) "
            StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
            'StrSql = StrSql & " VALUES(" & NroDom & ",'" & Telefono & "',-1)"
            StrSql = StrSql & " VALUES(" & NroDom & ",'" & Telefono & "',0,-1,0,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            Texto = ": " & "Inserte el Telefono Principal - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        End If
    Else
        StrSql = " UPDATE detdom SET "
        StrSql = StrSql & " calle =" & "'" & Calle & "'"
        StrSql = StrSql & ",nro =" & "'" & Nro_Nrodom & "'"
        StrSql = StrSql & ",piso =" & "'" & Piso & "'"
        StrSql = StrSql & ",oficdepto =" & "'" & Depto & "'"
        StrSql = StrSql & ",torre =" & "'" & Torre & "'"
        StrSql = StrSql & ",manzana =" & "'" & Manzana & "'"
        StrSql = StrSql & ",codigopostal =" & "'" & Cpostal & "'"
        StrSql = StrSql & ",entrecalles =" & "'" & Entre & "'"
        StrSql = StrSql & ",locnro =" & Nro_Localidad
        StrSql = StrSql & ",provnro =" & Nro_Provincia
        StrSql = StrSql & ",paisnro =" & Nro_Pais
        StrSql = StrSql & ", partnro = " & Nro_Partido
        StrSql = StrSql & ", zonanro =" & Nro_Zona
        StrSql = StrSql & " WHERE domnro = " & rs!domnro
        objConn.Execute StrSql, , adExecuteNoRecords
    
        Texto = ": " & "Domicilio Actualizado - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
    
        If Telefono <> "" Then
            StrSql = "SELECT * FROM telefono "
            StrSql = StrSql & " WHERE domnro =" & rs!domnro
            StrSql = StrSql & " AND telnro ='" & Telefono & "'"
            If rs_Tel.State = adStateOpen Then rs_Tel.Close
            OpenRecordset StrSql, rs_Tel
            If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & Telefono & "',0,-1,0,1)"
                objConn.Execute StrSql, , adExecuteNoRecords
                  
                Texto = ": " & "Inserte el Telefono Principal - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
    End If
End If

OK = True

'Cierro y libero
If rs.State = adStateOpen Then rs.Close
If rs_Tel.State = adStateOpen Then rs_Tel.Close
Set rs = Nothing
Set rs_Tel = Nothing


Exit Sub
SaltoLinea:
    Texto = ": " & Err.Description
    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, strReg)
    MyRollbackTrans
    OK = False
End Sub


Public Sub LineaModelo_601(ByVal strReg As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de Familiares Customizada - Goyaike
' Autor      : MAB
' Fecha      :
' Ultima Mod.: 27/04/2005 - FGZ
' Descripcion: Estandarizacion
' ---------------------------------------------------------------------------------------------
Dim Legajo          As Long ' Legajo del Empleado
Dim Apellido        As String  ' Apellido del Familiar
Dim nombre          As String  ' Nombre del Familiar
Dim NroOSL          As String
Dim NroOSE          As String
Dim OSE             As String
Dim PlanOSE         As String
Dim PlanOdon        As String
Dim Beca            As String
Dim FPC             As String
Dim Seguro          As String

Dim pos1            As Long
Dim pos2            As Long

Dim NroTercero      As Long
Dim NroEmpleado     As Long
Dim NroFamiliar     As Long
Dim CodTerFam       As String
Dim nro_seg             As Long
Dim Inserto_estr        As Boolean

Dim StrSql          As String
Dim rs              As New ADODB.Recordset

    LineaCarga = LineaCarga + 1
    Tabs = 1
    
    On Error GoTo SaltoLinea
    
    Flog.writeline
    FlogE.writeline
    FlogP.writeline
    
    'Legajo
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Legajo"
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        Exit Sub
    End If
    Legajo = Aux
    
    'Apellido
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Apellido"
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        Exit Sub
    End If
    Apellido = Left(Aux, 25)
    
    'Nombre
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Nombre"
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        Exit Sub
    End If
    nombre = Left(Aux, 25)

    'Obra Social por Ley
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Obra social por ley"
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        Exit Sub
    End If
    NroOSL = Aux
    If NroOSL = "N/A" Then
        NroOSL = ""
    End If
    
    'Obra Social Elegida
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Obra social Elegida"
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        Exit Sub
    End If
    OSE = Aux
    If OSE = "N/A" Then
        OSE = ""
    End If
    
    'Notas
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Obra social Elegida"
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        Exit Sub
    End If
    NroOSE = Aux
    If NroOSE = "N/A" Then
        NroOSE = ""
    End If
    
    'Plan Obra Social Elegida
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Obra social Elegida"
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        Exit Sub
    End If
    PlanOSE = Aux
    If PlanOSE = "N/A" Then
        PlanOSE = ""
    End If
    
    'Notas
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Obra social Elegida"
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        Exit Sub
    End If
    PlanOdon = Aux
    If PlanOdon = "N/A" Then
        PlanOdon = ""
    End If
    
    'Beca
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Obra social Elegida"
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        Exit Sub
    End If
    Beca = Aux
    If Beca = "N/A" Then
        Beca = ""
    End If
    
    'Notas
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Obra social Elegida"
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        Exit Sub
    End If
    FPC = Aux
    If FPC = "N/A" Then
        FPC = ""
    End If
    
    'Seguro
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Obra social Elegida"
    pos1 = 1
    pos2 = Len(strReg)
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        Exit Sub
    End If
    Seguro = Aux
    If Seguro = "N/A" Or Seguro = "NO" Then
        nro_seg = 0
    Else
        nro_seg = -1
    End If
'========================================================================
'========================================================================

'Busco el empleado asociado
StrSql = "SELECT ternro FROM empleado WHERE empleg = " & Legajo
OpenRecordset StrSql, rs
If Not rs.EOF Then
    NroEmpleado = rs!Ternro
Else
    Texto = ": " & " - Campo " & Campoetiqueta & " El legajo no existe"
    NroColumna = 1
    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    HuboError = True
    Exit Sub
End If
    

  
' Busco al familiar por el nombre y apellido
  StrSql = "SELECT familiar.ternro FROM familiar "
  StrSql = StrSql & " INNER JOIN tercero ON tercero.ternro = familiar.ternro "
  StrSql = StrSql & " WHERE familiar.empleado = " & NroEmpleado
  StrSql = StrSql & " AND tercero.terape = '" & Apellido & "'"
  StrSql = StrSql & " AND tercero.ternom = '" & nombre & "'"
  OpenRecordset StrSql, rs
  
  NroFamiliar = 0
  
  If Not rs.EOF Then
    NroFamiliar = rs!Ternro
    ' Inserto las Notas
    If NroOSL <> "" Then
      StrSql = " INSERT INTO notas_ter(ternro,tnonro,notatxt)"
      StrSql = StrSql & " VALUES(" & NroFamiliar & ",26,'" & NroOSL & "')"
      objConn.Execute StrSql, , adExecuteNoRecords
      
      Texto = Apellido & ", " & nombre & " - Inserto NroOSL"
      Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    
    If OSE <> "" Then
      StrSql = " INSERT INTO notas_ter(ternro,tnonro,notatxt)"
      StrSql = StrSql & " VALUES(" & NroFamiliar & ",27,'" & OSE & "')"
      objConn.Execute StrSql, , adExecuteNoRecords
      
      Texto = Apellido & ", " & nombre & " - Inserto OSE"
      Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    
    If NroOSE <> "" Then
      StrSql = " INSERT INTO notas_ter(ternro,tnonro,notatxt)"
      StrSql = StrSql & " VALUES(" & NroFamiliar & ",6,'" & NroOSE & "')"
      objConn.Execute StrSql, , adExecuteNoRecords
      Flog.writeline Apellido & ", " & nombre & " - Inserto NroOSE"
    End If
    If PlanOSE <> "" Then
      StrSql = " INSERT INTO notas_ter(ternro,tnonro,notatxt)"
      StrSql = StrSql & " VALUES(" & NroFamiliar & ",28,'" & PlanOSE & "')"
      objConn.Execute StrSql, , adExecuteNoRecords
      
      Texto = Apellido & ", " & nombre & " - Inserto PlanOSE"
      Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    
    If PlanOdon <> "" Then
      StrSql = " INSERT INTO notas_ter(ternro,tnonro,notatxt)"
      StrSql = StrSql & " VALUES(" & NroFamiliar & ",29,'" & PlanOdon & "')"
      objConn.Execute StrSql, , adExecuteNoRecords
      
      Texto = Apellido & ", " & nombre & " - Inserto PlanOdon"
      Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    
    If Beca <> "" Then
      StrSql = " INSERT INTO notas_ter(ternro,tnonro,notatxt)"
      StrSql = StrSql & " VALUES(" & NroFamiliar & ",30,'" & Beca & "')"
      objConn.Execute StrSql, , adExecuteNoRecords
      
      Texto = Apellido & ", " & nombre & " - Inserto Beca"
      Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    
    If FPC <> "" Then
      StrSql = " INSERT INTO notas_ter(ternro,tnonro,notatxt)"
      StrSql = StrSql & " VALUES(" & NroFamiliar & ",31,'" & FPC & "')"
      objConn.Execute StrSql, , adExecuteNoRecords
      
      Texto = Apellido & ", " & nombre & " - Inserto FPC"
      Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
  End If
  
  If NroFamiliar <> 0 Then
    ' Asigno Benef. Seguro de Vida
    StrSql = "UPDATE familiar SET fambensegvida = " & nro_seg
    StrSql = StrSql & " WHERE familiar.ternro = " & NroFamiliar
    objConn.Execute StrSql, , adExecuteNoRecords
  End If
  
  
'Cierro y libero
If rs.State = adStateOpen Then rs.Close
Set rs = Nothing

Exit Sub
SaltoLinea:
    Texto = ": " & Err.Description
    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, strReg)
    MyRollbackTrans
    OK = False
End Sub

Public Sub LineaModelo_602(ByVal strReg As String, ByRef OK As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de Familiares
' Autor      : Gustavo Ring
' Fecha      :
' Ultima Mod.: 11/01/2008 - Se cambio de modelo 662 a 602.
' Descripcion: Mejora al modelo 600
' Ultima Mod.: 12/04/2010 - FGZ - se agregaron los campos opcionales de Item de DDJJ y año de DDJJ.
' Descripcion:  si Ganancias es SI ==> analiza si se cargó el item de DDJJ y para que año
' Ultima Mod.: 07/06/2010 - EGO - se cambio el campo opcional de año de DDJJ por los campos desde y hasta fecha de DDJJ.
'              03-12-2010 - Leticia A. - elimina caracteres invalidos de diferentes campos.
'              13-12-2010 - L A. - eliminar cartel msgbox()en chequeo de documento
'              05/07/2013 - Gonzalez Nicolás - CAS-19167 -  RAPSODIA - Mejora interfaz familiares -Se agregaron 4 campos nuevos.
'              Tipo Documento 2,Nro.Documento 2,Guarderia,Fecha vencimiento Guarderia

' ---------------------------------------------------------------------------------------------

Dim Legajo          As Long    ' Legajo del Empleado
Dim Apellido        As String  ' Apellido del Familiar
Dim nombre          As String  ' Nombre del Familiar
Dim Fnac            As String  ' Fecha de Nacimiento del Familiar
Dim NAC             As String  ' Nacionalidad del Familiar
Dim PaisNac         As String  ' Pais de Nacimiento
Dim EstCiv          As String  ' Estado Civil
Dim Sexo            As String  ' Sexo del Familiar
Dim GPare           As String  ' Grado de Parentesco
Dim Disc            As String  ' Discapacitado
Dim Estudia         As String  ' Estudia
Dim NivEst          As String  ' Nivel de Estudio
Dim TipDoc          As String  ' Tipo de Documento del Familiar
Dim NroDoc          As String  ' Nº de Documento del Familiar
Dim Calle           As String   'Calle                    -- detdom.calle
Dim Nro             As String   'Número                   -- detdom.nro
Dim Piso            As String   'Piso                     -- detdom.piso
Dim Depto           As String   'Depto                    -- detdom.depto
Dim Torre           As String   'Torre                    -- detdom.torre
Dim Manzana         As String   'Manzana                  -- detdom.manzana
Dim Cpostal         As String   'Cpostal                  -- detdom.codigopostal
Dim Entre           As String   'Entre Calles             -- detdom.entrecalles
Dim Barrio          As String   'Barrio                   -- detdom.barrio
Dim Localidad       As String   'Localidad                -- detdom.locnro
Dim Partido         As String   'Partido                  -- detdom.partnro
Dim Zona            As String   'Zona                     -- detdom.zonanro
Dim Provincia       As String   'Provincia                -- detdom.provnro
Dim Pais            As String   'Pais                     -- detdom.paisnro
Dim Telefono        As String   'Telefono                 -- telefono.telnro
Dim ObraSocial      As String   'Obra Social
Dim PlanOSocial     As String   'Plan Obra Social
Dim AvisoEmer       As String   'Aviso ante Emergencia
Dim PagaSalario     As String   'Paga Salario Familiar
Dim Ganancias       As String   'Se lo toma para ganancias
Dim fechaInicio     As String   ' Fecha de inicio de familiar
Dim fechaVto        As String   ' Fecha de vencimiento de familiar
Dim Cuil            As String  ' CUIL del Familiar
Dim ESC             As String  ' Escolaridad
Dim GRADO           As String  ' Grado al que concurre
Dim NroTDoc         As String

Dim TipDoc2          As String  ' Tipo de Documento 2 del Familiar
Dim NroDoc2          As String  ' Nº de Documento 2 del Familiar
Dim Guarderia        As String  ' SI/NO
Dim FechaGuarderia   As String  ' DD/MM/AAAA
Dim Nro_TDocumento2  As Long


Dim pos1            As Long
Dim pos2            As Long

Dim NroTercero      As Long
Dim NroEmpleado     As Long
Dim CodTerFam       As String
Dim Nro_Nrodom      As String
Dim NroDom          As Long
Dim Nro_TDocumento  As Long
Dim nro_nacionalidad As Long
Dim nro_paisnac      As Long
Dim nro_estciv      As Long
Dim nro_Sexo        As Long
Dim nro_estudia     As Long
Dim nro_nivest      As String
Dim nro_osocial     As Long
Dim nro_planos      As Long
Dim nro_aviso       As Long
Dim nro_salario     As Long
Dim nro_gan         As Long
Dim nro_disc        As Long
Dim nro_paren        As Long
Dim Nro_Barrio          As Long
Dim Nro_Localidad       As Long
Dim Nro_Partido         As Long
Dim Nro_Zona            As Long
Dim Nro_Provincia       As Long
Dim Nro_Pais            As Long
Dim OSocial             As String
Dim ter_osocial         As Long
Dim Inserto_estr        As Boolean
Dim IngresoDom          As Boolean
Dim Nro_Institucion As Long

Dim Item_DDJJ         As Long
Dim Anio_DDJJ         As String
Dim Desde_DDJJ        As String
Dim Hasta_DDJJ        As String

Dim rs_Sql          As New ADODB.Recordset
Dim rs              As New ADODB.Recordset
Dim rs_Tel          As New ADODB.Recordset
Dim rs_Doc          As New ADODB.Recordset
Dim b
Dim a

'-----------MDF-------------
Dim fecdocu
Dim acta
Dim tomo
Dim folio
Dim tribunal
Dim juzgado
Dim secretaria
Dim comuna
'-------- fin MDF-----


    LineaCarga = LineaCarga + 1
    Tabs = 1
    
    On Error GoTo SaltoLinea
    
    Flog.writeline
    FlogE.writeline
    FlogP.writeline
    
    'Legajo
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Legajo"
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If IsNumeric(Aux) Then
        Legajo = Aux
    Else
        Texto = ": " & "El legajo no es numerico "
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        InsertaError 1, 8
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Apellido
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Apellido"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 0, "")
    Apellido = Left(Aux, 25)
    
    'Nombre
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Nombre"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 0, "")
    nombre = Left(Aux, 25)
    
    'Fecha de Nacimiento
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Fecha de Nacimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Fnac = Aux
    If Fnac = "N/A" Or EsNulo(Fnac) Then
        Fnac = "Null"
    End If
    
    'Pais de Nacimiento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Pais de Nacimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    PaisNac = Aux
    If PaisNac <> "N/A" Then
        StrSql = " SELECT paisnro FROM pais WHERE UPPER(paisdesc) = '" & UCase(PaisNac) & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            nro_paisnac = rs!Paisnro
        Else
            StrSql = " INSERT INTO pais(paisdesc,paisdef) VALUES ('" & UCase(PaisNac) & "',0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_paisnac = getLastIdentity(objConn, "pais")
        End If
    Else
        nro_paisnac = 0
    End If
    
    'Nacionalidad
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Nacionalidad"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    NAC = UCase(Aux)
    If NAC <> "N/A" And Not EsNulo(NAC) Then
        StrSql = " SELECT nacionalnro FROM nacionalidad WHERE upper(nacionaldes) = '" & NAC & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            nro_nacionalidad = rs!nacionalnro
        Else
            StrSql = " INSERT INTO nacionalidad(nacionaldes) VALUES ('" & UCase(NAC) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_nacionalidad = getLastIdentity(objConn, "nacionalidad")
        End If
    Else
        nro_nacionalidad = 0
    End If
    If nro_nacionalidad = 0 Then
        Texto = ": " & " - Debe ingresar Nacionalidad."
        NroColumna = 5
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    
    
    'Estado Civil
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Estado Civil"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    EstCiv = Left(UCase(Aux), 30)
    If EstCiv <> "N/A" And Not EsNulo(EstCiv) Then
        StrSql = " SELECT estcivnro FROM estcivil WHERE upper(estcivdesabr) = '" & UCase(EstCiv) & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            nro_estciv = rs!estcivnro
        Else
            StrSql = " INSERT INTO estcivil(estcivdesabr) VALUES ('" & UCase(EstCiv) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_estciv = getLastIdentity(objConn, "estcivil")
        End If
    Else
        nro_estciv = 0
    End If
    If nro_estciv = 0 Then
        Texto = ": " & " - Debe ingresar Estado Civil."
        NroColumna = 6
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Sexo
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Sexo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Sexo = UCase(Aux)
    If Sexo = "M" Or Sexo = "MASCULINO" Or Sexo = "-1" Then
        nro_Sexo = -1
    Else
        nro_Sexo = 0
    End If
    
    'Parentesco
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Parentesco"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    GPare = UCase(Aux)
    StrSql = " SELECT parenro FROM parentesco WHERE upper(paredesc) = '" & UCase(GPare) & "'"
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        nro_paren = rs!parenro
    Else
        nro_paren = 0
    End If
    If nro_paren = 0 Then
        Texto = ": " & " - El parentesco ingresado no existe, verifíquelo." & GPare
        NroColumna = 8
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Discapacitado
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Discapacitado"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Disc = UCase(Aux)
    If Disc = "N/A" Or Disc = "NO" Then
        nro_disc = 0
    Else
        nro_disc = -1
    End If
    
    'Estudia
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estudia"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = UCase(Trim(Mid(strReg, pos1, pos2 - pos1 + 1)))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Estudia = Aux
    If Estudia = "N/A" Or Estudia = "NO" Then
        nro_estudia = 0
    Else
        nro_estudia = -1
    End If
    
    'Nivel de estudio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nivel de estudio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = UCase(Trim(Mid(strReg, pos1, pos2 - pos1 + 1)))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    NivEst = Aux
    'Por ahora no hago nada con el nivel de estudio porque en Accor no lo pasaron
    If NivEst = "N/A" Or EsNulo(NivEst) Then
        'StrSql = " SELECT nivnro FROM nivest WHERE nivdes = '" & NivEst & "'"
        'OpenRecordset StrSql, rs
        nro_nivest = 0
    Else
        'busco el primer novel de estudio, si no existe la creo
        StrSql = " SELECT * FROM nivest WHERE nivdesc = '" & NivEst & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            nro_nivest = rs!nivnro
        Else
            'creo una
            StrSql = " INSERT INTO nivest (nivdesc) VALUES ('" & NivEst & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_nivest = getLastIdentity(objConn, "nivest")
        End If
     End If

    'Tipo de Doc
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Tipo de Doc"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    TipDoc = Aux
    If TipDoc <> "N/A" And Not EsNulo(TipDoc) Then
        StrSql = " SELECT tidnro FROM tipodocu WHERE UPPER(tidsigla) = '" & UCase(TipDoc) & "'"
        If rs_Sql.State = adStateOpen Then rs_Sql.Close
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            Nro_TDocumento = rs_Sql!tidnro
        Else
            'busco la primera institucion, si no existe la creo
            StrSql = " SELECT * FROM institucion "
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                Nro_Institucion = rs!InstNro
            Else
                'creo una
                StrSql = " INSERT INTO institucion (instdes,instabre) VALUES ('NACIONAL','NAC')"
                objConn.Execute StrSql, , adExecuteNoRecords
                Nro_Institucion = getLastIdentity(objConn, "institucion")
            End If
            'creo el tipo de documento
            StrSql = " INSERT INTO tipodocu(tidnom,tidsigla,tidsist,instnro,tidunico) VALUES ('" & UCase(TipDoc) & "','" & UCase(TipDoc) & "',0," & Nro_Institucion & ",0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            Nro_TDocumento = getLastIdentity(objConn, "tipodocu")
        End If
    Else
        Nro_TDocumento = 0
    End If
    
    'Nro de Doc
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Nro de Doc"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    NroDoc = Aux
    If NroDoc = "N/A" Or EsNulo(NroDoc) Then
        NroDoc = "0"
    End If
    
    'Calle
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Calle"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Calle = Left(Aux, 250)
    IngresoDom = True
    If Calle = "N/A" Or EsNulo(Calle) Then
        Calle = ""
        IngresoDom = False
    End If
    
    'Nro
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nro"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Nro = Left(Aux, 8)
    If (Nro <> "N/A") And Not EsNulo(Nro) Then
        Nro_Nrodom = Nro
    Else
        Nro_Nrodom = "S/N"
    End If
    
    'Piso
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Piso"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Piso = Left(Aux, 8)
    If Piso = "N/A" Then
        Piso = ""
    End If
    
    'Depto
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Depto"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Depto = Left(Aux, 8)
    If Depto = "N/A" Then
        Depto = ""
    End If

    'Torre
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Torre"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Torre = Left(Aux, 8)
    If Torre = "N/A" Then
        Torre = ""
    End If
    
    'Manzana
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Manzana"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Manzana = Left(Aux, 8)
    If Manzana = "N/A" Then
        Manzana = ""
    End If

    'Codigo postal
    NroColumna = NroColumna + 1
    Obligatorio = IngresoDom
    Campoetiqueta = "Codigo postal"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Cpostal = Left(Aux, 12)
    If Cpostal = "N/A" Then
        Cpostal = ""
    End If

    'Entre calles
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Entre calles"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Entre = Left(Aux, 80)
    If Entre = "N/A" Then
        Entre = ""
    End If

    'Barrio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Barrio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Barrio = Left(Aux, 30)
    If Barrio = "N/A" Then
        Barrio = ""
    End If

    'Localidad
    NroColumna = NroColumna + 1
    Obligatorio = IngresoDom
    Campoetiqueta = "Localidad"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    '19/03/2010 - Se cambio la longitud a 60
    'Localidad = aux
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Localidad = Left(Aux, 60)
    
    'Partido
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Partido"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Partido = Aux
    
    'Zona
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Zona"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    '19/03/2010 - Se cambio la longitud a 60
    'Zona = aux
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Zona = Left(Aux, 60)
    
    'Provincia
    NroColumna = NroColumna + 1
    Obligatorio = IngresoDom
    Campoetiqueta = "Provincia"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Provincia = Aux
    
    'Pais
    NroColumna = NroColumna + 1
    Obligatorio = IngresoDom
    Campoetiqueta = "Pais"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Pais = Aux
    If Pais <> "N/A" Then
        Call ValidarPais(Pais, Nro_Pais)
    Else
        Nro_Pais = 0
    End If
    If (Provincia <> "N/A") And (Pais <> "N/A") Then
        Call ValidarProvincia(Provincia, Nro_Provincia, Nro_Pais)
    Else
        Nro_Provincia = 0
    End If
    If (Localidad <> "N/A") And (Provincia <> "N/A") And (Pais <> "N/A") Then
        Call ValidarLocalidad(Localidad, Nro_Localidad, Nro_Pais, Nro_Provincia)
    Else
        Nro_Localidad = 0
    End If
    If Partido <> "N/A" Then
        Call ValidarPartido(Partido, Nro_Partido)
    Else
        Nro_Partido = 0
    End If
    If Zona <> "N/A" Then
        Call ValidarZona(Zona, Nro_Zona, Nro_Provincia)
    Else
        Nro_Zona = 0
    End If
    
    If (IngresoDom = True) And (Nro_Localidad = 0) Then
        Texto = ": " & " - Debe Ingresar la Localidad."
        NroColumna = 23
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    
    If (IngresoDom = True) And (Nro_Provincia = 0) Then
        Texto = ": " & " - Debe Ingresar la Provincia."
        NroColumna = 26
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    
    If (IngresoDom = True) And (Nro_Pais = 0) Then
        Texto = ": " & " - Debe Ingresar la Pais."
        NroColumna = 27
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Telefono
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Legajo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If Aux = "N/A" Then
        Telefono = ""
    Else
        Aux = EliminarCHInvalidosII(Aux, 3, "")
        Telefono = Aux
    End If

        
    'Obra Social
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Obra Social"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    ObraSocial = Aux
    If ObraSocial = "N/A" Or ObraSocial = "" Then
        nro_osocial = 0
    Else
        StrSql = " SELECT ternro FROM osocial WHERE UPPER(osdesc) = '" & UCase(ObraSocial) & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            nro_osocial = rs!Ternro
        Else
            nro_osocial = 0
        End If
    End If

    'Plan de OS
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Plan de Obra Social"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    PlanOSocial = Aux
    If PlanOSocial = "N/A" Or PlanOSocial = "" Then
        nro_planos = 0
    Else
        If nro_osocial <> 0 Then
            StrSql = " SELECT plnro FROM planos WHERE UPPER(plnom) = '" & UCase(PlanOSocial) & "'"
            StrSql = StrSql & " AND osocial = " & nro_osocial
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                nro_planos = rs!plnro
            Else
                nro_planos = 0
            End If
        Else
            nro_planos = 0
        End If
    End If

    'Aviso Emergencia
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Aviso emergencia"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = UCase(Trim(Mid(strReg, pos1, pos2 - pos1 + 1)))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    AvisoEmer = Aux
    If AvisoEmer = "N/A" Or AvisoEmer = "NO" Then
        nro_aviso = 0
    Else
        nro_aviso = -1
    End If

    'Paga Salario fliar
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Paga salario familiar"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = UCase(Trim(Mid(strReg, pos1, pos2 - pos1 + 1)))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    PagaSalario = Aux
    If PagaSalario = "N/A" Or PagaSalario = "NO" Then
        nro_salario = 0
    Else
        nro_salario = -1
    End If

    'Ganancias
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Ganancias"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1)) 'mdf +1
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Ganancias = Aux
    If Ganancias = "N/A" Or Ganancias = "NO" Or Ganancias = "N" Then
        nro_gan = 0
    Else
        nro_gan = -1
    End If


    'Fecha de Inicio del vinculo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de Inicio de Vinculo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    fechaInicio = Aux
    If fechaInicio = "N/A" Or EsNulo(fechaInicio) Then
        fechaInicio = "Null"
    End If
    If fechaInicio = "Null" Then
        ' Busco la fecha de alta reconocida
         Campoetiqueta = " Fecha de alta reconocida del empleado "
         StrSql = "SELECT altfec FROM fases "
         StrSql = StrSql & " INNER JOIN empleado ON empleado.ternro = fases.empleado "
         StrSql = StrSql & " WHERE empleg = " & Legajo
         StrSql = StrSql & " AND fasrecofec = -1 "
         OpenRecordset StrSql, rs
         If rs.EOF Then
             Texto = ": " & " - Campo " & Campoetiqueta & " no esta configurado para el empleado "
             NroColumna = 1
             Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
             Exit Sub
         End If
         'Calculo la fecha de Inicio
         If IsDate(Fnac) Then
             If CDate(rs!altfec) > CDate(Fnac) Then
                     fechaInicio = rs!altfec
             Else
                     fechaInicio = Fnac
             End If
         Else
             Texto = ": " & " - Campo Fecha de Nacimiento del familiar no es válida.El formato es (dd/mm/aaaa) "
             NroColumna = 1
             Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
             Exit Sub
         End If
    End If


   'Fecha Vto
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de Vencimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    'pos2 = Len(strReg)
    If pos2 <= pos1 Then
        pos2 = Len(strReg)
        
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        ' Es obligatoria si el empleado paga salario familiar
        If nro_salario = -1 Then
            Obligatorio = True
        Else
            Obligatorio = False
        End If
        
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            Exit Sub
            If Not IsDate(Aux) Then
                Texto = ": " & " - Campo " & Campoetiqueta & " con valor: " & Aux & " no tiene un formato de fecha válido (dd/mm/aaaa)."
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                Exit Sub
            End If
        End If
        fechaVto = Aux
        If fechaVto = "N/A" Or EsNulo(fechaVto) Then
            fechaVto = "Null"
        End If
    Else
    
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        ' Es obligatoria si el empleado paga salario familiar
        If nro_salario = -1 Then
            Obligatorio = True
        Else
            Obligatorio = False
        End If
        
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            Exit Sub
            If Not IsDate(Aux) Then
                Texto = ": " & " - Campo " & Campoetiqueta & " con valor: " & Aux & " no tiene un formato de fecha válido (dd/mm/aaaa)."
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                Exit Sub
            End If
        End If
        fechaVto = Aux
        If fechaVto = "N/A" Or EsNulo(fechaVto) Then
            fechaVto = "Null"
        End If
    
        Item_DDJJ = 0
      
        'Nro de Item
        NroColumna = NroColumna + 1
        Obligatorio = False
        Campoetiqueta = "ITEM DDJJ"
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        Else
            
            If Aux = "N/A" Or EsNulo(Aux) Then
                Item_DDJJ = 0
            Else
                Item_DDJJ = Aux
            End If
            If CBool(nro_gan) Then
                StrSql = "SELECT itenro FROM item WHERE itenro = " & Item_DDJJ
                OpenRecordset StrSql, rs
                If rs.EOF Then
                    Texto = ": " & " - Campo " & Campoetiqueta & " no se encuentra"
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                End If
            End If
        End If
        
        'EGO - 07/06/2010 - fechas DDJJ
        
        Desde_DDJJ = 0
        'Desde fecha de DDJJ
        NroColumna = NroColumna + 1
        Obligatorio = False
        Campoetiqueta = "Fecha desde DDJJ"
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Desde_DDJJ = Aux
        If Desde_DDJJ = "N/A" Or EsNulo(Desde_DDJJ) Then
            Desde_DDJJ = "Null"
        End If
        
        Hasta_DDJJ = 0
        'Hasta fecha de DDJJ
        NroColumna = NroColumna + 1
        Obligatorio = False
        Campoetiqueta = "Fecha hasta DDJJ"
        pos1 = pos2 + 2
        'pos2 = Len(strReg)
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Hasta_DDJJ = Aux
        If Hasta_DDJJ = "N/A" Or EsNulo(Desde_DDJJ) Then
            Hasta_DDJJ = "Null"
        End If
        
    End If
    
    
'-------------------------------------------------
'-------------------------------------------------
    'TIPO DOCUMENTO 2
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tipo de Documento 2"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))

    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Or (TipDoc = Aux) Then
    
        If (TipDoc = Aux) Then
            Texto = ": " & " - Campo " & Campoetiqueta & " no puede ser el mismo tipo de doc. que el Documento 1"
        Else
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        End If
        
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    TipDoc2 = Aux
    If TipDoc2 <> "N/A" And Not EsNulo(TipDoc2) Then
        StrSql = " SELECT tidnro FROM tipodocu WHERE UPPER(tidsigla) = '" & UCase(TipDoc2) & "'"
        If rs_Sql.State = adStateOpen Then rs_Sql.Close
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            Nro_TDocumento2 = rs_Sql!tidnro
        Else
            'busco la primera institucion, si no existe la creo
            StrSql = " SELECT * FROM institucion "
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                Nro_Institucion = rs!InstNro
            Else
                'creo una
                StrSql = " INSERT INTO institucion (instdes,instabre) VALUES ('NACIONAL','NAC')"
                objConn.Execute StrSql, , adExecuteNoRecords
                Nro_Institucion = getLastIdentity(objConn, "institucion")
            End If
            'creo el tipo de documento
            StrSql = " INSERT INTO tipodocu(tidnom,tidsigla,tidsist,instnro,tidunico) VALUES ('" & UCase(TipDoc2) & "','" & UCase(TipDoc2) & "',0," & Nro_Institucion & ",0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            Nro_TDocumento2 = getLastIdentity(objConn, "tipodocu")
        End If
    Else
        Nro_TDocumento2 = 0
        
    End If
    
    
    If Nro_TDocumento2 <> 0 Then
        'Nro de Doc
        NroColumna = NroColumna + 1
        Obligatorio = True
        Campoetiqueta = "Nro de Documento 2"
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        NroDoc2 = Aux
        If NroDoc2 = "N/A" Or EsNulo(NroDoc2) Then
            NroDoc2 = "0"
        End If
    Else
        NroDoc2 = "0"
        pos1 = pos2 + 2 'mdf
        pos2 = InStr(pos1, strReg, separador) - 1 'mdf
    End If
    
    '____________________________________________________
    'GUARDERÍA
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Guardería"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = UCase(Trim(Mid(strReg, pos1, pos2 - pos1 + 1)))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    
    If Aux = "N/A" Or Aux = "NO" Then
        pos1 = pos2 + 2 'mdf
        pos2 = InStr(pos1, strReg, separador) - 1 'mdf
        Guarderia = 0
        FechaGuarderia = "Null"
    Else
        Guarderia = -1
        'FechaGuarderia
        NroColumna = NroColumna + 1
        Obligatorio = True
        Campoetiqueta = "Fecha Guarderia"
        pos1 = pos2 + 2
        'pos2 = Len(strReg)mdf
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            Exit Sub
            If Not IsDate(Aux) Then
                Texto = ": " & " - Campo " & Campoetiqueta & " con valor: " & Aux & " no tiene un formato de fecha válido (dd/mm/aaaa)."
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                Exit Sub
            End If
        End If
        FechaGuarderia = Aux
        If FechaGuarderia = "N/A" Or EsNulo(FechaGuarderia) Then
            FechaGuarderia = "Null"
        End If
    End If
    
'--------------------------------------------------------------------------------------------
'MDF agrego: fecha de documentacion, acta, tomo, folio, tribunal,juzgado, secretaria, comuna
'--------------------------------------------------------------------------------------------
    
    
   'fecha de la documentacion (famfecadopcion, campo en la tabla familiar)
   NroColumna = NroColumna + 1
   Obligatorio = False
   Campoetiqueta = "fecha de documentacion"
   pos1 = pos2 + 2
   pos2 = InStr(pos1, strReg, separador) - 1
   Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
   If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
       Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
       Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
       RegError = RegError + 1
       Exit Sub
       If Not IsDate(Aux) Then
          Texto = ": " & " - Campo " & Campoetiqueta & " con valor: " & Aux & " no tiene un formato de fecha válido (dd/mm/aaaa)."
          Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
          RegError = RegError + 1
          Exit Sub
       End If
   End If
   fecdocu = Aux
   If (Aux = "N/A") Then
    fecdocu = "Null"
   End If
 
  
   'Acta (famceracta, campo en la tabla familiar)
   NroColumna = NroColumna + 1
   Obligatorio = False
   Campoetiqueta = "Acta"
   pos1 = pos2 + 2
   pos2 = InStr(pos1, strReg, separador) - 1
   Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
   If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
      Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
      Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
      RegError = RegError + 1
      Exit Sub
   End If
   acta = Aux
   If (Aux = "N/A") Then
      acta = "Null"
   End If
   
   'Tomo (famcertomo, campo en la tabla familiar)
   NroColumna = NroColumna + 1
   Obligatorio = False
   Campoetiqueta = "Tomo"
   pos1 = pos2 + 2
   pos2 = InStr(pos1, strReg, separador) - 1
   Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
   If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
      Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
      Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
      RegError = RegError + 1
      Exit Sub
   End If
   tomo = Aux
   If (Aux = "N/A") Then
      tomo = "Null"
   End If
   
    'Folio (famcerfolio, campo en la tabla familiar)
   NroColumna = NroColumna + 1
   Obligatorio = False
   Campoetiqueta = "Folio"
   pos1 = pos2 + 2
   pos2 = InStr(pos1, strReg, separador) - 1
   Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
   If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
      Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
      Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
      RegError = RegError + 1
      Exit Sub
   End If
   folio = Aux
   If (Aux = "N/A") Then
      folio = "Null"
   End If
   
   'Tribunal (famtribunal, campo en la tabla familiar)
   NroColumna = NroColumna + 1
   Obligatorio = False
   Campoetiqueta = "Tribunal"
   pos1 = pos2 + 2
   pos2 = InStr(pos1, strReg, separador) - 1
   Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
   If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
      Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
      Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
      RegError = RegError + 1
      Exit Sub
   End If
   tribunal = Aux
   If (Aux = "N/A") Then
      tribunal = "Null"
   End If
   
   'Juzgado (famjuzgado, campo en la tabla familiar)
   NroColumna = NroColumna + 1
   Obligatorio = False
   Campoetiqueta = "Juzgado"
   pos1 = pos2 + 2
   pos2 = InStr(pos1, strReg, separador) - 1
   Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
   If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
      Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
      Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
      RegError = RegError + 1
      Exit Sub
   End If
   juzgado = Aux
   If (Aux = "N/A") Then
      juzgado = "Null"
   End If
   
   'Secretaria (famsecretaria, campo en la tabla familiar)
   NroColumna = NroColumna + 1
   Obligatorio = False
   Campoetiqueta = "Secretaria"
   pos1 = pos2 + 2
   pos2 = InStr(pos1, strReg, separador) - 1
   Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
   If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
      Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
      Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
      RegError = RegError + 1
      Exit Sub
   End If
   secretaria = Aux
   If (Aux = "N/A") Then
      secretaria = "Null"
   End If
   
   'Comuna (famcomuna, campo en la tabla familiar)
   NroColumna = NroColumna + 1
   Obligatorio = False
   Campoetiqueta = "Comuna"
   pos1 = pos2 + 2
   pos2 = Len(strReg) 'mdf
  ' pos2 = InStr(pos1, strReg, separador) - 1
   Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
   If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
      Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
      Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
      RegError = RegError + 1
      Exit Sub
   End If
   comuna = Aux
   If (Aux = "N/A") Then
      comuna = "Null"
   End If
    

'-------------------------------------------------
' fin mdf
'-------------------------------------------------

    
'   ' Busco la fecha de alta reconocida
'    Campoetiqueta = " Fecha de alta reconocida del empleado "
'    StrSql = "SELECT altfec FROM fases "
'    StrSql = StrSql & " INNER JOIN empleado ON empleado.ternro = fases.empleado "
'    StrSql = StrSql & " WHERE empleg = " & Legajo
'    StrSql = StrSql & " AND fasrecofec = -1 "
'    OpenRecordset StrSql, rs
'    If rs.EOF Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " no esta configurado para el empleado "
'        nrocolumna = 1
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'        Exit Sub
'    End If
'
'    ' Calculo la fecha de Inicio
'    If IsDate(Fnac) Then
'        If CDate(rs!altfec) > CDate(Fnac) Then
'                fechaInicio = rs!altfec
'        Else
'                fechaInicio = Fnac
'        End If
'    Else
'        Texto = ": " & " - Campo Fecha de Nacimiento del familiar no es válida.El formato es (dd/mm/aaaa) "
'        nrocolumna = 1
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'        Exit Sub
'    End If
    
    ' Veo que la fecha de vencimiento no sea menor que la de inicio
    If IsDate(fechaVto) Then
        If CDate(fechaInicio) > CDate(fechaVto) Then
            Texto = ": " & " - Campo Fecha de vencimiento es mayor al de fecha de inicio."
            NroColumna = 1
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            Exit Sub
        Else
            fechaVto = ConvFecha(fechaVto)
        End If
    End If
    
    
    
    fechaInicio = ConvFecha(fechaInicio)
    Fnac = ConvFecha(Fnac)
    
' ==================================================================================
' ==================================================================================


'Busco el empleado asociado
StrSql = "SELECT ternro FROM empleado WHERE empleg = " & Legajo
If rs.State = adStateOpen Then rs.Close
OpenRecordset StrSql, rs
If Not rs.EOF Then
    NroEmpleado = rs!Ternro
Else
    Texto = ": " & " - Campo " & Campoetiqueta & " El legajo no existe"
    NroColumna = 1
    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    RegError = RegError + 1
    Exit Sub
End If
  
StrSql = "SELECT * FROM tercero "
StrSql = StrSql & " INNER JOIN ter_tip ON tercero.ternro = ter_tip.ternro AND ter_tip.tipnro = 3 "
StrSql = StrSql & " INNER JOIN familiar ON familiar.ternro = tercero.ternro AND familiar.empleado = " & NroEmpleado
StrSql = StrSql & " WHERE ternom = '" & nombre & "'"
StrSql = StrSql & " AND terape = '" & Apellido & "'"
If rs.State = adStateOpen Then rs.Close
OpenRecordset StrSql, rs
If rs.EOF Then
    'Inserto el tercero asociado al familiar
    
    StrSql = " INSERT INTO tercero(ternom,terape,terfecnac,tersex,nacionalnro,paisnro,estcivnro)"
    StrSql = StrSql & " VALUES('" & nombre & "','" & Apellido & "'," & Fnac & "," & nro_Sexo & ","
    If nro_nacionalidad <> 0 Then
      StrSql = StrSql & nro_nacionalidad & ","
    Else
      StrSql = StrSql & "Null,"
    End If
    If nro_paisnac <> 0 Then
      StrSql = StrSql & nro_paisnac & ","
    Else
      StrSql = StrSql & "Null,"
    End If
    StrSql = StrSql & nro_estciv & ")"
    objConn.Execute StrSql, , adExecuteNoRecords

    NroTercero = getLastIdentity(objConn, "tercero")
    
    'Inserto el Registro correspondiente en ter_tip
    StrSql = " INSERT INTO ter_tip(ternro,tipnro) VALUES(" & NroTercero & ",3)"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    '----------------------------------------------------------------------------
    'INSERTO FAMILIAR
    '----------------------------------------------------------------------------
    'NG - Se agregó famfecvtoguard,famguarderia
    StrSql = " INSERT INTO familiar(empleado,ternro,parenro,famest,famestudia,famcernac,faminc,famsalario,famemergencia,famcargadgi,osocial,plnro,famternro,famfec,famfecvto,famfecvtoguard,famguarderia,famfecadopcion,famceracta,famcertomo,famcerfolio,famtribunal,famjuzgado,famsecretaria,famcomuna)" 'mdf
    StrSql = StrSql & " values(" & NroEmpleado & "," & NroTercero & "," & nro_paren & ",-1," & nro_estudia & ",0," & nro_disc & "," & nro_salario & "," & nro_aviso & "," & nro_gan & "," & nro_osocial & "," & nro_planos & ",0," & fechaInicio & "," & fechaVto
    If EsNulo(FechaGuarderia) Then
        StrSql = StrSql & ",null," & Guarderia
    Else
        StrSql = StrSql & "," & ConvFecha(FechaGuarderia) & "," & Guarderia
    End If
    '-------mdf
    If EsNulo(fecdocu) Then
        StrSql = StrSql & ",null "
    Else
        StrSql = StrSql & "," & ConvFecha(fecdocu)
    End If
    
    If EsNulo(acta) Then
        StrSql = StrSql & ",null "
    Else
        StrSql = StrSql & ", '" & acta & "' "
    End If
    
    If EsNulo(tomo) Then
        StrSql = StrSql & ",null "
    Else
        StrSql = StrSql & ", '" & tomo & "' "
    End If
    
    If EsNulo(folio) Then
        StrSql = StrSql & ",null "
    Else
        StrSql = StrSql & ", '" & folio & "' "
    End If
    
    If EsNulo(tribunal) Then
        StrSql = StrSql & ",null "
    Else
        StrSql = StrSql & ", '" & tribunal & "' "
    End If
    
    If EsNulo(juzgado) Then
        StrSql = StrSql & ",null "
    Else
        StrSql = StrSql & ", '" & juzgado & "' "
    End If
    
    If EsNulo(secretaria) Then
        StrSql = StrSql & ",null "
    Else
        StrSql = StrSql & ", '" & secretaria & "' "
    End If
    
    If EsNulo(comuna) Then
        StrSql = StrSql & ",null "
    Else
        StrSql = StrSql & ", '" & comuna & "' "
    End If
    
    
    '------ fin mdf
    
    StrSql = StrSql & ")"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    'Inserto los estudios de familiar
    If nro_estudia = -1 Then
        StrSql = " INSERT INTO estudio_actual (ternro, nivnro) VALUES (" & NroTercero & "," & nro_nivest & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
    End If
    
    Texto = "Inserte el Familiar - " & Legajo & " - " & Apellido & " - " & nombre
    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
Else
    'Actualizo los datos
    StrSql = "UPDATE tercero SET "
    StrSql = StrSql & " terfecnac = " & Fnac
    StrSql = StrSql & " ,tersex = " & nro_Sexo
    If nro_nacionalidad <> 0 Then
        StrSql = StrSql & " ,nacionalnro = " & nro_nacionalidad
    End If
    If nro_paisnac <> 0 Then
        StrSql = StrSql & " ,paisnro = " & nro_paisnac
    End If
    StrSql = StrSql & " WHERE ternro = " & rs!Ternro
    objConn.Execute StrSql, , adExecuteNoRecords

    NroTercero = rs!Ternro

    StrSql = "UPDATE familiar SET "
    StrSql = StrSql & " parenro = " & nro_paren
    StrSql = StrSql & " ,famestudia = " & nro_estudia
    StrSql = StrSql & " ,faminc = " & nro_disc
    StrSql = StrSql & " ,famsalario = " & nro_salario
    StrSql = StrSql & " ,famemergencia = " & nro_aviso
    StrSql = StrSql & " ,famcargadgi = " & nro_gan
    StrSql = StrSql & " ,osocial = " & nro_osocial
    StrSql = StrSql & " ,plnro = " & nro_planos
    StrSql = StrSql & " ,famternro = 0"
    'NG 05/07/2013
    If EsNulo(FechaGuarderia) Then
        StrSql = StrSql & " ,famfecvtoguard=NULL"
    Else
        StrSql = StrSql & " ,famfecvtoguard=" & ConvFecha(FechaGuarderia)
    End If
    StrSql = StrSql & " ,famguarderia=" & Guarderia
    '------------------mdf famfecadopcion,famceracta,famcertomo,famcerfolio,famtribunal,famjuzgado,famsecretaria,famcomuna
     If EsNulo(fecdocu) Then
        StrSql = StrSql & ",famfecadopcion = null "
    Else
        StrSql = StrSql & ", famfecadopcion=" & ConvFecha(fecdocu)
    End If
    
    If EsNulo(acta) Then
        StrSql = StrSql & ",famceracta=null "
    Else
        StrSql = StrSql & ",famceracta= '" & acta & "' "
    End If
    
    If EsNulo(tomo) Then
        StrSql = StrSql & ", famcertomo= null "
    Else
        StrSql = StrSql & ", famcertomo= '" & tomo & "' "
    End If
    
    If EsNulo(folio) Then
        StrSql = StrSql & ", famcerfolio=null "
    Else
        StrSql = StrSql & ",famcerfolio= '" & folio & "' "
    End If
    
    If EsNulo(tribunal) Then
        StrSql = StrSql & ", famtribunal=null "
    Else
        StrSql = StrSql & ",famtribunal= '" & tribunal & "' "
    End If
    
    If EsNulo(juzgado) Then
        StrSql = StrSql & ",famjuzgado=null "
    Else
        StrSql = StrSql & ",famjuzgado= '" & juzgado & "' "
    End If
    
    If EsNulo(secretaria) Then
        StrSql = StrSql & ",famsecretaria=null "
    Else
        StrSql = StrSql & ",famsecretaria= '" & secretaria & "' "
    End If
    
    If EsNulo(comuna) Then
        StrSql = StrSql & ",famcomuna=null "
    Else
        StrSql = StrSql & ", famcomuna='" & comuna & "' "
    End If
    
    '-------------------- fin mdf
    
    StrSql = StrSql & " WHERE empleado = " & NroEmpleado
    StrSql = StrSql & " AND ternro = " & NroTercero
    objConn.Execute StrSql, , adExecuteNoRecords

    If nro_estudia = -1 Then
        StrSql = " SELECT ternro FROM estudio_actual WHERE ternro = " & NroTercero
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
            StrSql = " INSERT INTO estudio_actual (ternro, nivnro) VALUES (" & NroTercero & "," & nro_nivest & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
        Else
            StrSql = " UPDATE estudio_actual SET nivnro = " & nro_nivest
            StrSql = StrSql & "WHERE ternro = " & NroTercero
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
    
    Else
        'StrSql = " DELETE FROM estudio_actual WHERE ternro = " & NroTercero
        'objConn.Execute StrSql, , adExecuteNoRecords
    End If
    
    Texto = "Familiar actualizado - " & Legajo & " - " & Apellido & " - " & nombre
    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
End If



'Inserto los Documentos
' Dimatz Rafael valido que no exista el documento

If NroDoc2 <> "0" Then
    b = 1
Else
    b = 0
End If


For a = 0 To b

    If a = 1 Then
        NroDoc = NroDoc2
        Nro_TDocumento = Nro_TDocumento2
    End If

    StrSql = "SELECT * FROM ter_doc WHERE nrodoc = '" & NroDoc & "'"
    StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
    OpenRecordset StrSql, rs_Doc
    If Not rs_Doc.EOF Then
         'MsgBox ("Este documento ya existe") ' 13-12-2010 -se comenta-cuelga el proceso
        Texto = ": " & "Este documento ya existe"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
    Else
        If NroDoc <> "" And NroDoc <> "N/A" And TipDoc <> "N/A" Then
            StrSql = "SELECT * FROM ter_doc WHERE ternro = " & NroTercero
            StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If rs.EOF Then
                StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
                StrSql = StrSql & " VALUES(" & NroTercero & "," & Nro_TDocumento & ",'" & NroDoc & "')"
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = ": " & "Inserte el Documento - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            Else
                StrSql = " UPDATE ter_doc SET "
                StrSql = StrSql & " nrodoc = '" & NroDoc & "'"
                StrSql = StrSql & " WHERE ternro = " & NroTercero
                StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = ": " & "Documento actualizado - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
    End If
Next


'Inserto el Domicilio
If Not IngresoDom = False Then
    StrSql = "SELECT * FROM cabdom  "
    StrSql = StrSql & " WHERE tipnro = 1"
    StrSql = StrSql & " AND ternro = " & NroTercero
    StrSql = StrSql & " AND domdefault = -1"
    StrSql = StrSql & " AND tidonro = 2"
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs
    If rs.EOF Then
        StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
        StrSql = StrSql & " VALUES(1," & NroTercero & ",-1,2)"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        NroDom = getLastIdentity(objConn, "cabdom")
        
        StrSql = " INSERT INTO detdom(domnro,calle,nro,piso,oficdepto,torre,manzana,codigopostal,"
        StrSql = StrSql & "locnro,provnro,paisnro,barrio,partnro,zonanro) "
        StrSql = StrSql & " VALUES (" & NroDom & ",'" & Calle & "','" & Nro_Nrodom & "','" & Piso & "','"
        StrSql = StrSql & Depto & "','" & Torre & "','" & Manzana & "','" & Cpostal & "'," & Nro_Localidad & ","
        StrSql = StrSql & Nro_Provincia & "," & Nro_Pais & ",'" & Barrio & "'," & Nro_Partido & "," & Nro_Zona & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = ": " & "Domicilio Insertado - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)

        If Telefono <> "" Then
            StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
            StrSql = StrSql & " VALUES(" & NroDom & ",'" & Telefono & "',0,-1,0,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            Texto = ": " & "Inserte el Telefono Principal - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        End If
    Else
        StrSql = " UPDATE detdom SET "
        StrSql = StrSql & " calle =" & "'" & Calle & "'"
        StrSql = StrSql & ",nro =" & "'" & Nro_Nrodom & "'"
        StrSql = StrSql & ",piso =" & "'" & Piso & "'"
        StrSql = StrSql & ",oficdepto =" & "'" & Depto & "'"
        StrSql = StrSql & ",torre =" & "'" & Torre & "'"
        StrSql = StrSql & ",manzana =" & "'" & Manzana & "'"
        StrSql = StrSql & ",codigopostal =" & "'" & Cpostal & "'"
        StrSql = StrSql & ",entrecalles =" & "'" & Entre & "'"
        StrSql = StrSql & ",locnro =" & Nro_Localidad
        StrSql = StrSql & ",provnro =" & Nro_Provincia
        StrSql = StrSql & ",paisnro =" & Nro_Pais
        StrSql = StrSql & ", partnro = " & Nro_Partido
        StrSql = StrSql & ", zonanro =" & Nro_Zona
        StrSql = StrSql & " WHERE domnro = " & rs!domnro
        objConn.Execute StrSql, , adExecuteNoRecords
    
        Texto = ": " & "Domicilio Actualizado - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
    
        If Telefono <> "" Then
            StrSql = "SELECT * FROM telefono "
            StrSql = StrSql & " WHERE domnro =" & rs!domnro
            StrSql = StrSql & " AND telnro ='" & Telefono & "'"
            If rs_Tel.State = adStateOpen Then rs_Tel.Close
            OpenRecordset StrSql, rs_Tel
            If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & Telefono & "',0,-1,0,1)"
                objConn.Execute StrSql, , adExecuteNoRecords
                  
                Texto = ": " & "Inserte el Telefono Principal - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
    End If
End If



'FGZ - 12/04/2010 - DDJJ
'EGO - 07/06/2010 - DDJJ
If CBool(nro_gan) And Item_DDJJ <> 0 Then
    Anio_DDJJ = Year(Desde_DDJJ)

    StrSql = "SELECT desmondec "
    StrSql = StrSql & " FROM desmen "
    StrSql = StrSql & " WHERE empleado = " & NroEmpleado
    StrSql = StrSql & " AND     itenro = " & Item_DDJJ
    StrSql = StrSql & " AND  desfecdes = " & ConvFecha(Desde_DDJJ)
    StrSql = StrSql & " AND  desfechas = " & ConvFecha(Hasta_DDJJ)
    OpenRecordset StrSql, rs
    If rs.EOF Then
        StrSql = "INSERT INTO desmen (itenro, desano, desfecdes, desfechas, desmondec, empleado)"
        StrSql = StrSql & "VALUES (" & Item_DDJJ
        StrSql = StrSql & "," & Anio_DDJJ
        StrSql = StrSql & "," & ConvFecha(Desde_DDJJ)
        StrSql = StrSql & "," & ConvFecha(Hasta_DDJJ)
        StrSql = StrSql & ",1"
        StrSql = StrSql & "," & NroEmpleado
        StrSql = StrSql & ")"
    Else
        StrSql = "UPDATE desmen SET desmondec = desmondec + 1"
        StrSql = StrSql & " WHERE itenro = " & Item_DDJJ
        StrSql = StrSql & " AND empleado = " & NroEmpleado
        StrSql = StrSql & " AND desfecdes = " & ConvFecha(Desde_DDJJ)
        StrSql = StrSql & " AND desfechas = " & ConvFecha(Hasta_DDJJ)
    End If
    objConn.Execute StrSql, , adExecuteNoRecords
End If

OK = True

'Cierro y libero
If rs.State = adStateOpen Then rs.Close
If rs_Tel.State = adStateOpen Then rs_Tel.Close
Set rs = Nothing
Set rs_Tel = Nothing


Exit Sub

SaltoLinea:
    Texto = " Error (602): " & Err.Description
    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, strReg)
    MyRollbackTrans
    OK = False
End Sub



Public Sub LineaModelo_603(ByVal strReg As String, ByRef OK As Boolean)
' CAS-13764 - Sykes - Bug en interfaz 603' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de Empleados para Costa Rica
' Autor      : Nicolas Martinez
' Fecha      : 11/02/2011
' Ultima Mod.: 17/10/2011 - Gonzalez Nicolás - Se amplió el campo Calle a 250
'              10/11/2011 - Gonzalez Nicolás - Se agregaron campos nombre2 y apellido2
'              12/12/2011 - Manterola Maria Magdalena - Se agregó una validación por confrep.
'                           Si no esta configurado, la interface migra normalmente, sino no migra nada.
'              12/01/2012 - Manterola Maria Magdalena - Se le agregó un cartel al log con el nombre y tipo de la estructura que se está intentando crear.
'              04/06/2013 - Ana Annese se actualizó NroColumna para el Log
' ---------------------------------------------------------------------------------------------

Dim pos1            As Long
Dim pos2            As Long

Dim Legajo          As String   'LEGAJO                   -- empleado.empleg
Dim Apellido        As String   'APELLIDO                 -- empleado.terape y tercero.terape
Dim Apellido2       As String   'APELLIDO2                 -- empleado.terape2 y tercero.terape2
Dim nombre          As String   'NOMBRE                   -- empleado.ternom y tercero.ternom
Dim nombre2         As String   'NOMBRE2                   -- empleado.ternom2 y tercero.ternom2
Dim Fnac            As String   'FNAC                     -- tercero.terfecna
Dim Nacionalidad    As String   'Nacionalidad             -- tercero.nacionalnro
Dim PaisNac         As String   'Pais de Nacimiento       -- tercero.paisnro
Dim Fing            As String   'Fec.Ingreso al Pais      -- terecro.terfecing
Dim EstCivil        As String   'Est.Civil                -- tercero.estcivnro
Dim Sexo            As String   'Sexo                     -- tercero.tersex
Dim FAlta           As String   'Fec. de Alta             -- empleado.empfaltagr y fases.altfec
Dim Estudio         As String   'Estudia                  -- empleado.empestudia
Dim NivEst          As String   'Nivel de Estudio         -- empleado.nivnro
Dim Tdocu           As String   'Tipo Documento           -- ter_dpc.tidnro (DU)
Dim Ndocu           As String   'Nro. Documento           -- ter_doc.nrodoc
Dim Cuil            As String   'CUIL                     -- ter_doc.nrodoc (10)
Dim Calle           As String   'Calle                    -- detdom.calle
Dim Nro             As String   'Número                   -- detdom.nro
Dim Piso            As String   'Piso                     -- detdom.piso
Dim Depto           As String   'Depto                    -- detdom.depto
Dim Torre           As String   'Torre                    -- detdom.torre
Dim Manzana         As String   'Manzana                  -- detdom.manzana
Dim Cpostal         As String   'Cpostal                  -- detdom.codigopostal
Dim Entre           As String   'Entre Calles             -- detdom.entrecalles
Dim Barrio          As String   'Barrio                   -- detdom.barrio
Dim Localidad       As String   'Localidad                -- detdom.locnro
Dim Partido         As String   'Partido                  -- detdom.partnro
Dim Zona            As String   'Zona                     -- detdom.zonanro
Dim Provincia       As String   'Provincia                -- detdom.provnro
Dim Pais            As String   'Pais                     -- detdom.paisnro
Dim Telefono        As String   'Telefono                 -- telefono.telnro
Dim TelLaboral        As String   'Telefono                 -- telefono.telnro
Dim TelCelular        As String   'Telefono                 -- telefono.telnro
Dim Email           As String   'E-mail                   -- empleado.empemail
Dim Sucursal        As String   'Sucursal                 -- his_estructura.estrnro
Dim Sector          As String   'Sector                   -- his_estructura.estrnro
Dim categoria       As String   'Categoria                -- his_estructura.estrnro
Dim Puesto          As String   'Puesto                   -- his_estructura.estrnro
Dim CCosto          As String   'C.Costo                  -- his_estructura.estrnro
Dim Gerencia        As String   'Gerencia                 -- his_estructura.estrnro
Dim Departamento    As String   'Departamento             -- his_estructura.estrnro
Dim Direccion       As String   'Direccion                -- his_estructura.estrnro
Dim CajaJub         As String   'Caja de Jubilacion       -- his_estructura.estrnro
Dim Sindicato       As String   'Sindicato                -- his_estructura.estrnro
Dim OSocialLey         As String   'Obra Social              -- his_estructura.estrnro
Dim PlanOSLey          As String   'Plan OS                  -- his_estructura.estrnro
Dim OSocialElegida         As String   'Obra Social              -- his_estructura.estrnro
Dim PlanOSElegida          As String   'Plan OS                  -- his_estructura.estrnro
Dim Contrato        As String   'Contrato                 -- his_estructura.estrnro
Dim Convenio        As String   'Convenio                 -- his_estructura.estrnro
Dim LPago           As String   'Lugar de Pago            -- his_estructura.estrnro
Dim RegHorario      As String   'Regimen Horario          -- his_estructura.estrnro
Dim FormaLiq        As String   'Forma de Liquidacion     -- his_estructura.estrnro
Dim FormaPago       As String   'Forma de Pago            -- formapago.fpagdescabr
Dim SucBanco        As String   'Sucursal del Banco       -- ctabancaria.ctabsuc
Dim BancoPago       As String   'Banco Pago               -- his_estructura.estrnro, formapago.fpagbanc (siempre y cuando el Banco sea <> 0) y ctabancaria.banco
Dim NroCuenta       As String   'Nro. Cuenta              -- ctabancario.ctabnro
Dim NroCuentaAcreditacionE As String
Dim Actividad       As String   'Actividad                -- his_estructura.estrnro
Dim CondSIJP        As String   'Condicion SIJP           -- his_estructura.estrnro
Dim SitRev          As String   'Sit. de Revista SIJP     -- his_estructura.estrnro
Dim ModCont         As String   'Mod. de Contrat. SIJP    -- his_estructura.estrnro
Dim ART             As String   'ART                      -- his_estructura.estrnro
Dim Estado          As String   'Estado                   -- empleado.empest y fases.estado
Dim CausaBaja       As String   'Causa de Baja            -- fases.caunro
Dim FBaja           As String   'Fecha de Baja            -- fases.bajfec
Dim Empresa         As String   'Empresa                  -- his_estructura.estrnro
Dim ModOrg          As String   'Empresa                  -- his_estructura.estrnro
Dim OSL             As String   'Empresa                  -- his_estructura.estrnro
Dim OSE             As String   'Empresa                  -- his_estructura.estrnro
Dim PlanOdon        As String   'Empresa                  -- his_estructura.estrnro
Dim Locacion        As String   'Empresa                  -- his_estructura.estrnro
Dim Area            As String   'Empresa                  -- his_estructura.estrnro
Dim SubDepto        As String   'Empresa                  -- his_estructura.estrnro
Dim NroCBU          As String   'Empresa                  -- his_estructura.estrnro
Dim Empremu         As String   'Remuneración del empleado
Dim GrupoSeguridad  As String   'Grupo de Seguridad
Dim Nro_GrupoSeguridad  As Long 'Grupo de Seguridad       -- his_estructura.estrnro
Dim FFinContrato    As String
Dim Fecha_FinContrato As String
Dim Reporta_a       As String
Dim Nro_Reporta_a   As Long

Dim Ternro As Long

Dim NroTercero          As Long

Dim Nro_Legajo          As Long
Dim Nro_TDocumento      As Long
Dim nro_nivest          As Long
Dim nro_estudio         As Long

Dim Nro_Nrodom          As String

Dim Nro_Barrio          As Long
Dim Nro_Localidad       As Long
Dim Nro_Partido         As Long
Dim Nro_Zona            As Long
Dim Nro_Provincia       As Long
Dim Nro_Pais            As Long
Dim nro_paisnac         As Long

Dim nro_sucursal        As Long
Dim nro_sector          As Long
Dim nro_categoria       As Long
Dim nro_puesto          As Long
Dim nro_ccosto          As Long
Dim nro_gerencia        As Long
Dim nro_cajajub         As Long
Dim nro_sindicato       As Long
Dim nro_osocial_ley     As Long
Dim nro_planos_ley      As Long
Dim nro_osocial_elegida As Long
Dim nro_planos_elegida  As Long
Dim nro_contrato        As Long
Dim nro_convenio        As Long
Dim nro_reghorario      As Long
Dim nro_formaliq        As Long
Dim nro_bancopago       As Long
Dim nro_actividad       As Long
Dim nro_sitrev          As Long
Dim nro_modcont         As Long
Dim nro_art             As Long
Dim nro_departamento    As Long
Dim nro_direccion       As Long
Dim nro_lpago           As Long
Dim nro_condsijp        As Long
Dim nro_formapago       As Long
Dim nro_causabaja       As Long
Dim nro_empresa         As Long
Dim NroDom              As Long
Dim nro_osl             As Long
Dim nro_odon            As Long
Dim nro_ose             As Long
Dim nro_locacion        As Long
Dim nro_area            As Long
Dim nro_SubDepto        As Long
Dim nro_empremu         As Long

Dim nro_estcivil        As Long
Dim nro_nacionalidad    As Long

Dim F_Nacimiento        As String
Dim F_Fallecimiento     As String
Dim F_Alta              As String
Dim F_Baja              As String
Dim F_Ingreso           As String

Dim Inserto_estr        As Boolean

Dim ter_sucursal        As Long
Dim Ter_Empresa         As Long
Dim ter_cajajub         As Long
Dim ter_sindicato       As Long
Dim ter_osocial_ley     As Long
Dim ter_osocial_elegida As Long
Dim ter_bancopago       As Long
Dim ter_art             As Long
Dim ter_sexo            As Long
Dim ter_estudio         As Long
Dim ter_estado          As Long

Dim fpgo_bancaria       As Long

Dim rs As New ADODB.Recordset
Dim rs_Sql As New ADODB.Recordset
Dim rs_Empleado As New ADODB.Recordset
Dim rs_Tel As New ADODB.Recordset
Dim rs_repl As New ADODB.Recordset


Dim SucDesc             As Boolean   'Sucursal                 -- his_estructura
Dim SecDesc             As Boolean   'Sector                   -- his_estructura
Dim CatDesc             As Boolean   'Categoria                -- his_estructura
Dim PueDesc             As Boolean   'Puesto                   -- his_estructura
Dim CCoDesc             As Boolean   'C.Costo                  -- his_estructura
Dim GerDesc             As Boolean   'Gerencia                 -- his_estructura
Dim DepDesc             As Boolean   'Departamento             -- his_estructura
Dim DirDesc             As Boolean   'Direccion                -- his_estructura
Dim CaJDesc             As Boolean   'Caja de Jubilacion       --
Dim SinDesc             As Boolean   'Sindicato                -- his_estructura
Dim OSoElegidaDesc      As Boolean   'Obra Social              -- his_estructura
Dim PoSElegidaDesc      As Boolean   'Plan OS                  -- his_estructura
Dim OSoLeyDesc          As Boolean   'Obra Social              -- his_estructura
Dim PoSLeyDesc          As Boolean   'Plan OS                  -- his_estructura
Dim CotDesc             As Boolean   'Contrato                 -- his_estructura
Dim CovDesc             As Boolean   'Convenio                 -- his_estructura
Dim LPaDesc             As Boolean   'Lugar de Pago            -- his_estructura
Dim RegDesc             As Boolean   'Regimen Horario          -- his_estructura
Dim FLiDesc             As Boolean   'Forma de Liquidacion     -- his_estructura
Dim FPaDesc             As Boolean      'Forma de Pago            -- his_estructura
Dim BcoDesc             As Boolean      'Banco Pago               --
Dim ActDesc             As Boolean      'Actividad                --
Dim CSJDesc             As Boolean      'Condicion SIJP           --
Dim SReDesc             As Boolean      'Sit. de Revista SIJP     --
Dim MCoDesc             As Boolean      'Mod. de Contrat. SIJP    --
Dim ARTDesc             As Boolean      'ART                      --
Dim EmpDesc             As Boolean      'Empresa                  --
Dim OSLDesc             As Boolean      'Empresa                  --
Dim POdoDesc             As Boolean     'Empresa                  --
Dim OSEDesc             As Boolean      'Empresa                  --
Dim LocDesc             As Boolean      'Empresa                  --
Dim AreaDesc             As Boolean     'Empresa                  --
Dim SubDepDesc           As Boolean     'Empresa                  --

Dim IngresoDom          As Boolean

Dim rs_tdoc As New ADODB.Recordset
Dim rs_emp  As New ADODB.Recordset
Dim rs_tpl  As New ADODB.Recordset
Dim rs_leg  As New ADODB.Recordset
Dim rs_Confrep As New ADODB.Recordset

Dim Nroadtemplate As Long
Dim Nro_Institucion As Long

Dim Sigue As Boolean
Dim ExisteLeg As Boolean
Dim CalculaLegajo As Boolean
Dim Valida_CUIL As Boolean
Dim estaHabilitado As Boolean

Dim F_NacAux As Date
Dim F_AltaAux As Date
Dim Edad As Integer
Dim MaxEmpl As Long
Dim CantEmpl As Long
Dim campos
Dim indice As Integer
Dim indice2 As Integer
Dim salir As Boolean
Dim ArregloTenro(19) As Integer

Dim ultTenro As Integer 'MMM 17/01/2012

Dim Rs_Estr As New ADODB.Recordset
Dim d_estructura As String
Dim l_pos1 As Long
Dim l_pos2 As Long

Dim l_ExistePostulante As Boolean
Dim l_ExisteFamiliar As Boolean

    On Error GoTo SaltoLinea


    ' True indica que se hace por Descripcion. False por Codigo Externo

    SucDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    SecDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CatDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    PueDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CCoDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    GerDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    DepDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    DirDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CaJDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    SinDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    OSoElegidaDesc = True ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    PoSElegidaDesc = True ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    OSoLeyDesc = True   ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    PoSLeyDesc = True   ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CotDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CovDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    LPaDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    RegDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    FLiDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    FPaDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    BcoDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    ActDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CSJDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    SReDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    MCoDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    ARTDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    EmpDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    OSLDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    POdoDesc = True     ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    OSEDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    LocDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    AreaDesc = True     ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    SubDepDesc = True   ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    
    
' ====================================================================
' CONFREP
' ====================================================================
StrSql = "SELECT * FROM confrep where confrep.repnro = 363 ORDER BY confnrocol"
'CAMBIAR NUMERO DE CONFREP POR EL QUE ME PASE MANUEL
OpenRecordset StrSql, rs_Confrep
    
If rs_Confrep.EOF Then
    Flog.writeline Espacios(Tabulador * 1) & "Falta configurar la habilitación o no de creacion de estructuras y tipos de estructuras para el reporte"
    FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": Falta configurar la habilitación en el reporte 363 "
    InsertaError 0, 106
    HuboError = True
    Exit Sub
Else
    If UCase(Trim(rs_Confrep!conftipo)) = "HA" Then
        If UCase(Trim(rs_Confrep!confval2)) = "SI" Then
            estaHabilitado = True
        Else
            estaHabilitado = False
        End If
    Else
        Flog.writeline Espacios(Tabulador * 1) & "Mal configurada la habilitación. Verificar documentación de configuración. "
        FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": Mal configurada la habilitación en el reporte 363. Verificar documentación de configuración. "
        InsertaError 0, 106
        HuboError = True
        Exit Sub
    End If
                   

End If

If Not estaHabilitado Then
    'Si la creación esta deshabilitada y se requiere crear un tipo de estructura o una estructura,
    'se debe informar del error y no se debe dar de alta el empleado o proceder a su modificación.
    
    'Primero cargo un arreglo con todos los tenro de cada estructura que se migra
    ArregloTenro(0) = 1     'Sucursal
    ArregloTenro(1) = 2     'Sector
    ArregloTenro(2) = 19    'Contrato Colectivo
    ArregloTenro(3) = 3     'Categoria
    ArregloTenro(4) = 4     'Puesto
    ArregloTenro(5) = 5     'Centro de Costo
    ArregloTenro(6) = 6     'Gerencia
    ArregloTenro(7) = 9     'Departamento
    ArregloTenro(8) = 35    'Dirección
    ArregloTenro(9) = 15    'Caja de Jubilación/Pensión
    ArregloTenro(10) = 16   'Sindicato
    ArregloTenro(11) = 17   'OS Elegida / Seguro Social
    ArregloTenro(12) = 18   'Tipo de Contratación
    ArregloTenro(13) = 20   'Lugar de Pago
    ArregloTenro(14) = 21   'Regimen Horario
    ArregloTenro(15) = 22   'Forma de Liquidación
    ArregloTenro(16) = 41   'Banco de Pago
    ArregloTenro(17) = 40   'INS
    ArregloTenro(18) = 7    'Grupo de Seguridad
    
    'Despues me fijo si se requiere crear algun tipo de estructura o estructura
    campos = Split(strReg, separador, -1)
    
    indice = 33
    indice2 = 0
    salir = False
    
    Do Until indice = 64 Or salir
        
        'Me fijo si esa estructura existe o hay que crearla
        
        ultTenro = ArregloTenro(indice2) 'MMM -17/01/2012
        
        If campos(indice) <> "" Then
 
            If InStr(1, campos(indice), "$") > 0 Then
                l_pos1 = InStr(1, campos(indice), "$")
                l_pos2 = Len(campos(indice))
                d_estructura = Trim(Mid(campos(indice), l_pos1 + 1, l_pos2))
            Else
                d_estructura = Trim(campos(indice))
            End If
            
            If UCase(Mid(d_estructura, 1, 60)) <> "N/A" Then 'MMM - 17/01/2012
                StrSql = " SELECT estrnro FROM estructura WHERE UPPER(estructura.estrdabr) = '" & UCase(Mid(d_estructura, 1, 60)) & "'"
                StrSql = StrSql & " AND estructura.tenro = " & ArregloTenro(indice2)
                                                 
                OpenRecordset StrSql, Rs_Estr
                If Rs_Estr.EOF Then
                    salir = True
                End If
            End If
        End If
        
        Select Case indice
            Case 45: indice = 47
            Case 49: indice = 51
            Case 51: indice = 55
            Case 55: indice = 63
            Case Else: indice = indice + 1
        End Select
        indice2 = indice2 + 1
            
    Loop
    
    If salir Then
    
        'TENGO QUE MOSTRAR UN MENSAJE DE ERROR Y SALIR!
        Flog.writeline Espacios(Tabulador * 1) & "ERROR: No Habilitada la creación/modificación de una estructura --> E intento de crearla!"
        Flog.writeline Espacios(Tabulador * 1) & "TIPO DE ESTRUCTURA = " & ultTenro 'MMM - 17/01/2012
        Flog.writeline Espacios(Tabulador * 1) & "ESTRUCTURA = " & UCase(Mid(d_estructura, 1, 60)) 'MMM - 17/01/2012
        FlogE.writeline Espacios(Tabulador * 1) & "Linea " & NroLinea & ": No Habilitada la creación/modificación de una estructura --> E intento de crearla! "
        FlogE.writeline Espacios(Tabulador * 1) & "TIPO DE ESTRUCTURA = " & ultTenro 'MMM - 17/01/2012
        FlogE.writeline Espacios(Tabulador * 1) & "ESTRUCTURA = " & UCase(Mid(d_estructura, 1, 60)) 'MMM - 17/01/2012
        InsertaError 0, 106
        HuboError = True
        Exit Sub
        
    End If

End If

    'Si esta habilitada la creación el procedimiento de la interface 603 es el normal
    
    'FGZ - 21/02/2009 - reviso si debo validar el CUIL o no --------------------
    Valida_CUIL = False
'    StrSql = " SELECT tidvalida FROM tipodocu WHERE tidnro = 10"
'    OpenRecordset StrSql, rs_Sql
'    If Not rs_Sql.EOF Then
'        If Not EsNulo(rs_Sql!tidvalida) Then
'            Valida_CUIL = True
'        Else
'            Valida_CUIL = False
'        End If
'    Else
'        Valida_CUIL = False
'    End If
    'FGZ - 21/02/2009 - reviso si debo validar el CUIL o no --------------------
    
    
    Sigue = True 'Indica que si en el archivo viene mas de una vez un empleado, le crea las fases
    ExisteLeg = False
    'RegLeidos = RegLeidos + 1
    LineaCarga = LineaCarga + 1
    
    Flog.writeline
    FlogE.writeline
    FlogP.writeline
    
    'Legajo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Legajo"
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Legajo = Aux
    'Legajo = Mid(strReg, pos1, pos2 - pos1 + 1)
    If Legajo = "N/A" Or EsNulo(Legajo) Then
        CalculaLegajo = True
    Else
        StrSql = "SELECT * FROM empleado WHERE empleado.empleg = " & Legajo
        OpenRecordset StrSql, rs_emp
        If (Not rs_emp.EOF) Then
            If (Not Sigue) Then
                Texto = ": " & " - El Empleado ya Existe."
                NroColumna = 1
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                'Ok = False
                'RegError = RegError + 1
                'Exit Sub
            Else
                NroTercero = rs_emp!Ternro
                ExisteLeg = True
            End If
        End If
    End If
    
    
    'Apellido
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Apellido"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If (Aux <> "N/A") Then
    Aux = EliminarCHInvalidosII(Aux, 0, "")
    End If
    Apellido = Left(Aux, 25)
    
    '/////NG
    'Apellido2
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Apellido2"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If (Aux <> "N/A") Then
    Aux = EliminarCHInvalidosII(Aux, 0, "")
    End If
    Apellido2 = Left(Aux, 25)
    '----------
    
    
    'Nombre
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Nombre"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    If (Aux <> "N/A") Then
    Aux = EliminarCHInvalidosII(Aux, 0, "")
    End If
    nombre = Left(Aux, 25)
    If (Apellido = "" Or Apellido = "N/A") And (nombre = "" Or nombre = "N/A") Then
        Texto = ": " & " - Debe Ingresar un Nombre y Apellido."
        NroColumna = 2
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    '//---NG
    'NOMBRE2
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nombre2"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    If (Aux <> "N/A") Then
    Aux = EliminarCHInvalidosII(Aux, 0, "")
    End If
    nombre2 = Left(Aux, 25)
    '-------
    
    
    'Fecha de Nacimiento
    NroColumna = NroColumna + 1
    'Obligatorio = False
    Obligatorio = True
    Campoetiqueta = "Fecha de Nacimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If Aux <> "N/A" Then
    Aux = EliminarCHInvalidosII(Aux, 2, "")
    End If
    Fnac = Aux
    If Fnac = "N/A" Then
       F_Nacimiento = "Null"
    Else
       F_Nacimiento = ConvFecha(Fnac)
       F_NacAux = CDate(Fnac)
    End If
    
    
    'Pais de Nacimiento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Pais de Nacimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    PaisNac = Aux
    If PaisNac <> "N/A" Then
        StrSql = " SELECT paisnro FROM pais WHERE UPPER(paisdesc) = '" & UCase(PaisNac) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_paisnac = rs_Sql!Paisnro
        Else
            StrSql = " INSERT INTO pais(paisdesc,paisdef) VALUES ('" & UCase(PaisNac) & "',0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_paisnac = getLastIdentity(objConn, "pais")
        End If
    Else
        nro_paisnac = 0
    End If
    
    
    'Nacionalidad
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nacionalidad"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Nacionalidad = Aux
    If Nacionalidad <> "N/A" Then
        StrSql = " SELECT nacionalnro FROM nacionalidad WHERE UPPER(nacionaldes) = '" & UCase(Nacionalidad) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_nacionalidad = rs_Sql!nacionalnro
        Else
            StrSql = " INSERT INTO nacionalidad(nacionaldes) VALUES ('" & UCase(Nacionalidad) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_nacionalidad = getLastIdentity(objConn, "nacionalidad")
        End If
    Else
        nro_nacionalidad = 0
    End If
    If nro_nacionalidad = 0 Then
        Texto = ": " & " - La Nacionalidad no Existe."
        NroColumna = 6
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    
    'Fecha de Ingreso al Pais
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de Ingreso al Pais"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If Aux <> "N/A" Then
    Aux = EliminarCHInvalidosII(Aux, 2, "")
    End If
    Fing = Aux
    If (Fing = "N/A") Or EsNulo(Fing) Then
        F_Ingreso = "Null"
    Else
        F_Ingreso = ConvFecha(Fing)
    End If
    
    'Estado Civil
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estado Civil"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    EstCivil = Left(Aux, 30)
    If EstCivil <> "N/A" And Not EsNulo(EstCivil) Then
        StrSql = " SELECT estcivnro FROM estcivil WHERE UPPER(estcivdesabr) = '" & UCase(EstCivil) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_estcivil = rs_Sql!estcivnro
        Else
            StrSql = " INSERT INTO estcivil(estcivdesabr) VALUES ('" & UCase(EstCivil) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_estcivil = getLastIdentity(objConn, "estcivil")
        End If
    Else
        nro_estcivil = 0
    End If
    If nro_estcivil = 0 Then
        Texto = ": " & " - El Estado Civil no Existe."
        NroColumna = 8
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Sexo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sexo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Sexo = UCase(Aux)
    If (Sexo = "M") Or (Sexo = "-1") Or (Sexo = "MASCULINO") Then
        ter_sexo = -1
    Else
        ter_sexo = 0
    End If
                                                            
    'Fecha de alta
    NroColumna = NroColumna + 1
    'Obligatorio = False
    Obligatorio = True
    Campoetiqueta = "Fecha de alta"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If Aux <> "N/A" Then
        Aux = EliminarCHInvalidosII(Aux, 2, "")
    End If
    FAlta = Aux
    If FAlta = "N/A" Or EsNulo(FAlta) Then
        F_Alta = "Null"
        Texto = ": " & " - La Fecha de Alta es Obligatoria."
        
        'NroColumna = 10 - AA
        NroColumna = 12
        
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    Else
        F_Alta = ConvFecha(FAlta)
        F_AltaAux = CDate(FAlta)
        
        
        'Validar que el empleado sea mayor a 14 años
        Edad = 0
        If (Month(F_AltaAux) > Month(F_NacAux)) Then
           Edad = DateDiff("yyyy", F_NacAux, F_AltaAux)
        Else
           If (Month(F_AltaAux) = Month(F_NacAux)) And (Day(F_AltaAux) >= Day(F_NacAux)) Then
             Edad = DateDiff("yyyy", F_NacAux, F_AltaAux)
           Else
             Edad = DateDiff("yyyy", F_NacAux, F_AltaAux) - 1
           End If
        End If
        
        If Edad < 14 Then
            Texto = ": " & " - El empleado es menor a 14 años."
            NroColumna = 10
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            'Ok = False
            RegError = RegError + 1
            Exit Sub
        End If
        
    End If
   
   
    'Estudia?
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estudia?"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Estudio = UCase(Aux)
    If Estudio <> "N/A" And Estudio <> "NO" Then
        If Estudio = "SI" Then
            ter_estudio = -1
        Else
            ter_estudio = 0
        End If
    Else
        ter_estudio = 0
    End If
    
    
    'Nivel de estudio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nivel de estudio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    NivEst = Left(Aux, 40)
    If NivEst <> "N/A" Then
        StrSql = " SELECT nivnro FROM nivest WHERE UPPER(nivdesc) = '" & UCase(NivEst) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_nivest = rs_Sql!nivnro
        Else
            StrSql = " INSERT INTO nivest(nivdesc,nivsist,nivobligatorio,nivestfli) VALUES ('" & UCase(NivEst) & "',-1,0,-1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_nivest = getLastIdentity(objConn, "nivest")
        End If
    Else
        nro_nivest = 0
    End If
    
    
    'Tipo de Doc
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tipo de Doc"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Tdocu = Left(Aux, 8)
    If Tdocu <> "N/A" Then
        StrSql = " SELECT tidnro FROM tipodocu WHERE UPPER(tidsigla) = '" & UCase(Tdocu) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            Nro_TDocumento = rs_Sql!tidnro
        Else
            'busco la primera institucion, si no existe la creo
            StrSql = " SELECT * FROM institucion "
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                Nro_Institucion = rs!InstNro
            Else
                'creo una
                StrSql = " INSERT INTO institucion (instdes,instabre) VALUES ('NACIONAL','NAC')"
                objConn.Execute StrSql, , adExecuteNoRecords
                Nro_Institucion = getLastIdentity(objConn, "institucion")
            End If
            'creo el tipo de documento
            StrSql = " INSERT INTO tipodocu(tidnom,tidsigla,tidsist,instnro,tidunico) VALUES ('" & UCase(Tdocu) & "','" & UCase(Tdocu) & "',0," & Nro_Institucion & ",0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            Nro_TDocumento = getLastIdentity(objConn, "tipodocu")
        End If
    Else
        Nro_TDocumento = 0
    End If
    If Nro_TDocumento = 0 Then
        Texto = ": " & " - El Tipo de Documento no Existe."
        'NroColumna = 13 - AA
        NroColumna = 15
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    
    'Nro de Documento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nro de Documento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Ndocu = Left(Aux, 30)
    If Ndocu = "N/A" Then
        Ndocu = ""
    End If
    
    '---------------------------------------------------
    ' Verifica si el nro documento pertenece a otro empleado
    '---------------------------------------------------
    StrSql = "SELECT * FROM empleado "
    StrSql = StrSql & " INNER JOIN ter_doc ON ter_doc.ternro = empleado.ternro "
    StrSql = StrSql & " WHERE ter_doc.tidnro = " & Nro_TDocumento & " AND ter_doc.nrodoc = '" & Ndocu & "'"
    OpenRecordset StrSql, rs_tdoc
    If (Not rs_tdoc.EOF) Then
        'JPB: Se quito que existe el legajo. Aqui lo que ya existe seria el documento
        'ExisteLeg = True
        If (Not Sigue) Then
            Texto = ": " & " - Ese Tipo y Numero de Documento estan Asignados a otro Empleado."
            'NroColumna = 14 - AA
            NroColumna = 16
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            'Ok = False
            RegError = RegError + 1
            Exit Sub
        Else
            'FGZ - 11/11/2010 - Si es el mismo legajo no debe poner ningun cartel
            If NroTercero <> rs_tdoc!Ternro Then
                NroTercero = rs_tdoc!Ternro
                'ExisteLeg = True
                Texto = ": " & " - Empleado: " & Legajo & " - Ese Tipo y Numero de Documento estan Asignados a otro Empleado."
                'NroColumna = 14 - AA
                NroColumna = 16
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                'JPB: Faltaba que interrumpa el proceso porque en este caso ya existe el documento y esta asociado a otro tercero
                RegError = RegError + 1
                Exit Sub
            End If
        End If
    Else 'JPB: Verifico si existe otro tipo de tercero
             
            '---------------------------------------------------
            'JPB - Verifica si el nro documento pertenece a un postulante
            '---------------------------------------------------
            StrSql = "SELECT pos_postulante.ternro FROM pos_postulante "
            StrSql = StrSql & " INNER JOIN ter_doc ON ter_doc.ternro = pos_postulante.ternro "
            StrSql = StrSql & " WHERE ter_doc.nrodoc = '" & Ndocu & "'"
            OpenRecordset StrSql, rs_tdoc
            If (Not rs_tdoc.EOF) Then
                NroTercero = rs_tdoc!Ternro
                l_ExistePostulante = True
                Texto = ": " & " - El Numero de Documento " & Ndocu & " esta asociado a un postulante."
                'NroColumna = 14 - AA
                NroColumna = 16
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            End If
            
            '-------------------------------------------------
            'JPB - Verifica si el nro documento pertenece a un familiar
            '---------------------------------------------------
            StrSql = "SELECT familiar.ternro FROM familiar "
            StrSql = StrSql & " INNER JOIN ter_doc ON ter_doc.ternro = familiar.ternro "
            StrSql = StrSql & " WHERE ter_doc.nrodoc = '" & Ndocu & "'"
            OpenRecordset StrSql, rs_tdoc
            If (Not rs_tdoc.EOF) Then
                 NroTercero = rs_tdoc!Ternro
                 l_ExisteFamiliar = True
                 Texto = ": " & " - El Numero de Documento " & Ndocu & " esta asociado a un familiar."
                 'NroColumna = 14 - AA
                 NroColumna = 15
                 Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            End If
            '-------------------------------------------------
            
    End If
    
    'CUIL
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "CUIL"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'       Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'       Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
'    Cuil = Replace(Left(aux, 30), "-", "")
'    If Cuil = "N/A" Or EsNulo(Cuil) Then
        'FGZ - 23/02/2009 - validacion de cuil configurable ---------------
'        If Valida_CUIL Then
'            Cuil = Generar_Cuil(Ndocu, CBool(ter_sexo))
            'Cuil = CalcularCUIL(Ndocu)
'            If Cuil = 0 Then
'                Texto = ": " & " - Campo " & Campoetiqueta & " no se pudo generar automaticamente " & Ndocu
'                Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'                RegError = RegError + 1
'                Exit Sub
'            End If
'       Else
            Cuil = ""
'        End If
        'FGZ - 23/02/2009 - validacion de cuil configurable ---------------
'    Else
'        If Valida_CUIL Then
            'OK = Cuil_Valido(Cuil, Texto)
'            OK = Cuil_Valido605(Cuil, Ndocu, Texto, Tdocu, nro_nacionalidad)
'            If Not OK Then
'                OK = True
                'Texto = "El CUIL no es valido"
                'Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
                'Cuil = CalcularCUIL(Ndocu)
                
                'FGZ - 26/08/2010 ---------------
                'Cuil = Generar_Cuil(Ndocu, CBool(ter_sexo))
'                Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'               RegError = RegError + 1
'              Exit Sub
                'FGZ - 26/08/2010 ---------------
'            End If
'        End If
'    End If
    'FGZ - 23/02/2009 - validacion de cuil configurable ---------------
'    If Cuil = "" And Not Valida_CUIL Then
'        Cuil = ""
'    Else
'        Cuil = Left(Cuil, 2) & "-" & Mid(Cuil, 3, 8) & "-" & Right(Cuil, 1)
'    End If
    'FGZ - 23/02/2009 - validacion de cuil configurable ---------------
    
    
    'Hasta Aqui los Datos Obligatorios del Empleado
    IngresoDom = True
        
    'Calle
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Direccion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    'Calle = Left(aux, 30)
    Calle = Left(Aux, 250)
    If Calle = "N/A" Then
        Calle = ""
        IngresoDom = False
    End If
    
    
    'Nro
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Nro"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Nro = Left(Aux, 8)
    If (Nro <> "N/A") Then
        Nro_Nrodom = Nro
    Else
        Nro_Nrodom = 0
    End If
    
    'Piso
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Piso"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Piso = Left(Aux, 8)
    If Piso = "N/A" Then
        Piso = ""
    End If
    
    'Departamento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Departamento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Depto = Left(Aux, 8)
    If Depto = "N/A" Then
        Depto = ""
    End If

    'Torre
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Torre"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Torre = Left(Aux, 8)
    If Torre = "N/A" Then
        Torre = ""
    End If
    
    'Manzana
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Manzana"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Manzana = Left(Aux, 8)
    If Manzana = "N/A" Then
        Manzana = ""
    End If

    'Codigo Postal
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Codigo Postal"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Cpostal = Left(Aux, 12)
    If Cpostal = "N/A" Then
        Cpostal = ""
    End If

    'Entre calles
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Entre calles"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Entre = Left(Aux, 80)
    If Entre = "N/A" Then
        Entre = ""
    End If

    'Barrio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Barrio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Barrio = Left(Aux, 30)
    If Barrio = "N/A" Then
        Barrio = ""
    End If

    'Distrito
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Distrito"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    '19/03/2010 - Se cambio la longitud de 30 a 60
    'Localidad = Left(aux, 30)
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Localidad = Left(Aux, 60)
    
    'Canton
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Canton"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Partido = Left(Aux, 30)
    
    'Zona
'    nrocolumna = nrocolumna + 1
'   Obligatorio = False
'    Campoetiqueta = "Zona"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
 '   If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
    '19/03/2010 - Se cambio la longitud a 60
    'Zona = Left(aux, 20)
'    aux = EliminarCHInvalidosII(aux, 1, "")
'    Zona = Left(aux, 60)
    Zona = ""
    
    'Provincia
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Provincia"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Provincia = Left(Aux, 20)
    
    'Pais
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Pais"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Pais = Left(Aux, 20)
    If Pais <> "N/A" Then
        Call ValidarPais(Pais, Nro_Pais)
    Else
        Nro_Pais = 0
    End If
    If Provincia <> "N/A" Then
        Call ValidarProvincia(Provincia, Nro_Provincia, Nro_Pais)
    Else
        Nro_Provincia = 0
    End If
    If Localidad <> "N/A" Then
        Call ValidarLocalidad(Localidad, Nro_Localidad, Nro_Pais, Nro_Provincia)
    Else
        Nro_Localidad = 0
    End If
    If Partido <> "N/A" Then
        Call ValidarPartido(Partido, Nro_Partido)
    Else
        Nro_Partido = 0
    End If
    If Zona <> "N/A" Then
        Call ValidarZona(Zona, Nro_Zona, Nro_Provincia)
    Else
        Nro_Zona = 0
    End If
    If (IngresoDom = True) And (Nro_Localidad = 0) Then
        Texto = ": " & " - Debe Ingresar la Localidad."
        'NroColumna = 25 - AA
        NroColumna = 26
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    If (IngresoDom = True) And (Nro_Provincia = 0) Then
        Texto = ": " & " - Debe Ingresar la Provincia."
        NroColumna = 28
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    If (IngresoDom = True) And (Nro_Pais = 0) Then
        Texto = ": " & " - Debe Ingresar la Pais."
        NroColumna = 29
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    
    'Tel Particular
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tel Particular"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    If Aux = "N/A" Then
        Telefono = ""
    Else
        Aux = EliminarCHInvalidosII(Aux, 3, "")
        Telefono = Left(Aux, 20)
    End If
    
    
    'Tel Laboral
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tel Laboral"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    If Aux = "N/A" Then
        TelLaboral = ""
    Else
        Aux = EliminarCHInvalidosII(Aux, 3, "")
        TelLaboral = Left(Aux, 20)
    End If
    
    'Tel Celular
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tel Celular"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    If Aux = "N/A" Then
        TelCelular = ""
    Else
        Aux = EliminarCHInvalidosII(Aux, 3, "")
        TelCelular = Left(Aux, 20)
    End If

    
    'Email
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Email"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    If Aux <> "N/A" Then
        Aux = EliminarCHInvalidosII(Aux, 4, "")
        Email = Left(Aux, 100)
    Else
        Email = ""
    End If
    
    
'ACA COMIENZAN LAS ESTRUCTURAS
'*****---++++++++++++++++++++++++++++

    'Sucursal
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sucursal"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Sucursal = Aux
    ' Validacion y Creacion de la Sucursal (junto con sus Complementos)
    If Sucursal <> "N/A" Then
    
        'MMM - 12/01/2012
        Flog.writeline Espacios(Tabulador * 1) & "Se va a validar si se debe crear o no la estructura: " & Sucursal
        Flog.writeline Espacios(Tabulador * 1) & "Cuyo tipo de estructura es: 1(Sucursal)"
        Flog.writeline Espacios(Tabulador * 1)
        
        If SucDesc Then
            Call ValidaEstructura(1, Sucursal, nro_sucursal, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(1, Sucursal, nro_sucursal, Inserto_estr)
        End If
        Call CreaTercero(10, Sucursal, ter_sucursal)
        
        If Inserto_estr Then
        
            'MMM - 12/01/2012
            Flog.writeline Espacios(Tabulador * 1) & "Se creo la nueva Sucursal"
            Flog.writeline Espacios(Tabulador * 1)
            
            Call CreaComplemento(1, ter_sucursal, nro_sucursal, Sucursal)
            Inserto_estr = False
        End If
    Else
        nro_sucursal = 0
    End If
    
    'Sector
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sector"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Sector = Aux
    ' Validacion y Creacion del Sector
    If Sector <> "N/A" Then
        'MMM - 12/01/2012
        Flog.writeline Espacios(Tabulador * 1) & "Se va a validar si se debe crear o no la estructura: " & Sector
        Flog.writeline Espacios(Tabulador * 1) & "Cuyo tipo de estructura es: 2(Sector)"
        Flog.writeline Espacios(Tabulador * 1)
        
        If SecDesc Then
            Call ValidaEstructura(2, Sector, nro_sector, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(2, Sector, nro_sector, Inserto_estr)
        End If
        
        'MMM - 12/01/2012
        If Inserto_estr Then
            Flog.writeline Espacios(Tabulador * 1) & "Se creo el nuevo Sector"
            Flog.writeline Espacios(Tabulador * 1)
        End If
    Else
        nro_sector = 0
    End If

    'Convenio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Contrato Colectivo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Convenio = Aux
    ' Validacion, Creacion del Convenio
    If Convenio <> "N/A" Then
        'MMM - 12/01/2012
        Flog.writeline Espacios(Tabulador * 1) & "Se va a validar si se debe crear o no la estructura: " & Convenio
        Flog.writeline Espacios(Tabulador * 1) & "Cuyo tipo de estructura es: 19(Convenio)"
        Flog.writeline Espacios(Tabulador * 1)
        
        If CovDesc Then
            Call ValidaEstructura(19, Convenio, nro_convenio, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(19, Convenio, nro_convenio, Inserto_estr)
        End If
        
        If Inserto_estr Then
            'MMM - 12/01/2012
            Flog.writeline Espacios(Tabulador * 1) & "Se creo el nuevo Convenio"
            Flog.writeline Espacios(Tabulador * 1)
            
            Call CreaComplemento(19, 0, nro_convenio, Convenio)
            Inserto_estr = False
        End If
    Else
        nro_convenio = 0
    End If
    
    
    'Categoria
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Categoria"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    categoria = Aux
    ' Validacion, Creacion de la Categoria
    If (categoria <> "N/A" And nro_convenio <> 0) Then
        
        'MMM - 12/01/2012
        Flog.writeline Espacios(Tabulador * 1) & "Se va a validar si se debe crear o no la estructura: " & categoria
        Flog.writeline Espacios(Tabulador * 1) & "Cuyo tipo de estructura es: 3(Categoria)"
        Flog.writeline Espacios(Tabulador * 1)
        
        If CatDesc Then
            'Call ValidaEstructura(3, categoria, nro_categoria, Inserto_estr)
            Call ValidaCategoria(3, categoria, nro_convenio, nro_categoria, Inserto_estr)
            
        Else
            'Call ValidaEstructuraCodExt(3, categoria, nro_categoria, Inserto_estr)
            Call ValidaCategoriaCodExt(3, categoria, nro_convenio, nro_categoria, Inserto_estr)
        End If
        
        'MMM - 12/01/2012
        If Inserto_estr Then
            Flog.writeline Espacios(Tabulador * 1) & "Se creo la nueva Categoria"
            Flog.writeline Espacios(Tabulador * 1)
        End If
        
    Else
        nro_categoria = 0
    End If
    
    'Puesto
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Puesto"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Puesto = Aux
    'Validacion y Creacion del Puesto (junto con sus Complementos)
    If Puesto <> "N/A" Then
        
        'MMM - 12/01/2012
        Flog.writeline Espacios(Tabulador * 1) & "Se va a validar si se debe crear o no la estructura: " & Puesto
        Flog.writeline Espacios(Tabulador * 1) & "Cuyo tipo de estructura es: 4(Puesto)"
        Flog.writeline Espacios(Tabulador * 1)
        
        If PueDesc Then
            Call ValidaEstructura(4, Puesto, nro_puesto, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(4, Puesto, nro_puesto, Inserto_estr)
        End If
        
        If Inserto_estr Then
            'MMM - 12/01/2012
            Flog.writeline Espacios(Tabulador * 1) & "Se creo el nuevo Puesto"
            Flog.writeline Espacios(Tabulador * 1)
            
            Call CreaComplemento(4, 0, nro_puesto, Puesto)
            Inserto_estr = False
        End If
    Else
        nro_puesto = 0
    End If

    'Centro de Costo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Centro de Costo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    CCosto = Aux
    ' Validacion y Creacion del Centro de Costo
    If CCosto <> "N/A" Then
        'MMM - 12/01/2012
        Flog.writeline Espacios(Tabulador * 1) & "Se va a validar si se debe crear o no la estructura: " & CCosto
        Flog.writeline Espacios(Tabulador * 1) & "Cuyo tipo de estructura es: 5(Centro de Costo)"
        Flog.writeline Espacios(Tabulador * 1)
        
        If CCoDesc Then
            Call ValidaEstructura(5, CCosto, nro_ccosto, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(5, CCosto, nro_ccosto, Inserto_estr)
        End If
        
        'MMM - 12/01/2012
        If Inserto_estr Then
            Flog.writeline Espacios(Tabulador * 1) & "Se creo el nuevo Centro de Costo"
            Flog.writeline Espacios(Tabulador * 1)
        End If
        
    Else
        nro_ccosto = 0
    End If

    'Gerencia
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Gerencia"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Gerencia = Aux
    ' Validacion y Creacion de la Gerencia
    If Gerencia <> "N/A" Then
        'MMM - 12/01/2012
        Flog.writeline Espacios(Tabulador * 1) & "Se va a validar si se debe crear o no la estructura: " & Gerencia
        Flog.writeline Espacios(Tabulador * 1) & "Cuyo tipo de estructura es: 6(Gerencia)"
        Flog.writeline Espacios(Tabulador * 1)
        
        If GerDesc Then
            Call ValidaEstructura(6, Gerencia, nro_gerencia, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(6, Gerencia, nro_gerencia, Inserto_estr)
        End If
        
        'MMM - 12/01/2012
        If Inserto_estr Then
            Flog.writeline Espacios(Tabulador * 1) & "Se creo la nueva Gerencia"
            Flog.writeline Espacios(Tabulador * 1)
        End If
        
    Else
        nro_gerencia = 0
    End If

    
    'Departamento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Departamento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Departamento = Aux
    ' Validacion y Creacion del Departamento
    If Departamento <> "N/A" Then
        'MMM - 12/01/2012
        Flog.writeline Espacios(Tabulador * 1) & "Se va a validar si se debe crear o no la estructura: " & Departamento
        Flog.writeline Espacios(Tabulador * 1) & "Cuyo tipo de estructura es: 9(Departamento)"
        Flog.writeline Espacios(Tabulador * 1)
        
        If DepDesc Then
            Call ValidaEstructura(9, Departamento, nro_departamento, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(9, Departamento, nro_departamento, Inserto_estr)
        End If
        
        'MMM - 12/01/2012
        If Inserto_estr Then
            Flog.writeline Espacios(Tabulador * 1) & "Se creo el nuevo Departamento"
            Flog.writeline Espacios(Tabulador * 1)
        End If
        
    Else
        nro_departamento = 0
    End If


    'Direccion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Direccion = Aux
    ' Validacion y Creacion de direccion
    If Direccion <> "N/A" Then
        
        'MMM - 12/01/2012
        Flog.writeline Espacios(Tabulador * 1) & "Se va a validar si se debe crear o no la estructura: " & Direccion
        Flog.writeline Espacios(Tabulador * 1) & "Cuyo tipo de estructura es: 35(Direccion)"
        Flog.writeline Espacios(Tabulador * 1)
        
        If DirDesc Then
            Call ValidaEstructura(35, Direccion, nro_direccion, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(35, Direccion, nro_direccion, Inserto_estr)
        End If
        
        'MMM - 12/01/2012
        If Inserto_estr Then
            Flog.writeline Espacios(Tabulador * 1) & "Se creo la nueva Direccion"
            Flog.writeline Espacios(Tabulador * 1)
        End If
        
    Else
        nro_direccion = 0
    End If
    
    
    'Caja de Jubilación/Pensión
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Caja de Jubilación/Pensión"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    CajaJub = Aux
    ' Validacion y Creacion de la Caja de Jubilacion
    If CajaJub <> "N/A" Then
    
        'MMM - 12/01/2012
        Flog.writeline Espacios(Tabulador * 1) & "Se va a validar si se debe crear o no la estructura: " & CajaJub
        Flog.writeline Espacios(Tabulador * 1) & "Cuyo tipo de estructura es: 15(Caja de Jubilacion)"
        Flog.writeline Espacios(Tabulador * 1)
        
        If CaJDesc Then
            Call ValidaEstructura(15, CajaJub, nro_cajajub, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(15, CajaJub, nro_cajajub, Inserto_estr)
        End If
        Call CreaTercero(6, CajaJub, ter_cajajub)
        
        If Inserto_estr Then
            'MMM - 12/01/2012
            Flog.writeline Espacios(Tabulador * 1) & "Se creo la nueva Caja de Jubilacion"
            Flog.writeline Espacios(Tabulador * 1)
            Call CreaComplemento(15, ter_cajajub, nro_cajajub, CajaJub)
        End If
    Else
        nro_cajajub = 0
    End If

    'Sindicato
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sindicato"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Sindicato = Aux
    ' Validacion y Creacion del Sindicato
    If Sindicato <> "N/A" Then
        'MMM - 12/01/2012
        Flog.writeline Espacios(Tabulador * 1) & "Se va a validar si se debe crear o no la estructura: " & Sindicato
        Flog.writeline Espacios(Tabulador * 1) & "Cuyo tipo de estructura es: 16(Sindicato)"
        Flog.writeline Espacios(Tabulador * 1)
        
        If SinDesc Then
            Call ValidaEstructura(16, Sindicato, nro_sindicato, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(16, Sindicato, nro_sindicato, Inserto_estr)
        End If
        Call CreaTercero(5, Sindicato, ter_sindicato)
        
        If Inserto_estr Then
            'MMM - 12/01/2012
            Flog.writeline Espacios(Tabulador * 1) & "Se creo el nuevo Sindicato"
            Flog.writeline Espacios(Tabulador * 1)
            Call CreaComplemento(16, ter_sindicato, nro_sindicato, Sindicato)
        End If
    Else
        nro_sindicato = 0
    End If
    
    
    'Obra social por Ley
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Obra social por Ley"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
'    aux = EliminarCHInvalidosII(aux, 1, "")
'    OSocialLey = aux
    OSocialLey = ""
    ' Validacion y Creacion de la Obra Social por Ley
'    If OSocialLey <> "N/A" Then
'        If OSoLeyDesc Then
'            Call ValidaEstructura(24, OSocialLey, nro_osocial_ley, Inserto_estr)
'        Else
'            Call ValidaEstructuraCodExt(24, OSocialLey, nro_osocial_ley, Inserto_estr)
'        End If
'        Call CreaTercero(4, OSocialLey, ter_osocial_ley)
        
'       If Inserto_estr Then
'           Call CreaComplemento(24, ter_osocial_ley, nro_osocial_ley, OSocialLey)
'       Else
'           StrSql = " SELECT origen FROM replica_estr WHERE estrnro = " & nro_osocial_ley
'          OpenRecordset StrSql, rs_repl
'
'            If Not rs_repl.EOF Then
'                ter_osocial_ley = rs_repl!Origen
'                rs_repl.Close
'            End If
            
'        End If
'    Else
        ter_osocial_ley = 0
        nro_osocial_ley = 0
'    End If


    'Plan de OS por Ley
'   nrocolumna = nrocolumna + 1
'   Obligatorio = False
'   Campoetiqueta = "Plan de Obra social por Ley"
'   pos1 = pos2 + 2
'   pos2 = InStr(pos1, strReg, separador) - 1
'   aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'   If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'       Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'       Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'   End If
'    aux = EliminarCHInvalidosII(aux, 1, "")
'    PlanOSLey = aux
    PlanOSLey = ""
    ' Validacion y Creacion del Plan de Obra Social por Ley
'    If (PlanOSLey <> "N/A" And nro_osocial_ley <> 0) Then
'        If PoSLeyDesc Then
'            Call ValidaEstructura(25, PlanOSLey, nro_planos_ley, Inserto_estr)
'        Else
'            Call ValidaEstructuraCodExt(25, PlanOSLey, nro_planos_ley, Inserto_estr)
'        End If
        
'        If Inserto_estr Then
'            Call CreaComplemento(25, ter_osocial_ley, nro_planos_ley, PlanOSLey)
'            Inserto_estr = False
'       End If
'    Else
    nro_planos_ley = 0
'    End If
    
    'OS Elegida
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Seguro Social"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    OSocialElegida = Aux
    ' Validacion y Creacion de la Obra Social Elegida
    If OSocialElegida <> "N/A" Then
        'MMM - 12/01/2012
        Flog.writeline Espacios(Tabulador * 1) & "Se va a validar si se debe crear o no la estructura: " & OSocialElegida
        Flog.writeline Espacios(Tabulador * 1) & "Cuyo tipo de estructura es: 17(Obra Social Elegida)"
        Flog.writeline Espacios(Tabulador * 1)
        
        If OSoElegidaDesc Then
            Call ValidaEstructura(17, OSocialElegida, nro_osocial_elegida, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(17, OSocialElegida, nro_osocial_elegida, Inserto_estr)
        End If
        Call CreaTercero(4, OSocialElegida, ter_osocial_elegida)
        
        If Inserto_estr Then
            'MMM - 12/01/2012
            Flog.writeline Espacios(Tabulador * 1) & "Se creo la nueva obra social elegida"
            Flog.writeline Espacios(Tabulador * 1)
            Call CreaComplemento(17, ter_osocial_elegida, nro_osocial_elegida, OSocialElegida)
        Else
            StrSql = " SELECT origen FROM replica_estr WHERE estrnro = " & nro_osocial_elegida
            OpenRecordset StrSql, rs_Sql
            ter_osocial_elegida = rs_Sql!Origen
            rs_Sql.Close
        End If
    Else
        nro_osocial_elegida = 0
    End If

    'Plan de OS Elegida
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Plan Obra Social elegida"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
'    aux = EliminarCHInvalidosII(aux, 1, "")
'    PlanOSElegida = aux
    PlanOSElegida = ""
    ' Validacion y Creacion del Plan de Obra Social Elegida
'    If (PlanOSElegida <> "N/A" And nro_osocial_elegida <> 0) Then
'        If PoSElegidaDesc Then
'            Call ValidaEstructura(23, PlanOSElegida, nro_planos_elegida, Inserto_estr)
'        Else
'            Call ValidaEstructuraCodExt(23, PlanOSElegida, nro_planos_elegida, Inserto_estr)
'        End If
        
'        If Inserto_estr Then
 '           Call CreaComplemento(23, ter_osocial_elegida, nro_planos_elegida, PlanOSElegida)
  '          Inserto_estr = False
'        End If
'    Else
        nro_planos_elegida = 0
'    End If
    
    
    'Tipo de contratacion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tipo de Contratacion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Contrato = Aux
    ' Validacion y Creacion del Contrato
    If Contrato <> "N/A" Then
        'MMM - 12/01/2012
        Flog.writeline Espacios(Tabulador * 1) & "Se va a validar si se debe crear o no la estructura: " & Contrato
        Flog.writeline Espacios(Tabulador * 1) & "Cuyo tipo de estructura es: 18(Contrato)"
        Flog.writeline Espacios(Tabulador * 1)
        
        If CotDesc Then
            Call ValidaEstructura(18, Contrato, nro_contrato, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(18, Contrato, nro_contrato, Inserto_estr)
        End If
        
        If Inserto_estr Then
            'MMM - 12/01/2012
            Flog.writeline Espacios(Tabulador * 1) & "Se creo el nuevo contrato"
            Flog.writeline Espacios(Tabulador * 1)
            
            Call CreaComplemento(18, 0, nro_contrato, Contrato)
            Inserto_estr = False
        End If
    Else
        nro_contrato = 0
    End If
    
    'Fecha de fin de contrato
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de fin de contrato"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    If Aux <> "N/A" Then
        Aux = EliminarCHInvalidosII(Aux, 2, "")
    End If
    FFinContrato = Aux
    If FFinContrato = "N/A" Or EsNulo(FFinContrato) Then
        Fecha_FinContrato = "Null"
    Else
        Fecha_FinContrato = ConvFecha(FFinContrato)
    End If
    
    'Lugar de pago
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Lugar de pago"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    LPago = Aux
    ' Validacion y Creacion del Lugar de Pago
    If LPago <> "N/A" Then
        'MMM - 12/01/2012
        Flog.writeline Espacios(Tabulador * 1) & "Se va a validar si se debe crear o no la estructura: " & LPago
        Flog.writeline Espacios(Tabulador * 1) & "Cuyo tipo de estructura es: 20(Lugar de Pago)"
        Flog.writeline Espacios(Tabulador * 1)
        
        If LPaDesc Then
            Call ValidaEstructura(20, LPago, nro_lpago, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(20, LPago, nro_lpago, Inserto_estr)
        End If
        
        'MMM - 12/01/2012
        If Inserto_estr Then
            Flog.writeline Espacios(Tabulador * 1) & "Se creo el nuevo Lugar de Pago"
            Flog.writeline Espacios(Tabulador * 1)
        End If
        
    Else
        nro_lpago = 0
    End If

    'Regimen Horario
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Regimen Horario"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    RegHorario = Aux
    If RegHorario <> "N/A" Then
        'MMM - 12/01/2012
        Flog.writeline Espacios(Tabulador * 1) & "Se va a validar si se debe crear o no la estructura: " & RegHorario
        Flog.writeline Espacios(Tabulador * 1) & "Cuyo tipo de estructura es: 21(Regimen Horario)"
        Flog.writeline Espacios(Tabulador * 1)
        
        If RegDesc Then
            Call ValidaEstructura(21, RegHorario, nro_reghorario, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(21, RegHorario, nro_reghorario, Inserto_estr)
        End If
        
        'MMM - 12/01/2012
        If Inserto_estr Then
            Flog.writeline Espacios(Tabulador * 1) & "Se creo el nuevo Regimen Horario"
            Flog.writeline Espacios(Tabulador * 1)
        End If
    Else
        nro_reghorario = 0
    End If

    'Forma de Liquidacion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Forma de Liquidacion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    FormaLiq = Aux
    If FormaLiq <> "N/A" Then
        'MMM - 12/01/2012
        Flog.writeline Espacios(Tabulador * 1) & "Se va a validar si se debe crear o no la estructura: " & FormaLiq
        Flog.writeline Espacios(Tabulador * 1) & "Cuyo tipo de estructura es: 22(Forma de Liquidacion)"
        Flog.writeline Espacios(Tabulador * 1)
        
        If FLiDesc Then
            Call ValidaEstructura(22, FormaLiq, nro_formaliq, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(22, FormaLiq, nro_formaliq, Inserto_estr)
        End If
        ' Agregado por MB 10/08/2006
        If Inserto_estr Then
            'MMM - 12/01/2012
            Flog.writeline Espacios(Tabulador * 1) & "Se creo la nueva Forma de Liquidacion"
            Flog.writeline Espacios(Tabulador * 1)
            
            Call CreaComplemento(22, 0, nro_formaliq, FormaLiq)
            Inserto_estr = False
        End If
    Else
        nro_formaliq = 0
    End If

    'Forma de Pago
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Forma de Pago"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    FormaPago = Aux
    If FormaPago <> "N/A" Then
        StrSql = " SELECT fpagnro FROM formapago WHERE fpagdescabr = '" & FormaPago & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_formapago = rs_Sql!fpagnro
        Else
            StrSql = " INSERT INTO formapago(fpagdescabr,fpagbanc,acunro,monnro) VALUES ('" & FormaPago & "',0,6,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            nro_formapago = getLastIdentity(objConn, "formapago")
        End If
    Else
        nro_formapago = 0
    End If
    
    'Banco de Pago
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Banco de Pago"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    BancoPago = Aux
    If BancoPago <> "N/A" Then
        'MMM - 12/01/2012
        Flog.writeline Espacios(Tabulador * 1) & "Se va a validar si se debe crear o no la estructura: " & BancoPago
        Flog.writeline Espacios(Tabulador * 1) & "Cuyo tipo de estructura es: 41(Banco de Pago)"
        Flog.writeline Espacios(Tabulador * 1)
        
        If BcoDesc Then
            Call ValidaEstructura(41, BancoPago, nro_bancopago, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(41, BancoPago, nro_bancopago, Inserto_estr)
        End If
        Call CreaTercero(13, BancoPago, ter_bancopago)
        
        If Inserto_estr Then
            'MMM - 12/01/2012
            Flog.writeline Espacios(Tabulador * 1) & "Se creo el nuevo Banco de Pago"
            Flog.writeline Espacios(Tabulador * 1)
            
            Call CreaComplemento(41, ter_bancopago, nro_bancopago, BancoPago)
        End If
        fpgo_bancaria = -1
    Else
        nro_bancopago = 0
        fpgo_bancaria = 0
    End If
    
    'Nro de cuenta
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nro de cuenta"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    NroCuenta = Aux
    If NroCuenta = "N/A" Then
        NroCuenta = ""
    Else
        NroCuenta = Left(NroCuenta, 30)
    End If
    
    'CBU
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "CBU"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
'   aux = EliminarCHInvalidosII(aux, 1, "")
'    NroCBU = aux
'    If NroCBU = "N/A" Then
        NroCBU = ""
'    Else
'       NroCBU = Left(NroCBU, 30)

'   End If
    
    'Sucursal del banco
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sucursal del banco"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    SucBanco = Aux
    If SucBanco = "N/A" Then
        SucBanco = ""
    Else
        SucBanco = Left(SucBanco, 10)
    End If


    'Nro de cuenta de acreditacion empresa
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nro de cuenta de acreditacion empresa"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    NroCuentaAcreditacionE = Aux
    If NroCuentaAcreditacionE = "N/A" Or EsNulo(NroCuentaAcreditacionE) Then
        NroCuentaAcreditacionE = ""
    Else
        StrSql = "SELECT * FROM ctabancaria WHERE cbnro ='" & NroCuentaAcreditacionE & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
            Texto = ": " & " - Nro de cuenta de acreditacion empresa no existe."
            'NroColumna = 59 - AA
            NroColumna = 55
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            NroCuentaAcreditacionE = ""
        End If
    End If
    
    'Actividad SIJP
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Actividad SIJP"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'       Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
'    aux = EliminarCHInvalidosII(aux, 1, "")
'    Actividad = aux
    Actividad = ""
'    If Actividad <> "N/A" Then
'        If ActDesc Then
'            Call ValidaEstructura(29, Actividad, nro_actividad, Inserto_estr)
'        Else
'            Call ValidaEstructuraCodExt(29, Actividad, nro_actividad, Inserto_estr)
'        End If
'    Else
        nro_actividad = 0
'    End If

    'Condicion SIJP
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Condicion SIJP"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
'    aux = EliminarCHInvalidosII(aux, 1, "")
'    CondSIJP = aux
    CondSIJP = ""
'    If CondSIJP <> "N/A" And Not EsNulo(CondSIJP) Then
'        If CSJDesc Then
'            Call ValidaEstructura(31, CondSIJP, nro_condsijp, Inserto_estr)
'        Else
'            Call ValidaEstructuraCodExt(31, CondSIJP, nro_condsijp, Inserto_estr)
'        End If
'    Else
        nro_condsijp = 0
'    End If

    'Situacion de Revista SIJP
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Situacion de Revista SIJP"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
'    aux = EliminarCHInvalidosII(aux, 1, "")
'    SitRev = aux
    SitRev = ""
'    If SitRev <> "N/A" And Not EsNulo(SitRev) Then
'        If SReDesc Then
'            Call ValidaEstructura(30, SitRev, nro_sitrev, Inserto_estr)
'        Else
'            Call ValidaEstructuraCodExt(30, SitRev, nro_sitrev, Inserto_estr)
'        End If
'    Else
        nro_sitrev = 0
'    End If
    
    
    'INS
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "INS"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    ART = Aux
    If ART <> "N/A" And Not EsNulo(ART) Then
        'MMM - 12/01/2012
        Flog.writeline Espacios(Tabulador * 1) & "Se va a validar si se debe crear o no la estructura: " & ART
        Flog.writeline Espacios(Tabulador * 1) & "Cuyo tipo de estructura es: 40(ART)"
        Flog.writeline Espacios(Tabulador * 1)
        
        If ARTDesc Then
            Call ValidaEstructura(40, ART, nro_art, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(40, ART, nro_art, Inserto_estr)
        End If
        Call CreaTercero(8, ART, ter_art)
        
        If Inserto_estr Then
            'MMM - 12/01/2012
            Flog.writeline Espacios(Tabulador * 1) & "Se creo la nueva ART"
            Flog.writeline Espacios(Tabulador * 1)
            
            Call CreaComplemento(40, ter_art, nro_art, ART)
        End If
    Else
        nro_art = 0
    End If
    
    'Estado del empleado
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estado del empleado"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Estado = Aux
    If UCase(Estado) = "ACTIVO" Then
        ter_estado = -1
    Else
        ter_estado = 0
    End If
    
    
    'Causa de baja
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Causa de baja"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    CausaBaja = Aux
    If Not EsNulo(CausaBaja) And CausaBaja <> "N/A" Then
        StrSql = " SELECT caunro FROM causa WHERE caudes = '" & CausaBaja & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_causabaja = rs_Sql!caunro
        Else
            StrSql = " INSERT INTO causa(caudes,causist,caudesvin,empnro) VALUES ('" & CausaBaja & "',0,-1,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            nro_causabaja = getLastIdentity(objConn, "causa")
        End If
    Else
        nro_causabaja = 0
    End If
    
    
    
    'Fecha de baja
    NroColumna = NroColumna + 1
        ' Si hay una causa de baja, se tiene que cargar ssi la Fecha de Baja (tablero adp)
    If nro_causabaja <> 0 Then
        Obligatorio = True
    Else
        Obligatorio = False
    End If
    Campoetiqueta = "Fecha de baja"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If Aux <> "N/A" Then
    Aux = EliminarCHInvalidosII(Aux, 2, "")
    End If
    FBaja = Aux
    If EsNulo(FBaja) Or FBaja = "N/A" Then
        F_Baja = "Null"
    Else
        F_Baja = ConvFecha(FBaja)
    End If

        
    
    'Empresa
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Patrono"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Empresa = Aux
    Else
        pos2 = Len(strReg)
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Empresa = Aux
    End If
    If Empresa <> "N/A" Or EsNulo(Empresa) Then
    
         'MMM - 12/01/2012
        Flog.writeline Espacios(Tabulador * 1) & "Se va a validar si se debe crear o no la estructura: " & Empresa
        Flog.writeline Espacios(Tabulador * 1) & "Cuyo tipo de estructura es: 10(Empresa)"
        Flog.writeline Espacios(Tabulador * 1)
        
        If EmpDesc Then
            Call ValidaEstructura(10, Empresa, nro_empresa, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(10, Empresa, nro_empresa, Inserto_estr)
        End If
        Call CreaTercero(10, Empresa, Ter_Empresa)
        
        If Inserto_estr Then
            'MMM - 12/01/2012
            Flog.writeline Espacios(Tabulador * 1) & "Se creo la nueva Empresa"
            Flog.writeline Espacios(Tabulador * 1)
            
            Call CreaComplemento(10, Ter_Empresa, nro_empresa, Empresa)
        End If
    Else
        nro_empresa = 0
    End If
    
    'Remuneración del Empleado
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Remuneración del Empleado"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Empremu = Aux
    If Empremu = "N/A" Or EsNulo(Empremu) Then
        Empremu = "Null"
    End If
   
    'Modelo de Organizacion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Modelo de Organizacion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        ModOrg = Aux
        If ModOrg = "N/A" Or EsNulo(ModOrg) Then
            'agrego codigo sebastian stremel 15/09/2011
            StrSql = "SELECT * FROM adptemplate WHERE tplatedefault = -1"
            OpenRecordset StrSql, rs_tpl
            If Not rs_tpl.EOF Then
                nro_ModOrg = rs_tpl!tplatenro
            Else
                StrSql = "SELECT top 1 * FROM adptemplate"
                OpenRecordset StrSql, rs_tpl
                If rs_tpl.EOF Then
                    Texto = ": no hay modelos de organizacion"
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                    RegError = RegError + 1
                    Exit Sub
                Else
                    nro_ModOrg = rs_tpl!tplatenro
                End If
                
            End If
            
            'nro_ModOrg = 0
        Else
            StrSql = "SELECT * FROM adptemplate WHERE tplatedesabr = '" & ModOrg & "'"
            OpenRecordset StrSql, rs_tpl
            If rs_tpl.EOF Then
                StrSql = "INSERT INTO adptemplate (tplatedesabr,tplatedefault) VALUES ('" & ModOrg & "',-1)"
                objConn.Execute StrSql, , adExecuteNoRecords
                nro_ModOrg = getLastIdentity(objConn, "adptemplate")
            Else
                nro_ModOrg = rs_tpl!tplatenro
            End If
        End If
    Else 'entra aca si el formato de archivo esta mal, no debria llegar nunca aca
            StrSql = "SELECT * FROM adptemplate WHERE tplatedefault = -1"
            OpenRecordset StrSql, rs_tpl
            If Not rs_tpl.EOF Then
                nro_ModOrg = rs_tpl!tplatenro
            Else
                StrSql = "SELECT top 1 * FROM adptemplate"
                OpenRecordset StrSql, rs_tpl
                If rs_tpl.EOF Then
                    Texto = ": no hay modelos de organizacion"
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                    RegError = RegError + 1
                    Exit Sub
                Else
                    nro_ModOrg = rs_tpl!tplatenro
                End If
                
            End If

        
    End If

    'Reporta_a  campo empleado.empreporta va el tercero
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Reporta_a"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Reporta_a = Aux
        If Not EsNulo(Reporta_a) And Reporta_a <> "N/A" Then
            If IsNumeric(Reporta_a) Then
                StrSql = "SELECT * FROM empleado WHERE empleado.empleg = " & Reporta_a
                If rs_emp.State = adStateOpen Then rs_emp.Close
                OpenRecordset StrSql, rs_emp
                If (Not rs_emp.EOF) Then
                    Nro_Reporta_a = rs_emp!Ternro
                Else
                    Nro_Reporta_a = 0
                    Texto = ": " & "El Empleado " & Reporta_a & " no existe."
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                End If
            Else
                Nro_Reporta_a = 0
                Texto = "El valor no es numérico."
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            End If
        End If
    Else
        Nro_Reporta_a = 0
        'no es obligatorio
    End If
    If rs_emp.State = adStateOpen Then rs_emp.Close
    

    'Grupo de Seguridad
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Grupo de Seguridad"
    pos1 = pos2 + 2
    pos2 = Len(strReg) 'InStr(pos1, strReg, Separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        GrupoSeguridad = Aux
        If GrupoSeguridad <> "N/A" And Not EsNulo(GrupoSeguridad) Then
            'MMM - 12/01/2012
            Flog.writeline Espacios(Tabulador * 1) & "Se va a validar si se debe crear o no la estructura: " & GrupoSeguridad
            Flog.writeline Espacios(Tabulador * 1) & "Cuyo tipo de estructura es: 7(Grupo de Seguridad)"
            Flog.writeline Espacios(Tabulador * 1)
            
            Call ValidaEstructura(7, GrupoSeguridad, Nro_GrupoSeguridad, Inserto_estr)
            
            'MMM - 12/01/2012
            If Inserto_estr Then
                Flog.writeline Espacios(Tabulador * 1) & "Se creo el nuevo Grupo de Seguridad"
                Flog.writeline Espacios(Tabulador * 1)
            End If
        Else
            Nro_GrupoSeguridad = 0
        End If
    Else
        Nro_GrupoSeguridad = 0
    End If
    
 
'Fin lectura de campos
' =====================================================================================================

  'JPB - Inicializo el pass+perfil (l_ess_Pass_Estandar y l_ess_Perfil_Estandar) por defecto del Autogestion en el caso que este habilitado el confper 12
  '--------------------------------
  Call ESS_Configuracion_Default
 
  
  ' Inserto el Tercero
  If F_Nacimiento = "Null" Then
    F_Nacimiento = "''"
  End If
  If F_Ingreso = "Null" Then
    F_Ingreso = "''"
  End If
  
  If CalculaLegajo Then
    Call CalcularLegajo(nro_empresa, Legajo)
  End If

    If Not ExisteLeg Then
    
        'Busco si esta config la maxima cant de empleados
        MaxEmpl = 0
        StrSql = "SELECT lib_generica FROM sistema"
        OpenRecordset StrSql, rs_Sql
        If Not EsNulo(rs_Sql!lib_generica) Then
            If IsNumeric(Decryptar("56238", rs_Sql!lib_generica)) Then MaxEmpl = Decryptar("56238", rs_Sql!lib_generica)
        End If
        
        If MaxEmpl > 0 Then
            'Calculo la cantidad actual de empleados
            StrSql = "SELECT COUNT(empleg) cant FROM empleado"
            OpenRecordset StrSql, rs_Sql
            If Not rs_Sql.EOF Then
                If Not EsNulo(rs_Sql!cant) Then CantEmpl = rs_Sql!cant
            End If
            
            'Controlo cantidad
            If CantEmpl >= MaxEmpl Then
                Texto = ": " & "El sistema alcanzo el maximo de " & MaxEmpl & " empleados permitidos."
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                RegError = RegError + 1
                Exit Sub
            End If
        End If
    
        StrSql = " INSERT INTO tercero(ternom,terape,ternom2,terape2,terfecnac,tersex,terestciv,estcivnro,nacionalnro,paisnro,terfecing)"
        StrSql = StrSql & " VALUES('" & nombre & "','" & Apellido & "','" & nombre2 & "','" & Apellido2 & "'," & F_Nacimiento & "," & ter_sexo & "," & nro_estcivil & "," & nro_estcivil & ","
        If nro_nacionalidad <> 0 Then
            StrSql = StrSql & nro_nacionalidad & ","
        Else
            StrSql = StrSql & "null,"
        End If
        If nro_paisnac <> 0 Then
            StrSql = StrSql & nro_paisnac & ","
        Else
            StrSql = StrSql & "null,"
        End If
        StrSql = StrSql & F_Ingreso & ")"
        objConn.Execute StrSql, , adExecuteNoRecords

        NroTercero = getLastIdentity(objConn, "tercero")
        
        Texto = ": " & "Codigo de Tercero = " & NroTercero
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
        
        'JPB- Inserto el Registro correspondiente en ter_tip
         StrSql = " INSERT INTO ter_tip(ternro,tipnro) VALUES(" & NroTercero & ",1)"
         objConn.Execute StrSql, , adExecuteNoRecords
        
    Else
        StrSql = " UPDATE tercero SET "
        StrSql = StrSql & " ternom = " & "'" & nombre & "'"
        StrSql = StrSql & ", terape = " & "'" & Apellido & "'"
        StrSql = StrSql & ", ternom2 = " & "'" & nombre2 & "'"
        StrSql = StrSql & ", terape2 = " & "'" & Apellido2 & "'"
        StrSql = StrSql & ", terfecnac = " & F_Nacimiento
        StrSql = StrSql & ", tersex = " & ter_sexo
        StrSql = StrSql & ", terestciv =" & nro_estcivil
        StrSql = StrSql & ", estcivnro =" & "'" & nro_estcivil & "'"
        If nro_nacionalidad <> 0 Then
            StrSql = StrSql & ", nacionalnro =" & nro_nacionalidad
        End If
        StrSql = StrSql & ", terfecing =" & F_Ingreso
        If nro_paisnac <> 0 Then
            StrSql = StrSql & ", paisnro =" & nro_paisnac
        End If
        StrSql = StrSql & " WHERE ternro = " & NroTercero
        objConn.Execute StrSql, , adExecuteNoRecords
      
        Texto = ": " & " - Empleado: " & Legajo & " - Ese Empleado ya existe en la base. Datos de tercero actualizados"
        NroColumna = 1
        Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, strReg)
        
          '-----------------------------------------------------------------------
        'JPB - Si el documento estaba asociado a un postulante se le debe cambiar el tertip (14) por el 1
        If l_ExistePostulante Then
          'JPB - Modifico el estado del postulante
          StrSql = " UPDATE pos_postulante SET "
          StrSql = StrSql & " posest = 0 "
          StrSql = StrSql & " WHERE ternro = " & NroTercero
          objConn.Execute StrSql, , adExecuteNoRecords
          Texto = ": " & "El postulante " & NroTercero & " quedo inactivo para pasar a ser empleado"
          Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
          'JPB -  Inserto el Registro correspondiente en ter_tip
          StrSql = " INSERT INTO ter_tip(ternro,tipnro) VALUES(" & NroTercero & ",1)"
          objConn.Execute StrSql, , adExecuteNoRecords
          Texto = ": " & "El tertip del tercero " & NroTercero & " se agrego como empleado"
          Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
        End If
        
        'JPB - Si el documento estaba asociado a un familiar se le debe cambiar el tertip (3) por el 1
        If l_ExisteFamiliar Then
          'JPB -  Inserto el Registro correspondiente en ter_tip
          StrSql = " INSERT INTO ter_tip(ternro,tipnro) VALUES(" & NroTercero & ",1)"
          objConn.Execute StrSql, , adExecuteNoRecords
          Texto = ": " & "El tertip del tercero " & NroTercero & " se agrego como empleado"
          Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
        End If
        '-----------------------------------------------------------------------
        
    End If
    
    If Not ExisteLeg Then
        StrSql = " INSERT INTO empleado(empleg,empfecalta,empfecbaja,empest,empfaltagr,empfbajaprev,"
        StrSql = StrSql & "ternro,nivnro,empestudia,terape,ternom,terape2,ternom2,empinterno,empemail,"
        StrSql = StrSql & "empnro,tplatenro,empremu"
        If Nro_Reporta_a <> 0 Then
            StrSql = StrSql & ",empreporta"
        End If
        
        'JPB - Si esta habilitado el confper 12 asigno el pass+perfil por defecto al empleado
        '------------------------------------------------------------------------------------
        If (l_ess_Pass_Estandar <> "") And (l_ess_Perfil_Estandar <> "") Then
             StrSql = StrSql & ",empessactivo,emppass,perfnro"
        End If
        '------------------------------------------------------------------------------------
        
        StrSql = StrSql & ") VALUES("
        StrSql = StrSql & Legajo & "," & F_Alta & "," & F_Baja & "," & ter_estado & "," & F_Alta & "," & Fecha_FinContrato & ","
        StrSql = StrSql & NroTercero & "," & nro_nivest & "," & ter_estudio & ",'" & Apellido & "','"
        StrSql = StrSql & nombre & "','" & Apellido2 & "','" & nombre2 & "',Null,'" & Email & "',1," & nro_ModOrg & "," & Empremu
        If Nro_Reporta_a <> 0 Then
            StrSql = StrSql & "," & Nro_Reporta_a
        End If
        
        'JPB - Si esta habilitado el confper 12 asigno el pass+perfil por defecto al empleado
        '------------------------------------------------------------------------------------
        If (l_ess_Pass_Estandar <> "") And (l_ess_Perfil_Estandar <> "") Then
             StrSql = StrSql & ",-1,'" & l_ess_Pass_Estandar & "'," & l_ess_Perfil_Estandar
        End If
        '------------------------------------------------------------------------------------
        
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = ": " & "Empleado insertado - " & Legajo & " - " & Apellido & " - " & nombre
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
    Else
        StrSql = " UPDATE empleado SET "
        StrSql = StrSql & " empleg = " & Legajo
        StrSql = StrSql & " ,empfecalta = " & F_Alta
        StrSql = StrSql & " ,empfecbaja = " & F_Baja
        StrSql = StrSql & " ,empfbajaprev = " & Fecha_FinContrato
        StrSql = StrSql & " ,empest = " & ter_estado
        StrSql = StrSql & " ,empfaltagr = " & F_Alta
        StrSql = StrSql & " ,nivnro = " & nro_nivest
        StrSql = StrSql & " ,empestudia = " & ter_estudio
        StrSql = StrSql & " ,terape = " & "'" & Apellido & "'"
        StrSql = StrSql & " ,ternom = " & "'" & nombre & "'"
        StrSql = StrSql & " ,empemail = " & "'" & Email & "'"
        StrSql = StrSql & " ,empnro = 1 "
        StrSql = StrSql & " ,tplatenro =" & nro_ModOrg
        StrSql = StrSql & " ,Empremu =" & Empremu
        
        If Nro_Reporta_a <> 0 Then
            StrSql = StrSql & ", empreporta =" & Nro_Reporta_a
        End If
        
        'JPB - Si esta habilitado el confper 12 asigno el pass+perfil por defecto al empleado
        '------------------------------------------------------------------------------------
        If (l_ess_Pass_Estandar <> "") And (l_ess_Perfil_Estandar <> "") Then
            StrSql = StrSql & ", empessactivo = -1"
            StrSql = StrSql & ", emppass = '" & l_ess_Pass_Estandar & "'"
            StrSql = StrSql & ", perfnro =" & l_ess_Perfil_Estandar
        End If
        '------------------------------------------------------------------------------------
        
        StrSql = StrSql & " WHERE ternro = " & NroTercero
        objConn.Execute StrSql, , adExecuteNoRecords
    
        Texto = ": " & "Empleado Actualizado - " & Legajo & " - " & Apellido & " - " & nombre
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
    End If
    
    ' Inserto el Registro correspondiente en ter_tip
   ' If Not ExisteLeg Then
   '     StrSql = " INSERT INTO ter_tip(ternro,tipnro) VALUES(" & NroTercero & ",1)"
   '     objConn.Execute StrSql, , adExecuteNoRecords
   ' End If

' Inserto los Documentos
   ' If Not ExisteLeg Then
    'JPB - Verifico que no exista el tercero
     If (Not ExisteLeg) And (Not l_ExistePostulante) And (Not l_ExisteFamiliar) Then
        If Nro_TDocumento <> 0 Then
            StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
            StrSql = StrSql & " VALUES(" & NroTercero & "," & Nro_TDocumento & ",'" & Ndocu & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            Texto = ": " & "Inserte el Documento - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        End If
    Else
        If Nro_TDocumento <> 0 Then
            StrSql = "SELECT * FROM ter_doc WHERE ternro = " & NroTercero
            StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If rs.EOF Then
                StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
                StrSql = StrSql & " VALUES(" & NroTercero & "," & Nro_TDocumento & ",'" & Ndocu & "')"
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = ": " & "Inserte el Documento - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            Else
                StrSql = " UPDATE ter_doc SET "
                StrSql = StrSql & " nrodoc = '" & Ndocu & "'"
                StrSql = StrSql & " WHERE ternro = " & NroTercero
                StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = Texto = ": " & "Documento actualizado - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
    End If
  
  
'    If Not ExisteLeg Then
'        If Cuil <> "" Then
'            StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
'            StrSql = StrSql & " VALUES(" & NroTercero & ",10,'" & Cuil & "')"
'            objConn.Execute StrSql, , adExecuteNoRecords
'            Texto = ": " & "Inserte el CUIL - "
'            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
'        End If
'    Else
'        If Cuil <> "" Then
'            StrSql = "SELECT * FROM ter_doc WHERE ternro = " & NroTercero
'           StrSql = StrSql & " AND tidnro = 10 "
'          If rs.State = adStateOpen Then rs.Close
'            OpenRecordset StrSql, rs
'            If rs.EOF Then
'                StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
'                StrSql = StrSql & " VALUES(" & NroTercero & ",10,'" & Cuil & "')"
'                objConn.Execute StrSql, , adExecuteNoRecords
'                Texto = ": " & "Inserte el CUIL - "
'                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
'            Else
'                StrSql = " UPDATE ter_doc SET "
'                StrSql = StrSql & " nrodoc = '" & Cuil & "'"
'                StrSql = StrSql & " WHERE ternro = " & NroTercero
'                StrSql = StrSql & " AND tidnro = 10"
'                objConn.Execute StrSql, , adExecuteNoRecords
'
'                Texto = Texto = ": " & "CUIL actualizado - "
'                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
'            End If
'        End If
'    End If

' Inserto el Domicilio
  If rs.State = adStateOpen Then
    rs.Close
  End If
  
 ' If Not ExisteLeg Then
   'JPB - Verifico que no exista el tercero
   If (Not ExisteLeg) And (Not l_ExistePostulante) And (Not l_ExisteFamiliar) Then
   
    If (Nro_Localidad <> 0 And Nro_Provincia <> 0 And Nro_Pais <> 0) Then
        StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
        StrSql = StrSql & " VALUES(1," & NroTercero & ",-1,2)"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        NroDom = getLastIdentity(objConn, "cabdom")
      
        StrSql = " INSERT INTO detdom(domnro,calle,nro,piso,oficdepto,torre,manzana,codigopostal,entrecalles,"
        StrSql = StrSql & "locnro,provnro,paisnro,barrio,partnro,zonanro) "
        StrSql = StrSql & " VALUES (" & NroDom & ",'" & Calle & "','" & Nro_Nrodom & "','" & Piso & "','"
        StrSql = StrSql & Depto & "','" & Torre & "','" & Manzana & "','" & Cpostal & "','" & Entre & "'," & Nro_Localidad & ","
        StrSql = StrSql & Nro_Provincia & "," & Nro_Pais & ",'" & Barrio & "'," & Nro_Partido & "," & Nro_Zona & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
      
        Texto = ": " & "Inserte el Domicilio - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        
        If Telefono <> "" Then
            'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
            StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
            StrSql = StrSql & " VALUES(" & NroDom & ",'" & Telefono & "',0,-1,0,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            Texto = ": " & "Inserte el Telefono Principal - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        End If
        If TelLaboral <> "" Then
            StrSql = "SELECT * FROM telefono "
            StrSql = StrSql & " WHERE domnro =" & NroDom
            StrSql = StrSql & " AND telnro ='" & TelLaboral & "'"
            If rs_Tel.State = adStateOpen Then rs_Tel.Close
            OpenRecordset StrSql, rs_Tel
            If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelLaboral & "',0,0,0,3)"
                objConn.Execute StrSql, , adExecuteNoRecords
                  
                Texto = ": " & "Inserte el Telefono Laboral - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
        If TelCelular <> "" Then
            StrSql = "SELECT * FROM telefono "
            StrSql = StrSql & " WHERE domnro =" & NroDom
            StrSql = StrSql & " AND telnro ='" & TelCelular & "'"
            If rs_Tel.State = adStateOpen Then rs_Tel.Close
            OpenRecordset StrSql, rs_Tel
            If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelCelular & "',0,0,-1,2)"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Inserte el Telefono Celular - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
    End If
  Else
    If (Nro_Localidad <> 0 And Nro_Provincia <> 0 And Nro_Pais <> 0) Then
        StrSql = "SELECT * FROM cabdom  "
        StrSql = StrSql & " WHERE tipnro = 1"
        StrSql = StrSql & " AND ternro = " & NroTercero
        StrSql = StrSql & " AND domdefault = -1"
        StrSql = StrSql & " AND tidonro = 2"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
          StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
          StrSql = StrSql & " VALUES(1," & NroTercero & ",-1,2)"
          objConn.Execute StrSql, , adExecuteNoRecords
          
          NroDom = getLastIdentity(objConn, "cabdom")
        
          StrSql = " INSERT INTO detdom(domnro,calle,nro,piso,oficdepto,torre,manzana,codigopostal,entrecalles,"
          StrSql = StrSql & "locnro,provnro,paisnro,barrio,partnro,zonanro) "
          StrSql = StrSql & " VALUES (" & NroDom & ",'" & Calle & "','" & Nro_Nrodom & "','" & Piso & "','"
          StrSql = StrSql & Depto & "','" & Torre & "','" & Manzana & "','" & Cpostal & "','" & Entre & "'," & Nro_Localidad & ","
          StrSql = StrSql & Nro_Provincia & "," & Nro_Pais & ",'" & Barrio & "'," & Nro_Partido & "," & Nro_Zona & ")"
          objConn.Execute StrSql, , adExecuteNoRecords
        
          Texto = ": " & "Inserte el Domicilio - "
          Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
          
          If Telefono <> "" Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
              StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
              StrSql = StrSql & " VALUES(" & NroDom & ",'" & Telefono & "',0,-1,0,1)"
              objConn.Execute StrSql, , adExecuteNoRecords

              Texto = ": " & "Inserte el Telefono Principal - "
              Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
          End If
          If TelLaboral <> "" Then
              StrSql = "SELECT * FROM telefono "
              StrSql = StrSql & " WHERE domnro =" & NroDom
              StrSql = StrSql & " AND telnro ='" & TelLaboral & "'"
              If rs_Tel.State = adStateOpen Then rs_Tel.Close
              OpenRecordset StrSql, rs_Tel
              If rs_Tel.EOF Then
                    'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                  StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                  StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelLaboral & "',0,0,0,3)"
                  objConn.Execute StrSql, , adExecuteNoRecords
                    
                  Texto = ": " & "Inserte el Telefono Laboral - "
                  Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
              End If
          End If
          If TelCelular <> "" Then
              StrSql = "SELECT * FROM telefono "
              StrSql = StrSql & " WHERE domnro =" & NroDom
              StrSql = StrSql & " AND telnro ='" & TelCelular & "'"
              If rs_Tel.State = adStateOpen Then rs_Tel.Close
              OpenRecordset StrSql, rs_Tel
              If rs_Tel.EOF Then
                    'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                  StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                  StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelCelular & "',0,0,-1,2)"
                  objConn.Execute StrSql, , adExecuteNoRecords
                  Texto = ": " & "Inserte el Telefono Celular - "
                  Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
              End If
          End If
        Else
            StrSql = " UPDATE detdom SET "
            StrSql = StrSql & " calle =" & "'" & Calle & "'"
            StrSql = StrSql & ",nro =" & "'" & Nro_Nrodom & "'"
            StrSql = StrSql & ",piso =" & "'" & Piso & "'"
            StrSql = StrSql & ",oficdepto =" & "'" & Depto & "'"
            StrSql = StrSql & ",torre =" & "'" & Torre & "'"
            StrSql = StrSql & ",manzana =" & "'" & Manzana & "'"
            StrSql = StrSql & ",codigopostal =" & "'" & Cpostal & "'"
            StrSql = StrSql & ",entrecalles =" & "'" & Entre & "'"
            StrSql = StrSql & ",locnro =" & Nro_Localidad
            StrSql = StrSql & ",provnro =" & Nro_Provincia
            StrSql = StrSql & ",paisnro =" & Nro_Pais
            StrSql = StrSql & ", partnro = " & Nro_Partido
            StrSql = StrSql & ", zonanro =" & Nro_Zona
            StrSql = StrSql & " WHERE domnro = " & rs!domnro
            objConn.Execute StrSql, , adExecuteNoRecords
        
            Texto = ": " & "Domicilio Actualizado - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        
            If Telefono <> "" Then
                StrSql = "SELECT * FROM telefono "
                StrSql = StrSql & " WHERE domnro =" & rs!domnro
                StrSql = StrSql & " AND telnro ='" & Telefono & "'"
                If rs_Tel.State = adStateOpen Then rs_Tel.Close
                OpenRecordset StrSql, rs_Tel
                If rs_Tel.EOF Then
                    'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                    StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                    StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & Telefono & "',0,-1,0,1)"
                    objConn.Execute StrSql, , adExecuteNoRecords
                      
                    Texto = ": " & "Inserte el Telefono Principal - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            End If
            If TelLaboral <> "" Then
                StrSql = "SELECT * FROM telefono "
                StrSql = StrSql & " WHERE domnro =" & rs!domnro
                StrSql = StrSql & " AND telnro ='" & TelLaboral & "'"
                If rs_Tel.State = adStateOpen Then rs_Tel.Close
                OpenRecordset StrSql, rs_Tel
                If rs_Tel.EOF Then
                    'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                    StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                    StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & TelLaboral & "',0,0,0,3)"
                    objConn.Execute StrSql, , adExecuteNoRecords
                      
                    Texto = ": " & "Inserte el Telefono Laboral - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            End If
            If TelCelular <> "" Then
                StrSql = "SELECT * FROM telefono "
                StrSql = StrSql & " WHERE domnro =" & rs!domnro
                StrSql = StrSql & " AND telnro ='" & TelCelular & "'"
                If rs_Tel.State = adStateOpen Then rs_Tel.Close
                OpenRecordset StrSql, rs_Tel
                If rs_Tel.EOF Then
                    'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                    StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                    StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & TelCelular & "',0,0,-1,2)"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = ": " & "Inserte el Telefono Celular - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            End If
        End If
    End If
  End If
  


'If Not ExisteLeg Then
'JPB - Verifico que no exista el tercero
 If (Not ExisteLeg) And (Not l_ExistePostulante) And (Not l_ExisteFamiliar) Then
    ' Inserto las Fases
    StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
    StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
    If nro_causabaja <> 0 Then
        StrSql = StrSql & nro_causabaja
        StrSql = StrSql & ",0,-1,-1,-1,-1,-1)"  ' estado fase=0  - no mira ter_estado
    Else
        StrSql = StrSql & "null"
        StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
    End If
    objConn.Execute StrSql, , adExecuteNoRecords
    
    If nro_causabaja <> 0 Then
        Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
    End If
    
Else
    'FGZ - 23/07/2010
    'SI existe el legajo reviso si estaba activo o inactivo.
    '   Si estaba inactivo y ahora el estado es activo dedeuzco que se trata de un reingreso
    '   ==> intento insertar la fase.
    '   Problemas potenciales
    '
    '   Existe Fase cerrada *****
    '   Fase anterior  ------[------------------]--------
    'Casos
    '   Fecha ingreso  ---FI----------------------------- ==> no se puede insertar (informar error)
    '   Fecha ingreso  ---------   FI-------------------- ==> tenfo 2 posibilidades
    '                                                           Cierro fase un dia antes de FI y creo nueva fase
    '                                                           no se puede insertar (informar error)
    '   Fecha ingreso  -----------------------------FI--- ==> inserto la nueva fase
    
    '   Existe Fase abierta *****
    '   Fase anterior  ------[---------------------------
    'Casos
    '   Fecha ingreso  ---FI----------------------------- ==> no se puede insertar (informar error)
    '   Fecha ingreso  -------------FI------------------- ==> Cierro fase un dia antes de FI y creo nueva fase
   
    'Si no existe fase ==> simplemente crea la fase
    
    StrSql = "SELECT * FROM fases WHERE empleado = " & NroTercero
    StrSql = StrSql & " ORDER BY altfec DESC"
    OpenRecordset StrSql, rs
    
    If rs.EOF Then
        'No Existe ==> Inserto
        StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
        StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
        If nro_causabaja <> 0 Then
          StrSql = StrSql & nro_causabaja
          StrSql = StrSql & ",0,-1,-1,-1,-1,-1)"  ' estado fase=0  - no mira ter_estado
        Else
          StrSql = StrSql & "null"
          StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
        End If
        objConn.Execute StrSql, , adExecuteNoRecords
        
        If nro_causabaja <> 0 Then
            Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
        End If
        
    Else
        'Existe
        Texto = ": " & "Existe Fase"
        If CBool(rs!Estado) Then
            'Activa
            Texto = Texto & " activa. " & rs!altfec & " - " & IIf(EsNulo(rs!bajfec), "#", rs!bajfec)
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            
            
            'Si ahora está inactivo ==> actualiza la fase
            If Not CBool(ter_estado) Then
                'la cierro y abro otro
                StrSql = " UPDATE fases SET "
                StrSql = StrSql & " bajfec =" & F_Baja
                StrSql = StrSql & ",estado = 0 "
                If nro_causabaja <> 0 Then
                StrSql = StrSql & ", caunro =" & nro_causabaja
                End If
                StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
                objConn.Execute StrSql, , adExecuteNoRecords
            
                Texto = ": " & "Fase Actualizada."
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                
                If nro_causabaja <> 0 Then
                    Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
                End If
                
            Else
                Texto = ": " & "Si desea actualizar debe corregir la situacion manualmente."
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
            
        Else
            'Inactiva
            Texto = Texto & " inactiva "
            If EsNulo(rs!bajfec) Then
                Texto = Texto & " abierta " & rs!altfec & " - #"
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                
                If CDate(rs!altfec) < CDate(FAlta) Then
                    Texto = ": " & "Cierro la fase anterior (un dia antes) y creo la nueva fase"
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    
                    'la cierro y abro otro - (se cierra a FAlta-1)
                    StrSql = " UPDATE fases SET "
                    StrSql = StrSql & "bajfec =" & ConvFecha(DateAdd("d", -1, FAlta))
                    StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
                    objConn.Execute StrSql, , adExecuteNoRecords
                        
                    'abro una nueva
                    StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
                    StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
                    If nro_causabaja <> 0 Then
                      StrSql = StrSql & nro_causabaja
                      StrSql = StrSql & ",0,-1,-1,-1,-1,-1)"
                    Else
                      StrSql = StrSql & "null"
                      StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    Texto = ": " & "Fase Actualizada."
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    
                    If nro_causabaja <> 0 Then
                        Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
                    End If
                    
                Else
                    If CDate(rs!altfec) > CDate(FAlta) Then
                        Texto = ": " & "No se puede actualizar las fases. Debe corregir la situacion manualmente."
                        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    Else
                        'es la misma fase, no hago nada.
                        ' actualiza
                        
                        StrSql = " UPDATE fases SET "
                        StrSql = StrSql & " bajfec =" & F_Baja
                        If nro_causabaja <> 0 Then
                        StrSql = StrSql & ", caunro =" & nro_causabaja
                        End If
                        StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
                        objConn.Execute StrSql, , adExecuteNoRecords
                    
                        Texto = ": " & "Fase Actualizada - "
                        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                            
                        If nro_causabaja <> 0 Then
                            Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
                        End If
                            
                    End If
                End If
            Else
                Texto = Texto & " cerrada " & rs!altfec & " - " & rs!bajfec
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            
                If CDate(rs!altfec) < CDate(FAlta) And CDate(rs!bajfec) < CDate(FAlta) Then
                    'Fase existente ------[------]-----------
                    'Nueva fase     ---------------[-----]---
                    
                    'abro una nueva
                    StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
                    StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
                    If nro_causabaja <> 0 Then
                      StrSql = StrSql & nro_causabaja
                      StrSql = StrSql & ",0,-1,-1,-1,-1,-1)"
                    Else
                      StrSql = StrSql & "null"
                      StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    Texto = ": " & "Fase creada."
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    
                    If nro_causabaja <> 0 Then
                        Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
                    End If
                    
                Else
                    'FGZ - 11/11/2010 --------------------------
                    If CDate(rs!altfec) = CDate(FAlta) And CDate(rs!bajfec) = CDate(FBaja) Then
                        If nro_causabaja <> 0 Then
                            StrSql = " UPDATE fases SET "
                            StrSql = StrSql & " caunro =" & nro_causabaja
                            StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
                            objConn.Execute StrSql, , adExecuteNoRecords
                    
                            Texto = ": " & "Fase Actualizada - "
                            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                            
                            Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
                            
                        Else
                        
                        End If
                    Else
                        Texto = ": " & "No se puede crear la fases nueva. Debe corregir la situacion manualmente."
                        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    End If
                End If
            End If
        End If
    End If
'        StrSql = " UPDATE fases SET "
'        StrSql = StrSql & " altfec =" & F_Alta
'        StrSql = StrSql & ",bajfec =" & F_Baja
'        StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
'        objConn.Execute StrSql, , adExecuteNoRecords
'
'        Texto = ": " & "Fase Actualizada - "
'        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
'    End If
End If
    
    
    
'  18/02/2010 - No hacer nada con las fases cuando existe el empleado
'  Else
'    StrSql = "SELECT * FROM fases WHERE estado = -1 AND sueldo = -1 AND vacaciones = -1 AND indemnizacion = -1 AND real = -1 AND empleado = " & NroTercero
'    OpenRecordset StrSql, rs
'    If rs.EOF Then
'        StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
'        StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
'        If nro_causabaja <> 0 Then
'          StrSql = StrSql & nro_causabaja
'        Else
'          StrSql = StrSql & "null"
'        End If
'        StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
'        objConn.Execute StrSql, , adExecuteNoRecords
'    Else
'        StrSql = " UPDATE fases SET "
'        StrSql = StrSql & " altfec =" & F_Alta
'        StrSql = StrSql & ",bajfec =" & F_Baja
'        StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
'        objConn.Execute StrSql, , adExecuteNoRecords
'
'        Texto = ": " & "Fase Actualizada - "
'        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
'    End If
  
  'Inserto la cuenta bancaria
    'If Not ExisteLeg Then
   'JPB - Verifico que no exista el tercero
   If (Not ExisteLeg) And (Not l_ExistePostulante) And (Not l_ExisteFamiliar) Then
        'FGZ - 09/04/2010 ------------------------------------------------------------------------------
        'FGZ - 09/04/2010 - Es obligatorio el nro de cuenta o el CBU -----------------------------------
        'If (nro_formapago <> 0 And ter_bancopago <> 0 And NroCuenta <> "") Then
        If (nro_formapago <> 0 And ter_bancopago <> 0 And (NroCuenta <> "" Or NroCBU <> "")) Then
                StrSql = " INSERT INTO ctabancaria (ternro,fpagnro,banco,ctabestado,"
                StrSql = StrSql & "ctabsuc,ctabnro,ctabporc,ctabcbu"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",ctabacred"
                End If
                StrSql = StrSql & ") VALUES ("
                StrSql = StrSql & NroTercero & "," & nro_formapago & "," & ter_bancopago & ","
                StrSql = StrSql & "-1,'" & Left(SucBanco, 10) & "','" & NroCuenta & "',100,'" & NroCBU & "'"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",'" & NroCuentaAcreditacionE & "'"
                End If
                StrSql = StrSql & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Inserte la Cuenta Bancaria - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
        End If
    Else
        'If (nro_formapago <> 0 And ter_bancopago <> 0 And NroCuenta <> "") Then
        If (nro_formapago <> 0 And ter_bancopago <> 0 And (NroCuenta <> "" Or NroCBU <> "")) Then
            StrSql = "SELECT * FROM ctabancaria"
            StrSql = StrSql & " WHERE ctabancaria.ternro =" & NroTercero
            StrSql = StrSql & " AND ctabestado = -1 "
            StrSql = StrSql & " AND banco =" & ter_bancopago
            StrSql = StrSql & " AND fpagnro =" & nro_formapago
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If rs.EOF Then
                StrSql = " INSERT INTO ctabancaria (ternro,fpagnro,banco,ctabestado,"
                StrSql = StrSql & "ctabsuc,ctabnro,ctabporc,ctabcbu"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",ctabacred"
                End If
                StrSql = StrSql & ") VALUES ("
                StrSql = StrSql & NroTercero & "," & nro_formapago & "," & ter_bancopago & ","
                StrSql = StrSql & "-1,'" & Left(SucBanco, 10) & "','" & NroCuenta & "',100,'" & NroCBU & "'"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",'" & NroCuentaAcreditacionE & "'"
                End If
                StrSql = StrSql & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Inserte la Cuenta Bancaria - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            Else
                If rs!ctabnro = NroCuenta Then
                    StrSql = "UPDATE ctabancaria SET "
                    StrSql = StrSql & " ctabsuc = '" & SucBanco & "'"
                    If Not EsNulo(NroCuentaAcreditacionE) Then
                        StrSql = StrSql & ", ctabacred = '" & NroCuentaAcreditacionE & "'" '20-12-2010
                    End If
                    StrSql = StrSql & ", ctabnro = '" & NroCuenta & "'"
                    StrSql = StrSql & ", ctabporc = 100 "
                    StrSql = StrSql & ", ctabcbu = '" & NroCBU & "'"
                    StrSql = StrSql & " WHERE ctabancaria.ternro =" & NroTercero
                    StrSql = StrSql & " AND ctabestado = -1 "
                    StrSql = StrSql & " AND banco =" & ter_bancopago
                    StrSql = StrSql & " AND fpagnro =" & nro_formapago
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    Texto = ": " & "Cuenta Bancaria actualizada- "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                Else
                    'Desactivo la anterior
                    StrSql = " UPDATE ctabancaria SET "
                    StrSql = StrSql & " ctabestado = 0 "
                    StrSql = StrSql & " WHERE cbnro = " & rs!Cbnro
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    'inserto la nueva
                    StrSql = " INSERT INTO ctabancaria (ternro,fpagnro,banco,ctabestado,"
                    StrSql = StrSql & "ctabsuc,ctabnro,ctabporc,ctabcbu"
                    If Not EsNulo(NroCuentaAcreditacionE) Then
                        StrSql = StrSql & ",ctabacred"
                    End If
                    StrSql = StrSql & ") VALUES ("
                    StrSql = StrSql & NroTercero & "," & nro_formapago & "," & ter_bancopago & ","
                    StrSql = StrSql & "-1,'" & Left(SucBanco, 10) & "','" & NroCuenta & "',100,'" & NroCBU & "'"
                    If Not EsNulo(NroCuentaAcreditacionE) Then
                        StrSql = StrSql & ",'" & NroCuentaAcreditacionE & "'"
                    End If
                    StrSql = StrSql & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = ": " & "Inserte la Cuenta Bancaria - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            End If
        End If
    End If
  
  'Inserto las Estructuras
'  Call AsignarEstructura(1, nro_sucursal, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(2, nro_sector, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(3, nro_categoria, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(4, nro_puesto, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(5, nro_ccosto, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(6, nro_gerencia, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(7, Nro_GrupoSeguridad, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(9, nro_departamento, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(10, nro_empresa, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(15, nro_cajajub, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(16, nro_sindicato, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(17, nro_osocial_elegida, NroTercero, F_Alta, F_Baja)
'  'Call AsignarEstructura(18, nro_contrato, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(18, nro_contrato, NroTercero, F_Alta, Fecha_FinContrato)
'  Call AsignarEstructura(19, nro_convenio, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(20, nro_lpago, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(21, nro_reghorario, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(22, nro_formaliq, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(23, nro_planos_elegida, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(24, nro_osocial_ley, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(25, nro_planos_ley, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(29, nro_actividad, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(30, nro_sitrev, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(31, nro_condsijp, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(35, nro_direccion, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(40, nro_art, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(41, nro_bancopago, NroTercero, F_Alta, F_Baja)
  
  
  Call AsignarEstructura_NEW(1, nro_sucursal, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(2, nro_sector, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(3, nro_categoria, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(4, nro_puesto, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(5, nro_ccosto, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(6, nro_gerencia, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(7, Nro_GrupoSeguridad, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(9, nro_departamento, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(10, nro_empresa, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(15, nro_cajajub, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(16, nro_sindicato, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(17, nro_osocial_elegida, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(18, nro_contrato, NroTercero, F_Alta, F_Baja)
  'Call AsignarEstructura_NEW(18, nro_contrato, NroTercero, F_Alta, Fecha_FinContrato)
  Call AsignarEstructura_NEW(19, nro_convenio, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(20, nro_lpago, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(21, nro_reghorario, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(22, nro_formaliq, NroTercero, F_Alta, F_Baja)
' Call AsignarEstructura_NEW(23, nro_planos_elegida, NroTercero, F_Alta, F_Baja)
' Call AsignarEstructura_NEW(24, nro_osocial_ley, NroTercero, F_Alta, F_Baja)
' Call AsignarEstructura_NEW(25, nro_planos_ley, NroTercero, F_Alta, F_Baja)
' Call AsignarEstructura_NEW(29, nro_actividad, NroTercero, F_Alta, F_Baja)
' Call AsignarEstructura_NEW(30, nro_sitrev, NroTercero, F_Alta, F_Baja)
' Call AsignarEstructura_NEW(31, nro_condsijp, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(35, nro_direccion, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(40, nro_art, NroTercero, F_Alta, F_Baja)
' Call AsignarEstructura_NEW(41, nro_bancopago, NroTercero, F_Alta, F_Baja)
  
  
    Texto = ": " & "Linea procesada correctamente "
    Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    'LineaOK.Writeline Mid(strReg, 1, Len(strReg))
    OK = True
             
FinLinea:
    If rs.State = adStateOpen Then
        rs.Close
    End If
    Exit Sub
    
SaltoLinea:
    Texto = ": " & " - Error:" & Err.Description & " -- Ultima consulta: " & StrSql
    NroColumna = 1
    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    MyRollbackTrans
    OK = False
    GoTo FinLinea
    


End Sub


Public Sub LineaModelo_604(ByVal strReg As String, ByRef OK As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de Empleados Walmart
' Autor      : Raul Chinestra
' Fecha      : 07/09/2006
' ---------------------------------------------------------------------------------------------
Dim pos1            As Long
Dim pos2            As Long

Dim Legajo          As String   'LEGAJO                   -- empleado.empleg
Dim Apellido        As String   'APELLIDO                 -- empleado.terape y tercero.terape
Dim nombre          As String   'NOMBRE                   -- empleado.ternom y tercero.ternom
Dim Fnac            As String   'FNAC                     -- tercero.terfecna
Dim Nacionalidad    As String   'Nacionalidad             -- tercero.nacionalnro
Dim PaisNac         As String   'Pais de Nacimiento       -- tercero.paisnro
Dim Fing            As String   'Fec.Ingreso al Pais      -- terecro.terfecing
Dim EstCivil        As String   'Est.Civil                -- tercero.estcivnro
Dim Sexo            As String   'Sexo                     -- tercero.tersex
Dim FAlta           As String   'Fec. de Alta             -- empleado.empfaltagr y fases.altfec
Dim Estudio         As String   'Estudia                  -- empleado.empestudia
Dim NivEst          As String   'Nivel de Estudio         -- empleado.nivnro
Dim Tdocu           As String   'Tipo Documento           -- ter_dpc.tidnro (DU)
Dim Ndocu           As String   'Nro. Documento           -- ter_doc.nrodoc
Dim Cuil            As String   'CUIL                     -- ter_doc.nrodoc (10)
Dim Calle           As String   'Calle                    -- detdom.calle
Dim Nro             As String   'Número                   -- detdom.nro
Dim Piso            As String   'Piso                     -- detdom.piso
Dim Depto           As String   'Depto                    -- detdom.depto
Dim Torre           As String   'Torre                    -- detdom.torre
Dim Manzana         As String   'Manzana                  -- detdom.manzana
Dim Cpostal         As String   'Cpostal                  -- detdom.codigopostal
Dim Entre           As String   'Entre Calles             -- detdom.entrecalles
Dim Barrio          As String   'Barrio                   -- detdom.barrio
Dim Localidad       As String   'Localidad                -- detdom.locnro
Dim Partido         As String   'Partido                  -- detdom.partnro
Dim Zona            As String   'Zona                     -- detdom.zonanro
Dim Provincia       As String   'Provincia                -- detdom.provnro
Dim Pais            As String   'Pais                     -- detdom.paisnro
Dim Telefono        As String   'Telefono                 -- telefono.telnro
Dim Sucursal        As String   'Sucursal                 -- his_estructura.estrnro
Dim categoria       As String   'Categoria                -- his_estructura.estrnro
Dim Puesto          As String   'Puesto                   -- his_estructura.estrnro
Dim CCosto          As String   'C.Costo                  -- his_estructura.estrnro
Dim Gerencia        As String   'Gerencia                 -- his_estructura.estrnro
Dim CajaJub         As String   'Caja de Jubilacion       -- his_estructura.estrnro
Dim Sindicato       As String   'Sindicato                -- his_estructura.estrnro
Dim OSocialLey         As String   'Obra Social              -- his_estructura.estrnro
Dim PlanOSLey          As String   'Plan OS                  -- his_estructura.estrnro
Dim OSocialElegida         As String   'Obra Social              -- his_estructura.estrnro
Dim PlanOSElegida          As String   'Plan OS                  -- his_estructura.estrnro
Dim Convenio        As String   'Convenio                 -- his_estructura.estrnro
Dim Estado          As String   'Estado                   -- empleado.empest y fases.estado
Dim CausaBaja       As String   'Causa de Baja            -- fases.caunro
Dim FBaja           As String   'Fecha de Baja            -- fases.bajfec
Dim Empresa         As String   'Empresa                  -- his_estructura.estrnro
Dim ModOrg          As String   'Empresa                  -- his_estructura.estrnro
Dim Empremu         As String   'Remuneración del empleado
Dim Ternro As Long

Dim NroTercero          As Long

Dim Nro_Legajo          As Long
Dim Nro_TDocumento      As Long
Dim nro_nivest          As Long
Dim nro_estudio         As Long

Dim Nro_Nrodom          As String

Dim Nro_Barrio          As Long
Dim Nro_Localidad       As Long
Dim Nro_Partido         As Long
Dim Nro_Zona            As Long
Dim Nro_Provincia       As Long
Dim Nro_Pais            As Long
Dim nro_paisnac         As Long

Dim nro_sucursal        As Long
Dim nro_sector          As Long
Dim nro_categoria       As Long
Dim nro_puesto          As Long
Dim nro_ccosto          As Long
Dim nro_gerencia        As Long
Dim nro_cajajub         As Long
Dim nro_sindicato       As Long
Dim nro_osocial_ley     As Long
Dim nro_planos_ley      As Long
Dim nro_osocial_elegida As Long
Dim nro_planos_elegida  As Long
Dim nro_convenio        As Long
Dim nro_causabaja       As Long
Dim nro_empresa         As Long
Dim NroDom              As Long
Dim nro_empremu         As Long

Dim nro_estcivil        As Long
Dim nro_nacionalidad    As Long

Dim F_Nacimiento        As String
Dim F_Fallecimiento     As String
Dim F_Alta              As String
Dim F_Baja              As String
Dim F_Ingreso           As String

Dim Inserto_estr        As Boolean

Dim ter_sucursal        As Long
Dim Ter_Empresa         As Long
Dim ter_cajajub         As Long
Dim ter_sindicato       As Long
Dim ter_osocial_ley     As Long
Dim ter_osocial_elegida As Long
Dim ter_bancopago       As Long
Dim ter_art             As Long
Dim ter_sexo            As Long
Dim ter_estudio         As Long
Dim ter_estado          As Long

Dim fpgo_bancaria       As Long

Dim rs As New ADODB.Recordset
Dim rs_Sql As New ADODB.Recordset
Dim rs_Empleado As New ADODB.Recordset
Dim rs_Tel As New ADODB.Recordset
Dim rs_repl As New ADODB.Recordset


Dim SucDesc             As Boolean   'Sucursal                 -- his_estructura
Dim SecDesc             As Boolean   'Sector                   -- his_estructura
Dim CatDesc             As Boolean   'Categoria                -- his_estructura
Dim PueDesc             As Boolean   'Puesto                   -- his_estructura
Dim CCoDesc             As Boolean   'C.Costo                  -- his_estructura
Dim GerDesc             As Boolean   'Gerencia                 -- his_estructura
Dim DepDesc             As Boolean   'Departamento             -- his_estructura
Dim DirDesc             As Boolean   'Direccion                -- his_estructura
Dim CaJDesc             As Boolean   'Caja de Jubilacion       --
Dim SinDesc             As Boolean   'Sindicato                -- his_estructura
Dim OSoElegidaDesc      As Boolean   'Obra Social              -- his_estructura
Dim PoSElegidaDesc      As Boolean   'Plan OS                  -- his_estructura
Dim OSoLeyDesc          As Boolean   'Obra Social              -- his_estructura
Dim PoSLeyDesc          As Boolean   'Plan OS                  -- his_estructura
Dim CotDesc             As Boolean   'Contrato                 -- his_estructura
Dim CovDesc             As Boolean   'Convenio                 -- his_estructura
Dim LPaDesc             As Boolean   'Lugar de Pago            -- his_estructura
Dim RegDesc             As Boolean   'Regimen Horario          -- his_estructura
Dim FLiDesc             As Boolean   'Forma de Liquidacion     -- his_estructura
Dim FPaDesc             As Boolean      'Forma de Pago            -- his_estructura
Dim BcoDesc             As Boolean      'Banco Pago               --
Dim ActDesc             As Boolean      'Actividad                --
Dim CSJDesc             As Boolean      'Condicion SIJP           --
Dim SReDesc             As Boolean      'Sit. de Revista SIJP     --
Dim MCoDesc             As Boolean      'Mod. de Contrat. SIJP    --
Dim ARTDesc             As Boolean      'ART                      --
Dim EmpDesc             As Boolean      'Empresa                  --
Dim OSLDesc             As Boolean      'Empresa                  --
Dim POdoDesc             As Boolean     'Empresa                  --
Dim OSEDesc             As Boolean      'Empresa                  --
Dim LocDesc             As Boolean      'Empresa                  --
Dim AreaDesc             As Boolean     'Empresa                  --
Dim SubDepDesc             As Boolean   'Empresa                  --

Dim IngresoDom          As Boolean

Dim rs_tdoc As New ADODB.Recordset
Dim rs_emp  As New ADODB.Recordset
Dim rs_tpl  As New ADODB.Recordset
Dim rs_leg  As New ADODB.Recordset

Dim Nroadtemplate As Long
Dim Nro_Institucion As Long

Dim Sigue As Boolean
Dim ExisteLeg As Boolean
Dim CalculaLegajo As Boolean

    On Error GoTo SaltoLinea

    ' True indica que se hace por Descripcion. False por Codigo Externo

    SucDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CatDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    PueDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CCoDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    GerDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    DepDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    DirDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CaJDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    SinDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    OSoElegidaDesc = True ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    PoSElegidaDesc = True ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    OSoLeyDesc = True   ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    PoSLeyDesc = True   ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CotDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CovDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    EmpDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    OSLDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    POdoDesc = True     ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    OSEDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    LocDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    SubDepDesc = True   ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    
    Sigue = True 'Indica que si en el archivo viene mas de una vez un empleado, le crea las fases
    ExisteLeg = False
    'RegLeidos = RegLeidos + 1
    LineaCarga = LineaCarga + 1
    
    Flog.writeline
    FlogE.writeline
    FlogP.writeline
    
    'Legajo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Legajo"
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Legajo = Aux
    
    'Legajo = Mid(strReg, pos1, pos2 - pos1 + 1)
    If Legajo = "N/A" Or EsNulo(Legajo) Then
        CalculaLegajo = True
    Else
        StrSql = "SELECT * FROM empleado WHERE empleado.empleg = " & Legajo
        OpenRecordset StrSql, rs_emp
        If (Not rs_emp.EOF) Then
            If (Not Sigue) Then
                Texto = ": " & " - El Empleado ya Existe."
                NroColumna = 1
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                'Ok = False
                'RegError = RegError + 1
                'Exit Sub
            Else
                NroTercero = rs_emp!Ternro
                ExisteLeg = True
            End If
        End If
    End If
    
    'Apellido
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Apellido"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Apellido = Left(Aux, 25)
    
    'Nombre
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nombre"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    nombre = Left(Aux, 25)
    If (Apellido = "" Or Apellido = "N/A") And (nombre = "" Or nombre = "N/A") Then
        Texto = ": " & " - Debe Ingresar un Nombre y Apellido."
        NroColumna = 2
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    
    'Fecha de Nacimiento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de Nacimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Fnac = Aux
    If Fnac = "N/A" Then
       F_Nacimiento = "Null"
    Else
       F_Nacimiento = ConvFecha(Fnac)
    End If
    
    'Pais de Nacimiento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Pais de Nacimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    PaisNac = Aux
    If PaisNac <> "N/A" Then
        StrSql = " SELECT paisnro FROM pais WHERE UPPER(paisdesc) = '" & UCase(PaisNac) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_paisnac = rs_Sql!Paisnro
        Else
            StrSql = " INSERT INTO pais(paisdesc,paisdef) VALUES ('" & UCase(PaisNac) & "',0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_paisnac = getLastIdentity(objConn, "pais")
        End If
    Else
        nro_paisnac = 0
    End If
    
    
    'Fecha de Ingreso al Pais
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de Ingreso al Pais"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Fing = Aux
    If (Fing = "N/A") Or EsNulo(Fing) Then
        F_Ingreso = "Null"
    Else
        F_Ingreso = ConvFecha(Fing)
    End If
    
    'Estado Civil
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estado Civil"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    EstCivil = Left(Aux, 30)
    If EstCivil <> "N/A" And Not EsNulo(EstCivil) Then
        StrSql = " SELECT estcivnro FROM estcivil WHERE UPPER(estcivdesabr) = '" & UCase(EstCivil) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_estcivil = rs_Sql!estcivnro
        Else
            StrSql = " INSERT INTO estcivil(estcivdesabr) VALUES ('" & UCase(EstCivil) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_estcivil = getLastIdentity(objConn, "estcivil")
        End If
    Else
        nro_estcivil = 0
    End If
    If nro_estcivil = 0 Then
        Texto = ": " & " - El Estado Civil no Existe."
        NroColumna = 7
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Sexo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sexo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Sexo = UCase(Aux)
    If (Sexo = "M") Or (Sexo = "-1") Or (Sexo = "MASCULINO") Then
        ter_sexo = -1
    Else
        ter_sexo = 0
    End If
                                                            
    'Fecha de alta
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de alta"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    FAlta = Aux
    If FAlta = "N/A" Or EsNulo(FAlta) Then
        F_Alta = "Null"
        Texto = ": " & " - La Fecha de Alta es Obligatoria."
        NroColumna = 9
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    Else
        F_Alta = ConvFecha(FAlta)
    End If
    
    'Nivel de estudio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nivel de estudio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    NivEst = Left(Aux, 40)
    If NivEst <> "N/A" Then
        StrSql = " SELECT nivnro FROM nivest WHERE UPPER(nivdesc) = '" & UCase(NivEst) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_nivest = rs_Sql!nivnro
        Else
            StrSql = " INSERT INTO nivest(nivdesc,nivsist,nivobligatorio,nivestfli) VALUES ('" & UCase(NivEst) & "',-1,0,-1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_nivest = getLastIdentity(objConn, "nivest")
        End If
    Else
        nro_nivest = 0
    End If
    
    'Tipo de Doc
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tipo de Doc"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Tdocu = Left(Aux, 8)
    If Tdocu <> "N/A" Then
        StrSql = " SELECT tidnro FROM tipodocu WHERE UPPER(tidsigla) = '" & UCase(Tdocu) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            Nro_TDocumento = rs_Sql!tidnro
        Else
            'busco la primera institucion, si no existe la creo
            StrSql = " SELECT * FROM institucion "
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                Nro_Institucion = rs!InstNro
            Else
                'creo una
                StrSql = " INSERT INTO institucion (instdes,instabre) VALUES ('NACIONAL','NAC')"
                objConn.Execute StrSql, , adExecuteNoRecords
                Nro_Institucion = getLastIdentity(objConn, "institucion")
            End If
            'creo el tipo de documento
            StrSql = " INSERT INTO tipodocu(tidnom,tidsigla,tidsist,instnro,tidunico) VALUES ('" & UCase(Tdocu) & "','" & UCase(Tdocu) & "',0," & Nro_Institucion & ",0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            Nro_TDocumento = getLastIdentity(objConn, "tipodocu")
        End If
    Else
        Nro_TDocumento = 0
    End If
    If Nro_TDocumento = 0 Then
        Texto = ": " & " - El Tipo de Documento no Existe."
        NroColumna = 11
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Nro de Documento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nro de Documento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Ndocu = Left(Aux, 30)
    If Ndocu = "N/A" Then
        Ndocu = ""
    End If
    
    StrSql = "SELECT * FROM empleado "
    StrSql = StrSql & " INNER JOIN ter_doc ON ter_doc.ternro = empleado.ternro "
    StrSql = StrSql & " WHERE ter_doc.tidnro = " & Nro_TDocumento & " AND ter_doc.nrodoc = '" & Ndocu & "'"
    OpenRecordset StrSql, rs_tdoc
    If (Not rs_tdoc.EOF) Then
        If (Not Sigue) Then
            Texto = ": " & " - Ese Tipo y Numero de Documento estan Asignados a otro Empleado."
            NroColumna = 12
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            'Ok = False
            RegError = RegError + 1
            Exit Sub
        Else
            NroTercero = rs_tdoc!Ternro
            ExisteLeg = True
            Texto = ": " & " - Empleado: " & Legajo & " - Ese Tipo y Numero de Documento estan Asignados a otro Empleado."
            NroColumna = 12
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
    End If
    
    'CUIL
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "CUIL"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Cuil = Replace(Left(Aux, 30), "-", "")
    If Cuil = "N/A" Or EsNulo(Cuil) Then
        Cuil = Generar_Cuil(Ndocu, CBool(ter_sexo))
        'Cuil = CalcularCUIL(Ndocu)
        If Cuil = 0 Then
            Texto = ": " & " - Campo " & Campoetiqueta & " no se pudo generar automaticamente " & Ndocu
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
    Else
        OK = Cuil_Valido(Cuil, Texto)
        If Not OK Then
            OK = True
            Texto = "El CUIL no es valido"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            'Cuil = CalcularCUIL(Ndocu)
            Cuil = Generar_Cuil(Ndocu, CBool(ter_sexo))
        End If
    End If
    Cuil = Left(Cuil, 2) & "-" & Mid(Cuil, 3, 8) & "-" & Right(Cuil, 1)
    
    'Hasta Aqui los Datos Obligatorios del Empleado
    IngresoDom = True
        
    'Calle
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Calle"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Calle = Left(Aux, 250)
    
    If Calle = "N/A" Then
        Calle = ""
        IngresoDom = False
    End If
    
    'Nro
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Nro"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Nro = Left(Aux, 8)
    If (Nro <> "N/A") Then
        Nro_Nrodom = Nro
    Else
        Nro_Nrodom = 0
    End If
    
    'Piso
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Piso"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Piso = Left(Aux, 8)
    If Piso = "N/A" Then
        Piso = ""
    End If
    
    'Departamento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Departamento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Depto = Left(Aux, 8)
    If Depto = "N/A" Then
        Depto = ""
    End If

    'Torre
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Torre"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Torre = Left(Aux, 8)
    If Torre = "N/A" Then
        Torre = ""
    End If
    
    'Manzana
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Manzana"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Manzana = Left(Aux, 8)
    If Manzana = "N/A" Then
        Manzana = ""
    End If

    'Codigo Postal
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Codigo Postal"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Cpostal = Left(Aux, 12)
    If Cpostal = "N/A" Then
        Cpostal = ""
    End If

    'Entre calles
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Entre calles"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Entre = Left(Aux, 80)
    If Entre = "N/A" Then
        Entre = ""
    End If

    'Barrio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Barrio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Barrio = Left(Aux, 30)
    If Barrio = "N/A" Then
        Barrio = ""
    End If

    'Localidad
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Localidad"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    '19/03/2010 - Se cambio la longitud a 60
    'Localidad = Left(aux, 30)
    Localidad = Left(Aux, 60)
    
    
    'Provincia
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Provincia"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Provincia = Left(Aux, 20)
    
    'Pais
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Pais"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Pais = Left(Aux, 20)
    If Pais <> "N/A" Then
        Call ValidarPais(Pais, Nro_Pais)
    Else
        Nro_Pais = 0
    End If
    If Provincia <> "N/A" Then
        Call ValidarProvincia(Provincia, Nro_Provincia, Nro_Pais)
    Else
        Nro_Provincia = 0
    End If
    If Localidad <> "N/A" Then
        Call ValidarLocalidad(Localidad, Nro_Localidad, Nro_Pais, Nro_Provincia)
    Else
        Nro_Localidad = 0
    End If
    If Partido <> "N/A" Then
        Call ValidarPartido(Partido, Nro_Partido)
    Else
        Nro_Partido = 0
    End If
    If Zona <> "N/A" Then
        Call ValidarZona(Zona, Nro_Zona, Nro_Provincia)
    Else
        Nro_Zona = 0
    End If
    If (IngresoDom = True) And (Nro_Localidad = 0) Then
        Texto = ": " & " - Debe Ingresar la Localidad."
        NroColumna = 23
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    If (IngresoDom = True) And (Nro_Provincia = 0) Then
        Texto = ": " & " - Debe Ingresar la Provincia."
        NroColumna = 24
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    If (IngresoDom = True) And (Nro_Pais = 0) Then
        Texto = ": " & " - Debe Ingresar la Pais."
        NroColumna = 25
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Tel Particular
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tel Particular"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Telefono = Left(Aux, 20)
    If Telefono = "N/A" Then
        Telefono = ""
    End If
    
    'Sucursal
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sucursal"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Sucursal = Aux
    ' Validacion y Creacion de la Sucursal (junto con sus Complementos)
    If Sucursal <> "N/A" Then
        If SucDesc Then
            Call ValidaEstructura(1, Sucursal, nro_sucursal, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(1, Sucursal, nro_sucursal, Inserto_estr)
        End If
        Call CreaTercero(10, Sucursal, ter_sucursal)
        
        If Inserto_estr Then
            Call CreaComplemento(1, ter_sucursal, nro_sucursal, Sucursal)
            Inserto_estr = False
        End If
    Else
        nro_sucursal = 0
    End If
    
    'Convenio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Convenio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Convenio = Aux
    ' Validacion, Creacion del Convenio
    If Convenio <> "N/A" Then
        If CovDesc Then
            Call ValidaEstructura(19, Convenio, nro_convenio, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(19, Convenio, nro_convenio, Inserto_estr)
        End If
        
        If Inserto_estr Then
            Call CreaComplemento(19, 0, nro_convenio, Convenio)
            Inserto_estr = False
        End If
    Else
        nro_convenio = 0
    End If
    
    'Categoria
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Categoria"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    categoria = Aux
    ' Validacion, Creacion de la Categoria
    If (categoria <> "N/A" And nro_convenio <> 0) Then
        If CatDesc Then
            'Call ValidaEstructura(3, categoria, nro_categoria, Inserto_estr)
            Call ValidaCategoria(3, categoria, nro_convenio, nro_categoria, Inserto_estr)
            
        Else
            'Call ValidaEstructuraCodExt(3, categoria, nro_categoria, Inserto_estr)
            Call ValidaCategoriaCodExt(3, categoria, nro_convenio, nro_categoria, Inserto_estr)
        End If
    Else
        nro_categoria = 0
    End If
    
    'Puesto
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Puesto"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Puesto = Aux
    'Validacion y Creacion del Puesto (junto con sus Complementos)
    If Puesto <> "N/A" Then
        If PueDesc Then
            Call ValidaEstructura(4, Puesto, nro_puesto, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(4, Puesto, nro_puesto, Inserto_estr)
        End If
        
        If Inserto_estr Then
            Call CreaComplemento(4, 0, nro_puesto, Mid(Puesto, 1, 25))
            Inserto_estr = False
        End If
    Else
        nro_puesto = 0
    End If
    
    'Centro de Costo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Centro de Costo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    CCosto = Aux
    ' Validacion y Creacion del Centro de Costo
    If CCosto <> "N/A" Then
        If CCoDesc Then
            Call ValidaEstructura(5, CCosto, nro_ccosto, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(5, CCosto, nro_ccosto, Inserto_estr)
        End If
    Else
        nro_ccosto = 0
    End If
    
    'Caja de Jubilacion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Caja de Jubilacion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    CajaJub = Aux
    ' Validacion y Creacion de la Caja de Jubilacion
    If CajaJub <> "N/A" Then
        If CaJDesc Then
            Call ValidaEstructura(15, CajaJub, nro_cajajub, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(15, CajaJub, nro_cajajub, Inserto_estr)
        End If
        Call CreaTercero(6, CajaJub, ter_cajajub)
        
        If Inserto_estr Then
            Call CreaComplemento(15, ter_cajajub, nro_cajajub, CajaJub)
        End If
    Else
        nro_cajajub = 0
    End If
    
    'Sindicato
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sindicato"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Sindicato = Aux
    ' Validacion y Creacion del Sindicato
    If Sindicato <> "N/A" Then
        If SinDesc Then
            Call ValidaEstructura(16, Sindicato, nro_sindicato, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(16, Sindicato, nro_sindicato, Inserto_estr)
        End If
        Call CreaTercero(5, Sindicato, ter_sindicato)
        
        If Inserto_estr Then
            Call CreaComplemento(16, ter_sindicato, nro_sindicato, Sindicato)
        End If
    Else
        nro_sindicato = 0
    End If
    
    'OS Elegida
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Obra Social elegida"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    OSocialElegida = Aux
    ' Validacion y Creacion de la Obra Social Elegida
    If OSocialElegida <> "N/A" Then
        If OSoElegidaDesc Then
            Call ValidaEstructura(17, OSocialElegida, nro_osocial_elegida, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(17, OSocialElegida, nro_osocial_elegida, Inserto_estr)
        End If
        Call CreaTercero(4, OSocialElegida, ter_osocial_elegida)
        
        If Inserto_estr Then
            Call CreaComplemento(17, ter_osocial_elegida, nro_osocial_elegida, OSocialElegida)
        Else
            StrSql = " SELECT origen FROM replica_estr WHERE estrnro = " & nro_osocial_elegida
            OpenRecordset StrSql, rs_Sql
            ter_osocial_elegida = rs_Sql!Origen
            rs_Sql.Close
        End If
    Else
        nro_osocial_elegida = 0
    End If

    'Plan de OS Elegida
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Plan Obra Social elegida"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    PlanOSElegida = Aux
    ' Validacion y Creacion del Plan de Obra Social Elegida
    If (PlanOSElegida <> "N/A" And nro_osocial_elegida <> 0) Then
        If PoSElegidaDesc Then
            Call ValidaEstructura(23, PlanOSElegida, nro_planos_elegida, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(23, PlanOSElegida, nro_planos_elegida, Inserto_estr)
        End If
        
        If Inserto_estr Then
            Call CreaComplemento(23, ter_osocial_elegida, nro_planos_elegida, PlanOSElegida)
            Inserto_estr = False
        End If
    Else
        nro_planos_elegida = 0
    End If
    
    'Estado del empleado
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estado del empleado"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Estado = Aux
    If UCase(Estado) = "ACTIVO" Then
        ter_estado = -1
    Else
        ter_estado = 0
    End If
    
    'Causa de baja
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Causa de baja"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    CausaBaja = Aux
    If Not EsNulo(CausaBaja) And CausaBaja <> "N/A" Then
        StrSql = " SELECT caunro FROM causa WHERE caudes = '" & CausaBaja & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_causabaja = rs_Sql!caunro
        Else
            StrSql = " INSERT INTO causa(caudes,causist,caudesvin,empnro) VALUES ('" & CausaBaja & "',0,-1,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            nro_causabaja = getLastIdentity(objConn, "causa")
        End If
    Else
        nro_causabaja = 0
    End If
    
    'Fecha de baja
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de baja"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    FBaja = Aux
    If EsNulo(FBaja) Or FBaja = "N/A" Then
        F_Baja = "Null"
    Else
        F_Baja = ConvFecha(FBaja)
    End If
    
    'Empresa
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Empresa"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Empresa = Aux
    Else
        pos2 = Len(strReg)
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Empresa = Aux
    End If
    If Empresa <> "N/A" Or EsNulo(Empresa) Then
        If EmpDesc Then
            Call ValidaEstructura(10, Empresa, nro_empresa, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(10, Empresa, nro_empresa, Inserto_estr)
        End If
        Call CreaTercero(10, Empresa, Ter_Empresa)
        
        If Inserto_estr Then
            Call CreaComplemento(10, Ter_Empresa, nro_empresa, Empresa)
        End If
    Else
        nro_empresa = 0
    End If
    
    'Remuneración del Empleado
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Remuneración del Empleado"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Empremu = Aux
    If Empremu = "N/A" Or EsNulo(Empremu) Then
        Empremu = "Null"
    End If
   
    'Modelo de Organizacion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Modelo de Organizacion"
    pos1 = pos2 + 2
    pos2 = Len(strReg) 'InStr(pos1, strReg, Separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        ModOrg = Aux
        If ModOrg = "N/A" Or EsNulo(ModOrg) Then
            'agrego codigo sebastian stremel 15/09/2011
            StrSql = "SELECT * FROM adptemplate WHERE tplatedefault = -1"
            OpenRecordset StrSql, rs_tpl
            If Not rs_tpl.EOF Then
                nro_ModOrg = rs_tpl!tplatenro
            Else
                StrSql = "SELECT top 1 * FROM adptemplate"
                OpenRecordset StrSql, rs_tpl
                If rs_tpl.EOF Then
                    Texto = ": no hay modelos de organizacion"
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                    RegError = RegError + 1
                    Exit Sub
                Else
                    nro_ModOrg = rs_tpl!tplatenro
                End If
                
            End If
            
           
        Else
            StrSql = "SELECT * FROM adptemplate WHERE tplatedesabr = '" & ModOrg & "'"
            OpenRecordset StrSql, rs_tpl
            If rs_tpl.EOF Then
                StrSql = "INSERT INTO adptemplate (tplatedesabr,tplatedefault) VALUES ('" & ModOrg & "',-1)"
                objConn.Execute StrSql, , adExecuteNoRecords
                nro_ModOrg = getLastIdentity(objConn, "adptemplate")
            Else
                nro_ModOrg = rs_tpl!tplatenro
            End If
        End If
    Else
            StrSql = "SELECT * FROM adptemplate WHERE tplatedefault = -1"
            OpenRecordset StrSql, rs_tpl
            If Not rs_tpl.EOF Then
                nro_ModOrg = rs_tpl!tplatenro
            Else
                StrSql = "SELECT top 1 * FROM adptemplate"
                OpenRecordset StrSql, rs_tpl
                If rs_tpl.EOF Then
                    Texto = ": no hay modelos de organizacion"
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                    RegError = RegError + 1
                    Exit Sub
                Else
                    nro_ModOrg = rs_tpl!tplatenro
                End If
                
            End If

    End If
    
'Fin lectura de campos
' =====================================================================================================

  'JPB - Inicializo el pass+perfil (l_ess_Pass_Estandar y l_ess_Perfil_Estandar) por defecto del Autogestion en el caso que este habilitado el confper 12
  '--------------------------------
  Call ESS_Configuracion_Default
  '-------------------------------

  ' Inserto el Tercero
  If F_Nacimiento = "Null" Then
    F_Nacimiento = "''"
  End If
  If F_Ingreso = "Null" Then
    F_Ingreso = "''"
  End If
  
  If CalculaLegajo Then
    Call CalcularLegajo(nro_empresa, Legajo)
  End If

    If Not ExisteLeg Then
        StrSql = " INSERT INTO tercero(ternom,terape,ternom2,terape2,terfecnac,tersex,terestciv,estcivnro,nacionalnro,paisnro,terfecing)"
        StrSql = StrSql & " VALUES('" & nombre & "','" & Apellido & "','',''," & F_Nacimiento & "," & ter_sexo & "," & nro_estcivil & "," & nro_estcivil & ","
        If nro_nacionalidad <> 0 Then
            StrSql = StrSql & nro_nacionalidad & ","
        Else
            StrSql = StrSql & "null,"
        End If
        If nro_paisnac <> 0 Then
            StrSql = StrSql & nro_paisnac & ","
        Else
            StrSql = StrSql & "null,"
        End If
        StrSql = StrSql & F_Ingreso & ")"
        objConn.Execute StrSql, , adExecuteNoRecords

        NroTercero = getLastIdentity(objConn, "tercero")
        
        Texto = ": " & "Codigo de Tercero = " & NroTercero
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
    Else
        StrSql = " UPDATE tercero SET "
        StrSql = StrSql & " ternom = " & "'" & nombre & "'"
        StrSql = StrSql & ", terape = " & "'" & Apellido & "'"
        StrSql = StrSql & ", terfecnac = " & F_Nacimiento
        StrSql = StrSql & ", tersex = " & ter_sexo
        StrSql = StrSql & ", terestciv =" & nro_estcivil
        StrSql = StrSql & ", estcivnro =" & "'" & nro_estcivil & "'"
        If nro_nacionalidad <> 0 Then
            StrSql = StrSql & ", nacionalnro =" & nro_nacionalidad
        End If
        StrSql = StrSql & ", terfecing =" & F_Ingreso
        If nro_paisnac <> 0 Then
            StrSql = StrSql & ", paisnro =" & nro_paisnac
        End If
        StrSql = StrSql & " WHERE ternro = " & NroTercero
        objConn.Execute StrSql, , adExecuteNoRecords
      
        Texto = ": " & " - Empleado: " & Legajo & " - Ese Empleado ya existe en la base. Datos de tercero actualizados"
        NroColumna = 1
        Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    
    If Not ExisteLeg Then
        StrSql = " INSERT INTO empleado(empleg,empfecalta,empfecbaja,empest,empfaltagr,"
        StrSql = StrSql & "ternro,nivnro,empestudia,terape,ternom,empinterno,"
        StrSql = StrSql & "empnro,tplatenro,empremu"
        'If Nro_Reporta_a <> 0 Then
         '   StrSql = StrSql & ",empreporta"
        'End If
        
        'JPB - Si esta habilitado el confper 12 asigno el pass+perfil por defecto al empleado
        '------------------------------------------------------------------------------------
        If (l_ess_Pass_Estandar <> "") And (l_ess_Perfil_Estandar <> "") Then
             StrSql = StrSql & ",empessactivo,emppass,perfnro"
        End If
        '------------------------------------------------------------------------------------
        
        StrSql = StrSql & ") VALUES("
        StrSql = StrSql & Legajo & "," & F_Alta & "," & F_Baja & "," & ter_estado & "," & F_Alta & ","
        StrSql = StrSql & NroTercero & "," & nro_nivest & "," & ter_estudio & ",'" & Apellido & "','"
        StrSql = StrSql & nombre & "',Null," & "1," & nro_ModOrg & "," & Empremu
        'If Nro_Reporta_a <> 0 Then
        '    StrSql = StrSql & "," & Nro_Reporta_a
        'End If
        'JPB - Si esta habilitado el confper 12 asigno el pass+perfil por defecto al empleado
        '------------------------------------------------------------------------------------
        If (l_ess_Pass_Estandar <> "") And (l_ess_Perfil_Estandar <> "") Then
             StrSql = StrSql & ",-1,'" & l_ess_Pass_Estandar & "'," & l_ess_Perfil_Estandar
        End If
        '------------------------------------------------------------------------------------
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = ": " & "Empleado insertado - " & Legajo & " - " & Apellido & " - " & nombre
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
    Else
        StrSql = " UPDATE empleado SET "
        StrSql = StrSql & " empleg = " & Legajo
        StrSql = StrSql & " ,empfecalta = " & F_Alta
        StrSql = StrSql & " ,empfecbaja = " & F_Baja
        StrSql = StrSql & " ,empest = " & ter_estado
        StrSql = StrSql & " ,empfaltagr = " & F_Alta
        StrSql = StrSql & " ,nivnro = " & nro_nivest
        StrSql = StrSql & " ,empestudia = " & ter_estudio
        StrSql = StrSql & " ,terape = " & "'" & Apellido & "'"
        StrSql = StrSql & " ,ternom = " & "'" & nombre & "'"
        StrSql = StrSql & " ,empnro = 1 "
        StrSql = StrSql & " ,tplatenro =" & nro_ModOrg
        StrSql = StrSql & " ,Empremu =" & Empremu
        'If Nro_Reporta_a <> 0 Then
            'StrSql = StrSql & ", empreporta =" & Nro_Reporta_a
        'End If
        
        'JPB - Si esta habilitado el confper 12 asigno el pass+perfil por defecto al empleado
        '------------------------------------------------------------------------------------
        If (l_ess_Pass_Estandar <> "") And (l_ess_Perfil_Estandar <> "") Then
            StrSql = StrSql & ", empessactivo = -1"
            StrSql = StrSql & ", emppass = '" & l_ess_Pass_Estandar & "'"
            StrSql = StrSql & ", perfnro =" & l_ess_Perfil_Estandar
        End If
        '------------------------------------------------------------------------------------
        
        StrSql = StrSql & " WHERE ternro = " & NroTercero
        objConn.Execute StrSql, , adExecuteNoRecords
    
        Texto = ": " & "Empleado Actualizado - " & Legajo & " - " & Apellido & " - " & nombre
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
    End If
    
    ' Inserto el Registro correspondiente en ter_tip
    If Not ExisteLeg Then
        StrSql = " INSERT INTO ter_tip(ternro,tipnro) VALUES(" & NroTercero & ",1)"
        objConn.Execute StrSql, , adExecuteNoRecords
    End If

' Inserto los Documentos
    If Not ExisteLeg Then
        If Nro_TDocumento <> 0 Then
            StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
            StrSql = StrSql & " VALUES(" & NroTercero & "," & Nro_TDocumento & ",'" & Ndocu & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            Texto = ": " & "Inserte el Documento - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        End If
    Else
        If Nro_TDocumento <> 0 Then
            StrSql = "SELECT * FROM ter_doc WHERE ternro = " & NroTercero
            StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If rs.EOF Then
                StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
                StrSql = StrSql & " VALUES(" & NroTercero & "," & Nro_TDocumento & ",'" & Ndocu & "')"
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = ": " & "Inserte el Documento - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            Else
                StrSql = " UPDATE ter_doc SET "
                StrSql = StrSql & " nrodoc = '" & Ndocu & "'"
                StrSql = StrSql & " WHERE ternro = " & NroTercero
                StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = Texto = ": " & "Documento actualizado - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
    End If
  
    If Not ExisteLeg Then
        If Cuil <> "" Then
            StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
            StrSql = StrSql & " VALUES(" & NroTercero & ",10,'" & Cuil & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            Texto = ": " & "Inserte el CUIL - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        End If
    Else
        If Cuil <> "" Then
            StrSql = "SELECT * FROM ter_doc WHERE ternro = " & NroTercero
            StrSql = StrSql & " AND tidnro = 10 "
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If rs.EOF Then
                StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
                StrSql = StrSql & " VALUES(" & NroTercero & ",10,'" & Cuil & "')"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Inserte el CUIL - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            Else
                StrSql = " UPDATE ter_doc SET "
                StrSql = StrSql & " nrodoc = '" & Cuil & "'"
                StrSql = StrSql & " WHERE ternro = " & NroTercero
                StrSql = StrSql & " AND tidnro = 10"
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = Texto = ": " & "CUIL actualizado - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
    End If

' Inserto el Domicilio
  If rs.State = adStateOpen Then
    rs.Close
  End If
  
  If Not ExisteLeg Then
    If (Nro_Localidad <> 0 And Nro_Provincia <> 0 And Nro_Pais <> 0) Then
        StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
        StrSql = StrSql & " VALUES(1," & NroTercero & ",-1,2)"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        NroDom = getLastIdentity(objConn, "cabdom")
      
        StrSql = " INSERT INTO detdom(domnro,calle,nro,piso,oficdepto,torre,manzana,codigopostal,entrecalles,"
        StrSql = StrSql & "locnro,provnro,paisnro,barrio,partnro,zonanro) "
        StrSql = StrSql & " VALUES (" & NroDom & ",'" & Calle & "','" & Nro_Nrodom & "','" & Piso & "','"
        StrSql = StrSql & Depto & "','" & Torre & "','" & Manzana & "','" & Cpostal & "','" & Entre & "'," & Nro_Localidad & ","
        StrSql = StrSql & Nro_Provincia & "," & Nro_Pais & ",'" & Barrio & "'," & Nro_Partido & "," & Nro_Zona & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
      
        Texto = ": " & "Inserte el Domicilio - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        
        If Telefono <> "" Then
            'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
            StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
            StrSql = StrSql & " VALUES(" & NroDom & ",'" & Telefono & "',0,-1,0,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            Texto = ": " & "Inserte el Telefono Principal - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        End If
    End If
  Else
    If (Nro_Localidad <> 0 And Nro_Provincia <> 0 And Nro_Pais <> 0) Then
        StrSql = "SELECT * FROM cabdom  "
        StrSql = StrSql & " WHERE tipnro = 1"
        StrSql = StrSql & " AND ternro = " & NroTercero
        StrSql = StrSql & " AND domdefault = -1"
        StrSql = StrSql & " AND tidonro = 2"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
          StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
          StrSql = StrSql & " VALUES(1," & NroTercero & ",-1,2)"
          objConn.Execute StrSql, , adExecuteNoRecords
          
          NroDom = getLastIdentity(objConn, "cabdom")
        
          StrSql = " INSERT INTO detdom(domnro,calle,nro,piso,oficdepto,torre,manzana,codigopostal,entrecalles,"
          StrSql = StrSql & "locnro,provnro,paisnro,barrio,partnro,zonanro) "
          StrSql = StrSql & " VALUES (" & NroDom & ",'" & Calle & "','" & Nro_Nrodom & "','" & Piso & "','"
          StrSql = StrSql & Depto & "','" & Torre & "','" & Manzana & "','" & Cpostal & "','" & Entre & "'," & Nro_Localidad & ","
          StrSql = StrSql & Nro_Provincia & "," & Nro_Pais & ",'" & Barrio & "'," & Nro_Partido & "," & Nro_Zona & ")"
          objConn.Execute StrSql, , adExecuteNoRecords
        
          Texto = ": " & "Inserte el Domicilio - "
          Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
          
          If Telefono <> "" Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
              StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
              StrSql = StrSql & " VALUES(" & NroDom & ",'" & Telefono & "',0,-1,0,1)"
              objConn.Execute StrSql, , adExecuteNoRecords

              Texto = ": " & "Inserte el Telefono Principal - "
              Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
          End If
        Else
            StrSql = " UPDATE detdom SET "
            StrSql = StrSql & " calle =" & "'" & Calle & "'"
            StrSql = StrSql & ",nro =" & "'" & Nro_Nrodom & "'"
            StrSql = StrSql & ",piso =" & "'" & Piso & "'"
            StrSql = StrSql & ",oficdepto =" & "'" & Depto & "'"
            StrSql = StrSql & ",torre =" & "'" & Torre & "'"
            StrSql = StrSql & ",manzana =" & "'" & Manzana & "'"
            StrSql = StrSql & ",codigopostal =" & "'" & Cpostal & "'"
            StrSql = StrSql & ",entrecalles =" & "'" & Entre & "'"
            StrSql = StrSql & ",locnro =" & Nro_Localidad
            StrSql = StrSql & ",provnro =" & Nro_Provincia
            StrSql = StrSql & ",paisnro =" & Nro_Pais
            StrSql = StrSql & ", partnro = " & Nro_Partido
            StrSql = StrSql & ", zonanro =" & Nro_Zona
            StrSql = StrSql & " WHERE domnro = " & rs!domnro
            objConn.Execute StrSql, , adExecuteNoRecords
        
            Texto = ": " & "Domicilio Actualizado - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        
            If Telefono <> "" Then
                StrSql = "SELECT * FROM telefono "
                StrSql = StrSql & " WHERE domnro =" & rs!domnro
                StrSql = StrSql & " AND telnro ='" & Telefono & "'"
                If rs_Tel.State = adStateOpen Then rs_Tel.Close
                OpenRecordset StrSql, rs_Tel
                If rs_Tel.EOF Then
                    'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                    StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                    StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & Telefono & "',0,-1,0,1)"
                    objConn.Execute StrSql, , adExecuteNoRecords
                      
                    Texto = ": " & "Inserte el Telefono Principal - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            End If

        End If
    End If
  End If
  
  If Not ExisteLeg Then
    ' Inserto las Fases
    StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
    StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
    If nro_causabaja <> 0 Then
      StrSql = StrSql & nro_causabaja
    Else
      StrSql = StrSql & "null"
    End If
    StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
    objConn.Execute StrSql, , adExecuteNoRecords
    
  Else
    StrSql = "SELECT * FROM fases WHERE estado = -1 AND sueldo = -1 AND vacaciones = -1 AND indemnizacion = -1 AND real = -1 AND empleado = " & NroTercero
    OpenRecordset StrSql, rs
    If rs.EOF Then
        StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
        StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
        If nro_causabaja <> 0 Then
          StrSql = StrSql & nro_causabaja
        Else
          StrSql = StrSql & "null"
        End If
        StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
        objConn.Execute StrSql, , adExecuteNoRecords
    Else
        StrSql = " UPDATE fases SET "
        StrSql = StrSql & " altfec =" & F_Alta
        StrSql = StrSql & ",bajfec =" & F_Baja
        StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
        objConn.Execute StrSql, , adExecuteNoRecords
    
        Texto = ": " & "Fase Actualizada - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
    End If
  End If

  Call Insertar_His_Estructura(1, nro_sucursal, NroTercero, F_Alta, F_Baja)
  Call Insertar_His_Estructura(3, nro_categoria, NroTercero, F_Alta, F_Baja)
  Call Insertar_His_Estructura(4, nro_puesto, NroTercero, F_Alta, F_Baja)
  Call Insertar_His_Estructura(5, nro_ccosto, NroTercero, F_Alta, F_Baja)
  Call Insertar_His_Estructura(10, nro_empresa, NroTercero, F_Alta, F_Baja)
  Call Insertar_His_Estructura(15, nro_cajajub, NroTercero, F_Alta, F_Baja)
  Call Insertar_His_Estructura(16, nro_sindicato, NroTercero, F_Alta, F_Baja)
  Call Insertar_His_Estructura(17, nro_osocial_elegida, NroTercero, F_Alta, F_Baja)
  Call Insertar_His_Estructura(19, nro_convenio, NroTercero, F_Alta, F_Baja)
  Call Insertar_His_Estructura(23, nro_planos_elegida, NroTercero, F_Alta, F_Baja)
    
  
Texto = ": " & "Linea procesada correctamente "
Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
'LineaOK.Writeline Mid(strReg, 1, Len(strReg))
OK = True
         
FinLinea:
If rs.State = adStateOpen Then
    rs.Close
End If
Exit Sub

SaltoLinea:
    Texto = ": " & " - Error:" & Err.Description
    NroColumna = 1
    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    MyRollbackTrans
    OK = False
    GoTo FinLinea
End Sub




Public Sub LineaModelo_664(ByVal strReg As String, ByRef OK As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de Empleados Reducida - Similar al Modelo 605
' Autor      : Manterola Maria Magdalena
' Fecha      : 06/09/2012
' Ultima Mod.:
'  *********************   FORMATO  *********************
'       Legajo   Apellido1@Apellido2   Nombre1@Nombre2   F.Nacim    País de Nacimiento
'       Nacionalidad   Fec.Ingreso al País  Est.Civil  Sexo  Fec. de Alta Tipo Documento
'       Nro. Documento  Tipo Documento  Nro. Documento  E-mail  Contrato    Fecha de Vto. Contrato
'       Estado del Empleado Causa de Baja   Fecha de Baja   Modelo Organizacional
'       Tipo de Estructura  Estructura  Tipo de Estructura  Estructura  Tipo de Estructura  Estructura
'       Tipo de Estructura  Estructura  Tipo de Estructura  Estructura
'  *******************************************************
' ---------------------------------------------------------------------------------------------

Dim pos1            As Long
Dim pos2            As Long

Dim Legajo          As String   'LEGAJO                   -- empleado.empleg
Dim Apellido        As String   'APELLIDO                 -- empleado.terape y tercero.terape
Dim Apellido2       As String   'APELLIDO 2               -- empleado.terape2 y tercero.terape2
Dim nombre          As String   'NOMBRE                   -- empleado.ternom y tercero.ternom
Dim nombre2         As String   'NOMBRE 2                 -- empleado.ternom2 y tercero.ternom2
Dim Fnac            As String   'FNAC                     -- tercero.terfecna
Dim Nacionalidad    As String   'Nacionalidad             -- tercero.nacionalnro
Dim PaisNac         As String   'Pais de Nacimiento       -- tercero.paisnro
Dim Fing            As String   'Fec.Ingreso al Pais      -- terecro.terfecing
Dim EstCivil        As String   'Est.Civil                -- tercero.estcivnro
Dim Sexo            As String   'Sexo                     -- tercero.tersex
Dim FAlta           As String   'Fec. de Alta             -- empleado.empfaltagr y fases.altfec
Dim Tdocu           As String   'Tipo Documento           -- ter_dpc.tidnro (DU)
Dim Ndocu           As String   'Nro. Documento           -- ter_doc.nrodoc
Dim Cuil            As String   'CUIL                     -- ter_doc.nrodoc (10)

Dim Email           As String   'E-mail                   -- empleado.empemail

Dim Contrato        As String   'Contrato                 -- his_estructura.estrnro
Dim Estado          As String   'Estado                   -- empleado.empest y fases.estado
Dim CausaBaja       As String   'Causa de Baja            -- fases.caunro
Dim FBaja           As String   'Fecha de Baja            -- fases.bajfec
Dim ModOrg          As String   'Empresa                  -- his_estructura.estrnro

Dim FFinContrato    As String
Dim Fecha_FinContrato As String

Dim Ternro As Long

Dim ter_est1 As Long
Dim ter_est2 As Long
Dim ter_est3 As Long
Dim ter_est4 As Long
Dim ter_est5 As Long

Dim ape()   As String
Dim Nom()   As String

Dim NroTercero          As Long

Dim Nro_Legajo          As Long
Dim Nro_TDocumento      As Long
Dim Nro_TDocumentoCuil  As Long

Dim nro_paisnac         As Long

Dim nro_contrato        As Long
Dim nro_causabaja       As Long
Dim nro_empresa         As Long

Dim estr1desc As Boolean
Dim estr2desc As Boolean
Dim estr3desc As Boolean
Dim estr4desc As Boolean
Dim estr5desc As Boolean

Dim Nro_PrimeraEstructura As Long
Dim Nro_SegundaEstructura As Long
Dim Nro_TerceraEstructura As Long
Dim Nro_CuartaEstructura As Long
Dim Nro_QuintaEstructura As Long

Dim nro_estcivil        As Long
Dim nro_nacionalidad    As Long

Dim F_Nacimiento        As String
Dim F_Fallecimiento     As String
Dim F_Alta              As String
Dim F_Baja              As String
Dim F_Ingreso           As String

Dim Inserto_estr        As Boolean

Dim ter_sexo            As Long
Dim ter_estado          As Long

Dim PrimerTE  As Long
Dim PrimeraEstructura As String
Dim SegundoTE  As Long
Dim SegundaEstructura As String
Dim TercerTE  As Long
Dim TerceraEstructura As String
Dim CuartoTE  As Long
Dim CuartaEstructura As String
Dim QuintoTE  As Long
Dim QuintaEstructura As String

Dim rs As New ADODB.Recordset
Dim rs_Sql As New ADODB.Recordset
Dim rs_Aux As New ADODB.Recordset
Dim rs_Empleado As New ADODB.Recordset
Dim rs_Tel As New ADODB.Recordset
Dim rs_Est As New ADODB.Recordset
Dim rs_repl As New ADODB.Recordset

Dim CotDesc             As Boolean   'Contrato                 -- his_estructura

Dim rs_tdoc As New ADODB.Recordset
Dim rs_emp  As New ADODB.Recordset
Dim rs_tpl  As New ADODB.Recordset
Dim rs_leg  As New ADODB.Recordset

Dim Nro_Institucion As Long

Dim Sigue As Boolean
Dim ExisteLeg As Boolean
Dim CalculaLegajo As Boolean
Dim Valida_CUIL As Boolean

Dim F_NacAux As Date
Dim F_AltaAux As Date
Dim Edad As Integer
Dim MaxEmpl As Long
Dim CantEmpl As Long

    On Error GoTo SaltoLinea

    

    ' True indica que se hace por Descripcion. False por Codigo Externo
    
    CotDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    
    estr1desc = True
    estr2desc = True
    estr3desc = True
    estr4desc = True
    estr5desc = True
    
    Sigue = True 'Indica que si en el archivo viene mas de una vez un empleado, le crea las fases
    ExisteLeg = False
    'RegLeidos = RegLeidos + 1
    LineaCarga = LineaCarga + 1
    
    Flog.writeline
    FlogE.writeline
    FlogP.writeline
    
    'Legajo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Legajo"
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Legajo = Aux
    'Legajo = Mid(strReg, pos1, pos2 - pos1 + 1)
    If Legajo = "N/A" Or EsNulo(Legajo) Then
        CalculaLegajo = True
    Else
        StrSql = "SELECT * FROM empleado WHERE empleado.empleg = " & Legajo
        OpenRecordset StrSql, rs_emp
        If (Not rs_emp.EOF) Then
            If (Not Sigue) Then
                Texto = ": " & " - El Empleado ya Existe."
                NroColumna = 1
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                'Ok = False
                'RegError = RegError + 1
                'Exit Sub
            Else
                NroTercero = rs_emp!Ternro
                ExisteLeg = True
            End If
        End If
    End If

    'EN NOMBRE = NOMBRE1@NOMBRE2
    'EN APELLIDO = APELLIDO1@APELLIDO2
    
    'Apellido
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Apellido"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    ape = Split(Aux, "@")
    
    If UBound(ape) = 0 Then
        'Si no se ingreso el apellido separado con @, todo el apellido ingresado se guarda en terape
        Apellido = Aux
        Apellido2 = ""
    Else
        If (ape(0) = "N/A" Or EsNulo(ape(0))) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Apellido = Left(ape(0), 25)
        If Not (ape(1) = "N/A" Or EsNulo(ape(1)) Or ape(1) = "") Then
            Apellido2 = Left(ape(1), 25)
        Else
            Apellido2 = ""
        End If
    End If
    
    'Nombre
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nombre"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Nom = Split(Aux, "@")
    
    If UBound(Nom) = 0 Then
        'Si no se ingreso el nombre separado con @, todo el nombre ingresado se guarda en ternom
        nombre = Aux
        nombre2 = ""
    Else
        If (Nom(0) = "N/A" Or EsNulo(Nom(0))) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        nombre = Left(Nom(0), 25)
        If (Apellido = "" Or Apellido = "N/A") And (nombre = "" Or nombre = "N/A") Then
            Texto = ": " & " - Debe Ingresar un Nombre y Apellido."
            NroColumna = 2
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        If Not (Nom(1) = "N/A" Or EsNulo(Nom(1)) Or Nom(1) = "") Then
            nombre2 = Left(Nom(1), 25)
        Else
            nombre2 = ""
        End If
    End If
    
    'Fecha de Nacimiento
    NroColumna = NroColumna + 1
    'Obligatorio = False
    Obligatorio = True
    Campoetiqueta = "Fecha de Nacimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If Aux <> "N/A" Then
    Aux = EliminarCHInvalidosII(Aux, 2, "")
    End If
    Fnac = Aux
    If Fnac = "N/A" Then
       F_Nacimiento = "Null"
    Else
       F_Nacimiento = ConvFecha(Fnac)
       F_NacAux = CDate(Fnac)
    End If
    
    
    'Pais de Nacimiento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Pais de Nacimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    PaisNac = Aux
    If PaisNac <> "N/A" Then
        StrSql = " SELECT paisnro FROM pais WHERE UPPER(paisdesc) = '" & UCase(PaisNac) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_paisnac = rs_Sql!Paisnro
        Else
            StrSql = " INSERT INTO pais(paisdesc,paisdef) VALUES ('" & UCase(PaisNac) & "',0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_paisnac = getLastIdentity(objConn, "pais")
        End If
    Else
        nro_paisnac = 0
    End If
    
    
    'Nacionalidad
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nacionalidad"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Nacionalidad = Aux
    If Nacionalidad <> "N/A" Then
        StrSql = " SELECT nacionalnro FROM nacionalidad WHERE UPPER(nacionaldes) = '" & UCase(Nacionalidad) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_nacionalidad = rs_Sql!nacionalnro
        Else
            StrSql = " INSERT INTO nacionalidad(nacionaldes) VALUES ('" & UCase(Nacionalidad) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_nacionalidad = getLastIdentity(objConn, "nacionalidad")
        End If
    Else
        nro_nacionalidad = 0
    End If
    If nro_nacionalidad = 0 Then
        Texto = ": " & " - La Nacionalidad no Existe."
        NroColumna = 6
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    
    'Fecha de Ingreso al Pais
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de Ingreso al Pais"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If Aux <> "N/A" Then
    Aux = EliminarCHInvalidosII(Aux, 2, "")
    End If
    Fing = Aux
    If (Fing = "N/A") Or EsNulo(Fing) Then
        F_Ingreso = "Null"
    Else
        F_Ingreso = ConvFecha(Fing)
    End If
    
    'Estado Civil
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estado Civil"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    EstCivil = Left(Aux, 30)
    If EstCivil <> "N/A" And Not EsNulo(EstCivil) Then
        StrSql = " SELECT estcivnro FROM estcivil WHERE UPPER(estcivdesabr) = '" & UCase(EstCivil) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_estcivil = rs_Sql!estcivnro
        Else
            StrSql = " INSERT INTO estcivil(estcivdesabr) VALUES ('" & UCase(EstCivil) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_estcivil = getLastIdentity(objConn, "estcivil")
        End If
    Else
        nro_estcivil = 0
    End If
    If nro_estcivil = 0 Then
        Texto = ": " & " - El Estado Civil no Existe."
        NroColumna = 8
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Sexo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sexo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Sexo = UCase(Aux)
    If (Sexo = "M") Or (Sexo = "-1") Or (Sexo = "MASCULINO") Then
        ter_sexo = -1
    Else
        ter_sexo = 0
    End If
                                                            
    'Fecha de alta
    NroColumna = NroColumna + 1
    'Obligatorio = False
    Obligatorio = True
    Campoetiqueta = "Fecha de alta"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If Aux <> "N/A" Then
        Aux = EliminarCHInvalidosII(Aux, 2, "")
    End If
    FAlta = Aux
    If FAlta = "N/A" Or EsNulo(FAlta) Then
        F_Alta = "Null"
        Texto = ": " & " - La Fecha de Alta es Obligatoria."
        NroColumna = 10
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    Else
        F_Alta = ConvFecha(FAlta)
        F_AltaAux = CDate(FAlta)
        
        
        'Validar que el empleado sea mayor a 14 años
        Edad = 0
        If (Month(F_AltaAux) > Month(F_NacAux)) Then
           Edad = DateDiff("yyyy", F_NacAux, F_AltaAux)
        Else
           If (Month(F_AltaAux) = Month(F_NacAux)) And (Day(F_AltaAux) >= Day(F_NacAux)) Then
             Edad = DateDiff("yyyy", F_NacAux, F_AltaAux)
           Else
             Edad = DateDiff("yyyy", F_NacAux, F_AltaAux) - 1
           End If
        End If
        
        If Edad < 14 Then
            Texto = ": " & " - El empleado es menor a 14 años."
            NroColumna = 10
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            'Ok = False
            RegError = RegError + 1
            Exit Sub
        End If
        
    End If
    
    'Tipo de Doc
    NroColumna = NroColumna + 1
    Campoetiqueta = "Tipo de Doc"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Tdocu = Left(Aux, 8)
    If Tdocu <> "N/A" And Tdocu <> "" And Not EsNulo(Tdocu) Then
        StrSql = " SELECT tidnro FROM tipodocu WHERE UPPER(tidsigla) = '" & UCase(Tdocu) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            Nro_TDocumento = rs_Sql!tidnro
        Else
            'busco la primera institucion, si no existe la creo
            StrSql = " SELECT * FROM institucion "
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                Nro_Institucion = rs!InstNro
            Else
                'creo una
                StrSql = " INSERT INTO institucion (instdes,instabre) VALUES ('NACIONAL','NAC')"
                objConn.Execute StrSql, , adExecuteNoRecords
                Nro_Institucion = getLastIdentity(objConn, "institucion")
            End If
            'creo el tipo de documento
            StrSql = " INSERT INTO tipodocu(tidnom,tidsigla,tidsist,instnro,tidunico) VALUES ('" & UCase(Tdocu) & "','" & UCase(Tdocu) & "',0," & Nro_Institucion & ",0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            Nro_TDocumento = getLastIdentity(objConn, "tipodocu")
        End If
    Else
        Nro_TDocumento = 0
    End If
    If Nro_TDocumento = 0 Then
        Texto = ": " & " - El Tipo de Documento no Existe."
        NroColumna = 13
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    
    'Nro de Documento
    NroColumna = NroColumna + 1
    Campoetiqueta = "Nro de Documento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    'FGZ - 27/11/2013 --------------------------
    'Se cambió la validacion al nuevo limite
    'Ndocu = Left(Aux, 30)
    Ndocu = Left(Aux, 100)
    'FGZ - 27/11/2013 --------------------------
    If Ndocu = "N/A" Then
        Ndocu = ""
    End If
    
    
    '---------------------------------------------------
    ' Verifica si el nro documento pertenece a otro empleado
    '---------------------------------------------------
    'StrSql = "SELECT * FROM empleado "
    'StrSql = StrSql & " INNER JOIN ter_doc ON ter_doc.ternro = empleado.ternro "
    'StrSql = StrSql & " WHERE ter_doc.tidnro = " & Nro_TDocumento & " AND ter_doc.nrodoc = '" & Ndocu & "'"
    'OpenRecordset StrSql, rs_tdoc
    'If (Not rs_tdoc.EOF) Then
        'JPB: Se quito que existe el legajo. Aqui lo que ya existe seria el documento
        'ExisteLeg = True
    '    If (Not Sigue) Then
    '        Texto = ": " & " - Ese Tipo y Numero de Documento estan Asignados a otro Empleado."
    '        NroColumna = 14
    '        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            'Ok = False
    '        RegError = RegError + 1
    '        Exit Sub
    '    Else
            'FGZ - 11/11/2010 - Si es el mismo legajo no debe poner ningun cartel
    '        If NroTercero <> rs_tdoc!Ternro Then
    '            NroTercero = rs_tdoc!Ternro
                'ExisteLeg = True
    '            Texto = ": " & " - Empleado: " & Legajo & " - Ese Tipo y Numero de Documento estan Asignados a otro Empleado."
    '            NroColumna = 14
    '            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                'JPB: Faltaba que interrumpa el proceso porque en este caso ya existe el documento y esta asociado a otro tercero
    '            RegError = RegError + 1
    '            Exit Sub
    '        End If
    '    End If
    ' Else
            'JPB -Si no existe como empleado, verifico si existe como otro tercero
     '         StrSql = "SELECT * FROM ter_doc "
     '        StrSql = StrSql & " WHERE ter_doc.nrodoc = '" & Ndocu & "'"
     '        OpenRecordset StrSql, rs_tdoc
            
     '        If (Not rs_tdoc.EOF) Then
     '            NroTercero = rs_tdoc!Ternro
     '            ExisteLeg = True
     '            Texto = ": " & " - Empleado: " & Legajo & " - El Numero de Documento " & Ndocu & " ya existe en la base para el tercero: " & NroTercero
     '            NroColumna = 14
     '            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
     '            RegError = RegError + 1
     '            Exit Sub
     '        End If
             '---------------------------
    
    
    'End If

    'Tipo de Doc - CUIL
    NroColumna = NroColumna + 1
    Campoetiqueta = "Segundo Tipo de Doc"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Tdocu = Left(Aux, 8)
    If Tdocu <> "N/A" And Tdocu <> "" And Not EsNulo(Tdocu) Then
        StrSql = " SELECT tidnro FROM tipodocu WHERE UPPER(tidsigla) = '" & UCase(Tdocu) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            Nro_TDocumentoCuil = rs_Sql!tidnro
        Else
            'busco la primera institucion, si no existe la creo
            StrSql = " SELECT * FROM institucion "
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                Nro_Institucion = rs!InstNro
            Else
                'creo una
                StrSql = " INSERT INTO institucion (instdes,instabre) VALUES ('NACIONAL','NAC')"
                objConn.Execute StrSql, , adExecuteNoRecords
                Nro_Institucion = getLastIdentity(objConn, "institucion")
            End If
            'creo el tipo de documento
            StrSql = " INSERT INTO tipodocu(tidnom,tidsigla,tidsist,instnro,tidunico) VALUES ('" & UCase(Tdocu) & "','" & UCase(Tdocu) & "',0," & Nro_Institucion & ",0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            Nro_TDocumentoCuil = getLastIdentity(objConn, "tipodocu")
        End If
    Else
        Nro_TDocumentoCuil = 0
    End If
    
    
    'CUIL
    NroColumna = NroColumna + 1
    Campoetiqueta = "Segundo Nro de Documento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    
    If Aux = "N/A" Or EsNulo(Aux) Then
        Cuil = ""
    Else
        'Cuil = Replace(Left(aux, 30), "-", "")
        'FGZ - 27/11/2013 --------------------------
        'Se cambió la validacion al nuevo limite
        'Cuil = Left(Aux, 30)
        Cuil = Left(Aux, 100)
        'FGZ - 27/11/2013 --------------------------
    End If
                
           
    'Email
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Email"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    If Aux <> "N/A" Then
        Aux = EliminarCHInvalidosII(Aux, 4, "")
        Email = Left(Aux, 100)
    Else
        Email = ""
    End If
               
    'Contrato
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Contrato"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Contrato = Aux
    
    ' Validacion y Creacion del Contrato
    If Contrato <> "N/A" Then
        If CotDesc Then
            Call ValidaEstructura(18, Contrato, nro_contrato, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(18, Contrato, nro_contrato, Inserto_estr)
        End If
        
        If Inserto_estr Then
            Call CreaComplemento(18, 0, nro_contrato, Contrato)
            Inserto_estr = False
        End If
    Else
        nro_contrato = 0
    End If
    
    'Fecha de fin de contrato
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de fin de contrato"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    If Aux <> "N/A" Then
        Aux = EliminarCHInvalidosII(Aux, 2, "")
    End If
    FFinContrato = Aux
    If FFinContrato = "N/A" Or EsNulo(FFinContrato) Then
        Fecha_FinContrato = "Null"
    Else
        Fecha_FinContrato = ConvFecha(FFinContrato)
    End If
        
    'Estado del empleado
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estado del empleado"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Estado = Aux
    If UCase(Estado) = "ACTIVO" Then
        ter_estado = -1
    Else
        ter_estado = 0
    End If
    
    'Causa de baja
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Causa de baja"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    CausaBaja = Aux
    If Not EsNulo(CausaBaja) And CausaBaja <> "N/A" Then
        StrSql = " SELECT caunro FROM causa WHERE caudes = '" & CausaBaja & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_causabaja = rs_Sql!caunro
        Else
            StrSql = " INSERT INTO causa(caudes,causist,caudesvin,empnro) VALUES ('" & CausaBaja & "',0,-1,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            nro_causabaja = getLastIdentity(objConn, "causa")
        End If
    Else
        nro_causabaja = 0
    End If
    
    'Fecha de baja
    NroColumna = NroColumna + 1
        ' Si hay una causa de baja, se tiene que cargar ssi la Fecha de Baja (tablero adp)
    If nro_causabaja <> 0 Then
        Obligatorio = True
    Else
        Obligatorio = False
    End If
    Campoetiqueta = "Fecha de baja"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If Aux <> "N/A" Then
    Aux = EliminarCHInvalidosII(Aux, 2, "")
    End If
    FBaja = Aux
    If EsNulo(FBaja) Or FBaja = "N/A" Then
        F_Baja = "Null"
    Else
        F_Baja = ConvFecha(FBaja)
    End If
   
    'Modelo de Organizacion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Modelo de Organizacion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        ModOrg = Aux
        'desde aca
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        ModOrg = Aux
        If ModOrg = "N/A" Or EsNulo(ModOrg) Then
            StrSql = "SELECT * FROM adptemplate WHERE tplatedefault = -1"
            OpenRecordset StrSql, rs_tpl
            If Not rs_tpl.EOF Then
                nro_ModOrg = rs_tpl!tplatenro
            Else
                StrSql = "SELECT top 1 * FROM adptemplate"
                OpenRecordset StrSql, rs_tpl
                If rs_tpl.EOF Then
                    Texto = ": no hay modelos de organizacion"
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                    RegError = RegError + 1
                    Exit Sub
                Else
                    nro_ModOrg = rs_tpl!tplatenro
                End If
            End If
        Else
            StrSql = "SELECT * FROM adptemplate WHERE tplatedesabr = '" & ModOrg & "'"
            OpenRecordset StrSql, rs_tpl
            If rs_tpl.EOF Then
                StrSql = "INSERT INTO adptemplate (tplatedesabr,tplatedefault) VALUES ('" & ModOrg & "',-1)"
                objConn.Execute StrSql, , adExecuteNoRecords
                nro_ModOrg = getLastIdentity(objConn, "adptemplate")
            Else
                nro_ModOrg = rs_tpl!tplatenro
            End If
        End If
    Else
            StrSql = "SELECT * FROM adptemplate WHERE tplatedefault = -1"
            OpenRecordset StrSql, rs_tpl
            If Not rs_tpl.EOF Then
                nro_ModOrg = rs_tpl!tplatenro
            Else
                StrSql = "SELECT top 1 * FROM adptemplate"
                OpenRecordset StrSql, rs_tpl
                If rs_tpl.EOF Then
                    Texto = ": no hay modelos de organizacion"
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                    RegError = RegError + 1
                    Exit Sub
                Else
                    nro_ModOrg = rs_tpl!tplatenro
                End If
            End If
    End If
    
    '---------------------------------------------------------------------------------------
    'Tipo de Estructura Numero 1
    NroColumna = NroColumna + 1
    Campoetiqueta = "Primer Tipo de Estructura"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Aux = EliminarCHInvalidosII(Aux, 1, "")
   
    'Valido el tipo de estructura 1
    StrSql = "SELECT tenro FROM tipoestructura WHERE UPPER(tedabr) = '" & UCase(Aux) & "'"
    OpenRecordset StrSql, rs_Aux
    If rs_Aux.EOF Then
        StrSql = "INSERT INTO tipoestructura(tedabr,tesist,tedepbaja,cenro) VALUES('" & UCase(Aux) & "',0,0,1)"
        objConn.Execute StrSql, , adExecuteNoRecords
        PrimerTE = getLastIdentity(objConn, "tipoestructura")
    Else
        PrimerTE = rs_Aux!Tenro
    End If
    rs_Aux.Close
    
    'Estructura Numero 1
    NroColumna = NroColumna + 1
    Campoetiqueta = "Primera Estructura"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        PrimeraEstructura = Aux
    
        ' Validacion y Creacion de la Primera(junto con sus Complementos)
        If PrimeraEstructura <> "N/A" And Not EsNulo(PrimeraEstructura) Then
            If estr1desc Then
                Call ValidaEstructura(PrimerTE, Mid(PrimeraEstructura, 1, 60), Nro_PrimeraEstructura, Inserto_estr)
                Flog.writeline "ValidaEstructura OK"
            Else
                Flog.writeline "Entro x valida EstructuraCodext"
                Call ValidaEstructuraCodExt(PrimerTE, Mid(PrimeraEstructura, 1, 20), Nro_PrimeraEstructura, Inserto_estr)
            End If
            
            Call VerSiCrearTercero(PrimerTE, Mid(PrimeraEstructura, 1, 20), ter_est1)
            If Inserto_estr Then
                'Veo si tengo que crear el complemento, dependiendo del tipo de estructura
                Select Case PrimerTE
                    Case 23
                        'Plan de Obra Social Elegida
                        'Tengo que buscar la Obra Social Elegida
                        StrSql = "SELECT os.ternro FROM his_estructura his "
                        StrSql = StrSql & " INNER JOIN estructura est ON est.tenro = his.tenro AND est.estrnro = his.estrnro "
                        StrSql = StrSql & " INNER JOIN osocial os ON os.osdesc = est.estrdabr "
                        StrSql = StrSql & " WHERE his.tenro = 17 and his.ternro = " & NroTercero
                        StrSql = StrSql & " ORDER BY htetdesde DESC, htethasta ASC "
                        OpenRecordset StrSql, rs_Est
                        If Not rs_Est.EOF Then
                            ter_est1 = rs_Est!Ternro
                            Call VerSiCrearComplemento(PrimerTE, Nro_PrimeraEstructura, Mid(PrimeraEstructura, 1, 20), ter_est1)
                        End If
                    Case 25
                        'Plan de Obrea Social Por Ley
                        'Tengo que buscar la Obra Social por Ley
                        StrSql = "SELECT os.ternro FROM his_estructura his "
                        StrSql = StrSql & " INNER JOIN estructura est ON est.tenro = his.tenro AND est.estrnro = his.estrnro "
                        StrSql = StrSql & " INNER JOIN osocial os ON os.osdesc = est.estrdabr "
                        StrSql = StrSql & " WHERE his.tenro = 24 and his.ternro = " & NroTercero
                        StrSql = StrSql & " ORDER BY htetdesde DESC, htethasta ASC "
                        OpenRecordset StrSql, rs_Est
                        If Not rs_Est.EOF Then
                            ter_est1 = rs_Est!Ternro
                            Call VerSiCrearComplemento(PrimerTE, Nro_PrimeraEstructura, Mid(PrimeraEstructura, 1, 20), ter_est1)
                        End If
                    Case Else
                        Call VerSiCrearComplemento(PrimerTE, Nro_PrimeraEstructura, Mid(PrimeraEstructura, 1, 20), ter_est1)
                End Select
            End If
        Else
            Nro_PrimeraEstructura = 0
        End If
    Else
        Nro_PrimeraEstructura = 0
    End If
    '---------------------------------------------------------------------------------------
    
    '---------------------------------------------------------------------------------------
    'Tipo de Estructura Numero 2
    NroColumna = NroColumna + 1
    Campoetiqueta = "Segundo Tipo de Estructura"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    
    'Valido el tipo de estructura 2
    StrSql = "SELECT tenro FROM tipoestructura WHERE UPPER(tedabr) = '" & UCase(Aux) & "'"
    OpenRecordset StrSql, rs_Aux
    If rs_Aux.EOF Then
        StrSql = "INSERT INTO tipoestructura(tedabr,tesist,tedepbaja,cenro) VALUES('" & UCase(Aux) & "',0,0,1)"
        objConn.Execute StrSql, , adExecuteNoRecords
        SegundoTE = getLastIdentity(objConn, "tipoestructura")
    Else
        SegundoTE = rs_Aux!Tenro
    End If
    rs_Aux.Close
    
    'Estructura Numero 2
    NroColumna = NroColumna + 1
    Campoetiqueta = "Segunda Estructura"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        SegundaEstructura = Aux
        
        If SegundaEstructura <> "N/A" And Not EsNulo(SegundaEstructura) Then
            If estr2desc Then
                Call ValidaEstructura(SegundoTE, Mid(SegundaEstructura, 1, 60), Nro_SegundaEstructura, Inserto_estr)
                Flog.writeline "ValidaEstructura OK"
            Else
                Flog.writeline "Entro x valida EstructuraCodext"
                Call ValidaEstructuraCodExt(SegundoTE, Mid(SegundaEstructura, 1, 20), Nro_SegundaEstructura, Inserto_estr)
            End If
            
            Call VerSiCrearTercero(SegundoTE, Mid(SegundaEstructura, 1, 20), ter_est2)
            If Inserto_estr Then
                'Veo si tengo que crear el complemento, dependiendo del tipo de estructura
                Select Case SegundoTE
                    Case 23
                        'Plan de Obra Social Elegida
                        'Tengo que buscar la Obra Social Elegida
                        StrSql = "SELECT os.ternro FROM his_estructura his "
                        StrSql = StrSql & " INNER JOIN estructura est ON est.tenro = his.tenro AND est.estrnro = his.estrnro "
                        StrSql = StrSql & " INNER JOIN osocial os ON os.osdesc = est.estrdabr "
                        StrSql = StrSql & " WHERE his.tenro = 17 and his.ternro = " & NroTercero
                        StrSql = StrSql & " ORDER BY htetdesde DESC, htethasta ASC "
                        OpenRecordset StrSql, rs_Est
                        If Not rs_Est.EOF Then
                            ter_est2 = rs_Est!Ternro
                            Call VerSiCrearComplemento(SegundoTE, Nro_SegundaEstructura, Mid(SegundaEstructura, 1, 20), ter_est2)
                        End If
                    Case 25
                        'Plan de Obrea Social Por Ley
                        'Tengo que buscar la Obra Social por Ley
                        StrSql = "SELECT os.ternro FROM his_estructura his "
                        StrSql = StrSql & " INNER JOIN estructura est ON est.tenro = his.tenro AND est.estrnro = his.estrnro "
                        StrSql = StrSql & " INNER JOIN osocial os ON os.osdesc = est.estrdabr "
                        StrSql = StrSql & " WHERE his.tenro = 24 and his.ternro = " & NroTercero
                        StrSql = StrSql & " ORDER BY htetdesde DESC, htethasta ASC "
                        OpenRecordset StrSql, rs_Est
                        If Not rs_Est.EOF Then
                            ter_est2 = rs_Est!Ternro
                            Call VerSiCrearComplemento(SegundoTE, Nro_SegundaEstructura, Mid(SegundaEstructura, 1, 20), ter_est2)
                        End If
                    Case Else
                        Call VerSiCrearComplemento(SegundoTE, Nro_SegundaEstructura, Mid(SegundaEstructura, 1, 20), ter_est2)
                End Select
            End If
        Else
            Nro_SegundaEstructura = 0
        End If
    Else
        Nro_SegundaEstructura = 0
    End If
   
   
    '---------------------------------------------------------------------------------------
    
    '---------------------------------------------------------------------------------------
    'Tipo de Estructura Numero 3
    NroColumna = NroColumna + 1
    Campoetiqueta = "Tercer Tipo de Estructura"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    
    'Valido el tipo de estructura 3
    StrSql = "SELECT tenro FROM tipoestructura WHERE UPPER(tedabr) = '" & UCase(Aux) & "'"
    OpenRecordset StrSql, rs_Aux
    If rs_Aux.EOF Then
        StrSql = "INSERT INTO tipoestructura(tedabr,tesist,tedepbaja,cenro) VALUES('" & UCase(Aux) & "',0,0,1)"
        objConn.Execute StrSql, , adExecuteNoRecords
        TercerTE = getLastIdentity(objConn, "tipoestructura")
    Else
        TercerTE = rs_Aux!Tenro
    End If
    rs_Aux.Close
    
    'Estructura Numero 3
    NroColumna = NroColumna + 1
    Campoetiqueta = "Tercera Estructura"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        TerceraEstructura = Aux
        
        If TerceraEstructura <> "N/A" And Not EsNulo(TerceraEstructura) Then
            If estr3desc Then
                Call ValidaEstructura(TercerTE, Mid(TerceraEstructura, 1, 60), Nro_TerceraEstructura, Inserto_estr)
                Flog.writeline "ValidaEstructura OK"
            Else
                Flog.writeline "Entro x valida EstructuraCodext"
                Call ValidaEstructuraCodExt(TercerTE, Mid(TerceraEstructura, 1, 20), Nro_TerceraEstructura, Inserto_estr)
            End If
            
            Call VerSiCrearTercero(TercerTE, Mid(TerceraEstructura, 1, 20), ter_est3)
            If Inserto_estr Then
                'Veo si tengo que crear el complemento, dependiendo del tipo de estructura
                Select Case TercerTE
                    Case 23
                        'Plan de Obra Social Elegida
                        'Tengo que buscar la Obra Social Elegida
                        StrSql = "SELECT os.ternro FROM his_estructura his "
                        StrSql = StrSql & " INNER JOIN estructura est ON est.tenro = his.tenro AND est.estrnro = his.estrnro "
                        StrSql = StrSql & " INNER JOIN osocial os ON os.osdesc = est.estrdabr "
                        StrSql = StrSql & " WHERE his.tenro = 17 and his.ternro = " & NroTercero
                        StrSql = StrSql & " ORDER BY htetdesde DESC, htethasta ASC "
                        OpenRecordset StrSql, rs_Est
                        If Not rs_Est.EOF Then
                            ter_est3 = rs_Est!Ternro
                            Call VerSiCrearComplemento(TercerTE, Nro_TerceraEstructura, Mid(TerceraEstructura, 1, 20), ter_est3)
                        End If
                    Case 25
                        'Plan de Obrea Social Por Ley
                        'Tengo que buscar la Obra Social por Ley
                        StrSql = "SELECT os.ternro FROM his_estructura his "
                        StrSql = StrSql & " INNER JOIN estructura est ON est.tenro = his.tenro AND est.estrnro = his.estrnro "
                        StrSql = StrSql & " INNER JOIN osocial os ON os.osdesc = est.estrdabr "
                        StrSql = StrSql & " WHERE his.tenro = 24 and his.ternro = " & NroTercero
                        StrSql = StrSql & " ORDER BY htetdesde DESC, htethasta ASC "
                        OpenRecordset StrSql, rs_Est
                        If Not rs_Est.EOF Then
                            ter_est3 = rs_Est!Ternro
                            Call VerSiCrearComplemento(TercerTE, Nro_TerceraEstructura, Mid(TerceraEstructura, 1, 20), ter_est3)
                        End If
                    Case Else
                        Call VerSiCrearComplemento(TercerTE, Nro_TerceraEstructura, Mid(TerceraEstructura, 1, 20), ter_est3)
                End Select
            End If
        Else
            Nro_TerceraEstructura = 0
        End If
    Else
        Nro_TerceraEstructura = 0
    End If
    '---------------------------------------------------------------------------------------
   
    '---------------------------------------------------------------------------------------
    'Tipo de Estructura Numero 4
    NroColumna = NroColumna + 1
    Campoetiqueta = "Cuarto Tipo de Estructura"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    
    'Valido el tipo de estructura 4
    StrSql = "SELECT tenro FROM tipoestructura WHERE UPPER(tedabr) = '" & UCase(Aux) & "'"
    OpenRecordset StrSql, rs_Aux
    If rs_Aux.EOF Then
        StrSql = "INSERT INTO tipoestructura(tedabr,tesist,tedepbaja,cenro) VALUES('" & UCase(Aux) & "',0,0,1)"
        objConn.Execute StrSql, , adExecuteNoRecords
        CuartoTE = getLastIdentity(objConn, "tipoestructura")
    Else
        CuartoTE = rs_Aux!Tenro
    End If
    rs_Aux.Close
    
    'Estructura Numero 4
    NroColumna = NroColumna + 1
    Campoetiqueta = "Cuarta Estructura"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        CuartaEstructura = Aux
       
        If CuartaEstructura <> "N/A" And Not EsNulo(CuartaEstructura) Then
            If estr4desc Then
                Call ValidaEstructura(CuartoTE, Mid(CuartaEstructura, 1, 60), Nro_CuartaEstructura, Inserto_estr)
                Flog.writeline "ValidaEstructura OK"
            Else
                Flog.writeline "Entro x valida EstructuraCodext"
                Call ValidaEstructuraCodExt(CuartoTE, Mid(CuartaEstructura, 1, 20), Nro_CuartaEstructura, Inserto_estr)
            End If
            
            Call VerSiCrearTercero(CuartoTE, Mid(CuartaEstructura, 1, 20), ter_est4)
            If Inserto_estr Then
                'Veo si tengo que crear el complemento, dependiendo del tipo de estructura
                Select Case CuartoTE
                    Case 23
                        'Plan de Obra Social Elegida
                        'Tengo que buscar la Obra Social Elegida
                        StrSql = "SELECT os.ternro FROM his_estructura his "
                        StrSql = StrSql & " INNER JOIN estructura est ON est.tenro = his.tenro AND est.estrnro = his.estrnro "
                        StrSql = StrSql & " INNER JOIN osocial os ON os.osdesc = est.estrdabr "
                        StrSql = StrSql & " WHERE his.tenro = 17 and his.ternro = " & NroTercero
                        StrSql = StrSql & " ORDER BY htetdesde DESC, htethasta ASC "
                        OpenRecordset StrSql, rs_Est
                        If Not rs_Est.EOF Then
                            ter_est4 = rs_Est!Ternro
                            Call VerSiCrearComplemento(CuartoTE, Nro_CuartaEstructura, Mid(CuartaEstructura, 1, 20), ter_est4)
                        End If
                    Case 25
                        'Plan de Obrea Social Por Ley
                        'Tengo que buscar la Obra Social por Ley
                        StrSql = "SELECT os.ternro FROM his_estructura his "
                        StrSql = StrSql & " INNER JOIN estructura est ON est.tenro = his.tenro AND est.estrnro = his.estrnro "
                        StrSql = StrSql & " INNER JOIN osocial os ON os.osdesc = est.estrdabr "
                        StrSql = StrSql & " WHERE his.tenro = 24 and his.ternro = " & NroTercero
                        StrSql = StrSql & " ORDER BY htetdesde DESC, htethasta ASC "
                        OpenRecordset StrSql, rs_Est
                        If Not rs_Est.EOF Then
                            ter_est4 = rs_Est!Ternro
                            Call VerSiCrearComplemento(CuartoTE, Nro_CuartaEstructura, Mid(CuartaEstructura, 1, 20), ter_est4)
                        End If
                    Case Else
                        Call VerSiCrearComplemento(CuartoTE, Nro_CuartaEstructura, Mid(CuartaEstructura, 1, 20), ter_est4)
                End Select
            End If
        Else
            Nro_CuartaEstructura = 0
        End If
    Else
        Nro_CuartaEstructura = 0
    End If
    '---------------------------------------------------------------------------------------
    
    '---------------------------------------------------------------------------------------
    'Tipo de Estructura Numero 5
    NroColumna = NroColumna + 1
    Campoetiqueta = "Quinto Tipo de Estructura"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    
    'Valido el tipo de estructura 5
    StrSql = "SELECT tenro FROM tipoestructura WHERE UPPER(tedabr) = '" & UCase(Aux) & "'"
    OpenRecordset StrSql, rs_Aux
    If rs_Aux.EOF Then
        StrSql = "INSERT INTO tipoestructura(tedabr,tesist,tedepbaja,cenro) VALUES('" & UCase(Aux) & "',0,0,1)"
        objConn.Execute StrSql, , adExecuteNoRecords
        QuintoTE = getLastIdentity(objConn, "tipoestructura")
    Else
        QuintoTE = rs_Aux!Tenro
    End If
    rs_Aux.Close
    
    'Estructura Numero 5
    NroColumna = NroColumna + 1
    Campoetiqueta = "Quinta Estructura"
    pos1 = pos2 + 2
    pos2 = Len(strReg)
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        QuintaEstructura = Aux

        If QuintaEstructura <> "N/A" And Not EsNulo(QuintaEstructura) Then
            If estr5desc Then
                Call ValidaEstructura(QuintoTE, Mid(QuintaEstructura, 1, 60), Nro_QuintaEstructura, Inserto_estr)
                Flog.writeline "ValidaEstructura OK"
            Else
                Flog.writeline "Entro x valida EstructuraCodext"
                Call ValidaEstructuraCodExt(QuintoTE, Mid(QuintaEstructura, 1, 20), Nro_QuintaEstructura, Inserto_estr)
            End If
            
            Call VerSiCrearTercero(QuintoTE, Mid(QuintaEstructura, 1, 20), ter_est5)
            If Inserto_estr Then
                'Veo si tengo que crear el complemento, dependiendo del tipo de estructura
                Select Case QuintoTE
                    Case 23
                        'Plan de Obra Social Elegida
                        'Tengo que buscar la Obra Social Elegida
                        StrSql = "SELECT os.ternro FROM his_estructura his "
                        StrSql = StrSql & " INNER JOIN estructura est ON est.tenro = his.tenro AND est.estrnro = his.estrnro "
                        StrSql = StrSql & " INNER JOIN osocial os ON os.osdesc = est.estrdabr "
                        StrSql = StrSql & " WHERE his.tenro = 17 and his.ternro = " & NroTercero
                        StrSql = StrSql & " ORDER BY htetdesde DESC, htethasta ASC "
                        OpenRecordset StrSql, rs_Est
                        If Not rs_Est.EOF Then
                            ter_est5 = rs_Est!Ternro
                            Call VerSiCrearComplemento(QuintoTE, Nro_QuintaEstructura, Mid(QuintaEstructura, 1, 20), ter_est5)
                        End If
                    Case 25
                        'Plan de Obrea Social Por Ley
                        'Tengo que buscar la Obra Social por Ley
                        StrSql = "SELECT os.ternro FROM his_estructura his "
                        StrSql = StrSql & " INNER JOIN estructura est ON est.tenro = his.tenro AND est.estrnro = his.estrnro "
                        StrSql = StrSql & " INNER JOIN osocial os ON os.osdesc = est.estrdabr "
                        StrSql = StrSql & " WHERE his.tenro = 24 and his.ternro = " & NroTercero
                        StrSql = StrSql & " ORDER BY htetdesde DESC, htethasta ASC "
                        OpenRecordset StrSql, rs_Est
                        If Not rs_Est.EOF Then
                            ter_est5 = rs_Est!Ternro
                            Call VerSiCrearComplemento(QuintoTE, Nro_QuintaEstructura, Mid(QuintaEstructura, 1, 20), ter_est5)
                        End If
                    Case Else
                        Call VerSiCrearComplemento(QuintoTE, Nro_QuintaEstructura, Mid(QuintaEstructura, 1, 20), ter_est5)
                End Select
            End If
        Else
            Nro_QuintaEstructura = 0
        End If
    Else
        Nro_QuintaEstructura = 0
    End If
    '---------------------------------------------------------------------------------------
    
'Fin lectura de campos
' =====================================================================================================
  
  
  'JPB - Inicializo el pass+perfil (l_ess_Pass_Estandar y l_ess_Perfil_Estandar) por defecto del Autogestion en el caso que este habilitado el confper 12
  '--------------------------------
  Call ESS_Configuracion_Default
  '-------------------------------


  ' Inserto el Tercero
  If F_Nacimiento = "Null" Then
    F_Nacimiento = "''"
  End If
  If F_Ingreso = "Null" Then
    F_Ingreso = "''"
  End If
  
  If CalculaLegajo Then
    Call CalcularLegajo2(nro_empresa, Legajo)
  End If

    If Not ExisteLeg Then
        'Busco si esta config la maxima cant de empleados
        MaxEmpl = 0
        StrSql = "SELECT lib_generica FROM sistema"
        OpenRecordset StrSql, rs_Sql
        If Not EsNulo(rs_Sql!lib_generica) Then
            If IsNumeric(Decryptar("56238", rs_Sql!lib_generica)) Then MaxEmpl = Decryptar("56238", rs_Sql!lib_generica)
        End If
        
        If MaxEmpl > 0 Then
            'Calculo la cantidad actual de empleados
            StrSql = "SELECT COUNT(empleg) cant FROM empleado"
            OpenRecordset StrSql, rs_Sql
            If Not rs_Sql.EOF Then
                If Not EsNulo(rs_Sql!cant) Then CantEmpl = rs_Sql!cant
            End If
            
            'Controlo cantidad
            If CantEmpl >= MaxEmpl Then
                Texto = ": " & "El sistema alcanzo el maximo de " & MaxEmpl & " empleados permitidos."
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                RegError = RegError + 1
                Exit Sub
            End If
        End If
    
        StrSql = " INSERT INTO tercero(ternom,ternom2,terape,terape2,terfecnac,tersex,terestciv,estcivnro,nacionalnro,paisnro,terfecing)"
        StrSql = StrSql & " VALUES('" & nombre & "','" & nombre2 & "','" & Apellido & "','" & Apellido2 & "'," & F_Nacimiento & "," & ter_sexo & "," & nro_estcivil & "," & nro_estcivil & ","
        If nro_nacionalidad <> 0 Then
            StrSql = StrSql & nro_nacionalidad & ","
        Else
            StrSql = StrSql & "null,"
        End If
        If nro_paisnac <> 0 Then
            StrSql = StrSql & nro_paisnac & ","
        Else
            StrSql = StrSql & "null,"
        End If
        StrSql = StrSql & F_Ingreso & ")"
        objConn.Execute StrSql, , adExecuteNoRecords

        NroTercero = getLastIdentity(objConn, "tercero")
        
        Texto = ": " & "Codigo de Tercero = " & NroTercero
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
 
        
    Else
        StrSql = " UPDATE tercero SET "
        StrSql = StrSql & " ternom = " & "'" & nombre & "'"
        StrSql = StrSql & ", ternom2 = " & "'" & nombre2 & "'"
        StrSql = StrSql & ", terape = " & "'" & Apellido & "'"
        StrSql = StrSql & ", terape2 = " & "'" & Apellido2 & "'"
        StrSql = StrSql & ", terfecnac = " & F_Nacimiento
        StrSql = StrSql & ", tersex = " & ter_sexo
        StrSql = StrSql & ", terestciv =" & nro_estcivil
        StrSql = StrSql & ", estcivnro =" & "'" & nro_estcivil & "'"
        If nro_nacionalidad <> 0 Then
            StrSql = StrSql & ", nacionalnro =" & nro_nacionalidad
        End If
        StrSql = StrSql & ", terfecing =" & F_Ingreso
        If nro_paisnac <> 0 Then
            StrSql = StrSql & ", paisnro =" & nro_paisnac
        End If
        StrSql = StrSql & " WHERE ternro = " & NroTercero
        objConn.Execute StrSql, , adExecuteNoRecords
      
        Texto = ": " & " - Empleado: " & Legajo & " - Ese Empleado ya existe en la base. Datos de tercero actualizados"
        NroColumna = 1
        Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, strReg)
        
                        
    End If
    
    
    
    'Inserto Empleado
    If Not ExisteLeg Then
        StrSql = " INSERT INTO empleado(empleg,empfecalta,empfecbaja,empest,empfaltagr,empfbajaprev,"
        StrSql = StrSql & "ternro,terape,terape2,ternom,ternom2,empinterno,empemail,"
        StrSql = StrSql & "empnro,tplatenro"
          
        'JPB - Si esta habilitado el confper 12 asigno el pass+perfil por defecto al empleado
        '------------------------------------------------------------------------------------
        If (l_ess_Pass_Estandar <> "") And (l_ess_Perfil_Estandar <> "") Then
             StrSql = StrSql & ",empessactivo,emppass,perfnro"
        End If
        '------------------------------------------------------------------------------------
    
        StrSql = StrSql & ") VALUES("
        StrSql = StrSql & Legajo & "," & F_Alta & "," & F_Baja & "," & ter_estado & "," & F_Alta & "," & Fecha_FinContrato & ","
        StrSql = StrSql & NroTercero & ",'" & Apellido & "','" & Apellido2 & "','"
        StrSql = StrSql & nombre & "','" & nombre2 & "',Null,'" & Email & "',1," & nro_ModOrg
        
        'JPB - Si esta habilitado el confper 12 asigno el pass+perfil por defecto al empleado
        '------------------------------------------------------------------------------------
        If (l_ess_Pass_Estandar <> "") And (l_ess_Perfil_Estandar <> "") Then
             StrSql = StrSql & ",-1,'" & l_ess_Pass_Estandar & "'," & l_ess_Perfil_Estandar
        End If
        '------------------------------------------------------------------------------------
    
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = ": " & "Empleado insertado - " & Legajo & " - " & Apellido & " - " & nombre
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
    Else
        StrSql = " UPDATE empleado SET "
        StrSql = StrSql & " empleg = " & Legajo
        StrSql = StrSql & " ,empfecalta = " & F_Alta
        StrSql = StrSql & " ,empfecbaja = " & F_Baja
        StrSql = StrSql & " ,empfbajaprev = " & Fecha_FinContrato
        StrSql = StrSql & " ,empest = " & ter_estado
        StrSql = StrSql & " ,empfaltagr = " & F_Alta
        StrSql = StrSql & " ,terape = " & "'" & Apellido & "'"
        StrSql = StrSql & " ,terape2 = " & "'" & Apellido2 & "'"
        StrSql = StrSql & " ,ternom = " & "'" & nombre & "'"
        StrSql = StrSql & " ,ternom2 = " & "'" & nombre2 & "'"
        StrSql = StrSql & " ,empemail = " & "'" & Email & "'"
        StrSql = StrSql & " ,empnro = 1 "
        StrSql = StrSql & " ,tplatenro =" & nro_ModOrg
        
        'JPB - Si esta habilitado el confper 12 asigno el pass+perfil por defecto al empleado
        '------------------------------------------------------------------------------------
        If (l_ess_Pass_Estandar <> "") And (l_ess_Perfil_Estandar <> "") Then
            StrSql = StrSql & ", empessactivo = -1"
            StrSql = StrSql & ", emppass = '" & l_ess_Pass_Estandar & "'"
            StrSql = StrSql & ", perfnro =" & l_ess_Perfil_Estandar
        End If
        '------------------------------------------------------------------------------------
        StrSql = StrSql & " WHERE ternro = " & NroTercero
        objConn.Execute StrSql, , adExecuteNoRecords
    
        Texto = ": " & "Empleado Actualizado - " & Legajo & " - " & Apellido & " - " & nombre
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
    End If
    
    ' Inserto el Registro correspondiente en ter_tip
    If Not ExisteLeg Then
        StrSql = " INSERT INTO ter_tip(ternro,tipnro) VALUES(" & NroTercero & ",1)"
        objConn.Execute StrSql, , adExecuteNoRecords
    End If

' Inserto los Documentos
    If Not ExisteLeg Then
        If Nro_TDocumento <> 0 Then
            StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
            StrSql = StrSql & " VALUES(" & NroTercero & "," & Nro_TDocumento & ",'" & Ndocu & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            Texto = ": " & "Inserte el Documento - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        End If
    Else
        If Nro_TDocumento <> 0 Then
            StrSql = "SELECT * FROM ter_doc WHERE ternro = " & NroTercero
            StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If rs.EOF Then
                StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
                StrSql = StrSql & " VALUES(" & NroTercero & "," & Nro_TDocumento & ",'" & Ndocu & "')"
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = ": " & "Inserte el Documento - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            Else
                StrSql = " UPDATE ter_doc SET "
                StrSql = StrSql & " nrodoc = '" & Ndocu & "'"
                StrSql = StrSql & " WHERE ternro = " & NroTercero
                StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = Texto = ": " & "Documento actualizado - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
    End If
  
    If Not ExisteLeg Then
        If Nro_TDocumentoCuil <> 0 Then
        'If Cuil <> "" Then
            StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
            StrSql = StrSql & " VALUES(" & NroTercero & "," & Nro_TDocumentoCuil & ",'" & Cuil & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            Texto = ": " & "Inserte el Segundo Documento - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        End If
    Else
        'If Cuil <> "" Then
        If Nro_TDocumentoCuil <> 0 Then
            StrSql = "SELECT * FROM ter_doc WHERE ternro = " & NroTercero
            StrSql = StrSql & " AND tidnro = " & Nro_TDocumentoCuil
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If rs.EOF Then
                StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
                StrSql = StrSql & " VALUES(" & NroTercero & "," & Nro_TDocumentoCuil & ",'" & Cuil & "')"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Inserte el Segundo Documento - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            Else
                StrSql = " UPDATE ter_doc SET "
                StrSql = StrSql & " nrodoc = '" & Cuil & "'"
                StrSql = StrSql & " WHERE ternro = " & NroTercero
                StrSql = StrSql & " AND tidnro = " & Nro_TDocumentoCuil
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = Texto = ": " & "Segundo Documento actualizado - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
    End If

' Inserto el Domicilio
  If rs.State = adStateOpen Then
    rs.Close
  End If


If Not ExisteLeg Then
    ' Inserto las Fases
    StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
    StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
    If nro_causabaja <> 0 Then
        StrSql = StrSql & nro_causabaja
        StrSql = StrSql & ",0,-1,-1,-1,-1,-1)"  ' estado fase=0  - no mira ter_estado
    Else
        StrSql = StrSql & "null"
        StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
    End If
    objConn.Execute StrSql, , adExecuteNoRecords
    
    'If nro_causabaja <> 0 Then
    '    Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
    'End If
    
Else
    'FGZ - 23/07/2010
    'SI existe el legajo reviso si estaba activo o inactivo.
    '   Si estaba inactivo y ahora el estado es activo dedeuzco que se trata de un reingreso
    '   ==> intento insertar la fase.
    '   Problemas potenciales
    '
    '   Existe Fase cerrada *****
    '   Fase anterior  ------[------------------]--------
    'Casos
    '   Fecha ingreso  ---FI----------------------------- ==> no se puede insertar (informar error)
    '   Fecha ingreso  ---------   FI-------------------- ==> tenfo 2 posibilidades
    '                                                           Cierro fase un dia antes de FI y creo nueva fase
    '                                                           no se puede insertar (informar error)
    '   Fecha ingreso  -----------------------------FI--- ==> inserto la nueva fase
    
    '   Existe Fase abierta *****
    '   Fase anterior  ------[---------------------------
    'Casos
    '   Fecha ingreso  ---FI----------------------------- ==> no se puede insertar (informar error)
    '   Fecha ingreso  -------------FI------------------- ==> Cierro fase un dia antes de FI y creo nueva fase
   
    'Si no existe fase ==> simplemente crea la fase
    
    StrSql = "SELECT * FROM fases WHERE empleado = " & NroTercero
    StrSql = StrSql & " ORDER BY altfec DESC"
    OpenRecordset StrSql, rs
    
    If rs.EOF Then
        'No Existe ==> Inserto
        StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
        StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
        If nro_causabaja <> 0 Then
          StrSql = StrSql & nro_causabaja
          StrSql = StrSql & ",0,-1,-1,-1,-1,-1)"  ' estado fase=0  - no mira ter_estado
        Else
          StrSql = StrSql & "null"
          StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
        End If
        objConn.Execute StrSql, , adExecuteNoRecords
        
        'If nro_causabaja <> 0 Then
        '    Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
        'End If
        
    Else
        'Existe
        Texto = ": " & "Existe Fase"
        If CBool(rs!Estado) Then
            'Activa
            Texto = Texto & " activa. " & rs!altfec & " - " & IIf(EsNulo(rs!bajfec), "#", rs!bajfec)
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            
            
            'Si ahora está inactivo ==> actualiza la fase
            If Not CBool(ter_estado) Then
                'la cierro y abro otro
                StrSql = " UPDATE fases SET "
                StrSql = StrSql & " bajfec =" & F_Baja
                StrSql = StrSql & ",estado = 0 "
                If nro_causabaja <> 0 Then
                StrSql = StrSql & ", caunro =" & nro_causabaja
                End If
                StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
                objConn.Execute StrSql, , adExecuteNoRecords
            
                Texto = ": " & "Fase Actualizada."
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                
                'If nro_causabaja <> 0 Then
                '    Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
                'End If
                
            Else
                Texto = ": " & "Si desea actualizar debe corregir la situacion manualmente."
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
            
        Else
            'Inactiva
            Texto = Texto & " inactiva "
            If EsNulo(rs!bajfec) Then
                Texto = Texto & " abierta " & rs!altfec & " - #"
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                
                If CDate(rs!altfec) < CDate(FAlta) Then
                    Texto = ": " & "Cierro la fase anterior (un dia antes) y creo la nueva fase"
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    
                    'la cierro y abro otro - (se cierra a FAlta-1)
                    StrSql = " UPDATE fases SET "
                    StrSql = StrSql & "bajfec =" & ConvFecha(DateAdd("d", -1, FAlta))
                    StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
                    objConn.Execute StrSql, , adExecuteNoRecords
                        
                    'abro una nueva
                    StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
                    StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
                    If nro_causabaja <> 0 Then
                      StrSql = StrSql & nro_causabaja
                      StrSql = StrSql & ",0,-1,-1,-1,-1,-1)"
                    Else
                      StrSql = StrSql & "null"
                      StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    Texto = ": " & "Fase Actualizada."
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    
                    'If nro_causabaja <> 0 Then
                    '    Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
                    'End If
                    
                Else
                    If CDate(rs!altfec) > CDate(FAlta) Then
                        Texto = ": " & "No se puede actualizar las fases. Debe corregir la situacion manualmente."
                        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    Else
                        'es la misma fase, no hago nada.
                        ' actualiza
                        
                        StrSql = " UPDATE fases SET "
                        StrSql = StrSql & " bajfec =" & F_Baja
                        If nro_causabaja <> 0 Then
                        StrSql = StrSql & ", caunro =" & nro_causabaja
                        End If
                        StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
                        objConn.Execute StrSql, , adExecuteNoRecords
                    
                        Texto = ": " & "Fase Actualizada - "
                        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                            
                        'If nro_causabaja <> 0 Then
                        '    Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
                        'End If
                            
                    End If
                End If
            Else
                Texto = Texto & " cerrada " & rs!altfec & " - " & rs!bajfec
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            
                If CDate(rs!altfec) < CDate(FAlta) And CDate(rs!bajfec) < CDate(FAlta) Then
                    'Fase existente ------[------]-----------
                    'Nueva fase     ---------------[-----]---
                    
                    'abro una nueva
                    StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
                    StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
                    If nro_causabaja <> 0 Then
                      StrSql = StrSql & nro_causabaja
                      StrSql = StrSql & ",0,-1,-1,-1,-1,-1)"
                    Else
                      StrSql = StrSql & "null"
                      StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    Texto = ": " & "Fase creada."
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    
                    'If nro_causabaja <> 0 Then
                    '    Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
                    'End If
                    
                Else
                    'FGZ - 11/11/2010 --------------------------
                    If CDate(rs!altfec) = CDate(FAlta) And CDate(rs!bajfec) = CDate(FBaja) Then
                        If nro_causabaja <> 0 Then
                            StrSql = " UPDATE fases SET "
                            StrSql = StrSql & " caunro =" & nro_causabaja
                            StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
                            objConn.Execute StrSql, , adExecuteNoRecords
                    
                            Texto = ": " & "Fase Actualizada - "
                            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                            
                            'Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
                            
                        Else
                        
                        End If
                    Else
                        Texto = ": " & "No se puede crear la fases nueva. Debe corregir la situacion manualmente."
                        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    End If
                End If
            End If
        End If
    End If
'        StrSql = " UPDATE fases SET "
'        StrSql = StrSql & " altfec =" & F_Alta
'        StrSql = StrSql & ",bajfec =" & F_Baja
'        StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
'        objConn.Execute StrSql, , adExecuteNoRecords
'
'        Texto = ": " & "Fase Actualizada - "
'        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
'    End If
End If
    
    
    
'  18/02/2010 - No hacer nada con las fases cuando existe el empleado
'  Else
'    StrSql = "SELECT * FROM fases WHERE estado = -1 AND sueldo = -1 AND vacaciones = -1 AND indemnizacion = -1 AND real = -1 AND empleado = " & NroTercero
'    OpenRecordset StrSql, rs
'    If rs.EOF Then
'        StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
'        StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
'        If nro_causabaja <> 0 Then
'          StrSql = StrSql & nro_causabaja
'        Else
'          StrSql = StrSql & "null"
'        End If
'        StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
'        objConn.Execute StrSql, , adExecuteNoRecords
'    Else
'        StrSql = " UPDATE fases SET "
'        StrSql = StrSql & " altfec =" & F_Alta
'        StrSql = StrSql & ",bajfec =" & F_Baja
'        StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
'        objConn.Execute StrSql, , adExecuteNoRecords
'
'        Texto = ": " & "Fase Actualizada - "
'        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
'    End If
  
  
  'Inserto las Estructuras
  
  'FGZ - 02/03/2011 - se sacó la fecha de baja para el manejo de estructuras
  F_Baja = "Null"
  Call AsignarEstructura_NEW(18, nro_contrato, NroTercero, F_Alta, F_Baja)
  
  Call AsignarEstructura_NEW(PrimerTE, Nro_PrimeraEstructura, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(SegundoTE, Nro_SegundaEstructura, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(TercerTE, Nro_TerceraEstructura, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(CuartoTE, Nro_CuartaEstructura, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(QuintoTE, Nro_QuintaEstructura, NroTercero, F_Alta, F_Baja)

Texto = ": " & "Linea procesada correctamente "
Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
'LineaOK.Writeline Mid(strReg, 1, Len(strReg))
OK = True
         
FinLinea:
If rs.State = adStateOpen Then
    rs.Close
End If
Exit Sub

SaltoLinea:
    Texto = ": " & " - Error:" & Err.Description & " -- Ultima consulta: " & StrSql
    NroColumna = 1
    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    MyRollbackTrans
    OK = False
    GoTo FinLinea
End Sub



Public Sub LineaModelo_672(ByVal strReg As String, ByRef OK As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de Empleados Reducida - Similar al Modelo 664 pero sirve para multiples paises en una misma BD
' Autor      : FGZ
' Fecha      : 06/02/2013
' Ultima Mod.:
'
'El CodigoPais (corresponde el codigo que tiene el pais de la tabla de pais (Ej 3 para Argentina). Si el campo no se informa se asume 3 (Argentina) por default.
' el campo Codigo de Pais es para saber de que pais son los docs ingresados

'  *********************   FORMATO  *********************
'       Legajo   Apellido1@Apellido2   Nombre1@Nombre2   F.Nacim    País de Nacimiento
'       Nacionalidad   Fec.Ingreso al País  Est.Civil  Sexo  Fec. de Alta CodPais Tipo Documento
'       Nro. Documento  Tipo Documento  Nro. Documento  E-mail  Contrato    Fecha de Vto. Contrato
'       Estado del Empleado Causa de Baja   Fecha de Baja   Modelo Organizacional
'       Tipo de Estructura  Estructura  Tipo de Estructura  Estructura  Tipo de Estructura  Estructura
'       Tipo de Estructura  Estructura  Tipo de Estructura  Estructura
'  *******************************************************
' ---------------------------------------------------------------------------------------------

Dim pos1            As Long
Dim pos2            As Long

Dim Legajo          As String   'LEGAJO                   -- empleado.empleg
Dim Apellido        As String   'APELLIDO                 -- empleado.terape y tercero.terape
Dim Apellido2       As String   'APELLIDO 2               -- empleado.terape2 y tercero.terape2
Dim nombre          As String   'NOMBRE                   -- empleado.ternom y tercero.ternom
Dim nombre2         As String   'NOMBRE 2                 -- empleado.ternom2 y tercero.ternom2
Dim Fnac            As String   'FNAC                     -- tercero.terfecna
Dim Nacionalidad    As String   'Nacionalidad             -- tercero.nacionalnro
Dim PaisNac         As String   'Pais de Nacimiento       -- tercero.paisnro
Dim Fing            As String   'Fec.Ingreso al Pais      -- terecro.terfecing
Dim EstCivil        As String   'Est.Civil                -- tercero.estcivnro
Dim Sexo            As String   'Sexo                     -- tercero.tersex
Dim FAlta           As String   'Fec. de Alta             -- empleado.empfaltagr y fases.altfec
Dim CodigoPais      As String   'Codigo de Pais           -- pais.paisnro
Dim Tdocu           As String   'Tipo Documento           -- ter_dpc.tidnro (DU)
Dim Ndocu           As String   'Nro. Documento           -- ter_doc.nrodoc
Dim Cuil            As String   'CUIL                     -- ter_doc.nrodoc (10)

Dim Email           As String   'E-mail                   -- empleado.empemail

Dim Contrato        As String   'Contrato                 -- his_estructura.estrnro
Dim Estado          As String   'Estado                   -- empleado.empest y fases.estado
Dim CausaBaja       As String   'Causa de Baja            -- fases.caunro
Dim FBaja           As String   'Fecha de Baja            -- fases.bajfec
Dim ModOrg          As String   'Empresa                  -- his_estructura.estrnro

Dim FFinContrato    As String
Dim Fecha_FinContrato As String
Dim Fecha_FinCont As String

Dim Ternro As Long

Dim ter_est1 As Long
Dim ter_est2 As Long
Dim ter_est3 As Long
Dim ter_est4 As Long
Dim ter_est5 As Long

Dim ape()   As String
Dim Nom()   As String

Dim NroTercero          As Long

Dim Nro_Legajo          As Long
Dim Nro_TDocumento      As Long
Dim Nro_TDocumentoCuil  As Long

Dim nro_paisnac         As Long

Dim nro_contrato        As Long
Dim nro_causabaja       As Long
Dim nro_empresa         As Long

Dim estr1desc As Boolean
Dim estr2desc As Boolean
Dim estr3desc As Boolean
Dim estr4desc As Boolean
Dim estr5desc As Boolean

Dim Estudio         As String   'Estudia                  -- empleado.empestudia
Dim NivEst          As String   'Nivel de Estudio         -- empleado.nivnro
Dim ter_estudio         As Long
Dim nro_nivest          As Long

Dim prueba        As String   ' contrato con periodo de prueba
Dim perprueba     As Long


Dim Nro_PrimeraEstructura As Long
Dim Nro_SegundaEstructura As Long
Dim Nro_TerceraEstructura As Long
Dim Nro_CuartaEstructura As Long
Dim Nro_QuintaEstructura As Long

Dim nro_estcivil        As Long
Dim nro_nacionalidad    As Long

Dim F_Nacimiento        As String
Dim F_Fallecimiento     As String
Dim F_Alta              As String
Dim F_Baja              As String
Dim F_Ingreso           As String
Dim F_Prueba            As String
Dim F_fin_Prueba        As String

Dim Inserto_estr        As Boolean

Dim ter_sexo            As Long
Dim ter_estado          As Long

Dim PrimerTE  As Long
Dim PrimeraEstructura As String
Dim SegundoTE  As Long
Dim SegundaEstructura As String
Dim TercerTE  As Long
Dim TerceraEstructura As String
Dim CuartoTE  As Long
Dim CuartaEstructura As String
Dim QuintoTE  As Long
Dim QuintaEstructura As String

Dim rs As New ADODB.Recordset
Dim rs_Sql As New ADODB.Recordset
Dim rs_Aux As New ADODB.Recordset
Dim rs_Empleado As New ADODB.Recordset
Dim rs_Tel As New ADODB.Recordset
Dim rs_Est As New ADODB.Recordset
Dim rs_repl As New ADODB.Recordset

Dim CotDesc             As Boolean   'Contrato                 -- his_estructura

Dim rs_tdoc As New ADODB.Recordset
Dim rs_emp  As New ADODB.Recordset
Dim rs_tpl  As New ADODB.Recordset
Dim rs_leg  As New ADODB.Recordset

Dim Nro_Institucion As Long

Dim Sigue As Boolean
Dim ExisteLeg As Boolean
Dim CalculaLegajo As Boolean
Dim Valida_CUIL As Boolean

Dim F_NacAux As Date
Dim F_AltaAux As Date
Dim Edad As Integer
Dim MaxEmpl As Long
Dim CantEmpl As Long
Dim Empresanombre As String
    On Error GoTo SaltoLinea

    

    ' True indica que se hace por Descripcion. False por Codigo Externo
    
    CotDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    
    estr1desc = True
    estr2desc = True
    estr3desc = True
    estr4desc = True
    estr5desc = True
    
    Sigue = True 'Indica que si en el archivo viene mas de una vez un empleado, le crea las fases
    ExisteLeg = False
    'RegLeidos = RegLeidos + 1
    LineaCarga = LineaCarga + 1
    
    Flog.writeline
    FlogE.writeline
    FlogP.writeline
    
    'Empresa
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Empresa"
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Empresanombre = Aux
    'Legajo = Mid(strReg, pos1, pos2 - pos1 + 1)
    If Empresanombre = "N/A" Or EsNulo(Empresanombre) Then
        nro_empresa = 0
    Else
        StrSql = "SELECT estrnro FROM empresa WHERE empnom = '" & Empresanombre & "'"
        OpenRecordset StrSql, rs_emp
        If (Not rs_emp.EOF) Then
               nro_empresa = rs_emp!Estrnro
        Else
                nro_empresa = 0
        End If
    End If
    
    
    
    'Legajo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Legajo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Legajo = Aux
    'Legajo = Mid(strReg, pos1, pos2 - pos1 + 1)
    If Legajo = "N/A" Or EsNulo(Legajo) Then
        CalculaLegajo = True
    Else
        StrSql = "SELECT * FROM empleado WHERE empleado.empleg = " & Legajo
        OpenRecordset StrSql, rs_emp
        If (Not rs_emp.EOF) Then
            If (Not Sigue) Then
                Texto = ": " & " - El Empleado ya Existe."
                NroColumna = 1
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                'Ok = False
                'RegError = RegError + 1
                'Exit Sub
            Else
                NroTercero = rs_emp!Ternro
                ExisteLeg = True
            End If
        End If
    End If

    'EN NOMBRE = NOMBRE1@NOMBRE2
    'EN APELLIDO = APELLIDO1@APELLIDO2
    
    'Apellido
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Apellido"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    ape = Split(Aux, "@")
    
    If UBound(ape) = 0 Then
        'Si no se ingreso el apellido separado con @, todo el apellido ingresado se guarda en terape
        Apellido = Aux
        Apellido2 = ""
    Else
        If (ape(0) = "N/A" Or EsNulo(ape(0))) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Apellido = Left(ape(0), 25)
        If Not (ape(1) = "N/A" Or EsNulo(ape(1)) Or ape(1) = "") Then
            Apellido2 = Left(ape(1), 25)
        Else
            Apellido2 = ""
        End If
    End If
    
    'Nombre
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nombre"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Nom = Split(Aux, "@")
    
    If UBound(Nom) = 0 Then
        'Si no se ingreso el nombre separado con @, todo el nombre ingresado se guarda en ternom
        nombre = Aux
        nombre2 = ""
    Else
        If (Nom(0) = "N/A" Or EsNulo(Nom(0))) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        nombre = Left(Nom(0), 25)
        If (Apellido = "" Or Apellido = "N/A") And (nombre = "" Or nombre = "N/A") Then
            Texto = ": " & " - Debe Ingresar un Nombre y Apellido."
            NroColumna = 2
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        If Not (Nom(1) = "N/A" Or EsNulo(Nom(1)) Or Nom(1) = "") Then
            nombre2 = Left(Nom(1), 25)
        Else
            nombre2 = ""
        End If
    End If
    
    'Fecha de Nacimiento
    NroColumna = NroColumna + 1
    'Obligatorio = False
    Obligatorio = True
    Campoetiqueta = "Fecha de Nacimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If Aux <> "N/A" Then
    Aux = EliminarCHInvalidosII(Aux, 2, "")
    End If
    Fnac = Aux
    If Fnac = "N/A" Then
       F_Nacimiento = "Null"
    Else
       F_Nacimiento = ConvFecha(Fnac)
       F_NacAux = CDate(Fnac)
    End If
    
    
    'Pais de Nacimiento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Pais de Nacimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    PaisNac = Aux
    If PaisNac <> "N/A" Then
        StrSql = " SELECT paisnro FROM pais WHERE UPPER(paisdesc) = '" & UCase(PaisNac) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_paisnac = rs_Sql!Paisnro
        Else
            StrSql = " INSERT INTO pais(paisdesc,paisdef) VALUES ('" & UCase(PaisNac) & "',0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_paisnac = getLastIdentity(objConn, "pais")
        End If
    Else
        nro_paisnac = 0
    End If
    
    
    'Nacionalidad
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nacionalidad"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Nacionalidad = Aux
    If Nacionalidad <> "N/A" Then
        StrSql = " SELECT nacionalnro FROM nacionalidad WHERE UPPER(nacionaldes) = '" & UCase(Nacionalidad) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_nacionalidad = rs_Sql!nacionalnro
        Else
            StrSql = " INSERT INTO nacionalidad(nacionaldes) VALUES ('" & UCase(Nacionalidad) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_nacionalidad = getLastIdentity(objConn, "nacionalidad")
        End If
    Else
        nro_nacionalidad = 0
    End If
    If nro_nacionalidad = 0 Then
        Texto = ": " & " - La Nacionalidad no Existe."
        NroColumna = 6
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    
    'Fecha de Ingreso al Pais
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de Ingreso al Pais"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If Aux <> "N/A" Then
    Aux = EliminarCHInvalidosII(Aux, 2, "")
    End If
    Fing = Aux
    If (Fing = "N/A") Or EsNulo(Fing) Then
        F_Ingreso = "Null"
    Else
        F_Ingreso = ConvFecha(Fing)
    End If
    
    'Estado Civil
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estado Civil"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    EstCivil = Left(Aux, 30)
    If EstCivil <> "N/A" And Not EsNulo(EstCivil) Then
        StrSql = " SELECT estcivnro FROM estcivil WHERE UPPER(estcivdesabr) = '" & UCase(EstCivil) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_estcivil = rs_Sql!estcivnro
        Else
            StrSql = " INSERT INTO estcivil(estcivdesabr) VALUES ('" & UCase(EstCivil) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_estcivil = getLastIdentity(objConn, "estcivil")
        End If
    Else
        nro_estcivil = 0
    End If
    If nro_estcivil = 0 Then
        Texto = ": " & " - El Estado Civil no Existe."
        NroColumna = 8
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Sexo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sexo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Sexo = UCase(Aux)
    If (Sexo = "M") Or (Sexo = "-1") Or (Sexo = "MASCULINO") Then
        ter_sexo = -1
    Else
        ter_sexo = 0
    End If
                                                            
    'Fecha de alta
    NroColumna = NroColumna + 1
    'Obligatorio = False
    Obligatorio = True
    Campoetiqueta = "Fecha de alta"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If Aux <> "N/A" Then
        Aux = EliminarCHInvalidosII(Aux, 2, "")
    End If
    FAlta = Aux
    If FAlta = "N/A" Or EsNulo(FAlta) Then
        F_Alta = "Null"
        Texto = ": " & " - La Fecha de Alta es Obligatoria."
        NroColumna = 10
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    Else
        F_Alta = ConvFecha(FAlta)
         Fecha_FinCont = ConvFecha(DateAdd("d", 89, FAlta))
        F_AltaAux = CDate(FAlta)
        
        
        'Validar que el empleado sea mayor a 14 años
        Edad = 0
        If (Month(F_AltaAux) > Month(F_NacAux)) Then
           Edad = DateDiff("yyyy", F_NacAux, F_AltaAux)
        Else
           If (Month(F_AltaAux) = Month(F_NacAux)) And (Day(F_AltaAux) >= Day(F_NacAux)) Then
             Edad = DateDiff("yyyy", F_NacAux, F_AltaAux)
           Else
             Edad = DateDiff("yyyy", F_NacAux, F_AltaAux) - 1
           End If
        End If
        
        If Edad < 14 Then
            Texto = ": " & " - El empleado es menor a 14 años."
            NroColumna = 10
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            'Ok = False
            RegError = RegError + 1
            Exit Sub
        End If
        
    End If
    
    'Codigo de Pais
    CodigoPais = 3  'Argentina
    NroColumna = NroColumna + 1
    Campoetiqueta = "Codigo de Pais"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    If Aux <> "N/A" And Aux <> "" And Not EsNulo(Aux) Then
        CodigoPais = Aux
    End If
    
    'Tipo de Doc
    NroColumna = NroColumna + 1
    Campoetiqueta = "Tipo de Doc"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Tdocu = Left(Aux, 8)
    If Tdocu <> "N/A" And Tdocu <> "" And Not EsNulo(Tdocu) Then
        StrSql = " SELECT tipodocu.tidnro FROM tipodocu "
        StrSql = StrSql & " INNER JOIN tipodocu_pais tdp ON tipodocu.tidnro = tdp.tidnro AND tdp.paisnro = " & CodigoPais
        StrSql = StrSql & " WHERE UPPER(tidsigla) = '" & UCase(Tdocu) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            Nro_TDocumento = rs_Sql!tidnro
        Else
            'El insertar docs no se puede hacer automaticamente porque necesita que se mapee el tipo de codigo
            '   hay que hacer algo cuando se inserta un tipo de doc porque hay que asociar tipodocu_pais con un codigo
            Nro_TDocumento = 0
        
            '--------------------------------------------------------
            ''busco la primera institucion, si no existe la creo
            'StrSql = " SELECT * FROM institucion "
            'If rs.State = adStateOpen Then rs.Close
            'OpenRecordset StrSql, rs
            'If Not rs.EOF Then
            '    Nro_Institucion = rs!instnro
            'Else
            '    'creo una
            '    StrSql = " INSERT INTO institucion (instdes,instabre) VALUES ('NACIONAL','NAC')"
            '    objConn.Execute StrSql, , adExecuteNoRecords
            '    Nro_Institucion = getLastIdentity(objConn, "institucion")
            'End If
            ''creo el tipo de documento
            'StrSql = " INSERT INTO tipodocu(tidnom,tidsigla,tidsist,instnro,tidunico) VALUES ('" & UCase(Tdocu) & "','" & UCase(Tdocu) & "',0," & Nro_Institucion & ",0)"
            'objConn.Execute StrSql, , adExecuteNoRecords
            'Nro_TDocumento = getLastIdentity(objConn, "tipodocu")
        End If
    Else
        Nro_TDocumento = 0
    End If
    If Nro_TDocumento = 0 Then
        Texto = ": " & " - El Tipo de Documento no Existe."
        NroColumna = 13
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    
    'Nro de Documento
    NroColumna = NroColumna + 1
    Campoetiqueta = "Nro de Documento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    'FGZ - 27/11/2013 --------------------------
    'Se cambió la validacion al nuevo limite
    'Ndocu = Left(Aux, 30)
    Ndocu = Left(Aux, 100)
    'FGZ - 27/11/2013 --------------------------
    If Ndocu = "N/A" Then
        Ndocu = ""
    End If
    
    
    '---------------------------------------------------
    ' Verifica si el nro documento pertenece a otro empleado
    '---------------------------------------------------
    'StrSql = "SELECT * FROM empleado "
    'StrSql = StrSql & " INNER JOIN ter_doc ON ter_doc.ternro = empleado.ternro "
    'StrSql = StrSql & " WHERE ter_doc.tidnro = " & Nro_TDocumento & " AND ter_doc.nrodoc = '" & Ndocu & "'"
    'OpenRecordset StrSql, rs_tdoc
    'If (Not rs_tdoc.EOF) Then
        'JPB: Se quito que existe el legajo. Aqui lo que ya existe seria el documento
        'ExisteLeg = True
    '    If (Not Sigue) Then
    '        Texto = ": " & " - Ese Tipo y Numero de Documento estan Asignados a otro Empleado."
    '        NroColumna = 14
    '        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            'Ok = False
    '        RegError = RegError + 1
    '        Exit Sub
    '    Else
            'FGZ - 11/11/2010 - Si es el mismo legajo no debe poner ningun cartel
    '        If NroTercero <> rs_tdoc!Ternro Then
    '            NroTercero = rs_tdoc!Ternro
                'ExisteLeg = True
    '            Texto = ": " & " - Empleado: " & Legajo & " - Ese Tipo y Numero de Documento estan Asignados a otro Empleado."
    '            NroColumna = 14
    '            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                'JPB: Faltaba que interrumpa el proceso porque en este caso ya existe el documento y esta asociado a otro tercero
    '            RegError = RegError + 1
    '            Exit Sub
    '        End If
    '    End If
    ' Else
            'JPB -Si no existe como empleado, verifico si existe como otro tercero
     '         StrSql = "SELECT * FROM ter_doc "
     '        StrSql = StrSql & " WHERE ter_doc.nrodoc = '" & Ndocu & "'"
     '        OpenRecordset StrSql, rs_tdoc
            
     '        If (Not rs_tdoc.EOF) Then
     '            NroTercero = rs_tdoc!Ternro
     '            ExisteLeg = True
     '            Texto = ": " & " - Empleado: " & Legajo & " - El Numero de Documento " & Ndocu & " ya existe en la base para el tercero: " & NroTercero
     '            NroColumna = 14
     '            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
     '            RegError = RegError + 1
     '            Exit Sub
     '        End If
             '---------------------------
    
    
    'End If

    'Tipo de Doc - CUIL
    NroColumna = NroColumna + 1
    Campoetiqueta = "Segundo Tipo de Doc"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Tdocu = Left(Aux, 8)
    If Tdocu <> "N/A" And Tdocu <> "" And Not EsNulo(Tdocu) Then
        StrSql = " SELECT tipodocu.tidnro FROM tipodocu "
        StrSql = StrSql & " INNER JOIN tipodocu_pais tdp ON tipodocu.tidnro = tdp.tidnro AND tdp.paisnro = " & CodigoPais
        StrSql = StrSql & " WHERE UPPER(tidsigla) = '" & UCase(Tdocu) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            Nro_TDocumentoCuil = rs_Sql!tidnro
        Else
            'El insertar docs no se puede hacer automaticamente porque necesita que se mapee el tipo de codigo
            '   hay que hacer algo cuando se inserta un tipo de doc porque hay que asociar tipodocu_pais con un codigo
            Nro_TDocumentoCuil = 0
        
            '-----------------------------------------------------
            ''busco la primera institucion, si no existe la creo
            'StrSql = " SELECT * FROM institucion "
            'If rs.State = adStateOpen Then rs.Close
            'OpenRecordset StrSql, rs
            'If Not rs.EOF Then
            '    Nro_Institucion = rs!instnro
            'Else
            '    'creo una
            '    StrSql = " INSERT INTO institucion (instdes,instabre) VALUES ('NACIONAL','NAC')"
            '    objConn.Execute StrSql, , adExecuteNoRecords
            '    Nro_Institucion = getLastIdentity(objConn, "institucion")
            'End If
            ''creo el tipo de documento
            'StrSql = " INSERT INTO tipodocu(tidnom,tidsigla,tidsist,instnro,tidunico) VALUES ('" & UCase(Tdocu) & "','" & UCase(Tdocu) & "',0," & Nro_Institucion & ",0)"
            'objConn.Execute StrSql, , adExecuteNoRecords
            'Nro_TDocumentoCuil = getLastIdentity(objConn, "tipodocu")
        End If
    Else
        Nro_TDocumentoCuil = 0
    End If
    
    
    'CUIL
    NroColumna = NroColumna + 1
    Campoetiqueta = "Segundo Nro de Documento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    
    If Aux = "N/A" Or EsNulo(Aux) Then
        Cuil = ""
    Else
        'Cuil = Replace(Left(aux, 30), "-", "")
        'FGZ - 27/11/2013 --------------------------
        'Se cambió la validacion al nuevo limite
        'Cuil = Left(Aux, 30)
        Cuil = Left(Aux, 100)
        'FGZ - 27/11/2013 --------------------------
    End If
                
           
    'Email
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Email"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    If Aux <> "N/A" Then
        Aux = EliminarCHInvalidosII(Aux, 4, "")
        Email = Left(Aux, 100)
    Else
        Email = ""
    End If
               
    
     'Estudia?
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estudia?"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Estudio = UCase(Aux)
    If Estudio <> "N/A" And Estudio <> "NO" Then
        If Estudio = "SI" Then
            ter_estudio = -1
        Else
            ter_estudio = 0
        End If
    Else
        ter_estudio = 0
    End If
    
    
    'Nivel de estudio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nivel de estudio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    NivEst = Left(Aux, 40)
    If NivEst <> "N/A" Then
        StrSql = " SELECT nivnro FROM nivest WHERE UPPER(nivdesc) = '" & UCase(NivEst) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_nivest = rs_Sql!nivnro
        Else
            StrSql = " INSERT INTO nivest(nivdesc,nivsist,nivobligatorio,nivestfli) VALUES ('" & UCase(NivEst) & "',-1,0,-1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_nivest = getLastIdentity(objConn, "nivest")
        End If
    Else
        nro_nivest = 0
    End If
               
               
    'Contrato
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Contrato"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Contrato = Aux
    
    ' Validacion y Creacion del Contrato
    If Contrato <> "N/A" Then
        If CotDesc Then
            Call ValidaEstructura(18, Contrato, nro_contrato, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(18, Contrato, nro_contrato, Inserto_estr)
        End If
        
        If Inserto_estr Then
            Call CreaComplemento(18, 0, nro_contrato, Contrato)
            Inserto_estr = False
        End If
    Else
        nro_contrato = 0
    End If
    
    'Fecha de fin de contrato
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de fin de contrato"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    If Aux <> "N/A" Then
        Aux = EliminarCHInvalidosII(Aux, 2, "")
    End If
    FFinContrato = Aux
    If FFinContrato = "N/A" Or EsNulo(FFinContrato) Then
        Fecha_FinContrato = "Null"
    Else
        Fecha_FinContrato = ConvFecha(FFinContrato)
       
        
        
    End If
        
    'Estado del empleado
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estado del empleado"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Estado = Aux
    If UCase(Estado) = "ACTIVO" Then
        ter_estado = -1
    Else
        ter_estado = 0
    End If
    
    'Causa de baja
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Causa de baja"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    CausaBaja = Aux
    If Not EsNulo(CausaBaja) And CausaBaja <> "N/A" Then
        StrSql = " SELECT caunro FROM causa WHERE caudes = '" & CausaBaja & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_causabaja = rs_Sql!caunro
        Else
            StrSql = " INSERT INTO causa(caudes,causist,caudesvin,empnro) VALUES ('" & CausaBaja & "',0,-1,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            nro_causabaja = getLastIdentity(objConn, "causa")
        End If
    Else
        nro_causabaja = 0
    End If
    
    'Fecha de baja
    NroColumna = NroColumna + 1
        ' Si hay una causa de baja, se tiene que cargar ssi la Fecha de Baja (tablero adp)
    If nro_causabaja <> 0 Then
        Obligatorio = True
    Else
        Obligatorio = False
    End If
    Campoetiqueta = "Fecha de baja"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If Aux <> "N/A" Then
    Aux = EliminarCHInvalidosII(Aux, 2, "")
    End If
    FBaja = Aux
    If EsNulo(FBaja) Or FBaja = "N/A" Then
        F_Baja = "Null"
    Else
        F_Baja = ConvFecha(FBaja)
    End If
   
    'Modelo de Organizacion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Modelo de Organizacion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        ModOrg = Aux
        'desde aca
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        ModOrg = Aux
        If ModOrg = "N/A" Or EsNulo(ModOrg) Then
            StrSql = "SELECT * FROM adptemplate WHERE tplatedefault = -1"
            OpenRecordset StrSql, rs_tpl
            If Not rs_tpl.EOF Then
                nro_ModOrg = rs_tpl!tplatenro
            Else
                StrSql = "SELECT top 1 * FROM adptemplate"
                OpenRecordset StrSql, rs_tpl
                If rs_tpl.EOF Then
                    Texto = ": no hay modelos de organizacion"
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                    RegError = RegError + 1
                    Exit Sub
                Else
                    nro_ModOrg = rs_tpl!tplatenro
                End If
            End If
        Else
            StrSql = "SELECT * FROM adptemplate WHERE tplatedesabr = '" & ModOrg & "'"
            OpenRecordset StrSql, rs_tpl
            If rs_tpl.EOF Then
                StrSql = "INSERT INTO adptemplate (tplatedesabr,tplatedefault) VALUES ('" & ModOrg & "',-1)"
                objConn.Execute StrSql, , adExecuteNoRecords
                nro_ModOrg = getLastIdentity(objConn, "adptemplate")
            Else
                nro_ModOrg = rs_tpl!tplatenro
            End If
        End If
    Else
            StrSql = "SELECT * FROM adptemplate WHERE tplatedefault = -1"
            OpenRecordset StrSql, rs_tpl
            If Not rs_tpl.EOF Then
                nro_ModOrg = rs_tpl!tplatenro
            Else
                StrSql = "SELECT top 1 * FROM adptemplate"
                OpenRecordset StrSql, rs_tpl
                If rs_tpl.EOF Then
                    Texto = ": no hay modelos de organizacion"
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                    RegError = RegError + 1
                    Exit Sub
                Else
                    nro_ModOrg = rs_tpl!tplatenro
                End If
            End If
    End If
      'El contrato tiene período de prueba?
    NroColumna = NroColumna + 2
    Obligatorio = False
    Campoetiqueta = "Periodo prueba?"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    prueba = UCase(Aux)
    If prueba <> "N/A" And prueba <> "NO" Then
        If prueba = "SI" Then
            perprueba = -1
        Else
            perprueba = 0
            Fecha_FinCont = "NULL"
        End If
    Else
        perprueba = 0
        Fecha_FinCont = "NULL"
    End If
    
    'Fecha de fin de periodo de prueba
    NroColumna = NroColumna + 1
    Obligatorio = False
    'Obligatorio = True
    Campoetiqueta = "Fecha fin de periodo de prueba"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If Aux <> "N/A" Then
        Aux = EliminarCHInvalidosII(Aux, 2, "")
    End If
    F_fin_Prueba = Aux
    If F_fin_Prueba = "N/A" Or EsNulo(F_fin_Prueba) Then
   
    Else
        F_Prueba = ConvFecha(F_fin_Prueba)
        If perprueba Then
           Fecha_FinCont = F_Prueba
        End If
       'F_AltaAux = CDate(FAlta)
       If Fecha_FinCont = "" Then
           Fecha_FinCont = "Null"
        End If
    End If
    '---------------------------------------------------------------------------------------
    'Tipo de Estructura Numero 1
    NroColumna = NroColumna + 1
    Campoetiqueta = "Primer Tipo de Estructura"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    If Aux <> "N/A" Then
        'Valido el tipo de estructura 1
        StrSql = "SELECT tenro FROM tipoestructura WHERE UPPER(tedabr) = '" & UCase(Aux) & "'"
        OpenRecordset StrSql, rs_Aux
        If rs_Aux.EOF Then
            StrSql = "INSERT INTO tipoestructura(tedabr,tesist,tedepbaja,cenro) VALUES('" & UCase(Aux) & "',0,0,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            PrimerTE = getLastIdentity(objConn, "tipoestructura")
        Else
            PrimerTE = rs_Aux!Tenro
        End If
        rs_Aux.Close
     Else
         PrimerTE = 0
         Flog.writeline "Primer tipo de estructura contiene N/A"
     End If
    
    'Estructura Numero 1
    NroColumna = NroColumna + 1
    Campoetiqueta = "Primera Estructura"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        PrimeraEstructura = Aux
    
        ' Validacion y Creacion de la Primera(junto con sus Complementos)
        If PrimeraEstructura <> "N/A" And Not EsNulo(PrimeraEstructura) And PrimerTE <> 0 Then
            If estr1desc Then
                Call ValidaEstructura(PrimerTE, Mid(PrimeraEstructura, 1, 60), Nro_PrimeraEstructura, Inserto_estr)
                Flog.writeline "ValidaEstructura OK"
            Else
                Flog.writeline "Entro x valida EstructuraCodext"
                Call ValidaEstructuraCodExt(PrimerTE, Mid(PrimeraEstructura, 1, 20), Nro_PrimeraEstructura, Inserto_estr)
            End If
            
            Call VerSiCrearTercero(PrimerTE, Mid(PrimeraEstructura, 1, 20), ter_est1)
            If Inserto_estr Then
                'Veo si tengo que crear el complemento, dependiendo del tipo de estructura
                Select Case PrimerTE
                    Case 23
                        'Plan de Obra Social Elegida
                        'Tengo que buscar la Obra Social Elegida
                        StrSql = "SELECT os.ternro FROM his_estructura his "
                        StrSql = StrSql & " INNER JOIN estructura est ON est.tenro = his.tenro AND est.estrnro = his.estrnro "
                        StrSql = StrSql & " INNER JOIN osocial os ON os.osdesc = est.estrdabr "
                        StrSql = StrSql & " WHERE his.tenro = 17 and his.ternro = " & NroTercero
                        StrSql = StrSql & " ORDER BY htetdesde DESC, htethasta ASC "
                        OpenRecordset StrSql, rs_Est
                        If Not rs_Est.EOF Then
                            ter_est1 = rs_Est!Ternro
                            Call VerSiCrearComplemento(PrimerTE, Nro_PrimeraEstructura, Mid(PrimeraEstructura, 1, 20), ter_est1)
                        End If
                    Case 25
                        'Plan de Obrea Social Por Ley
                        'Tengo que buscar la Obra Social por Ley
                        StrSql = "SELECT os.ternro FROM his_estructura his "
                        StrSql = StrSql & " INNER JOIN estructura est ON est.tenro = his.tenro AND est.estrnro = his.estrnro "
                        StrSql = StrSql & " INNER JOIN osocial os ON os.osdesc = est.estrdabr "
                        StrSql = StrSql & " WHERE his.tenro = 24 and his.ternro = " & NroTercero
                        StrSql = StrSql & " ORDER BY htetdesde DESC, htethasta ASC "
                        OpenRecordset StrSql, rs_Est
                        If Not rs_Est.EOF Then
                            ter_est1 = rs_Est!Ternro
                            Call VerSiCrearComplemento(PrimerTE, Nro_PrimeraEstructura, Mid(PrimeraEstructura, 1, 20), ter_est1)
                        End If
                    Case Else
                        Call VerSiCrearComplemento(PrimerTE, Nro_PrimeraEstructura, Mid(PrimeraEstructura, 1, 20), ter_est1)
                End Select
            End If
        Else
            Nro_PrimeraEstructura = 0
        End If
    Else
        Nro_PrimeraEstructura = 0
    End If
    '---------------------------------------------------------------------------------------
    
    '---------------------------------------------------------------------------------------
    'Tipo de Estructura Numero 2
    NroColumna = NroColumna + 1
    Campoetiqueta = "Segundo Tipo de Estructura"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    If Aux <> "N/A" Then
        'Valido el tipo de estructura 2
        StrSql = "SELECT tenro FROM tipoestructura WHERE UPPER(tedabr) = '" & UCase(Aux) & "'"
        OpenRecordset StrSql, rs_Aux
        If rs_Aux.EOF Then
            StrSql = "INSERT INTO tipoestructura(tedabr,tesist,tedepbaja,cenro) VALUES('" & UCase(Aux) & "',0,0,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            SegundoTE = getLastIdentity(objConn, "tipoestructura")
        Else
            SegundoTE = rs_Aux!Tenro
        End If
        rs_Aux.Close
     Else
            SegundoTE = 0
            Flog.writeline "Segundo tipo de estructura contiene N/A"
     End If
    'Estructura Numero 2
    NroColumna = NroColumna + 1
    Campoetiqueta = "Segunda Estructura"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        SegundaEstructura = Aux
        
        If SegundaEstructura <> "N/A" And Not EsNulo(SegundaEstructura) And SegundoTE <> 0 Then
            If estr2desc Then
                Call ValidaEstructura(SegundoTE, Mid(SegundaEstructura, 1, 60), Nro_SegundaEstructura, Inserto_estr)
                Flog.writeline "ValidaEstructura OK"
            Else
                Flog.writeline "Entro x valida EstructuraCodext"
                Call ValidaEstructuraCodExt(SegundoTE, Mid(SegundaEstructura, 1, 20), Nro_SegundaEstructura, Inserto_estr)
            End If
            
            Call VerSiCrearTercero(SegundoTE, Mid(SegundaEstructura, 1, 20), ter_est2)
            If Inserto_estr Then
                'Veo si tengo que crear el complemento, dependiendo del tipo de estructura
                Select Case SegundoTE
                    Case 23
                        'Plan de Obra Social Elegida
                        'Tengo que buscar la Obra Social Elegida
                        StrSql = "SELECT os.ternro FROM his_estructura his "
                        StrSql = StrSql & " INNER JOIN estructura est ON est.tenro = his.tenro AND est.estrnro = his.estrnro "
                        StrSql = StrSql & " INNER JOIN osocial os ON os.osdesc = est.estrdabr "
                        StrSql = StrSql & " WHERE his.tenro = 17 and his.ternro = " & NroTercero
                        StrSql = StrSql & " ORDER BY htetdesde DESC, htethasta ASC "
                        OpenRecordset StrSql, rs_Est
                        If Not rs_Est.EOF Then
                            ter_est2 = rs_Est!Ternro
                            Call VerSiCrearComplemento(SegundoTE, Nro_SegundaEstructura, Mid(SegundaEstructura, 1, 20), ter_est2)
                        End If
                    Case 25
                        'Plan de Obrea Social Por Ley
                        'Tengo que buscar la Obra Social por Ley
                        StrSql = "SELECT os.ternro FROM his_estructura his "
                        StrSql = StrSql & " INNER JOIN estructura est ON est.tenro = his.tenro AND est.estrnro = his.estrnro "
                        StrSql = StrSql & " INNER JOIN osocial os ON os.osdesc = est.estrdabr "
                        StrSql = StrSql & " WHERE his.tenro = 24 and his.ternro = " & NroTercero
                        StrSql = StrSql & " ORDER BY htetdesde DESC, htethasta ASC "
                        OpenRecordset StrSql, rs_Est
                        If Not rs_Est.EOF Then
                            ter_est2 = rs_Est!Ternro
                            Call VerSiCrearComplemento(SegundoTE, Nro_SegundaEstructura, Mid(SegundaEstructura, 1, 20), ter_est2)
                        End If
                    Case Else
                        Call VerSiCrearComplemento(SegundoTE, Nro_SegundaEstructura, Mid(SegundaEstructura, 1, 20), ter_est2)
                End Select
            End If
        Else
            Nro_SegundaEstructura = 0
        End If
    Else
        Nro_SegundaEstructura = 0
    End If
   
   
    '---------------------------------------------------------------------------------------
    
    '---------------------------------------------------------------------------------------
    'Tipo de Estructura Numero 3
    NroColumna = NroColumna + 1
    Campoetiqueta = "Tercer Tipo de Estructura"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Aux = EliminarCHInvalidosII(Aux, 1, "")
     If Aux <> "N/A" Then
            'Valido el tipo de estructura 3
            StrSql = "SELECT tenro FROM tipoestructura WHERE UPPER(tedabr) = '" & UCase(Aux) & "'"
            OpenRecordset StrSql, rs_Aux
            If rs_Aux.EOF Then
                StrSql = "INSERT INTO tipoestructura(tedabr,tesist,tedepbaja,cenro) VALUES('" & UCase(Aux) & "',0,0,1)"
                objConn.Execute StrSql, , adExecuteNoRecords
                TercerTE = getLastIdentity(objConn, "tipoestructura")
            Else
                TercerTE = rs_Aux!Tenro
            End If
            rs_Aux.Close
       Else
            TercerTE = 0
            Flog.writeline "Tercer tipo de estructura contiene N/A"
     End If
    'Estructura Numero 3
    NroColumna = NroColumna + 1
    Campoetiqueta = "Tercera Estructura"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        TerceraEstructura = Aux
        
        If TerceraEstructura <> "N/A" And Not EsNulo(TerceraEstructura) And TercerTE <> 0 Then
            If estr3desc Then
                Call ValidaEstructura(TercerTE, Mid(TerceraEstructura, 1, 60), Nro_TerceraEstructura, Inserto_estr)
                Flog.writeline "ValidaEstructura OK"
            Else
                Flog.writeline "Entro x valida EstructuraCodext"
                Call ValidaEstructuraCodExt(TercerTE, Mid(TerceraEstructura, 1, 20), Nro_TerceraEstructura, Inserto_estr)
            End If
            
            Call VerSiCrearTercero(TercerTE, Mid(TerceraEstructura, 1, 20), ter_est3)
            If Inserto_estr Then
                'Veo si tengo que crear el complemento, dependiendo del tipo de estructura
                Select Case TercerTE
                    Case 23
                        'Plan de Obra Social Elegida
                        'Tengo que buscar la Obra Social Elegida
                        StrSql = "SELECT os.ternro FROM his_estructura his "
                        StrSql = StrSql & " INNER JOIN estructura est ON est.tenro = his.tenro AND est.estrnro = his.estrnro "
                        StrSql = StrSql & " INNER JOIN osocial os ON os.osdesc = est.estrdabr "
                        StrSql = StrSql & " WHERE his.tenro = 17 and his.ternro = " & NroTercero
                        StrSql = StrSql & " ORDER BY htetdesde DESC, htethasta ASC "
                        OpenRecordset StrSql, rs_Est
                        If Not rs_Est.EOF Then
                            ter_est3 = rs_Est!Ternro
                            Call VerSiCrearComplemento(TercerTE, Nro_TerceraEstructura, Mid(TerceraEstructura, 1, 20), ter_est3)
                        End If
                    Case 25
                        'Plan de Obrea Social Por Ley
                        'Tengo que buscar la Obra Social por Ley
                        StrSql = "SELECT os.ternro FROM his_estructura his "
                        StrSql = StrSql & " INNER JOIN estructura est ON est.tenro = his.tenro AND est.estrnro = his.estrnro "
                        StrSql = StrSql & " INNER JOIN osocial os ON os.osdesc = est.estrdabr "
                        StrSql = StrSql & " WHERE his.tenro = 24 and his.ternro = " & NroTercero
                        StrSql = StrSql & " ORDER BY htetdesde DESC, htethasta ASC "
                        OpenRecordset StrSql, rs_Est
                        If Not rs_Est.EOF Then
                            ter_est3 = rs_Est!Ternro
                            Call VerSiCrearComplemento(TercerTE, Nro_TerceraEstructura, Mid(TerceraEstructura, 1, 20), ter_est3)
                        End If
                    Case Else
                        Call VerSiCrearComplemento(TercerTE, Nro_TerceraEstructura, Mid(TerceraEstructura, 1, 20), ter_est3)
                End Select
            End If
        Else
            Nro_TerceraEstructura = 0
        End If
    Else
        Nro_TerceraEstructura = 0
    End If
    '---------------------------------------------------------------------------------------
   
    '---------------------------------------------------------------------------------------
    'Tipo de Estructura Numero 4
    NroColumna = NroColumna + 1
    Campoetiqueta = "Cuarto Tipo de Estructura"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    
    If Aux <> "N/A" Then
        'Valido el tipo de estructura 4
        StrSql = "SELECT tenro FROM tipoestructura WHERE UPPER(tedabr) = '" & UCase(Aux) & "'"
        OpenRecordset StrSql, rs_Aux
        If rs_Aux.EOF Then
            StrSql = "INSERT INTO tipoestructura(tedabr,tesist,tedepbaja,cenro) VALUES('" & UCase(Aux) & "',0,0,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
             Flog.writeline "inserto tipo estructura 4"
            CuartoTE = getLastIdentity(objConn, "tipoestructura")
        Else
            CuartoTE = rs_Aux!Tenro
        End If
        rs_Aux.Close
    Else
            CuartoTE = 0
            Flog.writeline "Cuarto tipo de  estructura contiene N/A"
     End If
    'Estructura Numero 4
    NroColumna = NroColumna + 1
    Campoetiqueta = "Cuarta Estructura"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        CuartaEstructura = Aux
       
        If CuartaEstructura <> "N/A" And Not EsNulo(CuartaEstructura) And CuartoTE <> 0 Then
            If estr4desc Then
                Call ValidaEstructura(CuartoTE, Mid(CuartaEstructura, 1, 60), Nro_CuartaEstructura, Inserto_estr)
                Flog.writeline "ValidaEstructura OK"
            Else
                Flog.writeline "Entro x valida EstructuraCodext"
                Call ValidaEstructuraCodExt(CuartoTE, Mid(CuartaEstructura, 1, 20), Nro_CuartaEstructura, Inserto_estr)
            End If
            
            Call VerSiCrearTercero(CuartoTE, Mid(CuartaEstructura, 1, 20), ter_est4)
            If Inserto_estr Then
                'Veo si tengo que crear el complemento, dependiendo del tipo de estructura
                Select Case CuartoTE
                    Case 23
                        'Plan de Obra Social Elegida
                        'Tengo que buscar la Obra Social Elegida
                        StrSql = "SELECT os.ternro FROM his_estructura his "
                        StrSql = StrSql & " INNER JOIN estructura est ON est.tenro = his.tenro AND est.estrnro = his.estrnro "
                        StrSql = StrSql & " INNER JOIN osocial os ON os.osdesc = est.estrdabr "
                        StrSql = StrSql & " WHERE his.tenro = 17 and his.ternro = " & NroTercero
                        StrSql = StrSql & " ORDER BY htetdesde DESC, htethasta ASC "
                        OpenRecordset StrSql, rs_Est
                        If Not rs_Est.EOF Then
                            ter_est4 = rs_Est!Ternro
                            Call VerSiCrearComplemento(CuartoTE, Nro_CuartaEstructura, Mid(CuartaEstructura, 1, 20), ter_est4)
                        End If
                    Case 25
                        'Plan de Obrea Social Por Ley
                        'Tengo que buscar la Obra Social por Ley
                        StrSql = "SELECT os.ternro FROM his_estructura his "
                        StrSql = StrSql & " INNER JOIN estructura est ON est.tenro = his.tenro AND est.estrnro = his.estrnro "
                        StrSql = StrSql & " INNER JOIN osocial os ON os.osdesc = est.estrdabr "
                        StrSql = StrSql & " WHERE his.tenro = 24 and his.ternro = " & NroTercero
                        StrSql = StrSql & " ORDER BY htetdesde DESC, htethasta ASC "
                        OpenRecordset StrSql, rs_Est
                        If Not rs_Est.EOF Then
                            ter_est4 = rs_Est!Ternro
                            Call VerSiCrearComplemento(CuartoTE, Nro_CuartaEstructura, Mid(CuartaEstructura, 1, 20), ter_est4)
                        End If
                    Case Else
                        Call VerSiCrearComplemento(CuartoTE, Nro_CuartaEstructura, Mid(CuartaEstructura, 1, 20), ter_est4)
                End Select
            End If
        Else
            Nro_CuartaEstructura = 0
        End If
    Else
        Nro_CuartaEstructura = 0
    End If
    '---------------------------------------------------------------------------------------
    
    '---------------------------------------------------------------------------------------
    'Tipo de Estructura Numero 5
    NroColumna = NroColumna + 1
    Campoetiqueta = "Quinto Tipo de Estructura"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    If Aux <> "N/A" Then
        'Valido el tipo de estructura 5
        StrSql = "SELECT tenro FROM tipoestructura WHERE UPPER(tedabr) = '" & UCase(Aux) & "'"
        OpenRecordset StrSql, rs_Aux
        If rs_Aux.EOF Then
            StrSql = "INSERT INTO tipoestructura(tedabr,tesist,tedepbaja,cenro) VALUES('" & UCase(Aux) & "',0,0,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            QuintoTE = getLastIdentity(objConn, "tipoestructura")
        Else
            QuintoTE = rs_Aux!Tenro
        End If
        rs_Aux.Close
     Else
            QuintoTE = 0
            Flog.writeline "Quinto tipo de estructura contiene N/A"
     End If
    'Estructura Numero 5
    NroColumna = NroColumna + 1
    Campoetiqueta = "Quinta Estructura"
    pos1 = pos2 + 2
    pos2 = Len(strReg)
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        QuintaEstructura = Aux

        If QuintaEstructura <> "N/A" And Not EsNulo(QuintaEstructura) And QuintoTE <> 0 Then
            If estr5desc Then
                Call ValidaEstructura(QuintoTE, Mid(QuintaEstructura, 1, 60), Nro_QuintaEstructura, Inserto_estr)
                Flog.writeline "ValidaEstructura OK"
            Else
                Flog.writeline "Entro x valida EstructuraCodext"
                Call ValidaEstructuraCodExt(QuintoTE, Mid(QuintaEstructura, 1, 20), Nro_QuintaEstructura, Inserto_estr)
            End If
            
            Call VerSiCrearTercero(QuintoTE, Mid(QuintaEstructura, 1, 20), ter_est5)
            If Inserto_estr Then
                'Veo si tengo que crear el complemento, dependiendo del tipo de estructura
                Select Case QuintoTE
                    Case 23
                        'Plan de Obra Social Elegida
                        'Tengo que buscar la Obra Social Elegida
                        StrSql = "SELECT os.ternro FROM his_estructura his "
                        StrSql = StrSql & " INNER JOIN estructura est ON est.tenro = his.tenro AND est.estrnro = his.estrnro "
                        StrSql = StrSql & " INNER JOIN osocial os ON os.osdesc = est.estrdabr "
                        StrSql = StrSql & " WHERE his.tenro = 17 and his.ternro = " & NroTercero
                        StrSql = StrSql & " ORDER BY htetdesde DESC, htethasta ASC "
                        OpenRecordset StrSql, rs_Est
                        If Not rs_Est.EOF Then
                            ter_est5 = rs_Est!Ternro
                            Call VerSiCrearComplemento(QuintoTE, Nro_QuintaEstructura, Mid(QuintaEstructura, 1, 20), ter_est5)
                        End If
                    Case 25
                        'Plan de Obrea Social Por Ley
                        'Tengo que buscar la Obra Social por Ley
                        StrSql = "SELECT os.ternro FROM his_estructura his "
                        StrSql = StrSql & " INNER JOIN estructura est ON est.tenro = his.tenro AND est.estrnro = his.estrnro "
                        StrSql = StrSql & " INNER JOIN osocial os ON os.osdesc = est.estrdabr "
                        StrSql = StrSql & " WHERE his.tenro = 24 and his.ternro = " & NroTercero
                        StrSql = StrSql & " ORDER BY htetdesde DESC, htethasta ASC "
                        OpenRecordset StrSql, rs_Est
                        If Not rs_Est.EOF Then
                            ter_est5 = rs_Est!Ternro
                            Call VerSiCrearComplemento(QuintoTE, Nro_QuintaEstructura, Mid(QuintaEstructura, 1, 20), ter_est5)
                        End If
                    Case Else
                        Call VerSiCrearComplemento(QuintoTE, Nro_QuintaEstructura, Mid(QuintaEstructura, 1, 20), ter_est5)
                End Select
            End If
        Else
            Nro_QuintaEstructura = 0
        End If
    Else
        Nro_QuintaEstructura = 0
    End If
 
   
   
'Fin lectura de campos
' =====================================================================================================
  
  
  'JPB - Inicializo el pass+perfil (l_ess_Pass_Estandar y l_ess_Perfil_Estandar) por defecto del Autogestion en el caso que este habilitado el confper 12
  '--------------------------------
  Call ESS_Configuracion_Default
  '-------------------------------


  ' Inserto el Tercero
  If F_Nacimiento = "Null" Then
    F_Nacimiento = "''"
  End If
  If F_Ingreso = "Null" Then
    F_Ingreso = "''"
  End If
  
  If CalculaLegajo Then
    Call CalcularLegajo2(nro_empresa, Legajo)
  End If

    If Not ExisteLeg Then
        'Busco si esta config la maxima cant de empleados
        MaxEmpl = 0
        StrSql = "SELECT lib_generica FROM sistema"
        OpenRecordset StrSql, rs_Sql
        If Not EsNulo(rs_Sql!lib_generica) Then
            If IsNumeric(Decryptar("56238", rs_Sql!lib_generica)) Then MaxEmpl = Decryptar("56238", rs_Sql!lib_generica)
        End If
        
        If MaxEmpl > 0 Then
            'Calculo la cantidad actual de empleados
            StrSql = "SELECT COUNT(empleg) cant FROM empleado"
            OpenRecordset StrSql, rs_Sql
            If Not rs_Sql.EOF Then
                If Not EsNulo(rs_Sql!cant) Then CantEmpl = rs_Sql!cant
            End If
            
            'Controlo cantidad
            If CantEmpl >= MaxEmpl Then
                Texto = ": " & "El sistema alcanzo el maximo de " & MaxEmpl & " empleados permitidos."
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                RegError = RegError + 1
                Exit Sub
            End If
        End If
    
        StrSql = " INSERT INTO tercero(ternom,ternom2,terape,terape2,terfecnac,tersex,terestciv,estcivnro,nacionalnro,paisnro,terfecing)"
        StrSql = StrSql & " VALUES('" & nombre & "','" & nombre2 & "','" & Apellido & "','" & Apellido2 & "'," & F_Nacimiento & "," & ter_sexo & "," & nro_estcivil & "," & nro_estcivil & ","
        If nro_nacionalidad <> 0 Then
            StrSql = StrSql & nro_nacionalidad & ","
        Else
            StrSql = StrSql & "null,"
        End If
        If nro_paisnac <> 0 Then
            StrSql = StrSql & nro_paisnac & ","
        Else
            StrSql = StrSql & "null,"
        End If
        StrSql = StrSql & F_Ingreso & ")"
        objConn.Execute StrSql, , adExecuteNoRecords

        NroTercero = getLastIdentity(objConn, "tercero")
        
        Texto = ": " & "Codigo de Tercero = " & NroTercero
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
 
        'Actualizo el campo de modelo de pais
        StrSql = "UPDATE tercero SET docpais = " & CodigoPais & " WHERE ternro = " & NroTercero
        objConn.Execute StrSql, , adExecuteNoRecords
        
        
    Else
        StrSql = " UPDATE tercero SET "
        StrSql = StrSql & " ternom = " & "'" & nombre & "'"
        StrSql = StrSql & ", ternom2 = " & "'" & nombre2 & "'"
        StrSql = StrSql & ", terape = " & "'" & Apellido & "'"
        StrSql = StrSql & ", terape2 = " & "'" & Apellido2 & "'"
        StrSql = StrSql & ", terfecnac = " & F_Nacimiento
        StrSql = StrSql & ", tersex = " & ter_sexo
        StrSql = StrSql & ", terestciv =" & nro_estcivil
        StrSql = StrSql & ", estcivnro =" & "'" & nro_estcivil & "'"
        If nro_nacionalidad <> 0 Then
            StrSql = StrSql & ", nacionalnro =" & nro_nacionalidad
        End If
        StrSql = StrSql & ", terfecing =" & F_Ingreso
        If nro_paisnac <> 0 Then
            StrSql = StrSql & ", paisnro =" & nro_paisnac
        End If
        StrSql = StrSql & " WHERE ternro = " & NroTercero
        objConn.Execute StrSql, , adExecuteNoRecords
      
        Texto = ": " & " - Empleado: " & Legajo & " - Ese Empleado ya existe en la base. Datos de tercero actualizados"
        NroColumna = 1
        Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, strReg)
        
                        
    End If
    
    
    
    'Inserto Empleado
    If Not ExisteLeg Then
        
       If CodigoPais = "24" Then
            Fecha_FinCont = Fecha_FinCont
        Else
            Fecha_FinCont = Fecha_FinContrato
        End If
        
        StrSql = " INSERT INTO empleado(empleg,empfecalta,empfecbaja,empest,empfaltagr,empfbajaprev,"
        StrSql = StrSql & "ternro,nivnro,empestudia,terape,terape2,ternom,ternom2,empinterno,empemail,"
        StrSql = StrSql & "empnro,tplatenro"
          
        'JPB - Si esta habilitado el confper 12 asigno el pass+perfil por defecto al empleado
        '------------------------------------------------------------------------------------
        If (l_ess_Pass_Estandar <> "") And (l_ess_Perfil_Estandar <> "") Then
             StrSql = StrSql & ",empessactivo,emppass,perfnro"
        End If
        '------------------------------------------------------------------------------------
    
        StrSql = StrSql & ") VALUES("
        StrSql = StrSql & Legajo & "," & F_Alta & "," & F_Baja & "," & ter_estado & "," & F_Alta & "," & Fecha_FinCont & ","
        StrSql = StrSql & NroTercero & "," & nro_nivest & "," & ter_estudio & ",'" & Apellido & "','" & Apellido2 & "','"
        StrSql = StrSql & nombre & "','" & nombre2 & "',Null,'" & Email & "',1," & nro_ModOrg
        
        'JPB - Si esta habilitado el confper 12 asigno el pass+perfil por defecto al empleado
        '------------------------------------------------------------------------------------
        If (l_ess_Pass_Estandar <> "") And (l_ess_Perfil_Estandar <> "") Then
             StrSql = StrSql & ",-1,'" & l_ess_Pass_Estandar & "'," & l_ess_Perfil_Estandar
        End If
        '------------------------------------------------------------------------------------
    
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = ": " & "Empleado insertado - " & Legajo & " - " & Apellido & " - " & nombre
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
    Else
        StrSql = " UPDATE empleado SET "
        StrSql = StrSql & " empleg = " & Legajo
        StrSql = StrSql & " ,empfecalta = " & F_Alta
        StrSql = StrSql & " ,empfecbaja = " & F_Baja
        StrSql = StrSql & " ,empfbajaprev = " & Fecha_FinCont
        StrSql = StrSql & " ,empest = " & ter_estado
        StrSql = StrSql & " ,empfaltagr = " & F_Alta
        StrSql = StrSql & " ,nivnro = " & nro_nivest
        StrSql = StrSql & " ,empestudia = " & ter_estudio
        StrSql = StrSql & " ,terape = " & "'" & Apellido & "'"
        StrSql = StrSql & " ,terape2 = " & "'" & Apellido2 & "'"
        StrSql = StrSql & " ,ternom = " & "'" & nombre & "'"
        StrSql = StrSql & " ,ternom2 = " & "'" & nombre2 & "'"
        StrSql = StrSql & " ,empemail = " & "'" & Email & "'"
        StrSql = StrSql & " ,empnro = 1 "
        StrSql = StrSql & " ,tplatenro =" & nro_ModOrg
        
        'JPB - Si esta habilitado el confper 12 asigno el pass+perfil por defecto al empleado
        '------------------------------------------------------------------------------------
        If (l_ess_Pass_Estandar <> "") And (l_ess_Perfil_Estandar <> "") Then
            StrSql = StrSql & ", empessactivo = -1"
            StrSql = StrSql & ", emppass = '" & l_ess_Pass_Estandar & "'"
            StrSql = StrSql & ", perfnro =" & l_ess_Perfil_Estandar
        End If
        '------------------------------------------------------------------------------------
        StrSql = StrSql & " WHERE ternro = " & NroTercero
        objConn.Execute StrSql, , adExecuteNoRecords
    
        Texto = ": " & "Empleado Actualizado - " & Legajo & " - " & Apellido & " - " & nombre
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
    End If
    
    
    
    ' Inserto el Registro correspondiente en ter_tip
    If Not ExisteLeg Then
        StrSql = " INSERT INTO ter_tip(ternro,tipnro) VALUES(" & NroTercero & ",1)"
        objConn.Execute StrSql, , adExecuteNoRecords
    End If

' Inserto los Documentos
    If Not ExisteLeg Then
        If Nro_TDocumento <> 0 Then
            StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
            StrSql = StrSql & " VALUES(" & NroTercero & "," & Nro_TDocumento & ",'" & Ndocu & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            Texto = ": " & "Inserte el Documento - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        End If
    Else
        If Nro_TDocumento <> 0 Then
            StrSql = "SELECT * FROM ter_doc WHERE ternro = " & NroTercero
            StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If rs.EOF Then
                StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
                StrSql = StrSql & " VALUES(" & NroTercero & "," & Nro_TDocumento & ",'" & Ndocu & "')"
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = ": " & "Inserte el Documento - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            Else
                StrSql = " UPDATE ter_doc SET "
                StrSql = StrSql & " nrodoc = '" & Ndocu & "'"
                StrSql = StrSql & " WHERE ternro = " & NroTercero
                StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = Texto = ": " & "Documento actualizado - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
    End If
  
    If Not ExisteLeg Then
        If Nro_TDocumentoCuil <> 0 Then
        'If Cuil <> "" Then
            StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
            StrSql = StrSql & " VALUES(" & NroTercero & "," & Nro_TDocumentoCuil & ",'" & Cuil & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            Texto = ": " & "Inserte el Segundo Documento - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        End If
    Else
        'If Cuil <> "" Then
        If Nro_TDocumentoCuil <> 0 Then
            StrSql = "SELECT * FROM ter_doc WHERE ternro = " & NroTercero
            StrSql = StrSql & " AND tidnro = " & Nro_TDocumentoCuil
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If rs.EOF Then
                StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
                StrSql = StrSql & " VALUES(" & NroTercero & "," & Nro_TDocumentoCuil & ",'" & Cuil & "')"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Inserte el Segundo Documento - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            Else
                StrSql = " UPDATE ter_doc SET "
                StrSql = StrSql & " nrodoc = '" & Cuil & "'"
                StrSql = StrSql & " WHERE ternro = " & NroTercero
                StrSql = StrSql & " AND tidnro = " & Nro_TDocumentoCuil
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = Texto = ": " & "Segundo Documento actualizado - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
    End If

' Inserto el Domicilio
  If rs.State = adStateOpen Then
    rs.Close
  End If


If Not ExisteLeg Then
    ' Inserto las Fases
    StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
    StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
    If nro_causabaja <> 0 Then
        StrSql = StrSql & nro_causabaja
        StrSql = StrSql & ",0,-1,-1,-1,-1,-1)"  ' estado fase=0  - no mira ter_estado
    Else
        StrSql = StrSql & "null"
        StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
    End If
    objConn.Execute StrSql, , adExecuteNoRecords
    
    'If nro_causabaja <> 0 Then
    '    Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
    'End If
    
Else
    'FGZ - 23/07/2010
    'SI existe el legajo reviso si estaba activo o inactivo.
    '   Si estaba inactivo y ahora el estado es activo dedeuzco que se trata de un reingreso
    '   ==> intento insertar la fase.
    '   Problemas potenciales
    '
    '   Existe Fase cerrada *****
    '   Fase anterior  ------[------------------]--------
    'Casos
    '   Fecha ingreso  ---FI----------------------------- ==> no se puede insertar (informar error)
    '   Fecha ingreso  ---------   FI-------------------- ==> tenfo 2 posibilidades
    '                                                           Cierro fase un dia antes de FI y creo nueva fase
    '                                                           no se puede insertar (informar error)
    '   Fecha ingreso  -----------------------------FI--- ==> inserto la nueva fase
    
    '   Existe Fase abierta *****
    '   Fase anterior  ------[---------------------------
    'Casos
    '   Fecha ingreso  ---FI----------------------------- ==> no se puede insertar (informar error)
    '   Fecha ingreso  -------------FI------------------- ==> Cierro fase un dia antes de FI y creo nueva fase
   
    'Si no existe fase ==> simplemente crea la fase
    
    StrSql = "SELECT * FROM fases WHERE empleado = " & NroTercero
    StrSql = StrSql & " ORDER BY altfec DESC"
    OpenRecordset StrSql, rs
    
    If rs.EOF Then
        'No Existe ==> Inserto
        StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
        StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
        If nro_causabaja <> 0 Then
          StrSql = StrSql & nro_causabaja
          StrSql = StrSql & ",0,-1,-1,-1,-1,-1)"  ' estado fase=0  - no mira ter_estado
        Else
          StrSql = StrSql & "null"
          StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
        End If
        objConn.Execute StrSql, , adExecuteNoRecords
        
        'If nro_causabaja <> 0 Then
        '    Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
        'End If
        
    Else
        'Existe
        Texto = ": " & "Existe Fase"
        If CBool(rs!Estado) Then
            'Activa
            Texto = Texto & " activa. " & rs!altfec & " - " & IIf(EsNulo(rs!bajfec), "#", rs!bajfec)
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            
            
            'Si ahora está inactivo ==> actualiza la fase
            If Not CBool(ter_estado) Then
                'la cierro y abro otro
                StrSql = " UPDATE fases SET "
                StrSql = StrSql & " bajfec =" & F_Baja
                StrSql = StrSql & ",estado = 0 "
                If nro_causabaja <> 0 Then
                StrSql = StrSql & ", caunro =" & nro_causabaja
                End If
                StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
                objConn.Execute StrSql, , adExecuteNoRecords
            
                Texto = ": " & "Fase Actualizada."
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                
                'If nro_causabaja <> 0 Then
                '    Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
                'End If
                
            Else
                Texto = ": " & "Si desea actualizar debe corregir la situacion manualmente."
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
            
        Else
            'Inactiva
            Texto = Texto & " inactiva "
            If EsNulo(rs!bajfec) Then
                Texto = Texto & " abierta " & rs!altfec & " - #"
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                
                If CDate(rs!altfec) < CDate(FAlta) Then
                    Texto = ": " & "Cierro la fase anterior (un dia antes) y creo la nueva fase"
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    
                    'la cierro y abro otro - (se cierra a FAlta-1)
                    StrSql = " UPDATE fases SET "
                    StrSql = StrSql & "bajfec =" & ConvFecha(DateAdd("d", -1, FAlta))
                    StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
                    objConn.Execute StrSql, , adExecuteNoRecords
                        
                    'abro una nueva
                    StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
                    StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
                    If nro_causabaja <> 0 Then
                      StrSql = StrSql & nro_causabaja
                      StrSql = StrSql & ",0,-1,-1,-1,-1,-1)"
                    Else
                      StrSql = StrSql & "null"
                      StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    Texto = ": " & "Fase Actualizada."
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    
                    'If nro_causabaja <> 0 Then
                    '    Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
                    'End If
                    
                Else
                    If CDate(rs!altfec) > CDate(FAlta) Then
                        Texto = ": " & "No se puede actualizar las fases. Debe corregir la situacion manualmente."
                        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    Else
                        'es la misma fase, no hago nada.
                        ' actualiza
                        
                        StrSql = " UPDATE fases SET "
                        StrSql = StrSql & " bajfec =" & F_Baja
                        If nro_causabaja <> 0 Then
                        StrSql = StrSql & ", caunro =" & nro_causabaja
                        End If
                        StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
                        objConn.Execute StrSql, , adExecuteNoRecords
                    
                        Texto = ": " & "Fase Actualizada - "
                        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                            
                        'If nro_causabaja <> 0 Then
                        '    Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
                        'End If
                            
                    End If
                End If
            Else
                Texto = Texto & " cerrada " & rs!altfec & " - " & rs!bajfec
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            
                If CDate(rs!altfec) < CDate(FAlta) And CDate(rs!bajfec) < CDate(FAlta) Then
                    'Fase existente ------[------]-----------
                    'Nueva fase     ---------------[-----]---
                    
                    'abro una nueva
                    StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
                    StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
                    If nro_causabaja <> 0 Then
                      StrSql = StrSql & nro_causabaja
                      StrSql = StrSql & ",0,-1,-1,-1,-1,-1)"
                    Else
                      StrSql = StrSql & "null"
                      StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    Texto = ": " & "Fase creada."
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    
                    'If nro_causabaja <> 0 Then
                    '    Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
                    'End If
                    
                Else
                    'FGZ - 11/11/2010 --------------------------
                    If CDate(rs!altfec) = CDate(FAlta) And CDate(rs!bajfec) = CDate(FBaja) Then
                        If nro_causabaja <> 0 Then
                            StrSql = " UPDATE fases SET "
                            StrSql = StrSql & " caunro =" & nro_causabaja
                            StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
                            objConn.Execute StrSql, , adExecuteNoRecords
                    
                            Texto = ": " & "Fase Actualizada - "
                            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                            
                            'Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
                            
                        Else
                        
                        End If
                    Else
                        Texto = ": " & "No se puede crear la fases nueva. Debe corregir la situacion manualmente."
                        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    End If
                End If
            End If
        End If
    End If
'        StrSql = " UPDATE fases SET "
'        StrSql = StrSql & " altfec =" & F_Alta
'        StrSql = StrSql & ",bajfec =" & F_Baja
'        StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
'        objConn.Execute StrSql, , adExecuteNoRecords
'
'        Texto = ": " & "Fase Actualizada - "
'        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
'    End If
End If
    
    
    
'  18/02/2010 - No hacer nada con las fases cuando existe el empleado
'  Else
'    StrSql = "SELECT * FROM fases WHERE estado = -1 AND sueldo = -1 AND vacaciones = -1 AND indemnizacion = -1 AND real = -1 AND empleado = " & NroTercero
'    OpenRecordset StrSql, rs
'    If rs.EOF Then
'        StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
'        StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
'        If nro_causabaja <> 0 Then
'          StrSql = StrSql & nro_causabaja
'        Else
'          StrSql = StrSql & "null"
'        End If
'        StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
'        objConn.Execute StrSql, , adExecuteNoRecords
'    Else
'        StrSql = " UPDATE fases SET "
'        StrSql = StrSql & " altfec =" & F_Alta
'        StrSql = StrSql & ",bajfec =" & F_Baja
'        StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
'        objConn.Execute StrSql, , adExecuteNoRecords
'
'        Texto = ": " & "Fase Actualizada - "
'        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
'    End If
  
  
  'Inserto las Estructuras
  
  'FGZ - 02/03/2011 - se sacó la fecha de baja para el manejo de estructuras
  F_Baja = "Null"
  
 If CodigoPais = "24" Then
    Call AsignarEstructura_NEW(18, nro_contrato, NroTercero, F_Alta, Fecha_FinContrato)
 Else
  Call AsignarEstructura_NEW(18, nro_contrato, NroTercero, F_Alta, F_Baja)
 End If
  
  Call AsignarEstructura_NEW(PrimerTE, Nro_PrimeraEstructura, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(SegundoTE, Nro_SegundaEstructura, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(TercerTE, Nro_TerceraEstructura, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(CuartoTE, Nro_CuartaEstructura, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(QuintoTE, Nro_QuintaEstructura, NroTercero, F_Alta, F_Baja)

Texto = ": " & "Linea procesada correctamente "
Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
'LineaOK.Writeline Mid(strReg, 1, Len(strReg))
OK = True
         
FinLinea:
If rs.State = adStateOpen Then
    rs.Close
End If
Exit Sub

SaltoLinea:
    Texto = ": " & " - Error:" & Err.Description & " -- Ultima consulta: " & StrSql
    NroColumna = 1
    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    MyRollbackTrans
    OK = False
    GoTo FinLinea
End Sub

Public Sub LineaModelo_668(ByVal strReg As String, ByRef OK As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de Domicilios Perú - Si bien ahora contempla sólo domicilios para Perú, queda abierto
'               a futuras modificaciones.
' Autor      : Manterola Maria Magdalena
' Fecha      : 02/10/2012
' Ultima Mod.: 25/04/2013 - CAS-19126 -  RAPSODIA - Interfaz Domicilios multipais - Se utiliza modnro para verificar el formato a insertar.
'             02/05/2013 - Gonzalez Nicolás  - CAS-18330 - H&A - ECUADOR - Modelo de Domicilio -Se agregó Ecuador al CASE
'             24/05/2013 - Gonzalez Nicolás - Se agrego validación de distrito para PERU. EscribeLogMIToolTip()
'             10/07/2013 - Gonzalez Nicolás - Se quito email del modelo de venezuela.
'             03/10/2013 - Gonzalez Nicolás - Se agregó modelo para EL SALVADOR y COSTA RICA
'             29/10/2013 - Gonzalez Nicolás - Se agregó campo para  EL SALVADOR
'             06/03/2014 - Gonzalez Nicolás - Se agregó modelo para BOLIVIA
'             27/11/2014 - Gonzalez Nicolás - Se agregó modelo para HONDURAS
'             29/06/2015 - Gonzalez Nicolás - Se agregó Tipo de Logradouro para modelo  BRASIL
'             26/08/215 - Gonzalez Nicolás - Se amplió telefono1 y telefono2 a 60
'  *********************   FORMATO  *********************

' ---------------------------------------------------------------------------------------------

Dim pos1                    As Long
Dim pos2                    As Long

Dim Legajo                  As String   'LEGAJO                   -- empleado.empleg
Dim tipodomi                As String   'Tipo Domicilio           -- tipodomi.tidodes
Dim Obl_tipoDomi            As Boolean
Dim Valida_tipoDomi         As Boolean
Dim Calle                   As String   'Calle                    -- detdom.calle
Dim Obl_Calle               As Boolean
Dim Valida_Calle            As Boolean
Dim Nro                     As String   'Número                   -- detdom.nro
Dim Obl_Nro                 As Boolean
Dim Valida_Nro              As Boolean
Dim Piso                    As String   'Piso                     -- detdom.piso
Dim Obl_Piso                As Boolean
Dim Valida_Piso             As Boolean
Dim via                     As String   'via                      -- detdom.vianro
Dim Obl_via                 As Boolean
Dim Valida_via                 As Boolean
Dim Depto                   As String   'Depto                    -- detdom.depto
Dim Obl_Dpto                As Boolean
Dim Valida_Dpto             As Boolean
Dim Entrecalles             As String   'EntreCalles / Referencias              -- detdom.entrecalles
Dim Obl_Entrecalles         As Boolean
Dim Valida_Entrecalles      As Boolean
Dim Localidad               As String   'Localidad                -- detdom.locnro
Dim Obl_Localidad           As Boolean
Dim Valida_Localidad        As Boolean
Dim Provincia               As String   'Provincia                -- detdom.provnro
Dim Obl_Provincia           As Boolean
Dim Valida_Provincia        As Boolean
Dim Pais                    As String   'Pais                     -- detdom.paisnro
Dim Obl_Pais                As Boolean
Dim Valida_Pais             As Boolean
Dim tipoModelo              As String   'Moddesabr                -- modelo_etiq.moddesabr
Dim tidonro                 As Long     'TipoDomicilio            -- tipodomi.tidonro
Dim Nro_Localidad           As Long
Dim Nro_Provincia           As Long
Dim Nro_Via                 As Long
Dim Nro_Pais                As Long
Dim NroDom                  As Long
Dim Modnro                  As Long

Dim Sector                  As String   'detdom.sector
Dim Obl_Sector              As Boolean
Dim Valida_Sector           As Boolean
Dim Torre                   As String   'detdom.torre
Dim Obl_Torre              As Boolean
Dim Valida_Torre           As Boolean

Dim Manzana                 As String   'detdom.manzana
Dim Obl_Manzana             As Boolean
Dim Valida_Manzana          As Boolean
Dim Codigopostal            As String   'detdom.codigopostal
Dim Obl_Codigopostal        As Boolean
Dim Valida_Codigopostal     As Boolean
Dim Zona                    As String
Dim Zonanro                 As Long     'detdom.zonanro
Dim Obl_Zonanro             As Boolean
Dim Valida_Zonanro          As Boolean
Dim Partido                 As String
Dim Partnro                 As Long     'detdom.parntro
Dim Obl_Partnro             As Boolean
Dim Valida_Partnro          As Boolean
Dim Barrio                  As String   'detdom.barrio
Dim Obl_Barrio              As Boolean
Dim Valida_Barrio           As Boolean
Dim Auxchr1                 As String   'detdom.auxchr1
Dim Obl_Auxchr1             As Boolean
Dim Valida_Auxchr1          As Boolean
Dim Excep_Auxchr1           As Boolean
Dim Auxchr2                 As String   'detdom.auxchr2
Dim Obl_Auxchr2             As Boolean
Dim Valida_Auxchr2          As Boolean
Dim Excep_Auxchr2           As Boolean
Dim Email                   As String   'detdom.email
Dim Obl_Email               As Boolean
Dim Valida_Email            As Boolean
Dim Kilometro               As String   'detdom.kilometro
Dim Obl_Kilometro           As Boolean
Dim Valida_Kilometro        As Boolean
Dim Circunscripcion         As String   'detdom.circunscripcion
Dim Obl_Circunscripcion     As Boolean
Dim Valida_Circunscripcion  As Boolean
Dim Cuerpo                  As String   'detdom.cuerpo
Dim Obl_Cuerpo              As Boolean
Dim Valida_Cuerpo           As Boolean
Dim Lote                    As String   'detdom.lote
Dim Obl_Lote                As Boolean
Dim Valida_Lote             As Boolean
Dim Parcela                 As String   'detdom.parcel
Dim Obl_Parcela             As Boolean
Dim Valida_Parcela          As Boolean
Dim Bloque                  As String   'detdom.bloque
Dim Obl_Bloque              As Boolean
Dim Valida_Bloque           As Boolean
Dim Seccion                 As String   'detdom.seccion
Dim Obl_Seccion             As Boolean
Dim Valida_Seccion             As Boolean
Dim Casa                    As String   'detdom.casa
Dim Obl_Casa                As Boolean
Dim Valida_Casa                As Boolean
Dim Cpa                     As String   'detdom.cpa
Dim Obl_Cpa                 As Boolean
Dim Valida_Cpa              As Boolean
Dim Auxchr3                 As String   'detdom.auxchr3
Dim Obl_Auxchr3             As Boolean
Dim Valida_Auxchr3          As Boolean
Dim Auxchr4                 As String   'detdom.auxchr4
Dim Obl_Auxchr4             As Boolean
Dim Valida_Auxchr4          As Boolean

Dim Auxchr5                 As String   'detdom.auxchr5
Dim Obl_Auxchr5             As Boolean
Dim Valida_Auxchr5          As Boolean

Dim Auxchr6                 As String   'detdom.auxchr6
Dim Obl_Auxchr6             As Boolean
Dim Valida_Auxchr6          As Boolean

Dim Auxchr7                 As String   'detdom.auxchr7
Dim Obl_Auxchr7             As Boolean
Dim Valida_Auxchr7          As Boolean


Dim tipoTelefono1 As String ' Tipo Telefono 1
Dim Telefono1 As String ' N° Telefono 1
Dim titelnro1 As Long
Dim Obl_Tel1 As Boolean
Dim Valida_Tel1 As Boolean

Dim tipoTelefono2 As String ' Tipo Telefono 2
Dim Telefono2 As String ' N° Telefono 2
Dim titelnro2 As Long
Dim Valida_Tel2 As Boolean
Dim Obl_Tel2 As Boolean



Dim IngresoDom As Boolean
Dim lencod As String
Dim Nro_Nrodom      As String
Dim NroTercero      As Long

Dim rs As New ADODB.Recordset
Dim rs_emp  As New ADODB.Recordset
Dim rs_cab As New ADODB.Recordset
Dim rs_Tel As New ADODB.Recordset
Dim rs_zona As New ADODB.Recordset

'-------------------------
'POR DEFAULT ES TODO FALSE

Obl_Sector = False
Valida_Sector = False

Obl_Torre = False
Valida_Torre = False

Obl_Piso = False
Valida_Piso = False

Obl_Dpto = False
Valida_Dpto = False

Obl_Manzana = False
Valida_Manzana = False

Obl_Codigopostal = False
Valida_Codigopostal = False

Obl_Localidad = False
Valida_Localidad = False

Obl_Provincia = False
Valida_Provincia = False

Obl_Pais = False
Valida_Pais = False

Obl_Zonanro = False
Valida_Zonanro = False

Obl_Partnro = False
Valida_Partnro = False

Obl_Barrio = False
Valida_Barrio = False

Obl_Auxchr1 = False
Valida_Auxchr1 = False
Excep_Auxchr1 = False

Obl_Auxchr2 = False
Valida_Auxchr2 = False
Excep_Auxchr2 = False

Obl_Email = False
Valida_Email = False

Obl_Entrecalles = False
Valida_Entrecalles = False

Obl_Kilometro = False
Valida_Kilometro = False

Obl_Circunscripcion = False
Valida_Circunscripcion = False

Obl_Lote = False
Valida_Lote = False

Obl_Parcela = False
Valida_Parcela = False

Obl_Bloque = False
Valida_Bloque = False

Obl_Casa = False
Valida_Casa = False

Obl_Cpa = False
Valida_Cpa = False

Obl_Auxchr3 = False
Valida_Auxchr3 = False

Obl_Auxchr4 = False
Valida_Auxchr4 = False

Obl_Auxchr5 = False
Valida_Auxchr5 = False

Obl_Auxchr6 = False
Valida_Auxchr6 = False

Obl_Auxchr7 = False
Valida_Auxchr7 = False


'----TELÉFONOS
Obl_Tel1 = False
Valida_Tel1 = True


Obl_Tel2 = False
Valida_Tel2 = True
'-------------------------


    On Error GoTo SaltoLinea

    LineaCarga = LineaCarga + 1
    
    Flog.writeline
    FlogE.writeline
    FlogP.writeline
       
       
    'Flog.writeline "Modelo;" & ModeloDom
    '-----------------------------------------------------------------------
    'BUSCO IDIOMA DEL MODELO
    '-----------------------------------------------------------------------
    
    StrSql = "SELECT lencod FROM modelo_etiq"
    StrSql = StrSql & " INNER JOIN lenguaje ON lenguaje.paisnro = modelo_etiq.paisnro"
    StrSql = StrSql & " WHERE modnro = " & ModeloDom
    OpenRecordset StrSql, rs_emp
    If (Not rs_emp.EOF) Then
        lencod = rs_emp!lencod
    Else
        lencod = "esAR"
    End If
    rs_emp.Close
    
    
       
       
    'SI NO TENGO EL SEPARADOR AL FINAL DEL STRING, SE LO AGREGO.
    If Right(strReg, 1) <> separador Then
        strReg = strReg & separador
    End If
    'Legajo
    NroColumna = 1
    Obligatorio = True
    Campoetiqueta = "Legajo"
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    Else
        Legajo = Aux
        StrSql = "SELECT * FROM empleado WHERE empleado.empleg = " & Legajo
        OpenRecordset StrSql, rs_emp
        If (Not rs_emp.EOF) Then
            NroTercero = rs_emp!Ternro
        Else
            Texto = ": " & " - Campo " & Campoetiqueta & " El legajo no existe"
            NroColumna = 1
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
    End If
    
    IngresoDom = True
    
    'modnro = 10
    Modnro = ModeloDom
    
    'MMM - 02/10/2012 - Ahora se deja fijo el modelo de domicilio para PERU! Pero se deja abierto para futuras
    'modificaciones, modelos de domicilios nuevos con su propio formato
    
    Select Case Modnro
        Case 2: 'CHILE
            Flog.writeline "**** DOMICILIO CHILE ****"
           '**********CHILE*************
           'FORMATO
           'Legajo;Tipo de Domicilio;Calle;Nro.;Sector;Torre;Piso;Ofic/Depto;Manzana;Cod postal;Comuna;Provincia;Pais;Region;Barrio;ciudad o pueblo;sector comunal;Email;Entre Calles
           Obl_tipoDomi = True
           Valida_tipoDomi = True
           
           Obl_Calle = True
           Valida_Calle = True
           
           Obl_Nro = False
           Valida_Nro = True
           
           Obl_Torre = False
           Valida_Torre = True
           
           Obl_Piso = False
           Valida_Piso = True
           
           Obl_Dpto = False
           Valida_Dpto = True
           
           Obl_Localidad = False
           Valida_Localidad = True
           
           Obl_Zonanro = False
           Valida_Zonanro = True
           
           Obl_Provincia = False
           Valida_Provincia = True
           
           Obl_Pais = False
           Valida_Pais = True
           
           Obl_Email = False
           Valida_Email = True
                      
           Obl_Entrecalles = False
           Valida_Entrecalles = True
           
           Obl_Sector = False
           Valida_Sector = True
           
           Obl_Barrio = False
           Valida_Barrio = True
           
           Obl_Manzana = False
           Valida_Manzana = True
           
           Obl_Codigopostal = False
           Valida_Codigopostal = True
           
           Obl_Auxchr1 = False
           Valida_Auxchr1 = True
           
           Obl_Auxchr2 = False
           Valida_Auxchr2 = True
           
           
           
           
        Case 3: 'COLOMBIA
        '**********COLOMBIA*************
           'FORMATO
           'Legajo;Tipo de Domicilio;Calle;Nro.;Torre;Piso;Ofic/Depto;Ciudad;Departamento;País;Barrio;Email;Entre Calles
           Flog.writeline "**** DOMICILIO COLOMBIA ****"
           
           Obl_tipoDomi = True
           Valida_tipoDomi = True
           
           Obl_Calle = True
           Valida_Calle = True
           
           Obl_Nro = False
           Valida_Nro = True
           
           Obl_Torre = False
           Valida_Torre = True
           
           Obl_Piso = False
           Valida_Piso = True
           
           Obl_Dpto = False
           Valida_Dpto = True
           
           Obl_Localidad = False
           Valida_Localidad = True
           
           Obl_Provincia = False
           Valida_Provincia = True
           
           Obl_Pais = False
           Valida_Pais = True
           
           Obl_Barrio = False
           Valida_Barrio = True
           
           Obl_Email = False
           Valida_Email = True
           
           
           Obl_Entrecalles = False
           Valida_Entrecalles = True
           
           
           
        Case 4: 'URUGUAY
           '**********URUGUAY*************
           'FORMATO
           'Legajo;Tipo de Domicilio;Calle;Nro.;Sector;Torre;Piso;Ofic/Depto;Manzana;Cod postal;Localidad;Departamento;Pais;Ciudad;Barrio;complemento1;complemento2;Email;entre calles
           Flog.writeline "**** DOMICILIO URUGUAY ****"
            
           Obl_tipoDomi = True
           Valida_tipoDomi = True
           
           Obl_Calle = True
           Valida_Calle = True
           
           Obl_Nro = False
           Valida_Nro = True
           
           Obl_Torre = False
           Valida_Torre = True
           
           Obl_Piso = False
           Valida_Piso = True
           
           Obl_Dpto = False
           Valida_Dpto = True
           
           Obl_Localidad = False
           Valida_Localidad = True
           
           Obl_Zonanro = False
           Valida_Zonanro = True
           
           Obl_Provincia = False
           Valida_Provincia = True
           
           Obl_Pais = False
           Valida_Pais = True
           
           Obl_Email = False
           Valida_Email = True
                      
           Obl_Entrecalles = False
           Valida_Entrecalles = True
           
           Obl_Sector = False
           Valida_Sector = True
           
           Obl_Barrio = False
           Valida_Barrio = True
           
           Obl_Manzana = False
           Valida_Manzana = True
           
           Obl_Codigopostal = False
           Valida_Codigopostal = True
           
           Obl_Auxchr1 = False
           Valida_Auxchr1 = True
           
           Obl_Auxchr2 = False
           Valida_Auxchr2 = True
           
           
        Case 5: 'COSTA RICA
           '**********COSTA RICA*************
           'Legajo;Tipo de Domicilio;Calle;Nro.;Piso;Ofic/Depto;Torre;Entre Calles;Barrio;Email;País;Provincia;Partido;Localidad
           Flog.writeline "**** DOMICILIO COSTA RICA ****"
            Obl_tipoDomi = True
            Valida_tipoDomi = True
            
            Obl_Calle = True
            Valida_Calle = True
           
            Obl_Nro = False
            Valida_Nro = True
            
            Obl_Piso = False
            Valida_Piso = True
            
            Obl_Dpto = False
            Valida_Dpto = True
            
            Obl_Torre = False
            Valida_Torre = True
            
            Obl_Entrecalles = False
            Valida_Entrecalles = True
            
            Obl_Barrio = False
            Valida_Barrio = True
            
            Obl_Email = False
            Valida_Email = True
            
            Obl_Pais = False
            Valida_Pais = True
            
            Obl_Provincia = False
            Valida_Provincia = True
            
            Obl_Partnro = False
            Valida_Partnro = True
            
            Obl_Localidad = False
            Valida_Localidad = True

           
        Case 6: 'PARAGUAY
           '**********PARAGUAY*************
           'FORMATO
           'Legajo;Tipo de Domicilio;Calle;Nro.;Torre;Piso;Ofic/Depto;Ciudad;Departamento;País;Barrio;Email;Entre Calles
           Flog.writeline "**** DOMICILIO PARAGUAY ****"
            Obl_tipoDomi = True
            Valida_tipoDomi = True
            
            Obl_Calle = True
            Valida_Calle = True
            
            Obl_Nro = False
            Valida_Nro = True
                      
            Obl_Piso = False
            Valida_Piso = True
            
            Obl_Dpto = False
            Valida_Dpto = True
            
            Obl_Torre = False
            Valida_Torre = True
            
            Obl_Entrecalles = False
            Valida_Entrecalles = True
        
            Obl_Email = False
            Valida_Email = True
          
            Obl_Barrio = False
            Valida_Barrio = True
            
            Obl_Localidad = False
            Valida_Localidad = True
            
            Obl_Provincia = False
            Valida_Provincia = True
            
            Obl_Pais = False
            Valida_Pais = True
            
            'Longitud - Dimatz Rafael - CAS 35413 - 10/02/2016
            Obl_Auxchr1 = False
            Valida_Auxchr1 = True
            'Latitud - Dimatz Rafael - CAS 35413 - 10/02/2016
            Obl_Auxchr2 = False
            Valida_Auxchr2 = True
            
            
            
            
        Case 8: 'EL SALVADOR
            '**********EL SALVADOR*************
            'Legajo;Tipo de Domicilio;Calle;Piso;Ofic/Depto;Torre;Entre Calles;Barrio;Email;Provincia;País;Partido;localidad
            Flog.writeline "**** DOMICILIO EL SALVADOR ****"
            Obl_tipoDomi = True
            Valida_tipoDomi = True
           
            Obl_Calle = True
            Valida_Calle = True
           
            Obl_Piso = False
            Valida_Piso = True
           
            Obl_Dpto = False
            Valida_Dpto = True
            
            Obl_Torre = False
            Valida_Torre = True

            Obl_Entrecalles = False
            Valida_Entrecalles = True
        
            Obl_Barrio = False
            Valida_Barrio = True
          
            Obl_Email = False
            Valida_Email = True
            
            Obl_Pais = False
            Valida_Pais = True
            
            Obl_Provincia = False
            Valida_Provincia = True
            
            Obl_Localidad = False
            Valida_Localidad = True
            
            Obl_Partnro = False
            Valida_Partnro = True
            
            Obl_Zonanro = False
            Valida_Zonanro = True
        Case 9: 'BRASIL
        
           '**********BRASIL*************
           'FORMATO
           'Legajo;Tipo de Domicilio;Calle;Nro.;Torre;Piso;Ofic/Depto;codigo postal;Ciudad;Provincia;País;Zona,Partido;Barrio;Email;Entre Calles
           Flog.writeline "**** DOMICILIO BRASIL ****"
           Obl_tipoDomi = True
           Valida_tipoDomi = True
           
           Obl_Calle = True
           Valida_Calle = True
           
           Obl_Nro = False
           Valida_Nro = True
           
           Obl_Torre = False
           Valida_Torre = True
           
           Obl_Piso = False
           Valida_Piso = True
           
           Obl_Dpto = False
           Valida_Dpto = True
           
           Obl_Localidad = False
           Valida_Localidad = True
           
           Obl_Provincia = False
           Valida_Provincia = True
           
           Obl_Pais = False
           Valida_Pais = True
           
           Obl_Email = False
           Valida_Email = True
                      
           Obl_Entrecalles = False
           Valida_Entrecalles = True
           
           Obl_Barrio = False
           Valida_Barrio = True
           
           Obl_Codigopostal = False
           Valida_Codigopostal = True
           
           Obl_Partnro = False
           Valida_Partnro = True

           Obl_Auxchr1 = True
           Valida_Auxchr1 = True
           Excep_Auxchr1 = True
           
'           Obl_Auxchr2 = True
'           Valida_Auxchr2 = True
           Excep_Auxchr2 = True
            
        Case 10: 'PERU
            '**********PERU*************
            '________________________________________________________________________________________________________________
            'FORMATO
            'Legajo;Tipo de Domicilio;Dirección;Nro.;Piso;Ofic/Depto;Ciudad/Localidad;Departamento/Provincia;País;Partido/Distrito;email;Referencias;Via
            Flog.writeline "**** DOMICILIO PERU ****"
            Obl_tipoDomi = True
            Valida_tipoDomi = True
            
            Obl_Calle = True
            Valida_Calle = True
            
            Obl_Nro = False
            Valida_Nro = True
            
            Obl_Piso = False
            Valida_Piso = True
            
            Obl_Dpto = False
            Valida_Dpto = True
            
            'seba desde aca
            Obl_Auxchr3 = False 'interior
            Valida_Auxchr3 = True
            
            Obl_Manzana = False
            Valida_Manzana = True
            
            Obl_Lote = False
            Valida_Lote = True
            
            Obl_Kilometro = False
            Valida_Kilometro = True
            
            Obl_Bloque = False
            Valida_Bloque = True
            
            Obl_Seccion = False
            Valida_Seccion = True
            
            Obl_Auxchr5 = False 'tipo de zona
            Valida_Auxchr5 = True
            
            Obl_Auxchr4 = False 'nombre de zona
            Valida_Auxchr4 = True
            
            'hasta aca
            Obl_Localidad = False
            Valida_Localidad = True
            
            Obl_Provincia = False
            Valida_Provincia = True
            
            Obl_Pais = False
            Valida_Pais = True
            
            Obl_Partnro = False
            Valida_Partnro = True
            
            Obl_Email = False
            Valida_Email = True
                        
            Obl_Entrecalles = False
            Valida_Entrecalles = True
            
            Obl_via = False
            Valida_via = True
            
            
        Case 11: 'BOLIVIA
            '**********BOLIVIA*************
           'FORMATO
           'Legajo;Tipo de Domicilio;Calle;Nro.;Piso;Ofic/Depto;Ciudad;Departamento;País;Provincia;Barrio;Email;Entre Calles;

            Flog.writeline "**** DOMICILIO BOLIVIA ****"
            Obl_tipoDomi = True
            Valida_tipoDomi = True
            
            Obl_Calle = True
            Valida_Calle = True
            
            Obl_Nro = False
            Valida_Nro = True
            
            Obl_Piso = False
            Valida_Piso = True
            
            Obl_Dpto = False
            Valida_Dpto = True
            
            Obl_Partnro = False
            Valida_Partnro = True
            
            Obl_Localidad = False
            Valida_Localidad = True
            
            Obl_Provincia = False
            Valida_Provincia = True
            
            Obl_Pais = False
            Valida_Pais = True
            
            
            Obl_Email = False
            Valida_Email = True
                        
            Obl_Entrecalles = False
            Valida_Entrecalles = True
            
            Obl_Barrio = False
            Valida_Barrio = True
            
        Case 12: 'VENEZUELA
           '**********VENEZUELA*************
           'FORMATO
           'Legajo;Tipo de Domicilio;Calle;Nro.;Piso;Ofic/Depto;codigo postal;Ciudad;Departamento;País;Partido;Barrio;Latitud;Longitud;Email;Entre Calles;Casa;MParroquia
            Flog.writeline "**** DOMICILIO VENEZUELA ****"
            Obl_tipoDomi = True
            Valida_tipoDomi = True
            
            Obl_Calle = True
            Valida_Calle = True
            
            Obl_Nro = False
            Valida_Nro = True
            
            Obl_Piso = False
            Valida_Piso = True
            
            Obl_Dpto = False
            Valida_Dpto = True
            
            Obl_Partnro = False
            Valida_Partnro = True
            
            Obl_Casa = False
            Valida_Casa = True
            
            Obl_Localidad = False
            Valida_Localidad = True
            
            Obl_Provincia = False
            Valida_Provincia = True
            
            Obl_Pais = False
            Valida_Pais = True
            
'            Obl_Email = False
'            Valida_Email = True
                        
            Obl_Entrecalles = False
            Valida_Entrecalles = True
            
            Obl_Barrio = False
            Valida_Barrio = True
            
            Obl_Codigopostal = False
            Valida_Codigopostal = True
            
            Obl_Auxchr1 = False
            Valida_Auxchr1 = True
            
            Obl_Auxchr2 = False
            Valida_Auxchr2 = True
            
            Obl_Auxchr3 = False
            Valida_Auxchr3 = True
           
           
           
        Case 14: 'MEJICO
           '**********MEJICO*************
           'FORMATO
           'Legajo;Tipo de Domicilio;Calle;Nro.;Sector;Torre;Piso;Ofic/Depto;MANZANA;codigo postal;Colonia;Estado;País;Delegaciones;Barrio;Email;Entre Calles
           
           Flog.writeline "**** DOMICILIO MEJICO ****"
           Obl_tipoDomi = True
           Valida_tipoDomi = True
           
           Obl_Calle = True
           Valida_Calle = True
           
           Obl_Nro = False
           Valida_Nro = True
           
           Obl_Torre = False
           Valida_Torre = True
           
           Obl_Piso = False
           Valida_Piso = True
           
           Obl_Dpto = False
           Valida_Dpto = True
           
           Obl_Localidad = False
           Valida_Localidad = True
           
           Obl_Provincia = False
           Valida_Provincia = True
           
           Obl_Pais = False
           Valida_Pais = True
           
           Obl_Email = False
           Valida_Email = True
                      
           Obl_Entrecalles = False
           Valida_Entrecalles = True
           
           Obl_Barrio = False
           Valida_Barrio = True
           
           Obl_Codigopostal = False
           Valida_Codigopostal = True
           
           Obl_Partnro = False
           Valida_Partnro = True
            
           Obl_Manzana = False
           Valida_Manzana = True
           
           Obl_Sector = False
           Valida_Sector = True
        Case 15: 'ECUADOR
            '**********ECUADOR*************
           Obl_tipoDomi = True
           Valida_tipoDomi = True
           
           Obl_Calle = True
           Valida_Calle = True
           
           Obl_Nro = False
           Valida_Nro = True
           
           Obl_Torre = False
           Valida_Torre = True
           
           Obl_Piso = False
           Valida_Piso = True
           
           Obl_Dpto = False
           Valida_Dpto = True
           
           Obl_Localidad = False
           Valida_Localidad = True
           
           Obl_Provincia = False
           Valida_Provincia = True
           
           Obl_Pais = False
           Valida_Pais = True
           
           Obl_Email = False
           Valida_Email = True
                      
           Obl_Entrecalles = False
           Valida_Entrecalles = True
           
           Obl_Codigopostal = False
           Valida_Codigopostal = True
           
           Obl_Partnro = False
           Valida_Partnro = True
           
        Case 17: 'HONDURAS
        '**********HONDURAS*************
           'FORMATO
           'Legajo;Tipo de Domicilio;Calle;Nro.;Torre;Piso;Ofic/Depto;Ciudad;Departamento;País;Barrio;Email;Entre Calles
           Flog.writeline "**** DOMICILIO HONDURAS ****"
           
           Obl_tipoDomi = True
           Valida_tipoDomi = True
           
           Obl_Calle = True
           Valida_Calle = True
           
           Obl_Nro = False
           Valida_Nro = True
           
           Obl_Torre = False
           Valida_Torre = True
           
           Obl_Piso = False
           Valida_Piso = True
           
           Obl_Dpto = False
           Valida_Dpto = True
           
           Obl_Localidad = False
           Valida_Localidad = True
           
           Obl_Provincia = False
           Valida_Provincia = True
           
           Obl_Pais = False
           Valida_Pais = True
           
           Obl_Barrio = False
           Valida_Barrio = True
           
           Obl_Email = False
           Valida_Email = True
           
           
           Obl_Entrecalles = False
           Valida_Entrecalles = True
        Case Else
            
            StrSql = "SELECT moddesabr FROM modelo_etiq WHERE modnro =" & Modnro
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                'Flog.writeline "No es posible importar datos para el modelo de domicilio: " & rs!moddesabr & ""
                Texto = ": No es posible importar datos para el modelo de domicilio: " & rs!moddesabr & ""
            Else
                Texto = ": ¡¡ ERROR DE FORMATO !!  "
            End If
            
            NroColumna = 0
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub

    End Select
    
    
    
    
    
    '------------------------------------------------
    'TIPO DE DOMICILIO
    '------------------------------------------------
    If Valida_tipoDomi = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_tipoDomi
        Campoetiqueta = EscribeLogMIToolTip("Tipo de Domicilio", lencod, 0)
        'Campoetiqueta = "tipodomi.tidodes"
        
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        tipodomi = Left(Aux, 30)
        If tipodomi = "N/A" Then
            tipodomi = ""
            tidonro = 0
            IngresoDom = False
        Else
            'Busco el tipo de Domicilio con la descripción ingresada
            StrSql = "SELECT tidonro FROM tipodomi  "
            StrSql = StrSql & " WHERE UPPER(tidodes) = UPPER('" & tipodomi & "')"
               
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                tidonro = rs!tidonro
            Else
                tidonro = 0
                IngresoDom = False
            End If
            rs.Close
        End If
    Else
        tidonro = 0
        IngresoDom = False
    End If
    '------------------------------------------------
    
    '------------------------------------------------
    'CALLE
    '------------------------------------------------
    If Valida_Calle = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Calle
        'Campoetiqueta = "Direccion.Calle"
        Campoetiqueta = EscribeLogMIToolTip("Calle", lencod, 0)
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Calle = Left(Aux, 250)
        If Calle = "N/A" Then
            Calle = ""
            IngresoDom = False
        End If
        Flog.writeline "CALLE: " & Calle
    Else
        Calle = ""
        IngresoDom = False
    End If
    
    '-----------------------------------------
                    
    
    '-----------------------------------------
    'Nro
    '-----------------------------------------
    If Valida_Nro = True Then
        NroColumna = NroColumna + 1
        'Obligatorio = False
        Obligatorio = Obl_Nro
        'Campoetiqueta = "Direccion.Nro"
        Campoetiqueta = EscribeLogMIToolTip("Numero", lencod, 0)
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Nro = Left(Aux, 8)
        If (Nro <> "N/A") Then
            Nro_Nrodom = Nro
        Else
            Nro_Nrodom = 0
        End If
         Flog.writeline "N°: " & Nro_Nrodom
    Else
        Nro_Nrodom = 0
    End If
    '-----------------------------------------
    
    
    
    '-----------------------------------------
    'SECTOR
    '-----------------------------------------
    If Valida_Sector = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Sector
        'Campoetiqueta = "Direccion.Sector"
        Campoetiqueta = EscribeLogMIToolTip("Sector", lencod, 0)
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Sector = Left(Aux, 8)
        If (Nro <> "N/A") Then
            Sector = Sector
        Else
            Sector = ""
        End If
        Flog.writeline "Sector: " & Sector
    Else
        Sector = ""
    End If
    '-----------------------------------------
    
    '-----------------------------------------
    'TORRE
    '-----------------------------------------
    If Valida_Torre = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Torre
        'Campoetiqueta = "Direccion.Torre"
        Campoetiqueta = EscribeLogMIToolTip("Torre", lencod, 0)
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Torre = Left(Aux, 8)
        If (Nro <> "N/A") Then
            Torre = Torre
        Else
            Torre = ""
        End If
        Flog.writeline "Torre: " & Torre
    
    Else
        Torre = ""
    End If
    '-----------------------------------------
    
    
                
    '-----------------------------------------
    'PISO
    '-----------------------------------------
    If Valida_Piso = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Piso
        'Campoetiqueta = "Direccion.Piso"
        Campoetiqueta = EscribeLogMIToolTip("Piso", lencod, 0)
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Piso = Left(Aux, 8)
        If Piso = "N/A" Then
            Piso = ""
        End If
        Flog.writeline "Piso: " & Piso
    Else
        Piso = ""
    End If
    '-----------------------------------------
                
    '-----------------------------------------
    'DEPARTAMENTO/OFICINA
    '-----------------------------------------
    If Valida_Dpto = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Dpto
        'Campoetiqueta = "Direccion.Departamento"
        Campoetiqueta = EscribeLogMIToolTip("Ofic/Depto", lencod, 0)
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Depto = Left(Aux, 8)
        If Depto = "N/A" Then
            Depto = ""
        End If
        Flog.writeline "Dpto/Oficina: " & Depto
    Else
        Depto = ""
    End If
    '-----------------------------------------
            
    '-----------------------------------------
    'MANZANA
    '-----------------------------------------
    If Valida_Manzana = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Manzana
        'Campoetiqueta = "Direccion.Manzana"
        Campoetiqueta = EscribeLogMIToolTip("Manzana", lencod, 0)
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Manzana = Left(Aux, 8)
        If Depto = "N/A" Then
            Manzana = ""
        End If
            Flog.writeline "Manzana: " & Manzana
    Else
        Manzana = ""
    End If
    '-----------------------------------------
            
    '-----------------------------------------
    'CODIGO POSTAL
    '-----------------------------------------
    If Valida_Codigopostal = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Codigopostal
        'Campoetiqueta = "Direccion.codigopostal"
        Campoetiqueta = EscribeLogMIToolTip("Codigo Postal", lencod, 0)
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Codigopostal = Left(Aux, 12)
        If Depto = "N/A" Then
            Codigopostal = ""
        End If
        Flog.writeline "Cod. Postal: " & Codigopostal
    Else
        Codigopostal = ""
    End If
    '-----------------------------------------
            
    '-----------------------------------------
    'LOCALIDAD
    '-----------------------------------------
    If Valida_Localidad = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Localidad
        'Campoetiqueta = "Localidad"
        Campoetiqueta = EscribeLogMIToolTip("Localidad", lencod, 0)
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Localidad = Left(Aux, 60)
        Flog.writeline Campoetiqueta & " : " & Localidad
    Else
        Localidad = "N/A"
    End If
    '-----------------------------------------
            

    '-----------------------------------------
    'PROVINCIA
    '-----------------------------------------
    If Valida_Provincia = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Provincia
        'Campoetiqueta = "Provincia"
        Campoetiqueta = EscribeLogMIToolTip("Provincia", lencod, 0)
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Provincia = Left(Aux, 20)
        Flog.writeline Campoetiqueta & " : " & Provincia
    Else
        Provincia = "N/A"
    End If
    '-----------------------------------------
            
            
    '-----------------------------------------
    'PAIS
    '-----------------------------------------
    If Valida_Pais = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Pais
        'Campoetiqueta = "Pais"
        Campoetiqueta = EscribeLogMIToolTip("Pais", lencod, 0)
        pos1 = pos2 + 2
        'pos2 = Len(strReg)
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Pais = Left(Aux, 20)
        Flog.writeline Campoetiqueta & " : " & Pais
    Else
        Pais = "N/A"
    End If
    '-----------------------------------------
    
    '-----------------------------------------
    'ZONA
    '-----------------------------------------
    If Valida_Zonanro = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Zonanro
        'Campoetiqueta = "Zona"
        Campoetiqueta = EscribeLogMIToolTip("Zona", lencod, 0)
        pos1 = pos2 + 2
        'pos2 = Len(strReg)
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Zona = Left(Aux, 20)
        Flog.writeline Campoetiqueta & " : " & Zona
    Else
        Zona = "N/A"
    End If
    '-----------------------------------------
    
            
    '-----------------------------------------
    'PARTIDO
    '-----------------------------------------
    If Valida_Partnro = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Partnro
        'Campoetiqueta = "Partido"
        Campoetiqueta = EscribeLogMIToolTip("Partido", lencod, 0)
        pos1 = pos2 + 2
        'pos2 = Len(strReg)
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Partido = Left(Aux, 20)
        Flog.writeline Campoetiqueta & " : " & Partido
    Else
        Partido = "N/A"
    End If
    '-----------------------------------------
            
            
    '-----------------------------------------
    'BARRIO
    '-----------------------------------------
    If Valida_Barrio = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Barrio
        'Campoetiqueta = "Barrio"
        Campoetiqueta = EscribeLogMIToolTip("Barrio", lencod, 0)
        pos1 = pos2 + 2
        'pos2 = Len(strReg)
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Barrio = Left(Aux, 30)
        Flog.writeline Campoetiqueta & " : " & Barrio
    Else
        Barrio = ""
    End If
    '-----------------------------------------
            
            
    '-----------------------------------------
    'Auchr1
    '-----------------------------------------
    If Valida_Auxchr1 = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Auxchr1
        Campoetiqueta = "Auxchr1"
        pos1 = pos2 + 2
        'pos2 = Len(strReg)
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        Else
        'Control de Excepciones del Campo Auxchr1
            If Excep_Auxchr1 = True Then
                Select Case Modnro
                    Case 9: 'BRASIL
                            Call ValidarLogradouro(Aux, Auxchr2) 'Retorna valor para Aux y Auxchr2
                            If Aux = "" Then
                                Auxchr1 = ""
                                Auxchr2 = ""
                                Texto = ": " & " - Campo " & Campoetiqueta & " Tipo de Logradouro incorrecto."
                                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                                
                                
                                Texto = ": " & " - Debe ser un Tipo de Logradouro correcto."
                                NroColumna = 11
                                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                                'Ok = False
                                RegError = RegError + 1
                                Call InsertaError(14, 156)
                                IngresoDom = False
                                Exit Sub
                        
                                
                            End If
                End Select
            End If
        End If
        
        If Aux <> "" Then
            Aux = EliminarCHInvalidosII(Aux, 1, "")
            Auxchr1 = Left(Aux, 60)
        End If
        Flog.writeline "Auxchr1: " & Auxchr1
    Else
        Auxchr1 = ""
    End If
    '-----------------------------------------
    
    '-----------------------------------------
    'Auchr2
    '-----------------------------------------
    If Valida_Auxchr2 = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Auxchr2
        Campoetiqueta = "Auxchr2"
        pos1 = pos2 + 2
        'pos2 = Len(strReg)
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Auxchr2 = Left(Aux, 60)
        Flog.writeline "auxchr2: " & Auxchr2
    Else
        If Excep_Auxchr2 = True Then
            If Modnro = 9 Then 'BRASIL - Se obtiene de Auxchr1
                If Not IsEmpty(Auxchr2) Then
                    Auxchr2 = Left(Auxchr2, 60)
                End If
                Flog.writeline "auxchr2: " & Auxchr2
            End If
        Else
            Auxchr2 = ""
        End If
    End If
    '-----------------------------------------
            
            
    '-----------------------------------------
    'EMAIL
    '-----------------------------------------
    If Valida_Email = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Email
        'Campoetiqueta = "Email"
        Campoetiqueta = EscribeLogMIToolTip("Email", lencod, 0)
        pos1 = pos2 + 2
        'pos2 = Len(strReg)
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 4, "")
        Email = Left(Aux, 60)
        Flog.writeline Campoetiqueta & " : " & Email
    Else
        Email = ""
    End If
    '-----------------------------------------
            
            
    '-----------------------------------------
    'Entre Calles / Referencias
    '-----------------------------------------
    If Valida_Entrecalles = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Entrecalles
        'Campoetiqueta = "Entre calles"
        Campoetiqueta = EscribeLogMIToolTip("Entre las calles", lencod, 0)
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Entrecalles = Left(Aux, 80)
        If Entrecalles = "N/A" Then
            Entrecalles = ""
        End If
         Flog.writeline Campoetiqueta & " : " & Entrecalles
    Else
        Entrecalles = ""
    End If
    
    '-----------------------------------------
    
    
    '-----------------------------------------
    'KILOMETRO
    '-----------------------------------------
    If Valida_Kilometro = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Kilometro
        'Campoetiqueta = "Kilometro"
        Campoetiqueta = EscribeLogMIToolTip("Kilometro", lencod, 0)
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Kilometro = Left(Aux, 8)
        If Kilometro = "N/A" Then
            Kilometro = ""
        End If
        Flog.writeline Campoetiqueta & " : " & Kilometro
    Else
        Kilometro = ""
    End If
    
    
    '-----------------------------------------
    'CIRCUNSCRIPCION
    '-----------------------------------------
    If Valida_Circunscripcion = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Circunscripcion
        'Campoetiqueta = "Circunscripcion"
        Campoetiqueta = EscribeLogMIToolTip("Circunscripcion", lencod, 0)
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Circunscripcion = Left(Aux, 8)
        If Circunscripcion = "N/A" Then
            Circunscripcion = ""
        End If
        Flog.writeline Campoetiqueta & " : " & Circunscripcion
    Else
        Circunscripcion = ""
    End If
    '-----------------------------------------
    
    '-----------------------------------------
    'CUERPO
    '-----------------------------------------
    If Valida_Cuerpo = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Cuerpo
        'Campoetiqueta = "Cuerpo"
        Campoetiqueta = EscribeLogMIToolTip("Cuerpo", lencod, 0)
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Cuerpo = Left(Aux, 8)
        If Cuerpo = "N/A" Then
            Cuerpo = ""
        End If
        Flog.writeline Campoetiqueta & " : " & Cuerpo
    Else
        Cuerpo = ""
    End If
    '-----------------------------------------
    
    
    
    '-----------------------------------------
    'LOTE
    '-----------------------------------------
    If Valida_Lote = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Lote
        'Campoetiqueta = "Lote"
        Campoetiqueta = EscribeLogMIToolTip("Lote", lencod, 0)
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Lote = Left(Aux, 8)
        If Lote = "N/A" Then
            Lote = ""
        End If
        Flog.writeline Campoetiqueta & " : " & Lote
    Else
        Lote = ""
    End If
    '-----------------------------------------
    
    '-----------------------------------------
    'PARCELA
    '-----------------------------------------
    If Valida_Parcela = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Parcela
        'Campoetiqueta = "Parcela"
        Campoetiqueta = EscribeLogMIToolTip("Parcela", lencod, 0)
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Parcela = Left(Aux, 8)
        If Parcela = "N/A" Then
            Parcela = ""
        End If
         Flog.writeline Campoetiqueta & " : " & Parcela
    Else
        Parcela = ""
    End If
    '-----------------------------------------
    
    
    '-----------------------------------------
    'BLOQUE
    '-----------------------------------------
    If Valida_Bloque = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Bloque
        'Campoetiqueta = "Bloque"
        Campoetiqueta = EscribeLogMIToolTip("Bloque", lencod, 0)
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Bloque = Left(Aux, 8)
        If Bloque = "N/A" Then
            Bloque = ""
        End If
        Flog.writeline Campoetiqueta & " : " & Bloque
    Else
        Bloque = ""
    End If
    '-----------------------------------------
    
    '-----------------------------------------
    'SECCION
    '-----------------------------------------
    If Valida_Seccion = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Seccion
        'Campoetiqueta = "Seccion"
        Campoetiqueta = EscribeLogMIToolTip("Seccion", lencod, 0)
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Seccion = Left(Aux, 8)
        If Seccion = "N/A" Then
            Seccion = ""
        End If
        Flog.writeline Campoetiqueta & " : " & Seccion
    Else
        Seccion = ""
    End If
    '-----------------------------------------
    
    '-----------------------------------------
    'CASA
    '-----------------------------------------
    If Valida_Casa = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Casa
        'Campoetiqueta = "Casa"
        Campoetiqueta = EscribeLogMIToolTip("Casa", lencod, 0)
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Casa = Left(Aux, 80)
        If Casa = "N/A" Then
            Casa = ""
        End If
        Flog.writeline Campoetiqueta & " : " & Casa
    Else
        Casa = ""
    End If
    '-----------------------------------------
    
    '-----------------------------------------
    'CPA
    '-----------------------------------------
    If Valida_Cpa = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Cpa
        'Campoetiqueta = "Cpa"
        Campoetiqueta = EscribeLogMIToolTip("Cpa", lencod, 0)
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Cpa = Left(Aux, 20)
        If Cpa = "N/A" Then
            Cpa = ""
        End If
        Flog.writeline Campoetiqueta & " : " & Cpa
    Else
        Cpa = ""
    End If
    '-----------------------------------------
    
    '-----------------------------------------
    'Via
    '-----------------------------------------
    If Valida_via = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_via
        'Campoetiqueta = "Via"
        Campoetiqueta = EscribeLogMIToolTip("Via", lencod, 0)
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        via = Left(Aux, 30)
        If via = "N/A" Then
            via = ""
        End If
         Flog.writeline "via: " & via
    Else
        via = "N/A"
    End If
    '-----------------------------------------
    
                
    '-----------------------------------------
    'Auchr3
    '-----------------------------------------
    If Valida_Auxchr3 = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Auxchr3
        Campoetiqueta = "Auxchr3"
        pos1 = pos2 + 2
        'pos2 = Len(strReg)
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Auxchr3 = Left(Aux, 60)
        Flog.writeline Campoetiqueta & " : " & Auxchr3
    Else
        Auxchr3 = ""
    End If
    '-----------------------------------------

    '-----------------------------------------
    'Auchr4
    '-----------------------------------------
    If Valida_Auxchr4 = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Auxchr4
        Campoetiqueta = "Auxchr4"
        pos1 = pos2 + 2
        'pos2 = Len(strReg)
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Auxchr4 = Left(Aux, 60)
        Flog.writeline Campoetiqueta & " : " & Auxchr4
    Else
        Auxchr4 = ""
    End If
    '-----------------------------------------

                
    '-----------------------------------------
    'Auchr5
    '-----------------------------------------
    If Valida_Auxchr5 = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Auxchr5
        Campoetiqueta = "Auxchr5"
        pos1 = pos2 + 2
        'pos2 = Len(strReg)
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Auxchr5 = Left(Aux, 60)
        
        'valido para peru
        If Modnro = 10 Then
            Flog.writeline "Se valida el tipo de zona para Peru"
            StrSql = " SELECT codExt, nombreZona FROM tipoZona"
            StrSql = StrSql & " WHERE upper(nombreZona) = '" & UCase(Trim(Aux)) & "'"
            OpenRecordset StrSql, rs_zona
            If rs_zona.EOF Then
                Flog.writeline "No se encontro el codigo externo de la zona"
                Auxchr5 = ""
            Else
                If Not EsNulo(rs_zona!CodExt) Then
                    Auxchr5 = rs_zona!CodExt
                Else
                    Auxchr5 = ""
                End If
            End If
        End If
        'hasta aca

        Flog.writeline Campoetiqueta & " : " & Auxchr5
        
    Else
        Auxchr5 = ""
    End If
    '-----------------------------------------

    '-----------------------------------------
    'Auchr6
    '-----------------------------------------
    If Valida_Auxchr6 = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Auxchr6
        Campoetiqueta = "Auxchr6"
        pos1 = pos2 + 2
        'pos2 = Len(strReg)
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Auxchr6 = Left(Aux, 60)
        Flog.writeline Campoetiqueta & " : " & Auxchr6
    Else
        Auxchr6 = ""
    End If
    '-----------------------------------------
    
    '-----------------------------------------
    'Auchr7
    '-----------------------------------------
    If Valida_Auxchr7 = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Auxchr7
        Campoetiqueta = "Auxchr7"
        pos1 = pos2 + 2
        'pos2 = Len(strReg)
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Auxchr7 = Left(Aux, 60)
        Flog.writeline Campoetiqueta & " : " & Auxchr7
    Else
        Auxchr7 = ""
    End If
    '-----------------------------------------

    '-----------------------------------------
    'Tipo Tel 1
    '-----------------------------------------
    If Valida_Tel1 = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Tel1
        Campoetiqueta = EscribeLogMIToolTip("Tipo de Teléfono", lencod, 0)
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        tipoTelefono1 = Aux
        StrSql = "SELECT titelnro FROM tipotel "
        StrSql = StrSql & " WHERE UPPER(titeldes) = '" & UCase(tipoTelefono1) & "'"
        OpenRecordset StrSql, rs_Tel
        If rs_Tel.EOF Then
            Flog.writeline "El tipo de teléfono " & tipoTelefono1 & " No existe"
        Else
            titelnro1 = rs_Tel!titelnro
            pos1 = pos2 + 2
            pos2 = InStr(pos1, strReg, separador) - 1
            Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
            If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
                Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                RegError = RegError + 1
                Exit Sub
            End If
            Telefono1 = validatelefono(Aux)
            'FGZ - 13/05/2014 --------------------------
            'Telefono1 = EliminarCHInvalidosII(Telefono1, 3, "")
            Telefono1 = Left(Telefono1, 60)
            'FGZ - 13/05/2014 --------------------------
            
            Flog.writeline Campoetiqueta & " : " & tipoTelefono1 & ": " & Telefono1
        End If
    End If
    '-----------------------------------------
    
    '-----------------------------------------
    'Tipo Tel 2
    '-----------------------------------------
    If Valida_Tel2 = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Tel2
        Campoetiqueta = EscribeLogMIToolTip("Tipo de Teléfono", lencod, 0)
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        tipoTelefono2 = Aux
        StrSql = "SELECT titelnro FROM tipotel "
        StrSql = StrSql & " WHERE UPPER(titeldes) = '" & UCase(tipoTelefono2) & "'"
        OpenRecordset StrSql, rs_Tel
        If rs_Tel.EOF Then
            Flog.writeline "El tipo de teléfono " & tipoTelefono2 & " No existe"
        Else
            titelnro2 = rs_Tel!titelnro
            pos1 = pos2 + 2
            pos2 = InStr(pos1, strReg, separador) - 1
            Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
            If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
                Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                RegError = RegError + 1
                Exit Sub
            End If
            Telefono2 = validatelefono(Aux)
            'FGZ - 13/05/2014 --------------------------
            'Telefono2 = EliminarCHInvalidosII(Telefono2, 3, "")
            Telefono2 = Left(Telefono2, 60)
            'FGZ - 13/05/2014 --------------------------
            
            Flog.writeline Campoetiqueta & " : " & tipoTelefono2 & ": " & Telefono2
        End If
    End If
    '-----------------------------------------
    
                
                
    If Pais <> "N/A" Then
        Call ValidarPaisMpais(Pais, Nro_Pais)
    Else
        Nro_Pais = 0
    End If
    If Provincia <> "N/A" Then
        Call ValidarProvinciaMpais(Provincia, Nro_Provincia, Nro_Pais)
    Else
        Nro_Provincia = 0
    End If
    If Localidad <> "N/A" Then
        Call ValidarLocalidadMPais(Localidad, Nro_Localidad, Nro_Pais, Nro_Provincia)
    Else
        Nro_Localidad = 0
    End If
    
    If Zona <> "N/A" Then
        Call ValidarZonaMPais(Zona, Zonanro, Nro_Provincia)
    Else
        Zonanro = 0
    End If
    
    If Partido <> "N/A" Then
        Call ValidarPartidoMpais(Partido, Partnro)
    Else
        Partnro = 0
    End If
    
    If via <> "N/A" Then
        Call ValidarVia(via, Nro_Via)
    Else
        Nro_Via = 0
    End If
                
    If (IngresoDom = True) And (Nro_Localidad = 0) Then
        Texto = ": " & " - Debe Ingresar la Localidad."
        NroColumna = 9
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    If (IngresoDom = True) And (Nro_Provincia = 0) Then
        Texto = ": " & " - Debe Ingresar la Provincia."
        NroColumna = 10
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    If (IngresoDom = True) And (Nro_Pais = 0) Then
        Texto = ": " & " - Debe Ingresar el Pais."
        NroColumna = 11
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
            
    '===fin lectura campos===
                
    ' Inserto el Domicilio
    If rs.State = adStateOpen Then
      rs.Close
    End If
              
    If (IngresoDom = True) Then
      If (Nro_Localidad <> 0 And Nro_Provincia <> 0 And Nro_Pais <> 0) Then
          StrSql = "SELECT * FROM cabdom  "
          StrSql = StrSql & " WHERE tipnro = 1"
          StrSql = StrSql & " AND ternro = " & NroTercero
          StrSql = StrSql & " AND domdefault = -1"
          StrSql = StrSql & " AND tidonro = " & tidonro
          StrSql = StrSql & " AND modnro = " & Modnro
          If rs.State = adStateOpen Then rs.Close
          OpenRecordset StrSql, rs
          If rs.EOF Then
          
            'Ahora me fijo si existe otro modelo con ese tipo de domicilio
            StrSql = "SELECT * FROM cabdom  "
            StrSql = StrSql & " WHERE tipnro = 1"
            StrSql = StrSql & " AND ternro = " & NroTercero
            StrSql = StrSql & " AND domdefault = -1"
            StrSql = StrSql & " AND tidonro = " & tidonro
            OpenRecordset StrSql, rs_cab
            If rs_cab.EOF Then
                StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro,modnro) "
                StrSql = StrSql & " VALUES(1," & NroTercero & ",-1," & tidonro & "," & Modnro & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                
                NroDom = getLastIdentity(objConn, "cabdom")
                
                'StrSql = " INSERT INTO detdom(domnro,calle,nro,piso,oficdepto,entrecalles,"
                'StrSql = StrSql & "locnro,provnro,paisnro,vianro) "
                StrSql = "INSERT INTO detdom("
                StrSql = StrSql & " domnro, Calle , Nro, Sector"
                StrSql = StrSql & ", Torre, Piso, oficdepto, Manzana"
                StrSql = StrSql & ", codigopostal, locnro, provnro, paisnro"
                StrSql = StrSql & ", zonanro, partnro, Barrio, auxchr1"
                StrSql = StrSql & ", auxchr2, Email, Entrecalles, kilometro"
                StrSql = StrSql & ", circunscripcion, cuerpo, lote, parcela"
                StrSql = StrSql & ", bloque, seccion, casa, cpa, vianro"
                StrSql = StrSql & ", auxchr3 , auxchr4, auxchr5, auxchr6, auxchr7"
                StrSql = StrSql & ")"
                StrSql = StrSql & " VALUES ("
                StrSql = StrSql & NroDom & ",'" & Calle & "','" & Nro_Nrodom & "','" & Sector & "'"
                StrSql = StrSql & ",'" & Torre & "','" & Piso & "','" & Depto & "','" & Manzana & "'"
                StrSql = StrSql & ",'" & Codigopostal & "'," & Nro_Localidad & "," & Nro_Provincia & "," & Nro_Pais
                StrSql = StrSql & "," & Zonanro & "," & Partnro & ",'" & Barrio & "','" & Auxchr1 & "'"
                StrSql = StrSql & ",'" & Auxchr2 & "','" & Email & "','" & Entrecalles & "','" & Kilometro & "'"
                StrSql = StrSql & ",'" & Circunscripcion & "','" & Cuerpo & "','" & Lote & "','" & Parcela & "'"
                StrSql = StrSql & ",'" & Bloque & "','" & Seccion & "','" & Casa & "','" & Cpa & "'," & Nro_Via
                StrSql = StrSql & ",'" & Auxchr3 & "','" & Auxchr4 & "','" & Auxchr5 & "','" & Auxchr6 & "','" & Auxchr7 & "'"
                StrSql = StrSql & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                        
                Texto = ": " & "Inserte el Domicilio - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
              
              
                If Telefono1 <> "" Then
                    StrSql = " INSERT INTO telefono(domnro,telnro,tipotel) "
                    StrSql = StrSql & " VALUES(" & NroDom & ",'" & Telefono1 & "'," & titelnro1 & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = ": " & "Telefono 1 Insertado"
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
                  
                If Telefono2 <> "" Then
                    StrSql = " INSERT INTO telefono(domnro,telnro,tipotel) "
                    StrSql = StrSql & " VALUES(" & NroDom & ",'" & Telefono2 & "'," & titelnro2 & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = ": " & "Telefono 2 insertado "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            Else
                Texto = ": " & " Ya existe un domicilio asociado al empleado del tipo cargado, pero con otro modelo de domicilio."
                Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, strReg)
                Texto = ": " & " No se inserto el Domicilio."
                Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
            rs_cab.Close
          Else
              StrSql = " UPDATE detdom SET "
              StrSql = StrSql & "Calle='" & Calle & "'"
              StrSql = StrSql & ", Nro='" & Nro_Nrodom & "'"
              StrSql = StrSql & ", Sector='" & Sector & "'"
              StrSql = StrSql & ", Torre='" & Torre & "'"
              StrSql = StrSql & ", Piso='" & Piso & "'"
              StrSql = StrSql & ", oficdepto='" & Depto & "'"
              StrSql = StrSql & ", Manzana='" & Manzana & "'"
              StrSql = StrSql & ", codigopostal='" & Codigopostal & "'"
              StrSql = StrSql & ", locnro=" & Nro_Localidad
              StrSql = StrSql & ", provnro=" & Nro_Provincia
              StrSql = StrSql & ", paisnro=" & Nro_Pais
              StrSql = StrSql & ", zonanro=" & Zonanro
              StrSql = StrSql & ", partnro=" & Partnro
              StrSql = StrSql & ", Barrio='" & Barrio & "'"
              If Excep_Auxchr1 = True Then
                If Auxchr1 <> "" Then
                    StrSql = StrSql & ", auxchr1='" & Auxchr1 & "'"
                    StrSql = StrSql & ", auxchr2='" & Auxchr2 & "'"
                End If
              Else
                  StrSql = StrSql & ", auxchr1='" & Auxchr1 & "'"
                  StrSql = StrSql & ", auxchr2='" & Auxchr2 & "'"
              End If
              StrSql = StrSql & ", Email='" & Email & "'"
              StrSql = StrSql & ", Entrecalles='" & Entrecalles & "'"
              StrSql = StrSql & ", kilometro='" & Kilometro & "'"
              StrSql = StrSql & ", circunscripcion='" & Circunscripcion & "'"
              StrSql = StrSql & ", cuerpo='" & Cuerpo & "'"
              StrSql = StrSql & ", lote='" & Lote & "'"
              StrSql = StrSql & ", parcela='" & Parcela & "'"
              StrSql = StrSql & ", bloque='" & Bloque & "'"
              StrSql = StrSql & ", seccion='" & Seccion & "'"
              StrSql = StrSql & ", casa='" & Casa & "'"
              StrSql = StrSql & ", cpa='" & Cpa & "'"
              StrSql = StrSql & ", vianro=" & Nro_Via
              StrSql = StrSql & ", auxchr3='" & Auxchr3 & "'"
              StrSql = StrSql & ", auxchr4='" & Auxchr4 & "'"
              StrSql = StrSql & ", auxchr5='" & Auxchr5 & "'"
              StrSql = StrSql & ", auxchr6='" & Auxchr6 & "'"
              StrSql = StrSql & ", auxchr7='" & Auxchr7 & "'"
              StrSql = StrSql & " WHERE domnro = " & rs!domnro
              
              objConn.Execute StrSql, , adExecuteNoRecords
          
              Texto = ": " & "Domicilio Actualizado - "
              Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
              
              
              If Telefono1 <> "" Then
                  StrSql = " SELECT * FROM telefono WHERE domnro = " & rs!domnro
                  StrSql = StrSql & " AND tipotel = " & titelnro1
                  StrSql = StrSql & " AND telnro = '" & Telefono1 & "'"
                  OpenRecordset StrSql, rs_Tel
                  If rs_Tel.EOF Then
                    StrSql = " INSERT INTO telefono(domnro,telnro,tipotel) "
                    StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & Telefono1 & "'," & titelnro1 & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = ": " & "Telefono 1 Insertado"
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                  Else
                    'FGZ - 13/05/2014 ----------------------------------------------------
                    Texto = "El teléfono 1 ya existe para este domicilio"
                    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    
                    'StrSql = " UPDATE telefono SET telnro= '" & Telefono1 & "' WHERE domnro = " & rs!domnro
                    'StrSql = StrSql & " AND tipotel = " & titelnro1
                    'StrSql = StrSql & " AND telnro = " & Telefono1
                    'objConn.Execute StrSql, , adExecuteNoRecords
                    'Texto = ": " & "Telefono 1 Actualizado"
                    'Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    'FGZ - 13/05/2014 ----------------------------------------------------
                  End If
              End If
                  
              If Telefono2 <> "" Then
                  StrSql = " SELECT * FROM telefono WHERE domnro = " & rs!domnro
                  StrSql = StrSql & " AND tipotel = " & titelnro2
                  StrSql = StrSql & " AND telnro = '" & Telefono2 & "'"
                  OpenRecordset StrSql, rs_Tel
                  If rs_Tel.EOF Then
                    StrSql = " INSERT INTO telefono(domnro,telnro,tipotel) "
                    StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & Telefono2 & "'," & titelnro2 & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = ": " & "Telefono 2 insertado "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                  Else
                    'FGZ - 13/05/2014 ----------------------------------------------------
                    Texto = "El teléfono 2 ya existe para este domicilio"
                    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    
                    'StrSql = " UPDATE telefono SET telnro= '" & Telefono2 & "' WHERE domnro = " & rs!domnro
                    'StrSql = StrSql & " AND tipotel = " & titelnro2
                    'StrSql = StrSql & " AND telnro = " & Telefono2
                    'objConn.Execute StrSql, , adExecuteNoRecords
                    'Texto = ": " & "Telefono 2 Actualizado"
                    'Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    'FGZ - 13/05/2014 ----------------------------------------------------
                  End If

              End If
                                              
          End If
      End If
    End If
    
Texto = ": " & "Linea procesada correctamente "
Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)

OK = True
         
FinLinea:
If rs.State = adStateOpen Then
    rs.Close
End If
Exit Sub

SaltoLinea:
    Texto = ": " & " - Error:" & Err.Description & " -- Ultima consulta: " & StrSql
    NroColumna = 1
    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    MyRollbackTrans
    OK = False
    GoTo FinLinea
End Sub
Public Sub LineaModelo_922(ByVal strReg As String, ByRef OK As Boolean)
' *********************   FORMATO DINAMICO DESDE TABLA modelo_etiq  *********************
' SI SE AGREGA UN CAMPO EN LA TABLA detdom SE DEBE AGREGAR AL ARREGLO DE CAMPOS (IDEM SI SE MODIFICA LA LONGITUD DEL MISMO)
' ANTE UNA MODIFICACIÓN DEL PUNTO ANTERIOR SE DEBE TENER EN CUENTA EL INCLUDE domicilios.inc
' ***************************************************************************************
' ---------------------------------------------------------------------------------------------
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de Domicilios Multipais por Documento.
' Autor      : Gonzalez Nicolás
' Fecha      : 04/12/2014
' Ultima Mod.: 29/06/2015 - Gonzalez Nicolás - Se agregó excepción para modnro 9 -> Tipo de Logradouro
' 26/08/2015 - Gonzalez Nicolás - Se amplio telefono1 y telefono2 a 60
' 02/12/2015 - Gonzalez Nicolás - Teléfono Principal
' 10/12/2015 - Gonzalez Nicolás - Teléfonos enmascarados
' 12/01/2016 - Gonzalez Nicolás - Controla cuando el tipo de domicilio no existe.

Dim pos1                    As Long
Dim pos2                    As Long
Dim StrSqlAux               As String
Dim tipodomi                As String   'Tipo Domicilio           -- tipodomi.tidodes
Dim tipoModelo              As String   'Moddesabr                -- modelo_etiq.moddesabr
Dim tidonro                 As Long     'TipoDomicilio            -- tipodomi.tidonro
Dim Nro_Localidad           As Long
Dim Nro_Provincia           As Long
Dim Nro_Via                 As Long
Dim Nro_Pais                As Long
Dim NroDom                  As Long
Dim Modnro                  As Long
Dim Zonanro                 As Long     'detdom.zonanro
Dim Partnro                 As Long     'detdom.parntro

Dim tipoTelefono1 As String ' Tipo Telefono 1
Dim Telefono1 As String ' N° Telefono 1
Dim titelnro1 As Long
Dim teldefault1 As Integer
Dim Obl_Tel1 As Boolean
Dim Valida_Tel1 As Boolean

Dim tipoTelefono2 As String ' Tipo Telefono 2
Dim Telefono2 As String ' N° Telefono 2
Dim titelnro2 As Long
Dim teldefault2 As Integer
Dim Valida_Tel2 As Boolean
Dim Obl_Tel2 As Boolean

Dim TelMascaras As Boolean 'Utiliza máscaras telefónicas

'TELÉFONOS ENMASCARADOS
Dim Telcarga As String
Dim TelNroMask As String
Dim TelCargaMask As String
'------------------------------


Dim MarcaTelPrincipal As Boolean
Dim TelPrincipalCodigo As Long

Dim tidsigla As String
Dim NroDoc As String
Dim a As Long
Dim b As Long
Dim IngresoDom As Boolean
Dim lencod As String
Dim Nro_Nrodom      As String
Dim NroTercero      As Long
Dim Auxiliar As String
Dim rs As New ADODB.Recordset
Dim rs_emp  As New ADODB.Recordset
Dim rs_cab As New ADODB.Recordset
Dim rs_Tel As New ADODB.Recordset
Dim rs_Tel2 As New ADODB.Recordset
Dim rs_zona As New ADODB.Recordset


Dim EtiNullObl As String
Dim EtiCampo As String
EtiNullObl = EscribeLogMI("con valor Nulo y es obligatorio")
EtiCampo = EscribeLogMI("campo")
'***********************************************************************************************************************
'ARMA ARREGLO CON LOS CAMPOS DE LA TABLA DETDOM. ESTOS DEBEN CORRESPONDER EN EL MISMO ORDEN QUE EXISTEN EN DICHA TABLA
'***********************************************************************************************************************
Dim ArrDetdom(33, 3)
ArrDetdom(0, 0) = "calle"
ArrDetdom(0, 3) = 250

ArrDetdom(1, 0) = "nro"
ArrDetdom(1, 3) = 8

ArrDetdom(2, 0) = "sector"
ArrDetdom(2, 3) = 8

ArrDetdom(3, 0) = "torre"
ArrDetdom(3, 3) = 8

ArrDetdom(4, 0) = "piso"
ArrDetdom(4, 3) = 8

ArrDetdom(5, 0) = "oficdepto"
ArrDetdom(5, 3) = 8

ArrDetdom(6, 0) = "manzana"
ArrDetdom(6, 3) = 8

ArrDetdom(7, 0) = "codigopostal"
ArrDetdom(7, 3) = 12

ArrDetdom(8, 0) = "locnro"
ArrDetdom(8, 3) = -1

ArrDetdom(9, 0) = "provnro"
ArrDetdom(9, 3) = -1

ArrDetdom(10, 0) = "paisnro"
ArrDetdom(10, 3) = -1

ArrDetdom(11, 0) = "zonanro"
ArrDetdom(11, 3) = -1

ArrDetdom(12, 0) = "partnro"
ArrDetdom(12, 3) = -1

ArrDetdom(13, 0) = "barrio"
ArrDetdom(13, 3) = 30

ArrDetdom(14, 0) = "auxchr1"
ArrDetdom(14, 3) = 60

ArrDetdom(15, 0) = "auxchr2"
ArrDetdom(15, 3) = 60

ArrDetdom(16, 0) = "email"
ArrDetdom(16, 3) = 50

ArrDetdom(17, 0) = "entrecalles"
ArrDetdom(17, 3) = 80

ArrDetdom(18, 0) = "kilometro"
ArrDetdom(18, 3) = 8

ArrDetdom(19, 0) = "circunscripcion"
ArrDetdom(19, 3) = 8

ArrDetdom(20, 0) = "cuerpo"
ArrDetdom(20, 3) = 8

ArrDetdom(21, 0) = "lote"
ArrDetdom(21, 3) = 8

ArrDetdom(22, 0) = "parcela"
ArrDetdom(22, 3) = 8

ArrDetdom(23, 0) = "bloque"
ArrDetdom(23, 3) = 8

ArrDetdom(24, 0) = "seccion"
ArrDetdom(24, 3) = 8

ArrDetdom(25, 0) = "casa"
ArrDetdom(25, 3) = 80

ArrDetdom(26, 0) = "cpa"
ArrDetdom(26, 3) = 20

ArrDetdom(27, 0) = "vianro"
ArrDetdom(27, 3) = -1

ArrDetdom(28, 0) = "auxchr3"
ArrDetdom(28, 3) = 80

ArrDetdom(29, 0) = "auxchr4"
ArrDetdom(29, 3) = 80

ArrDetdom(30, 0) = "auxchr5"
ArrDetdom(30, 3) = 80

ArrDetdom(31, 0) = "auxchr6"
ArrDetdom(31, 3) = 80

ArrDetdom(32, 0) = "auxchr7"
ArrDetdom(32, 3) = 80

'Formateo las otras posiciones
For a = 0 To 32
    ArrDetdom(a, 1) = False
    ArrDetdom(a, 2) = ""
Next
'***********************************************************************************************************************
'***********************************************************************************************************************
'***********************************************************************************************************************

'---------- TELÉFONOS -------
Obl_Tel1 = False
Valida_Tel1 = True

Obl_Tel2 = False
Valida_Tel2 = True

MarcaTelPrincipal = False

TelMascaras = False

TelPrincipalCodigo = 1 'DEFAULT TIPO TELÉFONO PARTICULAR
teldefault1 = 0
teldefault2 = 0

'----------------------------


    On Error GoTo SaltoLinea

    LineaCarga = LineaCarga + 1
    
    Flog.writeline
    FlogE.writeline
    FlogP.writeline
       
       
    'Flog.writeline "Modelo;" & ModeloDom
    '-----------------------------------------------------------------------
    'BUSCO IDIOMA DEL MODELO
    '-----------------------------------------------------------------------
    
    StrSql = "SELECT lencod FROM modelo_etiq"
    StrSql = StrSql & " INNER JOIN lenguaje ON lenguaje.paisnro = modelo_etiq.paisnro"
    StrSql = StrSql & " WHERE modnro = " & ModeloDom
    OpenRecordset StrSql, rs_emp
    If (Not rs_emp.EOF) Then
        lencod = rs_emp!lencod
    Else
        lencod = "esAR"
    End If
    rs_emp.Close
    
       
    'SI NO TENGO EL SEPARADOR AL FINAL DEL STRING, SE LO AGREGO.
    If Right(strReg, 1) <> separador Then
        strReg = strReg & separador
    End If
    
    IngresoDom = True
    
    '*******************************************************************************************
    ' SIGLA DEL DOCUMENTO
    '*******************************************************************************************
    NroColumna = 1
    Obligatorio = True
    Campoetiqueta = EscribeLogMIToolTip("Sigla", lencod, 0)
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    Else
        tidsigla = Aux
        
        '*******************************************************************************************
        ' N° DE DOCUMENTO
        '*******************************************************************************************
        NroColumna = NroColumna + 1
        Obligatorio = True
        Campoetiqueta = EscribeLogMIToolTip("Documento", lencod, 0)
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        NroDoc = Aux
        
        StrSql = "SELECT ter_doc.tidnro,ter_doc.nrodoc,ter_doc.ternro,tercero.ternom,tercero.ternom2,tercero.terape,tercero.terape2 FROM ter_doc"
        StrSql = StrSql & " INNER JOIN tipodocu ON tipodocu.tidnro = ter_doc.tidnro"
        StrSql = StrSql & " INNER JOIN tercero ON tercero.ternro = ter_doc.ternro"
        StrSql = StrSql & " WHERE nrodoc = '" & NroDoc & "' "
        StrSql = StrSql & " AND tidsigla = '" & tidsigla & "'"
        OpenRecordset StrSql, rs_emp
        If (Not rs_emp.EOF) Then
            NroTercero = rs_emp!Ternro
        Else
            IngresoDom = False
            Texto = ": " & " - Campo " & Campoetiqueta & " El documento no existe"
            NroColumna = 1
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        rs_emp.Close
    End If
    
    
    
    '*******************************************************************************************
    'TIPO DE DOMICILIO
    '*******************************************************************************************
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = EscribeLogMIToolTip("Tipo de Domicilio", lencod, 0)
    
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    tipodomi = Left(Aux, 30)
    If tipodomi = "N/A" Then
        tipodomi = ""
        tidonro = 0
        IngresoDom = False
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    Else
        'Busco el tipo de Domicilio con la descripción ingresada
        StrSql = "SELECT tidonro FROM tipodomi  "
        StrSql = StrSql & " WHERE UPPER(tidodes) = UPPER('" & tipodomi & "')"
           
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            tidonro = rs!tidonro
        Else
            tidonro = 0
            IngresoDom = False
            
            Texto = ": " & " - Campo " & Campoetiqueta & " El tipo de domicilio no existe"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        rs.Close
    End If
    '------------------------------------------------
    
    'Seteo en True
    'IngresoDom = True
    
    Modnro = ModeloDom
    
    '------------------------------------------------------------
    'CONTROLO SI EL MODELO MARCA COMO PRINCIPAL EL TEL. INGRESADO
    Select Case Modnro
        Case 10: 'PERU
            MarcaTelPrincipal = True
            TelPrincipalCodigo = 1
            TelMascaras = True
    End Select
    
    Dim ArrModExpcarga
    Dim ModTelcarga
    Dim ArrCampoVal
    '*******************************************************************************************
    ' BUSCO LA EXPRESIÓN PARA EL MODELO SELECCIONADO
    '*******************************************************************************************
    StrSql = "SELECT * FROM modelo_etiq "
    StrSql = StrSql & " INNER JOIN modelo_etiq_tel ON modelo_etiq_tel.modnro = modelo_etiq.modnro"
    StrSql = StrSql & " WHERE modelo_etiq.modnro = " & Modnro
    OpenRecordset StrSql, rs_emp
    If Not rs_emp.EOF Then
        Flog.writeline "**** " & EscribeLogMI("Modelo") & ": " & UCase(rs_emp!moddesabr) & " ****"
        If EsNulo(rs_emp!modcarga) Then
            IngresoDom = False
            Texto = ": ¡¡ ERROR DE FORMATO !!  "
            NroColumna = 0
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        Else
            '------------------------------------------------------
            'Recupero exresión para la carga de teléfonos
            If Not EsNulo(rs_emp!ModTelcarga) And EsNulo(rs_emp!modtelprog) Then
                ModTelcarga = rs_emp!ModTelcarga
            End If
            '------------------------------------------------------
            
            ArrModExpcarga = Split(rs_emp!modcarga, "@") 'calle,-1"
            'A medida que recorro valido los campos cargados
            For a = 0 To UBound(ArrModExpcarga)
                ArrCampoVal = Split(ArrModExpcarga(a), ",")
                
                'Recorro arreglo principal hasta que coincida con el campo que busco
                For b = 0 To UBound(ArrDetdom)
                    If LCase(ArrCampoVal(0)) = ArrDetdom(b, 0) Then
                        'Seteo True/False Según configuración de Modelo
                        ArrDetdom(b, 1) = CBool(ArrCampoVal(1))
                        
                        NroColumna = NroColumna + 1
                        Obligatorio = CBool(ArrCampoVal(1))
                        Campoetiqueta = ArrCampoVal(0)

                        pos1 = pos2 + 2
                        pos2 = InStr(pos1, strReg, separador) - 1
                        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
                        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
                            IngresoDom = False
                            Texto = ": - " & EtiCampo & ": " & Campoetiqueta & " => " & EtiNullObl
                            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                            Exit Sub
                        End If
                        Aux = EliminarCHInvalidosII(Aux, 1, "")
                        
                        'Asigno valor recuperado y lo corta si es un String.
                        If ArrDetdom(b, 3) <> -1 Then
                            'Si tiene asignado un valor es un string
                            ArrDetdom(b, 2) = Left(Aux, ArrDetdom(b, 3))
                        Else
                            ArrDetdom(b, 2) = Aux
                        End If
                        
                        '---------------------------------------------
                        'EXCEPCIÓN - SOLO VÁLIDO PARA MODELO 10 PERU
                        '----------------------------------------------
                        If Modnro = 10 And LCase(ArrCampoVal(0)) = "auxchr5" Then
                            Flog.writeline "Se valida el tipo de zona para Peru"
                            StrSql = " SELECT codExt, nombreZona FROM tipoZona"
                            StrSql = StrSql & " WHERE upper(nombreZona) = '" & UCase(Trim(ArrDetdom(b, 2))) & "'"
                            OpenRecordset StrSql, rs_zona
                            If rs_zona.EOF Then
                                Flog.writeline "No se encontro el codigo externo de la zona"
                                ArrDetdom(b, 2) = ""
                            Else
                                If Not EsNulo(rs_zona!CodExt) Then
                                    ArrDetdom(b, 2) = rs_zona!CodExt
                                Else
                                    ArrDetdom(b, 2) = ""
                                End If
                            End If
                        End If
                        
                        
                        '---------------------------------------------
                        'EXCEPCIÓN - SOLO VÁLIDO PARA MODELO 9 BRASIL
                        '----------------------------------------------
                        If Modnro = 9 And LCase(ArrCampoVal(0)) = "auxchr1" Then
                            Auxiliar = ArrDetdom(b, 2)
                            Aux = ""
                            Call ValidarLogradouro(Auxiliar, Aux) 'Retorna valor para Auxchr1 y Auxchr2
                            If Auxiliar = "" Then
                                IngresoDom = False
                                Texto = ": - " & EtiCampo & ": " & Campoetiqueta & " => Debe ser un Tipo de Logradouro correcto."
                                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                                Exit Sub
                            Else
                                ArrDetdom(b, 2) = Auxiliar
                                ArrDetdom(15, 2) = Aux
                                Flog.writeline Campoetiqueta & ": " & ArrDetdom(15, 2)
                            End If
                        End If
                        
                        '----------------------------------------------
                        'Si el campo esta configurado como N/A lo blanqueo
                        If ArrDetdom(b, 2) = "N/A" Then
                            ArrDetdom(b, 2) = ""
                        End If

                        Flog.writeline Campoetiqueta & ": " & ArrDetdom(b, 2)
                        
                        Exit For
                    End If
                Next
            
            Next
        End If
    End If

' Localidad = "N/A"
' Provincia = "N/A"
' Pais = "N/A"
' Zona = "N/A"
' Partido = "N/A"
' via = "N/A"
    
    '-----------------------------------------
    'Tipo Tel 1
    '-----------------------------------------
    If Valida_Tel1 = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Tel1
        Campoetiqueta = EscribeLogMIToolTip("Tipo de Teléfono", lencod, 0)
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": - " & EtiCampo & ": " & Campoetiqueta & " => " & EtiNullObl
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        tipoTelefono1 = Aux
        StrSql = "SELECT titelnro FROM tipotel "
        StrSql = StrSql & " WHERE UPPER(titeldes) = '" & UCase(tipoTelefono1) & "'"
        OpenRecordset StrSql, rs_Tel
        If rs_Tel.EOF Then
            Flog.writeline "El tipo de teléfono " & tipoTelefono1 & " No existe"
        Else
            titelnro1 = rs_Tel!titelnro
            pos1 = pos2 + 2
            pos2 = InStr(pos1, strReg, separador) - 1
            Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
            If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
                Texto = ": - " & EtiCampo & ": " & Campoetiqueta & " => " & EtiNullObl
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                RegError = RegError + 1
                Exit Sub
            End If
            Telefono1 = validatelefono(Aux)
            Telefono1 = Left(Telefono1, 60)
            Flog.writeline Campoetiqueta & " : " & tipoTelefono1 & ": " & Telefono1
        End If
    End If
    '-----------------------------------------
    
    '-----------------------------------------
    'Tipo Tel 2
    '-----------------------------------------
    If Valida_Tel2 = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Tel2
        Campoetiqueta = EscribeLogMIToolTip("Tipo de Teléfono", lencod, 0)
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": - " & EtiCampo & ": " & Campoetiqueta & " => " & EtiNullObl
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        tipoTelefono2 = Aux
        StrSql = "SELECT titelnro FROM tipotel "
        StrSql = StrSql & " WHERE UPPER(titeldes) = '" & UCase(tipoTelefono2) & "'"
        OpenRecordset StrSql, rs_Tel
        If rs_Tel.EOF Then
            Flog.writeline "El tipo de teléfono " & tipoTelefono2 & " No existe"
        Else
            titelnro2 = rs_Tel!titelnro
            pos1 = pos2 + 2
            pos2 = InStr(pos1, strReg, separador) - 1
            Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
            If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
                Texto = ": - " & EtiCampo & ": " & Campoetiqueta & " => " & EtiNullObl
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                RegError = RegError + 1
                Exit Sub
            End If
            Telefono2 = validatelefono(Aux)
            Telefono2 = Left(Telefono2, 60)
            Flog.writeline Campoetiqueta & " : " & tipoTelefono2 & ": " & Telefono2
        End If
    End If
    '-----------------------------------------
    
                
    'CONTROLO SI EXISTE EL PAIS
    If ArrDetdom(10, 2) <> "N/A" Then
        Call ValidarPaisMpais(CStr(ArrDetdom(10, 2)), Nro_Pais)
    Else
        Nro_Pais = 0
    End If
    ArrDetdom(10, 2) = Nro_Pais
    
    If ArrDetdom(9, 2) <> "N/A" Then
        Call ValidarProvinciaMpais(CStr(ArrDetdom(9, 2)), Nro_Provincia, Nro_Pais)
    Else
        Nro_Provincia = 0
    End If
    ArrDetdom(9, 2) = Nro_Provincia
    
    
    If ArrDetdom(8, 2) <> "N/A" Then
        Call ValidarLocalidadMPais(CStr(ArrDetdom(8, 2)), Nro_Localidad, Nro_Pais, Nro_Provincia)
    Else
        Nro_Localidad = 0
    End If
    ArrDetdom(8, 2) = Nro_Localidad
    
    If ArrDetdom(11, 2) <> "N/A" Then
        Call ValidarZonaMPais(CStr(ArrDetdom(11, 2)), Zonanro, Nro_Provincia)
    Else
        Zonanro = 0
    End If
    ArrDetdom(11, 2) = Zonanro
    
    If ArrDetdom(12, 2) <> "N/A" Then
        Call ValidarPartidoMpais(CStr(ArrDetdom(12, 2)), Partnro)
    Else
        Partnro = 0
    End If
    ArrDetdom(12, 2) = Partnro
    
    If ArrDetdom(27, 2) <> "N/A" Then
        Call ValidarVia(CStr(ArrDetdom(27, 2)), Nro_Via)
    Else
        Nro_Via = 0
    End If
    ArrDetdom(27, 2) = Nro_Via
    
    '------------------------------------------------------------------------------------
    'PAIS / PROVINCIA / LOCALIDAD SIEMPRE DEBEN SER OBLIGATORIOS
    If (IngresoDom = True) And (Nro_Localidad = 0 And ArrDetdom(8, 1) = True) Then
        Texto = ": " & " - " & EscribeLogMI("Debe Ingresar la Localidad.")
        NroColumna = 9
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    If (IngresoDom = True) And (Nro_Provincia = 0) Then
        Texto = ": " & " - " & EscribeLogMI("Debe Ingresar la Provincia.")
        NroColumna = 10
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    If (IngresoDom = True) And (Nro_Pais = 0) Then
        Texto = ": " & " - " & EscribeLogMI("MSG Debe ingresar un Pais.")
        NroColumna = 11
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If

    
    
    
    
    '------------------------------------------------------------------------------------
                
    ' Inserto el Domicilio
    If rs.State = adStateOpen Then
      rs.Close
    End If
              
    If (IngresoDom = True) Then
        If ((Nro_Localidad <> 0 Or ArrDetdom(8, 1) = False) And Nro_Provincia <> 0 And Nro_Pais <> 0) Then
            StrSql = "SELECT * FROM cabdom  "
            StrSql = StrSql & " WHERE tipnro = 1"
            StrSql = StrSql & " AND ternro = " & NroTercero
            StrSql = StrSql & " AND domdefault = -1"
            StrSql = StrSql & " AND tidonro = " & tidonro
            StrSql = StrSql & " AND modnro = " & Modnro
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If rs.EOF Then
                'Ahora me fijo si existe otro modelo con ese tipo de domicilio
                StrSql = "SELECT * FROM cabdom  "
                StrSql = StrSql & " WHERE tipnro = 1"
                StrSql = StrSql & " AND ternro = " & NroTercero
                StrSql = StrSql & " AND domdefault = -1"
                StrSql = StrSql & " AND tidonro = " & tidonro
                OpenRecordset StrSql, rs_cab
                If rs_cab.EOF Then
                    StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro,modnro) "
                    StrSql = StrSql & " VALUES(1," & NroTercero & ",-1," & tidonro & "," & Modnro & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    NroDom = getLastIdentity(objConn, "cabdom")
                    '************************************************************************************************
                    'ARMO INSERT
                    StrSql = "INSERT INTO detdom("
                    StrSql = StrSql & " domnro"
                    StrSqlAux = ") VALUES (" & NroDom
                    For a = 0 To UBound(ArrDetdom) - 1
                        StrSql = StrSql & "," & ArrDetdom(a, 0)
                        If (ArrDetdom(a, 3) = -1) Then
                            StrSqlAux = StrSqlAux & "," & ArrDetdom(a, 2)
                        Else
                            If EsNulo(ArrDetdom(a, 2)) Then
                                StrSqlAux = StrSqlAux & ",NULL"
                            Else
                                StrSqlAux = StrSqlAux & ",'" & ArrDetdom(a, 2) & "'"
                            End If
                        End If
                    Next
                    StrSql = StrSql & StrSqlAux & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    '************************************************************************************************
                    Texto = ": " & EscribeLogMI("Inserte el Domicilio") & "- "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                            
                    teldefault1 = 0
                    If Telefono1 <> "" Then
                        '--------------------------------------------
                        'CONTROLO MARCA DE TEL PRINCIPAL
                        If MarcaTelPrincipal = True And titelnro1 = TelPrincipalCodigo Then
                            StrSql = "UPDATE telefono SET teldefault = 0 WHERE domnro = " & NroDom
                            objConn.Execute StrSql, , adExecuteNoRecords
                            teldefault1 = -1
                        End If
                        '--------------------------------------------
                        '--------------------------------------------
                        'SOLO VALIDO PARA PERU  | CELULAR (2)
                        '--------------------------------------------
                        If (MarcaTelPrincipal = True And Modnro = 10 And titelnro1 = 2) Then
                            'SI NO EXISTE NINGUN TELEFONO MARCADO COMO  PRINCIPAL, MARCO EL CELULAR COMO DEFAULT
                            StrSql = "SELECT telid FROM telefono "
                            StrSql = StrSql & " WHERE domnro = " & NroDom
                            StrSql = StrSql & " AND teldefault = -1 "
                            OpenRecordset StrSql, rs_Tel
                            If rs_Tel.EOF Then
                                teldefault1 = -1
                            End If
                        End If
                        '--------------------------------------------
                    
                        'ENMASCARA TELEFONOS -------------------------------------------------------------------
                        Telcarga = ""
                        TelNroMask = ""
                        TelCargaMask = ""
                        If TelMascaras = True Then
                            TraerTelefonosMask Modnro, titelnro1, ModTelcarga, Telefono1, Telcarga, TelNroMask, TelCargaMask, Nro_Pais, Nro_Provincia, Zonanro, Partnro, Nro_Localidad, Nro_Via
                        End If
                        '---------------------------------------------------------------------------------------
                        StrSql = " INSERT INTO telefono(domnro,telnro,tipotel,teldefault,telcarga,telnromask,telcargamask) "
                        StrSql = StrSql & " VALUES(" & NroDom & ",'" & Telefono1 & "'," & titelnro1 & "," & teldefault1
                        StrSql = StrSql & "," & IIf(Telcarga = "", "Null", "'" & Telcarga & "'")
                        StrSql = StrSql & "," & IIf(TelNroMask = "", "Null", "'" & TelNroMask & "'")
                        StrSql = StrSql & "," & IIf(TelCargaMask = "", "Null", "'" & TelCargaMask & "'")
                        StrSql = StrSql & ")"
                        
                        objConn.Execute StrSql, , adExecuteNoRecords
                        Texto = ": " & EscribeLogMI("Telefono insertado")
                        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    End If
                  
                    teldefault2 = 0
                    If Telefono2 <> "" Then
                        '--------------------------------------------
                        'CONTROLO MARCA DE TEL PRINCIPAL
                        If MarcaTelPrincipal = True And titelnro2 = TelPrincipalCodigo Then
                            StrSql = "UPDATE telefono SET teldefault = 0 WHERE domnro = " & NroDom
                            objConn.Execute StrSql, , adExecuteNoRecords
                            teldefault2 = -1
                        End If
                        '--------------------------------------------
                    
                        '--------------------------------------------
                        'SOLO VALIDO PARA PERU  | CELULAR (2)
                        '--------------------------------------------
                        If (MarcaTelPrincipal = True And Modnro = 10 And titelnro2 = 2) Then
                            'SI NO EXISTE NINGUN TELEFONO MARCADO COMO  PRINCIPAL, MARCO EL CELULAR COMO DEFAULT
                            StrSql = "SELECT telid FROM telefono "
                            StrSql = StrSql & " WHERE domnro = " & NroDom
                            StrSql = StrSql & " AND teldefault = -1 "
                            OpenRecordset StrSql, rs_Tel
                            If rs_Tel.EOF Then
                                teldefault1 = -1
                            End If
                        End If
                        '--------------------------------------------
                    
                        'ENMASCARA TELEFONOS -------------------------------------------------------------------
                        Telcarga = ""
                        TelNroMask = ""
                        TelCargaMask = ""
                        If TelMascaras = True Then
                            TraerTelefonosMask Modnro, titelnro2, ModTelcarga, Telefono2, Telcarga, TelNroMask, TelCargaMask, Nro_Pais, Nro_Provincia, Zonanro, Partnro, Nro_Localidad, Nro_Via
                        End If
                    
                        StrSql = "INSERT INTO telefono(domnro,telnro,tipotel,teldefault,telcarga,telnromask,telcargamask) "
                        StrSql = StrSql & " VALUES(" & NroDom & ",'" & Telefono2 & "'," & titelnro2 & "," & teldefault2
                        StrSql = StrSql & "," & IIf(Telcarga = "", "Null", "'" & Telcarga & "'")
                        StrSql = StrSql & "," & IIf(TelNroMask = "", "Null", "'" & TelNroMask & "'")
                        StrSql = StrSql & "," & IIf(TelCargaMask = "", "Null", "'" & TelCargaMask & "'")
                        StrSql = StrSql & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                        Texto = ": " & EscribeLogMI("Telefono insertado")
                        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    End If
             Else
                Texto = ": " & EscribeLogMI("msg ya existe otra direccion para el domicilio")
                Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, strReg)
                Texto = ": " & " No se inserto el Domicilio."
                Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
            rs_cab.Close
    
    Else 'ELSE DE IF PRINCIPAL
        '------------------------------------------------------------
        'ARMO UPDATE DINAMICAMENTE
        StrSql = " UPDATE detdom SET "
        For a = 0 To UBound(ArrDetdom) - 1
            If a = 0 Then
              StrSql = StrSql & ArrDetdom(a, 0) & "= "
            Else
              StrSql = StrSql & "," & ArrDetdom(a, 0) & "= "
            End If
            
            If (ArrDetdom(a, 3) = -1) Then
                StrSql = StrSql & ArrDetdom(a, 2)
            Else
                If EsNulo(ArrDetdom(a, 2)) Then
                    StrSql = StrSql & "NULL"
                Else
                    StrSql = StrSql & "'" & ArrDetdom(a, 2) & "'"
                End If
            End If
        Next
        StrSql = StrSql & " WHERE domnro = " & rs!domnro
        objConn.Execute StrSql, , adExecuteNoRecords
        Texto = ": " & "Domicilio Actualizado - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        '------------------------------------------------------------
        teldefault1 = 0
        If Telefono1 <> "" Then
            'ENMASCARA TELEFONOS -------------------------------------------------------------------
            Telcarga = ""
            TelNroMask = ""
            TelCargaMask = ""
            If TelMascaras = True Then
                TraerTelefonosMask Modnro, titelnro1, ModTelcarga, Telefono1, Telcarga, TelNroMask, TelCargaMask, Nro_Pais, Nro_Provincia, Zonanro, Partnro, Nro_Localidad, Nro_Via
            End If
            '---------------------------------------------------------------------------------------
        
            StrSql = " SELECT * FROM telefono WHERE domnro = " & rs!domnro
            StrSql = StrSql & " AND tipotel = " & titelnro1
            StrSql = StrSql & " AND telnro = '" & Telefono1 & "'"
            OpenRecordset StrSql, rs_Tel
            If rs_Tel.EOF Then
                '--------------------------------------------
                'CONTROLO MARCA DE TEL PRINCIPAL
                If MarcaTelPrincipal = True And titelnro1 = TelPrincipalCodigo Then
                    StrSql = "UPDATE telefono SET teldefault = 0 WHERE domnro = " & rs!domnro
                    objConn.Execute StrSql, , adExecuteNoRecords
                    teldefault1 = -1
                End If
                '--------------------------------------------

                '--------------------------------------------
                'SOLO VALIDO PARA PERU  | CELULAR (2)
                If (MarcaTelPrincipal = True And Modnro = 10 And titelnro1 = 2) Then
                    'SI NO EXISTE NINGU TELEFONO MARCADO COMO  PRINCIPAL, MARCO EL CELULAR COMO DEFAULT
                    StrSql = "SELECT * FROM telefono "
                    StrSql = StrSql & " WHERE domnro = " & rs!domnro
                    StrSql = StrSql & " AND teldefault = -1 "
                    OpenRecordset StrSql, rs_Tel2
                    If rs_Tel2.EOF Then
                        teldefault1 = -1
                    End If
                End If
                    '--------------------------------------------
                  

                StrSql = " INSERT INTO telefono(domnro,telnro,tipotel,teldefault,telcarga,telnromask,telcargamask) "
                StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & Telefono1 & "'," & titelnro1 & "," & teldefault1
                StrSql = StrSql & "," & IIf(Telcarga = "", "Null", "'" & Telcarga & "'")
                StrSql = StrSql & "," & IIf(TelNroMask = "", "Null", "'" & TelNroMask & "'")
                StrSql = StrSql & "," & IIf(TelCargaMask = "", "Null", "'" & TelCargaMask & "'")
                StrSql = StrSql & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Telefono 1 Insertado"
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                  Else
                    'FGZ - 13/05/2014 ----------------------------------------------------
                    Texto = "El teléfono 1 ya existe para este domicilio"
                    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, strReg)
                  End If
              End If
              teldefault2 = 0
              If Telefono2 <> "" Then
                'ENMASCARA TELEFONOS -------------------------------------------------------------------
                Telcarga = ""
                TelNroMask = ""
                TelCargaMask = ""
                If TelMascaras = True Then
                    TraerTelefonosMask Modnro, titelnro2, ModTelcarga, Telefono2, Telcarga, TelNroMask, TelCargaMask, Nro_Pais, Nro_Provincia, Zonanro, Partnro, Nro_Localidad, Nro_Via
                End If
              
              
                  StrSql = " SELECT * FROM telefono WHERE domnro = " & rs!domnro
                  StrSql = StrSql & " AND tipotel = " & titelnro2
                  StrSql = StrSql & " AND telnro = '" & Telefono2 & "'"
                  OpenRecordset StrSql, rs_Tel
                  If rs_Tel.EOF Then
                    '--------------------------------------------
                    'CONTROLO MARCA DE TEL PRINCIPAL
                    If MarcaTelPrincipal = True And titelnro2 = TelPrincipalCodigo Then
                        StrSql = "UPDATE telefono SET teldefault = 0 WHERE domnro = " & rs!domnro
                        objConn.Execute StrSql, , adExecuteNoRecords
                        teldefault2 = -1
                    End If
                    '--------------------------------------------
                    
                    '--------------------------------------------
                    'SOLO VALIDO PARA PERU  | CELULAR (2)
                    If (MarcaTelPrincipal = True And Modnro = 10 And titelnro2 = 2) Then
                        'SI NO EXISTE NINGU TELEFONO MARCADO COMO  PRINCIPAL, MARCO EL CELULAR COMO DEFAULT
                        StrSql = "SELECT telid FROM telefono "
                        StrSql = StrSql & " WHERE domnro = " & rs!domnro
                        StrSql = StrSql & " AND teldefault = -1 "
                        OpenRecordset StrSql, rs_Tel2
                        If rs_Tel2.EOF Then
                            teldefault1 = -1
                        End If
                    End If
                    '--------------------------------------------
                    StrSql = "INSERT INTO telefono(domnro,telnro,tipotel,teldefault,telcarga,telnromask,telcargamask) "
                    StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & Telefono2 & "'," & titelnro2 & "," & teldefault2
                    StrSql = StrSql & "," & IIf(Telcarga = "", "Null", "'" & Telcarga & "'")
                    StrSql = StrSql & "," & IIf(TelNroMask = "", "Null", "'" & TelNroMask & "'")
                    StrSql = StrSql & "," & IIf(TelCargaMask = "", "Null", "'" & TelCargaMask & "'")
                    StrSql = StrSql & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = ": " & "Telefono 2 insertado "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            Else
                'FGZ - 13/05/2014 ----------------------------------------------------
                Texto = "El teléfono 2 ya existe para este domicilio"
                Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If

        End If
                                              
    End If
 End If
End If
    
Texto = ": " & "Linea procesada correctamente "
Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)

OK = True
         
FinLinea:
If rs.State = adStateOpen Then
    rs.Close
End If
Exit Sub

SaltoLinea:
    Texto = ": " & " - Error:" & Err.Description & " -- Ultima consulta: " & StrSql
    NroColumna = 1
    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    MyRollbackTrans
    OK = False
    GoTo FinLinea
End Sub

Public Sub LineaModelo_1006(ByVal strReg As String, ByRef OK As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Importación de Organización Territorial.
' Autor      : Gonzalez Nicolás
' Fecha      : 18/06/2014
' Ultima Mod.: 25/06/2014 - Gonzalez Nicolás - Se corrigen logs
' Ultima Mod.: 25/08/2015 - Gonzalez Nicolás - Se agregan códigos telefónicos
' ---------------------------------------------------------------------------------------------

Dim pos1                    As Long
Dim pos2                    As Long

Dim tipoModelo              As String   'Moddesabr                -- modelo_etiq.moddesabr

Dim Pais                    As String   'Pais                     -- pais.paisnro
Dim Obl_Pais                As Boolean
Dim Valida_Pais             As Boolean

Dim Provincia               As String   'Provincia                -- provincia.provnro
Dim Obl_Provincia           As Boolean
Dim Valida_Provincia        As Boolean
Dim Valida_ProvCodext       As Boolean
Dim Obl_ProvinciaCodext     As Boolean
Dim ProvinciaCodext         As String   '                         -- provincia.provcodext
Dim Obl_Provincia_auxchar   As Boolean
Dim Valida_Provincia_auxchar As Boolean
Dim provinciaAuxchar As String

Dim Zona                    As String
Dim Zonanro                 As Long     'zona.zonanro
Dim Obl_Zonanro             As Boolean
Dim Valida_Zonanro          As Boolean

Dim Partido                 As String
Dim Partnro                 As Long     'partido.parntro
Dim Obl_Partnro             As Boolean
Dim Valida_Partnro          As Boolean
Dim Valida_PartCodext       As Boolean
Dim Obl_PartidoCodext       As Boolean
Dim PartidoCodext           As String 'partido.partcod
Dim Obl_Partido_auxchar As Boolean
Dim Valida_Partido_auxchar As Boolean
Dim partidoAuxchar As String

Dim Localidad               As String   'Localidad                -- localidad.locnro
Dim Obl_Localidad           As Boolean
Dim Valida_Localidad        As Boolean
Dim Valida_LocCodext        As Boolean
Dim Obl_LocalidadCodext     As Boolean
Dim LocalidadCodext         As String   '                         -- localidad.loccod
Dim Valida_LocCodPostal     As Boolean
Dim Obl_LocalidadCodPostal  As Boolean
Dim LocalidadCodPostal      As String   '                         -- localidad.cpnro
Dim Obl_Localidad_auxchar As Boolean
Dim Valida_Localidad_auxchar As Boolean
Dim localidadAuxchar As String


Dim via                     As String   'via                      -- via.vianro
Dim Obl_via                 As Boolean
Dim Valida_via              As Boolean
Dim viaCodext               As String

'Dim tidonro                 As Long     'TipoDomicilio            -- tipodomi.tidonro
Dim Nro_Localidad           As Long
Dim Nro_Provincia           As Long
Dim Nro_Via                 As Long
Dim Nro_Pais                As Long
Dim NroDom                  As Long
Dim Modnro                  As Long

'Cód Telefónicos
Dim CodtelPais As Boolean
Dim Obl_CodtelPais As Boolean
Dim CodtelPaisLen As Integer
Dim CodtelPaisEtiq As String
Dim CodTelPaisVal As String

Dim CodtelPcia As Boolean
Dim Obl_CodtelPcia As Boolean
Dim CodtelPciaLen As Integer
Dim CodtelPciaEtiq As String
Dim CodTelPciaVal As String

Dim CodtelZona As Boolean
Dim Obl_CodtelZona As Boolean
Dim CodtelZonaLen As Integer
Dim CodtelZonaEtiq As String
Dim CodTelZonaVal As String

Dim CodtelPart As Boolean
Dim Obl_CodtelPart As Boolean
Dim CodtelPartLen As Integer
Dim CodtelPartEtiq As String
Dim CodTelPartVal As String

Dim CodtelLoc As Boolean
Dim Obl_CodtelLoc As Boolean
Dim CodtelLocLen As Integer
Dim CodtelLocEtiq As String
Dim CodTelLocVal As String

Dim CodtelVia As Boolean
Dim Obl_CodtelVia As Boolean
Dim CodtelViaLen As Integer
Dim CodtelViaEtiq As String
Dim CodTelViaVal As String

'Dim Codigopostal            As String   'detdom.codigopostal
'Dim Obl_Codigopostal        As Boolean
'Dim Valida_Codigopostal     As Boolean

Dim IngresoDom As Boolean
Dim lencod As String

Dim rs As New ADODB.Recordset
Dim rs_emp  As New ADODB.Recordset
Dim rs_cab As New ADODB.Recordset
'Dim rs_Tel As New ADODB.Recordset


'-------------------------
'POR DEFAULT ES TODO FALSE
'Obl_Codigopostal = False
'Valida_Codigopostal = False

Obl_Pais = True
Valida_Pais = True
CodtelPais = False
Obl_CodtelPais = False

Obl_Provincia = False
Valida_Provincia = False
Obl_Provincia_auxchar = False
Valida_Provincia_auxchar = False
CodtelPcia = False
Obl_CodtelPcia = False

Obl_Localidad = False
Valida_Localidad = False

Obl_Zonanro = False
Valida_Zonanro = False
CodtelZona = False
Obl_CodtelZona = False

Obl_Partnro = False
Valida_Partnro = False
Obl_Partido_auxchar = False
Valida_Partido_auxchar = False
CodtelPart = False
Obl_CodtelPart = False

Obl_via = False
Valida_via = False
CodtelVia = False
Obl_CodtelVia = False


Obl_Localidad_auxchar = False
Valida_Localidad_auxchar = False
CodtelLoc = False
Obl_CodtelLoc = False
'-------------------------


    On Error GoTo SaltoLinea

    LineaCarga = LineaCarga + 1
    
    Flog.writeline
    FlogE.writeline
    FlogP.writeline
       
       
    'Flog.writeline "Modelo;" & ModeloDom
    '-----------------------------------------------------------------------
    'BUSCO IDIOMA DEL MODELO
    '-----------------------------------------------------------------------
    StrSql = "SELECT lencod FROM modelo_etiq"
    StrSql = StrSql & " INNER JOIN lenguaje ON lenguaje.paisnro = modelo_etiq.paisnro"
    StrSql = StrSql & " WHERE modnro = " & ModeloDom
    OpenRecordset StrSql, rs_emp
    If (Not rs_emp.EOF) Then
        lencod = rs_emp!lencod
    Else
        lencod = "esAR"
    End If
    rs_emp.Close
    

    
    
    '-----------------------------------------------------------------------
    'SI NO TENGO EL SEPARADOR AL FINAL DEL STRING, SE LO AGREGO.
    '-----------------------------------------------------------------------
    If Right(strReg, 1) <> separador Then
        strReg = strReg & separador
    End If
    
    IngresoDom = True
    
    
    
    Modnro = ModeloDom
    Flog.writeline "*********************************************"
    Select Case Modnro
        Case 1: 'Argentina
           Flog.writeline "**** ORGANIZACIÓN TERRITORIAL ARGENTINA ****"
           Obl_Provincia = True
           Valida_Provincia = True
           
           Obl_Zonanro = True
           Valida_Zonanro = True
           
           Obl_Partnro = True
           Valida_Partnro = True
           
           Obl_Localidad = True
           Valida_Localidad = True
        
        Case 2: 'CHILE
            Flog.writeline "**** ORGANIZACIÓN TERRITORIAL CHILE ****"
           '**********CHILE*************
           Obl_Provincia = True
           Valida_Provincia = True
           
           Obl_Zonanro = True
           Valida_Zonanro = True
           
           Obl_Localidad = True
           Valida_Localidad = True
           
        Case 3: 'COLOMBIA
        '**********COLOMBIA*************
           Flog.writeline "**** ORGANIZACIÓN TERRITORIAL COLOMBIA ****"
           Obl_Provincia = True
           Valida_Provincia = True
           
           Obl_Localidad = True
           Valida_Localidad = True

        Case 4: 'URUGUAY
           '**********URUGUAY*************
           Flog.writeline "**** ORGANIZACIÓN TERRITORIAL URUGUAY ****"
           Obl_Localidad = False
           Valida_Localidad = True
           
           Obl_Zonanro = False
           Valida_Zonanro = True
           
           Obl_Provincia = False
           Valida_Provincia = True
           
        Case 5: ' COSTA RICA
           '**********COSTA RICA*************
           Flog.writeline "**** ORGANIZACIÓN TERRITORIAL COSTA RICA ****"
            Obl_Provincia = True
            Valida_Provincia = True
            
            Obl_Partnro = True
            Valida_Partnro = True
            
            Obl_Localidad = True
            Valida_Localidad = True
           
        Case 6: 'PARAGUAY
           '**********PARAGUAY*************
           'FORMATO
           'Legajo;Tipo de Domicilio;Calle;Nro.;Torre;Piso;Ofic/Depto;Ciudad;Departamento;País;Barrio;Email;Entre Calles
            Flog.writeline "**** ORGANIZACIÓN TERRITORIAL PARAGUAY ****"
           
            Obl_Provincia = True
            Valida_Provincia = True
            
            Obl_Localidad = True
            Valida_Localidad = True
        Case 7: 'PORTUGAL
            '**********PORTUGAL*************
            Flog.writeline "**** ORGANIZACIÓN TERRITORIAL PORTUGAL ****"
            Obl_Provincia = True
            Valida_Provincia = True
            
            Obl_Partnro = True
            Valida_Partnro = True
            
            Obl_Localidad = True
            Valida_Localidad = True


        Case 8: 'EL SALVADOR
            '**********EL SALVADOR*************
            Flog.writeline "**** ORGANIZACIÓN TERRITORIAL EL SALVADOR ****"
            Obl_Provincia = True
            Valida_Provincia = True
            
            Obl_Partnro = True
            Valida_Partnro = True
            
            Obl_Zonanro = True
            Valida_Zonanro = True
            
            
            Obl_Localidad = True
            Valida_Localidad = True
        Case 9: 'BRASIL
           '**********BRASIL*************
           Flog.writeline "**** ORGANIZACIÓN TERRITORIAL BRASIL ****"
           Obl_Provincia = False
           Valida_Provincia = True
           
            Obl_Partnro = True
            Valida_Partnro = True
           
           Obl_Localidad = False
           Valida_Localidad = True
        Case 10: 'PERU
            '**********PERU*************
            Flog.writeline "**** ORGANIZACIÓN TERRITORIAL PERU ****"
          
            Obl_Provincia = True
            Valida_Provincia = True
            
            Obl_Partnro = True
            Valida_Partnro = True
            
            Obl_Localidad = True
            Valida_Localidad = True
            
            Obl_via = False
            Valida_via = True
            
            Obl_Provincia_auxchar = True
            Valida_Provincia_auxchar = True
            
            Obl_Partido_auxchar = True
            Valida_Partido_auxchar = True
            
            Obl_Localidad_auxchar = True
            Valida_Localidad_auxchar = True
            
        Case 11: 'BOLIVIA
            '**********BOLIVIA*************
            Flog.writeline "**** ORGANIZACIÓN TERRITORIAL BOLIVIA ****"
            Obl_Provincia = True
            Valida_Provincia = True
            
            Obl_Partnro = True
            Valida_Partnro = True
            
            Obl_Localidad = True
            Valida_Localidad = True
        Case 12: 'VENEZUELA
           '**********VENEZUELA*************
            Flog.writeline "**** ORGANIZACIÓN TERRITORIAL VENEZUELA ****"
            Obl_Provincia = True
            Valida_Provincia = True
            
            Obl_Partnro = True
            Valida_Partnro = True
            
            Obl_Localidad = True
            Valida_Localidad = True
        
        Case 13: 'ESPAÑA
           '**********ESPAÑA*************
            Flog.writeline "**** ORGANIZACIÓN TERRITORIAL ESPAÑA ****"
            Obl_Provincia = True
            Valida_Provincia = True

        Case 14: 'MEXICO
           '**********MEXICO*************
           Flog.writeline "**** ORGANIZACIÓN TERRITORIAL MÉXICO ****"
           Obl_Provincia = True
           Valida_Provincia = True
           
           Obl_Partnro = True
           Valida_Partnro = True
           
           Obl_Localidad = True
           Valida_Localidad = True
           
        Case 15: 'ECUADOR
            '**********ECUADOR*************
           Flog.writeline "**** ORGANIZACIÓN TERRITORIAL ECUADOR ****"
           Obl_Provincia = True
           Valida_Provincia = True
           
           Obl_Localidad = True
           Valida_Localidad = True
           
           Obl_Partnro = True
           Valida_Partnro = True
           
       Case 16: 'NICARAGUA
            '**********EL SALVADOR*************
            Flog.writeline "**** ORGANIZACIÓN TERRITORIAL NICARAGUA ****"
            Obl_Provincia = True
            Valida_Provincia = True
            
            Obl_Partnro = True
            Valida_Partnro = True
            
            Obl_Zonanro = True
            Valida_Zonanro = True
            
            Obl_Localidad = True
            Valida_Localidad = True
            
        Case 17: 'HONDURAS
        '**********HONDURAS*************
           Flog.writeline "**** ORGANIZACIÓN TERRITORIAL HONDURAS ****"
           Obl_Provincia = True
           Valida_Provincia = True
           
           Obl_Localidad = True
           Valida_Localidad = True
        Case Else
            
            StrSql = "SELECT moddesabr FROM modelo_etiq WHERE modnro =" & Modnro
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                'Flog.writeline "No es posible importar datos para el modelo de domicilio: " & rs!moddesabr & ""
                Texto = ": No es posible importar datos para el modelo de domicilio: " & rs!moddesabr & ""
            Else
                Texto = ": ¡¡ ERROR DE FORMATO !!  "
            End If
            
            NroColumna = 0
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub

    End Select
    
    
    '-----------------------------------------------------------------------
    'OBTENGO MODELO DE CARGA PARA LOS CÓD. TELEFÓNICOS
    '-----------------------------------------------------------------------
    Dim ArrTelCarga, ax, ArrDatCarga, DatCarga, Txt
    StrSql = "SELECT modelo_etiq_tel.modtelcarga FROM modelo_etiq"
    StrSql = StrSql & " INNER JOIN modelo_etiq_tel ON modelo_etiq_tel.modnro = modelo_etiq.modnro"
    StrSql = StrSql & " WHERE modtelvalida= -1 "
    StrSql = StrSql & " AND modelo_etiq.modnro = " & Modnro
    StrSql = StrSql & " AND modelo_etiq_tel.modtelcarga IS NOT NULL"
    OpenRecordset StrSql, rs_emp
    If (Not rs_emp.EOF) Then
        ArrTelCarga = Split(rs_emp!ModTelcarga, "#!#")
        For ax = 0 To UBound(ArrTelCarga)
            pos1 = InStr(1, ArrTelCarga(ax), "[") - 1
            '--------------------------------------------------
            'Extraigo label
            Txt = Left(ArrTelCarga(ax), pos1)
            '--------------------------------------------------
            'Armo nuevo string limpio para desglosar parametros
            pos1 = pos1 + 2
            DatCarga = Mid(ArrTelCarga(ax), pos1, Len(ArrTelCarga(ax)))
            DatCarga = Left(DatCarga, Len(DatCarga) - 1)
            ArrDatCarga = Split(DatCarga, ",")
            
            If CLng(ArrDatCarga(0)) = -1 Then 'SI EL CAMPO ES DE TABLA GENÉRICA
                Select Case CLng(ArrDatCarga(2))
                    Case 1: 'pais
                        Obl_CodtelPais = IIf(CLng(ArrDatCarga(5)) = -1, True, False)
                        CodtelPais = True
                        CodtelPaisLen = ArrDatCarga(1)
                        CodtelPaisEtiq = Txt
                    Case 2: 'Provincia
                        Obl_CodtelPcia = IIf(CLng(ArrDatCarga(5)) = -1, True, False)
                        CodtelPcia = True
                        CodtelPciaLen = ArrDatCarga(1)
                        CodtelPciaEtiq = Txt
                    Case 3: 'Zona
                        Obl_CodtelZona = IIf(CLng(ArrDatCarga(5)) = -1, True, False)
                        CodtelZona = True
                        CodtelZonaLen = ArrDatCarga(1)
                        CodtelZonaEtiq = Txt
                    Case 4: 'Partido
                        Obl_CodtelPart = IIf(CLng(ArrDatCarga(5)) = -1, True, False)
                        CodtelPart = True
                        CodtelPartLen = ArrDatCarga(1)
                        CodtelPartEtiq = Txt
                    Case 5: 'Localidad
                        Obl_CodtelLoc = IIf(CLng(ArrDatCarga(5)) = -1, True, False)
                        CodtelLoc = True
                        CodtelLocLen = ArrDatCarga(1)
                        CodtelLocEtiq = Txt
                    Case 6: 'via
                        Obl_CodtelVia = IIf(CLng(ArrDatCarga(5)) = -1, True, False)
                        CodtelVia = True
                        CodtelViaLen = ArrDatCarga(1)
                        CodtelViaEtiq = Txt
                End Select
            End If
        Next
    End If


    '-----------------------------------------
    'PAIS
    '-----------------------------------------
    'Este campo es Obligatorio para TODOS los países
    If Valida_Pais = True Then
        NroColumna = 1
        Obligatorio = Obl_Pais
        Campoetiqueta = EscribeLogMIToolTip("Pais", lencod, 0)
        pos1 = 1
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Pais = Left(Aux, 20)
        Flog.writeline Campoetiqueta & " : " & Pais
        '----------------------------------------------------------------------------------------------
        '----------- VALIDO QUE EXISTA EL PAIS Y QUE COINCIDA CON EL MODELO EXISTENTE.
        '----------------------------------------------------------------------------------------------
        StrSql = "SELECT pais.paisnro FROM pais"
        StrSql = StrSql & " INNER JOIN modelo_etiq ON modelo_etiq.paisnro = pais.paisnro AND modelo_etiq.modnro=" & Modnro
        StrSql = StrSql & " WHERE UPPER(paisdesc) ='" & UCase(Pais) & "'"
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            Nro_Pais = rs!Paisnro
        Else
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            Exit Sub
        End If
        '--------------------------------------------------------------------------
        If CodtelPais = True Then
            NroColumna = NroColumna + 1
            Obligatorio = Obl_CodtelPais
            Campoetiqueta = EscribeLogMIToolTip(CodtelPaisEtiq, lencod, 0)
            pos1 = pos2 + 2
            pos2 = InStr(pos1, strReg, separador) - 1
            Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
            If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
                Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            End If
            Aux = EliminarCHInvalidosII(Aux, 1, "")
            CodTelPaisVal = Left(Aux, CodtelPaisLen)
            Flog.writeline Campoetiqueta & " : " & CodTelPaisVal
        End If
    End If
    '-----------------------------------------
    
    
    '-----------------------------------------
    'PROVINCIA
    '-----------------------------------------
    If Valida_Provincia = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Provincia
        'Campoetiqueta = "Provincia"
        Campoetiqueta = EscribeLogMIToolTip("Provincia", lencod, 0)
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Provincia = Left(Aux, 60)
        Flog.writeline Campoetiqueta & " : " & Provincia
    
        'Código Externo (Provincia)
        NroColumna = NroColumna + 1
        Obligatorio = Obl_ProvinciaCodext
        Campoetiqueta = EscribeLogMIToolTip("Codigo Externo", lencod, 0)
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        ProvinciaCodext = Left(Aux, 20)
        Flog.writeline Campoetiqueta & " : " & ProvinciaCodext
        
        If Valida_Provincia_auxchar = True Then
            'Auxchar (provincia)
            NroColumna = NroColumna + 1
            Obligatorio = Obl_Provincia_auxchar
            Campoetiqueta = EscribeLogMIToolTip("Auxchar", lencod, 0)
            pos1 = pos2 + 2
            pos2 = InStr(pos1, strReg, separador) - 1
            Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
            If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
                Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            End If
            Aux = EliminarCHInvalidosII(Aux, 1, "")
            provinciaAuxchar = Left(Aux, 20)
            Flog.writeline Campoetiqueta & " : " & provinciaAuxchar
            
        Else
            provinciaAuxchar = ""
        End If
        
        '--------------------------------------------------------------------------
        If CodtelPcia = True Then
            NroColumna = NroColumna + 1
            Obligatorio = Obl_CodtelPcia
            Campoetiqueta = EscribeLogMIToolTip(CodtelPciaEtiq, lencod, 0)
            pos1 = pos2 + 2
            pos2 = InStr(pos1, strReg, separador) - 1
            Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
            If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
                Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            End If
            Aux = EliminarCHInvalidosII(Aux, 1, "")
            CodTelPciaVal = Left(Aux, CodtelPciaLen)
            Flog.writeline Campoetiqueta & " : " & CodTelPciaVal
        End If
        
    Else
        Provincia = "N/A"
    End If
    
    '-----------------------------------------
    
    
           
    
    '-----------------------------------------
    'ZONA
    '-----------------------------------------
    If Valida_Zonanro = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Zonanro
        Campoetiqueta = EscribeLogMIToolTip("Zona", lencod, 0)
        pos1 = pos2 + 2
        'pos2 = Len(strReg)
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Zona = Left(Aux, 60)
        Flog.writeline Campoetiqueta & " : " & Zona
        
        '--------------------------------------------------------------------------
        If CodtelZona = True Then
            NroColumna = NroColumna + 1
            Obligatorio = Obl_CodtelZona
            Campoetiqueta = EscribeLogMIToolTip(CodtelZonaEtiq, lencod, 0)
            pos1 = pos2 + 2
            pos2 = InStr(pos1, strReg, separador) - 1
            Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
            If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
                Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            End If
            Aux = EliminarCHInvalidosII(Aux, 1, "")
            CodTelZonaVal = Left(Aux, CodtelZonaLen)
            Flog.writeline Campoetiqueta & " : " & CodTelZonaVal
        End If

    Else
        Zona = "N/A"
    End If
    '-----------------------------------------
    
            
    '-----------------------------------------
    'PARTIDO
    '-----------------------------------------
    If Valida_Partnro = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Partnro
        'Campoetiqueta = "Partido"
        Campoetiqueta = EscribeLogMIToolTip("Partido", lencod, 0)
        pos1 = pos2 + 2
        'pos2 = Len(strReg)
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Partido = Left(Aux, 60)
        Flog.writeline Campoetiqueta & " : " & Partido
        
        'Código Externo (Partido)
        NroColumna = NroColumna + 1
        Obligatorio = Obl_PartidoCodext
        Campoetiqueta = EscribeLogMIToolTip("Codigo Externo", lencod, 0)
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        PartidoCodext = Left(Aux, 30)
        Flog.writeline Campoetiqueta & " : " & PartidoCodext
    
    
        If Valida_Partido_auxchar = True Then
            'Auxchar (provincia)
            NroColumna = NroColumna + 1
            Obligatorio = Obl_Partido_auxchar
            Campoetiqueta = EscribeLogMIToolTip("Auxchar", lencod, 0)
            pos1 = pos2 + 2
            pos2 = InStr(pos1, strReg, separador) - 1
            Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
            If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
                Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            End If
            Aux = EliminarCHInvalidosII(Aux, 1, "")
            partidoAuxchar = Left(Aux, 20)
            Flog.writeline Campoetiqueta & " : " & partidoAuxchar
        Else
            partidoAuxchar = ""
        End If
        
        '--------------------------------------------------------------------------
7        If CodtelPart = True Then
            NroColumna = NroColumna + 1
            Obligatorio = Obl_CodtelPart
            Campoetiqueta = EscribeLogMIToolTip(CodtelPartEtiq, lencod, 0)
            pos1 = pos2 + 2
            pos2 = InStr(pos1, strReg, separador) - 1
            Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
            If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
                Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            End If
            Aux = EliminarCHInvalidosII(Aux, 1, "")
            CodTelPartVal = Left(Aux, CodtelPartLen)
            Flog.writeline Campoetiqueta & " : " & CodTelPartVal
        End If
    
    Else
        Partido = "N/A"
    End If

    
    '-----------------------------------------
    '-----------------------------------------
    'LOCALIDAD
    '-----------------------------------------
    If Valida_Localidad = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_Localidad
        'Campoetiqueta = "Localidad"
        Campoetiqueta = EscribeLogMIToolTip("Localidad", lencod, 0)
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Localidad = Left(Aux, 60)
        Flog.writeline Campoetiqueta & " : " & Localidad
        
        'Código Externo (Localidad)
        NroColumna = NroColumna + 1
        Obligatorio = Obl_LocalidadCodext
        Campoetiqueta = EscribeLogMIToolTip("Codigo Externo", lencod, 0)
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        LocalidadCodext = Left(Aux, 20)
        Flog.writeline Campoetiqueta & " : " & LocalidadCodext
        
        'Código Postal (Localidad)
        NroColumna = NroColumna + 1
        Obligatorio = Obl_LocalidadCodPostal
        Campoetiqueta = EscribeLogMIToolTip("Codigo Postal", lencod, 0)
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        If pos2 < 0 Then
            pos2 = Len(strReg)
        End If
        
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        LocalidadCodPostal = Left(Aux, 10)
        Flog.writeline Campoetiqueta & " : " & LocalidadCodPostal
        
        If Valida_Localidad_auxchar = True Then
            'Auxchar (provincia)
            NroColumna = NroColumna + 1
            Obligatorio = Obl_Localidad_auxchar
            Campoetiqueta = EscribeLogMIToolTip("Auxchar", lencod, 0)
            pos1 = pos2 + 2
            pos2 = InStr(pos1, strReg, separador) - 1
            Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
            If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
                Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            End If
            Aux = EliminarCHInvalidosII(Aux, 1, "")
            localidadAuxchar = Left(Aux, 20)
            Flog.writeline Campoetiqueta & " : " & localidadAuxchar
        Else
            localidadAuxchar = ""
        End If
        
        '--------------------------------------------------------------------------
        If CodtelLoc = True Then
            NroColumna = NroColumna + 1
            Obligatorio = Obl_CodtelLoc
            Campoetiqueta = EscribeLogMIToolTip(CodtelLocEtiq, lencod, 0)
            pos1 = pos2 + 2
            pos2 = InStr(pos1, strReg, separador) - 1
            Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
            If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
                Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            End If
            Aux = EliminarCHInvalidosII(Aux, 1, "")
            CodTelLocVal = Left(Aux, CodtelLocLen)
            Flog.writeline Campoetiqueta & " : " & CodTelLocVal
        End If
        
    Else
        Localidad = "N/A"
    End If
    '-----------------------------------------
    
    
    '-----------------------------------------
    'Via
    '-----------------------------------------
    If Valida_via = True Then
        NroColumna = NroColumna + 1
        Obligatorio = Obl_via
        'Campoetiqueta = "Via"
        Campoetiqueta = EscribeLogMIToolTip("Via", lencod, 0)
        Flog.writeline "paso1"
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Flog.writeline "paso2"
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        Flog.writeline "paso3"
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Flog.writeline "paso4"
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Flog.writeline "paso5"
        via = Left(Aux, 30)
        If via = "N/A" Then
            via = ""
        End If
        Flog.writeline "via: " & via
        
        'Código Externo (Via)
        NroColumna = NroColumna + 1
        Obligatorio = Obl_via
        Campoetiqueta = EscribeLogMIToolTip("Codigo Externo", lencod, 0)
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        If pos2 < 0 Then
            pos2 = Len(strReg)
        End If
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        viaCodext = Left(Aux, 30)
        If viaCodext = "N/A" Then
            viaCodext = ""
        End If
        Flog.writeline Campoetiqueta & " : " & viaCodext
        
        '--------------------------------------------------------------------------
        If CodtelVia = True Then
            NroColumna = NroColumna + 1
            Obligatorio = Obl_CodtelVia
            Campoetiqueta = EscribeLogMIToolTip(CodtelViaEtiq, lencod, 0)
            pos1 = pos2 + 2
            pos2 = InStr(pos1, strReg, separador) - 1
            Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
            If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
                Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            End If
            Aux = EliminarCHInvalidosII(Aux, 1, "")
            CodTelViaVal = Left(Aux, CodtelViaLen)
            Flog.writeline Campoetiqueta & " : " & CodTelViaVal
        End If
    Else
        via = "N/A"
    End If
    '-----------------------------------------
    '-----------------------------------------
    'COMIENZO A VALIDAR LOS DATOS INGRESADOS.
    '-----------------------------------------
    '-----------------------------------------
    
    If CodtelPais = True Then
        'INSERTO/MODIFICO COD. TELEFONICO
        Call ValidarCodTelef(1, Nro_Pais, CodTelPaisVal)
    End If
    
    
    '==================================================================================================================
    'VALIDO SI EXISTE LA PROVINCIA PARA ESTE PAIS
    '==================================================================================================================
    If Provincia <> "N/A" Then
        'Call ValidarProvincia(Provincia, Nro_Provincia, Nro_Pais)If Not EsNulo(Provincia) Then
        StrSql = " SELECT * FROM provincia WHERE UPPER(provdesc) = '" & UCase(Provincia) & "' AND paisnro = " & Nro_Pais
        OpenRecordset StrSql, rs
        If rs.EOF Then
            StrSql = "INSERT INTO provincia(provdesc,provcodext,paisnro,auxchar) "
            StrSql = StrSql & " VALUES("
            StrSql = StrSql & "'" & UCase(Provincia) & "'"
            StrSql = StrSql & ",'" & ProvinciaCodext & "'"
            StrSql = StrSql & "," & Nro_Pais
            StrSql = StrSql & ",'" & provinciaAuxchar & "'"
            StrSql = StrSql & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            Nro_Provincia = getLastIdentity(objConn, "provincia")
            
            Flog.writeline ""
            Flog.writeline EscribeLogMI("Registro Insertado")
            Flog.writeline EscribeLogMIToolTip("Provincia", lencod, 0) & ": " & UCase(Provincia)
            Flog.writeline EscribeLogMI("Codigo Externo") & ": " & ProvinciaCodext
        Else
            Nro_Provincia = rs!Provnro
            StrSql = " UPDATE provincia SET provcodext='" & ProvinciaCodext & "',"
            StrSql = StrSql & " auxchar='" & provinciaAuxchar & "'"
            StrSql = StrSql & " WHERE provnro=" & Nro_Provincia
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
        
        If CodtelPcia = True Then
            'INSERTO/MODIFICO COD. TELEFONICO
            Call ValidarCodTelef(2, Nro_Provincia, CodTelPciaVal)
        End If
        
        
    Else
        Nro_Provincia = 0
    End If
    
    '----------------------
    '======= ZONAS ========
    '----------------------
    If Zona <> "N/A" Then
        'Call ValidarZona(Zona, Zonanro, Nro_Provincia)
        StrSql = " SELECT * FROM zona WHERE UPPER(zonadesc) = '" & UCase(Zona) & "' AND provnro = " & Nro_Provincia
        OpenRecordset StrSql, rs
        If rs.EOF Then
           If Nro_Provincia <> 0 Then
              StrSql = "INSERT INTO zona(zonadesc,provnro) VALUES('"
              StrSql = StrSql & UCase(Zona) & "'," & Nro_Provincia & ")"
              objConn.Execute StrSql, , adExecuteNoRecords
              Zonanro = getLastIdentity(objConn, "zona")
              Flog.writeline ""
              Flog.writeline EscribeLogMI("Registro Insertado")
              Flog.writeline EscribeLogMIToolTip("Zona", lencod, 0) & ": " & UCase(Zona)
           End If
        Else
            Zonanro = rs!Zonanro
            Nro_Provincia = rs!Provnro
        End If
        
        If CodtelZona = True Then
            'INSERTO/MODIFICO COD. TELEFONICO
            Call ValidarCodTelef(3, Zonanro, CodTelZonaVal)
        End If
        

    Else
        Zonanro = 0
    End If
    
    'PARTIDO
    If Partido <> "N/A" Then
        'Call ValidarPartido(Partido, Partnro)
        StrSql = " SELECT * FROM partido WHERE UPPER(partnom) = '" & UCase(Partido) & "' AND provincia =" & Nro_Provincia
        OpenRecordset StrSql, rs
        If rs.EOF Then
            StrSql = "INSERT INTO partido(partnom,partcod,provincia,auxchar)"
            StrSql = StrSql & " VALUES("
            StrSql = StrSql & "'" & UCase(Partido) & "'"
            StrSql = StrSql & ",'" & PartidoCodext & "'"
            StrSql = StrSql & "," & Nro_Provincia
            StrSql = StrSql & ",'" & partidoAuxchar & "'"
            StrSql = StrSql & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            Partnro = getLastIdentity(objConn, "partido")
            Flog.writeline ""
            Flog.writeline EscribeLogMI("Registro Insertado")
            Flog.writeline EscribeLogMIToolTip("Partido", lencod, 0) & ": " & UCase(Partido)
            Flog.writeline EscribeLogMI("Codigo Externo") & ": " & PartidoCodext
        Else
            Partnro = rs!Partnro
            StrSql = " UPDATE partido SET partcod='" & PartidoCodext & "',"
            StrSql = StrSql & " auxchar='" & partidoAuxchar & "'"
            StrSql = StrSql & " WHERE Partnro=" & Partnro
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
        
        If CodtelPart = True Then
            'INSERTO/MODIFICO COD. TELEFONICO
            Call ValidarCodTelef(4, Partnro, CodTelPartVal)
        End If
        
    Else
        Partnro = 0
    End If

    
    '-------------------
    If Localidad <> "N/A" Then
        'Call ValidarLocalidad(Localidad, Nro_Localidad, Nro_Pais, Nro_Provincia)
        StrSql = " SELECT * FROM localidad WHERE UPPER(locdesc) = '" & UCase(Localidad) & "'"
        StrSql = StrSql & " AND paisnro = " & Nro_Pais
        If Nro_Provincia <> 0 Then
            StrSql = StrSql & " AND provnro = " & Nro_Provincia
        End If
        OpenRecordset StrSql, rs
        If rs.EOF Then
            StrSql = " INSERT INTO localidad(locdesc,paisnro,zonanro,provnro,loccodext,partido,cpnro,auxchar)"
            StrSql = StrSql & " VALUES('" & UCase(Localidad) & "'"
            StrSql = StrSql & "," & Nro_Pais
            If Zonanro <> 0 Then
                StrSql = StrSql & "," & Zonanro 'ZONA
            Else
                StrSql = StrSql & ",NULL"
            End If
            If Nro_Provincia <> 0 Then
                StrSql = StrSql & "," & Nro_Provincia ' PROVINCIA
            Else
                StrSql = StrSql & ",NULL"
            End If
            If EsNulo(LocalidadCodext) = False Then
                StrSql = StrSql & ",'" & LocalidadCodext & "'"
            Else
                StrSql = StrSql & ",NULL"
            End If
            
            If Partnro <> 0 Then
                StrSql = StrSql & "," & Partnro
            Else
                StrSql = StrSql & ",NULL"
            End If
            
            If EsNulo(LocalidadCodPostal) = False Then
                StrSql = StrSql & ",'" & LocalidadCodPostal & "'"
            Else
                StrSql = StrSql & ",NULL"
            End If
            StrSql = StrSql & ",'" & localidadAuxchar & "'"
            StrSql = StrSql & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            Nro_Localidad = getLastIdentity(objConn, "localidad")
            
            Flog.writeline ""
            Flog.writeline EscribeLogMI("Registro Insertado")
            Flog.writeline EscribeLogMIToolTip("Localidad", lencod, 0) & ": " & UCase(Localidad)
            Flog.writeline EscribeLogMI("Codigo Externo") & ": " & LocalidadCodext
            Flog.writeline EscribeLogMI("Codigo Postal") & ": " & LocalidadCodPostal
        Else
            Nro_Localidad = rs!Locnro
            StrSql = " UPDATE localidad SET loccodext='" & LocalidadCodext & "',"
            StrSql = StrSql & " auxchar='" & localidadAuxchar & "'"
            StrSql = StrSql & " WHERE locnro=" & Nro_Localidad
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
        
        If CodtelLoc = True Then
            'INSERTO/MODIFICO COD. TELEFONICO
            Call ValidarCodTelef(5, Nro_Localidad, CodTelLocVal)
        End If
        
    Else
        Nro_Localidad = 0
    End If
    
   
    If via <> "N/A" Then
        'Call ValidarVia(via, Nro_Via)
        StrSql = " SELECT * FROM via WHERE UPPER(viadesc) = '" & UCase(via) & "'"
        OpenRecordset StrSql, rs
        If rs.EOF Then
            StrSql = "INSERT INTO via(viadesc,viacod)"
            StrSql = StrSql & " VALUES("
            StrSql = StrSql & "'" & UCase(via) & "'"
            StrSql = StrSql & ",'" & viaCodext & "'" 'Cód. Externo
            StrSql = StrSql & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            Flog.writeline ""
            Flog.writeline EscribeLogMI("Registro Insertado")
            Flog.writeline EscribeLogMIToolTip("Via", lencod, 0) & ": " & UCase(via)
            Flog.writeline EscribeLogMI("Codigo Externo") & ": " & viaCodext
            Nro_Via = getLastIdentity(objConn, "via")
        Else
            Nro_Via = rs!Vianro
        End If
        
        If CodtelVia = True Then
            'INSERTO/MODIFICO COD. TELEFONICO
            Call ValidarCodTelef(6, Nro_Via, CodTelViaVal)
        End If
        
    End If
                
               
    If rs.State = adStateOpen Then
      rs.Close
    End If
              
    
Texto = ": " & "Linea procesada correctamente "
Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)

OK = True
         
FinLinea:
If rs.State = adStateOpen Then
    rs.Close
End If
Exit Sub

SaltoLinea:
    Texto = ": " & " - Error:" & Err.Description & " -- Ultima consulta: " & StrSql
    NroColumna = 1
    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    MyRollbackTrans
    OK = False
    GoTo FinLinea
End Sub

Public Sub LineaModelo_605(ByVal strReg As String, ByRef OK As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de Empleados
' Autor      : FGZ
' Fecha      : 30/07/2004
' Ultima Mod.: 27/04/2005 - FGZ - Estandarizacion del proceso
'              27/06/2005 - FGZ - Fecha fin de contrato.
'              10/02/2010 - Martin Ferraro - No permitir empleados menores a 14 años
'              17-11-2010 - Leticia A. - version 3.35
'              24-11-2010 - Leticia A. - elimina caracteres invalidos de diferentes campos.
'              20-12-2010 - Leti - arreglar consulta en cuenta bancaria.
'              01/06/2011 - Gonzalez Nicolás - Se cambio llamada de funcion para Sit. Rev(30) --> AsignarEstructura_SitRev()
'              29/06/2011 - Manterola Maria Magdalena - Se modificó en la llamada a CrearComplemento para el
'                           Plan de Obra Social por el parametro 23, dado que el 24 con el que lo llamaba
'                           no se consideraba en CrearComplemento.
'              15/05/2011 - Zamarbide Juan - Se modificó la llamada a la función AsignarEstructura_SitRev2 que escribe la Situación de Revista en his_estructura
'              16/07/2012 - Bug: Insertaba dos veces en ter_tip.
' ---------------------------------------------------------------------------------------------

Dim pos1            As Long
Dim pos2            As Long

Dim Legajo          As String   'LEGAJO                   -- empleado.empleg
Dim Apellido        As String   'APELLIDO                 -- empleado.terape y tercero.terape
Dim nombre          As String   'NOMBRE                   -- empleado.ternom y tercero.ternom
Dim Fnac            As String   'FNAC                     -- tercero.terfecna
Dim Nacionalidad    As String   'Nacionalidad             -- tercero.nacionalnro
Dim PaisNac         As String   'Pais de Nacimiento       -- tercero.paisnro
Dim Fing            As String   'Fec.Ingreso al Pais      -- terecro.terfecing
Dim EstCivil        As String   'Est.Civil                -- tercero.estcivnro
Dim Sexo            As String   'Sexo                     -- tercero.tersex
Dim FAlta           As String   'Fec. de Alta             -- empleado.empfaltagr y fases.altfec
Dim Estudio         As String   'Estudia                  -- empleado.empestudia
Dim NivEst          As String   'Nivel de Estudio         -- empleado.nivnro
Dim Tdocu           As String   'Tipo Documento           -- ter_dpc.tidnro (DU)
Dim Ndocu           As String   'Nro. Documento           -- ter_doc.nrodoc
Dim Cuil            As String   'CUIL                     -- ter_doc.nrodoc (10)
Dim Calle           As String   'Calle                    -- detdom.calle
Dim Nro             As String   'Número                   -- detdom.nro
Dim Piso            As String   'Piso                     -- detdom.piso
Dim Depto           As String   'Depto                    -- detdom.depto
Dim Torre           As String   'Torre                    -- detdom.torre
Dim Manzana         As String   'Manzana                  -- detdom.manzana
Dim Cpostal         As String   'Cpostal                  -- detdom.codigopostal
Dim Entre           As String   'Entre Calles             -- detdom.entrecalles
Dim Barrio          As String   'Barrio                   -- detdom.barrio
Dim Localidad       As String   'Localidad                -- detdom.locnro
Dim Partido         As String   'Partido                  -- detdom.partnro
Dim Zona            As String   'Zona                     -- detdom.zonanro
Dim Provincia       As String   'Provincia                -- detdom.provnro
Dim Pais            As String   'Pais                     -- detdom.paisnro
Dim Telefono        As String   'Telefono                 -- telefono.telnro
Dim TelLaboral        As String   'Telefono                 -- telefono.telnro
Dim TelCelular        As String   'Telefono                 -- telefono.telnro
Dim Email           As String   'E-mail                   -- empleado.empemail
Dim Sucursal        As String   'Sucursal                 -- his_estructura.estrnro
Dim Sector          As String   'Sector                   -- his_estructura.estrnro
Dim categoria       As String   'Categoria                -- his_estructura.estrnro
Dim Puesto          As String   'Puesto                   -- his_estructura.estrnro
Dim CCosto          As String   'C.Costo                  -- his_estructura.estrnro
Dim Gerencia        As String   'Gerencia                 -- his_estructura.estrnro
Dim Departamento    As String   'Departamento             -- his_estructura.estrnro
Dim Direccion       As String   'Direccion                -- his_estructura.estrnro
Dim CajaJub         As String   'Caja de Jubilacion       -- his_estructura.estrnro
Dim Sindicato       As String   'Sindicato                -- his_estructura.estrnro
Dim OSocialLey         As String   'Obra Social              -- his_estructura.estrnro
Dim PlanOSLey          As String   'Plan OS                  -- his_estructura.estrnro
Dim OSocialElegida         As String   'Obra Social              -- his_estructura.estrnro
Dim PlanOSElegida          As String   'Plan OS                  -- his_estructura.estrnro
Dim Contrato        As String   'Contrato                 -- his_estructura.estrnro
Dim Convenio        As String   'Convenio                 -- his_estructura.estrnro
Dim LPago           As String   'Lugar de Pago            -- his_estructura.estrnro
Dim RegHorario      As String   'Regimen Horario          -- his_estructura.estrnro
Dim FormaLiq        As String   'Forma de Liquidacion     -- his_estructura.estrnro
Dim FormaPago       As String   'Forma de Pago            -- formapago.fpagdescabr
Dim SucBanco        As String   'Sucursal del Banco       -- ctabancaria.ctabsuc
Dim BancoPago       As String   'Banco Pago               -- his_estructura.estrnro, formapago.fpagbanc (siempre y cuando el Banco sea <> 0) y ctabancaria.banco
Dim NroCuenta       As String   'Nro. Cuenta              -- ctabancario.ctabnro
Dim NroCuentaAcreditacionE As String
Dim Actividad       As String   'Actividad                -- his_estructura.estrnro
Dim CondSIJP        As String   'Condicion SIJP           -- his_estructura.estrnro
Dim SitRev          As String   'Sit. de Revista SIJP     -- his_estructura.estrnro
Dim ModCont         As String   'Mod. de Contrat. SIJP    -- his_estructura.estrnro
Dim ART             As String   'ART                      -- his_estructura.estrnro
Dim Estado          As String   'Estado                   -- empleado.empest y fases.estado
Dim CausaBaja       As String   'Causa de Baja            -- fases.caunro
Dim FBaja           As String   'Fecha de Baja            -- fases.bajfec
Dim Empresa         As String   'Empresa                  -- his_estructura.estrnro
Dim ModOrg          As String   'Empresa                  -- his_estructura.estrnro
Dim OSL             As String   'Empresa                  -- his_estructura.estrnro
Dim OSE             As String   'Empresa                  -- his_estructura.estrnro
Dim PlanOdon        As String   'Empresa                  -- his_estructura.estrnro
Dim Locacion        As String   'Empresa                  -- his_estructura.estrnro
Dim Area            As String   'Empresa                  -- his_estructura.estrnro
Dim SubDepto        As String   'Empresa                  -- his_estructura.estrnro
Dim NroCBU          As String   'Empresa                  -- his_estructura.estrnro
Dim Empremu         As String   'Remuneración del empleado
Dim GrupoSeguridad  As String   'Grupo de Seguridad
Dim Nro_GrupoSeguridad  As Long 'Grupo de Seguridad       -- his_estructura.estrnro
Dim FFinContrato    As String
Dim Fecha_FinContrato As String
Dim Reporta_a       As String
Dim Nro_Reporta_a   As Long

Dim Ternro As Long

Dim NroTercero          As Long

Dim Nro_Legajo          As Long
Dim Nro_TDocumento      As Long
Dim nro_nivest          As Long
Dim nro_estudio         As Long

Dim Nro_Nrodom          As String

Dim Nro_Barrio          As Long
Dim Nro_Localidad       As Long
Dim Nro_Partido         As Long
Dim Nro_Zona            As Long
Dim Nro_Provincia       As Long
Dim Nro_Pais            As Long
Dim nro_paisnac         As Long

Dim nro_sucursal        As Long
Dim nro_sector          As Long
Dim nro_categoria       As Long
Dim nro_puesto          As Long
Dim nro_ccosto          As Long
Dim nro_gerencia        As Long
Dim nro_cajajub         As Long
Dim nro_sindicato       As Long
Dim nro_osocial_ley     As Long
Dim nro_planos_ley      As Long
Dim nro_osocial_elegida As Long
Dim nro_planos_elegida  As Long
Dim nro_contrato        As Long
Dim nro_convenio        As Long
Dim nro_reghorario      As Long
Dim nro_formaliq        As Long
Dim nro_bancopago       As Long
Dim nro_actividad       As Long
Dim nro_sitrev          As Long
Dim nro_modcont         As Long
Dim nro_art             As Long
Dim nro_departamento    As Long
Dim nro_direccion       As Long
Dim nro_lpago           As Long
Dim nro_condsijp        As Long
Dim nro_formapago       As Long
Dim nro_causabaja       As Long
Dim nro_empresa         As Long
Dim NroDom              As Long
Dim nro_osl             As Long
Dim nro_odon            As Long
Dim nro_ose             As Long
Dim nro_locacion        As Long
Dim nro_area            As Long
Dim nro_SubDepto        As Long
Dim nro_empremu         As Long

Dim nro_estcivil        As Long
Dim nro_nacionalidad    As Long

Dim F_Nacimiento        As String
Dim F_Fallecimiento     As String
Dim F_Alta              As String
Dim F_Baja              As String
Dim F_Ingreso           As String

Dim Inserto_estr        As Boolean

Dim ter_sucursal        As Long
Dim Ter_Empresa         As Long
Dim ter_cajajub         As Long
Dim ter_sindicato       As Long
Dim ter_osocial_ley     As Long
Dim ter_osocial_elegida As Long
Dim ter_bancopago       As Long
Dim ter_art             As Long
Dim ter_sexo            As Long
Dim ter_estudio         As Long
Dim ter_estado          As Long
Dim os_vacio            As Long
Dim os_bool             As Boolean
Dim Inserto_estr2       As Boolean 'ver 4.14
Dim fpgo_bancaria       As Long

Dim rs As New ADODB.Recordset
Dim rs_Sql As New ADODB.Recordset
Dim rs_Empleado As New ADODB.Recordset
Dim rs_Tel As New ADODB.Recordset
Dim rs_repl As New ADODB.Recordset


Dim SucDesc             As Boolean   'Sucursal                 -- his_estructura
Dim SecDesc             As Boolean   'Sector                   -- his_estructura
Dim CatDesc             As Boolean   'Categoria                -- his_estructura
Dim PueDesc             As Boolean   'Puesto                   -- his_estructura
Dim CCoDesc             As Boolean   'C.Costo                  -- his_estructura
Dim GerDesc             As Boolean   'Gerencia                 -- his_estructura
Dim DepDesc             As Boolean   'Departamento             -- his_estructura
Dim DirDesc             As Boolean   'Direccion                -- his_estructura
Dim CaJDesc             As Boolean   'Caja de Jubilacion       --
Dim SinDesc             As Boolean   'Sindicato                -- his_estructura
Dim OSoElegidaDesc      As Boolean   'Obra Social              -- his_estructura
Dim PoSElegidaDesc      As Boolean   'Plan OS                  -- his_estructura
Dim OSoLeyDesc          As Boolean   'Obra Social              -- his_estructura
Dim PoSLeyDesc          As Boolean   'Plan OS                  -- his_estructura
Dim CotDesc             As Boolean   'Contrato                 -- his_estructura
Dim CovDesc             As Boolean   'Convenio                 -- his_estructura
Dim LPaDesc             As Boolean   'Lugar de Pago            -- his_estructura
Dim RegDesc             As Boolean   'Regimen Horario          -- his_estructura
Dim FLiDesc             As Boolean   'Forma de Liquidacion     -- his_estructura
Dim FPaDesc             As Boolean      'Forma de Pago            -- his_estructura
Dim BcoDesc             As Boolean      'Banco Pago               --
Dim ActDesc             As Boolean      'Actividad                --
Dim CSJDesc             As Boolean      'Condicion SIJP           --
Dim SReDesc             As Boolean      'Sit. de Revista SIJP     --
Dim MCoDesc             As Boolean      'Mod. de Contrat. SIJP    --
Dim ARTDesc             As Boolean      'ART                      --
Dim EmpDesc             As Boolean      'Empresa                  --
Dim OSLDesc             As Boolean      'Empresa                  --
Dim POdoDesc             As Boolean     'Empresa                  --
Dim OSEDesc             As Boolean      'Empresa                  --
Dim LocDesc             As Boolean      'Empresa                  --
Dim AreaDesc             As Boolean     'Empresa                  --
Dim SubDepDesc           As Boolean     'Empresa                  --

Dim IngresoDom          As Boolean

Dim rs_tdoc As New ADODB.Recordset
Dim rs_emp  As New ADODB.Recordset
Dim rs_tpl  As New ADODB.Recordset
Dim rs_leg  As New ADODB.Recordset

Dim Nroadtemplate As Long
Dim Nro_Institucion As Long

Dim Sigue As Boolean
Dim ExisteLeg As Boolean
Dim CalculaLegajo As Boolean
Dim Valida_CUIL As Boolean

Dim F_NacAux As Date
Dim F_AltaAux As Date
Dim Edad As Integer
Dim MaxEmpl As Long
Dim CantEmpl As Long

    On Error GoTo SaltoLinea


    ' True indica que se hace por Descripcion. False por Codigo Externo

    SucDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    SecDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CatDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    PueDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CCoDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    GerDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    DepDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    DirDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CaJDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    SinDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    OSoElegidaDesc = True ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    PoSElegidaDesc = True ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    OSoLeyDesc = True   ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    PoSLeyDesc = True   ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CotDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CovDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    LPaDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    RegDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    FLiDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    FPaDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    BcoDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    ActDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CSJDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    SReDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    MCoDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    ARTDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    EmpDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    OSLDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    POdoDesc = True     ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    OSEDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    LocDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    AreaDesc = True     ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    SubDepDesc = True   ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    
    
    'FGZ - 21/02/2009 - reviso si debo validar el CUIL o no --------------------
    Valida_CUIL = True
    StrSql = " SELECT tidvalida FROM tipodocu WHERE tidnro = 10"
    OpenRecordset StrSql, rs_Sql
    If Not rs_Sql.EOF Then
        If Not EsNulo(rs_Sql!tidvalida) Then
            Valida_CUIL = True
        Else
            Valida_CUIL = False
        End If
    Else
        Valida_CUIL = False
    End If
    'FGZ - 21/02/2009 - reviso si debo validar el CUIL o no --------------------
    
    
    Sigue = True 'Indica que si en el archivo viene mas de una vez un empleado, le crea las fases
    ExisteLeg = False
    'RegLeidos = RegLeidos + 1
    LineaCarga = LineaCarga + 1
    
    Flog.writeline
    FlogE.writeline
    FlogP.writeline
    
    'Legajo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Legajo"
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Legajo = Aux
    'Legajo = Mid(strReg, pos1, pos2 - pos1 + 1)
    If Legajo = "N/A" Or EsNulo(Legajo) Then
        CalculaLegajo = True
    Else
        StrSql = "SELECT * FROM empleado WHERE empleado.empleg = " & Legajo
        OpenRecordset StrSql, rs_emp
        If (Not rs_emp.EOF) Then
            If (Not Sigue) Then
                Texto = ": " & " - El Empleado ya Existe."
                NroColumna = 1
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                'Ok = False
                'RegError = RegError + 1
                'Exit Sub
            Else
                NroTercero = rs_emp!Ternro
                ExisteLeg = True
            End If
        End If
    End If
    
    
    'Apellido
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Apellido"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If (Aux <> "N/A") Then
    Aux = EliminarCHInvalidosII(Aux, 0, "")
    End If
    Apellido = Left(Aux, 25)
    
    
    
    'Nombre
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nombre"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    If (Aux <> "N/A") Then
    Aux = EliminarCHInvalidosII(Aux, 0, "")
    End If
    nombre = Left(Aux, 25)
    If (Apellido = "" Or Apellido = "N/A") And (nombre = "" Or nombre = "N/A") Then
        Texto = ": " & " - Debe Ingresar un Nombre y Apellido."
        NroColumna = 2
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    
    'Fecha de Nacimiento
    NroColumna = NroColumna + 1
    'Obligatorio = False
    Obligatorio = True
    Campoetiqueta = "Fecha de Nacimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If Aux <> "N/A" Then
    Aux = EliminarCHInvalidosII(Aux, 2, "")
    End If
    Fnac = Aux
    If Fnac = "N/A" Then
       F_Nacimiento = "Null"
    Else
       F_Nacimiento = ConvFecha(Fnac)
       F_NacAux = CDate(Fnac)
    End If
    
    
    'Pais de Nacimiento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Pais de Nacimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    PaisNac = Aux
    If PaisNac <> "N/A" Then
        StrSql = " SELECT paisnro FROM pais WHERE UPPER(paisdesc) = '" & UCase(PaisNac) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_paisnac = rs_Sql!Paisnro
        Else
            StrSql = " INSERT INTO pais(paisdesc,paisdef) VALUES ('" & UCase(PaisNac) & "',0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_paisnac = getLastIdentity(objConn, "pais")
        End If
    Else
        nro_paisnac = 0
    End If
    
    
    'Nacionalidad
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nacionalidad"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Nacionalidad = Aux
    If Nacionalidad <> "N/A" Then
        StrSql = " SELECT nacionalnro FROM nacionalidad WHERE UPPER(nacionaldes) = '" & UCase(Nacionalidad) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_nacionalidad = rs_Sql!nacionalnro
        Else
            StrSql = " INSERT INTO nacionalidad(nacionaldes) VALUES ('" & UCase(Nacionalidad) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_nacionalidad = getLastIdentity(objConn, "nacionalidad")
        End If
    Else
        nro_nacionalidad = 0
    End If
    If nro_nacionalidad = 0 Then
        Texto = ": " & " - La Nacionalidad no Existe."
        NroColumna = 6
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    
    'Fecha de Ingreso al Pais
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de Ingreso al Pais"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If Aux <> "N/A" Then
    Aux = EliminarCHInvalidosII(Aux, 2, "")
    End If
    Fing = Aux
    If (Fing = "N/A") Or EsNulo(Fing) Then
        F_Ingreso = "Null"
    Else
        F_Ingreso = ConvFecha(Fing)
    End If
    
    'Estado Civil
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estado Civil"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    EstCivil = Left(Aux, 30)
    If EstCivil <> "N/A" And Not EsNulo(EstCivil) Then
        StrSql = " SELECT estcivnro FROM estcivil WHERE UPPER(estcivdesabr) = '" & UCase(EstCivil) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_estcivil = rs_Sql!estcivnro
        Else
            StrSql = " INSERT INTO estcivil(estcivdesabr) VALUES ('" & UCase(EstCivil) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_estcivil = getLastIdentity(objConn, "estcivil")
        End If
    Else
        nro_estcivil = 0
    End If
    If nro_estcivil = 0 Then
        Texto = ": " & " - El Estado Civil no Existe."
        NroColumna = 8
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Sexo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sexo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Sexo = UCase(Aux)
    If (Sexo = "M") Or (Sexo = "-1") Or (Sexo = "MASCULINO") Then
        ter_sexo = -1
    Else
        ter_sexo = 0
    End If
                                                            
    'Fecha de alta
    NroColumna = NroColumna + 1
    'Obligatorio = False
    Obligatorio = True
    Campoetiqueta = "Fecha de alta"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If Aux <> "N/A" Then
        Aux = EliminarCHInvalidosII(Aux, 2, "")
    End If
    FAlta = Aux
    If FAlta = "N/A" Or EsNulo(FAlta) Then
        F_Alta = "Null"
        Texto = ": " & " - La Fecha de Alta es Obligatoria."
        NroColumna = 10
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    Else
        F_Alta = ConvFecha(FAlta)
        F_AltaAux = CDate(FAlta)
        
        
        'Validar que el empleado sea mayor a 14 años
        Edad = 0
        If (Month(F_AltaAux) > Month(F_NacAux)) Then
           Edad = DateDiff("yyyy", F_NacAux, F_AltaAux)
        Else
           If (Month(F_AltaAux) = Month(F_NacAux)) And (Day(F_AltaAux) >= Day(F_NacAux)) Then
             Edad = DateDiff("yyyy", F_NacAux, F_AltaAux)
           Else
             Edad = DateDiff("yyyy", F_NacAux, F_AltaAux) - 1
           End If
        End If
        
        If Edad < 14 Then
            Texto = ": " & " - El empleado es menor a 14 años."
            NroColumna = 10
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            'Ok = False
            RegError = RegError + 1
            Exit Sub
        End If
        
    End If
   
   
    'Estudia?
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estudia?"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Estudio = UCase(Aux)
    If Estudio <> "N/A" And Estudio <> "NO" Then
        If Estudio = "SI" Then
            ter_estudio = -1
        Else
            ter_estudio = 0
        End If
    Else
        ter_estudio = 0
    End If
    
    
    'Nivel de estudio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nivel de estudio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    NivEst = Left(Aux, 40)
    If NivEst <> "N/A" Then
        StrSql = " SELECT nivnro FROM nivest WHERE UPPER(nivdesc) = '" & UCase(NivEst) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_nivest = rs_Sql!nivnro
        Else
            StrSql = " INSERT INTO nivest(nivdesc,nivsist,nivobligatorio,nivestfli) VALUES ('" & UCase(NivEst) & "',-1,0,-1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_nivest = getLastIdentity(objConn, "nivest")
        End If
    Else
        nro_nivest = 0
    End If
    
    
    'Tipo de Doc
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tipo de Doc"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Tdocu = Left(Aux, 8)
    If Tdocu <> "N/A" Then
        StrSql = " SELECT tidnro FROM tipodocu WHERE UPPER(tidsigla) = '" & UCase(Tdocu) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            Nro_TDocumento = rs_Sql!tidnro
        Else
            'busco la primera institucion, si no existe la creo
            StrSql = " SELECT * FROM institucion "
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                Nro_Institucion = rs!InstNro
            Else
                'creo una
                StrSql = " INSERT INTO institucion (instdes,instabre) VALUES ('NACIONAL','NAC')"
                objConn.Execute StrSql, , adExecuteNoRecords
                Nro_Institucion = getLastIdentity(objConn, "institucion")
            End If
            'creo el tipo de documento
            StrSql = " INSERT INTO tipodocu(tidnom,tidsigla,tidsist,instnro,tidunico) VALUES ('" & UCase(Tdocu) & "','" & UCase(Tdocu) & "',0," & Nro_Institucion & ",0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            Nro_TDocumento = getLastIdentity(objConn, "tipodocu")
        End If
    Else
        Nro_TDocumento = 0
    End If
    If Nro_TDocumento = 0 Then
        Texto = ": " & " - El Tipo de Documento no Existe."
        NroColumna = 13
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    
    'Nro de Documento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nro de Documento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Ndocu = Left(Aux, 30)
    If Ndocu = "N/A" Then
        Ndocu = ""
    End If
    
    
    '---------------------------------------------------
    ' Verifica si el nro documento pertenece a otro empleado
    '---------------------------------------------------
    StrSql = "SELECT * FROM empleado "
    StrSql = StrSql & " INNER JOIN ter_doc ON ter_doc.ternro = empleado.ternro "
    StrSql = StrSql & " WHERE ter_doc.tidnro = " & Nro_TDocumento & " AND ter_doc.nrodoc = '" & Ndocu & "'"
    OpenRecordset StrSql, rs_tdoc
    If (Not rs_tdoc.EOF) Then
        'JPB: Se quito que existe el legajo. Aqui lo que ya existe seria el documento
        'ExisteLeg = True
        If (Not Sigue) Then
            Texto = ": " & " - Ese Tipo y Numero de Documento estan Asignados a otro Empleado."
            NroColumna = 14
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            'Ok = False
            RegError = RegError + 1
            Exit Sub
        Else
            'FGZ - 11/11/2010 - Si es el mismo legajo no debe poner ningun cartel
            If NroTercero <> rs_tdoc!Ternro Then
                NroTercero = rs_tdoc!Ternro
                'ExisteLeg = True
                Texto = ": " & " - Empleado: " & Legajo & " - Ese Tipo y Numero de Documento estan Asignados a otro Empleado."
                NroColumna = 14
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                'JPB: Faltaba que interrumpa el proceso porque en este caso ya existe el documento y esta asociado a otro tercero
                RegError = RegError + 1
                Exit Sub
            End If
        End If
     Else
            'JPB -Si no existe como empleado, verifico si existe como otro tercero
             StrSql = "SELECT * FROM ter_doc "
             StrSql = StrSql & " WHERE ter_doc.nrodoc = '" & Ndocu & "'"
             OpenRecordset StrSql, rs_tdoc
            
             If (Not rs_tdoc.EOF) Then
                 NroTercero = rs_tdoc!Ternro
                 ExisteLeg = True
                 Texto = ": " & " - Empleado: " & Legajo & " - El Numero de Documento " & Ndocu & " ya existe en la base para el tercero: " & NroTercero
                 NroColumna = 14
                 Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                 RegError = RegError + 1
                 Exit Sub
             End If
             '---------------------------
    
    
    End If

    
    'CUIL
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "CUIL"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Cuil = Replace(Left(Aux, 30), "-", "")
    If Cuil = "N/A" Or EsNulo(Cuil) Then
        'FGZ - 23/02/2009 - validacion de cuil configurable ---------------
        If Valida_CUIL Then
            Cuil = Generar_Cuil(Ndocu, CBool(ter_sexo))
            'Cuil = CalcularCUIL(Ndocu)
            If Cuil = 0 Then
                Texto = ": " & " - Campo " & Campoetiqueta & " no se pudo generar automaticamente " & Ndocu
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                RegError = RegError + 1
                Exit Sub
            End If
        Else
            Cuil = ""
        End If
        'FGZ - 23/02/2009 - validacion de cuil configurable ---------------
    Else
        If Valida_CUIL Then
            'OK = Cuil_Valido(Cuil, Texto)
            OK = Cuil_Valido605(Cuil, Ndocu, Texto, Tdocu, nro_nacionalidad)
            If Not OK Then
                OK = True
                'Texto = "El CUIL no es valido"
                'Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
                'Cuil = CalcularCUIL(Ndocu)
                
                'FGZ - 26/08/2010 ---------------
                'Cuil = Generar_Cuil(Ndocu, CBool(ter_sexo))
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                RegError = RegError + 1
                Exit Sub
                'FGZ - 26/08/2010 ---------------
            End If
        End If
    End If
    'FGZ - 23/02/2009 - validacion de cuil configurable ---------------
    If Cuil = "" And Not Valida_CUIL Then
        Cuil = ""
    Else
        Cuil = Left(Cuil, 2) & "-" & Mid(Cuil, 3, 8) & "-" & Right(Cuil, 1)
    End If
    'FGZ - 23/02/2009 - validacion de cuil configurable ---------------
    
    
    'Hasta Aqui los Datos Obligatorios del Empleado
    IngresoDom = True
        
    'Calle
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Calle"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Calle = Left(Aux, 250)
    If Calle = "N/A" Then
        Calle = ""
        IngresoDom = False
    End If
    
    
    'Nro
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Nro"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Nro = Left(Aux, 8)
    If (Nro <> "N/A") Then
        Nro_Nrodom = Nro
    Else
        Nro_Nrodom = 0
    End If
    
    'Piso
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Piso"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Piso = Left(Aux, 8)
    If Piso = "N/A" Then
        Piso = ""
    End If
    
    'Departamento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Departamento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Depto = Left(Aux, 8)
    If Depto = "N/A" Then
        Depto = ""
    End If

    'Torre
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Torre"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Torre = Left(Aux, 8)
    If Torre = "N/A" Then
        Torre = ""
    End If
    
    'Manzana
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Manzana"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Manzana = Left(Aux, 8)
    If Manzana = "N/A" Then
        Manzana = ""
    End If

    'Codigo Postal
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Codigo Postal"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Cpostal = Left(Aux, 12)
    If Cpostal = "N/A" Then
        Cpostal = ""
    End If

    'Entre calles
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Entre calles"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Entre = Left(Aux, 80)
    If Entre = "N/A" Then
        Entre = ""
    End If

    'Barrio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Barrio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Barrio = Left(Aux, 30)
    If Barrio = "N/A" Then
        Barrio = ""
    End If

    'Localidad
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Localidad"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    '19/03/2010 - Se cambio la longitud de 30 a 60
    'Localidad = Left(aux, 30)
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Localidad = Left(Aux, 60)
    
    'Partido
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Partido"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Partido = Left(Aux, 30)
    
    'Zona
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Zona"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    '19/03/2010 - Se cambio la longitud a 60
    'Zona = Left(aux, 20)
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Zona = Left(Aux, 60)
    
    'Provincia
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Provincia"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Provincia = Left(Aux, 20)
    
    'Pais
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Pais"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Pais = Left(Aux, 20)
    
    
    
    
    
    If Pais <> "N/A" Then
        Call ValidarPais(Pais, Nro_Pais)
    Else
        Nro_Pais = 0
    End If
    If Provincia <> "N/A" Then
        Call ValidarProvincia(Provincia, Nro_Provincia, Nro_Pais)
    Else
        Nro_Provincia = 0
    End If
    If Localidad <> "N/A" Then
        Call ValidarLocalidad(Localidad, Nro_Localidad, Nro_Pais, Nro_Provincia)
    Else
        Nro_Localidad = 0
    End If
    If Zona <> "N/A" Then
        Call ValidarZona(Zona, Nro_Zona, Nro_Provincia)
    Else
        Nro_Zona = 0
    End If
    
    If Partido <> "N/A" Then
        Call ValidarPartido(Partido, Nro_Partido)
    Else
        Nro_Partido = 0
    End If

    
    
    If (IngresoDom = True) And (Nro_Localidad = 0) Then
        Texto = ": " & " - Debe Ingresar la Localidad."
        NroColumna = 25
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    If (IngresoDom = True) And (Nro_Provincia = 0) Then
        Texto = ": " & " - Debe Ingresar la Provincia."
        NroColumna = 28
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    If (IngresoDom = True) And (Nro_Pais = 0) Then
        Texto = ": " & " - Debe Ingresar la Pais."
        NroColumna = 29
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    
    'Tel Particular
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tel Particular"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    If Aux = "N/A" Then
        Telefono = ""
    Else
        Aux = EliminarCHInvalidosII(Aux, 3, "")
        Telefono = Left(Aux, 20)
    End If
    
    
    'Tel Laboral
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tel Laboral"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    If Aux = "N/A" Then
        TelLaboral = ""
    Else
        Aux = EliminarCHInvalidosII(Aux, 3, "")
        TelLaboral = Left(Aux, 20)
    End If
    
    'Tel Celular
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tel Celular"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    If Aux = "N/A" Then
        TelCelular = ""
    Else
        Aux = EliminarCHInvalidosII(Aux, 3, "")
        TelCelular = Left(Aux, 20)
    End If

    
    'Email
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Email"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    If Aux <> "N/A" Then
        Aux = EliminarCHInvalidosII(Aux, 4, "")
        Email = Left(Aux, 100)
    Else
        Email = ""
    End If
    
    
    'Sucursal
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sucursal"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Sucursal = Aux
    ' Validacion y Creacion de la Sucursal (junto con sus Complementos)
    If Sucursal <> "N/A" Then
        If SucDesc Then
            Call ValidaEstructura(1, Sucursal, nro_sucursal, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(1, Sucursal, nro_sucursal, Inserto_estr)
        End If
        Call CreaTercero(10, Sucursal, ter_sucursal)
        
        If Inserto_estr Then
            Call CreaComplemento(1, ter_sucursal, nro_sucursal, Sucursal)
            Inserto_estr = False
        End If
    Else
        nro_sucursal = 0
    End If
    
    'Sector
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sector"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Sector = Aux
    ' Validacion y Creacion del Sector
    If Sector <> "N/A" Then
        If SecDesc Then
            Call ValidaEstructura(2, Sector, nro_sector, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(2, Sector, nro_sector, Inserto_estr)
        End If
    Else
        nro_sector = 0
    End If

    'Convenio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Convenio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Convenio = Aux
    ' Validacion, Creacion del Convenio
    If Convenio <> "N/A" Then
        If CovDesc Then
            Call ValidaEstructura(19, Convenio, nro_convenio, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(19, Convenio, nro_convenio, Inserto_estr)
        End If
        
        If Inserto_estr Then
            Call CreaComplemento(19, 0, nro_convenio, Convenio)
            Inserto_estr = False
        End If
    Else
        nro_convenio = 0
    End If
    
    
    'Categoria
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Categoria"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    categoria = Aux
    ' Validacion, Creacion de la Categoria
    If (categoria <> "N/A" And nro_convenio <> 0) Then
        If CatDesc Then
            'Call ValidaEstructura(3, categoria, nro_categoria, Inserto_estr)
            Call ValidaCategoria(3, categoria, nro_convenio, nro_categoria, Inserto_estr)
            
        Else
            'Call ValidaEstructuraCodExt(3, categoria, nro_categoria, Inserto_estr)
            Call ValidaCategoriaCodExt(3, categoria, nro_convenio, nro_categoria, Inserto_estr)
        End If
    Else
        nro_categoria = 0
    End If
    
    'Puesto
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Puesto"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Puesto = Aux
    'Validacion y Creacion del Puesto (junto con sus Complementos)
    If Puesto <> "N/A" Then
        If PueDesc Then
            Call ValidaEstructura(4, Puesto, nro_puesto, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(4, Puesto, nro_puesto, Inserto_estr)
        End If
        
        If Inserto_estr Then
            Call CreaComplemento(4, 0, nro_puesto, Puesto)
            Inserto_estr = False
        End If
    Else
        nro_puesto = 0
    End If

    'Centro de Costo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Centro de Costo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    CCosto = Aux
    ' Validacion y Creacion del Centro de Costo
    If CCosto <> "N/A" Then
        If CCoDesc Then
            Call ValidaEstructura(5, CCosto, nro_ccosto, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(5, CCosto, nro_ccosto, Inserto_estr)
        End If
    Else
        nro_ccosto = 0
    End If

    'Gerencia
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Gerencia"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Gerencia = Aux
    ' Validacion y Creacion de la Gerencia
    If Gerencia <> "N/A" Then
        If GerDesc Then
            Call ValidaEstructura(6, Gerencia, nro_gerencia, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(6, Gerencia, nro_gerencia, Inserto_estr)
        End If
    Else
        nro_gerencia = 0
    End If

    
    'Departamento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Departamento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Departamento = Aux
    ' Validacion y Creacion del Departamento
    If Departamento <> "N/A" Then
        If DepDesc Then
            Call ValidaEstructura(9, Departamento, nro_departamento, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(9, Departamento, nro_departamento, Inserto_estr)
        End If
    Else
        nro_departamento = 0
    End If


    'Direccion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Direccion = Aux
    ' Validacion y Creacion de direccion
    If Direccion <> "N/A" Then
        If DirDesc Then
            Call ValidaEstructura(35, Direccion, nro_direccion, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(35, Direccion, nro_direccion, Inserto_estr)
        End If
    Else
        nro_direccion = 0
    End If
    
    
    'Caja de Jubilacion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Caja de Jubilacion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    CajaJub = Aux
    ' Validacion y Creacion de la Caja de Jubilacion
    If CajaJub <> "N/A" Then
        If CaJDesc Then
            Call ValidaEstructura(15, CajaJub, nro_cajajub, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(15, CajaJub, nro_cajajub, Inserto_estr)
        End If
        Call CreaTercero(6, CajaJub, ter_cajajub)
        
        If Inserto_estr Then
            Call CreaComplemento(15, ter_cajajub, nro_cajajub, CajaJub)
        End If
    Else
        nro_cajajub = 0
    End If

    'Sindicato
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sindicato"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Sindicato = Aux
    ' Validacion y Creacion del Sindicato
    If Sindicato <> "N/A" Then
        If SinDesc Then
            Call ValidaEstructura(16, Sindicato, nro_sindicato, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(16, Sindicato, nro_sindicato, Inserto_estr)
        End If
        Call CreaTercero(5, Sindicato, ter_sindicato)
        
        If Inserto_estr Then
            Call CreaComplemento(16, ter_sindicato, nro_sindicato, Sindicato)
        End If
    Else
        nro_sindicato = 0
    End If
    
    os_vacio = 0
    os_bool = False
    
    'Obra social por Ley
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Obra social por Ley"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    OSocialLey = Aux
    ' Validacion y Creacion de la Obra Social por Ley
    If OSocialLey <> "N/A" And OSocialLey <> "" Then
        If OSoLeyDesc Then
            Call ValidaEstructura(24, OSocialLey, nro_osocial_ley, Inserto_estr)
            Call ValidaEstructura2(17, OSocialLey, os_vacio, Inserto_estr2) 'Modificado ver 4.14
        Else
            Call ValidaEstructuraCodExt(24, OSocialLey, nro_osocial_ley, Inserto_estr)
        End If
        Call CreaTercero(4, OSocialLey, ter_osocial_ley)
        
        If Inserto_estr Then
            Call CreaComplemento(24, ter_osocial_ley, nro_osocial_ley, OSocialLey)
            'Comentado ver 4.14
            'Call CreaComplemento(24, ter_osocial_ley, os_vacio, OSocialLey) 'Agregado ver 3.96
        Else
            StrSql = " SELECT origen FROM replica_estr WHERE estrnro = " & nro_osocial_ley
            OpenRecordset StrSql, rs_repl
            
            If Not rs_repl.EOF Then
                ter_osocial_ley = rs_repl!Origen
                rs_repl.Close
            End If
        End If
        If Inserto_estr2 Then 'Agregado ver 4.14 ----- D
            Call CreaComplemento(24, ter_osocial_ley, os_vacio, OSocialLey)
        Else
            StrSql = " SELECT origen FROM replica_estr WHERE estrnro = " & os_vacio
            
        OpenRecordset StrSql, rs_repl
            
            If Not rs_repl.EOF Then
                ter_osocial_ley = rs_repl!Origen
                rs_repl.Close
            End If
            
        End If '------------- H
    Else
        nro_osocial_ley = 0
    End If

    os_vacio = 0
    os_bool = False
    Inserto_estr2 = False
    
    'Plan de OS por Ley
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Plan de Obra social por Ley"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    PlanOSLey = Aux
    ' Validacion y Creacion del Plan de Obra Social por Ley
    If (PlanOSLey <> "N/A" And nro_osocial_ley <> 0) Then
        If PoSLeyDesc Then
            Call ValidaEstructura(25, PlanOSLey, nro_planos_ley, Inserto_estr)
            Call ValidaEstructura2(23, PlanOSLey, os_vacio, Inserto_estr2) 'Modificado ver 4.14
        Else
            Call ValidaEstructuraCodExt(25, PlanOSLey, nro_planos_ley, Inserto_estr)
         End If
        
        If Inserto_estr Then
            'Manterola Maria Magdalena (29/06/2011)
            Call CreaComplemento(23, ter_osocial_ley, nro_planos_ley, PlanOSLey)
            'Comentado ver 4.14
            'Call CreaComplemento(23, ter_osocial_ley, os_vacio, PlanOSLey) 'Agregado ver 3.96
            Inserto_estr = False
        End If
        If Inserto_estr2 Then 'Agregado ver 4.14 ----- D
            Call CreaComplemento(23, ter_osocial_ley, os_vacio, PlanOSLey)
            Inserto_estr2 = False
        End If '-------------- H
    Else
        nro_planos_ley = 0
    End If
    os_vacio = 0
    os_bool = False
    

    'OS Elegida
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Obra Social elegida"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    OSocialElegida = Aux
    ' Validacion y Creacion de la Obra Social Elegida
    If OSocialElegida <> "N/A" And OSocialElegida <> "" Then
        If OSoElegidaDesc Then
            Call ValidaEstructura(17, OSocialElegida, nro_osocial_elegida, Inserto_estr)
            Call ValidaEstructura2(24, OSocialElegida, os_vacio, Inserto_estr2) 'Modificado ver 4.14
        Else
            Call ValidaEstructuraCodExt(17, OSocialElegida, nro_osocial_elegida, Inserto_estr)
        End If
        Call CreaTercero(4, OSocialElegida, ter_osocial_elegida)
        
        If Inserto_estr Then
            Call CreaComplemento(17, ter_osocial_elegida, nro_osocial_elegida, OSocialElegida)
            'Comentado ver 4.14
            'Call CreaComplemento(17, ter_osocial_elegida, os_vacio, OSocialElegida) 'Agregado ver 3.96
        Else
            StrSql = " SELECT origen FROM replica_estr WHERE estrnro = " & nro_osocial_elegida
            OpenRecordset StrSql, rs_Sql
            ter_osocial_elegida = rs_Sql!Origen
            rs_Sql.Close
        End If
        If Inserto_estr2 Then 'Agregado ver 4.14 ------------- D
            Call CreaComplemento(17, ter_osocial_elegida, os_vacio, OSocialElegida)
        Else
            StrSql = " SELECT origen FROM replica_estr WHERE estrnro = " & nro_osocial_elegida
            OpenRecordset StrSql, rs_Sql
            ter_osocial_elegida = rs_Sql!Origen
            rs_Sql.Close
        End If '----------- H
    Else
        nro_osocial_elegida = 0
    End If
    os_vacio = 0
    os_bool = False
    Inserto_estr2 = False

    'Plan de OS Elegida
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Plan Obra Social elegida"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    PlanOSElegida = Aux
    ' Validacion y Creacion del Plan de Obra Social Elegida
    If (PlanOSElegida <> "N/A" And nro_osocial_elegida <> 0) Then
        If PoSElegidaDesc Then
            Call ValidaEstructura(23, PlanOSElegida, nro_planos_elegida, Inserto_estr)
            Call ValidaEstructura2(25, PlanOSElegida, os_vacio, Inserto_estr2) 'Agregado ver 3.96
        Else
            Call ValidaEstructuraCodExt(23, PlanOSElegida, nro_planos_elegida, Inserto_estr)
        End If
        
        If Inserto_estr Then
            Call CreaComplemento(23, ter_osocial_elegida, nro_planos_elegida, PlanOSElegida)
            'Comentado ver 4.14
            'Call CreaComplemento(23, ter_osocial_elegida, os_vacio, PlanOSElegida) 'Agregado ver 3.96
            Inserto_estr = False
        End If
        If Inserto_estr2 Then 'Agregado ver 4.14 ------- D
            Call CreaComplemento(23, ter_osocial_elegida, os_vacio, PlanOSElegida)
            Inserto_estr2 = False
        End If '----- H
    Else
        nro_planos_elegida = 0
    End If
    
    
    'Contrato
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Contrato"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Contrato = Aux
    ' Validacion y Creacion del Contrato
    If Contrato <> "N/A" Then
        If CotDesc Then
            Call ValidaEstructura(18, Contrato, nro_contrato, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(18, Contrato, nro_contrato, Inserto_estr)
        End If
        
        If Inserto_estr Then
            Call CreaComplemento(18, 0, nro_contrato, Contrato)
            Inserto_estr = False
        End If
    Else
        nro_contrato = 0
    End If
    
    'Fecha de fin de contrato
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de fin de contrato"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    If Aux <> "N/A" Then
        Aux = EliminarCHInvalidosII(Aux, 2, "")
    End If
    FFinContrato = Aux
    If FFinContrato = "N/A" Or EsNulo(FFinContrato) Then
        Fecha_FinContrato = "Null"
    Else
        Fecha_FinContrato = ConvFecha(FFinContrato)
    End If
    
    'Lugar de pago
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Lugar de pago"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    LPago = Aux
    ' Validacion y Creacion del Lugar de Pago
    If LPago <> "N/A" Then
        If LPaDesc Then
            Call ValidaEstructura(20, LPago, nro_lpago, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(20, LPago, nro_lpago, Inserto_estr)
        End If
    Else
        nro_lpago = 0
    End If

    'Regimen Horario
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Regimen Horario"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    RegHorario = Aux
    If RegHorario <> "N/A" Then
        If RegDesc Then
            Call ValidaEstructura(21, RegHorario, nro_reghorario, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(21, RegHorario, nro_reghorario, Inserto_estr)
        End If
    Else
        nro_reghorario = 0
    End If

    'Forma de Liquidacion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Forma de Liquidacion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    FormaLiq = Aux
    If FormaLiq <> "N/A" Then
        If FLiDesc Then
            Call ValidaEstructura(22, FormaLiq, nro_formaliq, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(22, FormaLiq, nro_formaliq, Inserto_estr)
        End If
        ' Agregado por MB 10/08/2006
        If Inserto_estr Then
            Call CreaComplemento(22, 0, nro_formaliq, FormaLiq)
            Inserto_estr = False
        End If
    Else
        nro_formaliq = 0
    End If

    'Forma de Pago
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Forma de Pago"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    FormaPago = Aux
    If FormaPago <> "N/A" Then
        StrSql = " SELECT fpagnro FROM formapago WHERE fpagdescabr = '" & FormaPago & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_formapago = rs_Sql!fpagnro
        Else
            StrSql = " INSERT INTO formapago(fpagdescabr,fpagbanc,acunro,monnro) VALUES ('" & FormaPago & "',0,6,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            nro_formapago = getLastIdentity(objConn, "formapago")
        End If
    Else
        nro_formapago = 0
    End If
    
    'Banco de Pago
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Banco de Pago"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    BancoPago = Aux
    If BancoPago <> "N/A" Then
        If BcoDesc Then
            Call ValidaEstructura(41, BancoPago, nro_bancopago, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(41, BancoPago, nro_bancopago, Inserto_estr)
        End If
        Call CreaTercero(13, BancoPago, ter_bancopago)
        
        If Inserto_estr Then
            Call CreaComplemento(41, ter_bancopago, nro_bancopago, BancoPago)
        End If
        fpgo_bancaria = -1
    Else
        nro_bancopago = 0
        fpgo_bancaria = 0
    End If
    
    'Nro de cuenta
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nro de cuenta"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    NroCuenta = Aux
    If NroCuenta = "N/A" Then
        NroCuenta = ""
    Else
        NroCuenta = Left(NroCuenta, 30)
    End If
    
    'CBU
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "CBU"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    NroCBU = Aux
    If NroCBU = "N/A" Then
        NroCBU = ""
    Else
        NroCBU = Left(NroCBU, 30)
    End If
    
    'Sucursal del banco
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sucursal del banco"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    SucBanco = Aux
    If SucBanco = "N/A" Then
        SucBanco = ""
    Else
        SucBanco = Left(SucBanco, 10)
    End If


    'Nro de cuenta de acreditacion empresa
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nro de cuenta de acreditacion empresa"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    NroCuentaAcreditacionE = Aux
    If NroCuentaAcreditacionE = "N/A" Or EsNulo(NroCuentaAcreditacionE) Then
        NroCuentaAcreditacionE = ""
    Else
        StrSql = "SELECT * FROM ctabancaria WHERE cbnro ='" & NroCuentaAcreditacionE & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
            Texto = ": " & " - Nro de cuenta de acreditacion empresa no existe."
            NroColumna = 59
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            NroCuentaAcreditacionE = ""
        End If
    End If
    
    'Actividad SIJP
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Actividad SIJP"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Actividad = Aux
    If Actividad <> "N/A" Then
        If ActDesc Then
            Call ValidaEstructura(29, Actividad, nro_actividad, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(29, Actividad, nro_actividad, Inserto_estr)
        End If
    Else
        nro_actividad = 0
    End If

    'Condicion SIJP
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Condicion SIJP"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    CondSIJP = Aux
    If CondSIJP <> "N/A" And Not EsNulo(CondSIJP) Then
        If CSJDesc Then
            Call ValidaEstructura(31, CondSIJP, nro_condsijp, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(31, CondSIJP, nro_condsijp, Inserto_estr)
        End If
    Else
        nro_condsijp = 0
    End If

    'Situacion de Revista SIJP
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Situacion de Revista SIJP"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    SitRev = Aux
    If SitRev <> "N/A" And Not EsNulo(SitRev) Then
        If SReDesc Then
            Call ValidaEstructura(30, SitRev, nro_sitrev, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(30, SitRev, nro_sitrev, Inserto_estr)
        End If
    Else
        nro_sitrev = 0
    End If
    
    
    'ART
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "ART"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    ART = Aux
    If ART <> "N/A" And Not EsNulo(ART) Then
        If ARTDesc Then
            Call ValidaEstructura(40, ART, nro_art, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(40, ART, nro_art, Inserto_estr)
        End If
        Call CreaTercero(8, ART, ter_art)
        
        If Inserto_estr Then
            Call CreaComplemento(40, ter_art, nro_art, ART)
        End If
    Else
        nro_art = 0
    End If
    
    'Estado del empleado
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estado del empleado"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Estado = Aux
    If UCase(Estado) = "ACTIVO" Then
        ter_estado = -1
    Else
        ter_estado = 0
    End If
    
    
    'Causa de baja
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Causa de baja"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    CausaBaja = Aux
    If Not EsNulo(CausaBaja) And CausaBaja <> "N/A" Then
        StrSql = " SELECT caunro FROM causa WHERE caudes = '" & CausaBaja & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_causabaja = rs_Sql!caunro
        Else
            StrSql = " INSERT INTO causa(caudes,causist,caudesvin,empnro) VALUES ('" & CausaBaja & "',0,-1,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            nro_causabaja = getLastIdentity(objConn, "causa")
        End If
    Else
        nro_causabaja = 0
    End If
    
    
    
    'Fecha de baja
    NroColumna = NroColumna + 1
        ' Si hay una causa de baja, se tiene que cargar ssi la Fecha de Baja (tablero adp)
    If nro_causabaja <> 0 Then
        Obligatorio = True
    Else
        Obligatorio = False
    End If
    Campoetiqueta = "Fecha de baja"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If Aux <> "N/A" Then
    Aux = EliminarCHInvalidosII(Aux, 2, "")
    End If
    FBaja = Aux
    If EsNulo(FBaja) Or FBaja = "N/A" Then
        F_Baja = "Null"
    Else
        F_Baja = ConvFecha(FBaja)
    End If

        
    
    'Empresa
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Empresa"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Empresa = Aux
    Else
        pos2 = Len(strReg)
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Empresa = Aux
    End If
    If Empresa <> "N/A" Or EsNulo(Empresa) Then
        If EmpDesc Then
            Call ValidaEstructura(10, Empresa, nro_empresa, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(10, Empresa, nro_empresa, Inserto_estr)
        End If
        Call CreaTercero(10, Empresa, Ter_Empresa)
        
        If Inserto_estr Then
            Call CreaComplemento(10, Ter_Empresa, nro_empresa, Empresa)
        End If
    Else
        nro_empresa = 0
    End If
    
    'Remuneración del Empleado
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Remuneración del Empleado"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Empremu = Aux
    If Empremu = "N/A" Or EsNulo(Empremu) Then
        Empremu = "Null"
    End If
   
    'Modelo de Organizacion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Modelo de Organizacion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        ModOrg = Aux
        'desde aca
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        ModOrg = Aux
        If ModOrg = "N/A" Or EsNulo(ModOrg) Then
            'agrego codigo sebastian stremel 15/09/2011
            StrSql = "SELECT * FROM adptemplate WHERE tplatedefault = -1"
            OpenRecordset StrSql, rs_tpl
            If Not rs_tpl.EOF Then
                nro_ModOrg = rs_tpl!tplatenro
            Else
                StrSql = "SELECT top 1 * FROM adptemplate"
                OpenRecordset StrSql, rs_tpl
                If rs_tpl.EOF Then
                    Texto = ": no hay modelos de organizacion"
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                    RegError = RegError + 1
                    Exit Sub
                Else
                    nro_ModOrg = rs_tpl!tplatenro
                End If
                
            End If
            
           
        Else
            StrSql = "SELECT * FROM adptemplate WHERE tplatedesabr = '" & ModOrg & "'"
            OpenRecordset StrSql, rs_tpl
            If rs_tpl.EOF Then
                StrSql = "INSERT INTO adptemplate (tplatedesabr,tplatedefault) VALUES ('" & ModOrg & "',-1)"
                objConn.Execute StrSql, , adExecuteNoRecords
                nro_ModOrg = getLastIdentity(objConn, "adptemplate")
            Else
                nro_ModOrg = rs_tpl!tplatenro
            End If
        End If
    Else
            StrSql = "SELECT * FROM adptemplate WHERE tplatedefault = -1"
            OpenRecordset StrSql, rs_tpl
            If Not rs_tpl.EOF Then
                nro_ModOrg = rs_tpl!tplatenro
            Else
                StrSql = "SELECT top 1 * FROM adptemplate"
                OpenRecordset StrSql, rs_tpl
                If rs_tpl.EOF Then
                    Texto = ": no hay modelos de organizacion"
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                    RegError = RegError + 1
                    Exit Sub
                Else
                    nro_ModOrg = rs_tpl!tplatenro
                End If
                
            End If

    End If
        
        
        'hasta aca
'        If ModOrg = "N/A" Or EsNulo(ModOrg) Then
'            nro_ModOrg = 0
'        Else
'            StrSql = "SELECT * FROM adptemplate WHERE tplatedesabr = '" & ModOrg & "'"
'            OpenRecordset StrSql, rs_tpl
'            If rs_tpl.EOF Then
'               StrSql = "INSERT INTO adptemplate (tplatedesabr,tplatedefault) VALUES ('" & ModOrg & "',-1)"
'                objConn.Execute StrSql, , adExecuteNoRecords
'                nro_ModOrg = getLastIdentity(objConn, "adptemplate")
'            Else
'                nro_ModOrg = rs_tpl!tplatenro
'            End If
'        End If
'    Else
'        nro_ModOrg = 0
'    End If

    'Reporta_a  campo empleado.empreporta va el tercero
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Reporta_a"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Reporta_a = Aux
        If Not EsNulo(Reporta_a) And Reporta_a <> "N/A" Then
            If IsNumeric(Reporta_a) Then
                StrSql = "SELECT * FROM empleado WHERE empleado.empleg = " & Reporta_a
                If rs_emp.State = adStateOpen Then rs_emp.Close
                OpenRecordset StrSql, rs_emp
                If (Not rs_emp.EOF) Then
                    Nro_Reporta_a = rs_emp!Ternro
                Else
                    Nro_Reporta_a = 0
                    Texto = ": " & "El Empleado " & Reporta_a & " no existe."
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                End If
            Else
                Nro_Reporta_a = 0
                Texto = "El valor no es numérico."
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            End If
        End If
    Else
        Nro_Reporta_a = 0
        'no es obligatorio
    End If
    If rs_emp.State = adStateOpen Then rs_emp.Close
    

    'Grupo de Seguridad
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Grupo de Seguridad"
    pos1 = pos2 + 2
    pos2 = Len(strReg) 'InStr(pos1, strReg, Separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        GrupoSeguridad = Aux
        If GrupoSeguridad <> "N/A" And Not EsNulo(GrupoSeguridad) Then
            Call ValidaEstructura(7, GrupoSeguridad, Nro_GrupoSeguridad, Inserto_estr)
        Else
            Nro_GrupoSeguridad = 0
        End If
    Else
        Nro_GrupoSeguridad = 0
    End If
'Fin lectura de campos
' =====================================================================================================
  
  
  'JPB - Inicializo el pass+perfil (l_ess_Pass_Estandar y l_ess_Perfil_Estandar) por defecto del Autogestion en el caso que este habilitado el confper 12
  '--------------------------------
  Call ESS_Configuracion_Default
  '-------------------------------


  ' Inserto el Tercero
  If F_Nacimiento = "Null" Then
    F_Nacimiento = "''"
  End If
  If F_Ingreso = "Null" Then
    F_Ingreso = "''"
  End If
  
  If CalculaLegajo Then
    Call CalcularLegajo(nro_empresa, Legajo)
  End If

    If Not ExisteLeg Then
        'Busco si esta config la maxima cant de empleados
        MaxEmpl = 0
        StrSql = "SELECT lib_generica FROM sistema"
        OpenRecordset StrSql, rs_Sql
        If Not EsNulo(rs_Sql!lib_generica) Then
            If IsNumeric(Decryptar("56238", rs_Sql!lib_generica)) Then MaxEmpl = Decryptar("56238", rs_Sql!lib_generica)
        End If
        
        If MaxEmpl > 0 Then
            'Calculo la cantidad actual de empleados
            StrSql = "SELECT COUNT(empleg) cant FROM empleado"
            OpenRecordset StrSql, rs_Sql
            If Not rs_Sql.EOF Then
                If Not EsNulo(rs_Sql!cant) Then CantEmpl = rs_Sql!cant
            End If
            
            'Controlo cantidad
            If CantEmpl >= MaxEmpl Then
                Texto = ": " & "El sistema alcanzo el maximo de " & MaxEmpl & " empleados permitidos."
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                RegError = RegError + 1
                Exit Sub
            End If
        End If
    
        StrSql = " INSERT INTO tercero(ternom,terape,terfecnac,tersex,terestciv,estcivnro,nacionalnro,paisnro,terfecing)"
        StrSql = StrSql & " VALUES('" & nombre & "','" & Apellido & "'," & F_Nacimiento & "," & ter_sexo & "," & nro_estcivil & "," & nro_estcivil & ","
        If nro_nacionalidad <> 0 Then
            StrSql = StrSql & nro_nacionalidad & ","
        Else
            StrSql = StrSql & "null,"
        End If
        If nro_paisnac <> 0 Then
            StrSql = StrSql & nro_paisnac & ","
        Else
            StrSql = StrSql & "null,"
        End If
        StrSql = StrSql & F_Ingreso & ")"
        objConn.Execute StrSql, , adExecuteNoRecords

        NroTercero = getLastIdentity(objConn, "tercero")
        
        Texto = ": " & "Codigo de Tercero = " & NroTercero
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
 
        
    Else
        StrSql = " UPDATE tercero SET "
        StrSql = StrSql & " ternom = " & "'" & nombre & "'"
        StrSql = StrSql & ", terape = " & "'" & Apellido & "'"
        StrSql = StrSql & ", terfecnac = " & F_Nacimiento
        StrSql = StrSql & ", tersex = " & ter_sexo
        StrSql = StrSql & ", terestciv =" & nro_estcivil
        StrSql = StrSql & ", estcivnro =" & "'" & nro_estcivil & "'"
        If nro_nacionalidad <> 0 Then
            StrSql = StrSql & ", nacionalnro =" & nro_nacionalidad
        End If
        StrSql = StrSql & ", terfecing =" & F_Ingreso
        If nro_paisnac <> 0 Then
            StrSql = StrSql & ", paisnro =" & nro_paisnac
        End If
        StrSql = StrSql & " WHERE ternro = " & NroTercero
        objConn.Execute StrSql, , adExecuteNoRecords
      
        Texto = ": " & " - Empleado: " & Legajo & " - Ese Empleado ya existe en la base. Datos de tercero actualizados"
        NroColumna = 1
        Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, strReg)
        
                        
    End If
    
    
    
    'Inserto Empleado
    If Not ExisteLeg Then
        StrSql = " INSERT INTO empleado(empleg,empfecalta,empfecbaja,empest,empfaltagr,empfbajaprev,"
        StrSql = StrSql & "ternro,nivnro,empestudia,terape,ternom,empinterno,empemail,"
        StrSql = StrSql & "empnro,tplatenro,empremu"
        If Nro_Reporta_a <> 0 Then
            StrSql = StrSql & ",empreporta"
        End If
        
          
        'JPB - Si esta habilitado el confper 12 asigno el pass+perfil por defecto al empleado
        '------------------------------------------------------------------------------------
        If (l_ess_Pass_Estandar <> "") And (l_ess_Perfil_Estandar <> "") Then
             StrSql = StrSql & ",empessactivo,emppass,perfnro"
        End If
        '------------------------------------------------------------------------------------
    
        StrSql = StrSql & ") VALUES("
        StrSql = StrSql & Legajo & "," & F_Alta & "," & F_Baja & "," & ter_estado & "," & F_Alta & "," & Fecha_FinContrato & ","
        StrSql = StrSql & NroTercero & "," & nro_nivest & "," & ter_estudio & ",'" & Apellido & "','"
        StrSql = StrSql & nombre & "',Null,'" & Email & "',1," & nro_ModOrg & "," & Empremu
        If Nro_Reporta_a <> 0 Then
            StrSql = StrSql & "," & Nro_Reporta_a
        End If
        
        'JPB - Si esta habilitado el confper 12 asigno el pass+perfil por defecto al empleado
        '------------------------------------------------------------------------------------
        If (l_ess_Pass_Estandar <> "") And (l_ess_Perfil_Estandar <> "") Then
             StrSql = StrSql & ",-1,'" & l_ess_Pass_Estandar & "'," & l_ess_Perfil_Estandar
        End If
        '------------------------------------------------------------------------------------
    
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = ": " & "Empleado insertado - " & Legajo & " - " & Apellido & " - " & nombre
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
    Else
        StrSql = " UPDATE empleado SET "
        StrSql = StrSql & " empleg = " & Legajo
        StrSql = StrSql & " ,empfecalta = " & F_Alta
        StrSql = StrSql & " ,empfecbaja = " & F_Baja
        StrSql = StrSql & " ,empfbajaprev = " & Fecha_FinContrato
        StrSql = StrSql & " ,empest = " & ter_estado
        StrSql = StrSql & " ,empfaltagr = " & F_Alta
        StrSql = StrSql & " ,nivnro = " & nro_nivest
        StrSql = StrSql & " ,empestudia = " & ter_estudio
        StrSql = StrSql & " ,terape = " & "'" & Apellido & "'"
        StrSql = StrSql & " ,ternom = " & "'" & nombre & "'"
        StrSql = StrSql & " ,empemail = " & "'" & Email & "'"
        StrSql = StrSql & " ,empnro = 1 "
        StrSql = StrSql & " ,tplatenro =" & nro_ModOrg
        StrSql = StrSql & " ,Empremu =" & Empremu
        If Nro_Reporta_a <> 0 Then
            StrSql = StrSql & ", empreporta =" & Nro_Reporta_a
        End If
        'JPB - Si esta habilitado el confper 12 asigno el pass+perfil por defecto al empleado
        '------------------------------------------------------------------------------------
        If (l_ess_Pass_Estandar <> "") And (l_ess_Perfil_Estandar <> "") Then
            StrSql = StrSql & ", empessactivo = -1"
            StrSql = StrSql & ", emppass = '" & l_ess_Pass_Estandar & "'"
            StrSql = StrSql & ", perfnro =" & l_ess_Perfil_Estandar
        End If
        '------------------------------------------------------------------------------------
        StrSql = StrSql & " WHERE ternro = " & NroTercero
        objConn.Execute StrSql, , adExecuteNoRecords
    
        Texto = ": " & "Empleado Actualizado - " & Legajo & " - " & Apellido & " - " & nombre
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
    End If
    
    ' Inserto el Registro correspondiente en ter_tip
    If Not ExisteLeg Then
        StrSql = " INSERT INTO ter_tip(ternro,tipnro) VALUES(" & NroTercero & ",1)"
        objConn.Execute StrSql, , adExecuteNoRecords
    End If

' Inserto los Documentos
    If Not ExisteLeg Then
        If Nro_TDocumento <> 0 Then
            StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
            StrSql = StrSql & " VALUES(" & NroTercero & "," & Nro_TDocumento & ",'" & Ndocu & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            Texto = ": " & "Inserte el Documento - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        End If
    Else
        If Nro_TDocumento <> 0 Then
            StrSql = "SELECT * FROM ter_doc WHERE ternro = " & NroTercero
            StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If rs.EOF Then
                StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
                StrSql = StrSql & " VALUES(" & NroTercero & "," & Nro_TDocumento & ",'" & Ndocu & "')"
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = ": " & "Inserte el Documento - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            Else
                StrSql = " UPDATE ter_doc SET "
                StrSql = StrSql & " nrodoc = '" & Ndocu & "'"
                StrSql = StrSql & " WHERE ternro = " & NroTercero
                StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = Texto = ": " & "Documento actualizado - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
    End If
  
    If Not ExisteLeg Then
        If Cuil <> "" Then
            StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
            StrSql = StrSql & " VALUES(" & NroTercero & ",10,'" & Cuil & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            Texto = ": " & "Inserte el CUIL - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        End If
    Else
        If Cuil <> "" Then
            StrSql = "SELECT * FROM ter_doc WHERE ternro = " & NroTercero
            StrSql = StrSql & " AND tidnro = 10 "
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If rs.EOF Then
                StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
                StrSql = StrSql & " VALUES(" & NroTercero & ",10,'" & Cuil & "')"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Inserte el CUIL - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            Else
                StrSql = " UPDATE ter_doc SET "
                StrSql = StrSql & " nrodoc = '" & Cuil & "'"
                StrSql = StrSql & " WHERE ternro = " & NroTercero
                StrSql = StrSql & " AND tidnro = 10"
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = Texto = ": " & "CUIL actualizado - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
    End If

' Inserto el Domicilio
  If rs.State = adStateOpen Then
    rs.Close
  End If
  
  If Not ExisteLeg Then

    If (Nro_Localidad <> 0 And Nro_Provincia <> 0 And Nro_Pais <> 0) Then
        StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
        StrSql = StrSql & " VALUES(1," & NroTercero & ",-1,2)"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        NroDom = getLastIdentity(objConn, "cabdom")
      
        StrSql = " INSERT INTO detdom(domnro,calle,nro,piso,oficdepto,torre,manzana,codigopostal,entrecalles,"
        StrSql = StrSql & "locnro,provnro,paisnro,barrio,partnro,zonanro) "
        StrSql = StrSql & " VALUES (" & NroDom & ",'" & Calle & "','" & Nro_Nrodom & "','" & Piso & "','"
        StrSql = StrSql & Depto & "','" & Torre & "','" & Manzana & "','" & Cpostal & "','" & Entre & "'," & Nro_Localidad & ","
        StrSql = StrSql & Nro_Provincia & "," & Nro_Pais & ",'" & Barrio & "'," & Nro_Partido & "," & Nro_Zona & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
      
        Texto = ": " & "Inserte el Domicilio - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        
        If Telefono <> "" Then
            'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
            StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
            StrSql = StrSql & " VALUES(" & NroDom & ",'" & Telefono & "',0,-1,0,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            Texto = ": " & "Inserte el Telefono Principal - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        End If
        If TelLaboral <> "" Then
            StrSql = "SELECT * FROM telefono "
            StrSql = StrSql & " WHERE domnro =" & NroDom
            StrSql = StrSql & " AND telnro ='" & TelLaboral & "'"
            If rs_Tel.State = adStateOpen Then rs_Tel.Close
            OpenRecordset StrSql, rs_Tel
            If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelLaboral & "',0,0,0,3)"
                objConn.Execute StrSql, , adExecuteNoRecords
                  
                Texto = ": " & "Inserte el Telefono Laboral - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
        If TelCelular <> "" Then
            StrSql = "SELECT * FROM telefono "
            StrSql = StrSql & " WHERE domnro =" & NroDom
            StrSql = StrSql & " AND telnro ='" & TelCelular & "'"
            If rs_Tel.State = adStateOpen Then rs_Tel.Close
            OpenRecordset StrSql, rs_Tel
            If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelCelular & "',0,0,-1,2)"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Inserte el Telefono Celular - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
    End If
  Else
    If (Nro_Localidad <> 0 And Nro_Provincia <> 0 And Nro_Pais <> 0) Then
        StrSql = "SELECT * FROM cabdom  "
        StrSql = StrSql & " WHERE tipnro = 1"
        StrSql = StrSql & " AND ternro = " & NroTercero
        StrSql = StrSql & " AND domdefault = -1"
        StrSql = StrSql & " AND tidonro = 2"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
          StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
          StrSql = StrSql & " VALUES(1," & NroTercero & ",-1,2)"
          objConn.Execute StrSql, , adExecuteNoRecords
          
          NroDom = getLastIdentity(objConn, "cabdom")
        
          StrSql = " INSERT INTO detdom(domnro,calle,nro,piso,oficdepto,torre,manzana,codigopostal,entrecalles,"
          StrSql = StrSql & "locnro,provnro,paisnro,barrio,partnro,zonanro) "
          StrSql = StrSql & " VALUES (" & NroDom & ",'" & Calle & "','" & Nro_Nrodom & "','" & Piso & "','"
          StrSql = StrSql & Depto & "','" & Torre & "','" & Manzana & "','" & Cpostal & "','" & Entre & "'," & Nro_Localidad & ","
          StrSql = StrSql & Nro_Provincia & "," & Nro_Pais & ",'" & Barrio & "'," & Nro_Partido & "," & Nro_Zona & ")"
          objConn.Execute StrSql, , adExecuteNoRecords
        
          Texto = ": " & "Inserte el Domicilio - "
          Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
          
          If Telefono <> "" Then
            'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
              StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
              StrSql = StrSql & " VALUES(" & NroDom & ",'" & Telefono & "',0,-1,0,1)"
              objConn.Execute StrSql, , adExecuteNoRecords

              Texto = ": " & "Inserte el Telefono Principal - "
              Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
          End If
          If TelLaboral <> "" Then
              StrSql = "SELECT * FROM telefono "
              StrSql = StrSql & " WHERE domnro =" & NroDom
              StrSql = StrSql & " AND telnro ='" & TelLaboral & "'"
              If rs_Tel.State = adStateOpen Then rs_Tel.Close
              OpenRecordset StrSql, rs_Tel
              If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                  StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                  StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelLaboral & "',0,0,0,3)"
                  objConn.Execute StrSql, , adExecuteNoRecords
                    
                  Texto = ": " & "Inserte el Telefono Laboral - "
                  Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
              End If
          End If
          If TelCelular <> "" Then
              StrSql = "SELECT * FROM telefono "
              StrSql = StrSql & " WHERE domnro =" & NroDom
              StrSql = StrSql & " AND telnro ='" & TelCelular & "'"
              If rs_Tel.State = adStateOpen Then rs_Tel.Close
              OpenRecordset StrSql, rs_Tel
              If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                  StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                  StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelCelular & "',0,0,-1,2)"
                  objConn.Execute StrSql, , adExecuteNoRecords
                  Texto = ": " & "Inserte el Telefono Celular - "
                  Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
              End If
          End If
        Else
            StrSql = " UPDATE detdom SET "
            StrSql = StrSql & " calle =" & "'" & Calle & "'"
            StrSql = StrSql & ",nro =" & "'" & Nro_Nrodom & "'"
            StrSql = StrSql & ",piso =" & "'" & Piso & "'"
            StrSql = StrSql & ",oficdepto =" & "'" & Depto & "'"
            StrSql = StrSql & ",torre =" & "'" & Torre & "'"
            StrSql = StrSql & ",manzana =" & "'" & Manzana & "'"
            StrSql = StrSql & ",codigopostal =" & "'" & Cpostal & "'"
            StrSql = StrSql & ",entrecalles =" & "'" & Entre & "'"
            StrSql = StrSql & ",locnro =" & Nro_Localidad
            StrSql = StrSql & ",provnro =" & Nro_Provincia
            StrSql = StrSql & ",paisnro =" & Nro_Pais
            StrSql = StrSql & ", partnro = " & Nro_Partido
            StrSql = StrSql & ", zonanro =" & Nro_Zona
            StrSql = StrSql & " WHERE domnro = " & rs!domnro
            objConn.Execute StrSql, , adExecuteNoRecords
        
            Texto = ": " & "Domicilio Actualizado - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        
            If Telefono <> "" Then
                StrSql = "SELECT * FROM telefono "
                StrSql = StrSql & " WHERE domnro =" & rs!domnro
                StrSql = StrSql & " AND telnro ='" & Telefono & "'"
                If rs_Tel.State = adStateOpen Then rs_Tel.Close
                OpenRecordset StrSql, rs_Tel
                If rs_Tel.EOF Then
                    'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                    StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                    StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & Telefono & "',0,-1,0,1)"
                    objConn.Execute StrSql, , adExecuteNoRecords
                      
                    Texto = ": " & "Inserte el Telefono Principal - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            End If
            If TelLaboral <> "" Then
                StrSql = "SELECT * FROM telefono "
                StrSql = StrSql & " WHERE domnro =" & rs!domnro
                StrSql = StrSql & " AND telnro ='" & TelLaboral & "'"
                If rs_Tel.State = adStateOpen Then rs_Tel.Close
                OpenRecordset StrSql, rs_Tel
                If rs_Tel.EOF Then
                    'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                    StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                    StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & TelLaboral & "',0,0,0,3)"
                    objConn.Execute StrSql, , adExecuteNoRecords
                      
                    Texto = ": " & "Inserte el Telefono Laboral - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            End If
            If TelCelular <> "" Then
                StrSql = "SELECT * FROM telefono "
                StrSql = StrSql & " WHERE domnro =" & rs!domnro
                StrSql = StrSql & " AND telnro ='" & TelCelular & "'"
                If rs_Tel.State = adStateOpen Then rs_Tel.Close
                OpenRecordset StrSql, rs_Tel
                If rs_Tel.EOF Then
                    'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                    StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                    StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & TelCelular & "',0,0,-1,2)"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = ": " & "Inserte el Telefono Celular - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            End If
        End If
    End If
  End If
  


If Not ExisteLeg Then
    ' Inserto las Fases
    StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
    StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
    If nro_causabaja <> 0 Then
        StrSql = StrSql & nro_causabaja
        StrSql = StrSql & ",0,-1,-1,-1,-1,-1)"  ' estado fase=0  - no mira ter_estado
    Else
        StrSql = StrSql & "null"
        StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
    End If
    objConn.Execute StrSql, , adExecuteNoRecords
    
    If nro_causabaja <> 0 Then
        Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
    End If
    
Else
    'FGZ - 23/07/2010
    'SI existe el legajo reviso si estaba activo o inactivo.
    '   Si estaba inactivo y ahora el estado es activo dedeuzco que se trata de un reingreso
    '   ==> intento insertar la fase.
    '   Problemas potenciales
    '
    '   Existe Fase cerrada *****
    '   Fase anterior  ------[------------------]--------
    'Casos
    '   Fecha ingreso  ---FI----------------------------- ==> no se puede insertar (informar error)
    '   Fecha ingreso  ---------   FI-------------------- ==> tenfo 2 posibilidades
    '                                                           Cierro fase un dia antes de FI y creo nueva fase
    '                                                           no se puede insertar (informar error)
    '   Fecha ingreso  -----------------------------FI--- ==> inserto la nueva fase
    
    '   Existe Fase abierta *****
    '   Fase anterior  ------[---------------------------
    'Casos
    '   Fecha ingreso  ---FI----------------------------- ==> no se puede insertar (informar error)
    '   Fecha ingreso  -------------FI------------------- ==> Cierro fase un dia antes de FI y creo nueva fase
   
    'Si no existe fase ==> simplemente crea la fase
    
    StrSql = "SELECT * FROM fases WHERE empleado = " & NroTercero
    StrSql = StrSql & " ORDER BY altfec DESC"
    OpenRecordset StrSql, rs
    
    If rs.EOF Then
        'No Existe ==> Inserto
        StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
        StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
        If nro_causabaja <> 0 Then
          StrSql = StrSql & nro_causabaja
          StrSql = StrSql & ",0,-1,-1,-1,-1,-1)"  ' estado fase=0  - no mira ter_estado
        Else
          StrSql = StrSql & "null"
          StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
        End If
        objConn.Execute StrSql, , adExecuteNoRecords
        
        If nro_causabaja <> 0 Then
            Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
        End If
        
    Else
        'Existe
        Texto = ": " & "Existe Fase"
        If CBool(rs!Estado) Then
            'Activa
            Texto = Texto & " activa. " & rs!altfec & " - " & IIf(EsNulo(rs!bajfec), "#", rs!bajfec)
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            
            
            'Si ahora está inactivo ==> actualiza la fase
            If Not CBool(ter_estado) Then
                'la cierro y abro otro
                StrSql = " UPDATE fases SET "
                StrSql = StrSql & " bajfec =" & F_Baja
                StrSql = StrSql & ",estado = 0 "
                If nro_causabaja <> 0 Then
                StrSql = StrSql & ", caunro =" & nro_causabaja
                End If
                StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
                objConn.Execute StrSql, , adExecuteNoRecords
            
                Texto = ": " & "Fase Actualizada."
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                
                If nro_causabaja <> 0 Then
                    Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
                End If
                
            Else
                Texto = ": " & "Si desea actualizar debe corregir la situacion manualmente."
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
            
        Else
            'Inactiva
            Texto = Texto & " inactiva "
            If EsNulo(rs!bajfec) Then
                Texto = Texto & " abierta " & rs!altfec & " - #"
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                
                If CDate(rs!altfec) < CDate(FAlta) Then
                    Texto = ": " & "Cierro la fase anterior (un dia antes) y creo la nueva fase"
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    
                    'la cierro y abro otro - (se cierra a FAlta-1)
                    StrSql = " UPDATE fases SET "
                    StrSql = StrSql & "bajfec =" & ConvFecha(DateAdd("d", -1, FAlta))
                    StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
                    objConn.Execute StrSql, , adExecuteNoRecords
                        
                    'abro una nueva
                    StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
                    StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
                    If nro_causabaja <> 0 Then
                      StrSql = StrSql & nro_causabaja
                      StrSql = StrSql & ",0,-1,-1,-1,-1,-1)"
                    Else
                      StrSql = StrSql & "null"
                      StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    Texto = ": " & "Fase Actualizada."
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    
                    If nro_causabaja <> 0 Then
                        Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
                    End If
                    
                Else
                    If CDate(rs!altfec) > CDate(FAlta) Then
                        Texto = ": " & "No se puede actualizar las fases. Debe corregir la situacion manualmente."
                        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    Else
                        'es la misma fase, no hago nada.
                        ' actualiza
                        
                        StrSql = " UPDATE fases SET "
                        StrSql = StrSql & " bajfec =" & F_Baja
                        If nro_causabaja <> 0 Then
                        StrSql = StrSql & ", caunro =" & nro_causabaja
                        End If
                        StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
                        objConn.Execute StrSql, , adExecuteNoRecords
                    
                        Texto = ": " & "Fase Actualizada - "
                        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                            
                        If nro_causabaja <> 0 Then
                            Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
                        End If
                            
                    End If
                End If
            Else
                Texto = Texto & " cerrada " & rs!altfec & " - " & rs!bajfec
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            
                If CDate(rs!altfec) < CDate(FAlta) And CDate(rs!bajfec) < CDate(FAlta) Then
                    'Fase existente ------[------]-----------
                    'Nueva fase     ---------------[-----]---
                    
                    'abro una nueva
                    StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
                    StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
                    If nro_causabaja <> 0 Then
                      StrSql = StrSql & nro_causabaja
                      StrSql = StrSql & ",0,-1,-1,-1,-1,-1)"
                    Else
                      StrSql = StrSql & "null"
                      StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    Texto = ": " & "Fase creada."
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    
                    If nro_causabaja <> 0 Then
                        Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
                    End If
                    
                Else
                    'FGZ - 11/11/2010 --------------------------
                    If CDate(rs!altfec) = CDate(FAlta) And CDate(rs!bajfec) = CDate(FBaja) Then
                        If nro_causabaja <> 0 Then
                            StrSql = " UPDATE fases SET "
                            StrSql = StrSql & " caunro =" & nro_causabaja
                            StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
                            objConn.Execute StrSql, , adExecuteNoRecords
                    
                            Texto = ": " & "Fase Actualizada - "
                            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                            
                            Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
                            
                        Else
                        
                        End If
                    Else
                        Texto = ": " & "No se puede crear la fases nueva. Debe corregir la situacion manualmente."
                        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    End If
                End If
            End If
        End If
    End If
'        StrSql = " UPDATE fases SET "
'        StrSql = StrSql & " altfec =" & F_Alta
'        StrSql = StrSql & ",bajfec =" & F_Baja
'        StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
'        objConn.Execute StrSql, , adExecuteNoRecords
'
'        Texto = ": " & "Fase Actualizada - "
'        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
'    End If
End If
    
    
    
'  18/02/2010 - No hacer nada con las fases cuando existe el empleado
'  Else
'    StrSql = "SELECT * FROM fases WHERE estado = -1 AND sueldo = -1 AND vacaciones = -1 AND indemnizacion = -1 AND real = -1 AND empleado = " & NroTercero
'    OpenRecordset StrSql, rs
'    If rs.EOF Then
'        StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
'        StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
'        If nro_causabaja <> 0 Then
'          StrSql = StrSql & nro_causabaja
'        Else
'          StrSql = StrSql & "null"
'        End If
'        StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
'        objConn.Execute StrSql, , adExecuteNoRecords
'    Else
'        StrSql = " UPDATE fases SET "
'        StrSql = StrSql & " altfec =" & F_Alta
'        StrSql = StrSql & ",bajfec =" & F_Baja
'        StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
'        objConn.Execute StrSql, , adExecuteNoRecords
'
'        Texto = ": " & "Fase Actualizada - "
'        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
'    End If
  
  'Inserto la cuenta bancaria
    If Not ExisteLeg Then
        'FGZ - 09/04/2010 ------------------------------------------------------------------------------
        'FGZ - 09/04/2010 - Es obligatorio el nro de cuenta o el CBU -----------------------------------
        'If (nro_formapago <> 0 And ter_bancopago <> 0 And NroCuenta <> "") Then
        If (nro_formapago <> 0 And ter_bancopago <> 0 And (NroCuenta <> "" Or NroCBU <> "")) Then
                StrSql = " INSERT INTO ctabancaria (ternro,fpagnro,banco,ctabestado,"
                StrSql = StrSql & "ctabsuc,ctabnro,ctabporc,ctabcbu"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",ctabacred"
                End If
                StrSql = StrSql & ") VALUES ("
                StrSql = StrSql & NroTercero & "," & nro_formapago & "," & ter_bancopago & ","
                StrSql = StrSql & "-1,'" & Left(SucBanco, 10) & "','" & NroCuenta & "',100,'" & NroCBU & "'"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",'" & NroCuentaAcreditacionE & "'"
                End If
                StrSql = StrSql & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Inserte la Cuenta Bancaria - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
        End If
    Else
        'If (nro_formapago <> 0 And ter_bancopago <> 0 And NroCuenta <> "") Then
        If (nro_formapago <> 0 And ter_bancopago <> 0 And (NroCuenta <> "" Or NroCBU <> "")) Then
            StrSql = "SELECT * FROM ctabancaria"
            StrSql = StrSql & " WHERE ctabancaria.ternro =" & NroTercero
            StrSql = StrSql & " AND ctabestado = -1 "
            StrSql = StrSql & " AND banco =" & ter_bancopago
            StrSql = StrSql & " AND fpagnro =" & nro_formapago
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If rs.EOF Then
                StrSql = " INSERT INTO ctabancaria (ternro,fpagnro,banco,ctabestado,"
                StrSql = StrSql & "ctabsuc,ctabnro,ctabporc,ctabcbu"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",ctabacred"
                End If
                StrSql = StrSql & ") VALUES ("
                StrSql = StrSql & NroTercero & "," & nro_formapago & "," & ter_bancopago & ","
                StrSql = StrSql & "-1,'" & Left(SucBanco, 10) & "','" & NroCuenta & "',100,'" & NroCBU & "'"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",'" & NroCuentaAcreditacionE & "'"
                End If
                StrSql = StrSql & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Inserte la Cuenta Bancaria - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            Else
                If rs!ctabnro = NroCuenta Then
                    StrSql = "UPDATE ctabancaria SET "
                    StrSql = StrSql & " ctabsuc = '" & SucBanco & "'"
                    If Not EsNulo(NroCuentaAcreditacionE) Then
                        StrSql = StrSql & ", ctabacred = '" & NroCuentaAcreditacionE & "'" '20-12-2010
                    End If
                    StrSql = StrSql & ", ctabnro = '" & NroCuenta & "'"
                    StrSql = StrSql & ", ctabporc = 100 "
                    StrSql = StrSql & ", ctabcbu = '" & NroCBU & "'"
                    StrSql = StrSql & " WHERE ctabancaria.ternro =" & NroTercero
                    StrSql = StrSql & " AND ctabestado = -1 "
                    StrSql = StrSql & " AND banco =" & ter_bancopago
                    StrSql = StrSql & " AND fpagnro =" & nro_formapago
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    Texto = ": " & "Cuenta Bancaria actualizada- "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                Else
                    'Desactivo la anterior
                    StrSql = " UPDATE ctabancaria SET "
                    StrSql = StrSql & " ctabestado = 0 "
                    StrSql = StrSql & " WHERE cbnro = " & rs!Cbnro
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    'inserto la nueva
                    StrSql = " INSERT INTO ctabancaria (ternro,fpagnro,banco,ctabestado,"
                    StrSql = StrSql & "ctabsuc,ctabnro,ctabporc,ctabcbu"
                    If Not EsNulo(NroCuentaAcreditacionE) Then
                        StrSql = StrSql & ",ctabacred"
                    End If
                    StrSql = StrSql & ") VALUES ("
                    StrSql = StrSql & NroTercero & "," & nro_formapago & "," & ter_bancopago & ","
                    StrSql = StrSql & "-1,'" & Left(SucBanco, 10) & "','" & NroCuenta & "',100,'" & NroCBU & "'"
                    If Not EsNulo(NroCuentaAcreditacionE) Then
                        StrSql = StrSql & ",'" & NroCuentaAcreditacionE & "'"
                    End If
                    StrSql = StrSql & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = ": " & "Inserte la Cuenta Bancaria - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            End If
        End If
    End If
  
  'Inserto las Estructuras
'  Call AsignarEstructura(1, nro_sucursal, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(2, nro_sector, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(3, nro_categoria, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(4, nro_puesto, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(5, nro_ccosto, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(6, nro_gerencia, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(7, Nro_GrupoSeguridad, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(9, nro_departamento, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(10, nro_empresa, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(15, nro_cajajub, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(16, nro_sindicato, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(17, nro_osocial_elegida, NroTercero, F_Alta, F_Baja)
'  'Call AsignarEstructura(18, nro_contrato, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(18, nro_contrato, NroTercero, F_Alta, Fecha_FinContrato)
'  Call AsignarEstructura(19, nro_convenio, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(20, nro_lpago, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(21, nro_reghorario, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(22, nro_formaliq, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(23, nro_planos_elegida, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(24, nro_osocial_ley, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(25, nro_planos_ley, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(29, nro_actividad, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(30, nro_sitrev, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(31, nro_condsijp, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(35, nro_direccion, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(40, nro_art, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(41, nro_bancopago, NroTercero, F_Alta, F_Baja)
  
  'FGZ - 02/03/2011 - se sacó la fecha de baja para el manejo de estructuras
  F_Baja = "Null"
  Call AsignarEstructura_NEW(1, nro_sucursal, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(2, nro_sector, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(3, nro_categoria, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(4, nro_puesto, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(5, nro_ccosto, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(6, nro_gerencia, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(7, Nro_GrupoSeguridad, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(9, nro_departamento, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(10, nro_empresa, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(15, nro_cajajub, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(16, nro_sindicato, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(17, nro_osocial_elegida, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(18, nro_contrato, NroTercero, F_Alta, F_Baja)
  'Call AsignarEstructura_NEW(18, nro_contrato, NroTercero, F_Alta, Fecha_FinContrato)
  Call AsignarEstructura_NEW(19, nro_convenio, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(20, nro_lpago, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(21, nro_reghorario, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(22, nro_formaliq, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(23, nro_planos_elegida, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(24, nro_osocial_ley, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(25, nro_planos_ley, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(29, nro_actividad, NroTercero, F_Alta, F_Baja)
  
  'If ter_estado = -1 Then 'JAZ 15-05-12
    'SOLO SI EL EMPLEADO ESTA ACTIVO
    'Call AsignarEstructura_NEW(30, nro_sitrev, NroTercero, F_Alta, F_Baja)
    'Call AsignarEstructura_SitRev(30, Estrnro, CodTer, fecAlta, fecBaja)
  Call AsignarEstructura_SitRev2(30, nro_sitrev, NroTercero, F_Alta, F_Baja)
  'End If
  
  Call AsignarEstructura_NEW(31, nro_condsijp, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(35, nro_direccion, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(40, nro_art, NroTercero, F_Alta, F_Baja)
  'Call AsignarEstructura_NEW(41, nro_bancopago, NroTercero, F_Alta, F_Baja)
  
  
Texto = ": " & "Linea procesada correctamente "
Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
'LineaOK.Writeline Mid(strReg, 1, Len(strReg))
OK = True
         
FinLinea:
If rs.State = adStateOpen Then
    rs.Close
End If
Exit Sub

SaltoLinea:
    Texto = ": " & " - Error:" & Err.Description & " -- Ultima consulta: " & StrSql
    NroColumna = 1
    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    MyRollbackTrans
    OK = False
    GoTo FinLinea
End Sub

Public Sub LineaModelo_616(ByVal strReg As String, ByRef OK As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de Empleados Bolivia
' Autor      : Gonzalez Nicolás
' Fecha      : 23/05/2014
' Ultima Mod.: 27/05/2014 - Gonzalez Nicolás - Se agregó nombre2 y terape2 en update
' Ultima Mod.: 19/01/2015 - Gonzalez Nicolás - Se controlan no permitidos para nombre y apellido.
' ---------------------------------------------------------------------------------------------

Dim pos1            As Long
Dim pos2            As Long

Dim Legajo          As String   'LEGAJO                   -- empleado.empleg
Dim Apellido        As String   'APELLIDO                 -- empleado.terape y tercero.terape
Dim nombre          As String   'NOMBRE                   -- empleado.ternom y tercero.ternom
Dim Fnac            As String   'FNAC                     -- tercero.terfecna
Dim Nacionalidad    As String   'Nacionalidad             -- tercero.nacionalnro
Dim PaisNac         As String   'Pais de Nacimiento       -- tercero.paisnro
Dim Fing            As String   'Fec.Ingreso al Pais      -- terecro.terfecing
Dim EstCivil        As String   'Est.Civil                -- tercero.estcivnro
Dim Sexo            As String   'Sexo                     -- tercero.tersex
Dim FAlta           As String   'Fec. de Alta             -- empleado.empfaltagr y fases.altfec
Dim Estudio         As String   'Estudia                  -- empleado.empestudia
Dim NivEst          As String   'Nivel de Estudio         -- empleado.nivnro
Dim Tdocu           As String   'Tipo Documento           -- ter_dpc.tidnro (DU)
Dim Ndocu           As String   'Nro. Documento           -- ter_doc.nrodoc
Dim Cuil            As String   'CUIL                     -- ter_doc.nrodoc (10)

Dim tipodomi        As String   'Tipo de domicilio
Dim tidonro         As Long     '                         -- tipodomi.tidonro
Dim Calle           As String   'Calle                    -- detdom.calle
Dim Nro             As String   'Número                   -- detdom.nro
Dim Piso            As String   'Piso                     -- detdom.piso
Dim Depto           As String   'Depto                    -- detdom.depto
Dim Torre           As String   'Torre                    -- detdom.torre
Dim Manzana         As String   'Manzana                  -- detdom.manzana
Dim Cpostal         As String   'Cpostal                  -- detdom.codigopostal
Dim Entre           As String   'Entre Calles             -- detdom.entrecalles
Dim Barrio          As String   'Barrio                   -- detdom.barrio
Dim Localidad       As String   'Localidad                -- detdom.locnro
Dim Partido         As String   'Partido                  -- detdom.partnro
Dim Zona            As String   'Zona                     -- detdom.zonanro
Dim Provincia       As String   'Provincia                -- detdom.provnro
Dim Pais            As String   'Pais                     -- detdom.paisnro

Dim Telefono        As String   'Telefono                 -- telefono.telnro
Dim TelLaboral        As String   'Telefono                 -- telefono.telnro
Dim TelCelular        As String   'Telefono                 -- telefono.telnro
Dim Email           As String   'E-mail                   -- empleado.empemail
Dim Sucursal        As String   'Sucursal                 -- his_estructura.estrnro
Dim Sector          As String   'Sector                   -- his_estructura.estrnro
Dim categoria       As String   'Categoria                -- his_estructura.estrnro
Dim Puesto          As String   'Puesto                   -- his_estructura.estrnro
Dim CCosto          As String   'C.Costo                  -- his_estructura.estrnro
Dim Gerencia        As String   'Gerencia                 -- his_estructura.estrnro
Dim Departamento    As String   'Departamento             -- his_estructura.estrnro
Dim Direccion       As String   'Direccion                -- his_estructura.estrnro
Dim CajaJub         As String   'Caja de Jubilacion       -- his_estructura.estrnro
Dim Sindicato       As String   'Sindicato                -- his_estructura.estrnro
Dim OSocialLey         As String   'Obra Social              -- his_estructura.estrnro
Dim PlanOSLey          As String   'Plan OS                  -- his_estructura.estrnro
Dim OSocialElegida         As String   'Obra Social              -- his_estructura.estrnro
Dim PlanOSElegida          As String   'Plan OS                  -- his_estructura.estrnro
Dim Contrato        As String   'Contrato                 -- his_estructura.estrnro
Dim Convenio        As String   'Convenio                 -- his_estructura.estrnro
Dim LPago           As String   'Lugar de Pago            -- his_estructura.estrnro
Dim RegHorario      As String   'Regimen Horario          -- his_estructura.estrnro
Dim FormaLiq        As String   'Forma de Liquidacion     -- his_estructura.estrnro
Dim FormaPago       As String   'Forma de Pago            -- formapago.fpagdescabr
Dim SucBanco        As String   'Sucursal del Banco       -- ctabancaria.ctabsuc
Dim BancoPago       As String   'Banco Pago               -- his_estructura.estrnro, formapago.fpagbanc (siempre y cuando el Banco sea <> 0) y ctabancaria.banco
Dim NroCuenta       As String   'Nro. Cuenta              -- ctabancario.ctabnro
Dim NroCuentaAcreditacionE As String
Dim Actividad       As String   'Actividad                -- his_estructura.estrnro
Dim CondSIJP        As String   'Condicion SIJP           -- his_estructura.estrnro
Dim SitRev          As String   'Sit. de Revista SIJP     -- his_estructura.estrnro
Dim ModCont         As String   'Mod. de Contrat. SIJP    -- his_estructura.estrnro
Dim ART             As String   'ART                      -- his_estructura.estrnro
Dim Estado          As String   'Estado                   -- empleado.empest y fases.estado
Dim CausaBaja       As String   'Causa de Baja            -- fases.caunro
Dim FBaja           As String   'Fecha de Baja            -- fases.bajfec
Dim Empresa         As String   'Empresa                  -- his_estructura.estrnro
Dim ModOrg          As String   'Empresa                  -- his_estructura.estrnro
Dim OSL             As String   'Empresa                  -- his_estructura.estrnro
Dim OSE             As String   'Empresa                  -- his_estructura.estrnro
Dim PlanOdon        As String   'Empresa                  -- his_estructura.estrnro
Dim Locacion        As String   'Empresa                  -- his_estructura.estrnro
Dim Area            As String   'Empresa                  -- his_estructura.estrnro
Dim SubDepto        As String   'Empresa                  -- his_estructura.estrnro
Dim NroCBU          As String   'Empresa                  -- his_estructura.estrnro
Dim Empremu         As String   'Remuneración del empleado
Dim GrupoSeguridad  As String   'Grupo de Seguridad
Dim Nro_GrupoSeguridad  As Long 'Grupo de Seguridad       -- his_estructura.estrnro
Dim FFinContrato    As String
Dim Fecha_FinContrato As String
Dim Reporta_a       As String
Dim Nro_Reporta_a   As Long

Dim Ternro As Long

Dim NroTercero          As Long

Dim Nro_Legajo          As Long
Dim Nro_TDocumento      As Long
Dim nro_nivest          As Long
Dim nro_estudio         As Long

Dim Nro_Nrodom          As String

Dim Nro_Barrio          As Long
Dim Nro_Localidad       As Long
Dim Nro_Partido         As Long
Dim Nro_Zona            As Long
Dim Nro_Provincia       As Long
Dim Nro_Pais            As Long
Dim nro_paisnac         As Long

Dim nro_sucursal        As Long
Dim nro_sector          As Long
Dim nro_categoria       As Long
Dim nro_puesto          As Long
Dim nro_ccosto          As Long
Dim nro_gerencia        As Long
Dim nro_cajajub         As Long
Dim nro_sindicato       As Long
Dim nro_osocial_ley     As Long
Dim nro_planos_ley      As Long
Dim nro_osocial_elegida As Long
Dim nro_planos_elegida  As Long
Dim nro_contrato        As Long
Dim nro_convenio        As Long
Dim nro_reghorario      As Long
Dim nro_formaliq        As Long
Dim nro_bancopago       As Long
Dim nro_actividad       As Long
Dim nro_sitrev          As Long
Dim nro_modcont         As Long
Dim nro_art             As Long
Dim nro_departamento    As Long
Dim nro_direccion       As Long
Dim nro_lpago           As Long
Dim nro_condsijp        As Long
Dim nro_formapago       As Long
Dim nro_causabaja       As Long
Dim nro_empresa         As Long
Dim NroDom              As Long
Dim nro_osl             As Long
Dim nro_odon            As Long
Dim nro_ose             As Long
Dim nro_locacion        As Long
Dim nro_area            As Long
Dim nro_SubDepto        As Long
Dim nro_empremu         As Long

Dim nro_estcivil        As Long
Dim nro_nacionalidad    As Long

Dim F_Nacimiento        As String
Dim F_Fallecimiento     As String
Dim F_Alta              As String
Dim F_Baja              As String
Dim F_Ingreso           As String

Dim Inserto_estr        As Boolean

Dim ter_sucursal        As Long
Dim Ter_Empresa         As Long
Dim ter_cajajub         As Long
Dim ter_sindicato       As Long
Dim ter_osocial_ley     As Long
Dim ter_osocial_elegida As Long
Dim ter_bancopago       As Long
Dim ter_art             As Long
Dim ter_sexo            As Long
Dim ter_estudio         As Long
Dim ter_estado          As Long
Dim os_vacio            As Long
Dim os_bool             As Boolean
Dim Inserto_estr2       As Boolean 'ver 4.14
Dim fpgo_bancaria       As Long

Dim rs As New ADODB.Recordset
Dim rs_Sql As New ADODB.Recordset
Dim rs_Empleado As New ADODB.Recordset
Dim rs_Tel As New ADODB.Recordset
Dim rs_repl As New ADODB.Recordset


Dim SucDesc             As Boolean   'Sucursal                 -- his_estructura
Dim SecDesc             As Boolean   'Sector                   -- his_estructura
Dim CatDesc             As Boolean   'Categoria                -- his_estructura
Dim PueDesc             As Boolean   'Puesto                   -- his_estructura
Dim CCoDesc             As Boolean   'C.Costo                  -- his_estructura
Dim GerDesc             As Boolean   'Gerencia                 -- his_estructura
Dim DepDesc             As Boolean   'Departamento             -- his_estructura
Dim DirDesc             As Boolean   'Direccion                -- his_estructura
Dim CaJDesc             As Boolean   'Caja de Jubilacion       --
Dim SinDesc             As Boolean   'Sindicato                -- his_estructura
Dim OSoElegidaDesc      As Boolean   'Obra Social              -- his_estructura
Dim PoSElegidaDesc      As Boolean   'Plan OS                  -- his_estructura
Dim OSoLeyDesc          As Boolean   'Obra Social              -- his_estructura
Dim PoSLeyDesc          As Boolean   'Plan OS                  -- his_estructura
Dim CotDesc             As Boolean   'Contrato                 -- his_estructura
Dim CovDesc             As Boolean   'Convenio                 -- his_estructura
Dim LPaDesc             As Boolean   'Lugar de Pago            -- his_estructura
Dim RegDesc             As Boolean   'Regimen Horario          -- his_estructura
Dim FLiDesc             As Boolean   'Forma de Liquidacion     -- his_estructura
Dim FPaDesc             As Boolean      'Forma de Pago            -- his_estructura
Dim BcoDesc             As Boolean      'Banco Pago               --
Dim ActDesc             As Boolean      'Actividad                --
Dim CSJDesc             As Boolean      'Condicion SIJP           --
Dim SReDesc             As Boolean      'Sit. de Revista SIJP     --
Dim MCoDesc             As Boolean      'Mod. de Contrat. SIJP    --
Dim ARTDesc             As Boolean      'ART                      --
Dim EmpDesc             As Boolean      'Empresa                  --
Dim OSLDesc             As Boolean      'Empresa                  --
Dim POdoDesc             As Boolean     'Empresa                  --
Dim OSEDesc             As Boolean      'Empresa                  --
Dim LocDesc             As Boolean      'Empresa                  --
Dim AreaDesc             As Boolean     'Empresa                  --
Dim SubDepDesc           As Boolean     'Empresa                  --

Dim IngresoDom          As Boolean

Dim rs_tdoc As New ADODB.Recordset
Dim rs_emp  As New ADODB.Recordset
Dim rs_tpl  As New ADODB.Recordset
Dim rs_leg  As New ADODB.Recordset

Dim Nroadtemplate As Long
Dim Nro_Institucion As Long

Dim Sigue As Boolean
Dim ExisteLeg As Boolean
Dim CalculaLegajo As Boolean
Dim Valida_CUIL As Boolean

Dim F_NacAux As Date
Dim F_AltaAux As Date
Dim Edad As Integer
Dim MaxEmpl As Long
Dim CantEmpl As Long
Dim ape
Dim Apellido2 As String
Dim Nom
Dim nombre2 As String

    
    

    On Error GoTo SaltoLinea


    ' True indica que se hace por Descripcion. False por Codigo Externo

    SucDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    SecDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CatDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    PueDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CCoDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    GerDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    DepDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    DirDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CaJDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    SinDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    OSoElegidaDesc = True ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    PoSElegidaDesc = True ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    OSoLeyDesc = True   ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    PoSLeyDesc = True   ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CotDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CovDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    LPaDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    RegDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    FLiDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    FPaDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    BcoDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    ActDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CSJDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    SReDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    MCoDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    ARTDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    EmpDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    OSLDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    POdoDesc = True     ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    OSEDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    LocDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    AreaDesc = True     ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    SubDepDesc = True   ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    
    
    'Reviso si debo validar el CUIL o no --------------------
    Valida_CUIL = False
'    StrSql = " SELECT tidvalida FROM tipodocu WHERE tidnro = 10"
'    OpenRecordset StrSql, rs_Sql
'    If Not rs_Sql.EOF Then
'        If Not EsNulo(rs_Sql!tidvalida) Then
'            Valida_CUIL = True
'        Else
'            Valida_CUIL = False
'        End If
'    Else
'        Valida_CUIL = False
'    End If
    'FGZ - 21/02/2009 - reviso si debo validar el CUIL o no --------------------
    
    
    Sigue = True 'Indica que si en el archivo viene mas de una vez un empleado, le crea las fases
    ExisteLeg = False
    'RegLeidos = RegLeidos + 1
    LineaCarga = LineaCarga + 1
    
    Flog.writeline
    FlogE.writeline
    FlogP.writeline
    
    'Legajo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Legajo"
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Legajo = Aux
    'Legajo = Mid(strReg, pos1, pos2 - pos1 + 1)
    If Legajo = "N/A" Or EsNulo(Legajo) Then
        CalculaLegajo = True
    Else
        StrSql = "SELECT * FROM empleado WHERE empleado.empleg = " & Legajo
        OpenRecordset StrSql, rs_emp
        If (Not rs_emp.EOF) Then
            If (Not Sigue) Then
                Texto = ": " & " - El Empleado ya Existe."
                NroColumna = 1
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                'Ok = False
                'RegError = RegError + 1
                'Exit Sub
            Else
                NroTercero = rs_emp!Ternro
                ExisteLeg = True
            End If
        End If
    End If
    
    
    'Apellido
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Apellido"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    ape = Split(Aux, "@")
    If UBound(ape) = 0 Then
        'Si no se ingreso el apellido separado con @, todo el apellido ingresado se guarda en terape
        'Apellido = Aux
        Apellido = EliminarCHInvalidosII(Left(Aux, 25), 0, "")
        Apellido2 = ""
    Else
        If (ape(0) = "N/A" Or EsNulo(ape(0))) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        'Apellido = Left(ape(0), 25)
        Apellido = EliminarCHInvalidosII(Left(ape(0), 25), 0, "")
        If Not (ape(1) = "N/A" Or EsNulo(ape(1)) Or ape(1) = "") Then
            'Apellido2 = Left(ape(1), 25)
            Apellido2 = EliminarCHInvalidosII(Left(ape(1), 25), 0, "")
        Else
            Apellido2 = ""
        End If
    End If
    
    
    'Nombre
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Nombre"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Nom = Split(Aux, "@")
    If UBound(Nom) = 0 Then
        'Si no se ingreso el nombre separado con @, todo el nombre ingresado se guarda en ternom
        'nombre = Aux
        nombre = EliminarCHInvalidosII(Left(Aux, 25), 0, "")
        nombre2 = ""
    Else
        If (Nom(0) = "N/A" Or EsNulo(Nom(0))) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        'nombre = Left(Nom(0), 25)
        nombre = EliminarCHInvalidosII(Left(Nom(0), 25), 0, "")
        If (Apellido = "" Or Apellido = "N/A") And (nombre = "" Or nombre = "N/A") Then
            Texto = ": " & " - Debe Ingresar un Nombre y Apellido."
            NroColumna = 2
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        If Not (Nom(1) = "N/A" Or EsNulo(Nom(1)) Or Nom(1) = "") Then
            'nombre2 = Left(Nom(1), 25)
            nombre2 = EliminarCHInvalidosII(Left(Nom(1), 25), 0, "")
        Else
            nombre2 = ""
        End If
    End If
   
    
    'Fecha de Nacimiento
    NroColumna = NroColumna + 1
    'Obligatorio = False
    Obligatorio = True
    Campoetiqueta = "Fecha de Nacimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If Aux <> "N/A" Then
    Aux = EliminarCHInvalidosII(Aux, 2, "")
    End If
    Fnac = Aux
    If Fnac = "N/A" Then
       F_Nacimiento = "Null"
    Else
       F_Nacimiento = ConvFecha(Fnac)
       F_NacAux = CDate(Fnac)
    End If
    
    
    'Pais de Nacimiento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Pais de Nacimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    PaisNac = Aux
    If PaisNac <> "N/A" Then
        StrSql = " SELECT paisnro FROM pais WHERE UPPER(paisdesc) = '" & UCase(PaisNac) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_paisnac = rs_Sql!Paisnro
        Else
            StrSql = " INSERT INTO pais(paisdesc,paisdef) VALUES ('" & UCase(PaisNac) & "',0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_paisnac = getLastIdentity(objConn, "pais")
        End If
    Else
        nro_paisnac = 0
    End If
    
    
    'Nacionalidad
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nacionalidad"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Nacionalidad = Aux
    If Nacionalidad <> "N/A" Then
        StrSql = " SELECT nacionalnro FROM nacionalidad WHERE UPPER(nacionaldes) = '" & UCase(Nacionalidad) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_nacionalidad = rs_Sql!nacionalnro
        Else
            StrSql = " INSERT INTO nacionalidad(nacionaldes) VALUES ('" & UCase(Nacionalidad) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_nacionalidad = getLastIdentity(objConn, "nacionalidad")
        End If
    Else
        nro_nacionalidad = 0
    End If
    If nro_nacionalidad = 0 Then
        Texto = ": " & " - La Nacionalidad no Existe."
        NroColumna = 6
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    
    'Fecha de Ingreso al Pais
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de Ingreso al Pais"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If Aux <> "N/A" Then
    Aux = EliminarCHInvalidosII(Aux, 2, "")
    End If
    Fing = Aux
    If (Fing = "N/A") Or EsNulo(Fing) Then
        F_Ingreso = "Null"
    Else
        F_Ingreso = ConvFecha(Fing)
    End If
    
    'Estado Civil
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estado Civil"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    EstCivil = Left(Aux, 30)
    If EstCivil <> "N/A" And Not EsNulo(EstCivil) Then
        StrSql = " SELECT estcivnro FROM estcivil WHERE UPPER(estcivdesabr) = '" & UCase(EstCivil) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_estcivil = rs_Sql!estcivnro
        Else
            StrSql = " INSERT INTO estcivil(estcivdesabr) VALUES ('" & UCase(EstCivil) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_estcivil = getLastIdentity(objConn, "estcivil")
        End If
    Else
        nro_estcivil = 0
    End If
    If nro_estcivil = 0 Then
        Texto = ": " & " - El Estado Civil no Existe."
        NroColumna = 8
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Sexo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sexo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Sexo = UCase(Aux)
    If (Sexo = "M") Or (Sexo = "-1") Or (Sexo = "MASCULINO") Then
        ter_sexo = -1
    Else
        ter_sexo = 0
    End If
                                                            
    'Fecha de alta
    NroColumna = NroColumna + 1
    'Obligatorio = False
    Obligatorio = True
    Campoetiqueta = "Fecha de alta"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If Aux <> "N/A" Then
        Aux = EliminarCHInvalidosII(Aux, 2, "")
    End If
    FAlta = Aux
    If FAlta = "N/A" Or EsNulo(FAlta) Then
        F_Alta = "Null"
        Texto = ": " & " - La Fecha de Alta es Obligatoria."
        NroColumna = 10
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    Else
        F_Alta = ConvFecha(FAlta)
        F_AltaAux = CDate(FAlta)
        
        
        'Validar que el empleado sea mayor a 14 años
        Edad = 0
        If (Month(F_AltaAux) > Month(F_NacAux)) Then
           Edad = DateDiff("yyyy", F_NacAux, F_AltaAux)
        Else
           If (Month(F_AltaAux) = Month(F_NacAux)) And (Day(F_AltaAux) >= Day(F_NacAux)) Then
             Edad = DateDiff("yyyy", F_NacAux, F_AltaAux)
           Else
             Edad = DateDiff("yyyy", F_NacAux, F_AltaAux) - 1
           End If
        End If
        
        If Edad < 14 Then
            Texto = ": " & " - El empleado es menor a 14 años."
            NroColumna = 10
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            'Ok = False
            RegError = RegError + 1
            Exit Sub
        End If
        
    End If
   
   
    'Estudia?
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estudia?"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Estudio = UCase(Aux)
    If Estudio <> "N/A" And Estudio <> "NO" Then
        If Estudio = "SI" Then
            ter_estudio = -1
        Else
            ter_estudio = 0
        End If
    Else
        ter_estudio = 0
    End If
    
    
    'Nivel de estudio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nivel de estudio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    NivEst = Left(Aux, 40)
    If NivEst <> "N/A" Then
        StrSql = " SELECT nivnro FROM nivest WHERE UPPER(nivdesc) = '" & UCase(NivEst) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_nivest = rs_Sql!nivnro
        Else
            StrSql = " INSERT INTO nivest(nivdesc,nivsist,nivobligatorio,nivestfli) VALUES ('" & UCase(NivEst) & "',-1,0,-1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_nivest = getLastIdentity(objConn, "nivest")
        End If
    Else
        nro_nivest = 0
    End If
    
    
    'Tipo de Doc
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Tipo de Documento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Tdocu = Left(Aux, 8)
    If Tdocu <> "N/A" Then
        StrSql = " SELECT tidnro FROM tipodocu WHERE UPPER(tidsigla) = '" & UCase(Tdocu) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            Nro_TDocumento = rs_Sql!tidnro
        Else
            'busco la primera institucion, si no existe la creo
            StrSql = " SELECT * FROM institucion "
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                Nro_Institucion = rs!InstNro
            Else
                'creo una
                StrSql = " INSERT INTO institucion (instdes,instabre) VALUES ('NACIONAL','NAC')"
                objConn.Execute StrSql, , adExecuteNoRecords
                Nro_Institucion = getLastIdentity(objConn, "institucion")
            End If
            'creo el tipo de documento
            StrSql = " INSERT INTO tipodocu(tidnom,tidsigla,tidsist,instnro,tidunico) VALUES ('" & UCase(Tdocu) & "','" & UCase(Tdocu) & "',0," & Nro_Institucion & ",0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            Nro_TDocumento = getLastIdentity(objConn, "tipodocu")
        End If
    Else
        Nro_TDocumento = 0
    End If
    If Nro_TDocumento = 0 Then
        Texto = ": " & " - El Tipo de Documento no Existe."
        NroColumna = 13
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    
    'Nro de Documento
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Nro de Documento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Ndocu = Left(Aux, 30)
    If Ndocu = "N/A" Then
        Ndocu = ""
    End If
    
    
    '---------------------------------------------------
    ' Verifica si el nro documento pertenece a otro empleado
    '---------------------------------------------------
    StrSql = "SELECT * FROM empleado "
    StrSql = StrSql & " INNER JOIN ter_doc ON ter_doc.ternro = empleado.ternro "
    StrSql = StrSql & " WHERE ter_doc.tidnro = " & Nro_TDocumento & " AND ter_doc.nrodoc = '" & Ndocu & "'"
    OpenRecordset StrSql, rs_tdoc
    If (Not rs_tdoc.EOF) Then
        'JPB: Se quito que existe el legajo. Aqui lo que ya existe seria el documento
        'ExisteLeg = True
        If (Not Sigue) Then
            Texto = ": " & " - Ese Tipo y Numero de Documento estan Asignados a otro Empleado."
            NroColumna = 14
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            'Ok = False
            RegError = RegError + 1
            Exit Sub
        Else
            'FGZ - 11/11/2010 - Si es el mismo legajo no debe poner ningun cartel
            If NroTercero <> rs_tdoc!Ternro Then
                NroTercero = rs_tdoc!Ternro
                'ExisteLeg = True
                Texto = ": " & " - Empleado: " & Legajo & " - Ese Tipo y Numero de Documento estan Asignados a otro Empleado."
                NroColumna = 14
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                'JPB: Faltaba que interrumpa el proceso porque en este caso ya existe el documento y esta asociado a otro tercero
                RegError = RegError + 1
                Exit Sub
            End If
        End If
     Else
            'Si no existe como empleado, verifico si existe como otro tercero
             StrSql = "SELECT * FROM ter_doc "
             StrSql = StrSql & " WHERE ter_doc.nrodoc = '" & Ndocu & "'"
             OpenRecordset StrSql, rs_tdoc
            
             If (Not rs_tdoc.EOF) Then
                 NroTercero = rs_tdoc!Ternro
                 ExisteLeg = True
                 Texto = ": " & " - Empleado: " & Legajo & " - El Numero de Documento " & Ndocu & " ya existe en la base para el tercero: " & NroTercero
                 NroColumna = 14
                 Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                 RegError = RegError + 1
                 Exit Sub
             End If
             '---------------------------
    
    
    End If

    
    'NASEG
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "NASEG"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Cuil = Replace(Left(Aux, 30), "-", "")
    If Cuil = "N/A" Or EsNulo(Cuil) Then
        Cuil = ""
    
        'FGZ - 23/02/2009 - validacion de cuil configurable ---------------
    'Else
        'If Valida_CUIL Then
            'OK = Cuil_Valido(Cuil, Texto)
            'OK = Cuil_Valido605(Cuil, Ndocu, Texto, Tdocu, nro_nacionalidad)
            'If Not OK Then
             '   OK = True
                'Texto = "El CUIL no es valido"
                'Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
                'Cuil = CalcularCUIL(Ndocu)
                
                'FGZ - 26/08/2010 ---------------
                'Cuil = Generar_Cuil(Ndocu, CBool(ter_sexo))
              '  Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
               ' RegError = RegError + 1
                'Exit Sub
                'FGZ - 26/08/2010 ---------------
            'End If
        'End If
    End If
    'FGZ - 23/02/2009 - validacion de cuil configurable ---------------
    'If Cuil = "" And Not Valida_CUIL Then
'    If Cuil = "" Then
'        Cuil = ""
'    Else
'        Cuil = Left(Cuil, 2) & "-" & Mid(Cuil, 3, 8) & "-" & Right(Cuil, 1)
'    End If
    'FGZ - 23/02/2009 - validacion de cuil configurable ---------------
    
    
    'Hasta Aqui los Datos Obligatorios del Empleado
    IngresoDom = True
        
    '------------------------------------------------
    'TIPO DE DOMICILIO
    '------------------------------------------------
    'If Valida_tipoDomi = True Then
        NroColumna = NroColumna + 1
        Obligatorio = False
        Campoetiqueta = "Tipo de Domicilio"
        'Campoetiqueta = "tipodomi.tidodes"
        
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        tipodomi = Left(Aux, 30)
        If tipodomi = "N/A" Then
            tipodomi = ""
            tidonro = 0
            IngresoDom = False
        Else
            'Busco el tipo de Domicilio con la descripción ingresada
            StrSql = "SELECT tidonro FROM tipodomi  "
            StrSql = StrSql & " WHERE UPPER(tidodes) = UPPER('" & tipodomi & "')"
               
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                tidonro = rs!tidonro
            Else
                tidonro = 0
                IngresoDom = False
            End If
            rs.Close
        End If
    'Else
    '   tidonro = 0
    '  IngresoDom = False
    'End If
    '------------------------------------------------
        
        
    'Calle
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Calle"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Calle = Left(Aux, 250)
    If Calle = "N/A" Then
        Calle = ""
        IngresoDom = False
    End If
    
    
    'Nro
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Nro"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Nro = Left(Aux, 8)
    If (Nro <> "N/A") Then
        Nro_Nrodom = Nro
    Else
        Nro_Nrodom = 0
    End If
    
    'Piso
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Piso"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Piso = Left(Aux, 8)
    If Piso = "N/A" Then
        Piso = ""
    End If
    
    'Departamento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Departamento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Depto = Left(Aux, 8)
    If Depto = "N/A" Then
        Depto = ""
    End If

    'Torre
'    NroColumna = NroColumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Direccion.Torre"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
'    End If
'    Aux = EliminarCHInvalidosII(Aux, 1, "")
'    Torre = Left(Aux, 8)
'    If Torre = "N/A" Then
'        Torre = ""
'    End If
    
    'Manzana
'    NroColumna = NroColumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Direccion.Manzana"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
'    End If
'    Aux = EliminarCHInvalidosII(Aux, 1, "")
'    Manzana = Left(Aux, 8)
'    If Manzana = "N/A" Then
'        Manzana = ""
'    End If

    'Codigo Postal
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Codigo Postal"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Cpostal = Left(Aux, 12)
    If Cpostal = "N/A" Then
        Cpostal = ""
    End If

    'Entre calles
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Entre calles"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Entre = Left(Aux, 80)
    If Entre = "N/A" Then
        Entre = ""
    End If

    'Barrio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Barrio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Barrio = Left(Aux, 30)
    If Barrio = "N/A" Then
        Barrio = ""
    End If

    'Localidad
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Localidad"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    '19/03/2010 - Se cambio la longitud de 30 a 60
    'Localidad = Left(aux, 30)
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Localidad = Left(Aux, 60)
    
    
    'Provincia
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Provincia"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Provincia = Left(Aux, 20)
    
    '------------------------------------------------
    'Partido
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Partido"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Partido = Left(Aux, 30)
    
    'Zona
'    NroColumna = NroColumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Zona"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
'    End If
'    '19/03/2010 - Se cambio la longitud a 60
'    'Zona = Left(aux, 20)
'    Aux = EliminarCHInvalidosII(Aux, 1, "")
'    Zona = Left(Aux, 60)
'
'    'Provincia
'    NroColumna = NroColumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Provincia"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
'    End If
'    Aux = EliminarCHInvalidosII(Aux, 1, "")
'    Provincia = Left(Aux, 20)
    
    'Pais
'    NroColumna = NroColumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Pais"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
'    End If
'    Aux = EliminarCHInvalidosII(Aux, 1, "")
'    Pais = Left(Aux, 20)
'
'    Pais = "BOLIVIA"
    
    
    If Pais <> "N/A" Then
        Call ValidarPais(Pais, Nro_Pais)
    Else
        Nro_Pais = 0
    End If
    If Provincia <> "N/A" Then
        Call ValidarProvincia(Provincia, Nro_Provincia, Nro_Pais)
    Else
        Nro_Provincia = 0
    End If
    If Localidad <> "N/A" Then
        Call ValidarLocalidad(Localidad, Nro_Localidad, Nro_Pais, Nro_Provincia)
    Else
        Nro_Localidad = 0
    End If
'    If Zona <> "N/A" Then
'        Call ValidarZona(Zona, Nro_Zona, Nro_Provincia)
'    Else
        Nro_Zona = 0
'    End If
    
    If Partido <> "N/A" Then
        Call ValidarPartido(Partido, Nro_Partido)
    Else
        Nro_Partido = 0
    End If

    
    
    If (IngresoDom = True) And (Nro_Localidad = 0) Then
        Texto = ": " & " - Debe Ingresar la Ciudad."
        NroColumna = 25
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    If (IngresoDom = True) And (Nro_Provincia = 0) Then
        Texto = ": " & " - Debe Ingresar la Departamento."
        NroColumna = 28
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
'    If (IngresoDom = True) And (Nro_Pais = 0) Then
'        Texto = ": " & " - Debe Ingresar la Pais."
'        NroColumna = 29
'        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
'        'Ok = False
'        RegError = RegError + 1
'        Exit Sub
'    End If
    
    
    'Tel Particular
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tel Particular"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    If Aux = "N/A" Then
        Telefono = ""
    Else
        Aux = EliminarCHInvalidosII(Aux, 3, "")
        Telefono = Left(Aux, 20)
    End If
    
    
    'Tel Laboral
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tel Laboral"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    If Aux = "N/A" Then
        TelLaboral = ""
    Else
        Aux = EliminarCHInvalidosII(Aux, 3, "")
        TelLaboral = Left(Aux, 20)
    End If
    
    'Tel Celular
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tel Celular"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    If Aux = "N/A" Then
        TelCelular = ""
    Else
        Aux = EliminarCHInvalidosII(Aux, 3, "")
        TelCelular = Left(Aux, 20)
    End If

    
    'Email
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Email"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    If Aux <> "N/A" Then
        Aux = EliminarCHInvalidosII(Aux, 4, "")
        Email = Left(Aux, 100)
    Else
        Email = ""
    End If
    
    
    'Sucursal
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sucursal"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Sucursal = Aux
    ' Validacion y Creacion de la Sucursal (junto con sus Complementos)
    If Sucursal <> "N/A" Then
        If SucDesc Then
            Call ValidaEstructura(1, Sucursal, nro_sucursal, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(1, Sucursal, nro_sucursal, Inserto_estr)
        End If
        Call CreaTercero(10, Sucursal, ter_sucursal)
        
        If Inserto_estr Then
            Call CreaComplemento(1, ter_sucursal, nro_sucursal, Sucursal)
            Inserto_estr = False
        End If
    Else
        nro_sucursal = 0
    End If
    
    'Sector
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sector"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Sector = Aux
    ' Validacion y Creacion del Sector
    If Sector <> "N/A" Then
        If SecDesc Then
            Call ValidaEstructura(2, Sector, nro_sector, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(2, Sector, nro_sector, Inserto_estr)
        End If
    Else
        nro_sector = 0
    End If

    'Convenio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Convenio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Convenio = Aux
    ' Validacion, Creacion del Convenio
    If Convenio <> "N/A" Then
        If CovDesc Then
            Call ValidaEstructura(19, Convenio, nro_convenio, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(19, Convenio, nro_convenio, Inserto_estr)
        End If
        
        If Inserto_estr Then
            Call CreaComplemento(19, 0, nro_convenio, Convenio)
            Inserto_estr = False
        End If
    Else
        nro_convenio = 0
    End If
    
    
    'Categoria
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Categoria"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    categoria = Aux
    ' Validacion, Creacion de la Categoria
    If (categoria <> "N/A" And nro_convenio <> 0) Then
        If CatDesc Then
            'Call ValidaEstructura(3, categoria, nro_categoria, Inserto_estr)
            Call ValidaCategoria(3, categoria, nro_convenio, nro_categoria, Inserto_estr)
            
        Else
            'Call ValidaEstructuraCodExt(3, categoria, nro_categoria, Inserto_estr)
            Call ValidaCategoriaCodExt(3, categoria, nro_convenio, nro_categoria, Inserto_estr)
        End If
    Else
        nro_categoria = 0
    End If
    
    'Puesto
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Puesto"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Puesto = Aux
    'Validacion y Creacion del Puesto (junto con sus Complementos)
    If Puesto <> "N/A" Then
        If PueDesc Then
            Call ValidaEstructura(4, Puesto, nro_puesto, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(4, Puesto, nro_puesto, Inserto_estr)
        End If
        
        If Inserto_estr Then
            Call CreaComplemento(4, 0, nro_puesto, Puesto)
            Inserto_estr = False
        End If
    Else
        nro_puesto = 0
    End If

    'Centro de Costo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Centro de Costo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    CCosto = Aux
    ' Validacion y Creacion del Centro de Costo
    If CCosto <> "N/A" Then
        If CCoDesc Then
            Call ValidaEstructura(5, CCosto, nro_ccosto, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(5, CCosto, nro_ccosto, Inserto_estr)
        End If
    Else
        nro_ccosto = 0
    End If

    'Gerencia
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Gerencia"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Gerencia = Aux
    ' Validacion y Creacion de la Gerencia
    If Gerencia <> "N/A" Then
        If GerDesc Then
            Call ValidaEstructura(6, Gerencia, nro_gerencia, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(6, Gerencia, nro_gerencia, Inserto_estr)
        End If
    Else
        nro_gerencia = 0
    End If

    
    'Departamento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Departamento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Departamento = Aux
    ' Validacion y Creacion del Departamento
    If Departamento <> "N/A" Then
        If DepDesc Then
            Call ValidaEstructura(9, Departamento, nro_departamento, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(9, Departamento, nro_departamento, Inserto_estr)
        End If
    Else
        nro_departamento = 0
    End If


    'Direccion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Direccion = Aux
    ' Validacion y Creacion de direccion
    If Direccion <> "N/A" Then
        If DirDesc Then
            Call ValidaEstructura(35, Direccion, nro_direccion, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(35, Direccion, nro_direccion, Inserto_estr)
        End If
    Else
        nro_direccion = 0
    End If
    
    
    'Caja de Jubilacion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Caja de Jubilacion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    CajaJub = Aux
    ' Validacion y Creacion de la Caja de Jubilacion
    If CajaJub <> "N/A" Then
        If CaJDesc Then
            Call ValidaEstructura(15, CajaJub, nro_cajajub, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(15, CajaJub, nro_cajajub, Inserto_estr)
        End If
        Call CreaTercero(6, CajaJub, ter_cajajub)
        
        If Inserto_estr Then
            Call CreaComplemento(15, ter_cajajub, nro_cajajub, CajaJub)
        End If
    Else
        nro_cajajub = 0
    End If

    'Sindicato
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sindicato"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Sindicato = Aux
    ' Validacion y Creacion del Sindicato
    If Sindicato <> "N/A" Then
        If SinDesc Then
            Call ValidaEstructura(16, Sindicato, nro_sindicato, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(16, Sindicato, nro_sindicato, Inserto_estr)
        End If
        Call CreaTercero(5, Sindicato, ter_sindicato)
        
        If Inserto_estr Then
            Call CreaComplemento(16, ter_sindicato, nro_sindicato, Sindicato)
        End If
    Else
        nro_sindicato = 0
    End If
    
    os_vacio = 0
    os_bool = False
    
    'Obra social por Ley
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Obra social por Ley"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    OSocialLey = Aux
    ' Validacion y Creacion de la Obra Social por Ley
    If OSocialLey <> "N/A" And OSocialLey <> "" Then
        If OSoLeyDesc Then
            Call ValidaEstructura(24, OSocialLey, nro_osocial_ley, Inserto_estr)
            Call ValidaEstructura2(17, OSocialLey, os_vacio, Inserto_estr2) 'Modificado ver 4.14
        Else
            Call ValidaEstructuraCodExt(24, OSocialLey, nro_osocial_ley, Inserto_estr)
        End If
        Call CreaTercero(4, OSocialLey, ter_osocial_ley)
        
        If Inserto_estr Then
            Call CreaComplemento(24, ter_osocial_ley, nro_osocial_ley, OSocialLey)
            'Comentado ver 4.14
            'Call CreaComplemento(24, ter_osocial_ley, os_vacio, OSocialLey) 'Agregado ver 3.96
        Else
            StrSql = " SELECT origen FROM replica_estr WHERE estrnro = " & nro_osocial_ley
            OpenRecordset StrSql, rs_repl
            
            If Not rs_repl.EOF Then
                ter_osocial_ley = rs_repl!Origen
                rs_repl.Close
            End If
        End If
        If Inserto_estr2 Then 'Agregado ver 4.14 ----- D
            Call CreaComplemento(24, ter_osocial_ley, os_vacio, OSocialLey)
        Else
            StrSql = " SELECT origen FROM replica_estr WHERE estrnro = " & os_vacio
            
        OpenRecordset StrSql, rs_repl
            
            If Not rs_repl.EOF Then
                ter_osocial_ley = rs_repl!Origen
                rs_repl.Close
            End If
            
        End If '------------- H
    Else
        nro_osocial_ley = 0
    End If

    os_vacio = 0
    os_bool = False
    Inserto_estr2 = False
    
    'Plan de OS por Ley
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Plan de Obra social por Ley"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    PlanOSLey = Aux
    ' Validacion y Creacion del Plan de Obra Social por Ley
    If (PlanOSLey <> "N/A" And nro_osocial_ley <> 0) Then
        If PoSLeyDesc Then
            Call ValidaEstructura(25, PlanOSLey, nro_planos_ley, Inserto_estr)
            Call ValidaEstructura2(23, PlanOSLey, os_vacio, Inserto_estr2) 'Modificado ver 4.14
        Else
            Call ValidaEstructuraCodExt(25, PlanOSLey, nro_planos_ley, Inserto_estr)
         End If
        
        If Inserto_estr Then
            'Manterola Maria Magdalena (29/06/2011)
            Call CreaComplemento(23, ter_osocial_ley, nro_planos_ley, PlanOSLey)
            'Comentado ver 4.14
            'Call CreaComplemento(23, ter_osocial_ley, os_vacio, PlanOSLey) 'Agregado ver 3.96
            Inserto_estr = False
        End If
        If Inserto_estr2 Then 'Agregado ver 4.14 ----- D
            Call CreaComplemento(23, ter_osocial_ley, os_vacio, PlanOSLey)
            Inserto_estr2 = False
        End If '-------------- H
    Else
        nro_planos_ley = 0
    End If
    os_vacio = 0
    os_bool = False
    

    'OS Elegida
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Obra Social elegida"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    OSocialElegida = Aux
    ' Validacion y Creacion de la Obra Social Elegida
    If OSocialElegida <> "N/A" And OSocialElegida <> "" Then
        If OSoElegidaDesc Then
            Call ValidaEstructura(17, OSocialElegida, nro_osocial_elegida, Inserto_estr)
            Call ValidaEstructura2(24, OSocialElegida, os_vacio, Inserto_estr2) 'Modificado ver 4.14
        Else
            Call ValidaEstructuraCodExt(17, OSocialElegida, nro_osocial_elegida, Inserto_estr)
        End If
        Call CreaTercero(4, OSocialElegida, ter_osocial_elegida)
        
        If Inserto_estr Then
            Call CreaComplemento(17, ter_osocial_elegida, nro_osocial_elegida, OSocialElegida)
            'Comentado ver 4.14
            'Call CreaComplemento(17, ter_osocial_elegida, os_vacio, OSocialElegida) 'Agregado ver 3.96
        Else
            StrSql = " SELECT origen FROM replica_estr WHERE estrnro = " & nro_osocial_elegida
            OpenRecordset StrSql, rs_Sql
            ter_osocial_elegida = rs_Sql!Origen
            rs_Sql.Close
        End If
        If Inserto_estr2 Then 'Agregado ver 4.14 ------------- D
            Call CreaComplemento(17, ter_osocial_elegida, os_vacio, OSocialElegida)
        Else
            StrSql = " SELECT origen FROM replica_estr WHERE estrnro = " & nro_osocial_elegida
            OpenRecordset StrSql, rs_Sql
            ter_osocial_elegida = rs_Sql!Origen
            rs_Sql.Close
        End If '----------- H
    Else
        nro_osocial_elegida = 0
    End If
    os_vacio = 0
    os_bool = False
    Inserto_estr2 = False

    'Plan de OS Elegida
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Plan Obra Social elegida"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    PlanOSElegida = Aux
    ' Validacion y Creacion del Plan de Obra Social Elegida
    If (PlanOSElegida <> "N/A" And nro_osocial_elegida <> 0) Then
        If PoSElegidaDesc Then
            Call ValidaEstructura(23, PlanOSElegida, nro_planos_elegida, Inserto_estr)
            Call ValidaEstructura2(25, PlanOSElegida, os_vacio, Inserto_estr2) 'Agregado ver 3.96
        Else
            Call ValidaEstructuraCodExt(23, PlanOSElegida, nro_planos_elegida, Inserto_estr)
        End If
        
        If Inserto_estr Then
            Call CreaComplemento(23, ter_osocial_elegida, nro_planos_elegida, PlanOSElegida)
            'Comentado ver 4.14
            'Call CreaComplemento(23, ter_osocial_elegida, os_vacio, PlanOSElegida) 'Agregado ver 3.96
            Inserto_estr = False
        End If
        If Inserto_estr2 Then 'Agregado ver 4.14 ------- D
            Call CreaComplemento(23, ter_osocial_elegida, os_vacio, PlanOSElegida)
            Inserto_estr2 = False
        End If '----- H
    Else
        nro_planos_elegida = 0
    End If
    
    
    'Contrato
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Contrato"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Contrato = Aux
    ' Validacion y Creacion del Contrato
    If Contrato <> "N/A" Then
        If CotDesc Then
            Call ValidaEstructura(18, Contrato, nro_contrato, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(18, Contrato, nro_contrato, Inserto_estr)
        End If
        
        If Inserto_estr Then
            Call CreaComplemento(18, 0, nro_contrato, Contrato)
            Inserto_estr = False
        End If
    Else
        nro_contrato = 0
    End If
    
    'Fecha de fin de contrato
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de fin de contrato"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    If Aux <> "N/A" Then
        Aux = EliminarCHInvalidosII(Aux, 2, "")
    End If
    FFinContrato = Aux
    If FFinContrato = "N/A" Or EsNulo(FFinContrato) Then
        Fecha_FinContrato = "Null"
    Else
        Fecha_FinContrato = ConvFecha(FFinContrato)
    End If
    
    'Lugar de pago
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Lugar de pago"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    LPago = Aux
    ' Validacion y Creacion del Lugar de Pago
    If LPago <> "N/A" Then
        If LPaDesc Then
            Call ValidaEstructura(20, LPago, nro_lpago, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(20, LPago, nro_lpago, Inserto_estr)
        End If
    Else
        nro_lpago = 0
    End If

    'Regimen Horario
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Regimen Horario"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    RegHorario = Aux
    If RegHorario <> "N/A" Then
        If RegDesc Then
            Call ValidaEstructura(21, RegHorario, nro_reghorario, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(21, RegHorario, nro_reghorario, Inserto_estr)
        End If
    Else
        nro_reghorario = 0
    End If

    'Forma de Liquidacion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Forma de Liquidacion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    FormaLiq = Aux
    If FormaLiq <> "N/A" Then
        If FLiDesc Then
            Call ValidaEstructura(22, FormaLiq, nro_formaliq, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(22, FormaLiq, nro_formaliq, Inserto_estr)
        End If
        ' Agregado por MB 10/08/2006
        If Inserto_estr Then
            Call CreaComplemento(22, 0, nro_formaliq, FormaLiq)
            Inserto_estr = False
        End If
    Else
        nro_formaliq = 0
    End If

    'Forma de Pago
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Forma de Pago"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    FormaPago = Aux
    If FormaPago <> "N/A" Then
        StrSql = " SELECT fpagnro FROM formapago WHERE fpagdescabr = '" & FormaPago & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_formapago = rs_Sql!fpagnro
        Else
            StrSql = " INSERT INTO formapago(fpagdescabr,fpagbanc,acunro,monnro) VALUES ('" & FormaPago & "',0,6,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            nro_formapago = getLastIdentity(objConn, "formapago")
        End If
    Else
        nro_formapago = 0
    End If
    
    'Banco de Pago
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Banco de Pago"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    BancoPago = Aux
    If BancoPago <> "N/A" Then
        If BcoDesc Then
            Call ValidaEstructura(41, BancoPago, nro_bancopago, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(41, BancoPago, nro_bancopago, Inserto_estr)
        End If
        Call CreaTercero(13, BancoPago, ter_bancopago)
        
        If Inserto_estr Then
            Call CreaComplemento(41, ter_bancopago, nro_bancopago, BancoPago)
        End If
        fpgo_bancaria = -1
    Else
        nro_bancopago = 0
        fpgo_bancaria = 0
    End If
    
    'Nro de cuenta
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nro de cuenta"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    NroCuenta = Aux
    If NroCuenta = "N/A" Then
        NroCuenta = ""
    Else
        NroCuenta = Left(NroCuenta, 30)
    End If
    
    'CBU
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "CBU"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    NroCBU = Aux
    If NroCBU = "N/A" Then
        NroCBU = ""
    Else
        NroCBU = Left(NroCBU, 30)
    End If
    
    'Sucursal del banco
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sucursal del banco"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    SucBanco = Aux
    If SucBanco = "N/A" Then
        SucBanco = ""
    Else
        SucBanco = Left(SucBanco, 10)
    End If


    'Nro de cuenta de acreditacion empresa
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nro de cuenta de acreditacion empresa"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    NroCuentaAcreditacionE = Aux
    If NroCuentaAcreditacionE = "N/A" Or EsNulo(NroCuentaAcreditacionE) Then
        NroCuentaAcreditacionE = ""
    Else
        StrSql = "SELECT * FROM ctabancaria WHERE cbnro ='" & NroCuentaAcreditacionE & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
            Texto = ": " & " - Nro de cuenta de acreditacion empresa no existe."
            NroColumna = 59
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            NroCuentaAcreditacionE = ""
        End If
    End If
    
    'Actividad SIJP
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Actividad SIJP"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Actividad = Aux
    If Actividad <> "N/A" Then
        If ActDesc Then
            Call ValidaEstructura(29, Actividad, nro_actividad, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(29, Actividad, nro_actividad, Inserto_estr)
        End If
    Else
        nro_actividad = 0
    End If

    'Condicion SIJP
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Condicion SIJP"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    CondSIJP = Aux
    If CondSIJP <> "N/A" And Not EsNulo(CondSIJP) Then
        If CSJDesc Then
            Call ValidaEstructura(31, CondSIJP, nro_condsijp, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(31, CondSIJP, nro_condsijp, Inserto_estr)
        End If
    Else
        nro_condsijp = 0
    End If

    'Situacion de Revista SIJP
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Situacion de Revista SIJP"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    SitRev = Aux
    If SitRev <> "N/A" And Not EsNulo(SitRev) Then
        If SReDesc Then
            Call ValidaEstructura(30, SitRev, nro_sitrev, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(30, SitRev, nro_sitrev, Inserto_estr)
        End If
    Else
        nro_sitrev = 0
    End If
    
    
    'ART
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "ART"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    ART = Aux
    If ART <> "N/A" And Not EsNulo(ART) Then
        If ARTDesc Then
            Call ValidaEstructura(40, ART, nro_art, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(40, ART, nro_art, Inserto_estr)
        End If
        Call CreaTercero(8, ART, ter_art)
        
        If Inserto_estr Then
            Call CreaComplemento(40, ter_art, nro_art, ART)
        End If
    Else
        nro_art = 0
    End If
    
    'Estado del empleado
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estado del empleado"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Estado = Aux
    If UCase(Estado) = "ACTIVO" Then
        ter_estado = -1
    Else
        ter_estado = 0
    End If
    
    
    'Causa de baja
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Causa de baja"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    CausaBaja = Aux
    If Not EsNulo(CausaBaja) And CausaBaja <> "N/A" Then
        StrSql = " SELECT caunro FROM causa WHERE caudes = '" & CausaBaja & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_causabaja = rs_Sql!caunro
        Else
            StrSql = " INSERT INTO causa(caudes,causist,caudesvin,empnro) VALUES ('" & CausaBaja & "',0,-1,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            nro_causabaja = getLastIdentity(objConn, "causa")
        End If
    Else
        nro_causabaja = 0
    End If
    
    
    
    'Fecha de baja
    NroColumna = NroColumna + 1
        ' Si hay una causa de baja, se tiene que cargar ssi la Fecha de Baja (tablero adp)
    If nro_causabaja <> 0 Then
        Obligatorio = True
    Else
        Obligatorio = False
    End If
    Campoetiqueta = "Fecha de baja"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If Aux <> "N/A" Then
    Aux = EliminarCHInvalidosII(Aux, 2, "")
    End If
    FBaja = Aux
    If EsNulo(FBaja) Or FBaja = "N/A" Then
        F_Baja = "Null"
    Else
        F_Baja = ConvFecha(FBaja)
    End If

        
    
    'Empresa
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Empresa"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Empresa = Aux
    Else
        pos2 = Len(strReg)
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Empresa = Aux
    End If
    If Empresa <> "N/A" Or EsNulo(Empresa) Then
        If EmpDesc Then
            Call ValidaEstructura(10, Empresa, nro_empresa, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(10, Empresa, nro_empresa, Inserto_estr)
        End If
        Call CreaTercero(10, Empresa, Ter_Empresa)
        
        If Inserto_estr Then
            Call CreaComplemento(10, Ter_Empresa, nro_empresa, Empresa)
        End If
    Else
        nro_empresa = 0
    End If
    
    'Remuneración del Empleado
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Remuneración del Empleado"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Empremu = Aux
    If Empremu = "N/A" Or EsNulo(Empremu) Then
        Empremu = "Null"
    End If
   
    'Modelo de Organizacion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Modelo de Organizacion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        ModOrg = Aux
        'desde aca
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        ModOrg = Aux
        If ModOrg = "N/A" Or EsNulo(ModOrg) Then
            'agrego codigo sebastian stremel 15/09/2011
            StrSql = "SELECT * FROM adptemplate WHERE tplatedefault = -1"
            OpenRecordset StrSql, rs_tpl
            If Not rs_tpl.EOF Then
                nro_ModOrg = rs_tpl!tplatenro
            Else
                StrSql = "SELECT top 1 * FROM adptemplate"
                OpenRecordset StrSql, rs_tpl
                If rs_tpl.EOF Then
                    Texto = ": no hay modelos de organizacion"
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                    RegError = RegError + 1
                    Exit Sub
                Else
                    nro_ModOrg = rs_tpl!tplatenro
                End If
                
            End If
            
           
        Else
            StrSql = "SELECT * FROM adptemplate WHERE tplatedesabr = '" & ModOrg & "'"
            OpenRecordset StrSql, rs_tpl
            If rs_tpl.EOF Then
                StrSql = "INSERT INTO adptemplate (tplatedesabr,tplatedefault) VALUES ('" & ModOrg & "',-1)"
                objConn.Execute StrSql, , adExecuteNoRecords
                nro_ModOrg = getLastIdentity(objConn, "adptemplate")
            Else
                nro_ModOrg = rs_tpl!tplatenro
            End If
        End If
    Else
            StrSql = "SELECT * FROM adptemplate WHERE tplatedefault = -1"
            OpenRecordset StrSql, rs_tpl
            If Not rs_tpl.EOF Then
                nro_ModOrg = rs_tpl!tplatenro
            Else
                StrSql = "SELECT top 1 * FROM adptemplate"
                OpenRecordset StrSql, rs_tpl
                If rs_tpl.EOF Then
                    Texto = ": no hay modelos de organizacion"
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                    RegError = RegError + 1
                    Exit Sub
                Else
                    nro_ModOrg = rs_tpl!tplatenro
                End If
                
            End If

    End If
        
        
    'Reporta_a  campo empleado.empreporta va el tercero
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Reporta_a"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Reporta_a = Aux
        If Not EsNulo(Reporta_a) And Reporta_a <> "N/A" Then
            If IsNumeric(Reporta_a) Then
                StrSql = "SELECT * FROM empleado WHERE empleado.empleg = " & Reporta_a
                If rs_emp.State = adStateOpen Then rs_emp.Close
                OpenRecordset StrSql, rs_emp
                If (Not rs_emp.EOF) Then
                    Nro_Reporta_a = rs_emp!Ternro
                Else
                    Nro_Reporta_a = 0
                    Texto = ": " & "El Empleado " & Reporta_a & " no existe."
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                End If
            Else
                Nro_Reporta_a = 0
                Texto = "El valor no es numérico."
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            End If
        End If
    Else
        Nro_Reporta_a = 0
        'no es obligatorio
    End If
    If rs_emp.State = adStateOpen Then rs_emp.Close
    

    'Grupo de Seguridad
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Grupo de Seguridad"
    pos1 = pos2 + 2
    pos2 = Len(strReg) 'InStr(pos1, strReg, Separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        GrupoSeguridad = Aux
        If GrupoSeguridad <> "N/A" And Not EsNulo(GrupoSeguridad) Then
            Call ValidaEstructura(7, GrupoSeguridad, Nro_GrupoSeguridad, Inserto_estr)
        Else
            Nro_GrupoSeguridad = 0
        End If
    Else
        Nro_GrupoSeguridad = 0
    End If
'Fin lectura de campos
' =====================================================================================================
  
  
  'Inicializo el pass+perfil (l_ess_Pass_Estandar y l_ess_Perfil_Estandar) por defecto del Autogestion en el caso que este habilitado el confper 12
  '--------------------------------
  Call ESS_Configuracion_Default
  '-------------------------------


  ' Inserto el Tercero
  If F_Nacimiento = "Null" Then
    F_Nacimiento = "''"
  End If
  If F_Ingreso = "Null" Then
    F_Ingreso = "''"
  End If
  
  If CalculaLegajo Then
    Call CalcularLegajo(nro_empresa, Legajo)
  End If

    If Not ExisteLeg Then
        'Busco si esta config la maxima cant de empleados
        MaxEmpl = 0
        StrSql = "SELECT lib_generica FROM sistema"
        OpenRecordset StrSql, rs_Sql
        If Not EsNulo(rs_Sql!lib_generica) Then
            If IsNumeric(Decryptar("56238", rs_Sql!lib_generica)) Then MaxEmpl = Decryptar("56238", rs_Sql!lib_generica)
        End If
        
        If MaxEmpl > 0 Then
            'Calculo la cantidad actual de empleados
            StrSql = "SELECT COUNT(empleg) cant FROM empleado"
            OpenRecordset StrSql, rs_Sql
            If Not rs_Sql.EOF Then
                If Not EsNulo(rs_Sql!cant) Then CantEmpl = rs_Sql!cant
            End If
            
            'Controlo cantidad
            If CantEmpl >= MaxEmpl Then
                Texto = ": " & "El sistema alcanzo el maximo de " & MaxEmpl & " empleados permitidos."
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                RegError = RegError + 1
                Exit Sub
            End If
        End If
    
        StrSql = " INSERT INTO tercero(ternom,ternom2,terape,terape2,terfecnac,tersex,terestciv,estcivnro,nacionalnro,paisnro,terfecing,docpais)"
        StrSql = StrSql & " VALUES('" & nombre & "','" & nombre2 & "','" & Apellido & "','" & Apellido2 & "'," & F_Nacimiento & "," & ter_sexo & "," & nro_estcivil & "," & nro_estcivil & ","
        If nro_nacionalidad <> 0 Then
            StrSql = StrSql & nro_nacionalidad & ","
        Else
            StrSql = StrSql & "null,"
        End If
        If nro_paisnac <> 0 Then
            StrSql = StrSql & nro_paisnac & ","
        Else
            StrSql = StrSql & "null,"
        End If
        StrSql = StrSql & F_Ingreso
        
        'docpais de BOLIVIA
        StrSql = StrSql & ",4)"
        objConn.Execute StrSql, , adExecuteNoRecords

        NroTercero = getLastIdentity(objConn, "tercero")
        
        If Nro_Reporta_a = 0 Then
        '   Si no se especifica a quien reporta inserta el mismo tercero creado
            Nro_Reporta_a = NroTercero
        End If
        
        Texto = ": " & "Codigo de Tercero = " & NroTercero
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
 
 
 
        
    Else
        StrSql = " UPDATE tercero SET "
        StrSql = StrSql & " ternom = " & "'" & nombre & "'"
        StrSql = StrSql & ", ternom2 = " & "'" & nombre2 & "'"
        StrSql = StrSql & ", terape = " & "'" & Apellido & "'"
        StrSql = StrSql & ", terape2 = " & "'" & Apellido2 & "'"
        StrSql = StrSql & ", terfecnac = " & F_Nacimiento
        StrSql = StrSql & ", tersex = " & ter_sexo
        StrSql = StrSql & ", terestciv =" & nro_estcivil
        StrSql = StrSql & ", estcivnro =" & "'" & nro_estcivil & "'"
        If nro_nacionalidad <> 0 Then
            StrSql = StrSql & ", nacionalnro =" & nro_nacionalidad
        End If
        StrSql = StrSql & ", terfecing =" & F_Ingreso
        If nro_paisnac <> 0 Then
            StrSql = StrSql & ", paisnro =" & nro_paisnac
        End If
        StrSql = StrSql & " WHERE ternro = " & NroTercero
        objConn.Execute StrSql, , adExecuteNoRecords
      
        Texto = ": " & " - Empleado: " & Legajo & " - Ese Empleado ya existe en la base. Datos de tercero actualizados"
        NroColumna = 1
        Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, strReg)
        
                        
    End If
    
    
    
    'Inserto Empleado
    If Not ExisteLeg Then
        StrSql = " INSERT INTO empleado(empleg,empfecalta,empfecbaja,empest,empfaltagr,empfbajaprev,"
        StrSql = StrSql & "ternro,nivnro,empestudia,terape,terape2,ternom,ternom2,empinterno,empemail,"
        StrSql = StrSql & "empnro,tplatenro,empremu"
        If Nro_Reporta_a <> 0 Then
            StrSql = StrSql & ",empreporta"
        End If
        
          
        'JPB - Si esta habilitado el confper 12 asigno el pass+perfil por defecto al empleado
        '------------------------------------------------------------------------------------
        If (l_ess_Pass_Estandar <> "") And (l_ess_Perfil_Estandar <> "") Then
             StrSql = StrSql & ",empessactivo,emppass,perfnro"
        End If
        '------------------------------------------------------------------------------------
    
        StrSql = StrSql & ") VALUES("
        StrSql = StrSql & Legajo & "," & F_Alta & "," & F_Baja & "," & ter_estado & "," & F_Alta & "," & Fecha_FinContrato & ","
        'StrSql = StrSql & NroTercero & "," & nro_nivest & "," & ter_estudio & ",'" & Apellido & "','"
        'StrSql = StrSql & nombre & "',Null,'" & Email & "',1," & nro_ModOrg & "," & Empremu
        StrSql = StrSql & NroTercero & "," & nro_nivest & "," & ter_estudio
        StrSql = StrSql & ",'" & Apellido & "','" & Apellido2 & "'"
        StrSql = StrSql & ",'" & nombre & "','" & nombre2 & "'"
        StrSql = StrSql & ",Null,'" & Email & "',1," & nro_ModOrg & "," & Empremu
        If Nro_Reporta_a <> 0 Then
            StrSql = StrSql & "," & Nro_Reporta_a
        End If
        
        'JPB - Si esta habilitado el confper 12 asigno el pass+perfil por defecto al empleado
        '------------------------------------------------------------------------------------
        If (l_ess_Pass_Estandar <> "") And (l_ess_Perfil_Estandar <> "") Then
             StrSql = StrSql & ",-1,'" & l_ess_Pass_Estandar & "'," & l_ess_Perfil_Estandar
        End If
        '------------------------------------------------------------------------------------
    
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = ": " & "Empleado insertado - " & Legajo & " - " & Apellido & " - " & nombre
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
    Else
        StrSql = " UPDATE empleado SET "
        StrSql = StrSql & " empleg = " & Legajo
        StrSql = StrSql & " ,empfecalta = " & F_Alta
        StrSql = StrSql & " ,empfecbaja = " & F_Baja
        StrSql = StrSql & " ,empfbajaprev = " & Fecha_FinContrato
        StrSql = StrSql & " ,empest = " & ter_estado
        StrSql = StrSql & " ,empfaltagr = " & F_Alta
        StrSql = StrSql & " ,nivnro = " & nro_nivest
        StrSql = StrSql & " ,empestudia = " & ter_estudio
        StrSql = StrSql & " ,terape = " & "'" & Apellido & "'"
        StrSql = StrSql & ", terape2 = " & "'" & Apellido2 & "'"
        StrSql = StrSql & " ,ternom = " & "'" & nombre & "'"
        StrSql = StrSql & ", ternom2 = " & "'" & nombre2 & "'"
        StrSql = StrSql & " ,empemail = " & "'" & Email & "'"
        StrSql = StrSql & " ,empnro = 1 "
        StrSql = StrSql & " ,tplatenro =" & nro_ModOrg
        StrSql = StrSql & " ,Empremu =" & Empremu
        If Nro_Reporta_a <> 0 Then
            StrSql = StrSql & ", empreporta =" & Nro_Reporta_a
        End If
        'JPB - Si esta habilitado el confper 12 asigno el pass+perfil por defecto al empleado
        '------------------------------------------------------------------------------------
        If (l_ess_Pass_Estandar <> "") And (l_ess_Perfil_Estandar <> "") Then
            StrSql = StrSql & ", empessactivo = -1"
            StrSql = StrSql & ", emppass = '" & l_ess_Pass_Estandar & "'"
            StrSql = StrSql & ", perfnro =" & l_ess_Perfil_Estandar
        End If
        '------------------------------------------------------------------------------------
        StrSql = StrSql & " WHERE ternro = " & NroTercero
        objConn.Execute StrSql, , adExecuteNoRecords
    
        Texto = ": " & "Empleado Actualizado - " & Legajo & " - " & Apellido & " - " & nombre
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
    End If
    
    ' Inserto el Registro correspondiente en ter_tip
    If Not ExisteLeg Then
        StrSql = " INSERT INTO ter_tip(ternro,tipnro) VALUES(" & NroTercero & ",1)"
        objConn.Execute StrSql, , adExecuteNoRecords
    End If

' Inserto los Documentos
    If Not ExisteLeg Then
        If Nro_TDocumento <> 0 Then
            StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
            StrSql = StrSql & " VALUES(" & NroTercero & "," & Nro_TDocumento & ",'" & Ndocu & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            Texto = ": " & "Inserte el Documento - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        End If
    Else
        If Nro_TDocumento <> 0 Then
            StrSql = "SELECT * FROM ter_doc WHERE ternro = " & NroTercero
            StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If rs.EOF Then
                StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
                StrSql = StrSql & " VALUES(" & NroTercero & "," & Nro_TDocumento & ",'" & Ndocu & "')"
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = ": " & "Inserte el Documento - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            Else
                StrSql = " UPDATE ter_doc SET "
                StrSql = StrSql & " nrodoc = '" & Ndocu & "'"
                StrSql = StrSql & " WHERE ternro = " & NroTercero
                StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = Texto = ": " & "Documento actualizado - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
    End If
  
    If Not ExisteLeg Then
        If Cuil <> "" Then
            StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
            StrSql = StrSql & " VALUES(" & NroTercero & ",10,'" & Cuil & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            Texto = ": " & "Inserte el NASEG - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        End If
    Else
        If Cuil <> "" Then
            StrSql = "SELECT * FROM ter_doc WHERE ternro = " & NroTercero
            StrSql = StrSql & " AND tidnro = 10 "
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If rs.EOF Then
                StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
                StrSql = StrSql & " VALUES(" & NroTercero & ",10,'" & Cuil & "')"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Inserte el CUIL - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            Else
                StrSql = " UPDATE ter_doc SET "
                StrSql = StrSql & " nrodoc = '" & Cuil & "'"
                StrSql = StrSql & " WHERE ternro = " & NroTercero
                StrSql = StrSql & " AND tidnro = 10"
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = Texto = ": " & "CUIL actualizado - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
    End If

' Inserto el Domicilio
  If rs.State = adStateOpen Then
    rs.Close
  End If
  
  If Not ExisteLeg Then

    If (Nro_Localidad <> 0 And Nro_Provincia <> 0 And Nro_Pais <> 0) Then
        StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro,modnro) "
        StrSql = StrSql & " VALUES(1," & NroTercero & ",-1,2,11)"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        NroDom = getLastIdentity(objConn, "cabdom")
      
        StrSql = " INSERT INTO detdom(domnro,calle,nro,piso,oficdepto,torre,manzana,codigopostal,entrecalles,"
        StrSql = StrSql & "locnro,provnro,paisnro,barrio,partnro,zonanro,email) "
        StrSql = StrSql & " VALUES (" & NroDom & ",'" & Calle & "','" & Nro_Nrodom & "','" & Piso & "','"
        StrSql = StrSql & Depto & "','" & Torre & "','" & Manzana & "','" & Cpostal & "','" & Entre & "'," & Nro_Localidad & ","
        StrSql = StrSql & Nro_Provincia & "," & Nro_Pais & ",'" & Barrio & "'," & Nro_Partido & "," & Nro_Zona & ",'" & Email & "')"
        objConn.Execute StrSql, , adExecuteNoRecords
      
        Texto = ": " & "Inserte el Domicilio - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        
        If Telefono <> "" Then
            'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
            StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
            StrSql = StrSql & " VALUES(" & NroDom & ",'" & Telefono & "',0,-1,0,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            Texto = ": " & "Inserte el Telefono Principal - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        End If
        If TelLaboral <> "" Then
            StrSql = "SELECT * FROM telefono "
            StrSql = StrSql & " WHERE domnro =" & NroDom
            StrSql = StrSql & " AND telnro ='" & TelLaboral & "'"
            If rs_Tel.State = adStateOpen Then rs_Tel.Close
            OpenRecordset StrSql, rs_Tel
            If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelLaboral & "',0,0,0,3)"
                objConn.Execute StrSql, , adExecuteNoRecords
                  
                Texto = ": " & "Inserte el Telefono Laboral - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
        If TelCelular <> "" Then
            StrSql = "SELECT * FROM telefono "
            StrSql = StrSql & " WHERE domnro =" & NroDom
            StrSql = StrSql & " AND telnro ='" & TelCelular & "'"
            If rs_Tel.State = adStateOpen Then rs_Tel.Close
            OpenRecordset StrSql, rs_Tel
            If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelCelular & "',0,0,-1,2)"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Inserte el Telefono Celular - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
    End If
  Else
    If (Nro_Localidad <> 0 And Nro_Provincia <> 0 And Nro_Pais <> 0) Then
        StrSql = "SELECT * FROM cabdom  "
        StrSql = StrSql & " WHERE tipnro = 1"
        StrSql = StrSql & " AND ternro = " & NroTercero
        StrSql = StrSql & " AND domdefault = -1"
        StrSql = StrSql & " AND tidonro = 2"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
          StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
          StrSql = StrSql & " VALUES(1," & NroTercero & ",-1,2)"
          objConn.Execute StrSql, , adExecuteNoRecords
          
          NroDom = getLastIdentity(objConn, "cabdom")
        
          StrSql = " INSERT INTO detdom(domnro,calle,nro,piso,oficdepto,torre,manzana,codigopostal,entrecalles,"
          StrSql = StrSql & "locnro,provnro,paisnro,barrio,partnro,zonanro,email) "
          StrSql = StrSql & " VALUES (" & NroDom & ",'" & Calle & "','" & Nro_Nrodom & "','" & Piso & "','"
          StrSql = StrSql & Depto & "','" & Torre & "','" & Manzana & "','" & Cpostal & "','" & Entre & "'," & Nro_Localidad & ","
          StrSql = StrSql & Nro_Provincia & "," & Nro_Pais & ",'" & Barrio & "'," & Nro_Partido & "," & Nro_Zona & ",'" & Email & "')"
          objConn.Execute StrSql, , adExecuteNoRecords
        
          Texto = ": " & "Inserte el Domicilio - "
          Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
          
          If Telefono <> "" Then
            'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
              StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
              StrSql = StrSql & " VALUES(" & NroDom & ",'" & Telefono & "',0,-1,0,1)"
              objConn.Execute StrSql, , adExecuteNoRecords

              Texto = ": " & "Inserte el Telefono Principal - "
              Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
          End If
          If TelLaboral <> "" Then
              StrSql = "SELECT * FROM telefono "
              StrSql = StrSql & " WHERE domnro =" & NroDom
              StrSql = StrSql & " AND telnro ='" & TelLaboral & "'"
              If rs_Tel.State = adStateOpen Then rs_Tel.Close
              OpenRecordset StrSql, rs_Tel
              If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                  StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                  StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelLaboral & "',0,0,0,3)"
                  objConn.Execute StrSql, , adExecuteNoRecords
                    
                  Texto = ": " & "Inserte el Telefono Laboral - "
                  Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
              End If
          End If
          If TelCelular <> "" Then
              StrSql = "SELECT * FROM telefono "
              StrSql = StrSql & " WHERE domnro =" & NroDom
              StrSql = StrSql & " AND telnro ='" & TelCelular & "'"
              If rs_Tel.State = adStateOpen Then rs_Tel.Close
              OpenRecordset StrSql, rs_Tel
              If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                  StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                  StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelCelular & "',0,0,-1,2)"
                  objConn.Execute StrSql, , adExecuteNoRecords
                  Texto = ": " & "Inserte el Telefono Celular - "
                  Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
              End If
          End If
        Else
            StrSql = " UPDATE detdom SET "
            StrSql = StrSql & " calle =" & "'" & Calle & "'"
            StrSql = StrSql & ",nro =" & "'" & Nro_Nrodom & "'"
            StrSql = StrSql & ",piso =" & "'" & Piso & "'"
            StrSql = StrSql & ",oficdepto =" & "'" & Depto & "'"
            StrSql = StrSql & ",torre =" & "'" & Torre & "'"
            StrSql = StrSql & ",manzana =" & "'" & Manzana & "'"
            StrSql = StrSql & ",codigopostal =" & "'" & Cpostal & "'"
            StrSql = StrSql & ",entrecalles =" & "'" & Entre & "'"
            StrSql = StrSql & ",locnro =" & Nro_Localidad
            StrSql = StrSql & ",provnro =" & Nro_Provincia
            StrSql = StrSql & ",paisnro =" & Nro_Pais
            StrSql = StrSql & ", partnro = " & Nro_Partido
            StrSql = StrSql & ", zonanro =" & Nro_Zona
            StrSql = StrSql & ", email ='" & Email & "'"
            StrSql = StrSql & " WHERE domnro = " & rs!domnro
            objConn.Execute StrSql, , adExecuteNoRecords
        
            Texto = ": " & "Domicilio Actualizado - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        
            If Telefono <> "" Then
                StrSql = "SELECT * FROM telefono "
                StrSql = StrSql & " WHERE domnro =" & rs!domnro
                StrSql = StrSql & " AND telnro ='" & Telefono & "'"
                If rs_Tel.State = adStateOpen Then rs_Tel.Close
                OpenRecordset StrSql, rs_Tel
                If rs_Tel.EOF Then
                    'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                    StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                    StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & Telefono & "',0,-1,0,1)"
                    objConn.Execute StrSql, , adExecuteNoRecords
                      
                    Texto = ": " & "Inserte el Telefono Principal - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            End If
            If TelLaboral <> "" Then
                StrSql = "SELECT * FROM telefono "
                StrSql = StrSql & " WHERE domnro =" & rs!domnro
                StrSql = StrSql & " AND telnro ='" & TelLaboral & "'"
                If rs_Tel.State = adStateOpen Then rs_Tel.Close
                OpenRecordset StrSql, rs_Tel
                If rs_Tel.EOF Then
                    'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                    StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                    StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & TelLaboral & "',0,0,0,3)"
                    objConn.Execute StrSql, , adExecuteNoRecords
                      
                    Texto = ": " & "Inserte el Telefono Laboral - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            End If
            If TelCelular <> "" Then
                StrSql = "SELECT * FROM telefono "
                StrSql = StrSql & " WHERE domnro =" & rs!domnro
                StrSql = StrSql & " AND telnro ='" & TelCelular & "'"
                If rs_Tel.State = adStateOpen Then rs_Tel.Close
                OpenRecordset StrSql, rs_Tel
                If rs_Tel.EOF Then
                    'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                    StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                    StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & TelCelular & "',0,0,-1,2)"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = ": " & "Inserte el Telefono Celular - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            End If
        End If
    End If
  End If
  


If Not ExisteLeg Then
    ' Inserto las Fases
    StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
    StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
    If nro_causabaja <> 0 Then
        StrSql = StrSql & nro_causabaja
        StrSql = StrSql & ",0,-1,-1,-1,-1,-1)"  ' estado fase=0  - no mira ter_estado
    Else
        StrSql = StrSql & "null"
        StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
    End If
    objConn.Execute StrSql, , adExecuteNoRecords
    
    If nro_causabaja <> 0 Then
        Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
    End If
    
Else
    'FGZ - 23/07/2010
    'SI existe el legajo reviso si estaba activo o inactivo.
    '   Si estaba inactivo y ahora el estado es activo dedeuzco que se trata de un reingreso
    '   ==> intento insertar la fase.
    '   Problemas potenciales
    '
    '   Existe Fase cerrada *****
    '   Fase anterior  ------[------------------]--------
    'Casos
    '   Fecha ingreso  ---FI----------------------------- ==> no se puede insertar (informar error)
    '   Fecha ingreso  ---------   FI-------------------- ==> tenfo 2 posibilidades
    '                                                           Cierro fase un dia antes de FI y creo nueva fase
    '                                                           no se puede insertar (informar error)
    '   Fecha ingreso  -----------------------------FI--- ==> inserto la nueva fase
    
    '   Existe Fase abierta *****
    '   Fase anterior  ------[---------------------------
    'Casos
    '   Fecha ingreso  ---FI----------------------------- ==> no se puede insertar (informar error)
    '   Fecha ingreso  -------------FI------------------- ==> Cierro fase un dia antes de FI y creo nueva fase
   
    'Si no existe fase ==> simplemente crea la fase
    
    StrSql = "SELECT * FROM fases WHERE empleado = " & NroTercero
    StrSql = StrSql & " ORDER BY altfec DESC"
    OpenRecordset StrSql, rs
    
    If rs.EOF Then
        'No Existe ==> Inserto
        StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
        StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
        If nro_causabaja <> 0 Then
          StrSql = StrSql & nro_causabaja
          StrSql = StrSql & ",0,-1,-1,-1,-1,-1)"  ' estado fase=0  - no mira ter_estado
        Else
          StrSql = StrSql & "null"
          StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
        End If
        objConn.Execute StrSql, , adExecuteNoRecords
        
        If nro_causabaja <> 0 Then
            Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
        End If
        
    Else
        'Existe
        Texto = ": " & "Existe Fase"
        If CBool(rs!Estado) Then
            'Activa
            Texto = Texto & " activa. " & rs!altfec & " - " & IIf(EsNulo(rs!bajfec), "#", rs!bajfec)
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            
            
            'Si ahora está inactivo ==> actualiza la fase
            If Not CBool(ter_estado) Then
                'la cierro y abro otro
                StrSql = " UPDATE fases SET "
                StrSql = StrSql & " bajfec =" & F_Baja
                StrSql = StrSql & ",estado = 0 "
                If nro_causabaja <> 0 Then
                StrSql = StrSql & ", caunro =" & nro_causabaja
                End If
                StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
                objConn.Execute StrSql, , adExecuteNoRecords
            
                Texto = ": " & "Fase Actualizada."
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                
                If nro_causabaja <> 0 Then
                    Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
                End If
                
            Else
                Texto = ": " & "Si desea actualizar debe corregir la situacion manualmente."
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
            
        Else
            'Inactiva
            Texto = Texto & " inactiva "
            If EsNulo(rs!bajfec) Then
                Texto = Texto & " abierta " & rs!altfec & " - #"
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                
                If CDate(rs!altfec) < CDate(FAlta) Then
                    Texto = ": " & "Cierro la fase anterior (un dia antes) y creo la nueva fase"
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    
                    'la cierro y abro otro - (se cierra a FAlta-1)
                    StrSql = " UPDATE fases SET "
                    StrSql = StrSql & "bajfec =" & ConvFecha(DateAdd("d", -1, FAlta))
                    StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
                    objConn.Execute StrSql, , adExecuteNoRecords
                        
                    'abro una nueva
                    StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
                    StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
                    If nro_causabaja <> 0 Then
                      StrSql = StrSql & nro_causabaja
                      StrSql = StrSql & ",0,-1,-1,-1,-1,-1)"
                    Else
                      StrSql = StrSql & "null"
                      StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    Texto = ": " & "Fase Actualizada."
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    
                    If nro_causabaja <> 0 Then
                        Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
                    End If
                    
                Else
                    If CDate(rs!altfec) > CDate(FAlta) Then
                        Texto = ": " & "No se puede actualizar las fases. Debe corregir la situacion manualmente."
                        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    Else
                        'es la misma fase, no hago nada.
                        ' actualiza
                        
                        StrSql = " UPDATE fases SET "
                        StrSql = StrSql & " bajfec =" & F_Baja
                        If nro_causabaja <> 0 Then
                        StrSql = StrSql & ", caunro =" & nro_causabaja
                        End If
                        StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
                        objConn.Execute StrSql, , adExecuteNoRecords
                    
                        Texto = ": " & "Fase Actualizada - "
                        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                            
                        If nro_causabaja <> 0 Then
                            Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
                        End If
                            
                    End If
                End If
            Else
                Texto = Texto & " cerrada " & rs!altfec & " - " & rs!bajfec
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            
                If CDate(rs!altfec) < CDate(FAlta) And CDate(rs!bajfec) < CDate(FAlta) Then
                    'Fase existente ------[------]-----------
                    'Nueva fase     ---------------[-----]---
                    
                    'abro una nueva
                    StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
                    StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
                    If nro_causabaja <> 0 Then
                      StrSql = StrSql & nro_causabaja
                      StrSql = StrSql & ",0,-1,-1,-1,-1,-1)"
                    Else
                      StrSql = StrSql & "null"
                      StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    Texto = ": " & "Fase creada."
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    
                    If nro_causabaja <> 0 Then
                        Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
                    End If
                    
                Else
                    'FGZ - 11/11/2010 --------------------------
                    If CDate(rs!altfec) = CDate(FAlta) And CDate(rs!bajfec) = CDate(FBaja) Then
                        If nro_causabaja <> 0 Then
                            StrSql = " UPDATE fases SET "
                            StrSql = StrSql & " caunro =" & nro_causabaja
                            StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
                            objConn.Execute StrSql, , adExecuteNoRecords
                    
                            Texto = ": " & "Fase Actualizada - "
                            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                            
                            Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
                            
                        Else
                        
                        End If
                    Else
                        Texto = ": " & "No se puede crear la fases nueva. Debe corregir la situacion manualmente."
                        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    End If
                End If
            End If
        End If
    End If
End If
    
  
  'Inserto la cuenta bancaria
    If Not ExisteLeg Then
        'FGZ - 09/04/2010 ------------------------------------------------------------------------------
        'FGZ - 09/04/2010 - Es obligatorio el nro de cuenta o el CBU -----------------------------------
        'If (nro_formapago <> 0 And ter_bancopago <> 0 And NroCuenta <> "") Then
        If (nro_formapago <> 0 And ter_bancopago <> 0 And (NroCuenta <> "" Or NroCBU <> "")) Then
                StrSql = " INSERT INTO ctabancaria (ternro,fpagnro,banco,ctabestado,"
                StrSql = StrSql & "ctabsuc,ctabnro,ctabporc,ctabcbu"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",ctabacred"
                End If
                StrSql = StrSql & ") VALUES ("
                StrSql = StrSql & NroTercero & "," & nro_formapago & "," & ter_bancopago & ","
                StrSql = StrSql & "-1,'" & Left(SucBanco, 10) & "','" & NroCuenta & "',100,'" & NroCBU & "'"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",'" & NroCuentaAcreditacionE & "'"
                End If
                StrSql = StrSql & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Inserte la Cuenta Bancaria - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
        End If
    Else
        'If (nro_formapago <> 0 And ter_bancopago <> 0 And NroCuenta <> "") Then
        If (nro_formapago <> 0 And ter_bancopago <> 0 And (NroCuenta <> "" Or NroCBU <> "")) Then
            StrSql = "SELECT * FROM ctabancaria"
            StrSql = StrSql & " WHERE ctabancaria.ternro =" & NroTercero
            StrSql = StrSql & " AND ctabestado = -1 "
            StrSql = StrSql & " AND banco =" & ter_bancopago
            StrSql = StrSql & " AND fpagnro =" & nro_formapago
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If rs.EOF Then
                StrSql = " INSERT INTO ctabancaria (ternro,fpagnro,banco,ctabestado,"
                StrSql = StrSql & "ctabsuc,ctabnro,ctabporc,ctabcbu"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",ctabacred"
                End If
                StrSql = StrSql & ") VALUES ("
                StrSql = StrSql & NroTercero & "," & nro_formapago & "," & ter_bancopago & ","
                StrSql = StrSql & "-1,'" & Left(SucBanco, 10) & "','" & NroCuenta & "',100,'" & NroCBU & "'"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",'" & NroCuentaAcreditacionE & "'"
                End If
                StrSql = StrSql & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Inserte la Cuenta Bancaria - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            Else
                If rs!ctabnro = NroCuenta Then
                    StrSql = "UPDATE ctabancaria SET "
                    StrSql = StrSql & " ctabsuc = '" & SucBanco & "'"
                    If Not EsNulo(NroCuentaAcreditacionE) Then
                        StrSql = StrSql & ", ctabacred = '" & NroCuentaAcreditacionE & "'" '20-12-2010
                    End If
                    StrSql = StrSql & ", ctabnro = '" & NroCuenta & "'"
                    StrSql = StrSql & ", ctabporc = 100 "
                    StrSql = StrSql & ", ctabcbu = '" & NroCBU & "'"
                    StrSql = StrSql & " WHERE ctabancaria.ternro =" & NroTercero
                    StrSql = StrSql & " AND ctabestado = -1 "
                    StrSql = StrSql & " AND banco =" & ter_bancopago
                    StrSql = StrSql & " AND fpagnro =" & nro_formapago
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    Texto = ": " & "Cuenta Bancaria actualizada- "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                Else
                    'Desactivo la anterior
                    StrSql = " UPDATE ctabancaria SET "
                    StrSql = StrSql & " ctabestado = 0 "
                    StrSql = StrSql & " WHERE cbnro = " & rs!Cbnro
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    'inserto la nueva
                    StrSql = " INSERT INTO ctabancaria (ternro,fpagnro,banco,ctabestado,"
                    StrSql = StrSql & "ctabsuc,ctabnro,ctabporc,ctabcbu"
                    If Not EsNulo(NroCuentaAcreditacionE) Then
                        StrSql = StrSql & ",ctabacred"
                    End If
                    StrSql = StrSql & ") VALUES ("
                    StrSql = StrSql & NroTercero & "," & nro_formapago & "," & ter_bancopago & ","
                    StrSql = StrSql & "-1,'" & Left(SucBanco, 10) & "','" & NroCuenta & "',100,'" & NroCBU & "'"
                    If Not EsNulo(NroCuentaAcreditacionE) Then
                        StrSql = StrSql & ",'" & NroCuentaAcreditacionE & "'"
                    End If
                    StrSql = StrSql & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = ": " & "Inserte la Cuenta Bancaria - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            End If
        End If
    End If
  
  'Inserto las Estructuras
  F_Baja = "Null"
  Call AsignarEstructura_NEW(1, nro_sucursal, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(2, nro_sector, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(3, nro_categoria, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(4, nro_puesto, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(5, nro_ccosto, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(6, nro_gerencia, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(7, Nro_GrupoSeguridad, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(9, nro_departamento, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(10, nro_empresa, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(15, nro_cajajub, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(16, nro_sindicato, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(17, nro_osocial_elegida, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(18, nro_contrato, NroTercero, F_Alta, F_Baja)
  'Call AsignarEstructura_NEW(18, nro_contrato, NroTercero, F_Alta, Fecha_FinContrato)
  Call AsignarEstructura_NEW(19, nro_convenio, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(20, nro_lpago, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(21, nro_reghorario, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(22, nro_formaliq, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(23, nro_planos_elegida, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(24, nro_osocial_ley, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(25, nro_planos_ley, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(29, nro_actividad, NroTercero, F_Alta, F_Baja)
  
  'If ter_estado = -1 Then 'JAZ 15-05-12
    'SOLO SI EL EMPLEADO ESTA ACTIVO
    'Call AsignarEstructura_NEW(30, nro_sitrev, NroTercero, F_Alta, F_Baja)
    'Call AsignarEstructura_SitRev(30, Estrnro, CodTer, fecAlta, fecBaja)
  Call AsignarEstructura_SitRev2(30, nro_sitrev, NroTercero, F_Alta, F_Baja)
  'End If
  
  Call AsignarEstructura_NEW(31, nro_condsijp, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(35, nro_direccion, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(40, nro_art, NroTercero, F_Alta, F_Baja)
  'Call AsignarEstructura_NEW(41, nro_bancopago, NroTercero, F_Alta, F_Baja)
  
  
Texto = ": " & "Linea procesada correctamente "
Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
'LineaOK.Writeline Mid(strReg, 1, Len(strReg))
OK = True
         
FinLinea:
If rs.State = adStateOpen Then
    rs.Close
End If
Exit Sub

SaltoLinea:
    Texto = ": " & " - Error:" & Err.Description & " -- Ultima consulta: " & StrSql
    NroColumna = 1
    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    MyRollbackTrans
    OK = False
    GoTo FinLinea
End Sub
Public Sub LineaModelo_606(ByVal strReg As String, ByRef OK As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de Empleados de Uruguay
' Autor      : FGZ
' Fecha      : 30/07/2004
' Ultima Mod.: 27/04/2005 - FGZ - Estandarizacion del proceso
'              27/06/2005 - FGZ - Fecha fin de contrato.
'              30/03/2012 - JAZ - Agregué Terape2 y Ternom2 enmascarado por @
'              03/04/2012 - JAZ - Corrección de error - faltaban las comas de separación de campos en el UPDATE de tercero
'              20/04/2012 - RAD - Se puso como no obligatorio el CUIL
' ---------------------------------------------------------------------------------------------
Dim pos1            As Long
Dim pos2            As Long

Dim Legajo          As String   'LEGAJO                   -- empleado.empleg
Dim Apellido        As String   'APELLIDO                 -- empleado.terape y tercero.terape
Dim Apellido2       As String   'APELLIDO 2               -- empleado.terape2 y tercero.terape2
Dim nombre          As String   'NOMBRE                   -- empleado.ternom y tercero.ternom
Dim nombre2         As String   'NOMBRE2                  -- empleado.ternom2 y tercero.ternom2
Dim Fnac            As String   'FNAC                     -- tercero.terfecna
Dim Nacionalidad    As String   'Nacionalidad             -- tercero.nacionalnro
Dim PaisNac         As String   'Pais de Nacimiento       -- tercero.paisnro
Dim Fing            As String   'Fec.Ingreso al Pais      -- terecro.terfecing
Dim EstCivil        As String   'Est.Civil                -- tercero.estcivnro
Dim Sexo            As String   'Sexo                     -- tercero.tersex
Dim FAlta           As String   'Fec. de Alta             -- empleado.empfaltagr y fases.altfec
Dim Estudio         As String   'Estudia                  -- empleado.empestudia
Dim NivEst          As String   'Nivel de Estudio         -- empleado.nivnro
Dim Tdocu           As String   'Tipo Documento           -- ter_dpc.tidnro (DU)
Dim Ndocu           As String   'Nro. Documento           -- ter_doc.nrodoc
Dim Cuil            As String   'CUIL                     -- ter_doc.nrodoc (10)
Dim Calle           As String   'Calle                    -- detdom.calle
Dim Nro             As String   'Número                   -- detdom.nro
Dim Piso            As String   'Piso                     -- detdom.piso
Dim Depto           As String   'Depto                    -- detdom.depto
Dim Torre           As String   'Torre                    -- detdom.torre
Dim Manzana         As String   'Manzana                  -- detdom.manzana
Dim Cpostal         As String   'Cpostal                  -- detdom.codigopostal
Dim Entre           As String   'Entre Calles             -- detdom.entrecalles
Dim Barrio          As String   'Barrio                   -- detdom.barrio
Dim Localidad       As String   'Localidad                -- detdom.locnro
Dim Partido         As String   'Partido                  -- detdom.partnro
Dim Zona            As String   'Zona                     -- detdom.zonanro
Dim Provincia       As String   'Provincia                -- detdom.provnro
Dim Pais            As String   'Pais                     -- detdom.paisnro
Dim Telefono        As String   'Telefono                 -- telefono.telnro
Dim TelLaboral        As String   'Telefono                 -- telefono.telnro
Dim TelCelular        As String   'Telefono                 -- telefono.telnro
Dim Email           As String   'E-mail                   -- empleado.empemail
Dim Sucursal        As String   'Sucursal                 -- his_estructura.estrnro
Dim Sector          As String   'Sector                   -- his_estructura.estrnro
Dim categoria       As String   'Categoria                -- his_estructura.estrnro
Dim Puesto          As String   'Puesto                   -- his_estructura.estrnro
Dim CCosto          As String   'C.Costo                  -- his_estructura.estrnro
Dim Gerencia        As String   'Gerencia                 -- his_estructura.estrnro
Dim Departamento    As String   'Departamento             -- his_estructura.estrnro
Dim Direccion       As String   'Direccion                -- his_estructura.estrnro
Dim CajaJub         As String   'Caja de Jubilacion       -- his_estructura.estrnro
Dim Sindicato       As String   'Sindicato                -- his_estructura.estrnro
Dim OSocialLey         As String   'Obra Social              -- his_estructura.estrnro
Dim PlanOSLey          As String   'Plan OS                  -- his_estructura.estrnro
Dim OSocialElegida         As String   'Obra Social              -- his_estructura.estrnro
Dim PlanOSElegida          As String   'Plan OS                  -- his_estructura.estrnro
Dim Contrato        As String   'Contrato                 -- his_estructura.estrnro
Dim Convenio        As String   'Convenio                 -- his_estructura.estrnro
Dim LPago           As String   'Lugar de Pago            -- his_estructura.estrnro
Dim RegHorario      As String   'Regimen Horario          -- his_estructura.estrnro
Dim FormaLiq        As String   'Forma de Liquidacion     -- his_estructura.estrnro
Dim FormaPago       As String   'Forma de Pago            -- formapago.fpagdescabr
Dim SucBanco        As String   'Sucursal del Banco       -- ctabancaria.ctabsuc
Dim BancoPago       As String   'Banco Pago               -- his_estructura.estrnro, formapago.fpagbanc (siempre y cuando el Banco sea <> 0) y ctabancaria.banco
Dim NroCuenta       As String   'Nro. Cuenta              -- ctabancario.ctabnro
Dim NroCuentaAcreditacionE As String
Dim Actividad       As String   'Actividad                -- his_estructura.estrnro
Dim CondSIJP        As String   'Condicion SIJP           -- his_estructura.estrnro
Dim SitRev          As String   'Sit. de Revista SIJP     -- his_estructura.estrnro
Dim ModCont         As String   'Mod. de Contrat. SIJP    -- his_estructura.estrnro
Dim ART             As String   'ART                      -- his_estructura.estrnro
Dim Estado          As String   'Estado                   -- empleado.empest y fases.estado
Dim CausaBaja       As String   'Causa de Baja            -- fases.caunro
Dim FBaja           As String   'Fecha de Baja            -- fases.bajfec
Dim Empresa         As String   'Empresa                  -- his_estructura.estrnro
Dim ModOrg          As String   'Empresa                  -- his_estructura.estrnro
Dim OSL             As String   'Empresa                  -- his_estructura.estrnro
Dim OSE             As String   'Empresa                  -- his_estructura.estrnro
Dim PlanOdon        As String   'Empresa                  -- his_estructura.estrnro
Dim Locacion        As String   'Empresa                  -- his_estructura.estrnro
Dim Area            As String   'Empresa                  -- his_estructura.estrnro
Dim SubDepto        As String   'Empresa                  -- his_estructura.estrnro
Dim NroCBU          As String   'Empresa                  -- his_estructura.estrnro
Dim Empremu         As String   'Remuneración del empleado
Dim GrupoSeguridad  As String   'Grupo de Seguridad
Dim Nro_GrupoSeguridad  As Long 'Grupo de Seguridad       -- his_estructura.estrnro
Dim FFinContrato    As String
Dim Fecha_FinContrato As String
Dim Reporta_a       As String
Dim Nro_Reporta_a   As Long

Dim Ternro As Long

Dim NroTercero          As Long

Dim Nro_Legajo          As Long
Dim Nro_TDocumento      As Long
Dim nro_nivest          As Long
Dim nro_estudio         As Long

Dim Nro_Nrodom          As String

Dim Nro_Barrio          As Long
Dim Nro_Localidad       As Long
Dim Nro_Partido         As Long
Dim Nro_Zona            As Long
Dim Nro_Provincia       As Long
Dim Nro_Pais            As Long
Dim nro_paisnac         As Long

Dim nro_sucursal        As Long
Dim nro_sector          As Long
Dim nro_categoria       As Long
Dim nro_puesto          As Long
Dim nro_ccosto          As Long
Dim nro_gerencia        As Long
Dim nro_cajajub         As Long
Dim nro_sindicato       As Long
Dim nro_osocial_ley     As Long
Dim nro_planos_ley      As Long
Dim nro_osocial_elegida As Long
Dim nro_planos_elegida  As Long
Dim nro_contrato        As Long
Dim nro_convenio        As Long
Dim nro_reghorario      As Long
Dim nro_formaliq        As Long
Dim nro_bancopago       As Long
Dim nro_actividad       As Long
Dim nro_sitrev          As Long
Dim nro_modcont         As Long
Dim nro_art             As Long
Dim nro_departamento    As Long
Dim nro_direccion       As Long
Dim nro_lpago           As Long
Dim nro_condsijp        As Long
Dim nro_formapago       As Long
Dim nro_causabaja       As Long
Dim nro_empresa         As Long
Dim NroDom              As Long
Dim nro_osl             As Long
Dim nro_odon            As Long
Dim nro_ose             As Long
Dim nro_locacion        As Long
Dim nro_area            As Long
Dim nro_SubDepto        As Long
Dim nro_empremu         As Long

Dim nro_estcivil        As Long
Dim nro_nacionalidad    As Long

Dim F_Nacimiento        As String
Dim F_Fallecimiento     As String
Dim F_Alta              As String
Dim F_Baja              As String
Dim F_Ingreso           As String

Dim ape()             As String   'Agregado ver 4.09
Dim Nom()              As String   'Agregado ver 4.09

Dim Inserto_estr        As Boolean

Dim ter_sucursal        As Long
Dim Ter_Empresa         As Long
Dim ter_cajajub         As Long
Dim ter_sindicato       As Long
Dim ter_osocial_ley     As Long
Dim ter_osocial_elegida As Long
Dim ter_bancopago       As Long
Dim ter_art             As Long
Dim ter_sexo            As Long
Dim ter_estudio         As Long
Dim ter_estado          As Long

Dim fpgo_bancaria       As Long

Dim rs As New ADODB.Recordset
Dim rs_Sql As New ADODB.Recordset
Dim rs_Empleado As New ADODB.Recordset
Dim rs_Tel As New ADODB.Recordset
Dim rs_repl As New ADODB.Recordset


Dim SucDesc             As Boolean   'Sucursal                 -- his_estructura
Dim SecDesc             As Boolean   'Sector                   -- his_estructura
Dim CatDesc             As Boolean   'Categoria                -- his_estructura
Dim PueDesc             As Boolean   'Puesto                   -- his_estructura
Dim CCoDesc             As Boolean   'C.Costo                  -- his_estructura
Dim GerDesc             As Boolean   'Gerencia                 -- his_estructura
Dim DepDesc             As Boolean   'Departamento             -- his_estructura
Dim DirDesc             As Boolean   'Direccion                -- his_estructura
Dim CaJDesc             As Boolean   'Caja de Jubilacion       --
Dim SinDesc             As Boolean   'Sindicato                -- his_estructura
Dim OSoElegidaDesc      As Boolean   'Obra Social              -- his_estructura
Dim PoSElegidaDesc      As Boolean   'Plan OS                  -- his_estructura
Dim OSoLeyDesc          As Boolean   'Obra Social              -- his_estructura
Dim PoSLeyDesc          As Boolean   'Plan OS                  -- his_estructura
Dim CotDesc             As Boolean   'Contrato                 -- his_estructura
Dim CovDesc             As Boolean   'Convenio                 -- his_estructura
Dim LPaDesc             As Boolean   'Lugar de Pago            -- his_estructura
Dim RegDesc             As Boolean   'Regimen Horario          -- his_estructura
Dim FLiDesc             As Boolean   'Forma de Liquidacion     -- his_estructura
Dim FPaDesc             As Boolean      'Forma de Pago            -- his_estructura
Dim BcoDesc             As Boolean      'Banco Pago               --
Dim ActDesc             As Boolean      'Actividad                --
Dim CSJDesc             As Boolean      'Condicion SIJP           --
Dim SReDesc             As Boolean      'Sit. de Revista SIJP     --
Dim MCoDesc             As Boolean      'Mod. de Contrat. SIJP    --
Dim ARTDesc             As Boolean      'ART                      --
Dim EmpDesc             As Boolean      'Empresa                  --
Dim OSLDesc             As Boolean      'Empresa                  --
Dim POdoDesc             As Boolean     'Empresa                  --
Dim OSEDesc             As Boolean      'Empresa                  --
Dim LocDesc             As Boolean      'Empresa                  --
Dim AreaDesc             As Boolean     'Empresa                  --
Dim SubDepDesc             As Boolean   'Empresa                  --

Dim IngresoDom          As Boolean

Dim rs_tdoc As New ADODB.Recordset
Dim rs_emp  As New ADODB.Recordset
Dim rs_tpl  As New ADODB.Recordset
Dim rs_leg  As New ADODB.Recordset

Dim Nroadtemplate As Long
Dim Nro_Institucion As Long

Dim Sigue As Boolean
Dim ExisteLeg As Boolean
Dim CalculaLegajo As Boolean

    On Error GoTo SaltoLinea

    ' True indica que se hace por Descripcion. False por Codigo Externo

    SucDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    SecDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CatDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    PueDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CCoDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    GerDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    DepDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    DirDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CaJDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    SinDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    OSoElegidaDesc = True ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    PoSElegidaDesc = True ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    OSoLeyDesc = True   ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    PoSLeyDesc = True   ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CotDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CovDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    LPaDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    RegDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    FLiDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    FPaDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    BcoDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    ActDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CSJDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    SReDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    MCoDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    ARTDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    EmpDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    OSLDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    POdoDesc = True     ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    OSEDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    LocDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    AreaDesc = True     ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    SubDepDesc = True   ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    
    Sigue = True 'Indica que si en el archivo viene mas de una vez un empleado, le crea las fases
    ExisteLeg = False
    'RegLeidos = RegLeidos + 1
    LineaCarga = LineaCarga + 1
    
    Flog.writeline
    FlogE.writeline
    FlogP.writeline
    
    'Legajo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Legajo"
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Legajo = Aux
    'Legajo = Mid(strReg, pos1, pos2 - pos1 + 1)
    If Legajo = "N/A" Or EsNulo(Legajo) Then
        CalculaLegajo = True
    Else
        StrSql = "SELECT * FROM empleado WHERE empleado.empleg = " & Legajo
        OpenRecordset StrSql, rs_emp
        If (Not rs_emp.EOF) Then
            If (Not Sigue) Then
                Texto = ": " & " - El Empleado ya Existe."
                NroColumna = 1
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                'Ok = False
                'RegError = RegError + 1
                'Exit Sub
            Else
                NroTercero = rs_emp!Ternro
                ExisteLeg = True
            End If
        End If
    End If
    
    'Apellido
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Apellido"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    ape = Split(Aux, "@") 'Agregado ver 4.09
    
    'If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then 'Linea anterior ver 4.08
    If (ape(0) = "N/A" Or EsNulo(ape(0))) And Obligatorio Then 'Modificado ver 4.09
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Apellido = Left(ape(0), 25) 'Modificado ver 4.09
    '----------------Agregado ver 4.09---------------------------
    If Not (ape(1) = "N/A" Or EsNulo(ape(1)) Or ape(1) = "") Then
        Apellido2 = Left(ape(1), 25)
    Else
        Apellido2 = ""
    End If
    '---------------------------------------------------------
    
    'Nombre
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nombre"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Nom = Split(Aux, "@")
    'If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then 'Linea anterior ver 4.08
    If (Nom(0) = "N/A" Or EsNulo(Nom(0))) And Obligatorio Then 'Modificado ver 4.09
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    nombre = Left(Nom(0), 25) 'Modificado ver 4.09
    If (Apellido = "" Or Apellido = "N/A") And (nombre = "" Or nombre = "N/A") Then
        Texto = ": " & " - Debe Ingresar un Nombre y Apellido."
        NroColumna = 2
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    '----------------Agregado ver 4.09---------------------------
    If Not (Nom(1) = "N/A" Or EsNulo(Nom(1)) Or Nom(1) = "") Then
        nombre2 = Left(Nom(1), 25)
    Else
        nombre2 = ""
    End If
    '---------------------------------------------------------
    
    'Fecha de Nacimiento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de Nacimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Fnac = Aux
    If Fnac = "N/A" Then
       F_Nacimiento = "Null"
    Else
       F_Nacimiento = ConvFecha(Fnac)
    End If
    
    'Pais de Nacimiento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Pais de Nacimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    PaisNac = Aux
    If PaisNac <> "N/A" Then
        StrSql = " SELECT paisnro FROM pais WHERE UPPER(paisdesc) = '" & UCase(PaisNac) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_paisnac = rs_Sql!Paisnro
        Else
            StrSql = " INSERT INTO pais(paisdesc,paisdef) VALUES ('" & UCase(PaisNac) & "',0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_paisnac = getLastIdentity(objConn, "pais")
        End If
    Else
        nro_paisnac = 0
    End If
    
    'Nacionalidad
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nacionalidad"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Nacionalidad = Aux
    If Nacionalidad <> "N/A" Then
        StrSql = " SELECT nacionalnro FROM nacionalidad WHERE UPPER(nacionaldes) = '" & UCase(Nacionalidad) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_nacionalidad = rs_Sql!nacionalnro
        Else
            StrSql = " INSERT INTO nacionalidad(nacionaldes) VALUES ('" & UCase(Nacionalidad) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_nacionalidad = getLastIdentity(objConn, "nacionalidad")
        End If
    Else
        nro_nacionalidad = 0
    End If
    If nro_nacionalidad = 0 Then
        Texto = ": " & " - La Nacionalidad no Existe."
        NroColumna = 6
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    
    'Fecha de Ingreso al Pais
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de Ingreso al Pais"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Fing = Aux
    If (Fing = "N/A") Or EsNulo(Fing) Then
        F_Ingreso = "Null"
    Else
        F_Ingreso = ConvFecha(Fing)
    End If
    
    'Estado Civil
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estado Civil"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    EstCivil = Left(Aux, 30)
    If EstCivil <> "N/A" And Not EsNulo(EstCivil) Then
        StrSql = " SELECT estcivnro FROM estcivil WHERE UPPER(estcivdesabr) = '" & UCase(EstCivil) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_estcivil = rs_Sql!estcivnro
        Else
            StrSql = " INSERT INTO estcivil(estcivdesabr) VALUES ('" & UCase(EstCivil) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_estcivil = getLastIdentity(objConn, "estcivil")
        End If
    Else
        nro_estcivil = 0
    End If
    If nro_estcivil = 0 Then
        Texto = ": " & " - El Estado Civil no Existe."
        NroColumna = 8
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Sexo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sexo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Sexo = UCase(Aux)
    If (Sexo = "M") Or (Sexo = "-1") Or (Sexo = "MASCULINO") Then
        ter_sexo = -1
    Else
        ter_sexo = 0
    End If
                                                            
    'Fecha de alta
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de alta"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    FAlta = Aux
    If FAlta = "N/A" Or EsNulo(FAlta) Then
        F_Alta = "Null"
        Texto = ": " & " - La Fecha de Alta es Obligatoria."
        NroColumna = 10
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    Else
        F_Alta = ConvFecha(FAlta)
    End If
   
    'Estudia?
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estudia?"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Estudio = UCase(Aux)
    If Estudio <> "N/A" And Estudio <> "NO" Then
        If Estudio = "SI" Then
            ter_estudio = -1
        Else
            ter_estudio = 0
        End If
    Else
        ter_estudio = 0
    End If
    
    'Nivel de estudio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nivel de estudio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    NivEst = Left(Aux, 40)
    If NivEst <> "N/A" Then
        StrSql = " SELECT nivnro FROM nivest WHERE UPPER(nivdesc) = '" & UCase(NivEst) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_nivest = rs_Sql!nivnro
        Else
            StrSql = " INSERT INTO nivest(nivdesc,nivsist,nivobligatorio,nivestfli) VALUES ('" & UCase(NivEst) & "',-1,0,-1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_nivest = getLastIdentity(objConn, "nivest")
        End If
    Else
        nro_nivest = 0
    End If
    
    'Tipo de Doc
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tipo de Doc"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Tdocu = Left(Aux, 8)
    If Tdocu <> "N/A" Then
        StrSql = " SELECT tidnro FROM tipodocu WHERE UPPER(tidsigla) = '" & UCase(Tdocu) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            Nro_TDocumento = rs_Sql!tidnro
        Else
            'busco la primera institucion, si no existe la creo
            StrSql = " SELECT * FROM institucion "
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                Nro_Institucion = rs!InstNro
            Else
                'creo una
                StrSql = " INSERT INTO institucion (instdes,instabre) VALUES ('NACIONAL','NAC')"
                objConn.Execute StrSql, , adExecuteNoRecords
                Nro_Institucion = getLastIdentity(objConn, "institucion")
            End If
            'creo el tipo de documento
            StrSql = " INSERT INTO tipodocu(tidnom,tidsigla,tidsist,instnro,tidunico) VALUES ('" & UCase(Tdocu) & "','" & UCase(Tdocu) & "',0," & Nro_Institucion & ",0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            Nro_TDocumento = getLastIdentity(objConn, "tipodocu")
        End If
    Else
        Nro_TDocumento = 0
    End If
    If Nro_TDocumento = 0 Then
        Texto = ": " & " - El Tipo de Documento no Existe."
        NroColumna = 13
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Nro de Documento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nro de Documento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Ndocu = Left(Aux, 30)
    If Ndocu = "N/A" Then
        Ndocu = ""
    End If
    
    StrSql = "SELECT * FROM empleado "
    StrSql = StrSql & " INNER JOIN ter_doc ON ter_doc.ternro = empleado.ternro "
    StrSql = StrSql & " WHERE ter_doc.tidnro = " & Nro_TDocumento & " AND ter_doc.nrodoc = '" & Ndocu & "'"
    OpenRecordset StrSql, rs_tdoc
    If (Not rs_tdoc.EOF) Then
        If (Not Sigue) Then
            Texto = ": " & " - Ese Tipo y Numero de Documento estan Asignados a otro Empleado."
            NroColumna = 14
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            'Ok = False
            RegError = RegError + 1
            Exit Sub
        Else
            NroTercero = rs_tdoc!Ternro
            ExisteLeg = True
            Texto = ": " & " - Empleado: " & Legajo & " - Ese Tipo y Numero de Documento estan Asignados a otro Empleado."
            NroColumna = 14
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
    End If
    
    'CUIL
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "CUIL"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Cuil = Replace(Left(Aux, 30), "-", "")
    If Cuil = "N/A" Or EsNulo(Cuil) Then
        Cuil = Generar_Rut_Uruguay(Ndocu, CBool(ter_sexo))
        'Cuil = CalcularCUIL(Ndocu)
        If Cuil = 0 Then
            Texto = ": " & " - Campo " & Campoetiqueta & " no se pudo generar automaticamente " & Ndocu
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            'Exit Sub
        End If
    Else
        OK = Rut_Valido_Uruguay(Cuil, Texto)
        If Not OK Then
            OK = True
            Texto = "El CUIL no es valido"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            'Cuil = CalcularCUIL(Ndocu)
            Cuil = Generar_Cuil(Ndocu, CBool(ter_sexo))
        End If
    End If
    Cuil = Left(Cuil, 2) & "-" & Mid(Cuil, 3, 8) & "-" & Right(Cuil, 1)
    
    'Hasta Aqui los Datos Obligatorios del Empleado
    IngresoDom = True
    Cuil = "23-25851946-9"
    'Calle
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Calle"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Calle = Left(Aux, 250)
    
    If Calle = "N/A" Then
        Calle = ""
        IngresoDom = False
    End If
    
    'Nro
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Nro"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Nro = Left(Aux, 8)
    If (Nro <> "N/A") Then
        Nro_Nrodom = Nro
    Else
        Nro_Nrodom = 0
    End If
    
    'Piso
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Piso"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Piso = Left(Aux, 8)
    If Piso = "N/A" Then
        Piso = ""
    End If
    
    'Departamento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Departamento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Depto = Left(Aux, 8)
    If Depto = "N/A" Then
        Depto = ""
    End If

    'Torre
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Torre"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Torre = Left(Aux, 8)
    If Torre = "N/A" Then
        Torre = ""
    End If
    
    'Manzana
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Manzana"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Manzana = Left(Aux, 8)
    If Manzana = "N/A" Then
        Manzana = ""
    End If

    'Codigo Postal
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Codigo Postal"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Cpostal = Left(Aux, 12)
    If Cpostal = "N/A" Then
        Cpostal = ""
    End If

    'Entre calles
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Entre calles"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Entre = Left(Aux, 80)
    If Entre = "N/A" Then
        Entre = ""
    End If

    'Barrio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Barrio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Barrio = Left(Aux, 30)
    If Barrio = "N/A" Then
        Barrio = ""
    End If

    'Localidad
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Localidad"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    '19/03/2010 - Se cambio la longitud a 60
    'Localidad = Left(aux, 30)
    Localidad = Left(Aux, 60)
    
    'Partido
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Partido"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Partido = Left(Aux, 30)
    
    'Zona
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Zona"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    '19/03/2010 - Se cambio la longitud a 60
    'Zona = Left(aux, 20)
    Zona = Left(Aux, 60)
    
    'Provincia
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Provincia"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Provincia = Left(Aux, 20)
    
    'Pais
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Pais"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Pais = Left(Aux, 20)
    
    
    If Pais <> "N/A" Then
        Pais = "URUGUAY"
        Call ValidarPais(Pais, Nro_Pais)
    Else
        Nro_Pais = 0
    End If
    If Provincia <> "N/A" Then
        Call ValidarProvincia(Provincia, Nro_Provincia, Nro_Pais)
    Else
        Nro_Provincia = 0
    End If
    If Localidad <> "N/A" Then
        Call ValidarLocalidad(Localidad, Nro_Localidad, Nro_Pais, Nro_Provincia)
    Else
        Nro_Localidad = 0
    End If
    
    
    If Partido <> "N/A" Then
        Call ValidarPartido(Partido, Nro_Partido)
    Else
        Nro_Partido = 0
    End If
    If Zona <> "N/A" Then
        Call ValidarZona(Zona, Nro_Zona, Nro_Provincia)
    Else
        Nro_Zona = 0
    End If
    If (IngresoDom = True) And (Nro_Localidad = 0) Then
        Texto = ": " & " - Debe Ingresar la Localidad."
        NroColumna = 25
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    If (IngresoDom = True) And (Nro_Provincia = 0) Then
        Texto = ": " & " - Debe Ingresar la Provincia."
        NroColumna = 28
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    If (IngresoDom = True) And (Nro_Pais = 0) Then
        Texto = ": " & " - Debe Ingresar la Pais."
        NroColumna = 29
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Tel Particular
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tel Particular"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Telefono = Left(Aux, 20)
    If Telefono = "N/A" Then
        Telefono = ""
    End If
    
    'Tel Laboral
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tel Laboral"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    TelLaboral = Left(Aux, 20)
    If TelLaboral = "N/A" Then
        TelLaboral = ""
    End If
    
    'Tel Celular
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tel Celular"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    TelCelular = Left(Aux, 20)
    If TelCelular = "N/A" Then
        TelCelular = ""
    End If
    
    'Email
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Email"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Email = Left(Aux, 100)
    If Email = "N/A" Then
        Email = ""
    End If
    
    'Sucursal
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sucursal"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Sucursal = Aux
    ' Validacion y Creacion de la Sucursal (junto con sus Complementos)
    If Sucursal <> "N/A" Then
        If SucDesc Then
            Call ValidaEstructura(1, Sucursal, nro_sucursal, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(1, Sucursal, nro_sucursal, Inserto_estr)
        End If
        Call CreaTercero(10, Sucursal, ter_sucursal)
        
        If Inserto_estr Then
            Call CreaComplemento(1, ter_sucursal, nro_sucursal, Sucursal)
            Inserto_estr = False
        End If
    Else
        nro_sucursal = 0
    End If
    
    'Sector
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sector"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Sector = Aux
    ' Validacion y Creacion del Sector
    If Sector <> "N/A" Then
        If SecDesc Then
            Call ValidaEstructura(2, Sector, nro_sector, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(2, Sector, nro_sector, Inserto_estr)
        End If
    Else
        nro_sector = 0
    End If

    'Convenio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Convenio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Convenio = Aux
    ' Validacion, Creacion del Convenio
    If Convenio <> "N/A" Then
        If CovDesc Then
            Call ValidaEstructura(19, Convenio, nro_convenio, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(19, Convenio, nro_convenio, Inserto_estr)
        End If
        
        If Inserto_estr Then
            Call CreaComplemento(19, 0, nro_convenio, Convenio)
            Inserto_estr = False
        End If
    Else
        nro_convenio = 0
    End If
    
    
    'Categoria
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Categoria"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    categoria = Aux
    ' Validacion, Creacion de la Categoria
    If (categoria <> "N/A" And nro_convenio <> 0) Then
        If CatDesc Then
            'Call ValidaEstructura(3, categoria, nro_categoria, Inserto_estr)
            Call ValidaCategoria(3, categoria, nro_convenio, nro_categoria, Inserto_estr)
            
        Else
            'Call ValidaEstructuraCodExt(3, categoria, nro_categoria, Inserto_estr)
            Call ValidaCategoriaCodExt(3, categoria, nro_convenio, nro_categoria, Inserto_estr)
        End If
    Else
        nro_categoria = 0
    End If
    
    'Puesto
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Puesto"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Puesto = Aux
    'Validacion y Creacion del Puesto (junto con sus Complementos)
    If Puesto <> "N/A" Then
        If PueDesc Then
            Call ValidaEstructura(4, Puesto, nro_puesto, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(4, Puesto, nro_puesto, Inserto_estr)
        End If
        
        If Inserto_estr Then
            Call CreaComplemento(4, 0, nro_puesto, Puesto)
            Inserto_estr = False
        End If
    Else
        nro_puesto = 0
    End If

    'Centro de Costo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Centro de Costo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    CCosto = Aux
    ' Validacion y Creacion del Centro de Costo
    If CCosto <> "N/A" Then
        If CCoDesc Then
            Call ValidaEstructura(5, CCosto, nro_ccosto, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(5, CCosto, nro_ccosto, Inserto_estr)
        End If
    Else
        nro_ccosto = 0
    End If

    'Gerencia
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Gerencia"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Gerencia = Aux
    ' Validacion y Creacion de la Gerencia
    If Gerencia <> "N/A" Then
        If GerDesc Then
            Call ValidaEstructura(6, Gerencia, nro_gerencia, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(6, Gerencia, nro_gerencia, Inserto_estr)
        End If
    Else
        nro_gerencia = 0
    End If

    
    'Departamento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Departamento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Departamento = Aux
    ' Validacion y Creacion del Departamento
    If Departamento <> "N/A" Then
        If DepDesc Then
            Call ValidaEstructura(9, Departamento, nro_departamento, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(9, Departamento, nro_departamento, Inserto_estr)
        End If
    Else
        nro_departamento = 0
    End If

    'Direccion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Direccion = Aux
    ' Validacion y Creacion de direccion
    If Direccion <> "N/A" Then
        If DirDesc Then
            Call ValidaEstructura(35, Direccion, nro_direccion, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(35, Direccion, nro_direccion, Inserto_estr)
        End If
    Else
        nro_direccion = 0
    End If
    
    
    'Caja de Jubilacion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Caja de Jubilacion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    CajaJub = Aux
    ' Validacion y Creacion de la Caja de Jubilacion
    If CajaJub <> "N/A" Then
        If CaJDesc Then
            Call ValidaEstructura(15, CajaJub, nro_cajajub, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(15, CajaJub, nro_cajajub, Inserto_estr)
        End If
        Call CreaTercero(6, CajaJub, ter_cajajub)
        
        If Inserto_estr Then
            Call CreaComplemento(15, ter_cajajub, nro_cajajub, CajaJub)
        End If
    Else
        nro_cajajub = 0
    End If

    'Sindicato
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sindicato"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Sindicato = Aux
    ' Validacion y Creacion del Sindicato
    If Sindicato <> "N/A" Then
        If SinDesc Then
            Call ValidaEstructura(16, Sindicato, nro_sindicato, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(16, Sindicato, nro_sindicato, Inserto_estr)
        End If
        Call CreaTercero(5, Sindicato, ter_sindicato)
        
        If Inserto_estr Then
            Call CreaComplemento(16, ter_sindicato, nro_sindicato, Sindicato)
        End If
    Else
        nro_sindicato = 0
    End If
    
    
    'Obra social por Ley
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Obra social por Ley"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    OSocialLey = Aux
    ' Validacion y Creacion de la Obra Social por Ley
    If OSocialLey <> "N/A" Then
        If OSoLeyDesc Then
            Call ValidaEstructura(24, OSocialLey, nro_osocial_ley, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(24, OSocialLey, nro_osocial_ley, Inserto_estr)
        End If
        Call CreaTercero(4, OSocialLey, ter_osocial_ley)
        
        If Inserto_estr Then
            Call CreaComplemento(24, ter_osocial_ley, nro_osocial_ley, OSocialLey)
        Else
            StrSql = " SELECT origen FROM replica_estr WHERE estrnro = " & nro_osocial_ley
            OpenRecordset StrSql, rs_repl
            
            If Not rs_repl.EOF Then
                ter_osocial_ley = rs_repl!Origen
                rs_repl.Close
            End If
            
        End If
    Else
        nro_osocial_ley = 0
    End If


    'Plan de OS por Ley
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Plan de Obra social por Ley"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    PlanOSLey = Aux
    ' Validacion y Creacion del Plan de Obra Social por Ley
    If (PlanOSLey <> "N/A" And nro_osocial_ley <> 0) Then
        If PoSLeyDesc Then
            Call ValidaEstructura(25, PlanOSLey, nro_planos_ley, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(25, PlanOSLey, nro_planos_ley, Inserto_estr)
        End If
        
        If Inserto_estr Then
            Call CreaComplemento(25, ter_osocial_ley, nro_planos_ley, PlanOSLey)
            Inserto_estr = False
        End If
    Else
        nro_planos_ley = 0
    End If
    
    'OS Elegida
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Obra Social elegida"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    OSocialElegida = Aux
    ' Validacion y Creacion de la Obra Social Elegida
    If OSocialElegida <> "N/A" Then
        If OSoElegidaDesc Then
            Call ValidaEstructura(17, OSocialElegida, nro_osocial_elegida, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(17, OSocialElegida, nro_osocial_elegida, Inserto_estr)
        End If
        Call CreaTercero(4, OSocialElegida, ter_osocial_elegida)
        
        If Inserto_estr Then
            Call CreaComplemento(17, ter_osocial_elegida, nro_osocial_elegida, OSocialElegida)
        Else
            StrSql = " SELECT origen FROM replica_estr WHERE estrnro = " & nro_osocial_elegida
            OpenRecordset StrSql, rs_Sql
            ter_osocial_elegida = rs_Sql!Origen
            rs_Sql.Close
        End If
    Else
        nro_osocial_elegida = 0
    End If

    'Plan de OS Elegida
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Plan Obra Social elegida"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    PlanOSElegida = Aux
    ' Validacion y Creacion del Plan de Obra Social Elegida
    If (PlanOSElegida <> "N/A" And nro_osocial_elegida <> 0) Then
        If PoSElegidaDesc Then
            Call ValidaEstructura(23, PlanOSElegida, nro_planos_elegida, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(23, PlanOSElegida, nro_planos_elegida, Inserto_estr)
        End If
        
        If Inserto_estr Then
            Call CreaComplemento(23, ter_osocial_elegida, nro_planos_elegida, PlanOSElegida)
            Inserto_estr = False
        End If
    Else
        nro_planos_elegida = 0
    End If
    
    
    'Contrato
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Contrato"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Contrato = Aux
    ' Validacion y Creacion del Contrato
    If Contrato <> "N/A" Then
        If CotDesc Then
            Call ValidaEstructura(18, Contrato, nro_contrato, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(18, Contrato, nro_contrato, Inserto_estr)
        End If
        
        If Inserto_estr Then
            Call CreaComplemento(18, 0, nro_contrato, Contrato)
            Inserto_estr = False
        End If
    Else
        nro_contrato = 0
    End If
    
    'Fecha de fin de contrato
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de fin de contrato"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    FFinContrato = Aux
    If FFinContrato = "N/A" Or EsNulo(FFinContrato) Then
        Fecha_FinContrato = "Null"
    Else
        Fecha_FinContrato = ConvFecha(FFinContrato)
    End If
    
    'Lugar de pago
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Lugar de pago"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    LPago = Aux
    ' Validacion y Creacion del Lugar de Pago
    If LPago <> "N/A" Then
        If LPaDesc Then
            Call ValidaEstructura(20, LPago, nro_lpago, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(20, LPago, nro_lpago, Inserto_estr)
        End If
    Else
        nro_lpago = 0
    End If

    'Regimen Horario
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Regimen Horario"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    RegHorario = Aux
    If RegHorario <> "N/A" Then
        If RegDesc Then
            Call ValidaEstructura(21, RegHorario, nro_reghorario, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(21, RegHorario, nro_reghorario, Inserto_estr)
        End If
    Else
        nro_reghorario = 0
    End If

    'Forma de Liquidacion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Forma de Liquidacion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    FormaLiq = Aux
    If FormaLiq <> "N/A" Then
        If FLiDesc Then
            Call ValidaEstructura(22, FormaLiq, nro_formaliq, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(22, FormaLiq, nro_formaliq, Inserto_estr)
        End If
    Else
        nro_formaliq = 0
    End If

    'Forma de Pago
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Forma de Pago"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    FormaPago = Aux
    If FormaPago <> "N/A" Then
        StrSql = " SELECT fpagnro FROM formapago WHERE fpagdescabr = '" & FormaPago & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_formapago = rs_Sql!fpagnro
        Else
            StrSql = " INSERT INTO formapago(fpagdescabr,fpagbanc,acunro,monnro) VALUES ('" & FormaPago & "',0,6,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            nro_formapago = getLastIdentity(objConn, "formapago")
        End If
    Else
        nro_formapago = 0
    End If
    
    'Banco de Pago
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Banco de Pago"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    BancoPago = Aux
    If BancoPago <> "N/A" Then
        If BcoDesc Then
            Call ValidaEstructura(41, BancoPago, nro_bancopago, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(41, BancoPago, nro_bancopago, Inserto_estr)
        End If
        Call CreaTercero(13, BancoPago, ter_bancopago)
        
        If Inserto_estr Then
            Call CreaComplemento(41, ter_bancopago, nro_bancopago, BancoPago)
        End If
        fpgo_bancaria = -1
    Else
        nro_bancopago = 0
        fpgo_bancaria = 0
    End If
    
    'Nro de cuenta
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nro de cuenta"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    NroCuenta = Aux
    If NroCuenta = "N/A" Then
        NroCuenta = ""
    End If
    
    'CBU
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "CBU"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    NroCBU = Aux
    If NroCBU = "N/A" Then
        NroCBU = ""
    End If
    
    'Sucursal del banco
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sucursal del banco"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    SucBanco = Aux
    If SucBanco = "N/A" Then
        SucBanco = ""
    Else
        SucBanco = Left(SucBanco, 10)
    End If


    'Nro de cuenta de acreditacion empresa
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nro de cuenta de acreditacion empresa"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    NroCuentaAcreditacionE = Aux
    If NroCuentaAcreditacionE = "N/A" Or EsNulo(NroCuentaAcreditacionE) Then
        NroCuentaAcreditacionE = ""
    Else
        StrSql = "SELECT * FROM ctabancaria WHERE cbnro ='" & NroCuentaAcreditacionE & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
            Texto = ": " & " - Nro de cuenta de acreditacion empresa no existe."
            NroColumna = 59
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            NroCuentaAcreditacionE = ""
        End If
    End If
    
    'Actividad SIJP
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Actividad SIJP"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Actividad = Aux
    If Actividad <> "N/A" Then
        If ActDesc Then
            Call ValidaEstructura(29, Actividad, nro_actividad, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(29, Actividad, nro_actividad, Inserto_estr)
        End If
    Else
        nro_actividad = 0
    End If

    'Condicion SIJP
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Condicion SIJP"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    CondSIJP = Aux
    If CondSIJP <> "N/A" And Not EsNulo(CondSIJP) Then
        If CSJDesc Then
            Call ValidaEstructura(31, CondSIJP, nro_condsijp, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(31, CondSIJP, nro_condsijp, Inserto_estr)
        End If
    Else
        nro_condsijp = 0
    End If

    'Situacion de Revista SIJP
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Situacion de Revista SIJP"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    SitRev = Aux
    If SitRev <> "N/A" And Not EsNulo(SitRev) Then
        If SReDesc Then
            Call ValidaEstructura(30, SitRev, nro_sitrev, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(30, SitRev, nro_sitrev, Inserto_estr)
        End If
    Else
        nro_sitrev = 0
    End If
    
    
    'ART
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "ART"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    ART = Aux
    If ART <> "N/A" And Not EsNulo(ART) Then
        If ARTDesc Then
            Call ValidaEstructura(40, ART, nro_art, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(40, ART, nro_art, Inserto_estr)
        End If
        Call CreaTercero(8, ART, ter_art)
        
        If Inserto_estr Then
            Call CreaComplemento(40, ter_art, nro_art, ART)
        End If
    Else
        nro_art = 0
    End If
    
    'Estado del empleado
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estado del empleado"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Estado = Aux
    If UCase(Estado) = "ACTIVO" Then
        ter_estado = -1
    Else
        ter_estado = 0
    End If
    
    'Causa de baja
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Causa de baja"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    CausaBaja = Aux
    If Not EsNulo(CausaBaja) And CausaBaja <> "N/A" Then
        StrSql = " SELECT caunro FROM causa WHERE caudes = '" & CausaBaja & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_causabaja = rs_Sql!caunro
        Else
            StrSql = " INSERT INTO causa(caudes,causist,caudesvin,empnro) VALUES ('" & CausaBaja & "',0,-1,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            nro_causabaja = getLastIdentity(objConn, "causa")
        End If
    Else
        nro_causabaja = 0
    End If
    
    'Fecha de baja
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de baja"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    FBaja = Aux
    If EsNulo(FBaja) Or FBaja = "N/A" Then
        F_Baja = "Null"
    Else
        F_Baja = ConvFecha(FBaja)
    End If
    
    'Empresa
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Empresa"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Empresa = Aux
    Else
        pos2 = Len(strReg)
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Empresa = Aux
    End If
    If Empresa <> "N/A" Or EsNulo(Empresa) Then
        If EmpDesc Then
            Call ValidaEstructura(10, Empresa, nro_empresa, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(10, Empresa, nro_empresa, Inserto_estr)
        End If
        Call CreaTercero(10, Empresa, Ter_Empresa)
        
        If Inserto_estr Then
            Call CreaComplemento(10, Ter_Empresa, nro_empresa, Empresa)
        End If
    Else
        nro_empresa = 0
    End If
    
    'Remuneración del Empleado
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Remuneración del Empleado"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Empremu = Aux
    If Empremu = "N/A" Or EsNulo(Empremu) Then
        Empremu = "Null"
    End If
   
    'Modelo de Organizacion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Modelo de Organizacion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        'desde aca
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        ModOrg = Aux
        If ModOrg = "N/A" Or EsNulo(ModOrg) Then
            'agrego codigo sebastian stremel 15/09/2011
            StrSql = "SELECT * FROM adptemplate WHERE tplatedefault = -1"
            OpenRecordset StrSql, rs_tpl
            If Not rs_tpl.EOF Then
                nro_ModOrg = rs_tpl!tplatenro
            Else
                StrSql = "SELECT top 1 * FROM adptemplate"
                OpenRecordset StrSql, rs_tpl
                If rs_tpl.EOF Then
                    Texto = ": no hay modelos de organizacion"
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                    RegError = RegError + 1
                    Exit Sub
                Else
                    nro_ModOrg = rs_tpl!tplatenro
                End If
                
            End If
            
           
        Else
            StrSql = "SELECT * FROM adptemplate WHERE tplatedesabr = '" & ModOrg & "'"
            OpenRecordset StrSql, rs_tpl
            If rs_tpl.EOF Then
                StrSql = "INSERT INTO adptemplate (tplatedesabr,tplatedefault) VALUES ('" & ModOrg & "',-1)"
                objConn.Execute StrSql, , adExecuteNoRecords
                nro_ModOrg = getLastIdentity(objConn, "adptemplate")
            Else
                nro_ModOrg = rs_tpl!tplatenro
            End If
        End If
    Else
            StrSql = "SELECT * FROM adptemplate WHERE tplatedefault = -1"
            OpenRecordset StrSql, rs_tpl
            If Not rs_tpl.EOF Then
                nro_ModOrg = rs_tpl!tplatenro
            Else
                StrSql = "SELECT top 1 * FROM adptemplate"
                OpenRecordset StrSql, rs_tpl
                If rs_tpl.EOF Then
                    Texto = ": no hay modelos de organizacion"
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                    RegError = RegError + 1
                    Exit Sub
                Else
                    nro_ModOrg = rs_tpl!tplatenro
                End If
                
            End If

    End If
        
        'hasta aca
'        If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'            Call Escribir_Log("floge", LineaCarga, Nrocolumna, Texto, Tabs, strReg)
'            RegError = RegError + 1
'            Exit Sub
'        End If
'        ModOrg = aux
'        If ModOrg = "N/A" Or EsNulo(ModOrg) Then
'            nro_ModOrg = 0
'        Else
'            StrSql = "SELECT * FROM adptemplate WHERE tplatedesabr = '" & ModOrg & "'"
'            OpenRecordset StrSql, rs_tpl
'            If rs_tpl.EOF Then
'                StrSql = "INSERT INTO adptemplate (tplatedesabr,tplatedefault) VALUES ('" & ModOrg & "',-1)"
'                objConn.Execute StrSql, , adExecuteNoRecords
'                nro_ModOrg = getLastIdentity(objConn, "adptemplate")
'            Else
'                nro_ModOrg = rs_tpl!tplatenro
'            End If
'        End If
'    Else
'        nro_ModOrg = 0
'    End If

'------------------------------------------------------------------------------------

    'Reporta_a  campo empleado.empreporta va el tercero
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Reporta_a"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Reporta_a = Aux
        If Not EsNulo(Reporta_a) And Reporta_a <> "N/A" Then
            If IsNumeric(Reporta_a) Then
                StrSql = "SELECT * FROM empleado WHERE empleado.empleg = " & Reporta_a
                If rs_emp.State = adStateOpen Then rs_emp.Close
                OpenRecordset StrSql, rs_emp
                If (Not rs_emp.EOF) Then
                    Nro_Reporta_a = rs_emp!Ternro
                Else
                    Nro_Reporta_a = 0
                    Texto = ": " & "El Empleado " & Reporta_a & " no existe."
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                End If
            Else
                Nro_Reporta_a = 0
                Texto = "El valor no es numérico."
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            End If
        End If
    Else
        Nro_Reporta_a = 0
        'no es obligatorio
    End If
    If rs_emp.State = adStateOpen Then rs_emp.Close
    

    'Grupo de Seguridad
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Grupo de Seguridad"
    pos1 = pos2 + 2
    pos2 = Len(strReg) 'InStr(pos1, strReg, Separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        GrupoSeguridad = Aux
        If GrupoSeguridad <> "N/A" And Not EsNulo(GrupoSeguridad) Then
            Call ValidaEstructura(7, GrupoSeguridad, Nro_GrupoSeguridad, Inserto_estr)
        Else
            Nro_GrupoSeguridad = 0
        End If
    Else
        Nro_GrupoSeguridad = 0
    End If
'Fin lectura de campos
' =====================================================================================================

  'JPB - Inicializo el pass+perfil (l_ess_Pass_Estandar y l_ess_Perfil_Estandar) por defecto del Autogestion en el caso que este habilitado el confper 12
  '--------------------------------
  Call ESS_Configuracion_Default
  '-------------------------------

  ' Inserto el Tercero
  If F_Nacimiento = "Null" Then
    F_Nacimiento = "''"
  End If
  If F_Ingreso = "Null" Then
    F_Ingreso = "''"
  End If
  
  If CalculaLegajo Then
    Call CalcularLegajo(nro_empresa, Legajo)
  End If

    If Not ExisteLeg Then
        StrSql = " INSERT INTO tercero(ternom,terape,terfecnac,tersex,terestciv,estcivnro,nacionalnro,paisnro,ternom2,terape2,terfecing)"
        StrSql = StrSql & " VALUES('" & nombre & "','" & Apellido & "'," & F_Nacimiento & "," & ter_sexo & "," & nro_estcivil & "," & nro_estcivil & ","
        If nro_nacionalidad <> 0 Then
            StrSql = StrSql & nro_nacionalidad & ","
        Else
            StrSql = StrSql & "null,"
        End If
        If nro_paisnac <> 0 Then
            StrSql = StrSql & nro_paisnac & ","
        Else
            StrSql = StrSql & "null,"
        End If
        If nombre2 <> "" Then 'Agregado ver 4.09
            StrSql = StrSql & "'" & nombre2 & "',"
        Else
            StrSql = StrSql & "null,"
        End If
        If Apellido2 <> "" Then 'Agregado ver 4.09
            StrSql = StrSql & "'" & Apellido2 & "',"
        Else
            StrSql = StrSql & "null,"
        End If
        StrSql = StrSql & F_Ingreso & ")"
        objConn.Execute StrSql, , adExecuteNoRecords

        NroTercero = getLastIdentity(objConn, "tercero")
        
        Texto = ": " & "Codigo de Tercero = " & NroTercero
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
    Else
        StrSql = " UPDATE tercero SET "
        StrSql = StrSql & " ternom = " & "'" & nombre & "'"
        If nombre2 <> "" Then 'Agregado ver 4.09
            StrSql = StrSql & ", ternom2 = " & "'" & nombre2 & "'"
        End If
        StrSql = StrSql & ", terape = " & "'" & Apellido & "'"
        If Apellido2 <> "" Then 'Agregado ver 4.09
            StrSql = StrSql & ", terape2 = " & "'" & Apellido2 & "'"
        End If
        StrSql = StrSql & ", terfecnac = " & F_Nacimiento
        StrSql = StrSql & ", tersex = " & ter_sexo
        StrSql = StrSql & ", terestciv =" & nro_estcivil
        StrSql = StrSql & ", estcivnro =" & "'" & nro_estcivil & "'"
        If nro_nacionalidad <> 0 Then
            StrSql = StrSql & ", nacionalnro =" & nro_nacionalidad
        End If
        StrSql = StrSql & ", terfecing =" & F_Ingreso
        If nro_paisnac <> 0 Then
            StrSql = StrSql & ", paisnro =" & nro_paisnac
        End If
        StrSql = StrSql & " WHERE ternro = " & NroTercero
        objConn.Execute StrSql, , adExecuteNoRecords
      
        Texto = ": " & " - Empleado: " & Legajo & " - Ese Empleado ya existe en la base. Datos de tercero actualizados"
        NroColumna = 1
        Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    
    If Not ExisteLeg Then
        StrSql = " INSERT INTO empleado(empleg,empfecalta,empfecbaja,empest,empfaltagr,empfbajaprev,"
        StrSql = StrSql & "ternro,nivnro,empestudia,terape,ternom,empinterno,empemail,"
        StrSql = StrSql & "empnro,tplatenro,empremu"
        If Nro_Reporta_a <> 0 Then
            StrSql = StrSql & ",empreporta"
        End If
        If nombre2 <> "" Then 'Agregado ver 4.09
            StrSql = StrSql & ",ternom2"
        End If
        If Apellido2 <> "" Then 'Agregado ver 4.09
            StrSql = StrSql & ",terape2"
        End If
                  
        'JPB - Si esta habilitado el confper 12 asigno el pass+perfil por defecto al empleado
        '------------------------------------------------------------------------------------
        If (l_ess_Pass_Estandar <> "") And (l_ess_Perfil_Estandar <> "") Then
             StrSql = StrSql & ",empessactivo,emppass,perfnro"
        End If
        '------------------------------------------------------------------------------------
    
        StrSql = StrSql & ") VALUES("
        StrSql = StrSql & Legajo & "," & F_Alta & "," & F_Baja & "," & ter_estado & "," & F_Alta & "," & Fecha_FinContrato & ","
        StrSql = StrSql & NroTercero & "," & nro_nivest & "," & ter_estudio & ",'" & Apellido & "','"
        StrSql = StrSql & nombre & "',Null,'" & Email & "',1," & nro_ModOrg & "," & Empremu
        If Nro_Reporta_a <> 0 Then
            StrSql = StrSql & "," & Nro_Reporta_a
        End If
        If nombre2 <> "" Then 'Agregado ver 4.09
            StrSql = StrSql & ",'" & nombre2 & "'"
        End If
        If Apellido2 <> "" Then 'Agregado ver 4.09
            StrSql = StrSql & ",'" & Apellido2 & "'"
        End If
        
        'JPB - Si esta habilitado el confper 12 asigno el pass+perfil por defecto al empleado
        '------------------------------------------------------------------------------------
        If (l_ess_Pass_Estandar <> "") And (l_ess_Perfil_Estandar <> "") Then
             StrSql = StrSql & ",-1,'" & l_ess_Pass_Estandar & "'," & l_ess_Perfil_Estandar
        End If
        '------------------------------------------------------------------------------------
        
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = ": " & "Empleado insertado - " & Legajo & " - " & Apellido & " - " & nombre
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
    Else
        StrSql = " UPDATE empleado SET "
        StrSql = StrSql & " empleg = " & Legajo
        StrSql = StrSql & " ,empfecalta = " & F_Alta
        StrSql = StrSql & " ,empfecbaja = " & F_Baja
        StrSql = StrSql & " ,empfbajaprev = " & Fecha_FinContrato
        StrSql = StrSql & " ,empest = " & ter_estado
        StrSql = StrSql & " ,empfaltagr = " & F_Alta
        StrSql = StrSql & " ,nivnro = " & nro_nivest
        StrSql = StrSql & " ,empestudia = " & ter_estudio
        StrSql = StrSql & " ,terape = " & "'" & Apellido & "'"
         If Apellido2 <> "" Then 'Agregado ver 4.09
            StrSql = StrSql & " ,terape2 = " & "'" & Apellido2 & "'"
        End If
        StrSql = StrSql & " ,ternom = " & "'" & nombre & "'"
        If nombre2 <> "" Then 'Agregado ver 4.09
            StrSql = StrSql & " ,ternom2 = " & "'" & nombre2 & "'"
        End If
        StrSql = StrSql & " ,empemail = " & "'" & Email & "'"
        StrSql = StrSql & " ,empnro = 1 "
        StrSql = StrSql & " ,tplatenro =" & nro_ModOrg
        StrSql = StrSql & " ,Empremu =" & Empremu
        If Nro_Reporta_a <> 0 Then
            StrSql = StrSql & ", empreporta =" & Nro_Reporta_a
        End If
        
        'JPB - Si esta habilitado el confper 12 asigno el pass+perfil por defecto al empleado
        '------------------------------------------------------------------------------------
        If (l_ess_Pass_Estandar <> "") And (l_ess_Perfil_Estandar <> "") Then
            StrSql = StrSql & ", empessactivo = -1"
            StrSql = StrSql & ", emppass = '" & l_ess_Pass_Estandar & "'"
            StrSql = StrSql & ", perfnro =" & l_ess_Perfil_Estandar
        End If
        '------------------------------------------------------------------------------------
        
        StrSql = StrSql & " WHERE ternro = " & NroTercero
        objConn.Execute StrSql, , adExecuteNoRecords
    
        Texto = ": " & "Empleado Actualizado - " & Legajo & " - " & Apellido & " - " & nombre
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
    End If
    
    ' Inserto el Registro correspondiente en ter_tip
    If Not ExisteLeg Then
        StrSql = " INSERT INTO ter_tip(ternro,tipnro) VALUES(" & NroTercero & ",1)"
        objConn.Execute StrSql, , adExecuteNoRecords
    End If

' Inserto los Documentos
    If Not ExisteLeg Then
        If Nro_TDocumento <> 0 Then
            StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
            StrSql = StrSql & " VALUES(" & NroTercero & "," & Nro_TDocumento & ",'" & Ndocu & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            Texto = ": " & "Inserte el Documento - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        End If
    Else
        If Nro_TDocumento <> 0 Then
            StrSql = "SELECT * FROM ter_doc WHERE ternro = " & NroTercero
            StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If rs.EOF Then
                StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
                StrSql = StrSql & " VALUES(" & NroTercero & "," & Nro_TDocumento & ",'" & Ndocu & "')"
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = ": " & "Inserte el Documento - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            Else
                StrSql = " UPDATE ter_doc SET "
                StrSql = StrSql & " nrodoc = '" & Ndocu & "'"
                StrSql = StrSql & " WHERE ternro = " & NroTercero
                StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = Texto = ": " & "Documento actualizado - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
    End If
  
    If Not ExisteLeg Then
        If Cuil <> "" Then
            StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
            StrSql = StrSql & " VALUES(" & NroTercero & ",10,'" & Cuil & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            Texto = ": " & "Inserte el CUIL - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        End If
    Else
        If Cuil <> "" Then
            StrSql = "SELECT * FROM ter_doc WHERE ternro = " & NroTercero
            StrSql = StrSql & " AND tidnro = 10 "
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If rs.EOF Then
                StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
                StrSql = StrSql & " VALUES(" & NroTercero & ",10,'" & Cuil & "')"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Inserte el CUIL - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            Else
                StrSql = " UPDATE ter_doc SET "
                StrSql = StrSql & " nrodoc = '" & Cuil & "'"
                StrSql = StrSql & " WHERE ternro = " & NroTercero
                StrSql = StrSql & " AND tidnro = 10"
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = Texto = ": " & "CUIL actualizado - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
    End If

' Inserto el Domicilio
  If rs.State = adStateOpen Then
    rs.Close
  End If
  
  If Not ExisteLeg Then
    If (Nro_Localidad <> 0 And Nro_Provincia <> 0 And Nro_Pais <> 0) Then
        StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
        StrSql = StrSql & " VALUES(1," & NroTercero & ",-1,2)"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        NroDom = getLastIdentity(objConn, "cabdom")
      
        StrSql = " INSERT INTO detdom(domnro,calle,nro,piso,oficdepto,torre,manzana,codigopostal,entrecalles,"
        StrSql = StrSql & "locnro,provnro,paisnro,barrio,partnro,zonanro) "
        StrSql = StrSql & " VALUES (" & NroDom & ",'" & Calle & "','" & Nro_Nrodom & "','" & Piso & "','"
        StrSql = StrSql & Depto & "','" & Torre & "','" & Manzana & "','" & Cpostal & "','" & Entre & "'," & Nro_Localidad & ","
        StrSql = StrSql & Nro_Provincia & "," & Nro_Pais & ",'" & Barrio & "'," & Nro_Partido & "," & Nro_Zona & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
      
        Texto = ": " & "Inserte el Domicilio - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        
        If Telefono <> "" Then
            'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
            StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
            StrSql = StrSql & " VALUES(" & NroDom & ",'" & Telefono & "',0,-1,0,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            Texto = ": " & "Inserte el Telefono Principal - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        End If
        If TelLaboral <> "" Then
            StrSql = "SELECT * FROM telefono "
            StrSql = StrSql & " WHERE domnro =" & NroDom
            StrSql = StrSql & " AND telnro ='" & TelLaboral & "'"
            If rs_Tel.State = adStateOpen Then rs_Tel.Close
            OpenRecordset StrSql, rs_Tel
            If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelLaboral & "',0,0,0,3)"
                objConn.Execute StrSql, , adExecuteNoRecords
                  
                Texto = ": " & "Inserte el Telefono Laboral - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
        If TelCelular <> "" Then
            StrSql = "SELECT * FROM telefono "
            StrSql = StrSql & " WHERE domnro =" & NroDom
            StrSql = StrSql & " AND telnro ='" & TelCelular & "'"
            If rs_Tel.State = adStateOpen Then rs_Tel.Close
            OpenRecordset StrSql, rs_Tel
            If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelCelular & "',0,0,-1,2)"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Inserte el Telefono Celular - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
    End If
  Else
    If (Nro_Localidad <> 0 And Nro_Provincia <> 0 And Nro_Pais <> 0) Then
        StrSql = "SELECT * FROM cabdom  "
        StrSql = StrSql & " WHERE tipnro = 1"
        StrSql = StrSql & " AND ternro = " & NroTercero
        StrSql = StrSql & " AND domdefault = -1"
        StrSql = StrSql & " AND tidonro = 2"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
          StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
          StrSql = StrSql & " VALUES(1," & NroTercero & ",-1,2)"
          objConn.Execute StrSql, , adExecuteNoRecords
          
          NroDom = getLastIdentity(objConn, "cabdom")
        
          StrSql = " INSERT INTO detdom(domnro,calle,nro,piso,oficdepto,torre,manzana,codigopostal,entrecalles,"
          StrSql = StrSql & "locnro,provnro,paisnro,barrio,partnro,zonanro) "
          StrSql = StrSql & " VALUES (" & NroDom & ",'" & Calle & "','" & Nro_Nrodom & "','" & Piso & "','"
          StrSql = StrSql & Depto & "','" & Torre & "','" & Manzana & "','" & Cpostal & "','" & Entre & "'," & Nro_Localidad & ","
          StrSql = StrSql & Nro_Provincia & "," & Nro_Pais & ",'" & Barrio & "'," & Nro_Partido & "," & Nro_Zona & ")"
          objConn.Execute StrSql, , adExecuteNoRecords
        
          Texto = ": " & "Inserte el Domicilio - "
          Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
          
          If Telefono <> "" Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
              StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
              StrSql = StrSql & " VALUES(" & NroDom & ",'" & Telefono & "',0,-1,0,1)"
              objConn.Execute StrSql, , adExecuteNoRecords

              Texto = ": " & "Inserte el Telefono Principal - "
              Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
          End If
          If TelLaboral <> "" Then
              StrSql = "SELECT * FROM telefono "
              StrSql = StrSql & " WHERE domnro =" & NroDom
              StrSql = StrSql & " AND telnro ='" & TelLaboral & "'"
              If rs_Tel.State = adStateOpen Then rs_Tel.Close
              OpenRecordset StrSql, rs_Tel
              If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                  StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                  StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelLaboral & "',0,0,0,3)"
                  objConn.Execute StrSql, , adExecuteNoRecords
                    
                  Texto = ": " & "Inserte el Telefono Laboral - "
                  Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
              End If
          End If
          If TelCelular <> "" Then
              StrSql = "SELECT * FROM telefono "
              StrSql = StrSql & " WHERE domnro =" & NroDom
              StrSql = StrSql & " AND telnro ='" & TelCelular & "'"
              If rs_Tel.State = adStateOpen Then rs_Tel.Close
              OpenRecordset StrSql, rs_Tel
              If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                  StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                  StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelCelular & "',0,0,-1,2)"
                  objConn.Execute StrSql, , adExecuteNoRecords
                  Texto = ": " & "Inserte el Telefono Celular - "
                  Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
              End If
          End If
        Else
            StrSql = " UPDATE detdom SET "
            StrSql = StrSql & " calle =" & "'" & Calle & "'"
            StrSql = StrSql & ",nro =" & "'" & Nro_Nrodom & "'"
            StrSql = StrSql & ",piso =" & "'" & Piso & "'"
            StrSql = StrSql & ",oficdepto =" & "'" & Depto & "'"
            StrSql = StrSql & ",torre =" & "'" & Torre & "'"
            StrSql = StrSql & ",manzana =" & "'" & Manzana & "'"
            StrSql = StrSql & ",codigopostal =" & "'" & Cpostal & "'"
            StrSql = StrSql & ",entrecalles =" & "'" & Entre & "'"
            StrSql = StrSql & ",locnro =" & Nro_Localidad
            StrSql = StrSql & ",provnro =" & Nro_Provincia
            StrSql = StrSql & ",paisnro =" & Nro_Pais
            StrSql = StrSql & ", partnro = " & Nro_Partido
            StrSql = StrSql & ", zonanro =" & Nro_Zona
            StrSql = StrSql & " WHERE domnro = " & rs!domnro
            objConn.Execute StrSql, , adExecuteNoRecords
        
            Texto = ": " & "Domicilio Actualizado - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        
            If Telefono <> "" Then
                StrSql = "SELECT * FROM telefono "
                StrSql = StrSql & " WHERE domnro =" & rs!domnro
                StrSql = StrSql & " AND telnro ='" & Telefono & "'"
                If rs_Tel.State = adStateOpen Then rs_Tel.Close
                OpenRecordset StrSql, rs_Tel
                If rs_Tel.EOF Then
                    'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                    StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                    StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & Telefono & "',0,-1,0,1)"
                    objConn.Execute StrSql, , adExecuteNoRecords
                      
                    Texto = ": " & "Inserte el Telefono Principal - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            End If
            If TelLaboral <> "" Then
                StrSql = "SELECT * FROM telefono "
                StrSql = StrSql & " WHERE domnro =" & rs!domnro
                StrSql = StrSql & " AND telnro ='" & TelLaboral & "'"
                If rs_Tel.State = adStateOpen Then rs_Tel.Close
                OpenRecordset StrSql, rs_Tel
                If rs_Tel.EOF Then
                    'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                    StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                    StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & TelLaboral & "',0,0,0,3)"
                    objConn.Execute StrSql, , adExecuteNoRecords
                      
                    Texto = ": " & "Inserte el Telefono Laboral - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            End If
            If TelCelular <> "" Then
                StrSql = "SELECT * FROM telefono "
                StrSql = StrSql & " WHERE domnro =" & rs!domnro
                StrSql = StrSql & " AND telnro ='" & TelCelular & "'"
                If rs_Tel.State = adStateOpen Then rs_Tel.Close
                OpenRecordset StrSql, rs_Tel
                If rs_Tel.EOF Then
                    'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                    StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                    StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & TelCelular & "',0,0,-1,2)"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = ": " & "Inserte el Telefono Celular - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            End If
        End If
    End If
  End If
  
  If Not ExisteLeg Then
    ' Inserto las Fases
    StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
    StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
    If nro_causabaja <> 0 Then
      StrSql = StrSql & nro_causabaja
    Else
      StrSql = StrSql & "null"
    End If
    StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
    objConn.Execute StrSql, , adExecuteNoRecords
    
  Else
    StrSql = "SELECT * FROM fases WHERE estado = -1 AND sueldo = -1 AND vacaciones = -1 AND indemnizacion = -1 AND real = -1 AND empleado = " & NroTercero
    OpenRecordset StrSql, rs
    If rs.EOF Then
        StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
        StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
        If nro_causabaja <> 0 Then
          StrSql = StrSql & nro_causabaja
        Else
          StrSql = StrSql & "null"
        End If
        StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
        objConn.Execute StrSql, , adExecuteNoRecords
    Else
        StrSql = " UPDATE fases SET "
        StrSql = StrSql & " altfec =" & F_Alta
        StrSql = StrSql & ",bajfec =" & F_Baja
        StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
        objConn.Execute StrSql, , adExecuteNoRecords
    
        Texto = ": " & "Fase Actualizada - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
    End If
  End If
  
  'Inserto la cuenta bancaria
    If Not ExisteLeg Then
        If (nro_formapago <> 0 And ter_bancopago <> 0 And NroCuenta <> "") Then
                StrSql = " INSERT INTO ctabancaria (ternro,fpagnro,banco,ctabestado,"
                StrSql = StrSql & "ctabsuc,ctabnro,ctabporc,ctabcbu"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",ctabacred"
                End If
                StrSql = StrSql & ") VALUES ("
                StrSql = StrSql & NroTercero & "," & nro_formapago & "," & ter_bancopago & ","
                StrSql = StrSql & "-1,'" & Left(SucBanco, 10) & "','" & NroCuenta & "',100,'" & NroCBU & "'"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",'" & NroCuentaAcreditacionE & "'"
                End If
                StrSql = StrSql & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Inserte la Cuenta Bancaria - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
        End If
    Else
        If (nro_formapago <> 0 And ter_bancopago <> 0 And NroCuenta <> "") Then
            StrSql = "SELECT * FROM ctabancaria"
            StrSql = StrSql & " WHERE ctabancaria.ternro =" & NroTercero
            StrSql = StrSql & " AND ctabestado = -1 "
            StrSql = StrSql & " AND banco =" & ter_bancopago
            StrSql = StrSql & " AND fpagnro =" & nro_formapago
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If rs.EOF Then
                StrSql = " INSERT INTO ctabancaria (ternro,fpagnro,banco,ctabestado,"
                StrSql = StrSql & "ctabsuc,ctabnro,ctabporc,ctabcbu"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",ctabacred"
                End If
                StrSql = StrSql & ") VALUES ("
                StrSql = StrSql & NroTercero & "," & nro_formapago & "," & ter_bancopago & ","
                StrSql = StrSql & "-1,'" & Left(SucBanco, 10) & "','" & NroCuenta & "',100,'" & NroCBU & "'"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",'" & NroCuentaAcreditacionE & "'"
                End If
                StrSql = StrSql & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Inserte la Cuenta Bancaria - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            Else
                If rs!ctabnro = NroCuenta Then
                    StrSql = "UPDATE ctabancaria SET "
                    StrSql = StrSql & " ctabsuc = '" & SucBanco & "'"
                    If Not EsNulo(NroCuentaAcreditacionE) Then
                        StrSql = StrSql & ", ctabacred = '" & NroCuentaAcreditacionE & "'"   '21-12-10
                    End If
                    StrSql = StrSql & ", ctabnro = " & "'" & NroCuenta & "'"
                    StrSql = StrSql & ", ctabporc = 100 "
                    StrSql = StrSql & ", ctabcbu = '" & NroCBU & "'"
                    StrSql = StrSql & " WHERE ctabancaria.ternro =" & NroTercero
                    StrSql = StrSql & " AND ctabestado = -1 "
                    StrSql = StrSql & " AND banco =" & ter_bancopago
                    StrSql = StrSql & " AND fpagnro =" & nro_formapago
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    Texto = ": " & "Cuenta Bancaria actualizada- "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                Else
                    'Desactivo la anterior
                    StrSql = " UPDATE ctabancaria SET "
                    StrSql = StrSql & " ctabestado = 0 "
                    StrSql = StrSql & " WHERE cbnro = " & rs!Cbnro
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    'inserto la nueva
                    StrSql = " INSERT INTO ctabancaria (ternro,fpagnro,banco,ctabestado,"
                    StrSql = StrSql & "ctabsuc,ctabnro,ctabporc,ctabcbu"
                    If Not EsNulo(NroCuentaAcreditacionE) Then
                        StrSql = StrSql & ",ctabacred"
                    End If
                    StrSql = StrSql & ") VALUES ("
                    StrSql = StrSql & NroTercero & "," & nro_formapago & "," & ter_bancopago & ","
                    StrSql = StrSql & "-1,'" & Left(SucBanco, 10) & "','" & NroCuenta & "',100,'" & NroCBU & "'"
                    If Not EsNulo(NroCuentaAcreditacionE) Then
                        StrSql = StrSql & ",'" & NroCuentaAcreditacionE & "'"
                    End If
                    StrSql = StrSql & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = ": " & "Inserte la Cuenta Bancaria - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            End If
        End If
    End If
  
  'Inserto las Estructuras
'  Call AsignarEstructura(1, nro_sucursal, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(2, nro_sector, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(3, nro_categoria, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(4, nro_puesto, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(5, nro_ccosto, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(6, nro_gerencia, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(7, Nro_GrupoSeguridad, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(9, nro_departamento, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(10, nro_empresa, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(15, nro_cajajub, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(16, nro_sindicato, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(17, nro_osocial_elegida, NroTercero, F_Alta, F_Baja)
'  'Call AsignarEstructura(18, nro_contrato, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(18, nro_contrato, NroTercero, F_Alta, Fecha_FinContrato)
'  Call AsignarEstructura(19, nro_convenio, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(20, nro_lpago, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(21, nro_reghorario, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(22, nro_formaliq, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(23, nro_planos_elegida, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(24, nro_osocial_ley, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(25, nro_planos_ley, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(29, nro_actividad, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(30, nro_sitrev, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(31, nro_condsijp, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(35, nro_direccion, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(40, nro_art, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(41, nro_bancopago, NroTercero, F_Alta, F_Baja)
  
  
  Call AsignarEstructura_NEW(1, nro_sucursal, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(2, nro_sector, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(3, nro_categoria, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(4, nro_puesto, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(5, nro_ccosto, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(6, nro_gerencia, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(7, Nro_GrupoSeguridad, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(9, nro_departamento, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(10, nro_empresa, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(15, nro_cajajub, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(16, nro_sindicato, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(17, nro_osocial_elegida, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(18, nro_contrato, NroTercero, F_Alta, F_Baja)
  'Call AsignarEstructura_NEW(18, nro_contrato, NroTercero, F_Alta, Fecha_FinContrato)
  Call AsignarEstructura_NEW(19, nro_convenio, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(20, nro_lpago, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(21, nro_reghorario, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(22, nro_formaliq, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(23, nro_planos_elegida, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(24, nro_osocial_ley, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(25, nro_planos_ley, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(29, nro_actividad, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(30, nro_sitrev, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(31, nro_condsijp, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(35, nro_direccion, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(40, nro_art, NroTercero, F_Alta, F_Baja)
  'Call AsignarEstructura_NEW(41, nro_bancopago, NroTercero, F_Alta, F_Baja)
  
  
Texto = ": " & "Linea procesada correctamente "
Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
'LineaOK.Writeline Mid(strReg, 1, Len(strReg))
OK = True
         
FinLinea:
If rs.State = adStateOpen Then
    rs.Close
End If
Exit Sub

SaltoLinea:
    Texto = ": " & " - Error:" & Err.Description
    NroColumna = 1
    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    MyRollbackTrans
    OK = False
    GoTo FinLinea
End Sub


Public Sub LineaModelo_607(ByVal strReg As String, ByRef OK As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de Empleados de Chile
' Autor      : FGZ
' Fecha      : 30/07/2004
' Ultima Mod.: 27/04/2005 - FGZ - Estandarizacion del proceso
'              27/06/2005 - FGZ - Fecha fin de contrato.
'              22/12/2006 - Diego Rosso - Se agrego apellido2, nombre2 y se le cambiaron los nombres a
'                                           varias estructuras para la nacionalizacion
'              26-02-2007 - Diego Rosso - 'No grababa el terape2 y el ternom2 en la tabla empleado. Tambien se cambio para que modifique el empleado cuando el rut ya existe en la BD
'              16-12-2010 - Leticia A. - al dar de baja --> agregar causa de baja a la Fase e Inactivarla.
'                                        se agrega chequeo situacion de revista (tiene causa baja desvinculac)
'                                        arreglar consulta en cuenta bancaria.
'              01/07/2011 - Cesar Stankunas - Se agregaron 2 campos ("Fecha de Cumple Bienios;Cantidad de Bienios;")
'              24/10/2011 - Juan Zamarbide - Se quitaron los 2 campos introducidos para INDAP anteriormente por incompatibilidad con otras empresas de Chile.
' ---------------------------------------------------------------------------------------------

Dim pos1            As Long
Dim pos2            As Long

Dim Legajo          As String   'LEGAJO                   -- empleado.empleg
Dim Apellido        As String   'APELLIDO                 -- empleado.terape y tercero.terape
Dim Apellido2       As String   'APELLIDO2                -- empleado.terape2 y tercero.terape2
Dim nombre          As String   'NOMBRE                   -- empleado.ternom y tercero.ternom
Dim nombre2         As String   'NOMBRE2                  -- empleado.ternom2 y tercero.ternom2
Dim Fnac            As String   'FNAC                     -- tercero.terfecna
Dim Nacionalidad    As String   'Nacionalidad             -- tercero.nacionalnro
Dim PaisNac         As String   'Pais de Nacimiento       -- tercero.paisnro
Dim Fing            As String   'Fec.Ingreso al Pais      -- terecro.terfecing
Dim EstCivil        As String   'Est.Civil                -- tercero.estcivnro
Dim Sexo            As String   'Sexo                     -- tercero.tersex
Dim FAlta           As String   'Fec. de Alta             -- empleado.empfaltagr y fases.altfec
Dim Estudio         As String   'Estudia                  -- empleado.empestudia
Dim NivEst          As String   'Nivel de Estudio         -- empleado.nivnro
'Dim Tdocu           As String   'Tipo Documento          -- ter_dpc.tidnro (DU)
'Dim Ndocu           As String   'Nro. Documento          -- ter_doc.nrodoc
'Dim Cuil            As String   'CUIL                    -- ter_doc.nrodoc (10)
Dim RUT             As String    ' RUT                    --ter_doc.nrodoc (1)
Dim Calle           As String   'Calle                    -- detdom.calle
Dim Nro             As String   'Número                   -- detdom.nro
Dim Piso            As String   'Piso                     -- detdom.piso
Dim Depto           As String   'Depto                    -- detdom.depto
Dim Torre           As String   'Torre                    -- detdom.torre
Dim Manzana         As String   'Manzana                  -- detdom.manzana
Dim Cpostal         As String   'Cpostal                  -- detdom.codigopostal
Dim Entre           As String   'Entre Calles             -- detdom.entrecalles
Dim Barrio          As String   'Barrio                   -- detdom.barrio
Dim Localidad       As String   'Localidad(comuna)        -- detdom.locnro
'Dim Partido         As String   'Partido                 -- detdom.partnro
Dim Zona            As String   'Zona (region)            -- detdom.zonanro
Dim Provincia       As String   'Provincia                -- detdom.provnro
Dim Pais            As String   'Pais                     -- detdom.paisnro
Dim Telefono        As String   'Telefono                 -- telefono.telnro
Dim TelLaboral      As String   'Telefono                 -- telefono.telnro
Dim TelCelular      As String   'Telefono                 -- telefono.telnro
Dim Email           As String   'E-mail                   -- empleado.empemail
'Dim Sucursal        As String   'Sucursal                -- his_estructura.estrnro
Dim Oficina         As String   'Oficina                  -- his_estructura.estrnro
Dim Sector          As String   'Sector                   -- his_estructura.estrnro
Dim Convenio        As String   'Sucursal                 -- his_estructura.estrnro
Dim categoria       As String   'Categoria                -- his_estructura.estrnro
'Dim Puesto          As String   'Puesto                  -- his_estructura.estrnro
Dim Cargo          As String   'Cargo(Puesto)             -- his_estructura.estrnro
Dim CCosto          As String   'C.Costo                  -- his_estructura.estrnro
Dim Gerencia        As String   'Gerencia                 -- his_estructura.estrnro
Dim Departamento    As String   'Departamento             -- his_estructura.estrnro
Dim Direccion       As String   'Direccion                -- his_estructura.estrnro
'Dim CajaJub         As String   'Caja de Jubilacion      -- his_estructura.estrnro
Dim AFP             As String   'AFP                      -- his_estructura.estrnro
Dim Sindicato       As String   'Sindicato                -- his_estructura.estrnro
Dim OSocialLey      As String   'Obra Social              -- his_estructura.estrnro
Dim PlanOSLey       As String   'Plan OS                  -- his_estructura.estrnro
Dim OSocialElegida  As String   'sistema Salud/isapre     -- his_estructura.estrnro
'Dim PlanOSElegida  As String   'Plan OS                  -- his_estructura.estrnro
Dim Contrato        As String   'Contrato                 -- his_estructura.estrnro
'Dim Convenio       As String   'Convenio                 -- his_estructura.estrnro
Dim FContraro       As String  'fecha vencimiento contrato
Dim LPago           As String   'Lugar de Pago            -- his_estructura.estrnro
Dim RegHorario      As String   'Regimen Horario          -- his_estructura.estrnro
Dim FormaLiq        As String   'Forma de Liquidacion     -- his_estructura.estrnro
Dim FormaPago       As String   'Forma de Pago            -- formapago.fpagdescabr
Dim SucBanco        As String   'Sucursal del Banco       -- ctabancaria.ctabsuc
Dim BancoPago       As String   'Banco Pago               -- his_estructura.estrnro, formapago.fpagbanc (siempre y cuando el Banco sea <> 0) y ctabancaria.banco
Dim NroCuenta       As String   'Nro. Cuenta              -- ctabancario.ctabnro
Dim NroCuentaAcreditacionE As String
'Dim Actividad       As String   'Actividad                -- his_estructura.estrnro
Dim Mutual          As String   'Actividad                 -- his_estructura.estrnro
'Dim CondSIJP        As String   'Condicion SIJP           -- his_estructura.estrnro
Dim CajaComp        As String   'Caja Compensacion         -- his_estructura.estrnro
'Dim SitRev          As String   'Sit. de Revista SIJP     -- his_estructura.estrnro
'Dim ModCont         As String   'Mod. de Contrat. SIJP    -- his_estructura.estrnro
'Dim ART             As String   'ART                      -- his_estructura.estrnro
Dim Estado          As String   'Estado                   -- empleado.empest y fases.estado
Dim CausaBaja       As String   'Causa de Baja            -- fases.caunro
Dim FBaja           As String   'Fecha de Baja            -- fases.bajfec
Dim Empresa         As String   'Empresa                  -- his_estructura.estrnro
Dim ModOrg          As String   'Empresa                  -- his_estructura.estrnro
Dim OSL             As String   'Empresa                  -- his_estructura.estrnro
Dim OSE             As String   'Empresa                  -- his_estructura.estrnro
Dim PlanOdon        As String   'Empresa                  -- his_estructura.estrnro
Dim Locacion        As String   'Empresa                  -- his_estructura.estrnro
Dim Area            As String   'Empresa                  -- his_estructura.estrnro
Dim SubDepto        As String   'Empresa                  -- his_estructura.estrnro
Dim NroCBU          As String   'Empresa                  -- his_estructura.estrnro
Dim Empremu         As String   'Remuneración del empleado
Dim GrupoSeguridad  As String   'Grupo de Seguridad
Dim Nro_GrupoSeguridad  As Long 'Grupo de Seguridad       -- his_estructura.estrnro

' ------------Comentado ver 3.89 - desde Acá
'Dim FecCumpleBienios  As String   'Fecha de cumple Bienios
'Dim CantBienios     As Long 'Cantidad de Bienios
' -------------hasta acá

Dim FFinContrato    As String
Dim Fecha_FinContrato As String
Dim Reporta_a       As String
Dim Nro_Reporta_a   As Long

Dim Ternro As Long

Dim NroTercero          As Long

Dim Nro_Legajo          As Long
'Dim Nro_TDocumento      As Long
Dim nro_nivest          As Long
Dim nro_estudio         As Long

Dim Nro_Nrodom          As String

Dim Nro_Barrio          As Long
Dim Nro_Localidad       As Long
Dim Nro_Zona            As Long
Dim Nro_Provincia       As Long
Dim Nro_Pais            As Long
Dim nro_paisnac         As Long

Dim nro_oficina         As Long
Dim nro_sector          As Long
Dim nro_categoria       As Long
Dim nro_cargo           As Long
Dim nro_ccosto          As Long
Dim nro_gerencia        As Long
Dim nro_AFP             As Long
Dim nro_sindicato       As Long
'Dim nro_osocial_ley     As Long
'Dim nro_planos_ley      As Long
Dim nro_osocial_elegida As Long
'Dim nro_planos_elegida  As Long
Dim nro_contrato        As Long
Dim nro_convenio        As Long
Dim nro_reghorario      As Long
Dim nro_formaliq        As Long
Dim nro_bancopago       As Long
Dim nro_mutual          As Long
Dim nro_sitrev          As Long
Dim nro_modcont         As Long
Dim nro_art             As Long
Dim nro_departamento    As Long
Dim nro_direccion       As Long
Dim nro_lpago           As Long
Dim nro_CajaComp        As Long
Dim nro_formapago       As Long
Dim nro_causabaja       As Long
Dim nro_empresa         As Long
Dim NroDom              As Long
'Dim nro_osl             As Long
'Dim nro_odon            As Long
'Dim nro_ose             As Long
'Dim nro_locacion        As Long
'Dim nro_area            As Long
'Dim nro_SubDepto        As Long
'Dim nro_empremu         As Long

Dim nro_estcivil        As Long
Dim nro_nacionalidad    As Long

Dim F_Nacimiento        As String
Dim F_Fallecimiento     As String
Dim F_Alta              As String
Dim F_Baja              As String
Dim F_Ingreso           As String

Dim Inserto_estr        As Boolean

Dim ter_oficina         As Long
Dim Ter_Empresa         As Long
Dim ter_afp             As Long
Dim ter_sindicato       As Long
'Dim ter_osocial_ley     As Long
Dim ter_osocial_elegida As Long
Dim ter_bancopago       As Long
Dim ter_Mutual          As Long
Dim ter_sexo            As Long
Dim ter_estudio         As Long
Dim ter_estado          As Long

Dim fpgo_bancaria       As Long

Dim rs As New ADODB.Recordset
Dim rs_Sql As New ADODB.Recordset
Dim rs_Empleado As New ADODB.Recordset
Dim rs_Tel As New ADODB.Recordset
Dim rs_repl As New ADODB.Recordset


Dim OficinaDesc         As Boolean   'Oficina                  -- his_estructura
Dim SecDesc             As Boolean   'Sector                   -- his_estructura
Dim CatDesc             As Boolean   'Categoria                -- his_estructura
Dim CarDesc             As Boolean   'Cargo                    -- his_estructura
Dim CCoDesc             As Boolean   'C.Costo                  -- his_estructura
Dim GerDesc             As Boolean   'Gerencia                 -- his_estructura
Dim DepDesc             As Boolean   'Departamento             -- his_estructura
Dim DirDesc             As Boolean   'Direccion                -- his_estructura
Dim AFPDesc             As Boolean   'Caja de Jubilacion       --
Dim SinDesc             As Boolean   'Sindicato                -- his_estructura
Dim OSoElegidaDesc      As Boolean   'Obra Social              -- his_estructura
'Dim PoSElegidaDesc      As Boolean   'Plan OS                  -- his_estructura
'Dim OSoLeyDesc          As Boolean   'Obra Social              -- his_estructura
'Dim PoSLeyDesc          As Boolean   'Plan OS                  -- his_estructura
Dim CotDesc             As Boolean   'Contrato                 -- his_estructura
Dim CovDesc             As Boolean   'Convenio                 -- his_estructura
Dim LPaDesc             As Boolean   'Lugar de Pago            -- his_estructura
Dim RegDesc             As Boolean   'Regimen Horario          -- his_estructura
Dim FLiDesc             As Boolean   'Forma de Liquidacion     -- his_estructura
Dim FPaDesc             As Boolean      'Forma de Pago            -- his_estructura
Dim BcoDesc             As Boolean      'Banco Pago               --
Dim MUTDesc             As Boolean      'Actividad                --
Dim CSJDesc             As Boolean      'Condicion SIJP           --
'Dim SReDesc             As Boolean      'Sit. de Revista SIJP     --
'Dim MCoDesc             As Boolean      'Mod. de Contrat. SIJP    --
Dim EmpDesc             As Boolean      'Empresa                  --
'Dim OSLDesc             As Boolean      'Empresa                  --
'Dim POdoDesc             As Boolean     'Empresa                  --
'Dim OSEDesc             As Boolean      'Empresa                  --
'Dim LocDesc             As Boolean      'Empresa                  --
'Dim AreaDesc             As Boolean     'Empresa                  --
'Dim SubDepDesc             As Boolean   'Empresa                  --

Dim IngresoDom          As Boolean

Dim rs_tdoc As New ADODB.Recordset
Dim rs_emp  As New ADODB.Recordset
Dim rs_tpl  As New ADODB.Recordset
Dim rs_leg  As New ADODB.Recordset

Dim Nroadtemplate As Long
Dim Nro_Institucion As Long

Dim Sigue As Boolean
Dim ExisteLeg As Boolean
Dim CalculaLegajo As Boolean
' ------------Comentado ver 3.89
'Dim conBienios As Boolean

    On Error GoTo SaltoLinea

    ' True indica que se hace por Descripcion. False por Codigo Externo

    OficinaDesc = True  ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    SecDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CatDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CarDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CCoDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    GerDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    DepDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    DirDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    AFPDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    SinDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    OSoElegidaDesc = True ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
'    PoSElegidaDesc = True ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
'    OSoLeyDesc = True   ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
'    PoSLeyDesc = True   ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CotDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CovDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    LPaDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    RegDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    FLiDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    FPaDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    BcoDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    MUTDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CSJDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
'    SReDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
'    MCoDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    EmpDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
'    OSLDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
'    POdoDesc = True     ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
'    OSEDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
'    LocDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
'    AreaDesc = True     ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
'    SubDepDesc = True   ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    
    ' ------------Comentado ver 3.89
    'conBienios = True
    
    Sigue = True 'Indica que si en el archivo viene mas de una vez un empleado, le crea las fases
    ExisteLeg = False
    'RegLeidos = RegLeidos + 1
    LineaCarga = LineaCarga + 1
    
    Flog.writeline
    FlogE.writeline
    FlogP.writeline
    
    'Legajo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Legajo"
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Legajo = Aux
    'Legajo = Mid(strReg, pos1, pos2 - pos1 + 1)
    If Legajo = "N/A" Or EsNulo(Legajo) Then
        CalculaLegajo = True
    Else
        StrSql = "SELECT * FROM empleado WHERE empleado.empleg = " & Legajo
        OpenRecordset StrSql, rs_emp
        If (Not rs_emp.EOF) Then
            If (Not Sigue) Then
                Texto = ": " & " - El Empleado ya Existe."
                NroColumna = 1
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                'Ok = False
                'RegError = RegError + 1
                'Exit Sub
            Else
                NroTercero = rs_emp!Ternro
                ExisteLeg = True
            End If
        End If
    End If
    
    'Apellido
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Apellido"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Apellido = Left(Aux, 25)
    
    '--------------
    'Apellido2
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Apellido2"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Apellido2 = Left(Aux, 25)
    
    '--------------
    
    'Nombre
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nombre"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    nombre = Left(Aux, 25)
    If (Apellido = "" Or Apellido = "N/A") And (nombre = "" Or nombre = "N/A") Then
        Texto = ": " & " - Debe Ingresar un Nombre y Apellido."
        NroColumna = 2
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    '---------------------
     'Nombre2
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nombre2"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    nombre2 = Left(Aux, 25)
    If (Apellido = "" Or Apellido = "N/A") And (nombre = "" Or nombre = "N/A") Then
        Texto = ": " & " - Debe Ingresar un Nombre y Apellido."
        NroColumna = 2
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    '-----------------------
    'Fecha de Nacimiento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de Nacimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Fnac = Aux
    If Fnac = "N/A" Then
       F_Nacimiento = "Null"
    Else
       F_Nacimiento = ConvFecha(Fnac)
    End If
    
    'Pais de Nacimiento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Pais de Nacimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    PaisNac = Aux
    If PaisNac <> "N/A" Then
        StrSql = " SELECT paisnro FROM pais WHERE UPPER(paisdesc) = '" & UCase(PaisNac) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_paisnac = rs_Sql!Paisnro
        Else
            StrSql = " INSERT INTO pais(paisdesc,paisdef) VALUES ('" & UCase(PaisNac) & "',0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_paisnac = getLastIdentity(objConn, "pais")
        End If
    Else
        nro_paisnac = 0
    End If
    
    'Nacionalidad
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nacionalidad"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Nacionalidad = Aux
    If Nacionalidad <> "N/A" Then
        StrSql = " SELECT nacionalnro FROM nacionalidad WHERE UPPER(nacionaldes) = '" & UCase(Nacionalidad) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_nacionalidad = rs_Sql!nacionalnro
        Else
            StrSql = " INSERT INTO nacionalidad(nacionaldes) VALUES ('" & UCase(Nacionalidad) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_nacionalidad = getLastIdentity(objConn, "nacionalidad")
        End If
    Else
        nro_nacionalidad = 0
    End If
    If nro_nacionalidad = 0 Then
        Texto = ": " & " - La Nacionalidad no Existe."
        NroColumna = 6
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    
    'Fecha de Ingreso al Pais
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de Ingreso al Pais"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Fing = Aux
    If (Fing = "N/A") Or EsNulo(Fing) Then
        F_Ingreso = "Null"
    Else
        F_Ingreso = ConvFecha(Fing)
    End If
    
    'Estado Civil
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estado Civil"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    EstCivil = Left(Aux, 30)
    If EstCivil <> "N/A" And Not EsNulo(EstCivil) Then
        StrSql = " SELECT estcivnro FROM estcivil WHERE UPPER(estcivdesabr) = '" & UCase(EstCivil) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_estcivil = rs_Sql!estcivnro
        Else
            StrSql = " INSERT INTO estcivil(estcivdesabr) VALUES ('" & UCase(EstCivil) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_estcivil = getLastIdentity(objConn, "estcivil")
        End If
    Else
        nro_estcivil = 0
    End If
    If nro_estcivil = 0 Then
        Texto = ": " & " - El Estado Civil no Existe."
        NroColumna = 8
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Sexo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sexo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Sexo = UCase(Aux)
    If (Sexo = "M") Or (Sexo = "-1") Or (Sexo = "MASCULINO") Then
        ter_sexo = -1
    Else
        ter_sexo = 0
    End If
                                                            
    'Fecha de alta
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de alta"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    FAlta = Aux
    If FAlta = "N/A" Or EsNulo(FAlta) Then
        F_Alta = "Null"
        Texto = ": " & " - La Fecha de Alta es Obligatoria."
        NroColumna = 10
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    Else
        F_Alta = ConvFecha(FAlta)
    End If
   
    'Estudia?
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estudia?"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Estudio = UCase(Aux)
    If Estudio <> "N/A" And Estudio <> "NO" Then
        If Estudio = "SI" Then
            ter_estudio = -1
        Else
            ter_estudio = 0
        End If
    Else
        ter_estudio = 0
    End If
    
    'Nivel de estudio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nivel de estudio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    NivEst = Left(Aux, 40)
    If NivEst <> "N/A" Then
        StrSql = " SELECT nivnro FROM nivest WHERE UPPER(nivdesc) = '" & UCase(NivEst) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_nivest = rs_Sql!nivnro
        Else
            StrSql = " INSERT INTO nivest(nivdesc,nivsist,nivobligatorio,nivestfli) VALUES ('" & UCase(NivEst) & "',-1,0,-1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_nivest = getLastIdentity(objConn, "nivest")
        End If
    Else
        nro_nivest = 0
    End If
    
    
  'RUT
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "RUT"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    RUT = Left(Aux, 30)
   
    StrSql = "SELECT * FROM empleado "
    StrSql = StrSql & " INNER JOIN ter_doc ON ter_doc.ternro = empleado.ternro "
    StrSql = StrSql & " WHERE ter_doc.tidnro = 1 AND ter_doc.nrodoc = '" & RUT & "'"
    OpenRecordset StrSql, rs_tdoc
    If (Not rs_tdoc.EOF) Then
        'Diego Rosso - 26-02-07 - Se modifico para que cuando venga un rut ya asignado tome el ternro del empleado
                                    'que lo tiene asignado.
        If (Not Sigue) Then
           Texto = ": " & " - El RUT ya esta Asignado a otro Empleado."
            NroColumna = 15
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
           ' Ok = False
            RegError = RegError + 1
            Exit Sub
        Else
            NroTercero = rs_tdoc!Ternro
            ExisteLeg = True
            'Texto = ": " & " - Empleado: " & Legajo & " - Ese Tipo y Numero de Documento estan Asignados a otro Empleado."
            'nrocolumna = 14
            'Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
       End If
    End If


    'Hasta Aqui los Datos Obligatorios del Empleado
    IngresoDom = True
        
    'Calle
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Calle"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Calle = Left(Aux, 250)
    
    If Calle = "N/A" Then
        Calle = ""
        IngresoDom = False
    End If
    
    'Nro
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Nro"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Nro = Left(Aux, 8)
    If (Nro <> "N/A") Then
        Nro_Nrodom = Nro
    Else
        Nro_Nrodom = 0
    End If
    
    'Piso
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Piso"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Piso = Left(Aux, 8)
    If Piso = "N/A" Then
        Piso = ""
    End If
    
    'Departamento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Departamento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Depto = Left(Aux, 8)
    If Depto = "N/A" Then
        Depto = ""
    End If

    'Torre
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Torre"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Torre = Left(Aux, 8)
    If Torre = "N/A" Then
        Torre = ""
    End If
    
    'Manzana
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Manzana"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Manzana = Left(Aux, 8)
    If Manzana = "N/A" Then
        Manzana = ""
    End If

    'Codigo Postal
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Codigo Postal"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Cpostal = Left(Aux, 12)
    If Cpostal = "N/A" Then
        Cpostal = ""
    End If

    'Entre calles
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Entre calles"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Entre = Left(Aux, 80)
    If Entre = "N/A" Then
        Entre = ""
    End If

    'Barrio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Barrio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Barrio = Left(Aux, 30)
    If Barrio = "N/A" Then
        Barrio = ""
    End If

    'Comuna
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Comuna"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    '19/03/2010 - Se cambio la longitud a 60
    'Localidad = Left(aux, 30)
    Localidad = Left(Aux, 60)
    
    'Provincia     ----------------------------------------------------------------
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Provincia"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Provincia = Left(Aux, 30)
    
    'REgion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Region"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    '19/03/2010 - Se cambio la longitud a 60
    'Zona = Left(aux, 20)
    Zona = Left(Aux, 60)
    
    
    
    'Pais
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Pais"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Pais = Left(Aux, 20)
    If Pais <> "N/A" Then
        Call ValidarPais(Pais, Nro_Pais)
    Else
        Nro_Pais = 0
    End If
       If Localidad <> "N/A" Then
        Call ValidarLocalidad(Localidad, Nro_Localidad, Nro_Pais, Nro_Provincia, Nro_Zona)
    Else
        Nro_Localidad = 0
    End If
    If Provincia <> "N/A" Then
        Call ValidarProvincia(Provincia, Nro_Provincia, Nro_Pais)
    Else
        Nro_Provincia = 0
    End If
    If Zona <> "N/A" Then
        Call ValidarZona(Zona, Nro_Zona, Nro_Provincia)
    Else
        Nro_Zona = 0
    End If
    If (IngresoDom = True) And (Nro_Localidad = 0) Then
        Texto = ": " & " - Debe Ingresar la Localidad."
        NroColumna = 25
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    If (IngresoDom = True) And (Nro_Provincia = 0) Then
        Texto = ": " & " - Debe Ingresar la Provincia."
        NroColumna = 28
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    If (IngresoDom = True) And (Nro_Pais = 0) Then
        Texto = ": " & " - Debe Ingresar la Pais."
        NroColumna = 29
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Tel Particular
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tel Particular"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Telefono = Left(Aux, 20)
    If Telefono = "N/A" Then
        Telefono = ""
    End If
    
    'Tel Laboral
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tel Laboral"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    TelLaboral = Left(Aux, 20)
    If TelLaboral = "N/A" Then
        TelLaboral = ""
    End If
    
    'Tel Celular
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tel Celular"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    TelCelular = Left(Aux, 20)
    If TelCelular = "N/A" Then
        TelCelular = ""
    End If
    
    'Email
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Email"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Email = Left(Aux, 100)
    If Email = "N/A" Then
        Email = ""
    End If
    
    'Oficina
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Oficina"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Oficina = Aux

    If Oficina <> "N/A" And Not EsNulo(Oficina) Then
        If OficinaDesc Then
            Call ValidaEstructura(1, Oficina, nro_oficina, Inserto_estr)
        Else
           Call ValidaEstructuraCodExt(1, Oficina, nro_oficina, Inserto_estr)
        End If
         Call CreaTercero(10, Oficina, ter_oficina)
        
        If Inserto_estr Then
            Call CreaComplemento(1, ter_oficina, nro_oficina, Oficina)
            Inserto_estr = False
        End If
    Else
        nro_oficina = 0
    End If
    
    'Sector
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sector"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Sector = Aux
    ' Validacion y Creacion del Sector
    If Sector <> "N/A" And Not EsNulo(Sector) Then
        If SecDesc Then
            Call ValidaEstructura(2, Sector, nro_sector, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(2, Sector, nro_sector, Inserto_estr)
        End If
    Else
        nro_sector = 0
    End If

    'Convenio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Convenio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Convenio = Aux
    ' Validacion, Creacion del Convenio
    If Convenio <> "N/A" And Not EsNulo(Convenio) Then
        If CovDesc Then
            Call ValidaEstructura(19, Convenio, nro_convenio, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(19, Convenio, nro_convenio, Inserto_estr)
        End If
        
        If Inserto_estr Then
            Call CreaComplemento(19, 0, nro_convenio, Convenio)
            Inserto_estr = False
        End If
    Else
        nro_convenio = 0
    End If
    
    
    'Categoria
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Categoria"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    categoria = Aux
    ' Validacion, Creacion de la Categoria
    If (categoria <> "N/A" And nro_convenio <> 0) And Not EsNulo(categoria) Then
        If CatDesc Then
            'Call ValidaEstructura(3, categoria, nro_categoria, Inserto_estr)
            Call ValidaCategoria(3, categoria, nro_convenio, nro_categoria, Inserto_estr)
            
        Else
            'Call ValidaEstructuraCodExt(3, categoria, nro_categoria, Inserto_estr)
            Call ValidaCategoriaCodExt(3, categoria, nro_convenio, nro_categoria, Inserto_estr)
        End If
    Else
        nro_categoria = 0
    End If
    
    'Cargo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Cargo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Cargo = Aux
     If Cargo <> "N/A" And Not EsNulo(Cargo) Then
        If CarDesc Then
            Call ValidaEstructura(4, Cargo, nro_cargo, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(4, Cargo, nro_cargo, Inserto_estr)
        End If
        If Inserto_estr Then
            Call CreaComplemento(4, 0, nro_cargo, Cargo)
            Inserto_estr = False
        End If
    Else
        nro_cargo = 0
    End If

    'Centro de Costo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Centro de Costo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    CCosto = Aux
    ' Validacion y Creacion del Centro de Costo
    If CCosto <> "N/A" And Not EsNulo(CCosto) Then
        If CCoDesc Then
            Call ValidaEstructura(5, CCosto, nro_ccosto, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(5, CCosto, nro_ccosto, Inserto_estr)
        End If
    Else
        nro_ccosto = 0
    End If

    'Gerencia
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Gerencia"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Gerencia = Aux
    ' Validacion y Creacion de la Gerencia
    If Gerencia <> "N/A" And Not EsNulo(Gerencia) Then
        If GerDesc Then
            Call ValidaEstructura(6, Gerencia, nro_gerencia, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(6, Gerencia, nro_gerencia, Inserto_estr)
        End If
    Else
        nro_gerencia = 0
    End If

    
    'Departamento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Departamento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Departamento = Aux
    ' Validacion y Creacion del Departamento
    If Departamento <> "N/A" And Not EsNulo(Departamento) Then
        If DepDesc Then
            Call ValidaEstructura(9, Departamento, nro_departamento, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(9, Departamento, nro_departamento, Inserto_estr)
        End If
    Else
        nro_departamento = 0
    End If

    'Direccion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Direccion = Aux
    ' Validacion y Creacion de direccion
    If Direccion <> "N/A" And Not EsNulo(Direccion) Then
        If DirDesc Then
            Call ValidaEstructura(35, Direccion, nro_direccion, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(35, Direccion, nro_direccion, Inserto_estr)
        End If
    Else
        nro_direccion = 0
    End If
    
    
    'AFP
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "AFP"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    AFP = Aux
    ' Validacion y Creacion de la Caja de Jubilacion
    If AFP <> "N/A" And Not EsNulo(AFP) Then
        If AFPDesc Then
            Call ValidaEstructura(15, AFP, nro_AFP, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(15, AFP, nro_AFP, Inserto_estr)
        End If
        Call CreaTercero(6, AFP, ter_afp)
        
        If Inserto_estr Then
            Call CreaComplemento(15, ter_afp, nro_AFP, AFP)
        End If
    Else
        nro_AFP = 0
    End If

    'Sindicato
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sindicato"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Sindicato = Aux
    ' Validacion y Creacion del Sindicato
    If Sindicato <> "N/A" And Not EsNulo(Sindicato) Then
        If SinDesc Then
            Call ValidaEstructura(16, Sindicato, nro_sindicato, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(16, Sindicato, nro_sindicato, Inserto_estr)
        End If
        Call CreaTercero(5, Sindicato, ter_sindicato)
        
        If Inserto_estr Then
            Call CreaComplemento(16, ter_sindicato, nro_sindicato, Sindicato)
        End If
    Else
        nro_sindicato = 0
    End If
    
    
    'Sistema Salud/ISAPRE
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Obra Social elegida"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    OSocialElegida = Aux
    ' Validacion y Creacion de la Obra Social Elegida
    If OSocialElegida <> "N/A" And Not EsNulo(OSocialElegida) Then
        If OSoElegidaDesc Then
            Call ValidaEstructura(17, OSocialElegida, nro_osocial_elegida, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(17, OSocialElegida, nro_osocial_elegida, Inserto_estr)
        End If
        Call CreaTercero(4, OSocialElegida, ter_osocial_elegida)
        
        If Inserto_estr Then
            Call CreaComplemento(17, ter_osocial_elegida, nro_osocial_elegida, OSocialElegida)
        Else
            StrSql = " SELECT origen FROM replica_estr WHERE estrnro = " & nro_osocial_elegida
            OpenRecordset StrSql, rs_Sql
            ter_osocial_elegida = rs_Sql!Origen
            rs_Sql.Close
        End If
    Else
        nro_osocial_elegida = 0
    End If


    'Contrato
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Contrato"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Contrato = Aux
    ' Validacion y Creacion del Contrato
    If Contrato <> "N/A" And Not EsNulo(Contrato) Then
        If CotDesc Then
            Call ValidaEstructura(18, Contrato, nro_contrato, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(18, Contrato, nro_contrato, Inserto_estr)
        End If
        
        If Inserto_estr Then
            Call CreaComplemento(18, 0, nro_contrato, Contrato)
            Inserto_estr = False
        End If
    Else
        nro_contrato = 0
    End If
    
    'Fecha de fin de contrato
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de fin de contrato"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    FFinContrato = Aux
    If FFinContrato = "N/A" Or EsNulo(FFinContrato) Then
        Fecha_FinContrato = "Null"
    Else
        Fecha_FinContrato = ConvFecha(FFinContrato)
    End If
    
    'Lugar de pago
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Lugar de pago"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    LPago = Aux
    ' Validacion y Creacion del Lugar de Pago
    If LPago <> "N/A" And Not EsNulo(LPago) Then
        If LPaDesc Then
            Call ValidaEstructura(20, LPago, nro_lpago, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(20, LPago, nro_lpago, Inserto_estr)
        End If
    Else
        nro_lpago = 0
    End If

    'Regimen Horario
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Regimen Horario"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    RegHorario = Aux
    If RegHorario <> "N/A" And Not EsNulo(RegHorario) Then
        If RegDesc Then
            Call ValidaEstructura(21, RegHorario, nro_reghorario, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(21, RegHorario, nro_reghorario, Inserto_estr)
        End If
    Else
        nro_reghorario = 0
    End If

    'Forma de Liquidacion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Forma de Liquidacion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    FormaLiq = Aux
    If FormaLiq <> "N/A" And Not EsNulo(FormaLiq) Then
        If FLiDesc Then
            Call ValidaEstructura(22, FormaLiq, nro_formaliq, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(22, FormaLiq, nro_formaliq, Inserto_estr)
        End If
        If Inserto_estr Then
            Call CreaComplemento(22, 0, nro_contrato, Contrato)
            Inserto_estr = False
        End If
    Else
        nro_formaliq = 0
    End If

    'Forma de Pago
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Forma de Pago"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    FormaPago = Aux
    If FormaPago <> "N/A" Then
        StrSql = " SELECT fpagnro FROM formapago WHERE fpagdescabr = '" & FormaPago & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_formapago = rs_Sql!fpagnro
        Else
            StrSql = " INSERT INTO formapago(fpagdescabr,fpagbanc,acunro,monnro) VALUES ('" & FormaPago & "',0,6,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            nro_formapago = getLastIdentity(objConn, "formapago")
        End If
    Else
        nro_formapago = 0
    End If
    
    'Banco de Pago
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Banco de Pago"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    BancoPago = Aux
    If BancoPago <> "N/A" And Not EsNulo(BancoPago) Then
        If BcoDesc Then
            Call ValidaEstructura(41, BancoPago, nro_bancopago, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(41, BancoPago, nro_bancopago, Inserto_estr)
        End If
        Call CreaTercero(13, BancoPago, ter_bancopago)
        
        If Inserto_estr Then
            Call CreaComplemento(41, ter_bancopago, nro_bancopago, BancoPago)
        End If
        fpgo_bancaria = -1
    Else
        nro_bancopago = 0
        fpgo_bancaria = 0
    End If
    
    'Nro de cuenta
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nro de cuenta"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    NroCuenta = Aux
    If NroCuenta = "N/A" Then
        NroCuenta = ""
    End If
    
    'CBU
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "CBU"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    NroCBU = Aux
    If NroCBU = "N/A" Then
        NroCBU = ""
    End If
    
    'Sucursal del banco
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sucursal del banco"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    SucBanco = Aux
    If SucBanco = "N/A" Then
        SucBanco = ""
    Else
        SucBanco = Left(SucBanco, 10)
    End If


    'Nro de cuenta de acreditacion empresa
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nro de cuenta de acreditacion empresa"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    NroCuentaAcreditacionE = Aux
    If NroCuentaAcreditacionE = "N/A" Or EsNulo(NroCuentaAcreditacionE) Then
        NroCuentaAcreditacionE = ""
    Else
        StrSql = "SELECT * FROM ctabancaria WHERE cbnro ='" & NroCuentaAcreditacionE & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
            Texto = ": " & " - Nro de cuenta de acreditacion empresa no existe."
            NroColumna = 59
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            NroCuentaAcreditacionE = ""
        End If
    End If
    
    
    'Mutual
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Mutual"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Mutual = Aux
    If Mutual <> "N/A" And Not EsNulo(Mutual) Then
        If MUTDesc Then
            Call ValidaEstructura(40, Mutual, nro_mutual, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(40, Mutual, nro_mutual, Inserto_estr)
        End If
            Call CreaTercero(8, Mutual, ter_Mutual)
        
        If Inserto_estr Then
            Call CreaComplemento(40, ter_Mutual, nro_mutual, Mutual)
        End If
    Else
        nro_mutual = 0
    End If
    
    
    'Caja de compensacion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Caja Compensacion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    CajaComp = Aux
    If CajaComp <> "N/A" And Not EsNulo(CajaComp) Then
        If CSJDesc Then
            Call ValidaEstructura(44, CajaComp, nro_CajaComp, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(44, CajaComp, nro_CajaComp, Inserto_estr)
        End If
    Else
        nro_CajaComp = 0
    End If

 
    'Estado del empleado
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estado del empleado"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Estado = Aux
    If UCase(Estado) = "ACTIVO" Then
        ter_estado = -1
    Else
        ter_estado = 0
    End If
    
    'Causa de baja
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Causa de baja"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    CausaBaja = Aux
    If Not EsNulo(CausaBaja) And CausaBaja <> "N/A" Then
        StrSql = " SELECT caunro FROM causa WHERE caudes = '" & CausaBaja & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_causabaja = rs_Sql!caunro
        Else
            StrSql = " INSERT INTO causa(caudes,causist,caudesvin,empnro) VALUES ('" & CausaBaja & "',0,-1,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            nro_causabaja = getLastIdentity(objConn, "causa")
        End If
    Else
        nro_causabaja = 0
    End If
    
    
    'Fecha de baja
    NroColumna = NroColumna + 1
        ' Si hay una causa de baja, se tiene que cargar ssi la Fecha de Baja (tablero adp)
    If nro_causabaja <> 0 Then
        Obligatorio = True
    Else
        Obligatorio = False
    End If
    Campoetiqueta = "Fecha de baja"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    FBaja = Aux
    If EsNulo(FBaja) Or FBaja = "N/A" Then
        F_Baja = "Null"
    Else
        F_Baja = ConvFecha(FBaja)
    End If
    
    
    'Empresa
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Empresa"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Empresa = Aux
    Else
        pos2 = Len(strReg)
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Empresa = Aux
    End If
    If Empresa <> "N/A" And Not EsNulo(Empresa) Then
        If EmpDesc Then
            Call ValidaEstructura(10, Empresa, nro_empresa, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(10, Empresa, nro_empresa, Inserto_estr)
        End If
        Call CreaTercero(10, Empresa, Ter_Empresa)
        
        If Inserto_estr Then
            Call CreaComplemento(10, Ter_Empresa, nro_empresa, Empresa)
        End If
    Else
        nro_empresa = 0
    End If
    
    'Remuneración del Empleado
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Remuneración del Empleado"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Empremu = Aux
    If Empremu = "N/A" Or EsNulo(Empremu) Then
        Empremu = "Null"
    End If
   
    'Modelo de Organizacion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Modelo de Organizacion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        ModOrg = Aux
        'desde aca
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        ModOrg = Aux
        If ModOrg = "N/A" Or EsNulo(ModOrg) Then
            'agrego codigo sebastian stremel 15/09/2011
            StrSql = "SELECT * FROM adptemplate WHERE tplatedefault = -1"
            OpenRecordset StrSql, rs_tpl
            If Not rs_tpl.EOF Then
                nro_ModOrg = rs_tpl!tplatenro
            Else
                StrSql = "SELECT top 1 * FROM adptemplate"
                OpenRecordset StrSql, rs_tpl
                If rs_tpl.EOF Then
                    Texto = ": no hay modelos de organizacion"
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                    RegError = RegError + 1
                    Exit Sub
                Else
                    nro_ModOrg = rs_tpl!tplatenro
                End If
                
            End If
            
           
        Else
            StrSql = "SELECT * FROM adptemplate WHERE tplatedesabr = '" & ModOrg & "'"
            OpenRecordset StrSql, rs_tpl
            If rs_tpl.EOF Then
                StrSql = "INSERT INTO adptemplate (tplatedesabr,tplatedefault) VALUES ('" & ModOrg & "',-1)"
                objConn.Execute StrSql, , adExecuteNoRecords
                nro_ModOrg = getLastIdentity(objConn, "adptemplate")
            Else
                nro_ModOrg = rs_tpl!tplatenro
            End If
        End If
    Else
            StrSql = "SELECT * FROM adptemplate WHERE tplatedefault = -1"
            OpenRecordset StrSql, rs_tpl
            If Not rs_tpl.EOF Then
                nro_ModOrg = rs_tpl!tplatenro
            Else
                StrSql = "SELECT top 1 * FROM adptemplate"
                OpenRecordset StrSql, rs_tpl
                If rs_tpl.EOF Then
                    Texto = ": no hay modelos de organizacion"
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                    RegError = RegError + 1
                    Exit Sub
                Else
                    nro_ModOrg = rs_tpl!tplatenro
                End If
                
            End If

    End If
        
        'hasta aca
'        If ModOrg = "N/A" Or EsNulo(ModOrg) Then
'            nro_ModOrg = 0
'        Else
'            StrSql = "SELECT * FROM adptemplate WHERE tplatedesabr = '" & ModOrg & "'"
'            OpenRecordset StrSql, rs_tpl
'            If rs_tpl.EOF Then
'                StrSql = "INSERT INTO adptemplate (tplatedesabr,tplatedefault) VALUES ('" & ModOrg & "',-1)"
'                objConn.Execute StrSql, , adExecuteNoRecords
'                nro_ModOrg = getLastIdentity(objConn, "adptemplate")
'            Else
'                nro_ModOrg = rs_tpl!tplatenro
'            End If
'        End If
'    Else
'       nro_ModOrg = 0
'    End If
'------------------------------------------------------------------------------
    'Reporta_a  campo empleado.empreporta va el tercero
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Reporta_a"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Reporta_a = Aux
        If Not EsNulo(Reporta_a) And Reporta_a <> "N/A" Then
            If IsNumeric(Reporta_a) Then
                StrSql = "SELECT * FROM empleado WHERE empleado.empleg = " & Reporta_a
                If rs_emp.State = adStateOpen Then rs_emp.Close
                OpenRecordset StrSql, rs_emp
                If (Not rs_emp.EOF) Then
                    Nro_Reporta_a = rs_emp!Ternro
                Else
                    Nro_Reporta_a = 0
                    Texto = ": " & "El Empleado " & Reporta_a & " no existe."
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                End If
            Else
                Nro_Reporta_a = 0
                Texto = "El valor no es numérico."
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            End If
        End If
    Else
        Nro_Reporta_a = 0
        'no es obligatorio
    End If
    If rs_emp.State = adStateOpen Then rs_emp.Close
    

    'Grupo de Seguridad
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Grupo de Seguridad"
    pos1 = pos2 + 2
    'Descomentado ver 3.89 ---------------------------------------------------
       '--------------- ^'FGZ - 19/07/2011 - se agregaron campos por lo cual no debe hacer un LEN()
    pos2 = Len(strReg) 'InStr(pos1, strReg, Separador) - 1
    
    '--------------Comentado ver 3.89---------- Desde Acá-----------------------
    'pos2 = InStr(pos1, strReg, separador) - 1
    'If pos2 <= 0 Then
    '    pos2 = Len(strReg) 'es el ultimo campo (Fecha de bienios y cantidad de bienios no bienen)
    '    conBienios = False
    'End If
    '------------------------------------------Hasta Acá------------------------
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        GrupoSeguridad = Aux
        If GrupoSeguridad <> "N/A" And Not EsNulo(GrupoSeguridad) Then
            Call ValidaEstructura(7, GrupoSeguridad, Nro_GrupoSeguridad, Inserto_estr)
        Else
            Nro_GrupoSeguridad = 0
        End If
    Else
        Nro_GrupoSeguridad = 0
    End If
    
    '--------------Comentado ver 3.89---------- Desde Acá-----------------------
    'If conBienios Then
        'Fecha de Bienios
    '    Nrocolumna = Nrocolumna + 1
    '    Obligatorio = False
    '    Campoetiqueta = "Fecha de Cumple Bienios"
    '    pos1 = pos2 + 2
    '    pos2 = InStr(pos1, strReg, separador) - 1
    '    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    '    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
    '        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
    '        Call Escribir_Log("floge", LineaCarga, Nrocolumna, Texto, Tabs, strReg)
    '        RegError = RegError + 1
    '        Exit Sub
    '    End If
        'FecCumpleBienios = aux
    '    If EsNulo(aux) Or aux = "N/A" Then
    '        FecCumpleBienios = "NULL"
    '    Else
    '        FecCumpleBienios = ConvFecha(aux)
    '    End If
        
        'Cantidad de Bienios
    '    Nrocolumna = Nrocolumna + 1
    '    Obligatorio = False
    '    Campoetiqueta = "Cantidad de Bienios"
    '    pos1 = pos2 + 2
    '    pos2 = Len(strReg) 'InStr(pos1, strReg, Separador) - 1
    '    If pos2 > 0 Then
    '        aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    '        If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
    '            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
    '            Call Escribir_Log("floge", LineaCarga, Nrocolumna, Texto, Tabs, strReg)
    '            RegError = RegError + 1
    '            Exit Sub
    '        End If
            'CantBienios = aux
    '        If aux = "N/A" Or EsNulo(aux) Then
    '            CantBienios = 0
    '        Else
    '            CantBienios = CLng(aux)
    '        End If
    '    Else
    '        CantBienios = 0
    '    End If
    'Else
    '    FecCumpleBienios = "NULL"
    '    CantBienios = 0
    'End If
'Fin lectura de campos
'----------------------------Hasta Acá------------------------------------------------ ver 3.89
' =====================================================================================================
 

  'JPB - Inicializo el pass+perfil (l_ess_Pass_Estandar y l_ess_Perfil_Estandar) por defecto del Autogestion en el caso que este habilitado el confper 12
  '--------------------------------
  Call ESS_Configuracion_Default
  '-------------------------------
 


  ' Inserto el Tercero
  If F_Nacimiento = "Null" Then
    F_Nacimiento = "''"
  End If
  If F_Ingreso = "Null" Then
    F_Ingreso = "''"
  End If
  
  '--------------Comentado ver 3.89---------- Desde Acá-----------------------
  'If FecCumpleBienios = "NULL" Then
  '  FecCumpleBienios = "''"
  'End If
  '-------------------------------------------Hasta Acá------------------------
  
  
  If CalculaLegajo Then
    Call CalcularLegajo(nro_empresa, Legajo)
  End If

    If Not ExisteLeg Then
        StrSql = " INSERT INTO tercero(ternom,ternom2,terape,terape2,terfecnac,tersex,terestciv,estcivnro,nacionalnro,paisnro,terfecing)"
        StrSql = StrSql & " VALUES('" & nombre & "','" & nombre2 & "','" & Apellido & "','" & Apellido2 & "'," & F_Nacimiento & "," & ter_sexo & "," & nro_estcivil & "," & nro_estcivil & ","
        If nro_nacionalidad <> 0 Then
            StrSql = StrSql & nro_nacionalidad & ","
        Else
            StrSql = StrSql & "null,"
        End If
        If nro_paisnac <> 0 Then
            StrSql = StrSql & nro_paisnac & ","
        Else
            StrSql = StrSql & "null,"
        End If
        StrSql = StrSql & F_Ingreso & ")"
        objConn.Execute StrSql, , adExecuteNoRecords

        NroTercero = getLastIdentity(objConn, "tercero")
        
        Texto = ": " & "Codigo de Tercero = " & NroTercero
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
    Else
        StrSql = " UPDATE tercero SET "
        StrSql = StrSql & " ternom = " & "'" & nombre & "'"
        StrSql = StrSql & ", terape = " & "'" & Apellido & "'"
        StrSql = StrSql & ", ternom2 = " & "'" & nombre2 & "'"
        StrSql = StrSql & ", terape2 = " & "'" & Apellido2 & "'"
        StrSql = StrSql & ", terfecnac = " & F_Nacimiento
        StrSql = StrSql & ", tersex = " & ter_sexo
        StrSql = StrSql & ", terestciv =" & nro_estcivil
        StrSql = StrSql & ", estcivnro =" & "'" & nro_estcivil & "'"
        If nro_nacionalidad <> 0 Then
            StrSql = StrSql & ", nacionalnro =" & nro_nacionalidad
        End If
        StrSql = StrSql & ", terfecing =" & F_Ingreso
        If nro_paisnac <> 0 Then
            StrSql = StrSql & ", paisnro =" & nro_paisnac
        End If
        StrSql = StrSql & " WHERE ternro = " & NroTercero
        objConn.Execute StrSql, , adExecuteNoRecords
      
        Texto = ": " & " - Empleado: " & Legajo & " - Ese Empleado ya existe en la base. Datos de tercero actualizados"
        NroColumna = 1
        Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    '--------------Comentado ver 3.89---------- Desde Acá-----------------------
    'If Not EsNulo(FecCumpleBienios) And CantBienios > 0 Then
    '    StrSql = " INSERT INTO emp_bienios (cantidad,fechacumple,fechavig,tipocambio,gradoact,ternro)"
    '    StrSql = StrSql & " VALUES (" & CantBienios & "," & FecCumpleBienios & "," & FecCumpleBienios & ",1,0," & NroTercero & ")"
    '    objConn.Execute StrSql, , adExecuteNoRecords
        
    '    Texto = ": " & "Inserte Bienios - Cant:" & CantBienios & " - Fecha Cumple:" & FecCumpleBienios
    '    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
    'Else
    '    Texto = ": " & "No se insertaron Bienios"
    '    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
    'End If
    '----------------------------------------Hasta Acá------------------------- ver 3.89
    
    If Not ExisteLeg Then
        'Diego Rosso - 26-02-07 se agrego ternom2 y terape2 en el insert y en el update
        StrSql = " INSERT INTO empleado(empleg,empfecalta,empfecbaja,empest,empfaltagr,empfbajaprev,"
        StrSql = StrSql & "ternro,nivnro,empestudia,terape,ternom,terape2,ternom2,empinterno,empemail,"
        StrSql = StrSql & "empnro,tplatenro,empremu"
        If Nro_Reporta_a <> 0 Then
            StrSql = StrSql & ",empreporta"
        End If
        
        'JPB - Si esta habilitado el confper 12 asigno el pass+perfil por defecto al empleado
        '------------------------------------------------------------------------------------
        If (l_ess_Pass_Estandar <> "") And (l_ess_Perfil_Estandar <> "") Then
             StrSql = StrSql & ",empessactivo,emppass,perfnro"
        End If
        '------------------------------------------------------------------------------------
        
        StrSql = StrSql & ") VALUES("
        StrSql = StrSql & Legajo & "," & F_Alta & "," & F_Baja & "," & ter_estado & "," & F_Alta & "," & Fecha_FinContrato & ","
        StrSql = StrSql & NroTercero & "," & nro_nivest & "," & ter_estudio & ",'" & Apellido & "','"
        StrSql = StrSql & nombre & "','" & Apellido2 & "','" & nombre2 & "',Null,'" & Email & "',1," & nro_ModOrg & "," & Empremu
        If Nro_Reporta_a <> 0 Then
            StrSql = StrSql & "," & Nro_Reporta_a
        End If
        
        'JPB - Si esta habilitado el confper 12 asigno el pass+perfil por defecto al empleado
        '------------------------------------------------------------------------------------
        If (l_ess_Pass_Estandar <> "") And (l_ess_Perfil_Estandar <> "") Then
             StrSql = StrSql & ",-1,'" & l_ess_Pass_Estandar & "'," & l_ess_Perfil_Estandar
        End If
        '------------------------------------------------------------------------------------
        
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = ": " & "Empleado insertado - " & Legajo & " - " & Apellido & " - " & nombre
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
    Else
        StrSql = " UPDATE empleado SET "
        StrSql = StrSql & " empleg = " & Legajo
        StrSql = StrSql & " ,empfecalta = " & F_Alta
        StrSql = StrSql & " ,empfecbaja = " & F_Baja
        StrSql = StrSql & " ,empfbajaprev = " & Fecha_FinContrato
        StrSql = StrSql & " ,empest = " & ter_estado
        StrSql = StrSql & " ,empfaltagr = " & F_Alta
        StrSql = StrSql & " ,nivnro = " & nro_nivest
        StrSql = StrSql & " ,empestudia = " & ter_estudio
        StrSql = StrSql & " ,terape = " & "'" & Apellido & "'"
        StrSql = StrSql & " ,ternom = " & "'" & nombre & "'"
        StrSql = StrSql & " ,terape2 = " & "'" & Apellido2 & "'"
        StrSql = StrSql & " ,ternom2 = " & "'" & nombre2 & "'"
        StrSql = StrSql & " ,empemail = " & "'" & Email & "'"
        StrSql = StrSql & " ,empnro = 1 "
        StrSql = StrSql & " ,tplatenro =" & nro_ModOrg
        StrSql = StrSql & " ,Empremu =" & Empremu
        If Nro_Reporta_a <> 0 Then
            StrSql = StrSql & ", empreporta =" & Nro_Reporta_a
        End If
        
            
        'JPB - Si esta habilitado el confper 12 asigno el pass+perfil por defecto al empleado
        '------------------------------------------------------------------------------------
        If (l_ess_Pass_Estandar <> "") And (l_ess_Perfil_Estandar <> "") Then
            StrSql = StrSql & ", empessactivo = -1"
            StrSql = StrSql & ", emppass = '" & l_ess_Pass_Estandar & "'"
            StrSql = StrSql & ", perfnro =" & l_ess_Perfil_Estandar
        End If
        '------------------------------------------------------------------------------------
        
        StrSql = StrSql & " WHERE ternro = " & NroTercero
        objConn.Execute StrSql, , adExecuteNoRecords
    
        Texto = ": " & "Empleado Actualizado - " & Legajo & " - " & Apellido & " - " & nombre
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
    End If
    
    ' Inserto el Registro correspondiente en ter_tip
    If Not ExisteLeg Then
        StrSql = " INSERT INTO ter_tip(ternro,tipnro) VALUES(" & NroTercero & ",1)"
        objConn.Execute StrSql, , adExecuteNoRecords
    End If

' Inserto los Documentos
    If Not ExisteLeg Then

            StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
            StrSql = StrSql & " VALUES(" & NroTercero & ", 1,'" & RUT & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            Texto = ": " & "Inserte el Documento - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)

    Else

            StrSql = "SELECT * FROM ter_doc WHERE ternro = " & NroTercero
            StrSql = StrSql & " AND tidnro = 1"
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If rs.EOF Then
                StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
                StrSql = StrSql & " VALUES(" & NroTercero & ", 1,'" & RUT & "')"
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = ": " & "Inserte el Documento - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            Else
                StrSql = " UPDATE ter_doc SET "
                StrSql = StrSql & " nrodoc = '" & RUT & "'"
                StrSql = StrSql & " WHERE ternro = " & NroTercero
                StrSql = StrSql & " AND tidnro = 1  "
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = Texto = ": " & "Documento actualizado - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If

    End If
  
    
 

' Inserto el Domicilio
  If rs.State = adStateOpen Then
    rs.Close
  End If
  
  If Not ExisteLeg Then
    If (Nro_Localidad <> 0 And Nro_Provincia <> 0 And Nro_Pais <> 0) Then
        StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
        StrSql = StrSql & " VALUES(1," & NroTercero & ",-1,2)"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        NroDom = getLastIdentity(objConn, "cabdom")
      
        StrSql = " INSERT INTO detdom(domnro,calle,nro,piso,oficdepto,torre,manzana,codigopostal,entrecalles,"
        StrSql = StrSql & "locnro,provnro,paisnro,barrio,zonanro) "
        StrSql = StrSql & " VALUES (" & NroDom & ",'" & Calle & "','" & Nro_Nrodom & "','" & Piso & "','"
        StrSql = StrSql & Depto & "','" & Torre & "','" & Manzana & "','" & Cpostal & "','" & Entre & "'," & Nro_Localidad & ","
        StrSql = StrSql & Nro_Provincia & "," & Nro_Pais & ",'" & Barrio & "'," & Nro_Zona & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
      
        Texto = ": " & "Inserte el Domicilio - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        
        If Telefono <> "" Then
            'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
            StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
            StrSql = StrSql & " VALUES(" & NroDom & ",'" & Telefono & "',0,-1,0,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            Texto = ": " & "Inserte el Telefono Principal - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        End If
        If TelLaboral <> "" Then
            StrSql = "SELECT * FROM telefono "
            StrSql = StrSql & " WHERE domnro =" & NroDom
            StrSql = StrSql & " AND telnro ='" & TelLaboral & "'"
            If rs_Tel.State = adStateOpen Then rs_Tel.Close
            OpenRecordset StrSql, rs_Tel
            If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelLaboral & "',0,0,0,3)"
                objConn.Execute StrSql, , adExecuteNoRecords
                  
                Texto = ": " & "Inserte el Telefono Laboral - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
        If TelCelular <> "" Then
            StrSql = "SELECT * FROM telefono "
            StrSql = StrSql & " WHERE domnro =" & NroDom
            StrSql = StrSql & " AND telnro ='" & TelCelular & "'"
            If rs_Tel.State = adStateOpen Then rs_Tel.Close
            OpenRecordset StrSql, rs_Tel
            If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelCelular & "',0,0,-1,2)"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Inserte el Telefono Celular - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
    End If
  Else
    If (Nro_Localidad <> 0 And Nro_Provincia <> 0 And Nro_Pais <> 0) Then
        StrSql = "SELECT * FROM cabdom  "
        StrSql = StrSql & " WHERE tipnro = 1"
        StrSql = StrSql & " AND ternro = " & NroTercero
        StrSql = StrSql & " AND domdefault = -1"
        StrSql = StrSql & " AND tidonro = 2"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
          StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
          StrSql = StrSql & " VALUES(1," & NroTercero & ",-1,2)"
          objConn.Execute StrSql, , adExecuteNoRecords
          
          NroDom = getLastIdentity(objConn, "cabdom")
        
          StrSql = " INSERT INTO detdom(domnro,calle,nro,piso,oficdepto,torre,manzana,codigopostal,entrecalles,"
          StrSql = StrSql & "locnro,provnro,paisnro,barrio,zonanro) "
          StrSql = StrSql & " VALUES (" & NroDom & ",'" & Calle & "','" & Nro_Nrodom & "','" & Piso & "','"
          StrSql = StrSql & Depto & "','" & Torre & "','" & Manzana & "','" & Cpostal & "','" & Entre & "'," & Nro_Localidad & ","
          StrSql = StrSql & Nro_Provincia & "," & Nro_Pais & ",'" & Barrio & "'," & Nro_Zona & ")"
          objConn.Execute StrSql, , adExecuteNoRecords
        
          Texto = ": " & "Inserte el Domicilio - "
          Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
          
          If Telefono <> "" Then
            'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
              StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
              StrSql = StrSql & " VALUES(" & NroDom & ",'" & Telefono & "',0,-1,0,1)"
              objConn.Execute StrSql, , adExecuteNoRecords

              Texto = ": " & "Inserte el Telefono Principal - "
              Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
          End If
          If TelLaboral <> "" Then
              StrSql = "SELECT * FROM telefono "
              StrSql = StrSql & " WHERE domnro =" & NroDom
              StrSql = StrSql & " AND telnro ='" & TelLaboral & "'"
              If rs_Tel.State = adStateOpen Then rs_Tel.Close
              OpenRecordset StrSql, rs_Tel
              If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                  StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                  StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelLaboral & "',0,0,0,3)"
                  objConn.Execute StrSql, , adExecuteNoRecords
                    
                  Texto = ": " & "Inserte el Telefono Laboral - "
                  Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
              End If
          End If
          If TelCelular <> "" Then
              StrSql = "SELECT * FROM telefono "
              StrSql = StrSql & " WHERE domnro =" & NroDom
              StrSql = StrSql & " AND telnro ='" & TelCelular & "'"
              If rs_Tel.State = adStateOpen Then rs_Tel.Close
              OpenRecordset StrSql, rs_Tel
              If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                  StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                  StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelCelular & "',0,0,-1,2)"
                  objConn.Execute StrSql, , adExecuteNoRecords
                  Texto = ": " & "Inserte el Telefono Celular - "
                  Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
              End If
          End If
        Else
            StrSql = " UPDATE detdom SET "
            StrSql = StrSql & " calle =" & "'" & Calle & "'"
            StrSql = StrSql & ",nro =" & "'" & Nro_Nrodom & "'"
            StrSql = StrSql & ",piso =" & "'" & Piso & "'"
            StrSql = StrSql & ",oficdepto =" & "'" & Depto & "'"
            StrSql = StrSql & ",torre =" & "'" & Torre & "'"
            StrSql = StrSql & ",manzana =" & "'" & Manzana & "'"
            StrSql = StrSql & ",codigopostal =" & "'" & Cpostal & "'"
            StrSql = StrSql & ",entrecalles =" & "'" & Entre & "'"
            StrSql = StrSql & ",locnro =" & Nro_Localidad
            StrSql = StrSql & ",provnro =" & Nro_Provincia
            StrSql = StrSql & ",paisnro =" & Nro_Pais
            StrSql = StrSql & ", zonanro =" & Nro_Zona
            StrSql = StrSql & " WHERE domnro = " & rs!domnro
            objConn.Execute StrSql, , adExecuteNoRecords
        
            Texto = ": " & "Domicilio Actualizado - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        
            If Telefono <> "" Then
                StrSql = "SELECT * FROM telefono "
                StrSql = StrSql & " WHERE domnro =" & rs!domnro
                StrSql = StrSql & " AND telnro ='" & Telefono & "'"
                If rs_Tel.State = adStateOpen Then rs_Tel.Close
                OpenRecordset StrSql, rs_Tel
                If rs_Tel.EOF Then
                    'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                    StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                    StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & Telefono & "',0,-1,0,1)"
                    objConn.Execute StrSql, , adExecuteNoRecords
                      
                    Texto = ": " & "Inserte el Telefono Principal - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            End If
            If TelLaboral <> "" Then
                StrSql = "SELECT * FROM telefono "
                StrSql = StrSql & " WHERE domnro =" & rs!domnro
                StrSql = StrSql & " AND telnro ='" & TelLaboral & "'"
                If rs_Tel.State = adStateOpen Then rs_Tel.Close
                OpenRecordset StrSql, rs_Tel
                If rs_Tel.EOF Then
                    'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                    StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                    StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & TelLaboral & "',0,0,0,3)"
                    objConn.Execute StrSql, , adExecuteNoRecords
                      
                    Texto = ": " & "Inserte el Telefono Laboral - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            End If
            If TelCelular <> "" Then
                StrSql = "SELECT * FROM telefono "
                StrSql = StrSql & " WHERE domnro =" & rs!domnro
                StrSql = StrSql & " AND telnro ='" & TelCelular & "'"
                If rs_Tel.State = adStateOpen Then rs_Tel.Close
                OpenRecordset StrSql, rs_Tel
                If rs_Tel.EOF Then
                    'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                    StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                    StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & TelCelular & "',0,0,-1,2)"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = ": " & "Inserte el Telefono Celular - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            End If
        End If
    End If
  End If
  
  
  If Not ExisteLeg Then
        ' Inserto las Fases
        StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
        StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
        If nro_causabaja <> 0 Then
          StrSql = StrSql & nro_causabaja
        Else
          StrSql = StrSql & "null"
        End If
        If UCase(F_Baja) <> "NULL" Then
          StrSql = StrSql & ", 0 "
        Else
          StrSql = StrSql & "," & ter_estado
        End If
        StrSql = StrSql & ",-1,-1,-1,-1,-1)"
          'StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        If nro_causabaja <> 0 Then
            Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
        End If
    
  Else
  
        StrSql = "SELECT * FROM fases WHERE estado = -1 AND sueldo = -1 AND vacaciones = -1 AND indemnizacion = -1 AND real = -1 AND empleado = " & NroTercero
        OpenRecordset StrSql, rs
        
        If rs.EOF Then
            StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
            StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
            If nro_causabaja <> 0 Then
              StrSql = StrSql & nro_causabaja
            Else
              StrSql = StrSql & "null"
            End If
            If UCase(F_Baja) <> "NULL" Then
              StrSql = StrSql & ", 0 "
            Else
              StrSql = StrSql & "," & ter_estado
            End If
            StrSql = StrSql & ",-1,-1,-1,-1,-1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            If nro_causabaja <> 0 Then
                Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
            End If
            
        Else
            StrSql = " UPDATE fases SET "
             'StrSql = StrSql & " altfec =" & F_Alta    ' xxx
             'StrSql = StrSql & ",bajfec =" & F_Baja
            StrSql = StrSql & " bajfec =" & F_Baja
            If nro_causabaja <> 0 Then
               StrSql = StrSql & ", caunro =" & nro_causabaja
            End If
            If UCase(F_Baja) <> "NULL" Then
               StrSql = StrSql & ", estado = 0 "
            End If
            StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
            objConn.Execute StrSql, , adExecuteNoRecords
        
            Texto = ": " & "Fase Actualizada - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            
            If nro_causabaja <> 0 Then
                Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
            End If
            
        End If
  End If
  
  
  'Inserto la cuenta bancaria
    If Not ExisteLeg Then
        If (nro_formapago <> 0 And ter_bancopago <> 0 And NroCuenta <> "") Then
                StrSql = " INSERT INTO ctabancaria (ternro,fpagnro,banco,ctabestado,"
                StrSql = StrSql & "ctabsuc,ctabnro,ctabporc,ctabcbu"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",ctabacred"
                End If
                StrSql = StrSql & ") VALUES ("
                StrSql = StrSql & NroTercero & "," & nro_formapago & "," & ter_bancopago & ","
                StrSql = StrSql & "-1,'" & Left(SucBanco, 10) & "','" & NroCuenta & "',100,'" & NroCBU & "'"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",'" & NroCuentaAcreditacionE & "'"
                End If
                StrSql = StrSql & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Inserte la Cuenta Bancaria - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
        End If
    Else
        If (nro_formapago <> 0 And ter_bancopago <> 0 And NroCuenta <> "") Then
            StrSql = "SELECT * FROM ctabancaria"
            StrSql = StrSql & " WHERE ctabancaria.ternro =" & NroTercero
            StrSql = StrSql & " AND ctabestado = -1 "
            StrSql = StrSql & " AND banco =" & ter_bancopago
            StrSql = StrSql & " AND fpagnro =" & nro_formapago
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If rs.EOF Then
                StrSql = " INSERT INTO ctabancaria (ternro,fpagnro,banco,ctabestado,"
                StrSql = StrSql & "ctabsuc,ctabnro,ctabporc,ctabcbu"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",ctabacred"
                End If
                StrSql = StrSql & ") VALUES ("
                StrSql = StrSql & NroTercero & "," & nro_formapago & "," & ter_bancopago & ","
                StrSql = StrSql & "-1,'" & Left(SucBanco, 10) & "','" & NroCuenta & "',100,'" & NroCBU & "'"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",'" & NroCuentaAcreditacionE & "'"
                End If
                StrSql = StrSql & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Inserte la Cuenta Bancaria - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            Else
                If rs!ctabnro = NroCuenta Then
                    StrSql = "UPDATE ctabancaria SET "
                    StrSql = StrSql & " ctabsuc = '" & SucBanco & "'"
                    If Not EsNulo(NroCuentaAcreditacionE) Then
                        StrSql = StrSql & ", ctabacred = '" & NroCuentaAcreditacionE & "'"  '21-12-10
                    End If
                    StrSql = StrSql & ", ctabnro = " & "'" & NroCuenta & "'"
                    StrSql = StrSql & ", ctabporc = 100 "
                    StrSql = StrSql & ", ctabcbu = '" & NroCBU & "'"
                    StrSql = StrSql & " WHERE ctabancaria.ternro =" & NroTercero
                    StrSql = StrSql & " AND ctabestado = -1 "
                    StrSql = StrSql & " AND banco =" & ter_bancopago
                    StrSql = StrSql & " AND fpagnro =" & nro_formapago
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    Texto = ": " & "Cuenta Bancaria actualizada- "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                Else
                    'Desactivo la anterior
                    StrSql = " UPDATE ctabancaria SET "
                    StrSql = StrSql & " ctabestado = 0 "
                    StrSql = StrSql & " WHERE cbnro = " & rs!Cbnro
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    'inserto la nueva
                    StrSql = " INSERT INTO ctabancaria (ternro,fpagnro,banco,ctabestado,"
                    StrSql = StrSql & "ctabsuc,ctabnro,ctabporc,ctabcbu"
                    If Not EsNulo(NroCuentaAcreditacionE) Then
                        StrSql = StrSql & ",ctabacred"
                    End If
                    StrSql = StrSql & ") VALUES ("
                    StrSql = StrSql & NroTercero & "," & nro_formapago & "," & ter_bancopago & ","
                    StrSql = StrSql & "-1,'" & Left(SucBanco, 10) & "','" & NroCuenta & "',100,'" & NroCBU & "'"
                    If Not EsNulo(NroCuentaAcreditacionE) Then
                        StrSql = StrSql & ",'" & NroCuentaAcreditacionE & "'"
                    End If
                    StrSql = StrSql & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = ": " & "Inserte la Cuenta Bancaria - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            End If
        End If
    End If
  
  'Inserto las Estructuras
'  Call AsignarEstructura(1, nro_sucursal, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(2, nro_sector, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(3, nro_categoria, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(4, nro_puesto, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(5, nro_ccosto, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(6, nro_gerencia, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(7, Nro_GrupoSeguridad, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(9, nro_departamento, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(10, nro_empresa, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(15, nro_cajajub, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(16, nro_sindicato, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(17, nro_osocial_elegida, NroTercero, F_Alta, F_Baja)
'  'Call AsignarEstructura(18, nro_contrato, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(18, nro_contrato, NroTercero, F_Alta, Fecha_FinContrato)
'  Call AsignarEstructura(19, nro_convenio, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(20, nro_lpago, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(21, nro_reghorario, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(22, nro_formaliq, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(23, nro_planos_elegida, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(24, nro_osocial_ley, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(25, nro_planos_ley, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(29, nro_mutual, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(30, nro_sitrev, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(31, nro_CajaComp, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(35, nro_direccion, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(40, nro_art, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(41, nro_bancopago, NroTercero, F_Alta, F_Baja)
  
  
  Call AsignarEstructura_NEW(1, nro_oficina, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(2, nro_sector, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(3, nro_categoria, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(4, nro_cargo, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(5, nro_ccosto, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(6, nro_gerencia, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(7, Nro_GrupoSeguridad, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(9, nro_departamento, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(10, nro_empresa, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(15, nro_AFP, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(16, nro_sindicato, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(17, nro_osocial_elegida, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(18, nro_contrato, NroTercero, F_Alta, F_Baja)
  'Call AsignarEstructura_NEW(18, nro_contrato, NroTercero, F_Alta, Fecha_FinContrato)
  Call AsignarEstructura_NEW(19, nro_convenio, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(20, nro_lpago, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(21, nro_reghorario, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(22, nro_formaliq, NroTercero, F_Alta, F_Baja)
  'Call AsignarEstructura_NEW(23, nro_planos_elegida, NroTercero, F_Alta, F_Baja)
  'Call AsignarEstructura_NEW(24, nro_osocial_ley, NroTercero, F_Alta, F_Baja)
  'Call AsignarEstructura_NEW(25, nro_planos_ley, NroTercero, F_Alta, F_Baja)
  'Call AsignarEstructura_NEW(29, nro_actividad, NroTercero, F_Alta, F_Baja)
  'Call AsignarEstructura_NEW(30, nro_sitrev, NroTercero, F_Alta, F_Baja)
  'Call AsignarEstructura_NEW(31, nro_CajaComp, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(35, nro_direccion, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(40, nro_mutual, NroTercero, F_Alta, F_Baja)
  'Call AsignarEstructura_NEW(41, nro_bancopago, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(44, nro_CajaComp, NroTercero, F_Alta, F_Baja)
 
  
Texto = ": " & "Linea procesada correctamente "
Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
'LineaOK.Writeline Mid(strReg, 1, Len(strReg))
OK = True
         
FinLinea:
If rs.State = adStateOpen Then
    rs.Close
End If
Exit Sub

SaltoLinea:
    Texto = ": " & " - Error:" & Err.Description
    NroColumna = 1
    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    MyRollbackTrans
    OK = False
    GoTo FinLinea
End Sub
Public Sub LineaModelo_613(ByVal strReg As String, ByRef OK As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de Empleados de Chile - Con Bienios para INDAP
' Autor      : FGZ
' Fecha      : 30/07/2004
' Ultima Mod.: JAZ - Se Agregó el Modelo 613, que basicamente es el modelo 607 con las modificaciones introducidas para INDAP
' ---------------------------------------------------------------------------------------------

Dim pos1            As Long
Dim pos2            As Long

Dim Legajo          As String   'LEGAJO                   -- empleado.empleg
Dim Apellido        As String   'APELLIDO                 -- empleado.terape y tercero.terape
Dim Apellido2       As String   'APELLIDO2                -- empleado.terape2 y tercero.terape2
Dim nombre          As String   'NOMBRE                   -- empleado.ternom y tercero.ternom
Dim nombre2         As String   'NOMBRE2                  -- empleado.ternom2 y tercero.ternom2
Dim Fnac            As String   'FNAC                     -- tercero.terfecna
Dim Nacionalidad    As String   'Nacionalidad             -- tercero.nacionalnro
Dim PaisNac         As String   'Pais de Nacimiento       -- tercero.paisnro
Dim Fing            As String   'Fec.Ingreso al Pais      -- terecro.terfecing
Dim EstCivil        As String   'Est.Civil                -- tercero.estcivnro
Dim Sexo            As String   'Sexo                     -- tercero.tersex
Dim FAlta           As String   'Fec. de Alta             -- empleado.empfaltagr y fases.altfec
Dim Estudio         As String   'Estudia                  -- empleado.empestudia
Dim NivEst          As String   'Nivel de Estudio         -- empleado.nivnro
'Dim Tdocu           As String   'Tipo Documento          -- ter_dpc.tidnro (DU)
'Dim Ndocu           As String   'Nro. Documento          -- ter_doc.nrodoc
'Dim Cuil            As String   'CUIL                    -- ter_doc.nrodoc (10)
Dim RUT             As String    ' RUT                    --ter_doc.nrodoc (1)
Dim Calle           As String   'Calle                    -- detdom.calle
Dim Nro             As String   'Número                   -- detdom.nro
Dim Piso            As String   'Piso                     -- detdom.piso
Dim Depto           As String   'Depto                    -- detdom.depto
Dim Torre           As String   'Torre                    -- detdom.torre
Dim Manzana         As String   'Manzana                  -- detdom.manzana
Dim Cpostal         As String   'Cpostal                  -- detdom.codigopostal
Dim Entre           As String   'Entre Calles             -- detdom.entrecalles
Dim Barrio          As String   'Barrio                   -- detdom.barrio
Dim Localidad       As String   'Localidad(comuna)        -- detdom.locnro
'Dim Partido         As String   'Partido                 -- detdom.partnro
Dim Zona            As String   'Zona (region)            -- detdom.zonanro
Dim Provincia       As String   'Provincia                -- detdom.provnro
Dim Pais            As String   'Pais                     -- detdom.paisnro
Dim Telefono        As String   'Telefono                 -- telefono.telnro
Dim TelLaboral      As String   'Telefono                 -- telefono.telnro
Dim TelCelular      As String   'Telefono                 -- telefono.telnro
Dim Email           As String   'E-mail                   -- empleado.empemail
'Dim Sucursal        As String   'Sucursal                -- his_estructura.estrnro
Dim Oficina         As String   'Oficina                  -- his_estructura.estrnro
Dim Sector          As String   'Sector                   -- his_estructura.estrnro
Dim Convenio        As String   'Sucursal                 -- his_estructura.estrnro
Dim categoria       As String   'Categoria                -- his_estructura.estrnro
'Dim Puesto          As String   'Puesto                  -- his_estructura.estrnro
Dim Cargo          As String   'Cargo(Puesto)             -- his_estructura.estrnro
Dim CCosto          As String   'C.Costo                  -- his_estructura.estrnro
Dim Gerencia        As String   'Gerencia                 -- his_estructura.estrnro
Dim Departamento    As String   'Departamento             -- his_estructura.estrnro
Dim Direccion       As String   'Direccion                -- his_estructura.estrnro
'Dim CajaJub         As String   'Caja de Jubilacion      -- his_estructura.estrnro
Dim AFP             As String   'AFP                      -- his_estructura.estrnro
Dim Sindicato       As String   'Sindicato                -- his_estructura.estrnro
Dim OSocialLey      As String   'Obra Social              -- his_estructura.estrnro
Dim PlanOSLey       As String   'Plan OS                  -- his_estructura.estrnro
Dim OSocialElegida  As String   'sistema Salud/isapre     -- his_estructura.estrnro
'Dim PlanOSElegida  As String   'Plan OS                  -- his_estructura.estrnro
Dim Contrato        As String   'Contrato                 -- his_estructura.estrnro
'Dim Convenio       As String   'Convenio                 -- his_estructura.estrnro
Dim FContraro       As String  'fecha vencimiento contrato
Dim LPago           As String   'Lugar de Pago            -- his_estructura.estrnro
Dim RegHorario      As String   'Regimen Horario          -- his_estructura.estrnro
Dim FormaLiq        As String   'Forma de Liquidacion     -- his_estructura.estrnro
Dim FormaPago       As String   'Forma de Pago            -- formapago.fpagdescabr
Dim SucBanco        As String   'Sucursal del Banco       -- ctabancaria.ctabsuc
Dim BancoPago       As String   'Banco Pago               -- his_estructura.estrnro, formapago.fpagbanc (siempre y cuando el Banco sea <> 0) y ctabancaria.banco
Dim NroCuenta       As String   'Nro. Cuenta              -- ctabancario.ctabnro
Dim NroCuentaAcreditacionE As String
'Dim Actividad       As String   'Actividad                -- his_estructura.estrnro
Dim Mutual          As String   'Actividad                 -- his_estructura.estrnro
'Dim CondSIJP        As String   'Condicion SIJP           -- his_estructura.estrnro
Dim CajaComp        As String   'Caja Compensacion         -- his_estructura.estrnro
'Dim SitRev          As String   'Sit. de Revista SIJP     -- his_estructura.estrnro
'Dim ModCont         As String   'Mod. de Contrat. SIJP    -- his_estructura.estrnro
'Dim ART             As String   'ART                      -- his_estructura.estrnro
Dim Estado          As String   'Estado                   -- empleado.empest y fases.estado
Dim CausaBaja       As String   'Causa de Baja            -- fases.caunro
Dim FBaja           As String   'Fecha de Baja            -- fases.bajfec
Dim Empresa         As String   'Empresa                  -- his_estructura.estrnro
Dim ModOrg          As String   'Empresa                  -- his_estructura.estrnro
Dim OSL             As String   'Empresa                  -- his_estructura.estrnro
Dim OSE             As String   'Empresa                  -- his_estructura.estrnro
Dim PlanOdon        As String   'Empresa                  -- his_estructura.estrnro
Dim Locacion        As String   'Empresa                  -- his_estructura.estrnro
Dim Area            As String   'Empresa                  -- his_estructura.estrnro
Dim SubDepto        As String   'Empresa                  -- his_estructura.estrnro
Dim NroCBU          As String   'Empresa                  -- his_estructura.estrnro
Dim Empremu         As String   'Remuneración del empleado
Dim GrupoSeguridad  As String   'Grupo de Seguridad
Dim Nro_GrupoSeguridad  As Long 'Grupo de Seguridad       -- his_estructura.estrnro

Dim FecCumpleBienios  As String   'Fecha de cumple Bienios
Dim CantBienios     As Long 'Cantidad de Bienios

Dim FFinContrato    As String
Dim Fecha_FinContrato As String
Dim Reporta_a       As String
Dim Nro_Reporta_a   As Long

Dim Ternro As Long

Dim NroTercero          As Long

Dim Nro_Legajo          As Long
'Dim Nro_TDocumento      As Long
Dim nro_nivest          As Long
Dim nro_estudio         As Long

Dim Nro_Nrodom          As String

Dim Nro_Barrio          As Long
Dim Nro_Localidad       As Long
Dim Nro_Zona            As Long
Dim Nro_Provincia       As Long
Dim Nro_Pais            As Long
Dim nro_paisnac         As Long

Dim nro_oficina         As Long
Dim nro_sector          As Long
Dim nro_categoria       As Long
Dim nro_cargo           As Long
Dim nro_ccosto          As Long
Dim nro_gerencia        As Long
Dim nro_AFP             As Long
Dim nro_sindicato       As Long
'Dim nro_osocial_ley     As Long
'Dim nro_planos_ley      As Long
Dim nro_osocial_elegida As Long
'Dim nro_planos_elegida  As Long
Dim nro_contrato        As Long
Dim nro_convenio        As Long
Dim nro_reghorario      As Long
Dim nro_formaliq        As Long
Dim nro_bancopago       As Long
Dim nro_mutual          As Long
Dim nro_sitrev          As Long
Dim nro_modcont         As Long
Dim nro_art             As Long
Dim nro_departamento    As Long
Dim nro_direccion       As Long
Dim nro_lpago           As Long
Dim nro_CajaComp        As Long
Dim nro_formapago       As Long
Dim nro_causabaja       As Long
Dim nro_empresa         As Long
Dim NroDom              As Long
'Dim nro_osl             As Long
'Dim nro_odon            As Long
'Dim nro_ose             As Long
'Dim nro_locacion        As Long
'Dim nro_area            As Long
'Dim nro_SubDepto        As Long
'Dim nro_empremu         As Long

Dim nro_estcivil        As Long
Dim nro_nacionalidad    As Long

Dim F_Nacimiento        As String
Dim F_Fallecimiento     As String
Dim F_Alta              As String
Dim F_Baja              As String
Dim F_Ingreso           As String

Dim Inserto_estr        As Boolean

Dim ter_oficina         As Long
Dim Ter_Empresa         As Long
Dim ter_afp             As Long
Dim ter_sindicato       As Long
'Dim ter_osocial_ley     As Long
Dim ter_osocial_elegida As Long
Dim ter_bancopago       As Long
Dim ter_Mutual          As Long
Dim ter_sexo            As Long
Dim ter_estudio         As Long
Dim ter_estado          As Long

Dim fpgo_bancaria       As Long

Dim rs As New ADODB.Recordset
Dim rs_Sql As New ADODB.Recordset
Dim rs_Empleado As New ADODB.Recordset
Dim rs_Tel As New ADODB.Recordset
Dim rs_repl As New ADODB.Recordset


Dim OficinaDesc         As Boolean   'Oficina                  -- his_estructura
Dim SecDesc             As Boolean   'Sector                   -- his_estructura
Dim CatDesc             As Boolean   'Categoria                -- his_estructura
Dim CarDesc             As Boolean   'Cargo                    -- his_estructura
Dim CCoDesc             As Boolean   'C.Costo                  -- his_estructura
Dim GerDesc             As Boolean   'Gerencia                 -- his_estructura
Dim DepDesc             As Boolean   'Departamento             -- his_estructura
Dim DirDesc             As Boolean   'Direccion                -- his_estructura
Dim AFPDesc             As Boolean   'Caja de Jubilacion       --
Dim SinDesc             As Boolean   'Sindicato                -- his_estructura
Dim OSoElegidaDesc      As Boolean   'Obra Social              -- his_estructura
'Dim PoSElegidaDesc      As Boolean   'Plan OS                  -- his_estructura
'Dim OSoLeyDesc          As Boolean   'Obra Social              -- his_estructura
'Dim PoSLeyDesc          As Boolean   'Plan OS                  -- his_estructura
Dim CotDesc             As Boolean   'Contrato                 -- his_estructura
Dim CovDesc             As Boolean   'Convenio                 -- his_estructura
Dim LPaDesc             As Boolean   'Lugar de Pago            -- his_estructura
Dim RegDesc             As Boolean   'Regimen Horario          -- his_estructura
Dim FLiDesc             As Boolean   'Forma de Liquidacion     -- his_estructura
Dim FPaDesc             As Boolean      'Forma de Pago            -- his_estructura
Dim BcoDesc             As Boolean      'Banco Pago               --
Dim MUTDesc             As Boolean      'Actividad                --
Dim CSJDesc             As Boolean      'Condicion SIJP           --
'Dim SReDesc             As Boolean      'Sit. de Revista SIJP     --
'Dim MCoDesc             As Boolean      'Mod. de Contrat. SIJP    --
Dim EmpDesc             As Boolean      'Empresa                  --
'Dim OSLDesc             As Boolean      'Empresa                  --
'Dim POdoDesc             As Boolean     'Empresa                  --
'Dim OSEDesc             As Boolean      'Empresa                  --
'Dim LocDesc             As Boolean      'Empresa                  --
'Dim AreaDesc             As Boolean     'Empresa                  --
'Dim SubDepDesc             As Boolean   'Empresa                  --

Dim IngresoDom          As Boolean

Dim rs_tdoc As New ADODB.Recordset
Dim rs_emp  As New ADODB.Recordset
Dim rs_tpl  As New ADODB.Recordset
Dim rs_leg  As New ADODB.Recordset

Dim Nroadtemplate As Long
Dim Nro_Institucion As Long

Dim Sigue As Boolean
Dim ExisteLeg As Boolean
Dim CalculaLegajo As Boolean
Dim conBienios As Boolean

    On Error GoTo SaltoLinea

    ' True indica que se hace por Descripcion. False por Codigo Externo

    OficinaDesc = True  ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    SecDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CatDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CarDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CCoDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    GerDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    DepDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    DirDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    AFPDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    SinDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    OSoElegidaDesc = True ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
'    PoSElegidaDesc = True ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
'    OSoLeyDesc = True   ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
'    PoSLeyDesc = True   ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CotDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CovDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    LPaDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    RegDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    FLiDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    FPaDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    BcoDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    MUTDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CSJDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
'    SReDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
'    MCoDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    EmpDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
'    OSLDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
'    POdoDesc = True     ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
'    OSEDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
'    LocDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
'    AreaDesc = True     ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
'    SubDepDesc = True   ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    
    conBienios = True
    
    Sigue = True 'Indica que si en el archivo viene mas de una vez un empleado, le crea las fases
    ExisteLeg = False
    'RegLeidos = RegLeidos + 1
    LineaCarga = LineaCarga + 1
    
    Flog.writeline
    FlogE.writeline
    FlogP.writeline
    
    'Legajo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Legajo"
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Legajo = Aux
    'Legajo = Mid(strReg, pos1, pos2 - pos1 + 1)
    If Legajo = "N/A" Or EsNulo(Legajo) Then
        CalculaLegajo = True
    Else
        StrSql = "SELECT * FROM empleado WHERE empleado.empleg = " & Legajo
        OpenRecordset StrSql, rs_emp
        If (Not rs_emp.EOF) Then
            If (Not Sigue) Then
                Texto = ": " & " - El Empleado ya Existe."
                NroColumna = 1
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                'Ok = False
                'RegError = RegError + 1
                'Exit Sub
            Else
                NroTercero = rs_emp!Ternro
                ExisteLeg = True
            End If
        End If
    End If
    
    'Apellido
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Apellido"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Apellido = Left(Aux, 25)
    
    '--------------
    'Apellido2
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Apellido2"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Apellido2 = Left(Aux, 25)
    
    '--------------
    
    'Nombre
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nombre"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    nombre = Left(Aux, 25)
    If (Apellido = "" Or Apellido = "N/A") And (nombre = "" Or nombre = "N/A") Then
        Texto = ": " & " - Debe Ingresar un Nombre y Apellido."
        NroColumna = 2
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    '---------------------
     'Nombre2
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nombre2"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    nombre2 = Left(Aux, 25)
    If (Apellido = "" Or Apellido = "N/A") And (nombre = "" Or nombre = "N/A") Then
        Texto = ": " & " - Debe Ingresar un Nombre y Apellido."
        NroColumna = 2
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    '-----------------------
    'Fecha de Nacimiento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de Nacimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Fnac = Aux
    If Fnac = "N/A" Then
       F_Nacimiento = "Null"
    Else
       F_Nacimiento = ConvFecha(Fnac)
    End If
    
    'Pais de Nacimiento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Pais de Nacimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    PaisNac = Aux
    If PaisNac <> "N/A" Then
        StrSql = " SELECT paisnro FROM pais WHERE UPPER(paisdesc) = '" & UCase(PaisNac) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_paisnac = rs_Sql!Paisnro
        Else
            StrSql = " INSERT INTO pais(paisdesc,paisdef) VALUES ('" & UCase(PaisNac) & "',0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_paisnac = getLastIdentity(objConn, "pais")
        End If
    Else
        nro_paisnac = 0
    End If
    
    'Nacionalidad
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nacionalidad"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Nacionalidad = Aux
    If Nacionalidad <> "N/A" Then
        StrSql = " SELECT nacionalnro FROM nacionalidad WHERE UPPER(nacionaldes) = '" & UCase(Nacionalidad) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_nacionalidad = rs_Sql!nacionalnro
        Else
            StrSql = " INSERT INTO nacionalidad(nacionaldes) VALUES ('" & UCase(Nacionalidad) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_nacionalidad = getLastIdentity(objConn, "nacionalidad")
        End If
    Else
        nro_nacionalidad = 0
    End If
    If nro_nacionalidad = 0 Then
        Texto = ": " & " - La Nacionalidad no Existe."
        NroColumna = 6
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    
    'Fecha de Ingreso al Pais
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de Ingreso al Pais"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Fing = Aux
    If (Fing = "N/A") Or EsNulo(Fing) Then
        F_Ingreso = "Null"
    Else
        F_Ingreso = ConvFecha(Fing)
    End If
    
    'Estado Civil
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estado Civil"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    EstCivil = Left(Aux, 30)
    If EstCivil <> "N/A" And Not EsNulo(EstCivil) Then
        StrSql = " SELECT estcivnro FROM estcivil WHERE UPPER(estcivdesabr) = '" & UCase(EstCivil) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_estcivil = rs_Sql!estcivnro
        Else
            StrSql = " INSERT INTO estcivil(estcivdesabr) VALUES ('" & UCase(EstCivil) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_estcivil = getLastIdentity(objConn, "estcivil")
        End If
    Else
        nro_estcivil = 0
    End If
    If nro_estcivil = 0 Then
        Texto = ": " & " - El Estado Civil no Existe."
        NroColumna = 8
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Sexo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sexo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Sexo = UCase(Aux)
    If (Sexo = "M") Or (Sexo = "-1") Or (Sexo = "MASCULINO") Then
        ter_sexo = -1
    Else
        ter_sexo = 0
    End If
                                                            
    'Fecha de alta
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de alta"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    FAlta = Aux
    If FAlta = "N/A" Or EsNulo(FAlta) Then
        F_Alta = "Null"
        Texto = ": " & " - La Fecha de Alta es Obligatoria."
        NroColumna = 10
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    Else
        F_Alta = ConvFecha(FAlta)
    End If
   
    'Estudia?
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estudia?"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Estudio = UCase(Aux)
    If Estudio <> "N/A" And Estudio <> "NO" Then
        If Estudio = "SI" Then
            ter_estudio = -1
        Else
            ter_estudio = 0
        End If
    Else
        ter_estudio = 0
    End If
    
    'Nivel de estudio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nivel de estudio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    NivEst = Left(Aux, 40)
    If NivEst <> "N/A" Then
        StrSql = " SELECT nivnro FROM nivest WHERE UPPER(nivdesc) = '" & UCase(NivEst) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_nivest = rs_Sql!nivnro
        Else
            StrSql = " INSERT INTO nivest(nivdesc,nivsist,nivobligatorio,nivestfli) VALUES ('" & UCase(NivEst) & "',-1,0,-1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_nivest = getLastIdentity(objConn, "nivest")
        End If
    Else
        nro_nivest = 0
    End If
    
    
  'RUT
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "RUT"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    RUT = Left(Aux, 30)
   
    StrSql = "SELECT * FROM empleado "
    StrSql = StrSql & " INNER JOIN ter_doc ON ter_doc.ternro = empleado.ternro "
    StrSql = StrSql & " WHERE ter_doc.tidnro = 1 AND ter_doc.nrodoc = '" & RUT & "'"
    OpenRecordset StrSql, rs_tdoc
    If (Not rs_tdoc.EOF) Then
        'Diego Rosso - 26-02-07 - Se modifico para que cuando venga un rut ya asignado tome el ternro del empleado
                                    'que lo tiene asignado.
        If (Not Sigue) Then
           Texto = ": " & " - El RUT ya esta Asignado a otro Empleado."
            NroColumna = 15
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
           ' Ok = False
            RegError = RegError + 1
            Exit Sub
        Else
            NroTercero = rs_tdoc!Ternro
            ExisteLeg = True
            'Texto = ": " & " - Empleado: " & Legajo & " - Ese Tipo y Numero de Documento estan Asignados a otro Empleado."
            'nrocolumna = 14
            'Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
       End If
    End If


    'Hasta Aqui los Datos Obligatorios del Empleado
    IngresoDom = True
        
    'Calle
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Calle"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Calle = Left(Aux, 250)
    
    If Calle = "N/A" Then
        Calle = ""
        IngresoDom = False
    End If
    
    'Nro
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Nro"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Nro = Left(Aux, 8)
    If (Nro <> "N/A") Then
        Nro_Nrodom = Nro
    Else
        Nro_Nrodom = 0
    End If
    
    'Piso
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Piso"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Piso = Left(Aux, 8)
    If Piso = "N/A" Then
        Piso = ""
    End If
    
    'Departamento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Departamento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Depto = Left(Aux, 8)
    If Depto = "N/A" Then
        Depto = ""
    End If

    'Torre
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Torre"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Torre = Left(Aux, 8)
    If Torre = "N/A" Then
        Torre = ""
    End If
    
    'Manzana
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Manzana"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Manzana = Left(Aux, 8)
    If Manzana = "N/A" Then
        Manzana = ""
    End If

    'Codigo Postal
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Codigo Postal"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Cpostal = Left(Aux, 12)
    If Cpostal = "N/A" Then
        Cpostal = ""
    End If

    'Entre calles
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Entre calles"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Entre = Left(Aux, 80)
    If Entre = "N/A" Then
        Entre = ""
    End If

    'Barrio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Barrio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Barrio = Left(Aux, 30)
    If Barrio = "N/A" Then
        Barrio = ""
    End If

    'Comuna
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Comuna"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    '19/03/2010 - Se cambio la longitud a 60
    'Localidad = Left(aux, 30)
    Localidad = Left(Aux, 60)
    
    'Provincia     ----------------------------------------------------------------
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Provincia"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Provincia = Left(Aux, 30)
    
    'REgion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Region"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    '19/03/2010 - Se cambio la longitud a 60
    'Zona = Left(aux, 20)
    Zona = Left(Aux, 60)
    
    
    
    'Pais
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Pais"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Pais = Left(Aux, 20)
    If Pais <> "N/A" Then
        Call ValidarPais(Pais, Nro_Pais)
    Else
        Nro_Pais = 0
    End If
       If Localidad <> "N/A" Then
        Call ValidarLocalidad(Localidad, Nro_Localidad, Nro_Pais, Nro_Provincia, Nro_Zona)
    Else
        Nro_Localidad = 0
    End If
    If Provincia <> "N/A" Then
        Call ValidarProvincia(Provincia, Nro_Provincia, Nro_Pais)
    Else
        Nro_Provincia = 0
    End If
    If Zona <> "N/A" Then
        Call ValidarZona(Zona, Nro_Zona, Nro_Provincia)
    Else
        Nro_Zona = 0
    End If
    If (IngresoDom = True) And (Nro_Localidad = 0) Then
        Texto = ": " & " - Debe Ingresar la Localidad."
        NroColumna = 25
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    If (IngresoDom = True) And (Nro_Provincia = 0) Then
        Texto = ": " & " - Debe Ingresar la Provincia."
        NroColumna = 28
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    If (IngresoDom = True) And (Nro_Pais = 0) Then
        Texto = ": " & " - Debe Ingresar la Pais."
        NroColumna = 29
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Tel Particular
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tel Particular"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Telefono = Left(Aux, 20)
    If Telefono = "N/A" Then
        Telefono = ""
    End If
    
    'Tel Laboral
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tel Laboral"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    TelLaboral = Left(Aux, 20)
    If TelLaboral = "N/A" Then
        TelLaboral = ""
    End If
    
    'Tel Celular
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tel Celular"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    TelCelular = Left(Aux, 20)
    If TelCelular = "N/A" Then
        TelCelular = ""
    End If
    
    'Email
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Email"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Email = Left(Aux, 100)
    If Email = "N/A" Then
        Email = ""
    End If
    
    'Oficina
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Oficina"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Oficina = Aux

    If Oficina <> "N/A" And Not EsNulo(Oficina) Then
        If OficinaDesc Then
            Call ValidaEstructura(1, Oficina, nro_oficina, Inserto_estr)
        Else
           Call ValidaEstructuraCodExt(1, Oficina, nro_oficina, Inserto_estr)
        End If
         Call CreaTercero(10, Oficina, ter_oficina)
        
        If Inserto_estr Then
            Call CreaComplemento(1, ter_oficina, nro_oficina, Oficina)
            Inserto_estr = False
        End If
    Else
        nro_oficina = 0
    End If
    
    'Sector
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sector"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Sector = Aux
    ' Validacion y Creacion del Sector
    If Sector <> "N/A" And Not EsNulo(Sector) Then
        If SecDesc Then
            Call ValidaEstructura(2, Sector, nro_sector, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(2, Sector, nro_sector, Inserto_estr)
        End If
    Else
        nro_sector = 0
    End If

    'Convenio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Convenio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Convenio = Aux
    ' Validacion, Creacion del Convenio
    If Convenio <> "N/A" And Not EsNulo(Convenio) Then
        If CovDesc Then
            Call ValidaEstructura(19, Convenio, nro_convenio, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(19, Convenio, nro_convenio, Inserto_estr)
        End If
        
        If Inserto_estr Then
            Call CreaComplemento(19, 0, nro_convenio, Convenio)
            Inserto_estr = False
        End If
    Else
        nro_convenio = 0
    End If
    
    
    'Categoria
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Categoria"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    categoria = Aux
    ' Validacion, Creacion de la Categoria
    If (categoria <> "N/A" And nro_convenio <> 0) And Not EsNulo(categoria) Then
        If CatDesc Then
            'Call ValidaEstructura(3, categoria, nro_categoria, Inserto_estr)
            Call ValidaCategoria(3, categoria, nro_convenio, nro_categoria, Inserto_estr)
            
        Else
            'Call ValidaEstructuraCodExt(3, categoria, nro_categoria, Inserto_estr)
            Call ValidaCategoriaCodExt(3, categoria, nro_convenio, nro_categoria, Inserto_estr)
        End If
    Else
        nro_categoria = 0
    End If
    
    'Cargo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Cargo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Cargo = Aux
     If Cargo <> "N/A" And Not EsNulo(Cargo) Then
        If CarDesc Then
            Call ValidaEstructura(4, Cargo, nro_cargo, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(4, Cargo, nro_cargo, Inserto_estr)
        End If
        If Inserto_estr Then
            Call CreaComplemento(4, 0, nro_cargo, Cargo)
            Inserto_estr = False
        End If
    Else
        nro_cargo = 0
    End If

    'Centro de Costo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Centro de Costo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    CCosto = Aux
    ' Validacion y Creacion del Centro de Costo
    If CCosto <> "N/A" And Not EsNulo(CCosto) Then
        If CCoDesc Then
            Call ValidaEstructura(5, CCosto, nro_ccosto, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(5, CCosto, nro_ccosto, Inserto_estr)
        End If
    Else
        nro_ccosto = 0
    End If

    'Gerencia
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Gerencia"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Gerencia = Aux
    ' Validacion y Creacion de la Gerencia
    If Gerencia <> "N/A" And Not EsNulo(Gerencia) Then
        If GerDesc Then
            Call ValidaEstructura(6, Gerencia, nro_gerencia, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(6, Gerencia, nro_gerencia, Inserto_estr)
        End If
    Else
        nro_gerencia = 0
    End If

    
    'Departamento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Departamento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Departamento = Aux
    ' Validacion y Creacion del Departamento
    If Departamento <> "N/A" And Not EsNulo(Departamento) Then
        If DepDesc Then
            Call ValidaEstructura(9, Departamento, nro_departamento, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(9, Departamento, nro_departamento, Inserto_estr)
        End If
    Else
        nro_departamento = 0
    End If

    'Direccion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Direccion = Aux
    ' Validacion y Creacion de direccion
    If Direccion <> "N/A" And Not EsNulo(Direccion) Then
        If DirDesc Then
            Call ValidaEstructura(35, Direccion, nro_direccion, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(35, Direccion, nro_direccion, Inserto_estr)
        End If
    Else
        nro_direccion = 0
    End If
    
    
    'AFP
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "AFP"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    AFP = Aux
    ' Validacion y Creacion de la Caja de Jubilacion
    If AFP <> "N/A" And Not EsNulo(AFP) Then
        If AFPDesc Then
            Call ValidaEstructura(15, AFP, nro_AFP, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(15, AFP, nro_AFP, Inserto_estr)
        End If
        Call CreaTercero(6, AFP, ter_afp)
        
        If Inserto_estr Then
            Call CreaComplemento(15, ter_afp, nro_AFP, AFP)
        End If
    Else
        nro_AFP = 0
    End If

    'Sindicato
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sindicato"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Sindicato = Aux
    ' Validacion y Creacion del Sindicato
    If Sindicato <> "N/A" And Not EsNulo(Sindicato) Then
        If SinDesc Then
            Call ValidaEstructura(16, Sindicato, nro_sindicato, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(16, Sindicato, nro_sindicato, Inserto_estr)
        End If
        Call CreaTercero(5, Sindicato, ter_sindicato)
        
        If Inserto_estr Then
            Call CreaComplemento(16, ter_sindicato, nro_sindicato, Sindicato)
        End If
    Else
        nro_sindicato = 0
    End If
    
    
    'Sistema Salud/ISAPRE
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Obra Social elegida"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    OSocialElegida = Aux
    ' Validacion y Creacion de la Obra Social Elegida
    If OSocialElegida <> "N/A" And Not EsNulo(OSocialElegida) Then
        If OSoElegidaDesc Then
            Call ValidaEstructura(17, OSocialElegida, nro_osocial_elegida, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(17, OSocialElegida, nro_osocial_elegida, Inserto_estr)
        End If
        Call CreaTercero(4, OSocialElegida, ter_osocial_elegida)
        
        If Inserto_estr Then
            Call CreaComplemento(17, ter_osocial_elegida, nro_osocial_elegida, OSocialElegida)
        Else
            StrSql = " SELECT origen FROM replica_estr WHERE estrnro = " & nro_osocial_elegida
            OpenRecordset StrSql, rs_Sql
            ter_osocial_elegida = rs_Sql!Origen
            rs_Sql.Close
        End If
    Else
        nro_osocial_elegida = 0
    End If


    'Contrato
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Contrato"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Contrato = Aux
    ' Validacion y Creacion del Contrato
    If Contrato <> "N/A" And Not EsNulo(Contrato) Then
        If CotDesc Then
            Call ValidaEstructura(18, Contrato, nro_contrato, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(18, Contrato, nro_contrato, Inserto_estr)
        End If
        
        If Inserto_estr Then
            Call CreaComplemento(18, 0, nro_contrato, Contrato)
            Inserto_estr = False
        End If
    Else
        nro_contrato = 0
    End If
    
    'Fecha de fin de contrato
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de fin de contrato"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    FFinContrato = Aux
    If FFinContrato = "N/A" Or EsNulo(FFinContrato) Then
        Fecha_FinContrato = "Null"
    Else
        Fecha_FinContrato = ConvFecha(FFinContrato)
    End If
    
    'Lugar de pago
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Lugar de pago"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    LPago = Aux
    ' Validacion y Creacion del Lugar de Pago
    If LPago <> "N/A" And Not EsNulo(LPago) Then
        If LPaDesc Then
            Call ValidaEstructura(20, LPago, nro_lpago, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(20, LPago, nro_lpago, Inserto_estr)
        End If
    Else
        nro_lpago = 0
    End If

    'Regimen Horario
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Regimen Horario"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    RegHorario = Aux
    If RegHorario <> "N/A" And Not EsNulo(RegHorario) Then
        If RegDesc Then
            Call ValidaEstructura(21, RegHorario, nro_reghorario, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(21, RegHorario, nro_reghorario, Inserto_estr)
        End If
    Else
        nro_reghorario = 0
    End If

    'Forma de Liquidacion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Forma de Liquidacion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    FormaLiq = Aux
    If FormaLiq <> "N/A" And Not EsNulo(FormaLiq) Then
        If FLiDesc Then
            Call ValidaEstructura(22, FormaLiq, nro_formaliq, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(22, FormaLiq, nro_formaliq, Inserto_estr)
        End If
        If Inserto_estr Then
            Call CreaComplemento(22, 0, nro_contrato, Contrato)
            Inserto_estr = False
        End If
    Else
        nro_formaliq = 0
    End If

    'Forma de Pago
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Forma de Pago"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    FormaPago = Aux
    If FormaPago <> "N/A" Then
        StrSql = " SELECT fpagnro FROM formapago WHERE fpagdescabr = '" & FormaPago & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_formapago = rs_Sql!fpagnro
        Else
            StrSql = " INSERT INTO formapago(fpagdescabr,fpagbanc,acunro,monnro) VALUES ('" & FormaPago & "',0,6,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            nro_formapago = getLastIdentity(objConn, "formapago")
        End If
    Else
        nro_formapago = 0
    End If
    
    'Banco de Pago
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Banco de Pago"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    BancoPago = Aux
    If BancoPago <> "N/A" And Not EsNulo(BancoPago) Then
        If BcoDesc Then
            Call ValidaEstructura(41, BancoPago, nro_bancopago, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(41, BancoPago, nro_bancopago, Inserto_estr)
        End If
        Call CreaTercero(13, BancoPago, ter_bancopago)
        
        If Inserto_estr Then
            Call CreaComplemento(41, ter_bancopago, nro_bancopago, BancoPago)
        End If
        fpgo_bancaria = -1
    Else
        nro_bancopago = 0
        fpgo_bancaria = 0
    End If
    
    'Nro de cuenta
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nro de cuenta"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    NroCuenta = Aux
    If NroCuenta = "N/A" Then
        NroCuenta = ""
    End If
    
    'CBU
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "CBU"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    NroCBU = Aux
    If NroCBU = "N/A" Then
        NroCBU = ""
    End If
    
    'Sucursal del banco
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sucursal del banco"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    SucBanco = Aux
    If SucBanco = "N/A" Then
        SucBanco = ""
    Else
        SucBanco = Left(SucBanco, 10)
    End If


    'Nro de cuenta de acreditacion empresa
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nro de cuenta de acreditacion empresa"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    NroCuentaAcreditacionE = Aux
    If NroCuentaAcreditacionE = "N/A" Or EsNulo(NroCuentaAcreditacionE) Then
        NroCuentaAcreditacionE = ""
    Else
        StrSql = "SELECT * FROM ctabancaria WHERE cbnro ='" & NroCuentaAcreditacionE & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
            Texto = ": " & " - Nro de cuenta de acreditacion empresa no existe."
            NroColumna = 59
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            NroCuentaAcreditacionE = ""
        End If
    End If
    
    
    'Mutual
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Mutual"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Mutual = Aux
    If Mutual <> "N/A" And Not EsNulo(Mutual) Then
        If MUTDesc Then
            Call ValidaEstructura(40, Mutual, nro_mutual, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(40, Mutual, nro_mutual, Inserto_estr)
        End If
            Call CreaTercero(8, Mutual, ter_Mutual)
        
        If Inserto_estr Then
            Call CreaComplemento(40, ter_Mutual, nro_mutual, Mutual)
        End If
    Else
        nro_mutual = 0
    End If
    
    
    'Caja de compensacion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Caja Compensacion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    CajaComp = Aux
    If CajaComp <> "N/A" And Not EsNulo(CajaComp) Then
        If CSJDesc Then
            Call ValidaEstructura(44, CajaComp, nro_CajaComp, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(44, CajaComp, nro_CajaComp, Inserto_estr)
        End If
    Else
        nro_CajaComp = 0
    End If

 
    'Estado del empleado
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estado del empleado"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Estado = Aux
    If UCase(Estado) = "ACTIVO" Then
        ter_estado = -1
    Else
        ter_estado = 0
    End If
    
    'Causa de baja
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Causa de baja"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    CausaBaja = Aux
    If Not EsNulo(CausaBaja) And CausaBaja <> "N/A" Then
        StrSql = " SELECT caunro FROM causa WHERE caudes = '" & CausaBaja & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_causabaja = rs_Sql!caunro
        Else
            StrSql = " INSERT INTO causa(caudes,causist,caudesvin,empnro) VALUES ('" & CausaBaja & "',0,-1,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            nro_causabaja = getLastIdentity(objConn, "causa")
        End If
    Else
        nro_causabaja = 0
    End If
    
    
    'Fecha de baja
    NroColumna = NroColumna + 1
        ' Si hay una causa de baja, se tiene que cargar ssi la Fecha de Baja (tablero adp)
    If nro_causabaja <> 0 Then
        Obligatorio = True
    Else
        Obligatorio = False
    End If
    Campoetiqueta = "Fecha de baja"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    FBaja = Aux
    If EsNulo(FBaja) Or FBaja = "N/A" Then
        F_Baja = "Null"
    Else
        F_Baja = ConvFecha(FBaja)
    End If
    
    
    'Empresa
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Empresa"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Empresa = Aux
    Else
        pos2 = Len(strReg)
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Empresa = Aux
    End If
    If Empresa <> "N/A" And Not EsNulo(Empresa) Then
        If EmpDesc Then
            Call ValidaEstructura(10, Empresa, nro_empresa, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(10, Empresa, nro_empresa, Inserto_estr)
        End If
        Call CreaTercero(10, Empresa, Ter_Empresa)
        
        If Inserto_estr Then
            Call CreaComplemento(10, Ter_Empresa, nro_empresa, Empresa)
        End If
    Else
        nro_empresa = 0
    End If
    
    'Remuneración del Empleado
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Remuneración del Empleado"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Empremu = Aux
    If Empremu = "N/A" Or EsNulo(Empremu) Then
        Empremu = "Null"
    End If
   
    'Modelo de Organizacion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Modelo de Organizacion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        ModOrg = Aux
        'desde aca
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        ModOrg = Aux
        If ModOrg = "N/A" Or EsNulo(ModOrg) Then
            'agrego codigo sebastian stremel 15/09/2011
            StrSql = "SELECT * FROM adptemplate WHERE tplatedefault = -1"
            OpenRecordset StrSql, rs_tpl
            If Not rs_tpl.EOF Then
                nro_ModOrg = rs_tpl!tplatenro
            Else
                StrSql = "SELECT top 1 * FROM adptemplate"
                OpenRecordset StrSql, rs_tpl
                If rs_tpl.EOF Then
                    Texto = ": no hay modelos de organizacion"
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                    RegError = RegError + 1
                    Exit Sub
                Else
                    nro_ModOrg = rs_tpl!tplatenro
                End If
                
            End If
            
           
        Else
            StrSql = "SELECT * FROM adptemplate WHERE tplatedesabr = '" & ModOrg & "'"
            OpenRecordset StrSql, rs_tpl
            If rs_tpl.EOF Then
                StrSql = "INSERT INTO adptemplate (tplatedesabr,tplatedefault) VALUES ('" & ModOrg & "',-1)"
                objConn.Execute StrSql, , adExecuteNoRecords
                nro_ModOrg = getLastIdentity(objConn, "adptemplate")
            Else
                nro_ModOrg = rs_tpl!tplatenro
            End If
        End If
    Else
            StrSql = "SELECT * FROM adptemplate WHERE tplatedefault = -1"
            OpenRecordset StrSql, rs_tpl
            If Not rs_tpl.EOF Then
                nro_ModOrg = rs_tpl!tplatenro
            Else
                StrSql = "SELECT top 1 * FROM adptemplate"
                OpenRecordset StrSql, rs_tpl
                If rs_tpl.EOF Then
                    Texto = ": no hay modelos de organizacion"
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                    RegError = RegError + 1
                    Exit Sub
                Else
                    nro_ModOrg = rs_tpl!tplatenro
                End If
                
            End If

    End If
        
        'hasta aca
'        If ModOrg = "N/A" Or EsNulo(ModOrg) Then
'            nro_ModOrg = 0
'        Else
'            StrSql = "SELECT * FROM adptemplate WHERE tplatedesabr = '" & ModOrg & "'"
'            OpenRecordset StrSql, rs_tpl
'            If rs_tpl.EOF Then
'                StrSql = "INSERT INTO adptemplate (tplatedesabr,tplatedefault) VALUES ('" & ModOrg & "',-1)"
'                objConn.Execute StrSql, , adExecuteNoRecords
'                nro_ModOrg = getLastIdentity(objConn, "adptemplate")
'            Else
'                nro_ModOrg = rs_tpl!tplatenro
'            End If
'        End If
'    Else
'       nro_ModOrg = 0
'    End If
'------------------------------------------------------------------------------
    'Reporta_a  campo empleado.empreporta va el tercero
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Reporta_a"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Reporta_a = Aux
        If Not EsNulo(Reporta_a) And Reporta_a <> "N/A" Then
            If IsNumeric(Reporta_a) Then
                StrSql = "SELECT * FROM empleado WHERE empleado.empleg = " & Reporta_a
                If rs_emp.State = adStateOpen Then rs_emp.Close
                OpenRecordset StrSql, rs_emp
                If (Not rs_emp.EOF) Then
                    Nro_Reporta_a = rs_emp!Ternro
                Else
                    Nro_Reporta_a = 0
                    Texto = ": " & "El Empleado " & Reporta_a & " no existe."
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                End If
            Else
                Nro_Reporta_a = 0
                Texto = "El valor no es numérico."
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            End If
        End If
    Else
        Nro_Reporta_a = 0
        'no es obligatorio
    End If
    If rs_emp.State = adStateOpen Then rs_emp.Close
    

    'Grupo de Seguridad
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Grupo de Seguridad"
    pos1 = pos2 + 2
    'FGZ - 19/07/2011 - se agregaron campos por lo cual no debe hacer un LEN()
    'pos2 = Len(strReg) 'InStr(pos1, strReg, Separador) - 1
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 <= 0 Then
        pos2 = Len(strReg) 'es el ultimo campo (Fecha de bienios y cantidad de bienios no bienen)
        conBienios = False
    End If
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        GrupoSeguridad = Aux
        If GrupoSeguridad <> "N/A" And Not EsNulo(GrupoSeguridad) Then
            Call ValidaEstructura(7, GrupoSeguridad, Nro_GrupoSeguridad, Inserto_estr)
        Else
            Nro_GrupoSeguridad = 0
        End If
    Else
        Nro_GrupoSeguridad = 0
    End If
    
    
    If conBienios Then
        'Fecha de Bienios
        NroColumna = NroColumna + 1
        Obligatorio = False
        Campoetiqueta = "Fecha de Cumple Bienios"
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        'FecCumpleBienios = aux
        If EsNulo(Aux) Or Aux = "N/A" Then
            FecCumpleBienios = "NULL"
        Else
            FecCumpleBienios = ConvFecha(Aux)
        End If
        
        'Cantidad de Bienios
        NroColumna = NroColumna + 1
        Obligatorio = False
        Campoetiqueta = "Cantidad de Bienios"
        pos1 = pos2 + 2
        pos2 = Len(strReg) 'InStr(pos1, strReg, Separador) - 1
        If pos2 > 0 Then
            Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
            If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
                Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                RegError = RegError + 1
                Exit Sub
            End If
            'CantBienios = aux
            If Aux = "N/A" Or EsNulo(Aux) Then
                CantBienios = 0
            Else
                CantBienios = CLng(Aux)
            End If
        Else
            CantBienios = 0
        End If
    Else
        FecCumpleBienios = "NULL"
        CantBienios = 0
    End If
'Fin lectura de campos
' =====================================================================================================


  'JPB - Inicializo el pass+perfil (l_ess_Pass_Estandar y l_ess_Perfil_Estandar) por defecto del Autogestion en el caso que este habilitado el confper 12
  '--------------------------------
  Call ESS_Configuracion_Default
  '-------------------------------

  ' Inserto el Tercero
  If F_Nacimiento = "Null" Then
    F_Nacimiento = "''"
  End If
  If F_Ingreso = "Null" Then
    F_Ingreso = "''"
  End If
  If FecCumpleBienios = "NULL" Then
    FecCumpleBienios = "''"
  End If
  
  
  
  If CalculaLegajo Then
    Call CalcularLegajo(nro_empresa, Legajo)
  End If

    If Not ExisteLeg Then
        StrSql = " INSERT INTO tercero(ternom,ternom2,terape,terape2,terfecnac,tersex,terestciv,estcivnro,nacionalnro,paisnro,terfecing)"
        StrSql = StrSql & " VALUES('" & nombre & "','" & nombre2 & "','" & Apellido & "','" & Apellido2 & "'," & F_Nacimiento & "," & ter_sexo & "," & nro_estcivil & "," & nro_estcivil & ","
        If nro_nacionalidad <> 0 Then
            StrSql = StrSql & nro_nacionalidad & ","
        Else
            StrSql = StrSql & "null,"
        End If
        If nro_paisnac <> 0 Then
            StrSql = StrSql & nro_paisnac & ","
        Else
            StrSql = StrSql & "null,"
        End If
        StrSql = StrSql & F_Ingreso & ")"
        objConn.Execute StrSql, , adExecuteNoRecords

        NroTercero = getLastIdentity(objConn, "tercero")
        
        Texto = ": " & "Codigo de Tercero = " & NroTercero
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
    Else
        StrSql = " UPDATE tercero SET "
        StrSql = StrSql & " ternom = " & "'" & nombre & "'"
        StrSql = StrSql & ", terape = " & "'" & Apellido & "'"
        StrSql = StrSql & ", ternom2 = " & "'" & nombre2 & "'"
        StrSql = StrSql & ", terape2 = " & "'" & Apellido2 & "'"
        StrSql = StrSql & ", terfecnac = " & F_Nacimiento
        StrSql = StrSql & ", tersex = " & ter_sexo
        StrSql = StrSql & ", terestciv =" & nro_estcivil
        StrSql = StrSql & ", estcivnro =" & "'" & nro_estcivil & "'"
        If nro_nacionalidad <> 0 Then
            StrSql = StrSql & ", nacionalnro =" & nro_nacionalidad
        End If
        StrSql = StrSql & ", terfecing =" & F_Ingreso
        If nro_paisnac <> 0 Then
            StrSql = StrSql & ", paisnro =" & nro_paisnac
        End If
        StrSql = StrSql & " WHERE ternro = " & NroTercero
        objConn.Execute StrSql, , adExecuteNoRecords
      
        Texto = ": " & " - Empleado: " & Legajo & " - Ese Empleado ya existe en la base. Datos de tercero actualizados"
        NroColumna = 1
        Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    
    If Not EsNulo(FecCumpleBienios) And CantBienios > 0 Then
        StrSql = " INSERT INTO emp_bienios (cantidad,fechacumple,fechavig,tipocambio,gradoact,ternro)"
        StrSql = StrSql & " VALUES (" & CantBienios & "," & FecCumpleBienios & "," & FecCumpleBienios & ",1,0," & NroTercero & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = ": " & "Inserte Bienios - Cant:" & CantBienios & " - Fecha Cumple:" & FecCumpleBienios
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
    Else
        Texto = ": " & "No se insertaron Bienios"
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
    End If
    
    
    If Not ExisteLeg Then
        'Diego Rosso - 26-02-07 se agrego ternom2 y terape2 en el insert y en el update
        StrSql = " INSERT INTO empleado(empleg,empfecalta,empfecbaja,empest,empfaltagr,empfbajaprev,"
        StrSql = StrSql & "ternro,nivnro,empestudia,terape,ternom,terape2,ternom2,empinterno,empemail,"
        StrSql = StrSql & "empnro,tplatenro,empremu"
        If Nro_Reporta_a <> 0 Then
            StrSql = StrSql & ",empreporta"
        End If

        'JPB - Si esta habilitado el confper 12 asigno el pass+perfil por defecto al empleado
        '------------------------------------------------------------------------------------
        If (l_ess_Pass_Estandar <> "") And (l_ess_Perfil_Estandar <> "") Then
             StrSql = StrSql & ",empessactivo,emppass,perfnro"
        End If
        '------------------------------------------------------------------------------------
        StrSql = StrSql & ") VALUES("
        StrSql = StrSql & Legajo & "," & F_Alta & "," & F_Baja & "," & ter_estado & "," & F_Alta & "," & Fecha_FinContrato & ","
        StrSql = StrSql & NroTercero & "," & nro_nivest & "," & ter_estudio & ",'" & Apellido & "','"
        StrSql = StrSql & nombre & "','" & Apellido2 & "','" & nombre2 & "',Null,'" & Email & "',1," & nro_ModOrg & "," & Empremu
        If Nro_Reporta_a <> 0 Then
            StrSql = StrSql & "," & Nro_Reporta_a
        End If
        'JPB - Si esta habilitado el confper 12 asigno el pass+perfil por defecto al empleado
        '------------------------------------------------------------------------------------
        If (l_ess_Pass_Estandar <> "") And (l_ess_Perfil_Estandar <> "") Then
             StrSql = StrSql & ",-1,'" & l_ess_Pass_Estandar & "'," & l_ess_Perfil_Estandar
        End If
        '------------------------------------------------------------------------------------
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = ": " & "Empleado insertado - " & Legajo & " - " & Apellido & " - " & nombre
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
    Else
        StrSql = " UPDATE empleado SET "
        StrSql = StrSql & " empleg = " & Legajo
        StrSql = StrSql & " ,empfecalta = " & F_Alta
        StrSql = StrSql & " ,empfecbaja = " & F_Baja
        StrSql = StrSql & " ,empfbajaprev = " & Fecha_FinContrato
        StrSql = StrSql & " ,empest = " & ter_estado
        StrSql = StrSql & " ,empfaltagr = " & F_Alta
        StrSql = StrSql & " ,nivnro = " & nro_nivest
        StrSql = StrSql & " ,empestudia = " & ter_estudio
        StrSql = StrSql & " ,terape = " & "'" & Apellido & "'"
        StrSql = StrSql & " ,ternom = " & "'" & nombre & "'"
        StrSql = StrSql & " ,terape2 = " & "'" & Apellido2 & "'"
        StrSql = StrSql & " ,ternom2 = " & "'" & nombre2 & "'"
        StrSql = StrSql & " ,empemail = " & "'" & Email & "'"
        StrSql = StrSql & " ,empnro = 1 "
        StrSql = StrSql & " ,tplatenro =" & nro_ModOrg
        StrSql = StrSql & " ,Empremu =" & Empremu
        If Nro_Reporta_a <> 0 Then
            StrSql = StrSql & ", empreporta =" & Nro_Reporta_a
        End If
        
        'JPB - Si esta habilitado el confper 12 asigno el pass+perfil por defecto al empleado
        '------------------------------------------------------------------------------------
        If (l_ess_Pass_Estandar <> "") And (l_ess_Perfil_Estandar <> "") Then
            StrSql = StrSql & ", empessactivo = -1"
            StrSql = StrSql & ", emppass = '" & l_ess_Pass_Estandar & "'"
            StrSql = StrSql & ", perfnro =" & l_ess_Perfil_Estandar
        End If
        '------------------------------------------------------------------------------------
        
        StrSql = StrSql & " WHERE ternro = " & NroTercero
        objConn.Execute StrSql, , adExecuteNoRecords
    
        Texto = ": " & "Empleado Actualizado - " & Legajo & " - " & Apellido & " - " & nombre
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
    End If
    
    ' Inserto el Registro correspondiente en ter_tip
    If Not ExisteLeg Then
        StrSql = " INSERT INTO ter_tip(ternro,tipnro) VALUES(" & NroTercero & ",1)"
        objConn.Execute StrSql, , adExecuteNoRecords
    End If

' Inserto los Documentos
    If Not ExisteLeg Then

            StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
            StrSql = StrSql & " VALUES(" & NroTercero & ", 1,'" & RUT & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            Texto = ": " & "Inserte el Documento - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)

    Else

            StrSql = "SELECT * FROM ter_doc WHERE ternro = " & NroTercero
            StrSql = StrSql & " AND tidnro = 1"
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If rs.EOF Then
                StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
                StrSql = StrSql & " VALUES(" & NroTercero & ", 1,'" & RUT & "')"
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = ": " & "Inserte el Documento - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            Else
                StrSql = " UPDATE ter_doc SET "
                StrSql = StrSql & " nrodoc = '" & RUT & "'"
                StrSql = StrSql & " WHERE ternro = " & NroTercero
                StrSql = StrSql & " AND tidnro = 1  "
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = Texto = ": " & "Documento actualizado - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If

    End If
  
    
 

' Inserto el Domicilio
  If rs.State = adStateOpen Then
    rs.Close
  End If
  
  If Not ExisteLeg Then
    If (Nro_Localidad <> 0 And Nro_Provincia <> 0 And Nro_Pais <> 0) Then
        StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
        StrSql = StrSql & " VALUES(1," & NroTercero & ",-1,2)"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        NroDom = getLastIdentity(objConn, "cabdom")
      
        StrSql = " INSERT INTO detdom(domnro,calle,nro,piso,oficdepto,torre,manzana,codigopostal,entrecalles,"
        StrSql = StrSql & "locnro,provnro,paisnro,barrio,zonanro) "
        StrSql = StrSql & " VALUES (" & NroDom & ",'" & Calle & "','" & Nro_Nrodom & "','" & Piso & "','"
        StrSql = StrSql & Depto & "','" & Torre & "','" & Manzana & "','" & Cpostal & "','" & Entre & "'," & Nro_Localidad & ","
        StrSql = StrSql & Nro_Provincia & "," & Nro_Pais & ",'" & Barrio & "'," & Nro_Zona & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
      
        Texto = ": " & "Inserte el Domicilio - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        
        If Telefono <> "" Then
            'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
            StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
            StrSql = StrSql & " VALUES(" & NroDom & ",'" & Telefono & "',0,-1,0,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            Texto = ": " & "Inserte el Telefono Principal - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        End If
        If TelLaboral <> "" Then
            StrSql = "SELECT * FROM telefono "
            StrSql = StrSql & " WHERE domnro =" & NroDom
            StrSql = StrSql & " AND telnro ='" & TelLaboral & "'"
            If rs_Tel.State = adStateOpen Then rs_Tel.Close
            OpenRecordset StrSql, rs_Tel
            If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelLaboral & "',0,0,0,3)"
                objConn.Execute StrSql, , adExecuteNoRecords
                  
                Texto = ": " & "Inserte el Telefono Laboral - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
        If TelCelular <> "" Then
            StrSql = "SELECT * FROM telefono "
            StrSql = StrSql & " WHERE domnro =" & NroDom
            StrSql = StrSql & " AND telnro ='" & TelCelular & "'"
            If rs_Tel.State = adStateOpen Then rs_Tel.Close
            OpenRecordset StrSql, rs_Tel
            If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelCelular & "',0,0,-1,2)"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Inserte el Telefono Celular - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
    End If
  Else
    If (Nro_Localidad <> 0 And Nro_Provincia <> 0 And Nro_Pais <> 0) Then
        StrSql = "SELECT * FROM cabdom  "
        StrSql = StrSql & " WHERE tipnro = 1"
        StrSql = StrSql & " AND ternro = " & NroTercero
        StrSql = StrSql & " AND domdefault = -1"
        StrSql = StrSql & " AND tidonro = 2"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
          StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
          StrSql = StrSql & " VALUES(1," & NroTercero & ",-1,2)"
          objConn.Execute StrSql, , adExecuteNoRecords
          
          NroDom = getLastIdentity(objConn, "cabdom")
        
          StrSql = " INSERT INTO detdom(domnro,calle,nro,piso,oficdepto,torre,manzana,codigopostal,entrecalles,"
          StrSql = StrSql & "locnro,provnro,paisnro,barrio,zonanro) "
          StrSql = StrSql & " VALUES (" & NroDom & ",'" & Calle & "','" & Nro_Nrodom & "','" & Piso & "','"
          StrSql = StrSql & Depto & "','" & Torre & "','" & Manzana & "','" & Cpostal & "','" & Entre & "'," & Nro_Localidad & ","
          StrSql = StrSql & Nro_Provincia & "," & Nro_Pais & ",'" & Barrio & "'," & Nro_Zona & ")"
          objConn.Execute StrSql, , adExecuteNoRecords
        
          Texto = ": " & "Inserte el Domicilio - "
          Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
          
          If Telefono <> "" Then
            'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
              StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
              StrSql = StrSql & " VALUES(" & NroDom & ",'" & Telefono & "',0,-1,0,1)"
              objConn.Execute StrSql, , adExecuteNoRecords

              Texto = ": " & "Inserte el Telefono Principal - "
              Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
          End If
          If TelLaboral <> "" Then
              StrSql = "SELECT * FROM telefono "
              StrSql = StrSql & " WHERE domnro =" & NroDom
              StrSql = StrSql & " AND telnro ='" & TelLaboral & "'"
              If rs_Tel.State = adStateOpen Then rs_Tel.Close
              OpenRecordset StrSql, rs_Tel
              If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                  StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                  StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelLaboral & "',0,0,0,3)"
                  objConn.Execute StrSql, , adExecuteNoRecords
                    
                  Texto = ": " & "Inserte el Telefono Laboral - "
                  Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
              End If
          End If
          If TelCelular <> "" Then
              StrSql = "SELECT * FROM telefono "
              StrSql = StrSql & " WHERE domnro =" & NroDom
              StrSql = StrSql & " AND telnro ='" & TelCelular & "'"
              If rs_Tel.State = adStateOpen Then rs_Tel.Close
              OpenRecordset StrSql, rs_Tel
              If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                  StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                  StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelCelular & "',0,0,-1,2)"
                  objConn.Execute StrSql, , adExecuteNoRecords
                  Texto = ": " & "Inserte el Telefono Celular - "
                  Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
              End If
          End If
        Else
            StrSql = " UPDATE detdom SET "
            StrSql = StrSql & " calle =" & "'" & Calle & "'"
            StrSql = StrSql & ",nro =" & "'" & Nro_Nrodom & "'"
            StrSql = StrSql & ",piso =" & "'" & Piso & "'"
            StrSql = StrSql & ",oficdepto =" & "'" & Depto & "'"
            StrSql = StrSql & ",torre =" & "'" & Torre & "'"
            StrSql = StrSql & ",manzana =" & "'" & Manzana & "'"
            StrSql = StrSql & ",codigopostal =" & "'" & Cpostal & "'"
            StrSql = StrSql & ",entrecalles =" & "'" & Entre & "'"
            StrSql = StrSql & ",locnro =" & Nro_Localidad
            StrSql = StrSql & ",provnro =" & Nro_Provincia
            StrSql = StrSql & ",paisnro =" & Nro_Pais
            StrSql = StrSql & ", zonanro =" & Nro_Zona
            StrSql = StrSql & " WHERE domnro = " & rs!domnro
            objConn.Execute StrSql, , adExecuteNoRecords
        
            Texto = ": " & "Domicilio Actualizado - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        
            If Telefono <> "" Then
                StrSql = "SELECT * FROM telefono "
                StrSql = StrSql & " WHERE domnro =" & rs!domnro
                StrSql = StrSql & " AND telnro ='" & Telefono & "'"
                If rs_Tel.State = adStateOpen Then rs_Tel.Close
                OpenRecordset StrSql, rs_Tel
                If rs_Tel.EOF Then
                    'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                    StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                    StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & Telefono & "',0,-1,0,1)"
                    objConn.Execute StrSql, , adExecuteNoRecords
                      
                    Texto = ": " & "Inserte el Telefono Principal - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            End If
            If TelLaboral <> "" Then
                StrSql = "SELECT * FROM telefono "
                StrSql = StrSql & " WHERE domnro =" & rs!domnro
                StrSql = StrSql & " AND telnro ='" & TelLaboral & "'"
                If rs_Tel.State = adStateOpen Then rs_Tel.Close
                OpenRecordset StrSql, rs_Tel
                If rs_Tel.EOF Then
                    'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                    StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                    StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & TelLaboral & "',0,0,0,3)"
                    objConn.Execute StrSql, , adExecuteNoRecords
                      
                    Texto = ": " & "Inserte el Telefono Laboral - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            End If
            If TelCelular <> "" Then
                StrSql = "SELECT * FROM telefono "
                StrSql = StrSql & " WHERE domnro =" & rs!domnro
                StrSql = StrSql & " AND telnro ='" & TelCelular & "'"
                If rs_Tel.State = adStateOpen Then rs_Tel.Close
                OpenRecordset StrSql, rs_Tel
                If rs_Tel.EOF Then
                    'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                    StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                    StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & TelCelular & "',0,0,-1,2)"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = ": " & "Inserte el Telefono Celular - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            End If
        End If
    End If
  End If
  
  
  If Not ExisteLeg Then
        ' Inserto las Fases
        StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
        StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
        If nro_causabaja <> 0 Then
          StrSql = StrSql & nro_causabaja
        Else
          StrSql = StrSql & "null"
        End If
        If UCase(F_Baja) <> "NULL" Then
          StrSql = StrSql & ", 0 "
        Else
          StrSql = StrSql & "," & ter_estado
        End If
        StrSql = StrSql & ",-1,-1,-1,-1,-1)"
          'StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        If nro_causabaja <> 0 Then
            Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
        End If
    
  Else
  
        StrSql = "SELECT * FROM fases WHERE estado = -1 AND sueldo = -1 AND vacaciones = -1 AND indemnizacion = -1 AND real = -1 AND empleado = " & NroTercero
        OpenRecordset StrSql, rs
        
        If rs.EOF Then
            StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
            StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
            If nro_causabaja <> 0 Then
              StrSql = StrSql & nro_causabaja
            Else
              StrSql = StrSql & "null"
            End If
            If UCase(F_Baja) <> "NULL" Then
              StrSql = StrSql & ", 0 "
            Else
              StrSql = StrSql & "," & ter_estado
            End If
            StrSql = StrSql & ",-1,-1,-1,-1,-1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            If nro_causabaja <> 0 Then
                Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
            End If
            
        Else
            StrSql = " UPDATE fases SET "
             'StrSql = StrSql & " altfec =" & F_Alta    ' xxx
             'StrSql = StrSql & ",bajfec =" & F_Baja
            StrSql = StrSql & " bajfec =" & F_Baja
            If nro_causabaja <> 0 Then
               StrSql = StrSql & ", caunro =" & nro_causabaja
            End If
            If UCase(F_Baja) <> "NULL" Then
               StrSql = StrSql & ", estado = 0 "
            End If
            StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
            objConn.Execute StrSql, , adExecuteNoRecords
        
            Texto = ": " & "Fase Actualizada - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            
            If nro_causabaja <> 0 Then
                Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
            End If
            
        End If
  End If
  
  
  'Inserto la cuenta bancaria
    If Not ExisteLeg Then
        If (nro_formapago <> 0 And ter_bancopago <> 0 And NroCuenta <> "") Then
                StrSql = " INSERT INTO ctabancaria (ternro,fpagnro,banco,ctabestado,"
                StrSql = StrSql & "ctabsuc,ctabnro,ctabporc,ctabcbu"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",ctabacred"
                End If
                StrSql = StrSql & ") VALUES ("
                StrSql = StrSql & NroTercero & "," & nro_formapago & "," & ter_bancopago & ","
                StrSql = StrSql & "-1,'" & Left(SucBanco, 10) & "','" & NroCuenta & "',100,'" & NroCBU & "'"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",'" & NroCuentaAcreditacionE & "'"
                End If
                StrSql = StrSql & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Inserte la Cuenta Bancaria - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
        End If
    Else
        If (nro_formapago <> 0 And ter_bancopago <> 0 And NroCuenta <> "") Then
            StrSql = "SELECT * FROM ctabancaria"
            StrSql = StrSql & " WHERE ctabancaria.ternro =" & NroTercero
            StrSql = StrSql & " AND ctabestado = -1 "
            StrSql = StrSql & " AND banco =" & ter_bancopago
            StrSql = StrSql & " AND fpagnro =" & nro_formapago
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If rs.EOF Then
                StrSql = " INSERT INTO ctabancaria (ternro,fpagnro,banco,ctabestado,"
                StrSql = StrSql & "ctabsuc,ctabnro,ctabporc,ctabcbu"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",ctabacred"
                End If
                StrSql = StrSql & ") VALUES ("
                StrSql = StrSql & NroTercero & "," & nro_formapago & "," & ter_bancopago & ","
                StrSql = StrSql & "-1,'" & Left(SucBanco, 10) & "','" & NroCuenta & "',100,'" & NroCBU & "'"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",'" & NroCuentaAcreditacionE & "'"
                End If
                StrSql = StrSql & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Inserte la Cuenta Bancaria - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            Else
                If rs!ctabnro = NroCuenta Then
                    StrSql = "UPDATE ctabancaria SET "
                    StrSql = StrSql & " ctabsuc = '" & SucBanco & "'"
                    If Not EsNulo(NroCuentaAcreditacionE) Then
                        StrSql = StrSql & ", ctabacred = '" & NroCuentaAcreditacionE & "'"  '21-12-10
                    End If
                    StrSql = StrSql & ", ctabnro = " & "'" & NroCuenta & "'"
                    StrSql = StrSql & ", ctabporc = 100 "
                    StrSql = StrSql & ", ctabcbu = '" & NroCBU & "'"
                    StrSql = StrSql & " WHERE ctabancaria.ternro =" & NroTercero
                    StrSql = StrSql & " AND ctabestado = -1 "
                    StrSql = StrSql & " AND banco =" & ter_bancopago
                    StrSql = StrSql & " AND fpagnro =" & nro_formapago
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    Texto = ": " & "Cuenta Bancaria actualizada- "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                Else
                    'Desactivo la anterior
                    StrSql = " UPDATE ctabancaria SET "
                    StrSql = StrSql & " ctabestado = 0 "
                    StrSql = StrSql & " WHERE cbnro = " & rs!Cbnro
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    'inserto la nueva
                    StrSql = " INSERT INTO ctabancaria (ternro,fpagnro,banco,ctabestado,"
                    StrSql = StrSql & "ctabsuc,ctabnro,ctabporc,ctabcbu"
                    If Not EsNulo(NroCuentaAcreditacionE) Then
                        StrSql = StrSql & ",ctabacred"
                    End If
                    StrSql = StrSql & ") VALUES ("
                    StrSql = StrSql & NroTercero & "," & nro_formapago & "," & ter_bancopago & ","
                    StrSql = StrSql & "-1,'" & Left(SucBanco, 10) & "','" & NroCuenta & "',100,'" & NroCBU & "'"
                    If Not EsNulo(NroCuentaAcreditacionE) Then
                        StrSql = StrSql & ",'" & NroCuentaAcreditacionE & "'"
                    End If
                    StrSql = StrSql & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = ": " & "Inserte la Cuenta Bancaria - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            End If
        End If
    End If
  
  'Inserto las Estructuras
'  Call AsignarEstructura(1, nro_sucursal, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(2, nro_sector, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(3, nro_categoria, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(4, nro_puesto, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(5, nro_ccosto, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(6, nro_gerencia, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(7, Nro_GrupoSeguridad, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(9, nro_departamento, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(10, nro_empresa, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(15, nro_cajajub, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(16, nro_sindicato, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(17, nro_osocial_elegida, NroTercero, F_Alta, F_Baja)
'  'Call AsignarEstructura(18, nro_contrato, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(18, nro_contrato, NroTercero, F_Alta, Fecha_FinContrato)
'  Call AsignarEstructura(19, nro_convenio, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(20, nro_lpago, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(21, nro_reghorario, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(22, nro_formaliq, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(23, nro_planos_elegida, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(24, nro_osocial_ley, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(25, nro_planos_ley, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(29, nro_mutual, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(30, nro_sitrev, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(31, nro_CajaComp, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(35, nro_direccion, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(40, nro_art, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(41, nro_bancopago, NroTercero, F_Alta, F_Baja)
  
  
  Call AsignarEstructura_NEW(1, nro_oficina, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(2, nro_sector, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(3, nro_categoria, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(4, nro_cargo, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(5, nro_ccosto, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(6, nro_gerencia, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(7, Nro_GrupoSeguridad, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(9, nro_departamento, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(10, nro_empresa, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(15, nro_AFP, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(16, nro_sindicato, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(17, nro_osocial_elegida, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(18, nro_contrato, NroTercero, F_Alta, F_Baja)
  'Call AsignarEstructura_NEW(18, nro_contrato, NroTercero, F_Alta, Fecha_FinContrato)
  Call AsignarEstructura_NEW(19, nro_convenio, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(20, nro_lpago, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(21, nro_reghorario, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(22, nro_formaliq, NroTercero, F_Alta, F_Baja)
  'Call AsignarEstructura_NEW(23, nro_planos_elegida, NroTercero, F_Alta, F_Baja)
  'Call AsignarEstructura_NEW(24, nro_osocial_ley, NroTercero, F_Alta, F_Baja)
  'Call AsignarEstructura_NEW(25, nro_planos_ley, NroTercero, F_Alta, F_Baja)
  'Call AsignarEstructura_NEW(29, nro_actividad, NroTercero, F_Alta, F_Baja)
  'Call AsignarEstructura_NEW(30, nro_sitrev, NroTercero, F_Alta, F_Baja)
  'Call AsignarEstructura_NEW(31, nro_CajaComp, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(35, nro_direccion, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(40, nro_mutual, NroTercero, F_Alta, F_Baja)
  'Call AsignarEstructura_NEW(41, nro_bancopago, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(44, nro_CajaComp, NroTercero, F_Alta, F_Baja)
 
  
Texto = ": " & "Linea procesada correctamente "
Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
'LineaOK.Writeline Mid(strReg, 1, Len(strReg))
OK = True
         
FinLinea:
If rs.State = adStateOpen Then
    rs.Close
End If
Exit Sub

SaltoLinea:
    Texto = ": " & " - Error:" & Err.Description
    NroColumna = 1
    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    MyRollbackTrans
    OK = False
    GoTo FinLinea
End Sub


Public Sub LineaModelo_607_old(ByVal strReg As String, ByRef OK As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de Empleados de Chile
' Autor      : FGZ
' Fecha      : 30/07/2004
' Ultima Mod.: 27/04/2005 - FGZ - Estandarizacion del proceso
'              27/06/2005 - FGZ - Fecha fin de contrato.
'              22/12/2006 - Diego Rosso - Se agrego apellido2, nombre2 y se le cambiaron los nombres a
'                                           varias estructuras para la nacionalizacion
'              26-02-2007 - Diego Rosso - 'No grababa el terape2 y el ternom2 en la tabla empleado. Tambien se cambio para que modifique el empleado cuando el rut ya existe en la BD
'              16-12-2010 - Leticia A. - al dar de baja --> agregar causa de baja a la Fase e Inactivarla.
'                                        se agrega chequeo situacion de revista (tiene causa baja desvinculac)
'                                        arreglar consulta en cuenta bancaria.
' ---------------------------------------------------------------------------------------------
Dim pos1            As Long
Dim pos2            As Long

Dim Legajo          As String   'LEGAJO                   -- empleado.empleg
Dim Apellido        As String   'APELLIDO                 -- empleado.terape y tercero.terape
Dim Apellido2       As String   'APELLIDO2                -- empleado.terape2 y tercero.terape2
Dim nombre          As String   'NOMBRE                   -- empleado.ternom y tercero.ternom
Dim nombre2         As String   'NOMBRE2                  -- empleado.ternom2 y tercero.ternom2
Dim Fnac            As String   'FNAC                     -- tercero.terfecna
Dim Nacionalidad    As String   'Nacionalidad             -- tercero.nacionalnro
Dim PaisNac         As String   'Pais de Nacimiento       -- tercero.paisnro
Dim Fing            As String   'Fec.Ingreso al Pais      -- terecro.terfecing
Dim EstCivil        As String   'Est.Civil                -- tercero.estcivnro
Dim Sexo            As String   'Sexo                     -- tercero.tersex
Dim FAlta           As String   'Fec. de Alta             -- empleado.empfaltagr y fases.altfec
Dim Estudio         As String   'Estudia                  -- empleado.empestudia
Dim NivEst          As String   'Nivel de Estudio         -- empleado.nivnro
'Dim Tdocu           As String   'Tipo Documento          -- ter_dpc.tidnro (DU)
'Dim Ndocu           As String   'Nro. Documento          -- ter_doc.nrodoc
'Dim Cuil            As String   'CUIL                    -- ter_doc.nrodoc (10)
Dim RUT             As String    ' RUT                    --ter_doc.nrodoc (1)
Dim Calle           As String   'Calle                    -- detdom.calle
Dim Nro             As String   'Número                   -- detdom.nro
Dim Piso            As String   'Piso                     -- detdom.piso
Dim Depto           As String   'Depto                    -- detdom.depto
Dim Torre           As String   'Torre                    -- detdom.torre
Dim Manzana         As String   'Manzana                  -- detdom.manzana
Dim Cpostal         As String   'Cpostal                  -- detdom.codigopostal
Dim Entre           As String   'Entre Calles             -- detdom.entrecalles
Dim Barrio          As String   'Barrio                   -- detdom.barrio
Dim Localidad       As String   'Localidad(comuna)        -- detdom.locnro
'Dim Partido         As String   'Partido                 -- detdom.partnro
Dim Zona            As String   'Zona (region)            -- detdom.zonanro
Dim Provincia       As String   'Provincia                -- detdom.provnro
Dim Pais            As String   'Pais                     -- detdom.paisnro
Dim Telefono        As String   'Telefono                 -- telefono.telnro
Dim TelLaboral      As String   'Telefono                 -- telefono.telnro
Dim TelCelular      As String   'Telefono                 -- telefono.telnro
Dim Email           As String   'E-mail                   -- empleado.empemail
'Dim Sucursal        As String   'Sucursal                -- his_estructura.estrnro
Dim Oficina         As String   'Oficina                  -- his_estructura.estrnro
Dim Sector          As String   'Sector                   -- his_estructura.estrnro
Dim Convenio        As String   'Sucursal                 -- his_estructura.estrnro
Dim categoria       As String   'Categoria                -- his_estructura.estrnro
'Dim Puesto          As String   'Puesto                  -- his_estructura.estrnro
Dim Cargo          As String   'Cargo(Puesto)             -- his_estructura.estrnro
Dim CCosto          As String   'C.Costo                  -- his_estructura.estrnro
Dim Gerencia        As String   'Gerencia                 -- his_estructura.estrnro
Dim Departamento    As String   'Departamento             -- his_estructura.estrnro
Dim Direccion       As String   'Direccion                -- his_estructura.estrnro
'Dim CajaJub         As String   'Caja de Jubilacion      -- his_estructura.estrnro
Dim AFP             As String   'AFP                      -- his_estructura.estrnro
Dim Sindicato       As String   'Sindicato                -- his_estructura.estrnro
Dim OSocialLey      As String   'Obra Social              -- his_estructura.estrnro
Dim PlanOSLey       As String   'Plan OS                  -- his_estructura.estrnro
Dim OSocialElegida  As String   'sistema Salud/isapre     -- his_estructura.estrnro
'Dim PlanOSElegida  As String   'Plan OS                  -- his_estructura.estrnro
Dim Contrato        As String   'Contrato                 -- his_estructura.estrnro
'Dim Convenio       As String   'Convenio                 -- his_estructura.estrnro
Dim FContraro       As String  'fecha vencimiento contrato
Dim LPago           As String   'Lugar de Pago            -- his_estructura.estrnro
Dim RegHorario      As String   'Regimen Horario          -- his_estructura.estrnro
Dim FormaLiq        As String   'Forma de Liquidacion     -- his_estructura.estrnro
Dim FormaPago       As String   'Forma de Pago            -- formapago.fpagdescabr
Dim SucBanco        As String   'Sucursal del Banco       -- ctabancaria.ctabsuc
Dim BancoPago       As String   'Banco Pago               -- his_estructura.estrnro, formapago.fpagbanc (siempre y cuando el Banco sea <> 0) y ctabancaria.banco
Dim NroCuenta       As String   'Nro. Cuenta              -- ctabancario.ctabnro
Dim NroCuentaAcreditacionE As String
'Dim Actividad       As String   'Actividad                -- his_estructura.estrnro
Dim Mutual          As String   'Actividad                 -- his_estructura.estrnro
'Dim CondSIJP        As String   'Condicion SIJP           -- his_estructura.estrnro
Dim CajaComp        As String   'Caja Compensacion         -- his_estructura.estrnro
'Dim SitRev          As String   'Sit. de Revista SIJP     -- his_estructura.estrnro
'Dim ModCont         As String   'Mod. de Contrat. SIJP    -- his_estructura.estrnro
'Dim ART             As String   'ART                      -- his_estructura.estrnro
Dim Estado          As String   'Estado                   -- empleado.empest y fases.estado
Dim CausaBaja       As String   'Causa de Baja            -- fases.caunro
Dim FBaja           As String   'Fecha de Baja            -- fases.bajfec
Dim Empresa         As String   'Empresa                  -- his_estructura.estrnro
Dim ModOrg          As String   'Empresa                  -- his_estructura.estrnro
Dim OSL             As String   'Empresa                  -- his_estructura.estrnro
Dim OSE             As String   'Empresa                  -- his_estructura.estrnro
Dim PlanOdon        As String   'Empresa                  -- his_estructura.estrnro
Dim Locacion        As String   'Empresa                  -- his_estructura.estrnro
Dim Area            As String   'Empresa                  -- his_estructura.estrnro
Dim SubDepto        As String   'Empresa                  -- his_estructura.estrnro
Dim NroCBU          As String   'Empresa                  -- his_estructura.estrnro
Dim Empremu         As String   'Remuneración del empleado
Dim GrupoSeguridad  As String   'Grupo de Seguridad
Dim Nro_GrupoSeguridad  As Long 'Grupo de Seguridad       -- his_estructura.estrnro
Dim FFinContrato    As String
Dim Fecha_FinContrato As String
Dim Reporta_a       As String
Dim Nro_Reporta_a   As Long

Dim Ternro As Long

Dim NroTercero          As Long

Dim Nro_Legajo          As Long
'Dim Nro_TDocumento      As Long
Dim nro_nivest          As Long
Dim nro_estudio         As Long

Dim Nro_Nrodom          As String

Dim Nro_Barrio          As Long
Dim Nro_Localidad       As Long
Dim Nro_Zona            As Long
Dim Nro_Provincia       As Long
Dim Nro_Pais            As Long
Dim nro_paisnac         As Long

Dim nro_oficina         As Long
Dim nro_sector          As Long
Dim nro_categoria       As Long
Dim nro_cargo           As Long
Dim nro_ccosto          As Long
Dim nro_gerencia        As Long
Dim nro_AFP             As Long
Dim nro_sindicato       As Long
'Dim nro_osocial_ley     As Long
'Dim nro_planos_ley      As Long
Dim nro_osocial_elegida As Long
'Dim nro_planos_elegida  As Long
Dim nro_contrato        As Long
Dim nro_convenio        As Long
Dim nro_reghorario      As Long
Dim nro_formaliq        As Long
Dim nro_bancopago       As Long
Dim nro_mutual          As Long
Dim nro_sitrev          As Long
Dim nro_modcont         As Long
Dim nro_art             As Long
Dim nro_departamento    As Long
Dim nro_direccion       As Long
Dim nro_lpago           As Long
Dim nro_CajaComp        As Long
Dim nro_formapago       As Long
Dim nro_causabaja       As Long
Dim nro_empresa         As Long
Dim NroDom              As Long
'Dim nro_osl             As Long
'Dim nro_odon            As Long
'Dim nro_ose             As Long
'Dim nro_locacion        As Long
'Dim nro_area            As Long
'Dim nro_SubDepto        As Long
'Dim nro_empremu         As Long

Dim nro_estcivil        As Long
Dim nro_nacionalidad    As Long

Dim F_Nacimiento        As String
Dim F_Fallecimiento     As String
Dim F_Alta              As String
Dim F_Baja              As String
Dim F_Ingreso           As String

Dim Inserto_estr        As Boolean

Dim ter_oficina         As Long
Dim Ter_Empresa         As Long
Dim ter_afp             As Long
Dim ter_sindicato       As Long
'Dim ter_osocial_ley     As Long
Dim ter_osocial_elegida As Long
Dim ter_bancopago       As Long
Dim ter_Mutual          As Long
Dim ter_sexo            As Long
Dim ter_estudio         As Long
Dim ter_estado          As Long

Dim fpgo_bancaria       As Long

Dim rs As New ADODB.Recordset
Dim rs_Sql As New ADODB.Recordset
Dim rs_Empleado As New ADODB.Recordset
Dim rs_Tel As New ADODB.Recordset
Dim rs_repl As New ADODB.Recordset


Dim OficinaDesc         As Boolean   'Oficina                  -- his_estructura
Dim SecDesc             As Boolean   'Sector                   -- his_estructura
Dim CatDesc             As Boolean   'Categoria                -- his_estructura
Dim CarDesc             As Boolean   'Cargo                    -- his_estructura
Dim CCoDesc             As Boolean   'C.Costo                  -- his_estructura
Dim GerDesc             As Boolean   'Gerencia                 -- his_estructura
Dim DepDesc             As Boolean   'Departamento             -- his_estructura
Dim DirDesc             As Boolean   'Direccion                -- his_estructura
Dim AFPDesc             As Boolean   'Caja de Jubilacion       --
Dim SinDesc             As Boolean   'Sindicato                -- his_estructura
Dim OSoElegidaDesc      As Boolean   'Obra Social              -- his_estructura
'Dim PoSElegidaDesc      As Boolean   'Plan OS                  -- his_estructura
'Dim OSoLeyDesc          As Boolean   'Obra Social              -- his_estructura
'Dim PoSLeyDesc          As Boolean   'Plan OS                  -- his_estructura
Dim CotDesc             As Boolean   'Contrato                 -- his_estructura
Dim CovDesc             As Boolean   'Convenio                 -- his_estructura
Dim LPaDesc             As Boolean   'Lugar de Pago            -- his_estructura
Dim RegDesc             As Boolean   'Regimen Horario          -- his_estructura
Dim FLiDesc             As Boolean   'Forma de Liquidacion     -- his_estructura
Dim FPaDesc             As Boolean      'Forma de Pago            -- his_estructura
Dim BcoDesc             As Boolean      'Banco Pago               --
Dim MUTDesc             As Boolean      'Actividad                --
Dim CSJDesc             As Boolean      'Condicion SIJP           --
'Dim SReDesc             As Boolean      'Sit. de Revista SIJP     --
'Dim MCoDesc             As Boolean      'Mod. de Contrat. SIJP    --
Dim EmpDesc             As Boolean      'Empresa                  --
'Dim OSLDesc             As Boolean      'Empresa                  --
'Dim POdoDesc             As Boolean     'Empresa                  --
'Dim OSEDesc             As Boolean      'Empresa                  --
'Dim LocDesc             As Boolean      'Empresa                  --
'Dim AreaDesc             As Boolean     'Empresa                  --
'Dim SubDepDesc             As Boolean   'Empresa                  --

Dim IngresoDom          As Boolean

Dim rs_tdoc As New ADODB.Recordset
Dim rs_emp  As New ADODB.Recordset
Dim rs_tpl  As New ADODB.Recordset
Dim rs_leg  As New ADODB.Recordset

Dim Nroadtemplate As Long
Dim Nro_Institucion As Long

Dim Sigue As Boolean
Dim ExisteLeg As Boolean
Dim CalculaLegajo As Boolean

    On Error GoTo SaltoLinea

    ' True indica que se hace por Descripcion. False por Codigo Externo

    OficinaDesc = True  ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    SecDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CatDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CarDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CCoDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    GerDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    DepDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    DirDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    AFPDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    SinDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    OSoElegidaDesc = True ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
'    PoSElegidaDesc = True ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
'    OSoLeyDesc = True   ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
'    PoSLeyDesc = True   ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CotDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CovDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    LPaDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    RegDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    FLiDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    FPaDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    BcoDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    MUTDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CSJDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
'    SReDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
'    MCoDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    EmpDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
'    OSLDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
'    POdoDesc = True     ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
'    OSEDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
'    LocDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
'    AreaDesc = True     ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
'    SubDepDesc = True   ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    
    Sigue = True 'Indica que si en el archivo viene mas de una vez un empleado, le crea las fases
    ExisteLeg = False
    'RegLeidos = RegLeidos + 1
    LineaCarga = LineaCarga + 1
    
    Flog.writeline
    FlogE.writeline
    FlogP.writeline
    
    'Legajo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Legajo"
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Legajo = Aux
    'Legajo = Mid(strReg, pos1, pos2 - pos1 + 1)
    If Legajo = "N/A" Or EsNulo(Legajo) Then
        CalculaLegajo = True
    Else
        StrSql = "SELECT * FROM empleado WHERE empleado.empleg = " & Legajo
        OpenRecordset StrSql, rs_emp
        If (Not rs_emp.EOF) Then
            If (Not Sigue) Then
                Texto = ": " & " - El Empleado ya Existe."
                NroColumna = 1
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                'Ok = False
                'RegError = RegError + 1
                'Exit Sub
            Else
                NroTercero = rs_emp!Ternro
                ExisteLeg = True
            End If
        End If
    End If
    
    'Apellido
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Apellido"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Apellido = Left(Aux, 25)
    
    '--------------
    'Apellido2
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Apellido2"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Apellido2 = Left(Aux, 25)
    
    '--------------
    
    'Nombre
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nombre"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    nombre = Left(Aux, 25)
    If (Apellido = "" Or Apellido = "N/A") And (nombre = "" Or nombre = "N/A") Then
        Texto = ": " & " - Debe Ingresar un Nombre y Apellido."
        NroColumna = 2
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    '---------------------
     'Nombre2
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nombre2"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    nombre2 = Left(Aux, 25)
    If (Apellido = "" Or Apellido = "N/A") And (nombre = "" Or nombre = "N/A") Then
        Texto = ": " & " - Debe Ingresar un Nombre y Apellido."
        NroColumna = 2
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    '-----------------------
    'Fecha de Nacimiento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de Nacimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Fnac = Aux
    If Fnac = "N/A" Then
       F_Nacimiento = "Null"
    Else
       F_Nacimiento = ConvFecha(Fnac)
    End If
    
    'Pais de Nacimiento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Pais de Nacimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    PaisNac = Aux
    If PaisNac <> "N/A" Then
        StrSql = " SELECT paisnro FROM pais WHERE UPPER(paisdesc) = '" & UCase(PaisNac) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_paisnac = rs_Sql!Paisnro
        Else
            StrSql = " INSERT INTO pais(paisdesc,paisdef) VALUES ('" & UCase(PaisNac) & "',0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_paisnac = getLastIdentity(objConn, "pais")
        End If
    Else
        nro_paisnac = 0
    End If
    
    'Nacionalidad
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nacionalidad"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Nacionalidad = Aux
    If Nacionalidad <> "N/A" Then
        StrSql = " SELECT nacionalnro FROM nacionalidad WHERE UPPER(nacionaldes) = '" & UCase(Nacionalidad) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_nacionalidad = rs_Sql!nacionalnro
        Else
            StrSql = " INSERT INTO nacionalidad(nacionaldes) VALUES ('" & UCase(Nacionalidad) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_nacionalidad = getLastIdentity(objConn, "nacionalidad")
        End If
    Else
        nro_nacionalidad = 0
    End If
    If nro_nacionalidad = 0 Then
        Texto = ": " & " - La Nacionalidad no Existe."
        NroColumna = 6
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    
    'Fecha de Ingreso al Pais
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de Ingreso al Pais"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Fing = Aux
    If (Fing = "N/A") Or EsNulo(Fing) Then
        F_Ingreso = "Null"
    Else
        F_Ingreso = ConvFecha(Fing)
    End If
    
    'Estado Civil
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estado Civil"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    EstCivil = Left(Aux, 30)
    If EstCivil <> "N/A" And Not EsNulo(EstCivil) Then
        StrSql = " SELECT estcivnro FROM estcivil WHERE UPPER(estcivdesabr) = '" & UCase(EstCivil) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_estcivil = rs_Sql!estcivnro
        Else
            StrSql = " INSERT INTO estcivil(estcivdesabr) VALUES ('" & UCase(EstCivil) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_estcivil = getLastIdentity(objConn, "estcivil")
        End If
    Else
        nro_estcivil = 0
    End If
    If nro_estcivil = 0 Then
        Texto = ": " & " - El Estado Civil no Existe."
        NroColumna = 8
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Sexo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sexo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Sexo = UCase(Aux)
    If (Sexo = "M") Or (Sexo = "-1") Or (Sexo = "MASCULINO") Then
        ter_sexo = -1
    Else
        ter_sexo = 0
    End If
                                                            
    'Fecha de alta
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de alta"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    FAlta = Aux
    If FAlta = "N/A" Or EsNulo(FAlta) Then
        F_Alta = "Null"
        Texto = ": " & " - La Fecha de Alta es Obligatoria."
        NroColumna = 10
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    Else
        F_Alta = ConvFecha(FAlta)
    End If
   
    'Estudia?
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estudia?"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Estudio = UCase(Aux)
    If Estudio <> "N/A" And Estudio <> "NO" Then
        If Estudio = "SI" Then
            ter_estudio = -1
        Else
            ter_estudio = 0
        End If
    Else
        ter_estudio = 0
    End If
    
    'Nivel de estudio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nivel de estudio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    NivEst = Left(Aux, 40)
    If NivEst <> "N/A" Then
        StrSql = " SELECT nivnro FROM nivest WHERE UPPER(nivdesc) = '" & UCase(NivEst) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_nivest = rs_Sql!nivnro
        Else
            StrSql = " INSERT INTO nivest(nivdesc,nivsist,nivobligatorio,nivestfli) VALUES ('" & UCase(NivEst) & "',-1,0,-1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_nivest = getLastIdentity(objConn, "nivest")
        End If
    Else
        nro_nivest = 0
    End If
    
    
  'RUT
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "RUT"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    RUT = Left(Aux, 30)
   
    StrSql = "SELECT * FROM empleado "
    StrSql = StrSql & " INNER JOIN ter_doc ON ter_doc.ternro = empleado.ternro "
    StrSql = StrSql & " WHERE ter_doc.tidnro = 1 AND ter_doc.nrodoc = '" & RUT & "'"
    OpenRecordset StrSql, rs_tdoc
    If (Not rs_tdoc.EOF) Then
        'Diego Rosso - 26-02-07 - Se modifico para que cuando venga un rut ya asignado tome el ternro del empleado
                                    'que lo tiene asignado.
        If (Not Sigue) Then
           Texto = ": " & " - El RUT ya esta Asignado a otro Empleado."
            NroColumna = 15
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
           ' Ok = False
            RegError = RegError + 1
            Exit Sub
        Else
            NroTercero = rs_tdoc!Ternro
            ExisteLeg = True
            'Texto = ": " & " - Empleado: " & Legajo & " - Ese Tipo y Numero de Documento estan Asignados a otro Empleado."
            'nrocolumna = 14
            'Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
       End If
    End If


    'Hasta Aqui los Datos Obligatorios del Empleado
    IngresoDom = True
        
    'Calle
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Calle"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Calle = Left(Aux, 250)
    
    If Calle = "N/A" Then
        Calle = ""
        IngresoDom = False
    End If
    
    'Nro
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Nro"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Nro = Left(Aux, 8)
    If (Nro <> "N/A") Then
        Nro_Nrodom = Nro
    Else
        Nro_Nrodom = 0
    End If
    
    'Piso
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Piso"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Piso = Left(Aux, 8)
    If Piso = "N/A" Then
        Piso = ""
    End If
    
    'Departamento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Departamento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Depto = Left(Aux, 8)
    If Depto = "N/A" Then
        Depto = ""
    End If

    'Torre
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Torre"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Torre = Left(Aux, 8)
    If Torre = "N/A" Then
        Torre = ""
    End If
    
    'Manzana
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Manzana"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Manzana = Left(Aux, 8)
    If Manzana = "N/A" Then
        Manzana = ""
    End If

    'Codigo Postal
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Codigo Postal"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Cpostal = Left(Aux, 12)
    If Cpostal = "N/A" Then
        Cpostal = ""
    End If

    'Entre calles
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Entre calles"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Entre = Left(Aux, 80)
    If Entre = "N/A" Then
        Entre = ""
    End If

    'Barrio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Barrio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Barrio = Left(Aux, 30)
    If Barrio = "N/A" Then
        Barrio = ""
    End If

    'Comuna
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Comuna"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    '19/03/2010 - Se cambio la longitud a 60
    'Localidad = Left(aux, 30)
    Localidad = Left(Aux, 60)
    
    'Provincia     ----------------------------------------------------------------
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Provincia"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Provincia = Left(Aux, 30)
    
    'REgion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Region"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    '19/03/2010 - Se cambio la longitud a 60
    'Zona = Left(aux, 20)
    Zona = Left(Aux, 60)
    
    
    
    'Pais
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Pais"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Pais = Left(Aux, 20)
    If Pais <> "N/A" Then
        Call ValidarPais(Pais, Nro_Pais)
    Else
        Nro_Pais = 0
    End If
       If Localidad <> "N/A" Then
        Call ValidarLocalidad(Localidad, Nro_Localidad, Nro_Pais, Nro_Provincia, Nro_Zona)
    Else
        Nro_Localidad = 0
    End If
    If Provincia <> "N/A" Then
        Call ValidarProvincia(Provincia, Nro_Provincia, Nro_Pais)
    Else
        Nro_Provincia = 0
    End If
    If Zona <> "N/A" Then
        Call ValidarZona(Zona, Nro_Zona, Nro_Provincia)
    Else
        Nro_Zona = 0
    End If
    If (IngresoDom = True) And (Nro_Localidad = 0) Then
        Texto = ": " & " - Debe Ingresar la Localidad."
        NroColumna = 25
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    If (IngresoDom = True) And (Nro_Provincia = 0) Then
        Texto = ": " & " - Debe Ingresar la Provincia."
        NroColumna = 28
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    If (IngresoDom = True) And (Nro_Pais = 0) Then
        Texto = ": " & " - Debe Ingresar la Pais."
        NroColumna = 29
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Tel Particular
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tel Particular"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Telefono = Left(Aux, 20)
    If Telefono = "N/A" Then
        Telefono = ""
    End If
    
    'Tel Laboral
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tel Laboral"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    TelLaboral = Left(Aux, 20)
    If TelLaboral = "N/A" Then
        TelLaboral = ""
    End If
    
    'Tel Celular
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tel Celular"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    TelCelular = Left(Aux, 20)
    If TelCelular = "N/A" Then
        TelCelular = ""
    End If
    
    'Email
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Email"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Email = Left(Aux, 100)
    If Email = "N/A" Then
        Email = ""
    End If
    
    'Oficina
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Oficina"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Oficina = Aux

    If Oficina <> "N/A" And Not EsNulo(Oficina) Then
        If OficinaDesc Then
            Call ValidaEstructura(1, Oficina, nro_oficina, Inserto_estr)
        Else
           Call ValidaEstructuraCodExt(1, Oficina, nro_oficina, Inserto_estr)
        End If
         Call CreaTercero(10, Oficina, ter_oficina)
        
        If Inserto_estr Then
            Call CreaComplemento(1, ter_oficina, nro_oficina, Oficina)
            Inserto_estr = False
        End If
    Else
        nro_oficina = 0
    End If
    
    'Sector
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sector"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Sector = Aux
    ' Validacion y Creacion del Sector
    If Sector <> "N/A" And Not EsNulo(Sector) Then
        If SecDesc Then
            Call ValidaEstructura(2, Sector, nro_sector, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(2, Sector, nro_sector, Inserto_estr)
        End If
    Else
        nro_sector = 0
    End If

    'Convenio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Convenio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Convenio = Aux
    ' Validacion, Creacion del Convenio
    If Convenio <> "N/A" And Not EsNulo(Convenio) Then
        If CovDesc Then
            Call ValidaEstructura(19, Convenio, nro_convenio, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(19, Convenio, nro_convenio, Inserto_estr)
        End If
        
        If Inserto_estr Then
            Call CreaComplemento(19, 0, nro_convenio, Convenio)
            Inserto_estr = False
        End If
    Else
        nro_convenio = 0
    End If
    
    
    'Categoria
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Categoria"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    categoria = Aux
    ' Validacion, Creacion de la Categoria
    If (categoria <> "N/A" And nro_convenio <> 0) And Not EsNulo(categoria) Then
        If CatDesc Then
            'Call ValidaEstructura(3, categoria, nro_categoria, Inserto_estr)
            Call ValidaCategoria(3, categoria, nro_convenio, nro_categoria, Inserto_estr)
            
        Else
            'Call ValidaEstructuraCodExt(3, categoria, nro_categoria, Inserto_estr)
            Call ValidaCategoriaCodExt(3, categoria, nro_convenio, nro_categoria, Inserto_estr)
        End If
    Else
        nro_categoria = 0
    End If
    
    'Cargo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Cargo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Cargo = Aux
     If Cargo <> "N/A" And Not EsNulo(Cargo) Then
        If CarDesc Then
            Call ValidaEstructura(4, Cargo, nro_cargo, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(4, Cargo, nro_cargo, Inserto_estr)
        End If
        If Inserto_estr Then
            Call CreaComplemento(4, 0, nro_cargo, Cargo)
            Inserto_estr = False
        End If
    Else
        nro_cargo = 0
    End If

    'Centro de Costo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Centro de Costo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    CCosto = Aux
    ' Validacion y Creacion del Centro de Costo
    If CCosto <> "N/A" And Not EsNulo(CCosto) Then
        If CCoDesc Then
            Call ValidaEstructura(5, CCosto, nro_ccosto, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(5, CCosto, nro_ccosto, Inserto_estr)
        End If
    Else
        nro_ccosto = 0
    End If

    'Gerencia
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Gerencia"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Gerencia = Aux
    ' Validacion y Creacion de la Gerencia
    If Gerencia <> "N/A" And Not EsNulo(Gerencia) Then
        If GerDesc Then
            Call ValidaEstructura(6, Gerencia, nro_gerencia, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(6, Gerencia, nro_gerencia, Inserto_estr)
        End If
    Else
        nro_gerencia = 0
    End If

    
    'Departamento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Departamento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Departamento = Aux
    ' Validacion y Creacion del Departamento
    If Departamento <> "N/A" And Not EsNulo(Departamento) Then
        If DepDesc Then
            Call ValidaEstructura(9, Departamento, nro_departamento, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(9, Departamento, nro_departamento, Inserto_estr)
        End If
    Else
        nro_departamento = 0
    End If

    'Direccion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Direccion = Aux
    ' Validacion y Creacion de direccion
    If Direccion <> "N/A" And Not EsNulo(Direccion) Then
        If DirDesc Then
            Call ValidaEstructura(35, Direccion, nro_direccion, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(35, Direccion, nro_direccion, Inserto_estr)
        End If
    Else
        nro_direccion = 0
    End If
    
    
    'AFP
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "AFP"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    AFP = Aux
    ' Validacion y Creacion de la Caja de Jubilacion
    If AFP <> "N/A" And Not EsNulo(AFP) Then
        If AFPDesc Then
            Call ValidaEstructura(15, AFP, nro_AFP, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(15, AFP, nro_AFP, Inserto_estr)
        End If
        Call CreaTercero(6, AFP, ter_afp)
        
        If Inserto_estr Then
            Call CreaComplemento(15, ter_afp, nro_AFP, AFP)
        End If
    Else
        nro_AFP = 0
    End If

    'Sindicato
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sindicato"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Sindicato = Aux
    ' Validacion y Creacion del Sindicato
    If Sindicato <> "N/A" And Not EsNulo(Sindicato) Then
        If SinDesc Then
            Call ValidaEstructura(16, Sindicato, nro_sindicato, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(16, Sindicato, nro_sindicato, Inserto_estr)
        End If
        Call CreaTercero(5, Sindicato, ter_sindicato)
        
        If Inserto_estr Then
            Call CreaComplemento(16, ter_sindicato, nro_sindicato, Sindicato)
        End If
    Else
        nro_sindicato = 0
    End If
    
    
    'Sistema Salud/ISAPRE
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Obra Social elegida"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    OSocialElegida = Aux
    ' Validacion y Creacion de la Obra Social Elegida
    If OSocialElegida <> "N/A" And Not EsNulo(OSocialElegida) Then
        If OSoElegidaDesc Then
            Call ValidaEstructura(17, OSocialElegida, nro_osocial_elegida, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(17, OSocialElegida, nro_osocial_elegida, Inserto_estr)
        End If
        Call CreaTercero(4, OSocialElegida, ter_osocial_elegida)
        
        If Inserto_estr Then
            Call CreaComplemento(17, ter_osocial_elegida, nro_osocial_elegida, OSocialElegida)
        Else
            StrSql = " SELECT origen FROM replica_estr WHERE estrnro = " & nro_osocial_elegida
            OpenRecordset StrSql, rs_Sql
            ter_osocial_elegida = rs_Sql!Origen
            rs_Sql.Close
        End If
    Else
        nro_osocial_elegida = 0
    End If


    'Contrato
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Contrato"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Contrato = Aux
    ' Validacion y Creacion del Contrato
    If Contrato <> "N/A" And Not EsNulo(Contrato) Then
        If CotDesc Then
            Call ValidaEstructura(18, Contrato, nro_contrato, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(18, Contrato, nro_contrato, Inserto_estr)
        End If
        
        If Inserto_estr Then
            Call CreaComplemento(18, 0, nro_contrato, Contrato)
            Inserto_estr = False
        End If
    Else
        nro_contrato = 0
    End If
    
    'Fecha de fin de contrato
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de fin de contrato"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    FFinContrato = Aux
    If FFinContrato = "N/A" Or EsNulo(FFinContrato) Then
        Fecha_FinContrato = "Null"
    Else
        Fecha_FinContrato = ConvFecha(FFinContrato)
    End If
    
    'Lugar de pago
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Lugar de pago"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    LPago = Aux
    ' Validacion y Creacion del Lugar de Pago
    If LPago <> "N/A" And Not EsNulo(LPago) Then
        If LPaDesc Then
            Call ValidaEstructura(20, LPago, nro_lpago, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(20, LPago, nro_lpago, Inserto_estr)
        End If
    Else
        nro_lpago = 0
    End If

    'Regimen Horario
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Regimen Horario"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    RegHorario = Aux
    If RegHorario <> "N/A" And Not EsNulo(RegHorario) Then
        If RegDesc Then
            Call ValidaEstructura(21, RegHorario, nro_reghorario, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(21, RegHorario, nro_reghorario, Inserto_estr)
        End If
    Else
        nro_reghorario = 0
    End If

    'Forma de Liquidacion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Forma de Liquidacion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    FormaLiq = Aux
    If FormaLiq <> "N/A" And Not EsNulo(FormaLiq) Then
        If FLiDesc Then
            Call ValidaEstructura(22, FormaLiq, nro_formaliq, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(22, FormaLiq, nro_formaliq, Inserto_estr)
        End If
        If Inserto_estr Then
            Call CreaComplemento(22, 0, nro_contrato, Contrato)
            Inserto_estr = False
        End If
    Else
        nro_formaliq = 0
    End If

    'Forma de Pago
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Forma de Pago"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    FormaPago = Aux
    If FormaPago <> "N/A" Then
        StrSql = " SELECT fpagnro FROM formapago WHERE fpagdescabr = '" & FormaPago & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_formapago = rs_Sql!fpagnro
        Else
            StrSql = " INSERT INTO formapago(fpagdescabr,fpagbanc,acunro,monnro) VALUES ('" & FormaPago & "',0,6,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            nro_formapago = getLastIdentity(objConn, "formapago")
        End If
    Else
        nro_formapago = 0
    End If
    
    'Banco de Pago
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Banco de Pago"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    BancoPago = Aux
    If BancoPago <> "N/A" And Not EsNulo(BancoPago) Then
        If BcoDesc Then
            Call ValidaEstructura(41, BancoPago, nro_bancopago, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(41, BancoPago, nro_bancopago, Inserto_estr)
        End If
        Call CreaTercero(13, BancoPago, ter_bancopago)
        
        If Inserto_estr Then
            Call CreaComplemento(41, ter_bancopago, nro_bancopago, BancoPago)
        End If
        fpgo_bancaria = -1
    Else
        nro_bancopago = 0
        fpgo_bancaria = 0
    End If
    
    'Nro de cuenta
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nro de cuenta"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    NroCuenta = Aux
    If NroCuenta = "N/A" Then
        NroCuenta = ""
    End If
    
    'CBU
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "CBU"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    NroCBU = Aux
    If NroCBU = "N/A" Then
        NroCBU = ""
    End If
    
    'Sucursal del banco
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sucursal del banco"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    SucBanco = Aux
    If SucBanco = "N/A" Then
        SucBanco = ""
    Else
        SucBanco = Left(SucBanco, 10)
    End If


    'Nro de cuenta de acreditacion empresa
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nro de cuenta de acreditacion empresa"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    NroCuentaAcreditacionE = Aux
    If NroCuentaAcreditacionE = "N/A" Or EsNulo(NroCuentaAcreditacionE) Then
        NroCuentaAcreditacionE = ""
    Else
        StrSql = "SELECT * FROM ctabancaria WHERE cbnro ='" & NroCuentaAcreditacionE & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
            Texto = ": " & " - Nro de cuenta de acreditacion empresa no existe."
            NroColumna = 59
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            NroCuentaAcreditacionE = ""
        End If
    End If
    
    
    'Mutual
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Mutual"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Mutual = Aux
    If Mutual <> "N/A" And Not EsNulo(Mutual) Then
        If MUTDesc Then
            Call ValidaEstructura(40, Mutual, nro_mutual, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(40, Mutual, nro_mutual, Inserto_estr)
        End If
            Call CreaTercero(8, Mutual, ter_Mutual)
        
        If Inserto_estr Then
            Call CreaComplemento(40, ter_Mutual, nro_mutual, Mutual)
        End If
    Else
        nro_mutual = 0
    End If
    
    
    'Caja de compensacion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Caja Compensacion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    CajaComp = Aux
    If CajaComp <> "N/A" And Not EsNulo(CajaComp) Then
        If CSJDesc Then
            Call ValidaEstructura(44, CajaComp, nro_CajaComp, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(44, CajaComp, nro_CajaComp, Inserto_estr)
        End If
    Else
        nro_CajaComp = 0
    End If

 
    'Estado del empleado
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estado del empleado"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Estado = Aux
    If UCase(Estado) = "ACTIVO" Then
        ter_estado = -1
    Else
        ter_estado = 0
    End If
    
    'Causa de baja
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Causa de baja"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    CausaBaja = Aux
    If Not EsNulo(CausaBaja) And CausaBaja <> "N/A" Then
        StrSql = " SELECT caunro FROM causa WHERE caudes = '" & CausaBaja & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_causabaja = rs_Sql!caunro
        Else
            StrSql = " INSERT INTO causa(caudes,causist,caudesvin,empnro) VALUES ('" & CausaBaja & "',0,-1,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            nro_causabaja = getLastIdentity(objConn, "causa")
        End If
    Else
        nro_causabaja = 0
    End If
    
    
    'Fecha de baja
    NroColumna = NroColumna + 1
        ' Si hay una causa de baja, se tiene que cargar ssi la Fecha de Baja (tablero adp)
    If nro_causabaja <> 0 Then
        Obligatorio = True
    Else
        Obligatorio = False
    End If
    Campoetiqueta = "Fecha de baja"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    FBaja = Aux
    If EsNulo(FBaja) Or FBaja = "N/A" Then
        F_Baja = "Null"
    Else
        F_Baja = ConvFecha(FBaja)
    End If
    
    
    'Empresa
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Empresa"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Empresa = Aux
    Else
        pos2 = Len(strReg)
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Empresa = Aux
    End If
    If Empresa <> "N/A" And Not EsNulo(Empresa) Then
        If EmpDesc Then
            Call ValidaEstructura(10, Empresa, nro_empresa, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(10, Empresa, nro_empresa, Inserto_estr)
        End If
        Call CreaTercero(10, Empresa, Ter_Empresa)
        
        If Inserto_estr Then
            Call CreaComplemento(10, Ter_Empresa, nro_empresa, Empresa)
        End If
    Else
        nro_empresa = 0
    End If
    
    'Remuneración del Empleado
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Remuneración del Empleado"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Empremu = Aux
    If Empremu = "N/A" Or EsNulo(Empremu) Then
        Empremu = "Null"
    End If
   
    'Modelo de Organizacion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Modelo de Organizacion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        ModOrg = Aux
        If ModOrg = "N/A" Or EsNulo(ModOrg) Then
            nro_ModOrg = 0
        Else
            StrSql = "SELECT * FROM adptemplate WHERE tplatedesabr = '" & ModOrg & "'"
            OpenRecordset StrSql, rs_tpl
            If rs_tpl.EOF Then
                StrSql = "INSERT INTO adptemplate (tplatedesabr,tplatedefault) VALUES ('" & ModOrg & "',-1)"
                objConn.Execute StrSql, , adExecuteNoRecords
                nro_ModOrg = getLastIdentity(objConn, "adptemplate")
            Else
                nro_ModOrg = rs_tpl!tplatenro
            End If
        End If
    Else
        nro_ModOrg = 0
    End If

    'Reporta_a  campo empleado.empreporta va el tercero
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Reporta_a"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Reporta_a = Aux
        If Not EsNulo(Reporta_a) And Reporta_a <> "N/A" Then
            If IsNumeric(Reporta_a) Then
                StrSql = "SELECT * FROM empleado WHERE empleado.empleg = " & Reporta_a
                If rs_emp.State = adStateOpen Then rs_emp.Close
                OpenRecordset StrSql, rs_emp
                If (Not rs_emp.EOF) Then
                    Nro_Reporta_a = rs_emp!Ternro
                Else
                    Nro_Reporta_a = 0
                    Texto = ": " & "El Empleado " & Reporta_a & " no existe."
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                End If
            Else
                Nro_Reporta_a = 0
                Texto = "El valor no es numérico."
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            End If
        End If
    Else
        Nro_Reporta_a = 0
        'no es obligatorio
    End If
    If rs_emp.State = adStateOpen Then rs_emp.Close
    

    'Grupo de Seguridad
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Grupo de Seguridad"
    pos1 = pos2 + 2
    pos2 = Len(strReg) 'InStr(pos1, strReg, Separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        GrupoSeguridad = Aux
        If GrupoSeguridad <> "N/A" And Not EsNulo(GrupoSeguridad) Then
            Call ValidaEstructura(7, GrupoSeguridad, Nro_GrupoSeguridad, Inserto_estr)
        Else
            Nro_GrupoSeguridad = 0
        End If
    Else
        Nro_GrupoSeguridad = 0
    End If
'Fin lectura de campos
' =====================================================================================================


  ' Inserto el Tercero
  If F_Nacimiento = "Null" Then
    F_Nacimiento = "''"
  End If
  If F_Ingreso = "Null" Then
    F_Ingreso = "''"
  End If
  
  If CalculaLegajo Then
    Call CalcularLegajo(nro_empresa, Legajo)
  End If

    If Not ExisteLeg Then
        StrSql = " INSERT INTO tercero(ternom,ternom2,terape,terape2,terfecnac,tersex,terestciv,estcivnro,nacionalnro,paisnro,terfecing)"
        StrSql = StrSql & " VALUES('" & nombre & "','" & nombre2 & "','" & Apellido & "','" & Apellido2 & "'," & F_Nacimiento & "," & ter_sexo & "," & nro_estcivil & "," & nro_estcivil & ","
        If nro_nacionalidad <> 0 Then
            StrSql = StrSql & nro_nacionalidad & ","
        Else
            StrSql = StrSql & "null,"
        End If
        If nro_paisnac <> 0 Then
            StrSql = StrSql & nro_paisnac & ","
        Else
            StrSql = StrSql & "null,"
        End If
        StrSql = StrSql & F_Ingreso & ")"
        objConn.Execute StrSql, , adExecuteNoRecords

        NroTercero = getLastIdentity(objConn, "tercero")
        
        Texto = ": " & "Codigo de Tercero = " & NroTercero
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
    Else
        StrSql = " UPDATE tercero SET "
        StrSql = StrSql & " ternom = " & "'" & nombre & "'"
        StrSql = StrSql & ", terape = " & "'" & Apellido & "'"
        StrSql = StrSql & ", ternom2 = " & "'" & nombre2 & "'"
        StrSql = StrSql & ", terape2 = " & "'" & Apellido2 & "'"
        StrSql = StrSql & ", terfecnac = " & F_Nacimiento
        StrSql = StrSql & ", tersex = " & ter_sexo
        StrSql = StrSql & ", terestciv =" & nro_estcivil
        StrSql = StrSql & ", estcivnro =" & "'" & nro_estcivil & "'"
        If nro_nacionalidad <> 0 Then
            StrSql = StrSql & ", nacionalnro =" & nro_nacionalidad
        End If
        StrSql = StrSql & ", terfecing =" & F_Ingreso
        If nro_paisnac <> 0 Then
            StrSql = StrSql & ", paisnro =" & nro_paisnac
        End If
        StrSql = StrSql & " WHERE ternro = " & NroTercero
        objConn.Execute StrSql, , adExecuteNoRecords
      
        Texto = ": " & " - Empleado: " & Legajo & " - Ese Empleado ya existe en la base. Datos de tercero actualizados"
        NroColumna = 1
        Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    
    If Not ExisteLeg Then
        'Diego Rosso - 26-02-07 se agrego ternom2 y terape2 en el insert y en el update
        StrSql = " INSERT INTO empleado(empleg,empfecalta,empfecbaja,empest,empfaltagr,empfbajaprev,"
        StrSql = StrSql & "ternro,nivnro,empestudia,terape,ternom,terape2,ternom2,empinterno,empemail,"
        StrSql = StrSql & "empnro,tplatenro,empremu"
        If Nro_Reporta_a <> 0 Then
            StrSql = StrSql & ",empreporta"
        End If
        StrSql = StrSql & ") VALUES("
        StrSql = StrSql & Legajo & "," & F_Alta & "," & F_Baja & "," & ter_estado & "," & F_Alta & "," & Fecha_FinContrato & ","
        StrSql = StrSql & NroTercero & "," & nro_nivest & "," & ter_estudio & ",'" & Apellido & "','"
        StrSql = StrSql & nombre & "','" & Apellido2 & "','" & nombre2 & "',Null,'" & Email & "',1," & nro_ModOrg & "," & Empremu
        If Nro_Reporta_a <> 0 Then
            StrSql = StrSql & "," & Nro_Reporta_a
        End If
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = ": " & "Empleado insertado - " & Legajo & " - " & Apellido & " - " & nombre
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
    Else
        StrSql = " UPDATE empleado SET "
        StrSql = StrSql & " empleg = " & Legajo
        StrSql = StrSql & " ,empfecalta = " & F_Alta
        StrSql = StrSql & " ,empfecbaja = " & F_Baja
        StrSql = StrSql & " ,empfbajaprev = " & Fecha_FinContrato
        StrSql = StrSql & " ,empest = " & ter_estado
        StrSql = StrSql & " ,empfaltagr = " & F_Alta
        StrSql = StrSql & " ,nivnro = " & nro_nivest
        StrSql = StrSql & " ,empestudia = " & ter_estudio
        StrSql = StrSql & " ,terape = " & "'" & Apellido & "'"
        StrSql = StrSql & " ,ternom = " & "'" & nombre & "'"
        StrSql = StrSql & " ,terape2 = " & "'" & Apellido2 & "'"
        StrSql = StrSql & " ,ternom2 = " & "'" & nombre2 & "'"
        StrSql = StrSql & " ,empemail = " & "'" & Email & "'"
        StrSql = StrSql & " ,empnro = 1 "
        StrSql = StrSql & " ,tplatenro =" & nro_ModOrg
        StrSql = StrSql & " ,Empremu =" & Empremu
        If Nro_Reporta_a <> 0 Then
            StrSql = StrSql & ", empreporta =" & Nro_Reporta_a
        End If
        StrSql = StrSql & " WHERE ternro = " & NroTercero
        objConn.Execute StrSql, , adExecuteNoRecords
    
        Texto = ": " & "Empleado Actualizado - " & Legajo & " - " & Apellido & " - " & nombre
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
    End If
    
    ' Inserto el Registro correspondiente en ter_tip
    If Not ExisteLeg Then
        StrSql = " INSERT INTO ter_tip(ternro,tipnro) VALUES(" & NroTercero & ",1)"
        objConn.Execute StrSql, , adExecuteNoRecords
    End If

' Inserto los Documentos
    If Not ExisteLeg Then

            StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
            StrSql = StrSql & " VALUES(" & NroTercero & ", 1,'" & RUT & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            Texto = ": " & "Inserte el Documento - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)

    Else

            StrSql = "SELECT * FROM ter_doc WHERE ternro = " & NroTercero
            StrSql = StrSql & " AND tidnro = 1"
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If rs.EOF Then
                StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
                StrSql = StrSql & " VALUES(" & NroTercero & ", 1,'" & RUT & "')"
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = ": " & "Inserte el Documento - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            Else
                StrSql = " UPDATE ter_doc SET "
                StrSql = StrSql & " nrodoc = '" & RUT & "'"
                StrSql = StrSql & " WHERE ternro = " & NroTercero
                StrSql = StrSql & " AND tidnro = 1  "
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = Texto = ": " & "Documento actualizado - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If

    End If
  
    
 

' Inserto el Domicilio
  If rs.State = adStateOpen Then
    rs.Close
  End If
  
  If Not ExisteLeg Then
    If (Nro_Localidad <> 0 And Nro_Provincia <> 0 And Nro_Pais <> 0) Then
        StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
        StrSql = StrSql & " VALUES(1," & NroTercero & ",-1,2)"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        NroDom = getLastIdentity(objConn, "cabdom")
      
        StrSql = " INSERT INTO detdom(domnro,calle,nro,piso,oficdepto,torre,manzana,codigopostal,entrecalles,"
        StrSql = StrSql & "locnro,provnro,paisnro,barrio,zonanro) "
        StrSql = StrSql & " VALUES (" & NroDom & ",'" & Calle & "','" & Nro_Nrodom & "','" & Piso & "','"
        StrSql = StrSql & Depto & "','" & Torre & "','" & Manzana & "','" & Cpostal & "','" & Entre & "'," & Nro_Localidad & ","
        StrSql = StrSql & Nro_Provincia & "," & Nro_Pais & ",'" & Barrio & "'," & Nro_Zona & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
      
        Texto = ": " & "Inserte el Domicilio - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        
        If Telefono <> "" Then
            'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
            StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
            StrSql = StrSql & " VALUES(" & NroDom & ",'" & Telefono & "',0,-1,0,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            Texto = ": " & "Inserte el Telefono Principal - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        End If
        If TelLaboral <> "" Then
            StrSql = "SELECT * FROM telefono "
            StrSql = StrSql & " WHERE domnro =" & NroDom
            StrSql = StrSql & " AND telnro ='" & TelLaboral & "'"
            If rs_Tel.State = adStateOpen Then rs_Tel.Close
            OpenRecordset StrSql, rs_Tel
            If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelLaboral & "',0,0,0,3)"
                objConn.Execute StrSql, , adExecuteNoRecords
                  
                Texto = ": " & "Inserte el Telefono Laboral - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
        If TelCelular <> "" Then
            StrSql = "SELECT * FROM telefono "
            StrSql = StrSql & " WHERE domnro =" & NroDom
            StrSql = StrSql & " AND telnro ='" & TelCelular & "'"
            If rs_Tel.State = adStateOpen Then rs_Tel.Close
            OpenRecordset StrSql, rs_Tel
            If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelCelular & "',0,0,-1,2)"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Inserte el Telefono Celular - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
    End If
  Else
    If (Nro_Localidad <> 0 And Nro_Provincia <> 0 And Nro_Pais <> 0) Then
        StrSql = "SELECT * FROM cabdom  "
        StrSql = StrSql & " WHERE tipnro = 1"
        StrSql = StrSql & " AND ternro = " & NroTercero
        StrSql = StrSql & " AND domdefault = -1"
        StrSql = StrSql & " AND tidonro = 2"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
          StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
          StrSql = StrSql & " VALUES(1," & NroTercero & ",-1,2)"
          objConn.Execute StrSql, , adExecuteNoRecords
          
          NroDom = getLastIdentity(objConn, "cabdom")
        
          StrSql = " INSERT INTO detdom(domnro,calle,nro,piso,oficdepto,torre,manzana,codigopostal,entrecalles,"
          StrSql = StrSql & "locnro,provnro,paisnro,barrio,zonanro) "
          StrSql = StrSql & " VALUES (" & NroDom & ",'" & Calle & "','" & Nro_Nrodom & "','" & Piso & "','"
          StrSql = StrSql & Depto & "','" & Torre & "','" & Manzana & "','" & Cpostal & "','" & Entre & "'," & Nro_Localidad & ","
          StrSql = StrSql & Nro_Provincia & "," & Nro_Pais & ",'" & Barrio & "'," & Nro_Zona & ")"
          objConn.Execute StrSql, , adExecuteNoRecords
        
          Texto = ": " & "Inserte el Domicilio - "
          Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
          
          If Telefono <> "" Then
            'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
              StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
              StrSql = StrSql & " VALUES(" & NroDom & ",'" & Telefono & "',0,-1,0,1)"
              objConn.Execute StrSql, , adExecuteNoRecords

              Texto = ": " & "Inserte el Telefono Principal - "
              Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
          End If
          If TelLaboral <> "" Then
              StrSql = "SELECT * FROM telefono "
              StrSql = StrSql & " WHERE domnro =" & NroDom
              StrSql = StrSql & " AND telnro ='" & TelLaboral & "'"
              If rs_Tel.State = adStateOpen Then rs_Tel.Close
              OpenRecordset StrSql, rs_Tel
              If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                  StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                  StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelLaboral & "',0,0,0,3)"
                  objConn.Execute StrSql, , adExecuteNoRecords
                    
                  Texto = ": " & "Inserte el Telefono Laboral - "
                  Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
              End If
          End If
          If TelCelular <> "" Then
              StrSql = "SELECT * FROM telefono "
              StrSql = StrSql & " WHERE domnro =" & NroDom
              StrSql = StrSql & " AND telnro ='" & TelCelular & "'"
              If rs_Tel.State = adStateOpen Then rs_Tel.Close
              OpenRecordset StrSql, rs_Tel
              If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                  StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                  StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelCelular & "',0,0,-1,2)"
                  objConn.Execute StrSql, , adExecuteNoRecords
                  Texto = ": " & "Inserte el Telefono Celular - "
                  Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
              End If
          End If
        Else
            StrSql = " UPDATE detdom SET "
            StrSql = StrSql & " calle =" & "'" & Calle & "'"
            StrSql = StrSql & ",nro =" & "'" & Nro_Nrodom & "'"
            StrSql = StrSql & ",piso =" & "'" & Piso & "'"
            StrSql = StrSql & ",oficdepto =" & "'" & Depto & "'"
            StrSql = StrSql & ",torre =" & "'" & Torre & "'"
            StrSql = StrSql & ",manzana =" & "'" & Manzana & "'"
            StrSql = StrSql & ",codigopostal =" & "'" & Cpostal & "'"
            StrSql = StrSql & ",entrecalles =" & "'" & Entre & "'"
            StrSql = StrSql & ",locnro =" & Nro_Localidad
            StrSql = StrSql & ",provnro =" & Nro_Provincia
            StrSql = StrSql & ",paisnro =" & Nro_Pais
            StrSql = StrSql & ", zonanro =" & Nro_Zona
            StrSql = StrSql & " WHERE domnro = " & rs!domnro
            objConn.Execute StrSql, , adExecuteNoRecords
        
            Texto = ": " & "Domicilio Actualizado - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        
            If Telefono <> "" Then
                StrSql = "SELECT * FROM telefono "
                StrSql = StrSql & " WHERE domnro =" & rs!domnro
                StrSql = StrSql & " AND telnro ='" & Telefono & "'"
                If rs_Tel.State = adStateOpen Then rs_Tel.Close
                OpenRecordset StrSql, rs_Tel
                If rs_Tel.EOF Then
                    'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                    StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                    StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & Telefono & "',0,-1,0,1)"
                    objConn.Execute StrSql, , adExecuteNoRecords
                      
                    Texto = ": " & "Inserte el Telefono Principal - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            End If
            If TelLaboral <> "" Then
                StrSql = "SELECT * FROM telefono "
                StrSql = StrSql & " WHERE domnro =" & rs!domnro
                StrSql = StrSql & " AND telnro ='" & TelLaboral & "'"
                If rs_Tel.State = adStateOpen Then rs_Tel.Close
                OpenRecordset StrSql, rs_Tel
                If rs_Tel.EOF Then
                    'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                    StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                    StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & TelLaboral & "',0,0,0,3)"
                    objConn.Execute StrSql, , adExecuteNoRecords
                      
                    Texto = ": " & "Inserte el Telefono Laboral - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            End If
            If TelCelular <> "" Then
                StrSql = "SELECT * FROM telefono "
                StrSql = StrSql & " WHERE domnro =" & rs!domnro
                StrSql = StrSql & " AND telnro ='" & TelCelular & "'"
                If rs_Tel.State = adStateOpen Then rs_Tel.Close
                OpenRecordset StrSql, rs_Tel
                If rs_Tel.EOF Then
                    'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                    StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                    StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & TelCelular & "',0,0,-1,2)"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = ": " & "Inserte el Telefono Celular - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            End If
        End If
    End If
  End If
  
  
  If Not ExisteLeg Then
        ' Inserto las Fases
        StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
        StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
        If nro_causabaja <> 0 Then
          StrSql = StrSql & nro_causabaja
        Else
          StrSql = StrSql & "null"
        End If
        If UCase(F_Baja) <> "NULL" Then
          StrSql = StrSql & ", 0 "
        Else
          StrSql = StrSql & "," & ter_estado
        End If
        StrSql = StrSql & ",-1,-1,-1,-1,-1)"
          'StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        If nro_causabaja <> 0 Then
            Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
        End If
    
  Else
  
        StrSql = "SELECT * FROM fases WHERE estado = -1 AND sueldo = -1 AND vacaciones = -1 AND indemnizacion = -1 AND real = -1 AND empleado = " & NroTercero
        OpenRecordset StrSql, rs
        
        If rs.EOF Then
            StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
            StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
            If nro_causabaja <> 0 Then
              StrSql = StrSql & nro_causabaja
            Else
              StrSql = StrSql & "null"
            End If
            If UCase(F_Baja) <> "NULL" Then
              StrSql = StrSql & ", 0 "
            Else
              StrSql = StrSql & "," & ter_estado
            End If
            StrSql = StrSql & ",-1,-1,-1,-1,-1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            If nro_causabaja <> 0 Then
                Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
            End If
            
        Else
            StrSql = " UPDATE fases SET "
             'StrSql = StrSql & " altfec =" & F_Alta    ' xxx
             'StrSql = StrSql & ",bajfec =" & F_Baja
            StrSql = StrSql & " bajfec =" & F_Baja
            If nro_causabaja <> 0 Then
               StrSql = StrSql & ", caunro =" & nro_causabaja
            End If
            If UCase(F_Baja) <> "NULL" Then
               StrSql = StrSql & ", estado = 0 "
            End If
            StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
            objConn.Execute StrSql, , adExecuteNoRecords
        
            Texto = ": " & "Fase Actualizada - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            
            If nro_causabaja <> 0 Then
                Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
            End If
            
        End If
  End If
  
  
  'Inserto la cuenta bancaria
    If Not ExisteLeg Then
        If (nro_formapago <> 0 And ter_bancopago <> 0 And NroCuenta <> "") Then
                StrSql = " INSERT INTO ctabancaria (ternro,fpagnro,banco,ctabestado,"
                StrSql = StrSql & "ctabsuc,ctabnro,ctabporc,ctabcbu"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",ctabacred"
                End If
                StrSql = StrSql & ") VALUES ("
                StrSql = StrSql & NroTercero & "," & nro_formapago & "," & ter_bancopago & ","
                StrSql = StrSql & "-1,'" & Left(SucBanco, 10) & "','" & NroCuenta & "',100,'" & NroCBU & "'"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",'" & NroCuentaAcreditacionE & "'"
                End If
                StrSql = StrSql & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Inserte la Cuenta Bancaria - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
        End If
    Else
        If (nro_formapago <> 0 And ter_bancopago <> 0 And NroCuenta <> "") Then
            StrSql = "SELECT * FROM ctabancaria"
            StrSql = StrSql & " WHERE ctabancaria.ternro =" & NroTercero
            StrSql = StrSql & " AND ctabestado = -1 "
            StrSql = StrSql & " AND banco =" & ter_bancopago
            StrSql = StrSql & " AND fpagnro =" & nro_formapago
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If rs.EOF Then
                StrSql = " INSERT INTO ctabancaria (ternro,fpagnro,banco,ctabestado,"
                StrSql = StrSql & "ctabsuc,ctabnro,ctabporc,ctabcbu"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",ctabacred"
                End If
                StrSql = StrSql & ") VALUES ("
                StrSql = StrSql & NroTercero & "," & nro_formapago & "," & ter_bancopago & ","
                StrSql = StrSql & "-1,'" & Left(SucBanco, 10) & "','" & NroCuenta & "',100,'" & NroCBU & "'"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",'" & NroCuentaAcreditacionE & "'"
                End If
                StrSql = StrSql & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Inserte la Cuenta Bancaria - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            Else
                If rs!ctabnro = NroCuenta Then
                    StrSql = "UPDATE ctabancaria SET "
                    StrSql = StrSql & " ctabsuc = '" & SucBanco & "'"
                    If Not EsNulo(NroCuentaAcreditacionE) Then
                        StrSql = StrSql & ", ctabacred = '" & NroCuentaAcreditacionE & "'"  '21-12-10
                    End If
                    StrSql = StrSql & ", ctabnro = " & "'" & NroCuenta & "'"
                    StrSql = StrSql & ", ctabporc = 100 "
                    StrSql = StrSql & ", ctabcbu = '" & NroCBU & "'"
                    StrSql = StrSql & " WHERE ctabancaria.ternro =" & NroTercero
                    StrSql = StrSql & " AND ctabestado = -1 "
                    StrSql = StrSql & " AND banco =" & ter_bancopago
                    StrSql = StrSql & " AND fpagnro =" & nro_formapago
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    Texto = ": " & "Cuenta Bancaria actualizada- "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                Else
                    'Desactivo la anterior
                    StrSql = " UPDATE ctabancaria SET "
                    StrSql = StrSql & " ctabestado = 0 "
                    StrSql = StrSql & " WHERE cbnro = " & rs!Cbnro
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    'inserto la nueva
                    StrSql = " INSERT INTO ctabancaria (ternro,fpagnro,banco,ctabestado,"
                    StrSql = StrSql & "ctabsuc,ctabnro,ctabporc,ctabcbu"
                    If Not EsNulo(NroCuentaAcreditacionE) Then
                        StrSql = StrSql & ",ctabacred"
                    End If
                    StrSql = StrSql & ") VALUES ("
                    StrSql = StrSql & NroTercero & "," & nro_formapago & "," & ter_bancopago & ","
                    StrSql = StrSql & "-1,'" & Left(SucBanco, 10) & "','" & NroCuenta & "',100,'" & NroCBU & "'"
                    If Not EsNulo(NroCuentaAcreditacionE) Then
                        StrSql = StrSql & ",'" & NroCuentaAcreditacionE & "'"
                    End If
                    StrSql = StrSql & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = ": " & "Inserte la Cuenta Bancaria - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            End If
        End If
    End If
  
  'Inserto las Estructuras
'  Call AsignarEstructura(1, nro_sucursal, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(2, nro_sector, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(3, nro_categoria, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(4, nro_puesto, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(5, nro_ccosto, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(6, nro_gerencia, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(7, Nro_GrupoSeguridad, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(9, nro_departamento, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(10, nro_empresa, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(15, nro_cajajub, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(16, nro_sindicato, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(17, nro_osocial_elegida, NroTercero, F_Alta, F_Baja)
'  'Call AsignarEstructura(18, nro_contrato, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(18, nro_contrato, NroTercero, F_Alta, Fecha_FinContrato)
'  Call AsignarEstructura(19, nro_convenio, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(20, nro_lpago, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(21, nro_reghorario, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(22, nro_formaliq, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(23, nro_planos_elegida, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(24, nro_osocial_ley, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(25, nro_planos_ley, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(29, nro_mutual, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(30, nro_sitrev, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(31, nro_CajaComp, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(35, nro_direccion, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(40, nro_art, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(41, nro_bancopago, NroTercero, F_Alta, F_Baja)
  
  
  Call AsignarEstructura_NEW(1, nro_oficina, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(2, nro_sector, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(3, nro_categoria, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(4, nro_cargo, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(5, nro_ccosto, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(6, nro_gerencia, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(7, Nro_GrupoSeguridad, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(9, nro_departamento, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(10, nro_empresa, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(15, nro_AFP, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(16, nro_sindicato, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(17, nro_osocial_elegida, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(18, nro_contrato, NroTercero, F_Alta, F_Baja)
  'Call AsignarEstructura_NEW(18, nro_contrato, NroTercero, F_Alta, Fecha_FinContrato)
  Call AsignarEstructura_NEW(19, nro_convenio, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(20, nro_lpago, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(21, nro_reghorario, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(22, nro_formaliq, NroTercero, F_Alta, F_Baja)
  'Call AsignarEstructura_NEW(23, nro_planos_elegida, NroTercero, F_Alta, F_Baja)
  'Call AsignarEstructura_NEW(24, nro_osocial_ley, NroTercero, F_Alta, F_Baja)
  'Call AsignarEstructura_NEW(25, nro_planos_ley, NroTercero, F_Alta, F_Baja)
  'Call AsignarEstructura_NEW(29, nro_actividad, NroTercero, F_Alta, F_Baja)
  'Call AsignarEstructura_NEW(30, nro_sitrev, NroTercero, F_Alta, F_Baja)
  'Call AsignarEstructura_NEW(31, nro_CajaComp, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(35, nro_direccion, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(40, nro_mutual, NroTercero, F_Alta, F_Baja)
  'Call AsignarEstructura_NEW(41, nro_bancopago, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(44, nro_CajaComp, NroTercero, F_Alta, F_Baja)
 
  
Texto = ": " & "Linea procesada correctamente "
Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
'LineaOK.Writeline Mid(strReg, 1, Len(strReg))
OK = True
         
FinLinea:
If rs.State = adStateOpen Then
    rs.Close
End If
Exit Sub

SaltoLinea:
    Texto = ": " & " - Error:" & Err.Description
    NroColumna = 1
    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    MyRollbackTrans
    OK = False
    GoTo FinLinea
End Sub


Public Sub LineaModelo_608(ByVal strReg As String, ByRef OK As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de Empleados de Colombia
' Autor      : FGZ
' Fecha      : 10/02/2009
' Ultima Mod.:
' ---------------------------------------------------------------------------------------------
Dim pos1            As Long
Dim pos2            As Long

Dim Legajo          As String   'LEGAJO                   -- empleado.empleg
Dim Apellido        As String   'APELLIDO                 -- empleado.terape y tercero.terape
Dim nombre          As String   'NOMBRE                   -- empleado.ternom y tercero.ternom
Dim Apellido2       As String   'APELLIDO                 -- empleado.terape2 y tercero.terape2
Dim nombre2         As String   'NOMBRE                   -- empleado.ternom2 y tercero.ternom2
Dim Fnac            As String   'FNAC                     -- tercero.terfecna
Dim Nacionalidad    As String   'Nacionalidad             -- tercero.nacionalnro
Dim PaisNac         As String   'Pais de Nacimiento       -- tercero.paisnro
Dim Fing            As String   'Fec.Ingreso al Pais      -- terecro.terfecing
Dim EstCivil        As String   'Est.Civil                -- tercero.estcivnro
Dim Sexo            As String   'Sexo                     -- tercero.tersex
Dim FAlta           As String   'Fec. de Alta             -- empleado.empfaltagr y fases.altfec
Dim Estudio         As String   'Estudia                  -- empleado.empestudia
Dim NivEst          As String   'Nivel de Estudio         -- empleado.nivnro
Dim Tdocu           As String   'Tipo Documento           -- ter_dpc.tidnro (DU)
Dim Ndocu           As String   'Nro. Documento           -- ter_doc.nrodoc
Dim Cuil            As String   'CUIL                     -- ter_doc.nrodoc (10)
Dim Calle           As String   'Calle                    -- detdom.calle
Dim Nro             As String   'Número                   -- detdom.nro
Dim Piso            As String   'Piso                     -- detdom.piso
Dim Depto           As String   'Depto                    -- detdom.depto
Dim Torre           As String   'Torre                    -- detdom.torre
Dim Manzana         As String   'Manzana                  -- detdom.manzana
Dim Cpostal         As String   'Cpostal                  -- detdom.codigopostal
Dim Entre           As String   'Entre Calles             -- detdom.entrecalles
Dim Barrio          As String   'Barrio                   -- detdom.barrio
Dim Localidad       As String   'Localidad                -- detdom.locnro
Dim Partido         As String   'Partido                  -- detdom.partnro
Dim Zona            As String   'Zona                     -- detdom.zonanro
Dim Provincia       As String   'Provincia                -- detdom.provnro
Dim Pais            As String   'Pais                     -- detdom.paisnro
Dim Telefono        As String   'Telefono                 -- telefono.telnro
Dim TelLaboral        As String   'Telefono                 -- telefono.telnro
Dim TelCelular        As String   'Telefono                 -- telefono.telnro
Dim Email           As String   'E-mail                   -- empleado.empemail
Dim Sucursal        As String   'Sucursal                 -- his_estructura.estrnro
Dim Sector          As String   'Sector                   -- his_estructura.estrnro
Dim categoria       As String   'Categoria                -- his_estructura.estrnro
Dim Puesto          As String   'Puesto                   -- his_estructura.estrnro
Dim CCosto          As String   'C.Costo                  -- his_estructura.estrnro
Dim Gerencia        As String   'Gerencia                 -- his_estructura.estrnro
Dim Departamento    As String   'Departamento             -- his_estructura.estrnro
Dim Direccion       As String   'Direccion                -- his_estructura.estrnro
Dim CajaJub         As String   'Caja de Jubilacion       -- his_estructura.estrnro
Dim Sindicato       As String   'Sindicato                -- his_estructura.estrnro
Dim OSocialLey         As String   'Obra Social              -- his_estructura.estrnro
Dim PlanOSLey          As String   'Plan OS                  -- his_estructura.estrnro
Dim OSocialElegida         As String   'Obra Social              -- his_estructura.estrnro
Dim PlanOSElegida          As String   'Plan OS                  -- his_estructura.estrnro
Dim Contrato        As String   'Contrato                 -- his_estructura.estrnro
Dim Convenio        As String   'Convenio                 -- his_estructura.estrnro
Dim LPago           As String   'Lugar de Pago            -- his_estructura.estrnro
Dim RegHorario      As String   'Regimen Horario          -- his_estructura.estrnro
Dim FormaLiq        As String   'Forma de Liquidacion     -- his_estructura.estrnro
Dim FormaPago       As String   'Forma de Pago            -- formapago.fpagdescabr
Dim SucBanco        As String   'Sucursal del Banco       -- ctabancaria.ctabsuc
Dim BancoPago       As String   'Banco Pago               -- his_estructura.estrnro, formapago.fpagbanc (siempre y cuando el Banco sea <> 0) y ctabancaria.banco
Dim NroCuenta       As String   'Nro. Cuenta              -- ctabancario.ctabnro
Dim NroCuentaAcreditacionE As String
Dim Actividad       As String   'Actividad                -- his_estructura.estrnro
Dim CondSIJP        As String   'Condicion SIJP           -- his_estructura.estrnro
Dim SitRev          As String   'Sit. de Revista SIJP     -- his_estructura.estrnro
Dim ModCont         As String   'Mod. de Contrat. SIJP    -- his_estructura.estrnro
Dim ART             As String   'ART                      -- his_estructura.estrnro
Dim Estado          As String   'Estado                   -- empleado.empest y fases.estado
Dim CausaBaja       As String   'Causa de Baja            -- fases.caunro
Dim FBaja           As String   'Fecha de Baja            -- fases.bajfec
Dim Empresa         As String   'Empresa                  -- his_estructura.estrnro
Dim ModOrg          As String   'Empresa                  -- his_estructura.estrnro
Dim OSL             As String   'Empresa                  -- his_estructura.estrnro
Dim OSE             As String   'Empresa                  -- his_estructura.estrnro
Dim PlanOdon        As String   'Empresa                  -- his_estructura.estrnro
Dim Locacion        As String   'Empresa                  -- his_estructura.estrnro
Dim Area            As String   'Empresa                  -- his_estructura.estrnro
Dim SubDepto        As String   'Empresa                  -- his_estructura.estrnro
Dim NroCBU          As String   'Empresa                  -- his_estructura.estrnro
Dim Empremu         As String   'Remuneración del empleado
Dim GrupoSeguridad  As String   'Grupo de Seguridad
Dim Nro_GrupoSeguridad  As Long 'Grupo de Seguridad       -- his_estructura.estrnro
Dim FFinContrato    As String
Dim Fecha_FinContrato As String
Dim Reporta_a       As String
Dim Nro_Reporta_a   As Long

Dim Ternro As Long

Dim NroTercero          As Long

Dim Nro_Legajo          As Long
Dim Nro_TDocumento      As Long
Dim nro_nivest          As Long
Dim nro_estudio         As Long

Dim Nro_Nrodom          As String

Dim Nro_Barrio          As Long
Dim Nro_Localidad       As Long
Dim Nro_Partido         As Long
Dim Nro_Zona            As Long
Dim Nro_Provincia       As Long
Dim Nro_Pais            As Long
Dim nro_paisnac         As Long

Dim nro_sucursal        As Long
Dim nro_sector          As Long
Dim nro_categoria       As Long
Dim nro_puesto          As Long
Dim nro_ccosto          As Long
Dim nro_gerencia        As Long
Dim nro_cajajub         As Long
Dim nro_sindicato       As Long
Dim nro_osocial_ley     As Long
Dim nro_planos_ley      As Long
Dim nro_osocial_elegida As Long
Dim nro_planos_elegida  As Long
Dim nro_contrato        As Long
Dim nro_convenio        As Long
Dim nro_reghorario      As Long
Dim nro_formaliq        As Long
Dim nro_bancopago       As Long
Dim nro_actividad       As Long
Dim nro_sitrev          As Long
Dim nro_modcont         As Long
Dim nro_art             As Long
Dim nro_departamento    As Long
Dim nro_direccion       As Long
Dim nro_lpago           As Long
Dim nro_condsijp        As Long
Dim nro_formapago       As Long
Dim nro_causabaja       As Long
Dim nro_empresa         As Long
Dim NroDom              As Long
Dim nro_osl             As Long
Dim nro_odon            As Long
Dim nro_ose             As Long
Dim nro_locacion        As Long
Dim nro_area            As Long
Dim nro_SubDepto        As Long
Dim nro_empremu         As Long

Dim nro_estcivil        As Long
Dim nro_nacionalidad    As Long

Dim F_Nacimiento        As String
Dim F_Fallecimiento     As String
Dim F_Alta              As String
Dim F_Baja              As String
Dim F_Ingreso           As String

Dim Inserto_estr        As Boolean

Dim ter_sucursal        As Long
Dim Ter_Empresa         As Long
Dim ter_cajajub         As Long
Dim ter_sindicato       As Long
Dim ter_osocial_ley     As Long
Dim ter_osocial_elegida As Long
Dim ter_bancopago       As Long
Dim ter_art             As Long
Dim ter_sexo            As Long
Dim ter_estudio         As Long
Dim ter_estado          As Long

Dim fpgo_bancaria       As Long

Dim rs As New ADODB.Recordset
Dim rs_Sql As New ADODB.Recordset
Dim rs_Empleado As New ADODB.Recordset
Dim rs_Tel As New ADODB.Recordset
Dim rs_repl As New ADODB.Recordset


Dim SucDesc             As Boolean   'Sucursal                 -- his_estructura
Dim SecDesc             As Boolean   'Sector                   -- his_estructura
Dim CatDesc             As Boolean   'Categoria                -- his_estructura
Dim PueDesc             As Boolean   'Puesto                   -- his_estructura
Dim CCoDesc             As Boolean   'C.Costo                  -- his_estructura
Dim GerDesc             As Boolean   'Gerencia                 -- his_estructura
Dim DepDesc             As Boolean   'Departamento             -- his_estructura
Dim DirDesc             As Boolean   'Direccion                -- his_estructura
Dim CaJDesc             As Boolean   'Caja de Jubilacion       --
Dim SinDesc             As Boolean   'Sindicato                -- his_estructura
Dim OSoElegidaDesc      As Boolean   'Obra Social              -- his_estructura
Dim PoSElegidaDesc      As Boolean   'Plan OS                  -- his_estructura
Dim OSoLeyDesc          As Boolean   'Obra Social              -- his_estructura
Dim PoSLeyDesc          As Boolean   'Plan OS                  -- his_estructura
Dim CotDesc             As Boolean   'Contrato                 -- his_estructura
Dim CovDesc             As Boolean   'Convenio                 -- his_estructura
Dim LPaDesc             As Boolean   'Lugar de Pago            -- his_estructura
Dim RegDesc             As Boolean   'Regimen Horario          -- his_estructura
Dim FLiDesc             As Boolean   'Forma de Liquidacion     -- his_estructura
Dim FPaDesc             As Boolean      'Forma de Pago            -- his_estructura
Dim BcoDesc             As Boolean      'Banco Pago               --
Dim ActDesc             As Boolean      'Actividad                --
Dim CSJDesc             As Boolean      'Condicion SIJP           --
Dim SReDesc             As Boolean      'Sit. de Revista SIJP     --
Dim MCoDesc             As Boolean      'Mod. de Contrat. SIJP    --
Dim ARTDesc             As Boolean      'ART                      --
Dim EmpDesc             As Boolean      'Empresa                  --
Dim OSLDesc             As Boolean      'Empresa                  --
Dim POdoDesc             As Boolean     'Empresa                  --
Dim OSEDesc             As Boolean      'Empresa                  --
Dim LocDesc             As Boolean      'Empresa                  --
Dim AreaDesc             As Boolean     'Empresa                  --
Dim SubDepDesc             As Boolean   'Empresa                  --

Dim IngresoDom          As Boolean

Dim rs_tdoc As New ADODB.Recordset
Dim rs_emp  As New ADODB.Recordset
Dim rs_tpl  As New ADODB.Recordset
Dim rs_leg  As New ADODB.Recordset

Dim Nroadtemplate As Long
Dim Nro_Institucion As Long

Dim Sigue As Boolean
Dim ExisteLeg As Boolean
Dim CalculaLegajo As Boolean

Dim ape()             As String   'Agregado ver 4.09
Dim Nom()              As String   'Agregado ver 4.09


    On Error GoTo SaltoLinea

    ' True indica que se hace por Descripcion. False por Codigo Externo

    SucDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    SecDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CatDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    PueDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CCoDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    GerDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    DepDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    DirDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CaJDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    SinDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    OSoElegidaDesc = True ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    PoSElegidaDesc = True ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    OSoLeyDesc = True   ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    PoSLeyDesc = True   ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CotDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CovDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    LPaDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    RegDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    FLiDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    FPaDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    BcoDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    ActDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CSJDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    SReDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    MCoDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    ARTDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    EmpDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    OSLDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    POdoDesc = True     ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    OSEDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    LocDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    AreaDesc = True     ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    SubDepDesc = True   ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    
    'No se usan asi que quedan en blanca
    Manzana = ""
    Cpostal = ""
    Partido = ""
    Zona = ""
    Provincia = ""
    
    
    Sigue = True 'Indica que si en el archivo viene mas de una vez un empleado, le crea las fases
    ExisteLeg = False
    'RegLeidos = RegLeidos + 1
    LineaCarga = LineaCarga + 1
    
    Flog.writeline
    FlogE.writeline
    FlogP.writeline
    
    'Legajo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Legajo"
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Legajo = Aux
    'Legajo = Mid(strReg, pos1, pos2 - pos1 + 1)
    If Legajo = "N/A" Or EsNulo(Legajo) Then
        CalculaLegajo = True
    Else
        StrSql = "SELECT * FROM empleado WHERE empleado.empleg = " & Legajo
        OpenRecordset StrSql, rs_emp
        If (Not rs_emp.EOF) Then
            If (Not Sigue) Then
                Texto = ": " & " - El Empleado ya Existe."
                NroColumna = 1
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                'Ok = False
                'RegError = RegError + 1
                'Exit Sub
            Else
                NroTercero = rs_emp!Ternro
                ExisteLeg = True
            End If
        End If
    End If
    
    '_________________________sebastian stremel 23/11/2012___________
        'Apellido
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Apellido"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    ape = Split(Aux, "@") 'Agregado ver 4.09
    
    'If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then 'Linea anterior ver 4.08
    If (ape(0) = "N/A" Or EsNulo(ape(0))) And Obligatorio Then 'Modificado ver 4.09
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Apellido = Left(ape(0), 25) 'Modificado ver 4.09
    '----------------Agregado ver 4.09---------------------------
    If Not (ape(1) = "N/A" Or EsNulo(ape(1)) Or ape(1) = "") Then
        Apellido2 = Left(ape(1), 25)
    Else
        Apellido2 = ""
    End If
    '---------------------------------------------------------

    '________________________________________________________
    
   
    '_______________sebastian stremel 23/11/2012__________________
    'Nombre
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nombre"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Nom = Split(Aux, "@")
    'If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then 'Linea anterior ver 4.08
    If (Nom(0) = "N/A" Or EsNulo(Nom(0))) And Obligatorio Then 'Modificado ver 4.09
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    nombre = Left(Nom(0), 25) 'Modificado ver 4.09
    If (Apellido = "" Or Apellido = "N/A") And (nombre = "" Or nombre = "N/A") Then
        Texto = ": " & " - Debe Ingresar un Nombre y Apellido."
        NroColumna = 2
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    '----------------Agregado ver 4.09---------------------------
    If Not (Nom(1) = "N/A" Or EsNulo(Nom(1)) Or Nom(1) = "") Then
        nombre2 = Left(Nom(1), 25)
    Else
        nombre2 = ""
    End If
    '---------------------------------------------------------
    '______________________________________________________________
    
    
    'Fecha de Nacimiento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de Nacimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Fnac = Aux
    If Fnac = "N/A" Then
       F_Nacimiento = "Null"
    Else
       F_Nacimiento = ConvFecha(Fnac)
    End If
    
    'Pais de Nacimiento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Pais de Nacimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    PaisNac = Aux
    If PaisNac <> "N/A" Then
        StrSql = " SELECT paisnro FROM pais WHERE UPPER(paisdesc) = '" & UCase(PaisNac) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_paisnac = rs_Sql!Paisnro
        Else
            StrSql = " INSERT INTO pais(paisdesc,paisdef) VALUES ('" & UCase(PaisNac) & "',0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_paisnac = getLastIdentity(objConn, "pais")
        End If
    Else
        nro_paisnac = 0
    End If
    
    'Nacionalidad
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nacionalidad"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Nacionalidad = Aux
    If Nacionalidad <> "N/A" Then
        StrSql = " SELECT nacionalnro FROM nacionalidad WHERE UPPER(nacionaldes) = '" & UCase(Nacionalidad) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_nacionalidad = rs_Sql!nacionalnro
        Else
            StrSql = " INSERT INTO nacionalidad(nacionaldes) VALUES ('" & UCase(Nacionalidad) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_nacionalidad = getLastIdentity(objConn, "nacionalidad")
        End If
    Else
        nro_nacionalidad = 0
    End If
    If nro_nacionalidad = 0 Then
        Texto = ": " & " - La Nacionalidad no Existe."
        NroColumna = 6
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    
    'Fecha de Ingreso al Pais
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de Ingreso al Pais"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Fing = Aux
    If (Fing = "N/A") Or EsNulo(Fing) Then
        F_Ingreso = "Null"
    Else
        F_Ingreso = ConvFecha(Fing)
    End If
    
    'Estado Civil
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estado Civil"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    EstCivil = Left(Aux, 30)
    If EstCivil <> "N/A" And Not EsNulo(EstCivil) Then
        StrSql = " SELECT estcivnro FROM estcivil WHERE UPPER(estcivdesabr) = '" & UCase(EstCivil) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_estcivil = rs_Sql!estcivnro
        Else
            StrSql = " INSERT INTO estcivil(estcivdesabr) VALUES ('" & UCase(EstCivil) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_estcivil = getLastIdentity(objConn, "estcivil")
        End If
    Else
        nro_estcivil = 0
    End If
    If nro_estcivil = 0 Then
        Texto = ": " & " - El Estado Civil no Existe."
        NroColumna = 8
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Sexo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sexo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Sexo = UCase(Aux)
    If (Sexo = "M") Or (Sexo = "-1") Or (Sexo = "MASCULINO") Then
        ter_sexo = -1
    Else
        ter_sexo = 0
    End If
                                                            
    'Fecha de alta
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de alta"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    FAlta = Aux
    If FAlta = "N/A" Or EsNulo(FAlta) Then
        F_Alta = "Null"
        Texto = ": " & " - La Fecha de Alta es Obligatoria."
        NroColumna = 10
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    Else
        F_Alta = ConvFecha(FAlta)
    End If
   
    'Estudia?
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estudia?"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Estudio = UCase(Aux)
    If Estudio <> "N/A" And Estudio <> "NO" Then
        If Estudio = "SI" Then
            ter_estudio = -1
        Else
            ter_estudio = 0
        End If
    Else
        ter_estudio = 0
    End If
    
    'Nivel de estudio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nivel de estudio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    NivEst = Left(Aux, 40)
    If NivEst <> "N/A" Then
        StrSql = " SELECT nivnro FROM nivest WHERE UPPER(nivdesc) = '" & UCase(NivEst) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_nivest = rs_Sql!nivnro
        Else
            StrSql = " INSERT INTO nivest(nivdesc,nivsist,nivobligatorio,nivestfli) VALUES ('" & UCase(NivEst) & "',-1,0,-1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_nivest = getLastIdentity(objConn, "nivest")
        End If
    Else
        nro_nivest = 0
    End If
    
    'Tipo de Doc
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tipo de Doc"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Tdocu = Left(Aux, 8)
    If Tdocu <> "N/A" Then
        StrSql = " SELECT tidnro FROM tipodocu WHERE UPPER(tidsigla) = '" & UCase(Tdocu) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            Nro_TDocumento = rs_Sql!tidnro
        Else
            'busco la primera institucion, si no existe la creo
            StrSql = " SELECT * FROM institucion "
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                Nro_Institucion = rs!InstNro
            Else
                'creo una
                StrSql = " INSERT INTO institucion (instdes,instabre) VALUES ('NACIONAL','NAC')"
                objConn.Execute StrSql, , adExecuteNoRecords
                Nro_Institucion = getLastIdentity(objConn, "institucion")
            End If
            'creo el tipo de documento
            StrSql = " INSERT INTO tipodocu(tidnom,tidsigla,tidsist,instnro,tidunico) VALUES ('" & UCase(Tdocu) & "','" & UCase(Tdocu) & "',0," & Nro_Institucion & ",0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            Nro_TDocumento = getLastIdentity(objConn, "tipodocu")
        End If
    Else
        Nro_TDocumento = 0
    End If
    If Nro_TDocumento = 0 Then
        Texto = ": " & " - El Tipo de Documento no Existe."
        NroColumna = 13
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Nro de Documento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nro de Documento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Ndocu = Left(Aux, 30)
    If Ndocu = "N/A" Then
        Ndocu = ""
    End If
    
    StrSql = "SELECT * FROM empleado "
    StrSql = StrSql & " INNER JOIN ter_doc ON ter_doc.ternro = empleado.ternro "
    StrSql = StrSql & " WHERE ter_doc.tidnro = " & Nro_TDocumento & " AND ter_doc.nrodoc = '" & Ndocu & "'"
    OpenRecordset StrSql, rs_tdoc
    If (Not rs_tdoc.EOF) Then
        If (Not Sigue) Then
            Texto = ": " & " - Ese Tipo y Numero de Documento estan Asignados a otro Empleado."
            NroColumna = 14
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            'Ok = False
            RegError = RegError + 1
            Exit Sub
        Else
            NroTercero = rs_tdoc!Ternro
            ExisteLeg = True
            Texto = ": " & " - Empleado: " & Legajo & " - Ese Tipo y Numero de Documento estan Asignados a otro Empleado."
            NroColumna = 14
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
    End If
    
'    'CUIL
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "CUIL"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
'    Cuil = Replace(Left(aux, 30), "-", "")
'    If Cuil = "N/A" Or EsNulo(Cuil) Then
'        Cuil = Generar_Rut_Colombia(Ndocu, CBool(ter_sexo))
'        If Cuil = 0 Then
'            Texto = ": " & " - Campo " & Campoetiqueta & " no se pudo generar automaticamente " & Ndocu
'            Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'            RegError = RegError + 1
'            Exit Sub
'        End If
'    Else
'        OK = Rut_Valido_Colombia(Cuil, Texto)
'        If Not OK Then
'            OK = True
'            Texto = "El CUIL no es valido"
'            Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'            Cuil = Generar_Cuil_Col(Ndocu, CBool(ter_sexo))
'        End If
'    End If
'    Cuil = Left(Cuil, 2) & "-" & Mid(Cuil, 3, 8) & "-" & Right(Cuil, 1)
    
    
    'Hasta Aqui los Datos Obligatorios del Empleado
    IngresoDom = True
        
    'Calle
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Calle"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Calle = Left(Aux, 250)
    
    If Calle = "N/A" Then
        Calle = ""
        IngresoDom = False
    End If
    
    'Nro
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Nro"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Nro = Left(Aux, 8)
    If (Nro <> "N/A") Then
        Nro_Nrodom = Nro
    Else
        Nro_Nrodom = 0
    End If
    
    'Piso
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Piso"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Piso = Left(Aux, 8)
    If Piso = "N/A" Then
        Piso = ""
    End If
    
    'Departamento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Departamento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Depto = Left(Aux, 8)
    If Depto = "N/A" Then
        Depto = ""
    End If

    'Torre
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Torre"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Torre = Left(Aux, 8)
    If Torre = "N/A" Then
        Torre = ""
    End If
    
'    'Codigo Postal
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Codigo Postal"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
'    Cpostal = Left(aux, 12)
'    If Cpostal = "N/A" Then
'        Cpostal = ""
'    End If

    'Entre calles
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Entre calles"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Entre = Left(Aux, 80)
    If Entre = "N/A" Then
        Entre = ""
    End If

    'Barrio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Barrio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Barrio = Left(Aux, 30)
    If Barrio = "N/A" Then
        Barrio = ""
    End If

    'Localidad
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Localidad"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    '19/03/2010 - Se cambio la longitud a 60
    'Localidad = Left(aux, 30)
    Localidad = Left(Aux, 60)
    
    'Provincia
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Provincia"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Provincia = Left(Aux, 20)
    
    
    'Pais
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Pais"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Pais = Left(Aux, 20)
    If Pais <> "N/A" Then
        Call ValidarPais(Pais, Nro_Pais)
    Else
        Nro_Pais = 0
    End If
    If Provincia <> "N/A" Then
        Call ValidarProvincia(Provincia, Nro_Provincia, Nro_Pais)
    Else
        Nro_Provincia = 0
    End If
    If Localidad <> "N/A" Then
        Call ValidarLocalidad(Localidad, Nro_Localidad, Nro_Pais, Nro_Provincia)
    Else
        Nro_Localidad = 0
    End If
    
    If (IngresoDom = True) And (Nro_Localidad = 0) Then
        Texto = ": " & " - Debe Ingresar la Localidad."
        NroColumna = 25
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If (IngresoDom = True) And (Nro_Provincia = 0) Then
        Texto = ": " & " - Debe Ingresar la Provincia."
        NroColumna = 28
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    If (IngresoDom = True) And (Nro_Pais = 0) Then
        Texto = ": " & " - Debe Ingresar la Pais."
        NroColumna = 29
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Tel Particular
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tel Particular"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Telefono = Left(Aux, 20)
    If Telefono = "N/A" Then
        Telefono = ""
    End If
    
    'Tel Laboral
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tel Laboral"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    TelLaboral = Left(Aux, 20)
    If TelLaboral = "N/A" Then
        TelLaboral = ""
    End If
    
    'Tel Celular
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tel Celular"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    TelCelular = Left(Aux, 20)
    If TelCelular = "N/A" Then
        TelCelular = ""
    End If
    
    'Email
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Email"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Email = Left(Aux, 100)
    If Email = "N/A" Then
        Email = ""
    End If
    
    'Sucursal
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sucursal"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Sucursal = Aux
    ' Validacion y Creacion de la Sucursal (junto con sus Complementos)
    If Sucursal <> "N/A" Then
        If SucDesc Then
            Call ValidaEstructura(1, Sucursal, nro_sucursal, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(1, Sucursal, nro_sucursal, Inserto_estr)
        End If
        Call CreaTercero(10, Sucursal, ter_sucursal)
        
        If Inserto_estr Then
            Call CreaComplemento(1, ter_sucursal, nro_sucursal, Sucursal)
            Inserto_estr = False
        End If
    Else
        nro_sucursal = 0
    End If
    
    'Sector
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sector"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Sector = Aux
    ' Validacion y Creacion del Sector
    If Sector <> "N/A" Then
        If SecDesc Then
            Call ValidaEstructura(2, Sector, nro_sector, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(2, Sector, nro_sector, Inserto_estr)
        End If
    Else
        nro_sector = 0
    End If

    'Convenio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Convenio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Convenio = Aux
    ' Validacion, Creacion del Convenio
    If Convenio <> "N/A" Then
        If CovDesc Then
            Call ValidaEstructura(19, Convenio, nro_convenio, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(19, Convenio, nro_convenio, Inserto_estr)
        End If
        
        If Inserto_estr Then
            Call CreaComplemento(19, 0, nro_convenio, Convenio)
            Inserto_estr = False
        End If
    Else
        nro_convenio = 0
    End If
    
    
    'Categoria
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Categoria"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    categoria = Aux
    ' Validacion, Creacion de la Categoria
    If (categoria <> "N/A" And nro_convenio <> 0) Then
        If CatDesc Then
            'Call ValidaEstructura(3, categoria, nro_categoria, Inserto_estr)
            Call ValidaCategoria(3, categoria, nro_convenio, nro_categoria, Inserto_estr)
            
        Else
            'Call ValidaEstructuraCodExt(3, categoria, nro_categoria, Inserto_estr)
            Call ValidaCategoriaCodExt(3, categoria, nro_convenio, nro_categoria, Inserto_estr)
        End If
    Else
        nro_categoria = 0
    End If
    
    'Puesto
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Puesto"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Puesto = Aux
    'Validacion y Creacion del Puesto (junto con sus Complementos)
    If Puesto <> "N/A" Then
        If PueDesc Then
            Call ValidaEstructura(4, Puesto, nro_puesto, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(4, Puesto, nro_puesto, Inserto_estr)
        End If
        
        If Inserto_estr Then
            Call CreaComplemento(4, 0, nro_puesto, Puesto)
            Inserto_estr = False
        End If
    Else
        nro_puesto = 0
    End If

    'Centro de Costo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Centro de Costo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    CCosto = Aux
    ' Validacion y Creacion del Centro de Costo
    If CCosto <> "N/A" Then
        If CCoDesc Then
            Call ValidaEstructura(5, CCosto, nro_ccosto, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(5, CCosto, nro_ccosto, Inserto_estr)
        End If
    Else
        nro_ccosto = 0
    End If

    'Gerencia
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Gerencia"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Gerencia = Aux
    ' Validacion y Creacion de la Gerencia
    If Gerencia <> "N/A" Then
        If GerDesc Then
            Call ValidaEstructura(6, Gerencia, nro_gerencia, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(6, Gerencia, nro_gerencia, Inserto_estr)
        End If
    Else
        nro_gerencia = 0
    End If

    
    'Departamento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Departamento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Departamento = Aux
    ' Validacion y Creacion del Departamento
    If Departamento <> "N/A" Then
        If DepDesc Then
            Call ValidaEstructura(9, Departamento, nro_departamento, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(9, Departamento, nro_departamento, Inserto_estr)
        End If
    Else
        nro_departamento = 0
    End If

    'Direccion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Direccion = Aux
    ' Validacion y Creacion de direccion
    If Direccion <> "N/A" Then
        If DirDesc Then
            Call ValidaEstructura(35, Direccion, nro_direccion, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(35, Direccion, nro_direccion, Inserto_estr)
        End If
    Else
        nro_direccion = 0
    End If
    
    
    'Caja de Jubilacion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Caja de Jubilacion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    CajaJub = Aux
    ' Validacion y Creacion de la Caja de Jubilacion
    If CajaJub <> "N/A" Then
        If CaJDesc Then
            Call ValidaEstructura(15, CajaJub, nro_cajajub, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(15, CajaJub, nro_cajajub, Inserto_estr)
        End If
        Call CreaTercero(6, CajaJub, ter_cajajub)
        
        If Inserto_estr Then
            Call CreaComplemento(15, ter_cajajub, nro_cajajub, CajaJub)
        End If
    Else
        nro_cajajub = 0
    End If

    'Sindicato
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sindicato"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Sindicato = Aux
    ' Validacion y Creacion del Sindicato
    If Sindicato <> "N/A" Then
        If SinDesc Then
            Call ValidaEstructura(16, Sindicato, nro_sindicato, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(16, Sindicato, nro_sindicato, Inserto_estr)
        End If
        Call CreaTercero(5, Sindicato, ter_sindicato)
        
        If Inserto_estr Then
            Call CreaComplemento(16, ter_sindicato, nro_sindicato, Sindicato)
        End If
    Else
        nro_sindicato = 0
    End If
    
    
    'Obra social por Ley
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Obra social por Ley"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    OSocialLey = Aux
    ' Validacion y Creacion de la Obra Social por Ley
    If OSocialLey <> "N/A" Then
        If OSoLeyDesc Then
            Call ValidaEstructura(24, OSocialLey, nro_osocial_ley, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(24, OSocialLey, nro_osocial_ley, Inserto_estr)
        End If
        Call CreaTercero(4, OSocialLey, ter_osocial_ley)
        
        If Inserto_estr Then
            Call CreaComplemento(24, ter_osocial_ley, nro_osocial_ley, OSocialLey)
        Else
            StrSql = " SELECT origen FROM replica_estr WHERE estrnro = " & nro_osocial_ley
            OpenRecordset StrSql, rs_repl
            
            If Not rs_repl.EOF Then
                ter_osocial_ley = rs_repl!Origen
                rs_repl.Close
            End If
            
        End If
    Else
        nro_osocial_ley = 0
    End If


    'Plan de OS por Ley
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Plan de Obra social por Ley"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    PlanOSLey = Aux
    ' Validacion y Creacion del Plan de Obra Social por Ley
    If (PlanOSLey <> "N/A" And nro_osocial_ley <> 0) Then
        If PoSLeyDesc Then
            Call ValidaEstructura(25, PlanOSLey, nro_planos_ley, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(25, PlanOSLey, nro_planos_ley, Inserto_estr)
        End If
        
        If Inserto_estr Then
            Call CreaComplemento(25, ter_osocial_ley, nro_planos_ley, PlanOSLey)
            Inserto_estr = False
        End If
    Else
        nro_planos_ley = 0
    End If
    
    'OS Elegida
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Obra Social elegida"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    OSocialElegida = Aux
    ' Validacion y Creacion de la Obra Social Elegida
    If OSocialElegida <> "N/A" Then
        If OSoElegidaDesc Then
            Call ValidaEstructura(17, OSocialElegida, nro_osocial_elegida, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(17, OSocialElegida, nro_osocial_elegida, Inserto_estr)
        End If
        Call CreaTercero(4, OSocialElegida, ter_osocial_elegida)
        
        If Inserto_estr Then
            Call CreaComplemento(17, ter_osocial_elegida, nro_osocial_elegida, OSocialElegida)
        Else
            StrSql = " SELECT origen FROM replica_estr WHERE estrnro = " & nro_osocial_elegida
            OpenRecordset StrSql, rs_Sql
            ter_osocial_elegida = rs_Sql!Origen
            rs_Sql.Close
        End If
    Else
        nro_osocial_elegida = 0
    End If

    'Plan de OS Elegida
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Plan Obra Social elegida"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    PlanOSElegida = Aux
    ' Validacion y Creacion del Plan de Obra Social Elegida
    If (PlanOSElegida <> "N/A" And nro_osocial_elegida <> 0) Then
        If PoSElegidaDesc Then
            Call ValidaEstructura(23, PlanOSElegida, nro_planos_elegida, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(23, PlanOSElegida, nro_planos_elegida, Inserto_estr)
        End If
        
        If Inserto_estr Then
            Call CreaComplemento(23, ter_osocial_elegida, nro_planos_elegida, PlanOSElegida)
            Inserto_estr = False
        End If
    Else
        nro_planos_elegida = 0
    End If
    
    
    'Contrato
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Contrato"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Contrato = Aux
    ' Validacion y Creacion del Contrato
    If Contrato <> "N/A" Then
        If CotDesc Then
            Call ValidaEstructura(18, Contrato, nro_contrato, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(18, Contrato, nro_contrato, Inserto_estr)
        End If
        
        If Inserto_estr Then
            Call CreaComplemento(18, 0, nro_contrato, Contrato)
            Inserto_estr = False
        End If
    Else
        nro_contrato = 0
    End If
    
    'Fecha de fin de contrato
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de fin de contrato"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    FFinContrato = Aux
    If FFinContrato = "N/A" Or EsNulo(FFinContrato) Then
        Fecha_FinContrato = "Null"
    Else
        Fecha_FinContrato = ConvFecha(FFinContrato)
    End If
    
    'Lugar de pago
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Lugar de pago"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    LPago = Aux
    ' Validacion y Creacion del Lugar de Pago
    If LPago <> "N/A" Then
        If LPaDesc Then
            Call ValidaEstructura(20, LPago, nro_lpago, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(20, LPago, nro_lpago, Inserto_estr)
        End If
    Else
        nro_lpago = 0
    End If

    'Regimen Horario
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Regimen Horario"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    RegHorario = Aux
    If RegHorario <> "N/A" Then
        If RegDesc Then
            Call ValidaEstructura(21, RegHorario, nro_reghorario, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(21, RegHorario, nro_reghorario, Inserto_estr)
        End If
    Else
        nro_reghorario = 0
    End If

    'Forma de Liquidacion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Forma de Liquidacion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    FormaLiq = Aux
    If FormaLiq <> "N/A" Then
        If FLiDesc Then
            Call ValidaEstructura(22, FormaLiq, nro_formaliq, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(22, FormaLiq, nro_formaliq, Inserto_estr)
        End If
        ' Agregado por MB 10/08/2006
        If Inserto_estr Then
            Call CreaComplemento(22, 0, nro_formaliq, FormaLiq)
            Inserto_estr = False
        End If
    Else
        nro_formaliq = 0
    End If

    'Forma de Pago
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Forma de Pago"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    FormaPago = Aux
    If FormaPago <> "N/A" Then
        StrSql = " SELECT fpagnro FROM formapago WHERE fpagdescabr = '" & FormaPago & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_formapago = rs_Sql!fpagnro
        Else
            StrSql = " INSERT INTO formapago(fpagdescabr,fpagbanc,acunro,monnro) VALUES ('" & FormaPago & "',0,6,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            nro_formapago = getLastIdentity(objConn, "formapago")
        End If
    Else
        nro_formapago = 0
    End If
    
    'Banco de Pago
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Banco de Pago"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    BancoPago = Aux
    If BancoPago <> "N/A" Then
        If BcoDesc Then
            Call ValidaEstructura(41, BancoPago, nro_bancopago, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(41, BancoPago, nro_bancopago, Inserto_estr)
        End If
        Call CreaTercero(13, BancoPago, ter_bancopago)
        
        If Inserto_estr Then
            Call CreaComplemento(41, ter_bancopago, nro_bancopago, BancoPago)
        End If
        fpgo_bancaria = -1
    Else
        nro_bancopago = 0
        fpgo_bancaria = 0
    End If
    
    'Nro de cuenta
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nro de cuenta"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    NroCuenta = Aux
    If NroCuenta = "N/A" Then
        NroCuenta = ""
    End If
    
    'CBU
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "CBU"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    NroCBU = Aux
    If NroCBU = "N/A" Then
        NroCBU = ""
    End If
    
    'Sucursal del banco
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sucursal del banco"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    SucBanco = Aux
    If SucBanco = "N/A" Then
        SucBanco = ""
    Else
        SucBanco = Left(SucBanco, 10)
    End If


    'Nro de cuenta de acreditacion empresa
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nro de cuenta de acreditacion empresa"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    NroCuentaAcreditacionE = Aux
    If NroCuentaAcreditacionE = "N/A" Or EsNulo(NroCuentaAcreditacionE) Then
        NroCuentaAcreditacionE = ""
    Else
        StrSql = "SELECT * FROM ctabancaria WHERE cbnro ='" & NroCuentaAcreditacionE & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
            Texto = ": " & " - Nro de cuenta de acreditacion empresa no existe."
            NroColumna = 59
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            NroCuentaAcreditacionE = ""
        End If
    End If
    
    'Actividad SIJP
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Actividad SIJP"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Actividad = Aux
    If Actividad <> "N/A" Then
        If ActDesc Then
            Call ValidaEstructura(29, Actividad, nro_actividad, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(29, Actividad, nro_actividad, Inserto_estr)
        End If
    Else
        nro_actividad = 0
    End If

    'Condicion SIJP
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Condicion SIJP"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    CondSIJP = Aux
    If CondSIJP <> "N/A" And Not EsNulo(CondSIJP) Then
        If CSJDesc Then
            Call ValidaEstructura(31, CondSIJP, nro_condsijp, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(31, CondSIJP, nro_condsijp, Inserto_estr)
        End If
    Else
        nro_condsijp = 0
    End If

    'Situacion de Revista SIJP
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Situacion de Revista SIJP"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    SitRev = Aux
    If SitRev <> "N/A" And Not EsNulo(SitRev) Then
        If SReDesc Then
            Call ValidaEstructura(30, SitRev, nro_sitrev, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(30, SitRev, nro_sitrev, Inserto_estr)
        End If
    Else
        nro_sitrev = 0
    End If
    
    
    'ART
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "ART"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    ART = Aux
    If ART <> "N/A" And Not EsNulo(ART) Then
        If ARTDesc Then
            Call ValidaEstructura(40, ART, nro_art, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(40, ART, nro_art, Inserto_estr)
        End If
        Call CreaTercero(8, ART, ter_art)
        
        If Inserto_estr Then
            Call CreaComplemento(40, ter_art, nro_art, ART)
        End If
    Else
        nro_art = 0
    End If
    
    'Estado del empleado
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estado del empleado"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Estado = Aux
    If UCase(Estado) = "ACTIVO" Then
        ter_estado = -1
    Else
        ter_estado = 0
    End If
    
    'Causa de baja
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Causa de baja"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    CausaBaja = Aux
    If Not EsNulo(CausaBaja) And CausaBaja <> "N/A" Then
        StrSql = " SELECT caunro FROM causa WHERE caudes = '" & CausaBaja & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_causabaja = rs_Sql!caunro
        Else
            StrSql = " INSERT INTO causa(caudes,causist,caudesvin,empnro) VALUES ('" & CausaBaja & "',0,-1,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            nro_causabaja = getLastIdentity(objConn, "causa")
        End If
    Else
        nro_causabaja = 0
    End If
    
    'Fecha de baja
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de baja"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    FBaja = Aux
    If EsNulo(FBaja) Or FBaja = "N/A" Then
        F_Baja = "Null"
    Else
        F_Baja = ConvFecha(FBaja)
    End If
    
    'Empresa
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Empresa"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Empresa = Aux
    Else
        pos2 = Len(strReg)
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Empresa = Aux
    End If
    If Empresa <> "N/A" Or EsNulo(Empresa) Then
        If EmpDesc Then
            Call ValidaEstructura(10, Empresa, nro_empresa, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(10, Empresa, nro_empresa, Inserto_estr)
        End If
        Call CreaTercero(10, Empresa, Ter_Empresa)
        
        If Inserto_estr Then
            Call CreaComplemento(10, Ter_Empresa, nro_empresa, Empresa)
        End If
    Else
        nro_empresa = 0
    End If
    
    'Remuneración del Empleado
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Remuneración del Empleado"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Empremu = Aux
    If Empremu = "N/A" Or EsNulo(Empremu) Then
        Empremu = "Null"
    End If
   
    'Modelo de Organizacion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Modelo de Organizacion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        ModOrg = Aux
        'desde aca
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        ModOrg = Aux
        If ModOrg = "N/A" Or EsNulo(ModOrg) Then
            'agrego codigo sebastian stremel 15/09/2011
            StrSql = "SELECT * FROM adptemplate WHERE tplatedefault = -1"
            OpenRecordset StrSql, rs_tpl
            If Not rs_tpl.EOF Then
                nro_ModOrg = rs_tpl!tplatenro
            Else
                StrSql = "SELECT top 1 * FROM adptemplate"
                OpenRecordset StrSql, rs_tpl
                If rs_tpl.EOF Then
                    Texto = ": no hay modelos de organizacion"
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                    RegError = RegError + 1
                    Exit Sub
                Else
                    nro_ModOrg = rs_tpl!tplatenro
                End If
                
            End If
            
           
        Else
            StrSql = "SELECT * FROM adptemplate WHERE tplatedesabr = '" & ModOrg & "'"
            OpenRecordset StrSql, rs_tpl
            If rs_tpl.EOF Then
                StrSql = "INSERT INTO adptemplate (tplatedesabr,tplatedefault) VALUES ('" & ModOrg & "',-1)"
                objConn.Execute StrSql, , adExecuteNoRecords
                nro_ModOrg = getLastIdentity(objConn, "adptemplate")
            Else
                nro_ModOrg = rs_tpl!tplatenro
            End If
        End If
    Else
            StrSql = "SELECT * FROM adptemplate WHERE tplatedefault = -1"
            OpenRecordset StrSql, rs_tpl
            If Not rs_tpl.EOF Then
                nro_ModOrg = rs_tpl!tplatenro
            Else
                StrSql = "SELECT top 1 * FROM adptemplate"
                OpenRecordset StrSql, rs_tpl
                If rs_tpl.EOF Then
                    Texto = ": no hay modelos de organizacion"
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                    RegError = RegError + 1
                    Exit Sub
                Else
                    nro_ModOrg = rs_tpl!tplatenro
                End If
                
            End If

    End If
        
        'hasta aca
'        If ModOrg = "N/A" Or EsNulo(ModOrg) Then
'            nro_ModOrg = 0
'        Else
'            StrSql = "SELECT * FROM adptemplate WHERE tplatedesabr = '" & ModOrg & "'"
'            OpenRecordset StrSql, rs_tpl
'            If rs_tpl.EOF Then
'                StrSql = "INSERT INTO adptemplate (tplatedesabr,tplatedefault) VALUES ('" & ModOrg & "',-1)"
'                objConn.Execute StrSql, , adExecuteNoRecords
'                nro_ModOrg = getLastIdentity(objConn, "adptemplate")
'            Else
'               nro_ModOrg = rs_tpl!tplatenro
'            End If
'        End If
'    Else
'        nro_ModOrg = 0
'    End If
'---------------------------------------------------------------------------------------

    'Reporta_a  campo empleado.empreporta va el tercero
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Reporta_a"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Reporta_a = Aux
        If Not EsNulo(Reporta_a) And Reporta_a <> "N/A" Then
            If IsNumeric(Reporta_a) Then
                StrSql = "SELECT * FROM empleado WHERE empleado.empleg = " & Reporta_a
                If rs_emp.State = adStateOpen Then rs_emp.Close
                OpenRecordset StrSql, rs_emp
                If (Not rs_emp.EOF) Then
                    Nro_Reporta_a = rs_emp!Ternro
                Else
                    Nro_Reporta_a = 0
                    Texto = ": " & "El Empleado " & Reporta_a & " no existe."
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                End If
            Else
                Nro_Reporta_a = 0
                Texto = "El valor no es numérico."
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            End If
        End If
    Else
        Nro_Reporta_a = 0
        'no es obligatorio
    End If
    If rs_emp.State = adStateOpen Then rs_emp.Close
    

    'Grupo de Seguridad
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Grupo de Seguridad"
    pos1 = pos2 + 2
    pos2 = Len(strReg) 'InStr(pos1, strReg, Separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        GrupoSeguridad = Aux
        If GrupoSeguridad <> "N/A" And Not EsNulo(GrupoSeguridad) Then
            Call ValidaEstructura(7, GrupoSeguridad, Nro_GrupoSeguridad, Inserto_estr)
        Else
            Nro_GrupoSeguridad = 0
        End If
    Else
        Nro_GrupoSeguridad = 0
    End If
'Fin lectura de campos
' =====================================================================================================
  
  'JPB - Inicializo el pass+perfil (l_ess_Pass_Estandar y l_ess_Perfil_Estandar) por defecto del Autogestion en el caso que este habilitado el confper 12
  '--------------------------------
  Call ESS_Configuracion_Default
  '-------------------------------

  ' Inserto el Tercero
  If F_Nacimiento = "Null" Then
    F_Nacimiento = "''"
  End If
  If F_Ingreso = "Null" Then
    F_Ingreso = "''"
  End If
  
  If CalculaLegajo Then
    Call CalcularLegajo(nro_empresa, Legajo)
  End If

    If Not ExisteLeg Then
        StrSql = " INSERT INTO tercero(ternom,terape,ternom2,terape2,terfecnac,tersex,terestciv,estcivnro,nacionalnro,paisnro,terfecing)"
        StrSql = StrSql & " VALUES('" & nombre & "','" & Apellido & "','" & nombre2 & "','" & Apellido2 & "'," & F_Nacimiento & "," & ter_sexo & "," & nro_estcivil & "," & nro_estcivil & ","
        If nro_nacionalidad <> 0 Then
            StrSql = StrSql & nro_nacionalidad & ","
        Else
            StrSql = StrSql & "null,"
        End If
        If nro_paisnac <> 0 Then
            StrSql = StrSql & nro_paisnac & ","
        Else
            StrSql = StrSql & "null,"
        End If
        StrSql = StrSql & F_Ingreso & ")"
        objConn.Execute StrSql, , adExecuteNoRecords

        NroTercero = getLastIdentity(objConn, "tercero")
        
        Texto = ": " & "Codigo de Tercero = " & NroTercero
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
    Else
        StrSql = " UPDATE tercero SET "
        StrSql = StrSql & " ternom = " & "'" & nombre & "'"
        StrSql = StrSql & ", terape = " & "'" & Apellido & "'"
        StrSql = StrSql & " ternom2 = " & "'" & nombre2 & "'"
        StrSql = StrSql & ", terape2 = " & "'" & Apellido2 & "'"
        StrSql = StrSql & ", terfecnac = " & F_Nacimiento
        StrSql = StrSql & ", tersex = " & ter_sexo
        StrSql = StrSql & ", terestciv =" & nro_estcivil
        StrSql = StrSql & ", estcivnro =" & "'" & nro_estcivil & "'"
        If nro_nacionalidad <> 0 Then
            StrSql = StrSql & ", nacionalnro =" & nro_nacionalidad
        End If
        StrSql = StrSql & ", terfecing =" & F_Ingreso
        If nro_paisnac <> 0 Then
            StrSql = StrSql & ", paisnro =" & nro_paisnac
        End If
        StrSql = StrSql & " WHERE ternro = " & NroTercero
        objConn.Execute StrSql, , adExecuteNoRecords
      
        Texto = ": " & " - Empleado: " & Legajo & " - Ese Empleado ya existe en la base. Datos de tercero actualizados"
        NroColumna = 1
        Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    
    If Not ExisteLeg Then
        StrSql = " INSERT INTO empleado(empleg,empfecalta,empfecbaja,empest,empfaltagr,empfbajaprev,"
        StrSql = StrSql & "ternro,nivnro,empestudia,terape,ternom,terape2,ternom2,empinterno,empemail,"
        StrSql = StrSql & "empnro,tplatenro,empremu"
        If Nro_Reporta_a <> 0 Then
            StrSql = StrSql & ",empreporta"
        End If
        
        'JPB - Si esta habilitado el confper 12 asigno el pass+perfil por defecto al empleado
        '------------------------------------------------------------------------------------
        If (l_ess_Pass_Estandar <> "") And (l_ess_Perfil_Estandar <> "") Then
             StrSql = StrSql & ",empessactivo,emppass,perfnro"
        End If
        '------------------------------------------------------------------------------------
        
        StrSql = StrSql & ") VALUES("
        StrSql = StrSql & Legajo & "," & F_Alta & "," & F_Baja & "," & ter_estado & "," & F_Alta & "," & Fecha_FinContrato & ","
        StrSql = StrSql & NroTercero & "," & nro_nivest & "," & ter_estudio & ",'" & Apellido & "','"
        StrSql = StrSql & nombre & "','" & Apellido2 & "','" & nombre2 & "',Null,'" & Email & "',1," & nro_ModOrg & "," & Empremu
        If Nro_Reporta_a <> 0 Then
            StrSql = StrSql & "," & Nro_Reporta_a
        End If
        
        'JPB - Si esta habilitado el confper 12 asigno el pass+perfil por defecto al empleado
        '------------------------------------------------------------------------------------
        If (l_ess_Pass_Estandar <> "") And (l_ess_Perfil_Estandar <> "") Then
             StrSql = StrSql & ",-1,'" & l_ess_Pass_Estandar & "'," & l_ess_Perfil_Estandar
        End If
        '------------------------------------------------------------------------------------
    
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = ": " & "Empleado insertado - " & Legajo & " - " & Apellido & " - " & nombre
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
    Else
        StrSql = " UPDATE empleado SET "
        StrSql = StrSql & " empleg = " & Legajo
        StrSql = StrSql & " ,empfecalta = " & F_Alta
        StrSql = StrSql & " ,empfecbaja = " & F_Baja
        StrSql = StrSql & " ,empfbajaprev = " & Fecha_FinContrato
        StrSql = StrSql & " ,empest = " & ter_estado
        StrSql = StrSql & " ,empfaltagr = " & F_Alta
        StrSql = StrSql & " ,nivnro = " & nro_nivest
        StrSql = StrSql & " ,empestudia = " & ter_estudio
        StrSql = StrSql & " ,terape = " & "'" & Apellido & "'"
        StrSql = StrSql & " ,ternom = " & "'" & nombre & "'"
        StrSql = StrSql & " ,terape2 = " & "'" & Apellido2 & "'"
        StrSql = StrSql & " ,ternom2 = " & "'" & nombre2 & "'"
        StrSql = StrSql & " ,empemail = " & "'" & Email & "'"
        StrSql = StrSql & " ,empnro = 1 "
        StrSql = StrSql & " ,tplatenro =" & nro_ModOrg
        StrSql = StrSql & " ,Empremu =" & Empremu
        If Nro_Reporta_a <> 0 Then
            StrSql = StrSql & ", empreporta =" & Nro_Reporta_a
        End If
        
        'JPB - Si esta habilitado el confper 12 asigno el pass+perfil por defecto al empleado
        '------------------------------------------------------------------------------------
        If (l_ess_Pass_Estandar <> "") And (l_ess_Perfil_Estandar <> "") Then
            StrSql = StrSql & ", empessactivo = -1"
            StrSql = StrSql & ", emppass = '" & l_ess_Pass_Estandar & "'"
            StrSql = StrSql & ", perfnro =" & l_ess_Perfil_Estandar
        End If
        '------------------------------------------------------------------------------------

        StrSql = StrSql & " WHERE ternro = " & NroTercero
        objConn.Execute StrSql, , adExecuteNoRecords
    
        Texto = ": " & "Empleado Actualizado - " & Legajo & " - " & Apellido & " - " & nombre
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
    End If
    
    ' Inserto el Registro correspondiente en ter_tip
    If Not ExisteLeg Then
        StrSql = " INSERT INTO ter_tip(ternro,tipnro) VALUES(" & NroTercero & ",1)"
        objConn.Execute StrSql, , adExecuteNoRecords
    End If

' Inserto los Documentos
    If Not ExisteLeg Then
        If Nro_TDocumento <> 0 Then
            StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
            StrSql = StrSql & " VALUES(" & NroTercero & "," & Nro_TDocumento & ",'" & Ndocu & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            Texto = ": " & "Inserte el Documento - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        End If
    Else
        If Nro_TDocumento <> 0 Then
            StrSql = "SELECT * FROM ter_doc WHERE ternro = " & NroTercero
            StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If rs.EOF Then
                StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
                StrSql = StrSql & " VALUES(" & NroTercero & "," & Nro_TDocumento & ",'" & Ndocu & "')"
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = ": " & "Inserte el Documento - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            Else
                StrSql = " UPDATE ter_doc SET "
                StrSql = StrSql & " nrodoc = '" & Ndocu & "'"
                StrSql = StrSql & " WHERE ternro = " & NroTercero
                StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = Texto = ": " & "Documento actualizado - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
    End If
  
    If Not ExisteLeg Then
        If Cuil <> "" Then
            StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
            StrSql = StrSql & " VALUES(" & NroTercero & ",10,'" & Cuil & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            Texto = ": " & "Inserte el CUIL - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        End If
    Else
        If Cuil <> "" Then
            StrSql = "SELECT * FROM ter_doc WHERE ternro = " & NroTercero
            StrSql = StrSql & " AND tidnro = 10 "
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If rs.EOF Then
                StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
                StrSql = StrSql & " VALUES(" & NroTercero & ",10,'" & Cuil & "')"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Inserte el CUIL - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            Else
                StrSql = " UPDATE ter_doc SET "
                StrSql = StrSql & " nrodoc = '" & Cuil & "'"
                StrSql = StrSql & " WHERE ternro = " & NroTercero
                StrSql = StrSql & " AND tidnro = 10"
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = Texto = ": " & "CUIL actualizado - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
    End If

' Inserto el Domicilio
  If rs.State = adStateOpen Then
    rs.Close
  End If
  
  If Not ExisteLeg Then
    If (Nro_Localidad <> 0 And Nro_Provincia <> 0 And Nro_Pais <> 0) Then
        StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
        StrSql = StrSql & " VALUES(1," & NroTercero & ",-1,2)"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        NroDom = getLastIdentity(objConn, "cabdom")
      
        StrSql = " INSERT INTO detdom(domnro,calle,nro,piso,oficdepto,torre,manzana,codigopostal,entrecalles,"
        StrSql = StrSql & "locnro,provnro,paisnro,barrio,partnro,zonanro) "
        StrSql = StrSql & " VALUES (" & NroDom & ",'" & Calle & "','" & Nro_Nrodom & "','" & Piso & "','"
        StrSql = StrSql & Depto & "','" & Torre & "','" & Manzana & "','" & Cpostal & "','" & Entre & "'," & Nro_Localidad & ","
        StrSql = StrSql & Nro_Provincia & "," & Nro_Pais & ",'" & Barrio & "'," & Nro_Partido & "," & Nro_Zona & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
      
        Texto = ": " & "Inserte el Domicilio - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        
        If Telefono <> "" Then
            'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
            StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
            StrSql = StrSql & " VALUES(" & NroDom & ",'" & Telefono & "',0,-1,0,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            Texto = ": " & "Inserte el Telefono Principal - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        End If
        If TelLaboral <> "" Then
            StrSql = "SELECT * FROM telefono "
            StrSql = StrSql & " WHERE domnro =" & NroDom
            StrSql = StrSql & " AND telnro ='" & TelLaboral & "'"
            If rs_Tel.State = adStateOpen Then rs_Tel.Close
            OpenRecordset StrSql, rs_Tel
            If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelLaboral & "',0,0,0,3)"
                objConn.Execute StrSql, , adExecuteNoRecords
                  
                Texto = ": " & "Inserte el Telefono Laboral - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
        If TelCelular <> "" Then
            StrSql = "SELECT * FROM telefono "
            StrSql = StrSql & " WHERE domnro =" & NroDom
            StrSql = StrSql & " AND telnro ='" & TelCelular & "'"
            If rs_Tel.State = adStateOpen Then rs_Tel.Close
            OpenRecordset StrSql, rs_Tel
            If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelCelular & "',0,0,-1,2)"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Inserte el Telefono Celular - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
    End If
  Else
    If (Nro_Localidad <> 0 And Nro_Provincia <> 0 And Nro_Pais <> 0) Then
        StrSql = "SELECT * FROM cabdom  "
        StrSql = StrSql & " WHERE tipnro = 1"
        StrSql = StrSql & " AND ternro = " & NroTercero
        StrSql = StrSql & " AND domdefault = -1"
        StrSql = StrSql & " AND tidonro = 2"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
          StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
          StrSql = StrSql & " VALUES(1," & NroTercero & ",-1,2)"
          objConn.Execute StrSql, , adExecuteNoRecords
          
          NroDom = getLastIdentity(objConn, "cabdom")
        
          StrSql = " INSERT INTO detdom(domnro,calle,nro,piso,oficdepto,torre,manzana,codigopostal,entrecalles,"
          StrSql = StrSql & "locnro,provnro,paisnro,barrio,partnro,zonanro) "
          StrSql = StrSql & " VALUES (" & NroDom & ",'" & Calle & "','" & Nro_Nrodom & "','" & Piso & "','"
          StrSql = StrSql & Depto & "','" & Torre & "','" & Manzana & "','" & Cpostal & "','" & Entre & "'," & Nro_Localidad & ","
          StrSql = StrSql & Nro_Provincia & "," & Nro_Pais & ",'" & Barrio & "'," & Nro_Partido & "," & Nro_Zona & ")"
          objConn.Execute StrSql, , adExecuteNoRecords
        
          Texto = ": " & "Inserte el Domicilio - "
          Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
          
          If Telefono <> "" Then
            'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
              StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
              StrSql = StrSql & " VALUES(" & NroDom & ",'" & Telefono & "',0,-1,0,1)"
              objConn.Execute StrSql, , adExecuteNoRecords

              Texto = ": " & "Inserte el Telefono Principal - "
              Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
          End If
          If TelLaboral <> "" Then
              StrSql = "SELECT * FROM telefono "
              StrSql = StrSql & " WHERE domnro =" & NroDom
              StrSql = StrSql & " AND telnro ='" & TelLaboral & "'"
              If rs_Tel.State = adStateOpen Then rs_Tel.Close
              OpenRecordset StrSql, rs_Tel
              If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                  StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                  StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelLaboral & "',0,0,0,3)"
                  objConn.Execute StrSql, , adExecuteNoRecords
                    
                  Texto = ": " & "Inserte el Telefono Laboral - "
                  Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
              End If
          End If
          If TelCelular <> "" Then
              StrSql = "SELECT * FROM telefono "
              StrSql = StrSql & " WHERE domnro =" & NroDom
              StrSql = StrSql & " AND telnro ='" & TelCelular & "'"
              If rs_Tel.State = adStateOpen Then rs_Tel.Close
              OpenRecordset StrSql, rs_Tel
              If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                  StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                  StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelCelular & "',0,0,-1,2)"
                  objConn.Execute StrSql, , adExecuteNoRecords
                  Texto = ": " & "Inserte el Telefono Celular - "
                  Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
              End If
          End If
        Else
            StrSql = " UPDATE detdom SET "
            StrSql = StrSql & " calle =" & "'" & Calle & "'"
            StrSql = StrSql & ",nro =" & "'" & Nro_Nrodom & "'"
            StrSql = StrSql & ",piso =" & "'" & Piso & "'"
            StrSql = StrSql & ",oficdepto =" & "'" & Depto & "'"
            StrSql = StrSql & ",torre =" & "'" & Torre & "'"
            StrSql = StrSql & ",manzana =" & "'" & Manzana & "'"
            StrSql = StrSql & ",codigopostal =" & "'" & Cpostal & "'"
            StrSql = StrSql & ",entrecalles =" & "'" & Entre & "'"
            StrSql = StrSql & ",locnro =" & Nro_Localidad
            StrSql = StrSql & ",provnro =" & Nro_Provincia
            StrSql = StrSql & ",paisnro =" & Nro_Pais
            StrSql = StrSql & ", partnro = " & Nro_Partido
            StrSql = StrSql & ", zonanro =" & Nro_Zona
            StrSql = StrSql & " WHERE domnro = " & rs!domnro
            objConn.Execute StrSql, , adExecuteNoRecords
        
            Texto = ": " & "Domicilio Actualizado - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        
            If Telefono <> "" Then
                StrSql = "SELECT * FROM telefono "
                StrSql = StrSql & " WHERE domnro =" & rs!domnro
                StrSql = StrSql & " AND telnro ='" & Telefono & "'"
                If rs_Tel.State = adStateOpen Then rs_Tel.Close
                OpenRecordset StrSql, rs_Tel
                If rs_Tel.EOF Then
                    'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                    StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                    StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & Telefono & "',0,-1,0,1)"
                    objConn.Execute StrSql, , adExecuteNoRecords
                      
                    Texto = ": " & "Inserte el Telefono Principal - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            End If
            If TelLaboral <> "" Then
                StrSql = "SELECT * FROM telefono "
                StrSql = StrSql & " WHERE domnro =" & rs!domnro
                StrSql = StrSql & " AND telnro ='" & TelLaboral & "'"
                If rs_Tel.State = adStateOpen Then rs_Tel.Close
                OpenRecordset StrSql, rs_Tel
                If rs_Tel.EOF Then
                    'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                    StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                    StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & TelLaboral & "',0,0,0,3)"
                    objConn.Execute StrSql, , adExecuteNoRecords
                      
                    Texto = ": " & "Inserte el Telefono Laboral - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            End If
            If TelCelular <> "" Then
                StrSql = "SELECT * FROM telefono "
                StrSql = StrSql & " WHERE domnro =" & rs!domnro
                StrSql = StrSql & " AND telnro ='" & TelCelular & "'"
                If rs_Tel.State = adStateOpen Then rs_Tel.Close
                OpenRecordset StrSql, rs_Tel
                If rs_Tel.EOF Then
                    'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                    StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                    StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & TelCelular & "',0,0,-1,2)"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = ": " & "Inserte el Telefono Celular - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            End If
        End If
    End If
  End If
  
  If Not ExisteLeg Then
    ' Inserto las Fases
    StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
    StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
    If nro_causabaja <> 0 Then
      StrSql = StrSql & nro_causabaja
    Else
      StrSql = StrSql & "null"
    End If
    StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
    objConn.Execute StrSql, , adExecuteNoRecords
    
  Else
    StrSql = "SELECT * FROM fases WHERE estado = -1 AND sueldo = -1 AND vacaciones = -1 AND indemnizacion = -1 AND real = -1 AND empleado = " & NroTercero
    OpenRecordset StrSql, rs
    If rs.EOF Then
        StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
        StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
        If nro_causabaja <> 0 Then
          StrSql = StrSql & nro_causabaja
        Else
          StrSql = StrSql & "null"
        End If
        StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
        objConn.Execute StrSql, , adExecuteNoRecords
    Else
        StrSql = " UPDATE fases SET "
        StrSql = StrSql & " altfec =" & F_Alta
        StrSql = StrSql & ",bajfec =" & F_Baja
        StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
        objConn.Execute StrSql, , adExecuteNoRecords
    
        Texto = ": " & "Fase Actualizada - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
    End If
  End If
  
  'Inserto la cuenta bancaria
    If Not ExisteLeg Then
        If (nro_formapago <> 0 And ter_bancopago <> 0 And NroCuenta <> "") Then
                StrSql = " INSERT INTO ctabancaria (ternro,fpagnro,banco,ctabestado,"
                StrSql = StrSql & "ctabsuc,ctabnro,ctabporc,ctabcbu"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",ctabacred"
                End If
                StrSql = StrSql & ") VALUES ("
                StrSql = StrSql & NroTercero & "," & nro_formapago & "," & ter_bancopago & ","
                StrSql = StrSql & "-1,'" & Left(SucBanco, 10) & "','" & NroCuenta & "',100,'" & NroCBU & "'"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",'" & NroCuentaAcreditacionE & "'"
                End If
                StrSql = StrSql & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Inserte la Cuenta Bancaria - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
        End If
    Else
        If (nro_formapago <> 0 And ter_bancopago <> 0 And NroCuenta <> "") Then
            StrSql = "SELECT * FROM ctabancaria"
            StrSql = StrSql & " WHERE ctabancaria.ternro =" & NroTercero
            StrSql = StrSql & " AND ctabestado = -1 "
            StrSql = StrSql & " AND banco =" & ter_bancopago
            StrSql = StrSql & " AND fpagnro =" & nro_formapago
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If rs.EOF Then
                StrSql = " INSERT INTO ctabancaria (ternro,fpagnro,banco,ctabestado,"
                StrSql = StrSql & "ctabsuc,ctabnro,ctabporc,ctabcbu"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",ctabacred"
                End If
                StrSql = StrSql & ") VALUES ("
                StrSql = StrSql & NroTercero & "," & nro_formapago & "," & ter_bancopago & ","
                StrSql = StrSql & "-1,'" & Left(SucBanco, 10) & "','" & NroCuenta & "',100,'" & NroCBU & "'"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",'" & NroCuentaAcreditacionE & "'"
                End If
                StrSql = StrSql & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Inserte la Cuenta Bancaria - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            Else
                If rs!ctabnro = NroCuenta Then
                    StrSql = "UPDATE ctabancaria SET "
                    StrSql = StrSql & " ctabsuc = '" & SucBanco & "'"
                    If Not EsNulo(NroCuentaAcreditacionE) Then
                        StrSql = StrSql & ", ctabacred = '" & NroCuentaAcreditacionE & "'" '21-12-10
                    End If
                    StrSql = StrSql & ", ctabnro = " & "'" & NroCuenta & "'"
                    StrSql = StrSql & ", ctabporc = 100 "
                    StrSql = StrSql & ", ctabcbu = '" & NroCBU & "'"
                    StrSql = StrSql & " WHERE ctabancaria.ternro =" & NroTercero
                    StrSql = StrSql & " AND ctabestado = -1 "
                    StrSql = StrSql & " AND banco =" & ter_bancopago
                    StrSql = StrSql & " AND fpagnro =" & nro_formapago
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    Texto = ": " & "Cuenta Bancaria actualizada- "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                Else
                    'Desactivo la anterior
                    StrSql = " UPDATE ctabancaria SET "
                    StrSql = StrSql & " ctabestado = 0 "
                    StrSql = StrSql & " WHERE cbnro = " & rs!Cbnro
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    'inserto la nueva
                    StrSql = " INSERT INTO ctabancaria (ternro,fpagnro,banco,ctabestado,"
                    StrSql = StrSql & "ctabsuc,ctabnro,ctabporc,ctabcbu"
                    If Not EsNulo(NroCuentaAcreditacionE) Then
                        StrSql = StrSql & ",ctabacred"
                    End If
                    StrSql = StrSql & ") VALUES ("
                    StrSql = StrSql & NroTercero & "," & nro_formapago & "," & ter_bancopago & ","
                    StrSql = StrSql & "-1,'" & Left(SucBanco, 10) & "','" & NroCuenta & "',100,'" & NroCBU & "'"
                    If Not EsNulo(NroCuentaAcreditacionE) Then
                        StrSql = StrSql & ",'" & NroCuentaAcreditacionE & "'"
                    End If
                    StrSql = StrSql & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = ": " & "Inserte la Cuenta Bancaria - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            End If
        End If
    End If
  
  'Inserto las Estructuras
'  Call AsignarEstructura(1, nro_sucursal, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(2, nro_sector, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(3, nro_categoria, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(4, nro_puesto, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(5, nro_ccosto, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(6, nro_gerencia, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(7, Nro_GrupoSeguridad, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(9, nro_departamento, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(10, nro_empresa, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(15, nro_cajajub, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(16, nro_sindicato, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(17, nro_osocial_elegida, NroTercero, F_Alta, F_Baja)
'  'Call AsignarEstructura(18, nro_contrato, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(18, nro_contrato, NroTercero, F_Alta, Fecha_FinContrato)
'  Call AsignarEstructura(19, nro_convenio, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(20, nro_lpago, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(21, nro_reghorario, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(22, nro_formaliq, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(23, nro_planos_elegida, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(24, nro_osocial_ley, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(25, nro_planos_ley, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(29, nro_actividad, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(30, nro_sitrev, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(31, nro_condsijp, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(35, nro_direccion, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(40, nro_art, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(41, nro_bancopago, NroTercero, F_Alta, F_Baja)
  
  
  Call AsignarEstructura_NEW(1, nro_sucursal, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(2, nro_sector, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(3, nro_categoria, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(4, nro_puesto, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(5, nro_ccosto, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(6, nro_gerencia, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(7, Nro_GrupoSeguridad, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(9, nro_departamento, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(10, nro_empresa, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(15, nro_cajajub, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(16, nro_sindicato, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(17, nro_osocial_elegida, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(18, nro_contrato, NroTercero, F_Alta, F_Baja)
  'Call AsignarEstructura_NEW(18, nro_contrato, NroTercero, F_Alta, Fecha_FinContrato)
  Call AsignarEstructura_NEW(19, nro_convenio, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(20, nro_lpago, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(21, nro_reghorario, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(22, nro_formaliq, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(23, nro_planos_elegida, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(24, nro_osocial_ley, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(25, nro_planos_ley, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(29, nro_actividad, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(30, nro_sitrev, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(31, nro_condsijp, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(35, nro_direccion, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(40, nro_art, NroTercero, F_Alta, F_Baja)
  'Call AsignarEstructura_NEW(41, nro_bancopago, NroTercero, F_Alta, F_Baja)
  
  
Texto = ": " & "Linea procesada correctamente "
Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
'LineaOK.Writeline Mid(strReg, 1, Len(strReg))
OK = True
         
FinLinea:
If rs.State = adStateOpen Then
    rs.Close
End If
Exit Sub

SaltoLinea:
    Texto = ": " & " - Error:" & Err.Description
    NroColumna = 1
    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    MyRollbackTrans
    OK = False
    GoTo FinLinea
End Sub





Public Sub LineaModelo_630(ByVal strReg As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de Estructuras
' Autor      : FGZ
' Fecha      : 21/09/2004
' Ultima Mod.: 27/04/2005 - FGZ
' Descripcion: Estandarizacion
' Ultima Mod.: 21/03/2006 - FGZ
' Descripcion: Fecha de Baja no es obligatoria
'              12-11-2010 - Leti.A. - verifica que la Fecha de Alta sea menor que la Fecha de Baja - Si hay error en los parametros de entrada no procesa la linea
'              02-12-2010 - Leticia A. - elimina caracteres invalidos de diferentes campos.
'              17-03-2011 - Leticia A. - se agrego conteo de registros con error y se sale del procedimiento cuando se encuentra un error
'              04-07-2011 - Manterola Maria Magdalena - Se agrego verificación para CrearComplemento
'                           o CrearTercero, dependiendo del tipo de estructura creado

' ---------------------------------------------------------------------------------------------

Dim Legajo          As String   'LEGAJO                        -- empleado.empleg
Dim estructura      As String   'Estructura                    -- his_estructura.estrnro
Dim TipoEstructura  As String   'Tipo de Estructura            -- his_estructura.tenro
Dim FAlta           As String   'Fecha Desde en la Estructura  -- his_estructura.htetdesde
Dim FBaja           As String   'Fecha Hasta en la Estructura  -- his_estructura.htethasta

Dim Ternro As Long

Dim pos1 As Long
Dim pos2 As Long

Dim NroTercero          As Long
Dim NroLegajo           As Long
Dim nro_estructura      As Long
Dim F_Alta              As String
Dim F_Baja              As String
Dim Inserto_estr        As Boolean
Dim nro_tenro As Long
Dim estrdesc             As Boolean     ' True indica que se hace por Descripcion.
                                        ' False por Codigo Externo
Dim ter_est             As Long
Dim diasDiff


Dim rs As New ADODB.Recordset
Dim rs_Sql As New ADODB.Recordset
Dim rs_Est As New ADODB.Recordset
Dim rs_tes As New ADODB.Recordset

    'Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    estrdesc = True
    LineaCarga = LineaCarga + 1
    Tabs = 1
    
    On Error GoTo SaltoLinea
    Flog.writeline
    FlogE.writeline
    FlogP.writeline
    'FlogP.writeline Espacios(Tabulador * 1) & " Linea: " & LineaCarga
    

    ' Recupero los Valores del Archivo
            
    'Tipo de Estructura
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Tipo de Estructura"
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        RegError = RegError + 1 '17-03-2011
        Exit Sub                '17-03-2011
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    TipoEstructura = Aux
        
        
    'Legajo
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Legajo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        RegError = RegError + 1
        Exit Sub
    End If
    Legajo = Aux
            
    'Estructura
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Estructura"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    estructura = Aux
        
    'Fecha de alta
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Fecha de Alta"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        RegError = RegError + 1
        Exit Sub
    End If
    If Aux <> "N/A" And Aux <> "" Then
        'aux = EliminarCHInvalidosII(aux, 2, "")
    End If
    FAlta = Aux
    If FAlta = "N/A" Or FAlta = "" Then
        F_Alta = "Null"
    Else
        F_Alta = ConvFecha(FAlta)
    End If
    
    
        
    'Fecha de Baja
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de Baja"
    pos1 = pos2 + 2
    pos2 = Len(strReg)
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        RegError = RegError + 1
        Exit Sub
    End If
    If Aux <> "N/A" And Aux <> "" Then
        'aux = EliminarCHInvalidosII(aux, 2, "")
    End If
    FBaja = Aux
    If FBaja = "N/A" Or FBaja = "" Then
        F_Baja = "Null"
    Else
        F_Baja = ConvFecha(FBaja)
    End If
    
        
    If HuboError = True Then
        Exit Sub
    End If



'=========================================================================
'=========================================================================
StrSql = "SELECT ternro FROM empleado WHERE empleg = " & Legajo
OpenRecordset StrSql, rs
If Not rs.EOF Then
    NroTercero = rs!Ternro
Else
    Texto = ": " & " - Campo " & Campoetiqueta & " El legajo no existe"
    NroColumna = 1
    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    HuboError = True
    RegError = RegError + 1
    Exit Sub
End If



' Valida que la Fecha Desde sea menor que la Fecha Hasta
If UCase(F_Alta) <> "NULL" And UCase(F_Baja) <> "NULL" Then

    diasDiff = DateDiff("d", CDate(FAlta), CDate(FBaja))
    
    If diasDiff < 0 Then
        Texto = " -  La Fecha de Baja no puede ser menor que la Fecha de Alta."
        NroColumna = 1
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        RegError = RegError + 1
        Exit Sub
    End If
    
End If



'Valido el tipo de estructura
StrSql = "SELECT tenro FROM tipoestructura WHERE UPPER(tedabr) = '" & UCase(TipoEstructura) & "'"
OpenRecordset StrSql, rs_tes
If rs_tes.EOF Then
    StrSql = "INSERT INTO tipoestructura(tedabr,tesist,tedepbaja,cenro) VALUES('" & UCase(TipoEstructura) & "',0,0,1)"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    nro_tenro = getLastIdentity(objConn, "tipoestructura")
Else
    nro_tenro = rs_tes!Tenro
End If


' Validacion y Creacion de la Sucursal (junto con sus Complementos)
If estructura <> "N/A" Then
    If estrdesc Then
        Flog.writeline
        Flog.writeline "nro_tenro: " & nro_tenro
        Flog.writeline "estructura: " & estructura
        Flog.writeline "estructura Mid: " & Mid(estructura, 1, 60)
        Flog.writeline "nro_estructura: " & nro_estructura
        Flog.writeline "Inserto_estr: " & Inserto_estr
        Call ValidaEstructura(nro_tenro, Mid(estructura, 1, 60), nro_estructura, Inserto_estr)
        Flog.writeline "ValidaEstructura OK"
    Else
        Flog.writeline "Entro x valida EstructuraCodext"
        Call ValidaEstructuraCodExt(nro_tenro, Mid(estructura, 1, 20), nro_estructura, Inserto_estr)
    End If
    
    'Manterola Maria Magdalena - 04/07/2011
    'Agrego una validación para llamar o no a crearTercero, dependiendo del
    'tipo de estructura
    Call VerSiCrearTercero(nro_tenro, Mid(estructura, 1, 20), ter_est)
    If Inserto_estr Then
        'Veo si tengo que crear el complemento, dependiendo del tipo de estructura
        Select Case nro_tenro
            Case 23
                'Plan de Obra Social Elegida
                'Tengo que buscar la Obra Social Elegida
                StrSql = "SELECT os.ternro FROM his_estructura his "
                StrSql = StrSql & " INNER JOIN estructura est ON est.tenro = his.tenro AND est.estrnro = his.estrnro "
                'StrSql = StrSql & " INNER JOIN osocial os ON os.osdesc = est.estrdabr "
                StrSql = StrSql & " INNER JOIN tercero os ON os.terrazsoc = est.estrdabr "
                StrSql = StrSql & " WHERE his.tenro = 17 and his.ternro = " & NroTercero
                StrSql = StrSql & " ORDER BY htetdesde DESC, htethasta ASC "
                Flog.writeline "busca obra social 4: " & StrSql
                OpenRecordset StrSql, rs_Est
                If Not rs_Est.EOF Then
                    ter_est = rs_Est!Ternro
                    Call VerSiCrearComplemento(nro_tenro, nro_estructura, Mid(estructura, 1, 20), ter_est)
                End If
            Case 25
                'Plan de Obrea Social Por Ley
                'Tengo que buscar la Obra Social por Ley
                StrSql = "SELECT os.ternro FROM his_estructura his "
                StrSql = StrSql & " INNER JOIN estructura est ON est.tenro = his.tenro AND est.estrnro = his.estrnro "
                'StrSql = StrSql & " INNER JOIN osocial os ON os.osdesc = est.estrdabr "
                StrSql = StrSql & " INNER JOIN tercero os ON os.terrazsoc = est.estrdabr "
                StrSql = StrSql & " WHERE his.tenro = 24 and his.ternro = " & NroTercero
                StrSql = StrSql & " ORDER BY htetdesde DESC, htethasta ASC "
                Flog.writeline "busca obra social 3: " & StrSql
                OpenRecordset StrSql, rs_Est
                If Not rs_Est.EOF Then
                    ter_est = rs_Est!Ternro
                    Call VerSiCrearComplemento(nro_tenro, nro_estructura, Mid(estructura, 1, 20), ter_est)
                End If
            Case Else
                Call VerSiCrearComplemento(nro_tenro, nro_estructura, Mid(estructura, 1, 20), ter_est)
        End Select

    End If
End If
    
    
    
' Inserto las Estructuras
'Call AsignarEstructura(Nro_tenro, nro_estructura, NroTercero, F_Alta, F_Baja)
   Select Case nro_tenro
            Case 23
                'Plan de Obra Social Elegida
                'Tengo que buscar la Obra Social Elegida
                StrSql = "SELECT os.ternro FROM his_estructura his "
                StrSql = StrSql & " INNER JOIN estructura est ON est.tenro = his.tenro AND est.estrnro = his.estrnro "
               ' StrSql = StrSql & " INNER JOIN osocial os ON os.osdesc = est.estrdabr "
                StrSql = StrSql & " INNER JOIN tercero os ON os.terrazsoc = est.estrdabr "
                StrSql = StrSql & " WHERE his.tenro = 17 and his.ternro = " & NroTercero
                StrSql = StrSql & " ORDER BY htetdesde DESC, htethasta ASC "
                Flog.writeline "busca obra social 1:: " & StrSql
                OpenRecordset StrSql, rs_Est
                If Not rs_Est.EOF Then
                    ter_est = rs_Est!Ternro
                     If Not Inserto_estr Then
                        Call VerSiCrearComplemento(nro_tenro, nro_estructura, Mid(estructura, 1, 20), ter_est)
                     End If
                     Call AsignarEstructura_NEW(nro_tenro, nro_estructura, NroTercero, F_Alta, F_Baja)
                Else
                     Texto = " Error (630): El empleado no tiene asociada una obra social. No se inserta el plan"
                      Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            Case 25
                'Plan de Obrea Social Por Ley
                'Tengo que buscar la Obra Social por Ley
                StrSql = "SELECT os.ternro FROM his_estructura his "
                StrSql = StrSql & " INNER JOIN estructura est ON est.tenro = his.tenro AND est.estrnro = his.estrnro "
               ' StrSql = StrSql & " INNER JOIN osocial os ON os.osdesc = est.estrdabr "
               StrSql = StrSql & " INNER JOIN tercero os ON os.terrazsoc = est.estrdabr "
                StrSql = StrSql & " WHERE his.tenro = 24 and his.ternro = " & NroTercero
                StrSql = StrSql & " ORDER BY htetdesde DESC, htethasta ASC "
                Flog.writeline "busca obra social 2: " & StrSql
                OpenRecordset StrSql, rs_Est
                If Not rs_Est.EOF Then
                    ter_est = rs_Est!Ternro
                     If Not Inserto_estr Then
                         Call VerSiCrearComplemento(nro_tenro, nro_estructura, Mid(estructura, 1, 20), ter_est)
                        End If
                     Call AsignarEstructura_NEW(nro_tenro, nro_estructura, NroTercero, F_Alta, F_Baja)
                 Else
                     Texto = " Error (630): El empleado no tiene asociada una obra social. No se inserta el plan"
                      Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            Case Else
                Call AsignarEstructura_NEW(nro_tenro, nro_estructura, NroTercero, F_Alta, F_Baja)
       End Select
           
'Cierro y libero
If rs.State = adStateOpen Then rs.Close
Set rs = Nothing
Exit Sub

SaltoLinea:
    Texto = " Error (630) " & Err.Number & " - " & Err.Description
    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, strReg)
    MyRollbackTrans
    OK = False
End Sub

Public Sub LineaModelo_610()
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de DesmenFamiliar
' Autor      : FGZ
' Fecha      : 30/07/2004
' Ultima Mod.: 27/04/2005 - FGZ
' Descripcion: Estandarizacion
' ---------------------------------------------------------------------------------------------
Dim pos1            As Long
Dim pos2            As Long
Dim rs              As New ADODB.Recordset
Dim rsa             As New ADODB.Recordset
Dim Legajo          As Long ' Legajo del Empleado
Dim Anio            As String
Dim fecDesde        As String
Dim fecHasta        As String
Dim NroItem         As String
Dim Monto           As String
Dim NroTercero      As Long


On Error GoTo SaltoLinea

Flog.writeline
FlogE.writeline
FlogP.writeline
    
  StrSql = " SELECT terfecnac,empleado,parenro FROM familiar "
  StrSql = StrSql & " INNER JOIN tercero ON tercero.ternro = familiar.ternro "
  StrSql = StrSql & " WHERE famcargadgi = -1 "
  OpenRecordset StrSql, rs
  Do While Not rs.EOF
  
    NroTercero = rs!Empleado
    
    If rs!parenro = 1 Then
        NroItem = 10
    Else
        If rs!parenro = 2 Then
            NroItem = 11
        Else
            NroItem = 12
        End If
    End If
    If rs!terfecnac > CDate("01/01/" & Year(Date)) Then
        fecDesde = rs!terfecnac
    Else
        fecDesde = "01/01/" & Year(Date)
    End If
    fecHasta = "31/12/" & Year(Date)
    
    ' Inserto el Desmen
    StrSql = " SELECT desmondec FROM desmen WHERE empleado = " & NroTercero
    StrSql = StrSql & " AND itenro = " & NroItem
    StrSql = StrSql & " AND desano = " & Year(Date)
    OpenRecordset StrSql, rsa
    
    If rsa.EOF Then
        ' Inserto el Desmen
        Monto = 1
        StrSql = " INSERT INTO desmen(empleado,itenro,desano,desfecdes,desfechas,desmenprorra,desmondec)"
        StrSql = StrSql & " VALUES(" & NroTercero & "," & NroItem & "," & Year(Date) & ",'" & fecDesde & "','" & fecHasta & "',0," & Monto & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
    Else
        Monto = Int(rsa!desmondec) + 1
        ' Actualizo el Desmen
        StrSql = " UPDATE desmen SET desmondec = " & Monto
        StrSql = StrSql & " WHERE empleado = " & NroTercero
        StrSql = StrSql & " AND itenro = " & NroItem
        StrSql = StrSql & " AND desano = " & Year(Date)
        objConn.Execute StrSql, , adExecuteNoRecords
    End If
    
    rs.MoveNext
  Loop
  
  If rs.State = adStateOpen Then rs.Close
  If rsa.State = adStateOpen Then rsa.Close
  
Exit Sub
SaltoLinea:
    Texto = ": " & Err.Description
    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, StrSql)
    MyRollbackTrans
    OK = False
End Sub

Public Sub LineaModelo_615(ByVal strReg As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de DDJJ (desmen)
' Autor      : FGZ
' Fecha      : 30/07/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim pos1            As Long
Dim pos2            As Long

Dim Legajo          As Long ' Legajo del Empleado
Dim Anio            As String
Dim fecDesde        As String
Dim fecHasta        As String
Dim NroItem         As String
Dim Monto           As String
Dim cuit            As String
Dim RazonSoc        As String
Dim TieneCuit       As Boolean
Dim TieneRazonSoc   As Boolean
Dim NroTercero      As Long
Dim rs              As New ADODB.Recordset
Dim rsdesmen        As New ADODB.Recordset
Dim Prorratea As Boolean
Dim existedesmen As Boolean

    LineaCarga = LineaCarga + 1
    Tabs = 1
    
    On Error GoTo SaltoLinea
    
    Flog.writeline
    FlogE.writeline
    FlogP.writeline
    
    'Legajo
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Legajo"
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        Exit Sub
    End If
    If IsNumeric(Aux) Then
        Legajo = Aux
    Else
        Texto = ": " & "El legajo no es numerico "
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        InsertaError 1, 8
        HuboError = True
        Exit Sub
    End If
        
    'Año
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Año"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        Exit Sub
    End If
    Anio = Aux
    
    'Fecha Desde
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Fecha Desde"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        Exit Sub
    End If
    If IsDate(Aux) Then
        fecDesde = C_Date(Aux)
    Else
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor No valido. " & Aux & " No es una fecha"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        Exit Sub
    End If
   
    'Fecha Hasta
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Fecha Hasta"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        Exit Sub
    End If
    If IsDate(Aux) Then
        fecHasta = C_Date(Aux)
    Else
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor No valido. " & Aux & " No es una fecha"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        Exit Sub
    End If
    
    'Nro de Item
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Nro de Item"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        Exit Sub
    End If
    NroItem = Aux
    
'    'Monto
'    NroColumna = NroColumna + 1
'    Obligatorio = True
'    Campoetiqueta = "Monto"
'    pos1 = pos2 + 2
'    pos2 = Len(strReg)
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
'        HuboError = True
'        Exit Sub
'    End If
'    Monto = Replace(CStr(aux), SeparadorDecimal, ".")
  
    
    
    TieneCuit = False
    TieneRazonSoc = False
  
    'Monto
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Monto"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 >= pos1 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            HuboError = True
            Exit Sub
        End If
        Monto = Replace(CStr(Aux), SeparadorDecimal, ".")
    
        'CUIT
        NroColumna = NroColumna + 1
        Obligatorio = False
        Campoetiqueta = "Cuit"
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        If pos2 >= pos1 Then
            Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
            If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
                Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                HuboError = True
                Exit Sub
            End If
            If (Aux = "N/A" Or EsNulo(Aux)) Then
                cuit = " "
            Else
                TieneCuit = True
                cuit = Left(CStr(Aux), 13)
            'Le saco el guion y los puntos
            'CUIT = Replace(CStr(CUIT), ".", "")
            'CUIT = Replace(CStr(CUIT), "-", "")
            End If
            
            'Razon Social
            NroColumna = NroColumna + 1
            Obligatorio = False
            Campoetiqueta = "Razon Social"
            pos1 = pos2 + 2
            pos2 = InStr(pos1, strReg, separador) - 1
            If pos2 >= pos1 Then
                Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
                If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
                    Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                    HuboError = True
                    Exit Sub
                End If
                If (Aux = "N/A" Or EsNulo(Aux)) Then
                    RazonSoc = " "
                Else
                    TieneRazonSoc = True
                    RazonSoc = Left(CStr(Aux), 100)
                End If
                
                
                'FGZ - Se le agregó un nuevo campo al modelo (si el item Prorratea o no)
                'Prorratea
                NroColumna = NroColumna + 1
                Obligatorio = False
                Campoetiqueta = "Prorratea"
                pos1 = pos2 + 2
                pos2 = InStr(pos1, strReg, separador) - 1
                If pos2 >= pos1 Then
                    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
                    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
                        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
                        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                        HuboError = True
                        Exit Sub
                    End If
                    Prorratea = CBool(Aux)
                Else
                    pos2 = Len(strReg)
                    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
                    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
                        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
                        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                        HuboError = True
                        Exit Sub
                    End If
                    If UCase(Aux) = "SI" Or UCase(Aux) = "S" Then
                        Prorratea = True
                    Else
                        Prorratea = False
                    End If
                End If
                
            Else
                pos2 = Len(strReg)
                Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
                If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
                    Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                    HuboError = True
                    Exit Sub
                End If
                TieneRazonSoc = True
                RazonSoc = Left(CStr(Aux), 100)
                
                Prorratea = False
            End If
        Else
            pos2 = Len(strReg)
            Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
            If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
                Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                HuboError = True
                Exit Sub
            End If
            TieneCuit = True
            cuit = Left(CStr(Aux), 13)
            'Le saco el guion y los puntos
            'CUIT = Replace(CStr(CUIT), ".", "")
            'CUIT = Replace(CStr(CUIT), "-", "")
            Prorratea = False
        End If
    Else
        pos2 = Len(strReg)
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            HuboError = True
            Exit Sub
        End If
        Monto = Replace(CStr(Aux), SeparadorDecimal, ".")
        
        Prorratea = False
    End If
  
  
  
' ===================================================================================
' ===================================================================================

'Busco el empleado asociado
StrSql = "SELECT ternro FROM empleado WHERE empleg = " & Legajo
OpenRecordset StrSql, rs
If Not rs.EOF Then
    NroTercero = rs!Ternro
Else
    Texto = ": " & " - Campo " & Campoetiqueta & " El legajo no existe"
    NroColumna = 1
    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    HuboError = True
    Exit Sub
End If
Texto = "Legajo = " & Legajo & "Codigo de Tercero = " & NroTercero
Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, strReg)

StrSql = " select * from desmen where itenro= " & NroItem & " and empleado= " & NroTercero & " and desfecdes= " & ConvFecha(fecDesde) & " and desfechas= " & ConvFecha(fecHasta)
OpenRecordset StrSql, rsdesmen
    'Dimatz Rafael Se inserto una verificacion para insertar una DDJJ y comprobar que no exista
If Not rsdesmen.EOF Then
    existedesmen = True
    Texto = ": Existe otra Declaración Jurada con la misma descripción, vigencia desde, vigencia hasta y nombre."
    NroColumna = 1
    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
End If
If Not existedesmen Then
    'Inserto el Desmen
    StrSql = " INSERT INTO desmen("
    StrSql = StrSql & "empleado,itenro,desano,desfecdes,desfechas,desmenprorra,desmondec"
    'If TieneCuit Then
        StrSql = StrSql & ",descuit"
    'End If
    'If TieneRazonSoc Then
        StrSql = StrSql & ",desrazsoc"
    'End If
    StrSql = StrSql & ")"
    StrSql = StrSql & " VALUES( "
    StrSql = StrSql & NroTercero
    StrSql = StrSql & "," & NroItem
    StrSql = StrSql & "," & Anio
    StrSql = StrSql & "," & ConvFecha(fecDesde)
    StrSql = StrSql & "," & ConvFecha(fecHasta)
    StrSql = StrSql & "," & CInt(Prorratea)
    StrSql = StrSql & "," & Monto
    'If TieneCuit Then
        StrSql = StrSql & ",'" & cuit & "'"
    'End If
    'If TieneRazonSoc Then
        StrSql = StrSql & ",'" & RazonSoc & "'"
    'End If
    StrSql = StrSql & ")"
    objConn.Execute StrSql, , adExecuteNoRecords
  
    Texto = "Inserte el item - " & NroItem & " - " & Anio & " - " & Monto & "-" & cuit & "-" & RazonSoc
    Call Escribir_Log("flog", LineaCarga, NroColumna, Texto, Tabs, strReg)
End If
'Cierro y libero
If rs.State = adStateOpen Then rs.Close
Set rs = Nothing
If rsdesmen.State = adStateOpen Then rsdesmen.Close
Set rsdesmen = Nothing

Exit Sub
SaltoLinea:
    'Resume Next
    Texto = ": " & Err.Description
    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, strReg)
    MyRollbackTrans
    OK = False
End Sub

Public Sub LineaModelo_620(ByVal strReg As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de Desgloce de ganancias (desliq)
' Autor      : FGZ
' Fecha      : 30/07/2004
' Ultima Mod.: OC - 13/10/2005
' Descripcion: estaba fijo el item 1 cuando insertaba. se cambio el 1 por i
' Ultima Mod.: FGZ - 01/11/2005
' Descripcion: faltaba convfecha() en insert
' ---------------------------------------------------------------------------------------------
Dim Legajo          As Long ' Legajo del Empleado
Dim Anio            As String  ' Apellido del Familiar
Dim Mes             As String  ' Nombre del Familiar
Dim Item(22)        As String
Dim pos1            As Long
Dim pos2            As Long
Dim NroTercero      As Long
Dim FecHasta_Peri   As String
Dim I               As Long
Dim rs As New ADODB.Recordset
Dim rs_control As New ADODB.Recordset

    For I = 1 To UBound(Item)
        Item(I) = ""
    Next I
    
    LineaCarga = LineaCarga + 1
    Tabs = 1
    
    On Error GoTo SaltoLinea
    
    Flog.writeline
    FlogE.writeline
    FlogP.writeline
    
    'Legajo
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Legajo"
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        Exit Sub
    End If
    If IsNumeric(Aux) Then
        Legajo = Aux
    Else
        Texto = ": " & "El legajo no es numerico "
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        InsertaError 1, 8
        HuboError = True
        Exit Sub
    End If
        
    'Año
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Año"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        Exit Sub
    End If
    Anio = Aux
    
    'Mes
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Mes"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        Exit Sub
    End If
    Mes = Aux
    
    'Leo los items
    For I = 1 To UBound(Item)
        NroColumna = NroColumna + 1
        Obligatorio = False
        Campoetiqueta = "Item " & I
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        If Not (pos2 >= pos1) Then
            pos2 = Len(strReg)
        End If
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If IsNumeric(Aux) Then
                Item(I) = CDbl(Replace(CStr(Aux), SeparadorDecimal, "."))
        Else
            If (Aux = "N/A" Or EsNulo(Aux)) Then
                If Obligatorio Then
                    Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                    HuboError = True
                    Exit Sub
                Else
                    Item(I) = Aux
                End If
            Else
                Texto = ": " & " - Campo " & Campoetiqueta & " tiene que ser N/A"
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                HuboError = True
                Exit Sub
            End If
        End If
    Next I
'==================================================================================
'==================================================================================
    If Mes = 12 Then
        FecHasta_Peri = "31/12/" & Anio
    Else
        FecHasta_Peri = C_Date("01/" & Mes + 1 & "/" & Anio) - 1
    End If
    
'Busco el empleado asociado
StrSql = "SELECT ternro FROM empleado WHERE empleg = " & Legajo
OpenRecordset StrSql, rs
If Not rs.EOF Then
    NroTercero = rs!Ternro
Else
    Texto = ": El legajo no existe"
    NroColumna = 1
    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    HuboError = True
    Exit Sub
End If
Texto = "Legajo = " & Legajo & " Codigo de Tercero = " & NroTercero
Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, strReg)
    
    
'Inserto los Desliq de los items
For I = 1 To 22
  If Item(I) <> "0" And Item(I) <> "" And Item(I) <> "N/A" Then
    StrSql = "SELECT * FROM desliq WHERE empleado = " & NroTercero & " AND dlfecha = " & ConvFecha(FecHasta_Peri) & " AND itenro = " & I
    OpenRecordset StrSql, rs_control
    
    If rs_control.EOF Then
        StrSql = " INSERT INTO desliq(empleado,itenro,dlfecha,pronro,dlmonto,dlprorratea)"
        StrSql = StrSql & " values(" & NroTercero & "," & I & "," & ConvFecha(FecHasta_Peri) & ",Null," & Item(I) & ",0)"
    Else
        StrSql = " UPDATE desliq SET dlmonto = " & Item(I)
        StrSql = StrSql & " WHERE empleado = " & NroTercero & " AND dlfecha = " & ConvFecha(FecHasta_Peri) & " AND itenro = " & I
    End If
    objConn.Execute StrSql, , adExecuteNoRecords
        

    Texto = "Item " & I & " insertado"
    Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, strReg)
  End If
Next I

  
'Cierro y libero
If rs.State = adStateOpen Then rs.Close
Set rs = Nothing

Exit Sub
SaltoLinea:
    Texto = ": " & Err.Description
    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, strReg)
    MyRollbackTrans
    OK = False
End Sub


Public Sub LineaModelo_625(ByVal strReg As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de Liquidacion (Accor)
' Autor      : FGZ
' Fecha      : 30/07/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim pos1            As Long
Dim pos2            As Long
Dim Legajo          As String   'Legajo                   -- empleado.empleg
Dim Anio            As String   'Año de la liquidacion    -- periodo.pliqanio
Dim Mes             As String   'Mes de la liquidacion    -- periodo.pliqmes
Dim Proceso         As String   'Proceso de liquidacion   -- proceso.prodesc
Dim CtoCodigo       As String   'Código de concepto       -- concepto.conccod
Dim Monto           As String   'Monto liquidado          -- detliq.dlimonto
Dim Cantidad        As String   'Cantidad liquidada       -- detliq.dlicant

Dim Desc_Periodo    As String   'Descripcion del Periodo de liquidacion
Dim FecDesde_Peri   As String   'Fecha desde del periodo
Dim FecHasta_Peri   As String   'Fecha desde del periodo

Dim NroTercero          As Long

Dim Nro_Legajo          As Long
Dim nro_concepto        As Long
Dim nro_periodo         As Long
Dim nro_proceso         As Long
Dim nro_cabecera        As Long
Dim nro_tipoconc        As Long

Dim rs As New ADODB.Recordset
Dim RsPeriodo As New ADODB.Recordset
Dim RsConcepto As New ADODB.Recordset
Dim RsCabliq As New ADODB.Recordset
Dim RsProceso As New ADODB.Recordset

Dim CodPeri As Long
Dim CodPro  As Long
Dim CodCabe As Long

    LineaCarga = LineaCarga + 1
    Tabs = 1
    
    On Error GoTo SaltoLinea
    
    Flog.writeline
    FlogE.writeline
    FlogP.writeline
    
    'Legajo
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Legajo"
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        Exit Sub
    End If
    If IsNumeric(Aux) Then
        Legajo = Aux
    Else
        Texto = ": " & "El legajo no es numerico "
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        InsertaError 1, 8
        HuboError = True
        Exit Sub
    End If
    
    'Año
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Año"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        Exit Sub
    End If
    Anio = Aux
    
    'Mes
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Mes"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        Exit Sub
    End If
    Mes = Aux
    
    'Proceso
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Proceso"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        Exit Sub
    End If
    Proceso = Aux
    
    'Concepto
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Concepto"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        Exit Sub
    End If
    CtoCodigo = Aux
    
    'Cantidad
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Cantidad"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        Exit Sub
    End If
    Cantidad = Aux
    If Aux = "N/A" Or EsNulo(Aux) Then
        Cantidad = 0
    End If
    
    'Monto
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Monto"
    pos1 = pos2 + 2
    pos2 = Len(strReg)
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        Exit Sub
    End If
    Monto = Aux
'================================================================================
'================================================================================
'Busco el empleado asociado
StrSql = "SELECT ternro FROM empleado WHERE empleg = " & Legajo
If rs.State = adStateOpen Then rs.Close
OpenRecordset StrSql, rs
If Not rs.EOF Then
    NroTercero = rs!Ternro
Else
    Texto = ": " & " - Campo " & Campoetiqueta & " El legajo no existe"
    NroColumna = 1
    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    HuboError = True
    Exit Sub
End If
Texto = "Legajo = " & Legajo & "Codigo de Tercero = " & NroTercero
Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, strReg)

' Busco el periodo de liquidacion
StrSql = " SELECT pliqnro FROM periodo WHERE pliqanio = " & Anio
StrSql = StrSql & " AND pliqmes = " & Mes
OpenRecordset StrSql, RsPeriodo
If RsPeriodo.EOF Then  'No existe el periodo => lo creo
    Call BusMes(Mes, Desc_Periodo)
    FecDesde_Peri = "01/" & Mes & "/" & Anio
    If Mes = 12 Then
        FecHasta_Peri = "31/12/" & Anio
    Else
        FecHasta_Peri = CDate("01/" & Mes + 1 & "/" & Anio) - 1
    End If
    Desc_Periodo = Desc_Periodo & Anio
        
    StrSql = " INSERT INTO periodo(pliqmes,pliqanio,pliqdesc,pliqdesde,pliqhasta) "
    StrSql = StrSql & " VALUES(" & Mes & "," & Anio & ",'" & Desc_Periodo & "','" & FecDesde_Peri & "','" & FecHasta_Peri & "')"
    objConn.Execute StrSql, , adExecuteNoRecords
        
    nro_periodo = getLastIdentity(objConn, "periodo")
Else
    nro_periodo = RsPeriodo!Pliqnro
End If
      
'Busco el proceso dentro del periodo de liquidacion
StrSql = " SELECT pronro FROM proceso WHERE prodesc = '" & Proceso & "'"
StrSql = StrSql & " AND pliqnro = " & nro_periodo
OpenRecordset StrSql, RsProceso
If RsProceso.EOF Then  'No existe el proceso => lo creo
    StrSql = " INSERT INTO proceso(pliqnro,tprocnro,profecpago,prodesc,profecplan,profecini,profecfin) "
    StrSql = StrSql & " VALUES(" & nro_periodo & ",3,'" & FecHasta_Peri & "','" & Proceso & "','"
    StrSql = StrSql & FecHasta_Peri & "','" & FecDesde_Peri & "','" & FecHasta_Peri & "')"
    objConn.Execute StrSql, , adExecuteNoRecords

    nro_proceso = getLastIdentity(objConn, "proceso")
Else
    nro_proceso = RsProceso!pronro
End If
      
'Busco el concepto
StrSql = " SELECT concnro,tconnro FROM concepto WHERE conccod = '" & CtoCodigo & "'"
OpenRecordset StrSql, RsConcepto
If RsConcepto.EOF Then  'No existe el concepto => Error
    nro_concepto = 0
Else
    nro_concepto = RsConcepto!ConcNro
    'Ajuste para Accor porque los conceptos son todos positivos -------------------------------------
    nro_tipoconc = RsConcepto!tconnro
    If nro_tipoconc = 6 Or nro_tipoconc = 8 Or nro_tipoconc = 10 Or nro_tipoconc = 13 Then
        If Mid(Monto, 1, 1) = "-" Then
            Monto = Mid(Monto, 2, Len(Monto))
        Else
            Monto = "-" & Monto
        End If
    End If
    'Fin ajuste para Accor --------------------------------------------------------------------------
End If
    
' Busco el cabliq del empleado para el proceso y periodo
StrSql = " SELECT cliqnro FROM cabliq WHERE empleado = " & NroTercero
StrSql = StrSql & " AND pronro = " & nro_proceso
OpenRecordset StrSql, RsCabliq
If RsCabliq.EOF Then  'No existe el cabliq => lo creo
    StrSql = " INSERT INTO cabliq(empleado,pronro) VALUES("
    StrSql = StrSql & NroTercero & "," & nro_proceso & ")"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    nro_cabecera = getLastIdentity(objConn, "cabliq")
Else
    nro_cabecera = RsCabliq!cliqnro
End If
      
If nro_concepto <> 0 Then ' Inserto el detalle de liquidacion
    StrSql = " SELECT * FROM detliq WHERE cliqnro = " & nro_cabecera
    StrSql = StrSql & " AND concnro = " & nro_concepto
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs
    If rs.EOF Then
        StrSql = " INSERT INTO detliq(cliqnro,concnro,dlimonto,dlicant,dliqdesde,dliqhasta,tconnro,dlitexto,dlifec) VALUES("
        StrSql = StrSql & nro_cabecera & "," & nro_concepto & "," & Monto & "," & Cantidad
        StrSql = StrSql & ",0,0,0,'','00:00:00')"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = "Inserte el Detalle de liquidacion  - " & CtoCodigo & " - " & Mes & " - " & Anio
        Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, strReg)
    Else
        Texto = "Ya existe un detale de liquidacion para ese legajo " & Legajo & " en ese proceso "
        NroColumna = 1
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
Else
    Texto = "Concepto Inexistente = " & CtoCodigo
    NroColumna = 5
    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
End If
  
  
'Cierro y libero
If rs.State = adStateOpen Then rs.Close
If RsCabliq.State = adStateOpen Then RsCabliq.Close
If RsConcepto.State = adStateOpen Then RsConcepto.Close
If RsPeriodo.State = adStateOpen Then RsPeriodo.Close
If RsProceso.State = adStateOpen Then RsProceso.Close

Set rs = Nothing
Set RsCabliq = Nothing
Set RsConcepto = Nothing
Set RsPeriodo = Nothing
Set RsProceso = Nothing

Exit Sub
SaltoLinea:
    Texto = ": " & Err.Description
    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, strReg)
    MyRollbackTrans
    OK = False
End Sub

Public Sub LineaModelo_635(ByVal strReg As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de Títulos del Empleado
' Autor      : EPL
' Fecha      : 30/09/2004
' Ultima Mod.: 28/12/2007 - Lisandro Moro - Se corriogio al momento de insertar los titulos, por una modificaciones en el abm de titulos
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Legajo          As String   'LEGAJO                        -- empleado.empleg
Dim Titulo          As String   'Estructura                    -- his_estructura.estrnro
Dim institucion     As String   'Tipo de Estructura            -- his_estructura.tenro
Dim Nivel           As String

Dim pos1 As Long
Dim pos2 As Long

Dim NroTercero          As Long
Dim NroLegajo           As Long
Dim NroTitulo           As Long
Dim NroInstitucion      As Long
Dim NroNivel            As Long

Dim rs_tit As New ADODB.Recordset
Dim rs_ins As New ADODB.Recordset
Dim rs_niv As New ADODB.Recordset
Dim rs     As New ADODB.Recordset

    LineaCarga = LineaCarga + 1
    Tabs = 1
    
    On Error GoTo SaltoLinea
    
    Flog.writeline
    FlogE.writeline
    FlogP.writeline
    
    'Legajo
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Legajo"
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        Exit Sub
    End If
    If IsNumeric(Aux) Then
        Legajo = Aux
    Else
        Texto = ": " & "El legajo no es numerico "
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        InsertaError 1, 8
        HuboError = True
        Exit Sub
    End If
    
    'Titulo
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Titulo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        Exit Sub
    End If
    Titulo = Left(Aux, 40)
    
    'Institucion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Institucion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        Exit Sub
    End If
    institucion = Aux
    
    'Nivel
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nivel"
    pos1 = pos2 + 2
    pos2 = Len(strReg)
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        Exit Sub
    End If
    Nivel = Left(Aux, 40)
'================================================================================
'================================================================================
'Busco el empleado asociado
StrSql = "SELECT ternro FROM empleado WHERE empleg = " & Legajo
If rs.State = adStateOpen Then rs.Close
OpenRecordset StrSql, rs
If Not rs.EOF Then
    NroTercero = rs!Ternro
Else
    Texto = ": " & " - Campo " & Campoetiqueta & " El legajo no existe"
    NroColumna = 1
    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    HuboError = True
    Exit Sub
End If
Texto = "Legajo = " & Legajo & "Codigo de Tercero = " & NroTercero
Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, strReg)


'Busco el nivel de estudio, si no existe lo creo
StrSql = "SELECT nivnro FROM nivest WHERE upper(nivdesc) = '" & UCase(Nivel) & "'"
OpenRecordset StrSql, rs_niv
If rs_niv.EOF Then
    If Nivel <> "N/A" And Not EsNulo(Nivel) Then
        StrSql = "INSERT INTO nivest (nivdesc,nivsist,nivobligatorio,nivestfli) VALUES ('" & UCase(Nivel) & "',0,0,0)"
        objConn.Execute StrSql, , adExecuteNoRecords
    
        NroNivel = getLastIdentity(objConn, "nivest")
    Else
        'NroNivel = rs_niv!nivnro
        NroNivel = 0
    End If
Else
    'NroNivel = 0
    NroNivel = rs_niv!nivnro
End If

' Busco la institucion, si no existe lo creo
If institucion <> "N/A" And Not EsNulo(institucion) Then
    StrSql = "SELECT instnro FROM institucion WHERE upper(instdes) = '" & UCase(institucion) & "'"
    OpenRecordset StrSql, rs_ins
    If rs_ins.EOF Then
        StrSql = "INSERT INTO institucion (instdes,instabre) VALUES('" & institucion & "','" & institucion & "')"
        objConn.Execute StrSql, , adExecuteNoRecords
        NroInstitucion = getLastIdentity(objConn, "institucion")
    Else
        NroInstitucion = rs_ins!InstNro
        'NroInstitucion = 0
    End If
Else
    NroInstitucion = 0
    'NroInstitucion = rs_ins!instnro
End If

'Busco el titulo
StrSql = "SELECT titnro FROM titulo WHERE upper(titdesabr) = '" & UCase(Titulo) & "'"
If NroNivel = 0 Then
    StrSql = StrSql & " AND nivnro is null "
Else
    StrSql = StrSql & " AND nivnro = " & NroNivel
End If
If NroInstitucion = 0 Then
    StrSql = StrSql & " AND instnro is null "
Else
    StrSql = StrSql & " AND instnro = " & NroInstitucion
End If
OpenRecordset StrSql, rs_tit
If rs_tit.EOF Then
    StrSql = "INSERT INTO titulo (titdesabr,instnro,nivnro) VALUES('"
    StrSql = StrSql & Titulo & "'"
    If NroInstitucion = 0 Then
        StrSql = StrSql & ", null"
    Else
        StrSql = StrSql & "," & NroInstitucion
    End If
    If NroNivel = 0 Then
        StrSql = StrSql & ", null"
    Else
        StrSql = StrSql & "," & NroNivel
    End If
    StrSql = StrSql & " )"
    objConn.Execute StrSql, , adExecuteNoRecords

    NroTitulo = getLastIdentity(objConn, "titulo")
Else
    NroTitulo = rs_tit!TitNro
End If

'Controlo si el empleado tiene el titulo asociado, si no lo asocio.
StrSql = "SELECT * FROM emp_tit WHERE ternro = " & NroTercero & " AND titnro = " & NroTitulo
If rs.State = adStateOpen Then rs.Close
OpenRecordset StrSql, rs
If rs.EOF Then
    StrSql = "INSERT INTO emp_tit (ternro,titnro) VALUES (" & NroTercero & "," & NroTitulo & ")"
    objConn.Execute StrSql, , adExecuteNoRecords
End If

'Cierro y libero
If rs.State = adStateOpen Then rs.Close
Set rs = Nothing

Exit Sub
SaltoLinea:
    Texto = ": " & Err.Description
    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, strReg)
    MyRollbackTrans
    OK = False
End Sub

Public Sub LineaModelo_640(ByVal strReg As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de fases del Empleado
' Autor      : EPL
' Fecha      : 30/09/2004
' Ultima Mod.: 28/04/2005 - FGZ
' Descripcion: Estandarizacion
'              02-12-2010 - Leticia A. - elimina caracteres invalidos de diferentes campos.
'              17-03-2011 - Leticia A. - Si hay causa de faja chequear que ssi exista F Baja - agregar situacion de revista asociada a la causa de baja -  completar conteo de registros de errores
' ---------------------------------------------------------------------------------------------
Dim pos1 As Long
Dim pos2 As Long

Dim Legajo          As String
Dim Causa           As String
Dim FAlta           As String
Dim FBaja           As String
Dim Estado          As String
Dim Sueldo          As String
Dim Vacaciones      As String
Dim Indemnizacion   As String
Dim Real            As String
Dim Fasrecofec      As String
Dim Empantnro       As String

Dim NroTercero        As Long
Dim NroCausa          As Long
Dim F_Alta            As String
Dim F_Baja            As String
Dim V_Estado          As Long
Dim V_Sueldo          As Long
Dim V_Vacaciones      As Long
Dim V_Indemnizacion   As Long
Dim V_Real            As Long
Dim V_Fasrecofec      As Long
Dim V_Empantnro       As Long


Dim rs      As New ADODB.Recordset
Dim rs_cau  As New ADODB.Recordset
Dim rs_emp  As New ADODB.Recordset
Dim rs_Sql  As New ADODB.Recordset

    
    LineaCarga = LineaCarga + 1
    Tabs = 1
    
    On Error GoTo SaltoLinea
    
    Flog.writeline
    FlogE.writeline
    FlogP.writeline
    
    'Legajo
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Legajo"
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (UCase(Aux) = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        RegError = RegError + 1
        Exit Sub
    End If
    If IsNumeric(Aux) Then
        Legajo = Aux
    Else
        Texto = ": " & "El legajo no es numerico "
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        InsertaError 1, 8
        HuboError = True
        Exit Sub
    End If
    
    'Causa de Baja
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Causa de baja"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    'If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        'Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        'Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'HuboError = True
        'Exit Sub
        'Causa = ""
    'End If
    'aux = EliminarCHInvalidosII(aux, 1, "")
    Causa = Aux
    
    'Fecha de Alta
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Fecha de Alta"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (UCase(Aux) = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        RegError = RegError + 1
        Exit Sub
    End If
    FAlta = Aux
    If UCase(FAlta) <> "N/A" Then
        F_Alta = ConvFecha(FAlta)
    Else
        Exit Sub
    End If
    
    'Fecha de baja
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de baja"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (UCase(Aux) = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        RegError = RegError + 1
        Exit Sub
    End If
    FBaja = Aux
    If EsNulo(FBaja) Or UCase(FBaja) = "N/A" Then
        F_Baja = "Null"
    Else
        F_Baja = ConvFecha(FBaja)
    End If
    
   
    
    'Estado
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estado"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (UCase(Aux) = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        RegError = RegError + 1
        Exit Sub
    End If
    'aux = EliminarCHInvalidosII(aux, 1, "")
    Estado = UCase(Aux)
    If UCase(Estado) <> "N/A" Then
        If UCase(Estado) = "ACTIVO" Then
            V_Estado = -1
        Else
            V_Estado = 0
        End If
    Else
        Texto = "Estado de la fase no especificado"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Antig. p/Sueldo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Antig. p/Sueldo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (UCase(Aux) = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        RegError = RegError + 1
        Exit Sub
    End If
    Sueldo = UCase(Aux)
    
    'Antig. p/Vacaciones
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Antig. p/vacaciones"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (UCase(Aux) = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        RegError = RegError + 1
        Exit Sub
    End If
    Vacaciones = UCase(Aux)
    
    'Antig. p/Indemnización
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Antig. p/Indemnización"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (UCase(Aux) = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        RegError = RegError + 1
        Exit Sub
    End If
    Indemnizacion = UCase(Aux)
    
    'Antig. p/Real
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Antig. p/Real"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (UCase(Aux) = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        RegError = RegError + 1
        Exit Sub
    End If
    Real = UCase(Aux)
    
    'Fecha Alta Reconocida
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha Alta Reconocida"
    pos1 = pos2 + 2
    pos2 = Len(strReg)
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (UCase(Aux) = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        RegError = RegError + 1
        Exit Sub
    End If
    Fasrecofec = UCase(Aux)
'================================================================================
'================================================================================

'Busco el empleado asociado
StrSql = "SELECT ternro FROM empleado WHERE empleg = " & Legajo
If rs.State = adStateOpen Then rs.Close
OpenRecordset StrSql, rs
If Not rs.EOF Then
    NroTercero = rs!Ternro
Else
    Texto = ": " & " - Campo " & Campoetiqueta & " El legajo no existe"
    NroColumna = 1
    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    HuboError = True
    RegError = RegError + 1
    Exit Sub
End If
Texto = "Legajo = " & Legajo & "Codigo de Tercero = " & NroTercero
Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, strReg)
    
    
If Not EsNulo(Causa) And Causa <> "N/A" Then
    StrSql = " SELECT caunro FROM causa WHERE UPPER(caudes) = '" & UCase(Causa) & "'"
    OpenRecordset StrSql, rs_cau
    If Not rs_cau.EOF Then
        NroCausa = rs_cau!caunro
    Else
        StrSql = " INSERT INTO causa(caudes,causist,caudesvin,empnro) VALUES ('" & Causa & "',0,-1,1)"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        NroCausa = getLastIdentity(objConn, "causa")
    End If
Else
    NroCausa = 0
End If


' Si hay una causa de baja, se tiene que cargar ssi la Fecha de Baja (tablero adp)
If NroCausa <> 0 Then
    If F_Baja = "Null" Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio - si existe causa de baja tien que haber fecha de baja"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        HuboError = True
        Exit Sub
    End If
End If


V_Sueldo = 0
V_Vacaciones = 0
V_Indemnizacion = 0
V_Real = 0
V_Fasrecofec = 0

If UCase(Sueldo) = "SI" Then
    V_Sueldo = -1
End If
If UCase(Vacaciones) = "SI" Then
    V_Vacaciones = -1
End If
If UCase(Indemnizacion) = "SI" Then
    V_Indemnizacion = -1
End If
If UCase(Real) = "SI" Then
    V_Real = -1
End If
If UCase(Fasrecofec) = "SI" Then
    V_Fasrecofec = -1
End If

'StrSql = "SELECT fasnro FROM fases "
'StrSql = StrSql & " WHERE empleado = " & NroTercero
'StrSql = StrSql & " AND altfec = " & F_Alta
'StrSql = StrSql & " AND bajfec = " & F_Baja
'StrSql = StrSql & " AND estado = " & V_Estado
'StrSql = StrSql & " AND sueldo = " & V_Sueldo
'StrSql = StrSql & " AND vacaciones = " & V_Vacaciones
'StrSql = StrSql & " AND indemnizacion = " & V_Indemnizacion
'StrSql = StrSql & " AND real = " & V_Real
'If rs.State = adStateOpen Then rs.Close
'OpenRecordset StrSql, rs
'If rs.EOF Then
'    If NroCausa <> 0 Then
'      StrSql = "INSERT INTO fases(empleado,caunro,altfec,bajfec,estado,empantnro,"
'      StrSql = StrSql & " sueldo,vacaciones,indemnizacion,real,fasrecofec)"
'      StrSql = StrSql & " VALUES(" & NroTercero & "," & NroCausa & "," & F_Alta & "," & F_Baja & ","
'      StrSql = StrSql & V_Estado & ",0," & V_Sueldo & "," & V_Vacaciones & "," & V_Indemnizacion & ","
'      StrSql = StrSql & V_Real & "," & V_Fasrecofec & ")"
'    Else
'      StrSql = "INSERT INTO fases(empleado,caunro,altfec,bajfec,estado,empantnro,"
'      StrSql = StrSql & " sueldo,vacaciones,indemnizacion,real,fasrecofec)"
'      StrSql = StrSql & " VALUES(" & NroTercero & ",Null," & F_Alta & "," & F_Baja & ","
'      StrSql = StrSql & V_Estado & ",0," & V_Sueldo & "," & V_Vacaciones & "," & V_Indemnizacion & ","
'      StrSql = StrSql & V_Real & "," & V_Fasrecofec & ")"
'    End If
'
'    objConn.Execute StrSql, , adExecuteNoRecords
'Else
'    Texto = "La fase ya existe"
'    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, strReg)
'End If
    

'-----------------------------------------------------------------------
'FGZ - 09/09/2010 -------------------------------------------------------
'Si no existe fase ==> simplemente crea la fase
StrSql = "SELECT * FROM fases WHERE empleado = " & NroTercero
StrSql = StrSql & " ORDER BY altfec DESC"
OpenRecordset StrSql, rs
If rs.EOF Then
    If NroCausa <> 0 Then
      StrSql = "INSERT INTO fases(empleado,caunro,altfec,bajfec,estado,empantnro,"
      StrSql = StrSql & " sueldo,vacaciones,indemnizacion,real,fasrecofec)"
      StrSql = StrSql & " VALUES(" & NroTercero & "," & NroCausa & "," & F_Alta & "," & F_Baja & ","
      StrSql = StrSql & V_Estado & ",0," & V_Sueldo & "," & V_Vacaciones & "," & V_Indemnizacion & ","
      StrSql = StrSql & V_Real & "," & V_Fasrecofec & ")"
      
      objConn.Execute StrSql, , adExecuteNoRecords
      
      Call AsignarSitRevistaAsoc(NroCausa, NroTercero, F_Baja)
      
    Else
      StrSql = "INSERT INTO fases(empleado,caunro,altfec,bajfec,estado,empantnro,"
      StrSql = StrSql & " sueldo,vacaciones,indemnizacion,real,fasrecofec)"
      StrSql = StrSql & " VALUES(" & NroTercero & ",Null," & F_Alta & "," & F_Baja & ","
      StrSql = StrSql & V_Estado & ",0," & V_Sueldo & "," & V_Vacaciones & "," & V_Indemnizacion & ","
      StrSql = StrSql & V_Real & "," & V_Fasrecofec & ")"
      objConn.Execute StrSql, , adExecuteNoRecords
    End If
    'objConn.Execute StrSql, , adExecuteNoRecords
    
Else    'Ya tiene fases que arranca en esa fecha ==> Actualizo
    StrSql = "SELECT * FROM fases "
    StrSql = StrSql & " WHERE empleado = " & NroTercero
    StrSql = StrSql & " AND altfec = " & F_Alta
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        'Si la fecha hasta del registro encontrado es mayor o nulo ==> actualizo
        '   sino error
        If EsNulo(rs!bajfec) Then
            'Actualizo
            StrSql = " UPDATE fases SET "
            StrSql = StrSql & " bajfec = " & F_Baja
            StrSql = StrSql & ",estado = " & V_Estado
            StrSql = StrSql & ",sueldo = " & V_Sueldo
            StrSql = StrSql & ",vacaciones = " & V_Vacaciones
            StrSql = StrSql & ",indemnizacion = " & V_Indemnizacion
            StrSql = StrSql & ",real = " & V_Real
            StrSql = StrSql & ",fasrecofec = " & V_Fasrecofec
            If NroCausa <> 0 Then
                StrSql = StrSql & ",caunro = " & NroCausa
            End If
            StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
            objConn.Execute StrSql, , adExecuteNoRecords
            
            If NroCausa <> 0 Then
                Call AsignarSitRevistaAsoc(NroCausa, NroTercero, F_Baja)
            End If
            
        Else
            If UCase(F_Baja) = "NULL" Then
                'no debe existir ningun otro registro
                'sino
                'Error
                StrSql = "SELECT fasnro FROM fases "
                StrSql = StrSql & " WHERE empleado = " & NroTercero
                StrSql = StrSql & " AND altfec > " & F_Alta
                StrSql = StrSql & " AND fasnro <> " & rs!fasnro
                OpenRecordset StrSql, rs
                If Not rs.EOF Then
                    'Error. No se puede actualizar
                    Texto = "La fase se superpone con otra ya existente"
                    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    RegError = RegError + 1
                    'HuboError = True
                    Exit Sub
                Else
                    'Actualizo
                    StrSql = " UPDATE fases SET "
                    StrSql = StrSql & " bajfec = " & F_Baja
                    StrSql = StrSql & ",estado = " & V_Estado
                    StrSql = StrSql & ",sueldo = " & V_Sueldo
                    StrSql = StrSql & ",vacaciones = " & V_Vacaciones
                    StrSql = StrSql & ",indemnizacion = " & V_Indemnizacion
                    StrSql = StrSql & ",real = " & V_Real
                    StrSql = StrSql & ",fasrecofec = " & V_Fasrecofec
                    If NroCausa <> 0 Then
                        StrSql = StrSql & ",caunro = " & NroCausa
                    End If
                    StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    If NroCausa <> 0 Then
                         Call AsignarSitRevistaAsoc(NroCausa, NroTercero, F_Baja)
                    End If

                End If
            Else
                If rs!bajfec >= FBaja Then
                    'Actualizo
                    StrSql = " UPDATE fases SET "
                    StrSql = StrSql & " bajfec = " & F_Baja
                    StrSql = StrSql & ",estado = " & V_Estado
                    StrSql = StrSql & ",sueldo = " & V_Sueldo
                    StrSql = StrSql & ",vacaciones = " & V_Vacaciones
                    StrSql = StrSql & ",indemnizacion = " & V_Indemnizacion
                    StrSql = StrSql & ",real = " & V_Real
                    StrSql = StrSql & ",fasrecofec = " & V_Fasrecofec
                    If NroCausa <> 0 Then
                        StrSql = StrSql & ",caunro = " & NroCausa
                    End If
                    StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                   If NroCausa <> 0 Then
                        Call AsignarSitRevistaAsoc(NroCausa, NroTercero, F_Baja)
                   End If

                Else
                    'Error. No se puede actualizar
                    Texto = "La fase se superpone con otra ya existente"
                    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    RegError = RegError + 1
                    'HuboError = True
                    Exit Sub

                End If
            End If
        End If
    Else
        If UCase(F_Baja) = "NULL" Then
            StrSql = "SELECT fasnro FROM fases "
            StrSql = StrSql & " WHERE empleado = " & NroTercero
            StrSql = StrSql & " AND bajfec IS NULL "
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                'Error. No se puede actualizar
                Texto = "La fase se superpone con otra ya existente"
                Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, strReg)
                RegError = RegError + 1
                'HuboError = True
                Exit Sub

            Else
                'fecha desde nueva tiene que ser mayor que todas las fases existentes
                StrSql = "SELECT fasnro FROM fases "
                StrSql = StrSql & " WHERE empleado = " & NroTercero
                StrSql = StrSql & " AND bajfec >= " & F_Alta
                OpenRecordset StrSql, rs
                If Not rs.EOF Then
                    'Error. No se puede actualizar
                    Texto = "La fase se superpone con otra ya existente"
                    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    RegError = RegError + 1
                    'HuboError = True
                    Exit Sub

                Else
                    'Inserto
                    If NroCausa <> 0 Then
                      StrSql = "INSERT INTO fases(empleado,caunro,altfec,bajfec,estado,empantnro,"
                      StrSql = StrSql & " sueldo,vacaciones,indemnizacion,real,fasrecofec)"
                      StrSql = StrSql & " VALUES(" & NroTercero & "," & NroCausa & "," & F_Alta & "," & F_Baja & ","
                      StrSql = StrSql & V_Estado & ",0," & V_Sueldo & "," & V_Vacaciones & "," & V_Indemnizacion & ","
                      StrSql = StrSql & V_Real & "," & V_Fasrecofec & ")"
                      objConn.Execute StrSql, , adExecuteNoRecords
                      
                      Call AsignarSitRevistaAsoc(NroCausa, NroTercero, F_Baja)

                    Else
                      StrSql = "INSERT INTO fases(empleado,caunro,altfec,bajfec,estado,empantnro,"
                      StrSql = StrSql & " sueldo,vacaciones,indemnizacion,real,fasrecofec)"
                      StrSql = StrSql & " VALUES(" & NroTercero & ",Null," & F_Alta & "," & F_Baja & ","
                      StrSql = StrSql & V_Estado & ",0," & V_Sueldo & "," & V_Vacaciones & "," & V_Indemnizacion & ","
                      StrSql = StrSql & V_Real & "," & V_Fasrecofec & ")"
                      objConn.Execute StrSql, , adExecuteNoRecords
                    End If
                    'objConn.Execute StrSql, , adExecuteNoRecords
                    
                End If
            End If
        Else
            'SI existe fases que cruce la nueva ==>
            StrSql = "SELECT fasnro FROM fases "
            StrSql = StrSql & " WHERE empleado = " & NroTercero
            StrSql = StrSql & " AND ("
            StrSql = StrSql & " (altfec <= " & F_Alta & " AND bajfec >=" & F_Baja & ")"
            StrSql = StrSql & " OR "
            StrSql = StrSql & " (altfec <= " & F_Alta & " AND bajfec >=" & F_Alta & ")"
            StrSql = StrSql & " OR "
            StrSql = StrSql & " (altfec >= " & F_Alta & " AND bajfec <=" & F_Baja & ")"
            StrSql = StrSql & " OR "
            StrSql = StrSql & " (altfec >= " & F_Alta & " AND altfec <= " & F_Baja & " AND bajfec >=" & F_Baja & ")"
            StrSql = StrSql & " OR "
            StrSql = StrSql & " (altfec >= " & F_Alta & " AND altfec <= " & F_Baja & " AND bajfec IS NULL)"
            StrSql = StrSql & " OR "
            StrSql = StrSql & " (altfec <= " & F_Alta & " AND bajfec IS NULL)"
            StrSql = StrSql & " )"
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                'Error. No se puede actualizar
                Texto = "La fase se superpone con otra ya existente"
                Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, strReg)
                RegError = RegError + 1
                'HuboError = True
                Exit Sub
            Else
                'Inserto
                If NroCausa <> 0 Then
'                    Comentado el 08/08/2014
'                    StrSql = "INSERT INTO fases(empleado,caunro,altfec,bajfec,estado,empantnro,"
'                    StrSql = StrSql & " sueldo,vacaciones,indemnizacion,real,fasrecofec)"
'                    StrSql = StrSql & " VALUES(" & NroTercero & "," & NroCausa & "," & F_Alta & "," & F_Baja & ","
'                    StrSql = StrSql & V_Estado & ",0," & V_Sueldo & "," & V_Vacaciones & "," & V_Indemnizacion & ","
'                    StrSql = StrSql & V_Real & "," & V_Fasrecofec & ")"
'                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    'Agregado el 08/08/2014
                    If V_Fasrecofec = -1 Then
                        'Actualizo el campo de alta reconocida a cero de las fases activas existentes
                        StrSql = " UPDATE fases SET "
                        StrSql = StrSql & " fasrecofec = 0"
                        StrSql = StrSql & " WHERE empleado = " & NroTercero
                        StrSql = StrSql & " AND altfec > " & F_Alta & ""
                        StrSql = StrSql & " AND estado = -1 "
                        StrSql = StrSql & " AND fasrecofec = -1 "
                        objConn.Execute StrSql, , adExecuteNoRecords
                        Texto = " - Actualizo el campo de alta reconocida de las fases activas existentes "
                        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, "")
                            
                        StrSql = "INSERT INTO fases(empleado,caunro,altfec,bajfec,estado,empantnro,"
                        StrSql = StrSql & " sueldo,vacaciones,indemnizacion,real,fasrecofec)"
                        StrSql = StrSql & " VALUES(" & NroTercero & "," & NroCausa & "," & F_Alta & "," & F_Baja & ","
                        StrSql = StrSql & V_Estado & ",0," & V_Sueldo & "," & V_Vacaciones & "," & V_Indemnizacion & ","
                        StrSql = StrSql & V_Real & "," & V_Fasrecofec & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                    Else
                        StrSql = "INSERT INTO fases(empleado,caunro,altfec,bajfec,estado,empantnro,"
                        StrSql = StrSql & " sueldo,vacaciones,indemnizacion,real,fasrecofec)"
                        StrSql = StrSql & " VALUES(" & NroTercero & "," & NroCausa & "," & F_Alta & "," & F_Baja & ","
                        StrSql = StrSql & V_Estado & ",0," & V_Sueldo & "," & V_Vacaciones & "," & V_Indemnizacion & ","
                        StrSql = StrSql & V_Real & "," & V_Fasrecofec & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                    End If
                    'fin
                  
                  'Call AsignarSitRevistaAsoc(NroCausa, NroTercero, F_Baja)
                    Call AsignarSitRevistaAsocHIS(NroCausa, NroTercero, F_Alta, F_Baja)

                Else
                  StrSql = "INSERT INTO fases(empleado,caunro,altfec,bajfec,estado,empantnro,"
                  StrSql = StrSql & " sueldo,vacaciones,indemnizacion,real,fasrecofec)"
                  StrSql = StrSql & " VALUES(" & NroTercero & ",Null," & F_Alta & "," & F_Baja & ","
                  StrSql = StrSql & V_Estado & ",0," & V_Sueldo & "," & V_Vacaciones & "," & V_Indemnizacion & ","
                  StrSql = StrSql & V_Real & "," & V_Fasrecofec & ")"
                  objConn.Execute StrSql, , adExecuteNoRecords
                End If
                'objConn.Execute StrSql, , adExecuteNoRecords
            End If
        End If
    End If
End If
'FGZ - 09/09/2010 -------------------------------------------------------
 
    
    
    
'Cierro y libero
If rs.State = adStateOpen Then rs.Close
Set rs = Nothing

Exit Sub
SaltoLinea:
    Texto = ": " & Err.Description
    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, strReg)
    MyRollbackTrans
    OK = False
End Sub

Public Sub LineaModelo_645(ByVal strReg As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de acu_mes. Levanta los Acumulados de Liquidacion Mensual
' Autor      :
' Fecha      : 30/07/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim pos1            As Long
Dim pos2            As Long

    LineaCarga = LineaCarga + 1
    Tabs = 1
    
    On Error GoTo SaltoLinea
    
    Flog.writeline
    FlogE.writeline
    FlogP.writeline

    Texto = "Modelo no implementado "
    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, strReg)


'Cierro y libero
If rs.State = adStateOpen Then rs.Close
Set rs = Nothing

Exit Sub
SaltoLinea:
    Texto = ": " & Err.Description
    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, strReg)
    MyRollbackTrans
    OK = False
End Sub

Public Sub LineaModelo_650(ByVal strReg As String, ByRef OK As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de Empleados - CODELCO
' Autor      : FGZ
' Fecha      : 30/07/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim pos1            As Long
Dim pos2            As Long

Dim Legajo          As String   'LEGAJO                   -- empleado.empleg
Dim Apellido        As String   'APELLIDO                 -- empleado.terape y tercero.terape
Dim Apellido2       As String   'APELLIDO2                -- empleado.terape y tercero.terape
Dim nombre          As String   'NOMBRE                   -- empleado.ternom y tercero.ternom
Dim nombre2         As String   'NOMBRE                   -- empleado.ternom y tercero.ternom
Dim Reporta         As String   'REPORTA A                -- empleado.empreporta
Dim Fing            As String   'FECHA DE INGRESO         -- terecro.terfecing
Dim FBaja           As String   '
Dim RUT             As String   'DOCUMENTO                -- ter_doc.nrodoc
Dim Email           As String   'EMAIL                    -- empleado.empemail
Dim NTUser          As String   'NT User                  -- Tidnro  = 32 en ter_doc
Dim Emppass         As String   'PASSWORD                 -- empleado.emppass

Dim Ternro As Long

Dim NroTercero          As Long

Dim Nro_Legajo          As Long
Dim Nro_TDocumento      As Long

Dim nro_tenro           As Long
Dim nro_estrnro         As Long

Dim Inserto_estr        As Boolean

Dim Str                 As String

Dim rs As New ADODB.Recordset
Dim rs_Sql As New ADODB.Recordset
Dim rs_Empleado As New ADODB.Recordset
Dim rs_Tel As New ADODB.Recordset
Dim rs_tdo As New ADODB.Recordset


Dim TipoEstr As String
Dim estrdesc As String

Dim IngresoDom          As Boolean

Dim rs_tdoc As New ADODB.Recordset
Dim rs_emp  As New ADODB.Recordset
Dim rs_ten  As New ADODB.Recordset
Dim rs_leg  As New ADODB.Recordset
Dim rs_rep  As New ADODB.Recordset
Dim rs_inst As New ADODB.Recordset
Dim rs_fas  As New ADODB.Recordset
Dim rs_Doc  As New ADODB.Recordset



Dim Sigue As Boolean
Dim ExisteLeg As Boolean
Dim CalculaLegajo As Boolean

Dim NroInstitucion As Long
Dim NroTdocum As Long

Dim F_Nacimiento        As String
Dim F_Fallecimiento     As String
Dim F_Alta              As String
Dim F_Baja              As String
Dim F_Ingreso           As String

Dim empestado           As Long

Dim nro_causabaja       As Long
Dim nro_empresa         As Long

Dim ter_sexo            As Long
Dim ter_estudio         As Long
Dim ter_estado          As Long


    On Error GoTo SaltoLinea

    Pisa = True
    
    StrSql = " SELECT * FROM confrep WHERE repnro = 120"
    StrSql = StrSql & " ORDER BY confnrocol"
    OpenRecordset StrSql, rs_rep
    
    ' True indica que se hace por Descripcion. False por Codigo Externo
    
    Sigue = True 'Indica que si en el archivo viene mas de una vez un empleado, le crea las fases
    ExisteLeg = False
    
    RegLeidos = RegLeidos + 1
    LineaCarga = LineaCarga + 1
    
    Flog.writeline "Numero de Linea = " & RegLeidos
    
    ' Recupero los Valores del Archivo
    
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Legajo = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    
    If Legajo = "N/A" Or Legajo = "" Then
    
        CalculaLegajo = True
        
    Else
        StrSql = "SELECT * FROM empleado WHERE empleado.empleg = " & Legajo
        OpenRecordset StrSql, rs_emp
        If (Not rs_emp.EOF) Then
            If (Not Sigue) Then
                LineaError.writeline Mid(strReg, 1, Len(strReg))
                ErrCarga.writeline "Linea: " & LineaCarga & " - El Empleado ya Existe."
                OK = False
                Exit Sub
            Else
                NroTercero = rs_emp!Ternro
                ExisteLeg = True
            End If
        End If
    End If
    
    
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Apellido = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Apellido = Replace(Apellido, "'", "`")
    
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Apellido2 = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Apellido2 = Replace(Apellido2, "'", "`")
    
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    nombre = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    nombre = Replace(nombre, "'", "`")
    
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    nombre2 = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    nombre2 = Replace(nombre2, "'", "`")
    
    If (Apellido = "" Or Apellido = "N/A") And (nombre = "" Or nombre = "N/A") Then
        LineaError.writeline Mid(strReg, 1, Len(strReg))
        ErrCarga.writeline "Linea: " & LineaCarga & " - Debe Ingresar un Nombre y Apellido."
        OK = False
        Exit Sub
    End If
    
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Reporta = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Fing = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    
    If (Fing = "N/A") Then
        F_Ingreso = "Null"
    Else
        F_Ingreso = ConvFecha(Fing)
    End If
    
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    FBaja = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    
    If (FBaja = "N/A") Then
        F_Baja = "Null"
        empestado = -1
    Else
        F_Baja = ConvFecha(FBaja)
        empestado = 0
    End If
    
    ter_sexo = -1
    
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    RUT = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    RUT = Mid(RUT, 1, 30)
    
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Email = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Email <> "N/A" And Email <> "") Then
        NTUser = Mid(Email, 1, InStr(1, Email, "@") - 1)
    End If
    'Si nos dan el Password de la persona en la Interface General
    Emppass = "''"
    
    ' Inserto el Tercero, para luego poder insertar las estructuras
    If Not ExisteLeg Then

        StrSql = " INSERT INTO tercero(ternom,terape,ternom2,terape2,tersex)"
        StrSql = StrSql & " VALUES('" & nombre & "','" & Apellido & "','" & nombre2 & "','" & Apellido2 & "'," & ter_sexo & ")"
        objConn.Execute StrSql, , adExecuteNoRecords

        NroTercero = getLastIdentity(objConn, "tercero")
        
        Flog.writeline " Inserte en Tercero en la Base para el Legajo: " & Legajo
    Else
    
        StrSql = "UPDATE tercero SET terape = '" & Apellido & "', "
        StrSql = StrSql & " ternom = '" & nombre & "', "
        StrSql = StrSql & " terape2 = '" & Apellido2 & "', "
        StrSql = StrSql & " ternom2 = '" & nombre2 & "'"
        StrSql = StrSql & " WHERE ternro = " & NroTercero
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Flog.writeline " Modifique el Tercero en la Base para el Legajo: " & Legajo
    End If

    ' Fin de la insercion del Legajo
  
    If Not rs_emp.EOF Then
        
        rs_rep.MoveFirst
    
    End If
  
    Do While Not rs_rep.EOF
        
        pos1 = pos2 + 2
        pos2 = InStr(pos1, strReg, separador) - 1
        If pos2 < 0 Then
            pos2 = Len(strReg)
        End If
        estrdesc = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    
        If UCase(estrdesc) <> "N/A" Then
            StrSql = "SELECT * FROM tipoestructura WHERE UPPER(tedabr) = '" & UCase(rs_rep!confetiq) & "'"
            OpenRecordset StrSql, rs_ten
            If rs_ten.EOF Then
                StrSql = "INSERT INTO tipoestructura(tedabr,tesist,tedepbaja,cenro) VALUES("
                StrSql = StrSql & "'" & UCase(rs_rep!confetiq) & "',0,0,1)"
                objConn.Execute StrSql, , adExecuteNoRecords
                nro_tenro = getLastIdentity(objConn, "tipoestructura")
            Else
                nro_tenro = rs_ten!Tenro
            End If
            Call ValidaEstructura(nro_tenro, estrdesc, nro_estrnro, Inserto_estr)
            
            ' Inserto las Estructuras
            
            Call AsignarEstructura(nro_tenro, nro_estrnro, NroTercero, F_Ingreso, F_Baja)
        Else
            nro_estrnro = 0
        End If
        
        rs_rep.MoveNext
        
    Loop
  
    If Not ExisteLeg Then

        StrSql = " INSERT INTO empleado(empleg, ternro, terape, ternom, terape2,ternom2,empreporta,empnro,emppass,empest,empemail)"
        StrSql = StrSql & " VALUES(" & Legajo & "," & NroTercero & ",'" & Apellido & "','" & nombre
        StrSql = StrSql & "','" & Apellido2 & "','" & nombre2 & "',"
        
        If UCase(Reporta) <> "N/A" Then
           Str = "SELECT ternro FROM empleado WHERE empleado.empleg = " & Reporta
           OpenRecordset Str, rs
           If Not rs.EOF Then
               StrSql = StrSql & rs!Ternro & ",1," & Emppass & "," & empestado & ",'" & Email & "')"
           Else
               StrSql = StrSql & "Null,1," & Emppass & "," & empestado & ",'" & Email & "')"
           End If
        Else
           StrSql = StrSql & "Null,1," & Emppass & "," & empestado & ",'" & Email & "')"
        End If
        objConn.Execute StrSql, , adExecuteNoRecords
                       
        Flog.writeline "Inserte el Empleado - " & Legajo & " - " & Apellido & " - " & nombre
        
    Else
                       
        StrSql = "UPDATE empleado SET  terape = '" & Apellido & "', "
        StrSql = StrSql & "ternom = '" & nombre & "', "
        StrSql = StrSql & "terape2 = '" & Apellido2 & "', "
        StrSql = StrSql & "ternom2 = '" & nombre2 & "', "
        StrSql = StrSql & "empest = " & empestado & ", "
        StrSql = StrSql & "empemail = '" & Email & "'"
        
        If UCase(Reporta) <> "N/A" Then
           Str = "SELECT ternro FROM empleado WHERE empleado.empleg = " & Reporta
           OpenRecordset Str, rs
           If Not rs.EOF Then
               StrSql = StrSql & ", empreporta = " & rs!Ternro
           End If
        End If
        
        StrSql = StrSql & " WHERE ternro = " & NroTercero
        objConn.Execute StrSql, , adExecuteNoRecords

        Flog.writeline " Se Modificaron los Datos del Empleado " & Legajo

    End If
    

    ' Inserto el Registro correspondiente en ter_tip
    
    If Not ExisteLeg Then
    
        StrSql = " INSERT INTO ter_tip(ternro,tipnro) VALUES(" & NroTercero & ",1)"
        objConn.Execute StrSql, , adExecuteNoRecords
        
    End If

    ' Inserto los Documentos
    
    If Not ExisteLeg Then
    
    
        StrSql = "SELECT * FROM tipodocu WHERE UPPER(tidsigla) = 'RUT'"
        OpenRecordset StrSql, rs_tdo
        If Not rs_tdo.EOF Then
            
            NroTdocum = rs_tdo!tidnro
        
        Else
        
            StrSql = "SELECT * FROM institucion WHERE UPPER(instdes) = 'NO INFORMADO'"
            OpenRecordset StrSql, rs_inst
            If rs_inst.EOF Then
            
                StrSql = "INSERT INTO institucion(instdes,instabre) VALUES("
                StrSql = StrSql & "'NO INFORMADO','N/I')"
                objConn.Execute StrSql, , adExecuteNoRecords
                NroInstitucion = getLastIdentity(objConn, "institucion")
                
            Else
            
                NroInstitucion = rs_inst!InstNro
            
            End If
        
            StrSql = "INSERT INTO tipodocu(tidnom,tidsigla,instnro) VALUES("
            StrSql = StrSql & "'RUT','RUT'," & NroInstitucion & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
            NroTdocum = getLastIdentity(objConn, "tipodocu")
        
        End If
    
    
        If RUT <> "" Then
            StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
            StrSql = StrSql & " VALUES(" & NroTercero & "," & NroTdocum & ",'" & RUT & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            Flog.writeline "Inserte el RUT - "
        End If
        
        If (Email <> "N/A" And Email <> "") Then
            StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
            StrSql = StrSql & " VALUES(" & NroTercero & ",32,'" & NTUser & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            Flog.writeline "Inserte el NTUser - "
        End If
        
    Else
        
        If RUT <> "" Then
        
                StrSql = " UPDATE ter_doc SET nrodoc = '" & RUT
                StrSql = StrSql & "' WHERE tidnro = 21 AND ternro = " & NroTercero
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Flog.writeline "Modifique el RUT del Empleado: " & Legajo
                
        '    End If
        
        End If
        
        If (Email <> "N/A" And Email <> "") Then
            StrSql = "SELECT * FROM ter_doc WHERE ternro = " & NroTercero & " AND tidnro =  32"
            OpenRecordset StrSql, rs_Doc
            If rs_Doc.EOF Then
                StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
                StrSql = StrSql & " VALUES(" & NroTercero & ",32,'" & NTUser & "')"
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Flog.writeline "Inserte el NTUser del Empleado: " & Legajo
            Else
                StrSql = " UPDATE ter_doc SET nrodoc = '" & NTUser
                StrSql = StrSql & "' WHERE tidnro = 32 AND ternro = " & NroTercero
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Flog.writeline "Modifique el NTUser del Empleado: " & Legajo
            End If
        End If

    End If

    If rs.State = adStateOpen Then
      rs.Close
    End If
  
  
    If Not ExisteLeg Then
     ' Inserto las Fases
     
         StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
         StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Ingreso & "," & F_Baja & ","
         If nro_causabaja <> 0 Then
                StrSql = StrSql & nro_causabaja & ","
         Else
                StrSql = StrSql & "null" & ","
         End If
         StrSql = StrSql & empestado & ",-1,-1,-1,-1,-1)"
         objConn.Execute StrSql, , adExecuteNoRecords
     
    Else
    
'        StrSql = "SELECT fasnro from fases  WHERE empleado =" & NroTercero
'        StrSql = StrSql & " and ( (altfec <= " & F_Ingreso
'        StrSql = StrSql & " and " & F_Ingreso & " <= bajfec) "
        'Si esta cargada la fecha de baja verifico
'        If Len(F_Baja) > 0 Then
'            StrSql = StrSql & " OR (altfec <= " & F_Baja
'            StrSql = StrSql & " and " & F_Baja & "<= bajfec) "
'            StrSql = StrSql & " OR (" & F_Ingreso
'            StrSql = StrSql & " <= altfec and altfec <= " & F_Baja & ") "
'            OpenRecordset StrSql, rs_fas
        
'        End If
'
'        If rs_fas.EOF Then
'
'            StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
'            StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Ingreso & "," & F_Baja & ","
'            If nro_causabaja <> 0 Then
'                   StrSql = StrSql & nro_causabaja & ","
'            Else
'                   StrSql = StrSql & "null" & ","
'            End If
 '           StrSql = StrSql & empestado & ",-1,-1,-1,-1,-1)"
'            objConn.Execute StrSql, , adExecuteNoRecords
        
'        Else
'
'            LineaError.Writeline Mid(strReg, 1, Len(strReg))
'            ErrCarga.Writeline "Linea: " & LineaCarga & " - Hay Problemas con las Fechas de Ingreso/Egreso del Legajo: " & Legajo
'            Ok = False
'            Exit Sub
'
'        End If

     
    End If
  
  LineaOK.writeline Mid(strReg, 1, Len(strReg))
  OK = True
         
  If rs.State = adStateOpen Then
      rs.Close
  End If

  Exit Sub

SaltoLinea:

    LineaError.writeline Mid(strReg, 1, Len(strReg))
    ErrCarga.writeline "Linea: " & LineaCarga & " - " & Err.Description
    OK = False

End Sub

Public Sub LineaModelo_651(ByVal strReg As String, ByRef OK As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de Estructuras
' Autor      : FGZ
' Fecha      : 21/09/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Legajo          As String   'LEGAJO                        -- empleado.empleg
Dim RUT             As String
Dim Emppass         As String

Dim Ternro As Long

Dim pos1 As Long
Dim pos2 As Long

Dim NroTercero          As Long
Dim NroLegajo           As Long


Dim rs As New ADODB.Recordset
Dim rs_tdo As New ADODB.Recordset


    ' Recupero los Valores del Archivo
    
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strReg, separador)
    RUT = Trim(Mid(strReg, pos1, pos2 - pos1))
    
    pos1 = pos2 + 1
    pos2 = Len(strReg)
    Emppass = Trim(Mid(strReg, pos1, pos2 - pos1))
    
    'Tipo de Documento
    
    StrSql = "SELECT * FROM tipodocu WHERE tidsigla = 'RUT'"
    OpenRecordset StrSql, rs_tdo
    
    ' Busca el Tercero
    StrSql = "SELECT empleado.ternro FROM ter_doc "
    StrSql = StrSql & " INNER JOIN empleado ON empleado.ternro = ter_doc.ternro"
    StrSql = StrSql & " WHERE tidnro = " & rs_tdo!tidnro & " AND nrodoc = '" & RUT & "'"
    OpenRecordset StrSql, rs
    
    If rs.EOF Then Exit Sub
    
    NroTercero = rs!Ternro

    StrSql = "UPDATE empleado SET emppass = '" & Emppass & "' WHERE empleado.ternro = " & NroTercero
    objConn.Execute StrSql, , adExecuteNoRecords
         
    If rs.State = adStateOpen Then
          rs.Close
    End If
  
End Sub


Public Sub LineaModelo_652(ByVal strReg As String, ByRef OK As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de Estructuras
' Autor      : FGZ
' Fecha      : 21/09/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim RUT             As String   'LEGAJO                        -- empleado.empleg
Dim estructura      As String   'Estructura                    -- his_estructura.estrnro
Dim TipoEstructura  As String   'Tipo de Estructura            -- his_estructura.tenro
Dim FAlta           As String   'Fecha Desde en la Estructura  -- his_estructura.htetdesde
Dim FBaja           As String   'Fecha Hasta en la Estructura  -- his_estructura.htethasta

Dim Ternro As Long

Dim pos1 As Long
Dim pos2 As Long

Dim NroTercero          As Long
Dim NroLegajo           As Long
Dim nro_estructura      As Long
Dim F_Alta              As String
Dim F_Baja              As String

Dim Inserto_estr        As Boolean

Dim rs As New ADODB.Recordset
Dim rs_Sql As New ADODB.Recordset
Dim rs_tes As New ADODB.Recordset
Dim rs_tdo As New ADODB.Recordset


Dim nro_tenro As Long

' True indica que se hace por Descripcion. False por Codigo Externo

Dim estrdesc             As Boolean   'Sucursal                 -- his_estructura

    On Error GoTo SaltoLinea

    estrdesc = True ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    Pisa = True

    OK = True
    
    ' Recupero los Valores del Archivo
    
    pos1 = 1
    pos2 = InStr(pos1 + 1, strReg, separador)
    TipoEstructura = Mid(strReg, pos1, pos2 - pos1)
    
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strReg, separador)
    RUT = Mid(strReg, pos1, pos2 - pos1)
    
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strReg, separador)
    estructura = Mid(strReg, pos1, pos2 - pos1)
    
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strReg, separador)
    FAlta = Mid(strReg, pos1, pos2 - pos1)
    
    If FAlta = "N/A" Or FAlta = "" Then
        F_Alta = "Null"
    Else
        F_Alta = ConvFecha(FAlta)
    End If
    
    
    pos1 = pos2 + 1
    pos2 = Len(strReg) + 1
    FBaja = Mid(strReg, pos1, pos2 - pos1)
    
    If FBaja = "N/A" Or FBaja = "" Then
        F_Baja = "Null"
    Else
        F_Baja = ConvFecha(FBaja)
    End If
    
    ' Valida que los campos obligatorios este cargados
    
    If TipoEstructura = "" Or RUT = "" Or estructura = "" Or FAlta = "" Then
        Exit Sub
    End If
    
    StrSql = "SELECT * FROM tipodocu WHERE tidsigla = 'RUT'"
    OpenRecordset StrSql, rs_tdo
    
    ' Busca el Tercero
    StrSql = "SELECT empleado.ternro FROM ter_doc "
    StrSql = StrSql & " INNER JOIN empleado ON empleado.ternro = ter_doc.ternro"
    StrSql = StrSql & " WHERE tidnro = " & rs_tdo!tidnro & " AND nrodoc = '" & RUT & "'"
    OpenRecordset StrSql, rs
    
    If rs.EOF Then
        
        OK = False
        Exit Sub
    
    End If
    
    NroTercero = rs!Ternro

    StrSql = "SELECT tenro FROM tipoestructura WHERE UPPER(tedabr) = '" & UCase(TipoEstructura) & "'"
    OpenRecordset StrSql, rs_tes
    If rs_tes.EOF Then
        StrSql = "INSERT INTO tipoestructura(tedabr,tesist,tedepbaja,cenro) VALUES('" & UCase(TipoEstructura) & "',0,0,1)"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        nro_tenro = getLastIdentity(objConn, "tipoestructura")

        
    Else
        nro_tenro = rs_tes!Tenro
    End If


    ' Validacion y Creacion de la Sucursal (junto con sus Complementos)
    If estructura <> "N/A" Then
        If estrdesc Then
            Call ValidaEstructura(nro_tenro, Mid(estructura, 1, 60), nro_estructura, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(nro_tenro, Mid(estructura, 1, 20), nro_estructura, Inserto_estr)
        End If
    End If
    
  ' Inserto las Estructuras
  Call AsignarEstructura(nro_tenro, nro_estructura, NroTercero, F_Alta, F_Baja)
         
  LineaOK.writeline Mid(strReg, 1, Len(strReg))
  OK = True
         
  If rs.State = adStateOpen Then
      rs.Close
  End If

  Exit Sub

SaltoLinea:

    LineaError.writeline Mid(strReg, 1, Len(strReg))
    ErrCarga.writeline "Linea: " & LineaCarga & " - " & Err.Description
    OK = False
  
End Sub


Public Sub LineaModelo_653(ByVal strReg As String, ByRef OK As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de Reporta A
' Autor      : FGZ
' Fecha      : 21/09/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------

Dim pos1            As Long
Dim pos2            As Long

Dim Legajo          As String   'LEGAJO                   -- empleado.empleg
Dim Apellido        As String   'APELLIDO                 -- empleado.terape y tercero.terape
Dim Apellido2       As String   'APELLIDO2                -- empleado.terape y tercero.terape
Dim nombre          As String   'NOMBRE                   -- empleado.ternom y tercero.ternom
Dim nombre2         As String   'NOMBRE2                   -- empleado.ternom y tercero.ternom
Dim Reporta         As String   'REPORTA A                -- empleado.empreporta

Dim Fing            As String
Dim FBaja           As String
Dim RUT             As String
Dim Email           As String
Dim Emppass         As String

Dim Ternro As Long

Dim NroTercero          As Long
Dim NroLegajo           As Long

Dim Sigue As Boolean
Dim CalculaLegajo As Boolean
Dim ExisteLeg As Boolean
Dim F_Nacimiento        As String
Dim F_Fallecimiento     As String
Dim F_Alta              As String
Dim F_Baja              As String
Dim F_Ingreso           As String

Dim empestado           As Long

Dim nro_causabaja       As Long
Dim nro_empresa         As Long

Dim ter_sexo            As Long
Dim ter_estudio         As Long
Dim ter_estado          As Long


Dim rs As New ADODB.Recordset
Dim rs_tdo As New ADODB.Recordset
Dim rs_rep As New ADODB.Recordset
Dim rs_emp As New ADODB.Recordset



    ' Recupero los Valores del Archivo
    
    Sigue = True
    Pisa = True
    
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Legajo = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    
    If Legajo = "N/A" Or Legajo = "" Then
    
        CalculaLegajo = True
        
    Else
        StrSql = "SELECT * FROM empleado WHERE empleado.empleg = " & Legajo
        OpenRecordset StrSql, rs_emp
        If (Not rs_emp.EOF) Then
            If (Not Sigue) Then
                LineaError.writeline Mid(strReg, 1, Len(strReg))
                ErrCarga.writeline "Linea: " & LineaCarga & " - El Empleado ya Existe."
                OK = False
                Exit Sub
            Else
                NroTercero = rs_emp!Ternro
                ExisteLeg = True
            End If
        End If
    End If
    
    
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Apellido = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Apellido = Replace(Apellido, "'", "`")
    
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Apellido2 = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Apellido2 = Replace(Apellido2, "'", "`")
    
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    nombre = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    nombre = Replace(nombre, "'", "`")
    
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    nombre2 = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    nombre2 = Replace(nombre2, "'", "`")
    
    If (Apellido = "" Or Apellido = "N/A") And (nombre = "" Or nombre = "N/A") Then
        LineaError.writeline Mid(strReg, 1, Len(strReg))
        ErrCarga.writeline "Linea: " & LineaCarga & " - Debe Ingresar un Nombre y Apellido."
        'Ok = False
        'Exit Sub
    End If
    
    pos1 = pos2 + 2
    pos2 = Len(strReg)
    Reporta = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    
    If UCase(Reporta) <> "N/A" Then
       StrSql = "SELECT ternro FROM empleado WHERE empleado.empleg = " & Reporta
       OpenRecordset StrSql, rs_rep
       If Not rs_rep.EOF Then
       
            StrSql = "UPDATE empleado SET empreporta = " & rs_rep!Ternro & " WHERE empleado.ternro = " & NroTercero
            objConn.Execute StrSql, , adExecuteNoRecords
           
       End If
    End If
         
    If rs.State = adStateOpen Then rs.Close
    If rs_rep.State = adStateOpen Then rs_rep.Close
End Sub


Public Sub LineaModelo_653_old(ByVal strReg As String, ByRef OK As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de Estructuras
' Autor      : FGZ
' Fecha      : 21/09/2004
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------

Dim pos1            As Long
Dim pos2            As Long

Dim Legajo          As String   'LEGAJO                   -- empleado.empleg
Dim Apellido        As String   'APELLIDO                 -- empleado.terape y tercero.terape
Dim Apellido2       As String   'APELLIDO2                -- empleado.terape y tercero.terape
Dim nombre          As String   'NOMBRE                   -- empleado.ternom y tercero.ternom
Dim nombre2         As String   'NOMBRE                   -- empleado.ternom y tercero.ternom
Dim Reporta         As String   'REPORTA A                -- empleado.empreporta
Dim Fing            As String   'FECHA DE INGRESO         -- terecro.terfecing
Dim FBaja           As String
Dim RUT             As String   'DOCUMENTO                -- ter_doc.nrodoc
Dim Email           As String   'EMAIL                    -- empleado.empemail
Dim Emppass         As String   'PASSWORD                 -- empleado.emppass

Dim Ternro As Long

Dim NroTercero          As Long
Dim NroLegajo           As Long

Dim Sigue As Boolean
Dim CalculaLegajo As Boolean
Dim ExisteLeg As Boolean
Dim F_Nacimiento        As String
Dim F_Fallecimiento     As String
Dim F_Alta              As String
Dim F_Baja              As String
Dim F_Ingreso           As String

Dim empestado           As Long

Dim nro_causabaja       As Long
Dim nro_empresa         As Long

Dim ter_sexo            As Long
Dim ter_estudio         As Long
Dim ter_estado          As Long


Dim rs As New ADODB.Recordset
Dim rs_tdo As New ADODB.Recordset
Dim rs_rep As New ADODB.Recordset
Dim rs_emp As New ADODB.Recordset



    ' Recupero los Valores del Archivo
    
    Sigue = True
    Pisa = True
    
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Legajo = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    
    If Legajo = "N/A" Or Legajo = "" Then
    
        CalculaLegajo = True
        
    Else
        StrSql = "SELECT * FROM empleado WHERE empleado.empleg = " & Legajo
        OpenRecordset StrSql, rs_emp
        If (Not rs_emp.EOF) Then
            If (Not Sigue) Then
                LineaError.writeline Mid(strReg, 1, Len(strReg))
                ErrCarga.writeline "Linea: " & LineaCarga & " - El Empleado ya Existe."
                OK = False
                Exit Sub
            Else
                NroTercero = rs_emp!Ternro
                ExisteLeg = True
            End If
        End If
    End If
    
    
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Apellido = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Apellido = Replace(Apellido, "'", "`")
    
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Apellido2 = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Apellido2 = Replace(Apellido2, "'", "`")
    
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    nombre = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    nombre = Replace(nombre, "'", "`")
    
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    nombre2 = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    nombre2 = Replace(nombre2, "'", "`")
    
    If (Apellido = "" Or Apellido = "N/A") And (nombre = "" Or nombre = "N/A") Then
        LineaError.writeline Mid(strReg, 1, Len(strReg))
        ErrCarga.writeline "Linea: " & LineaCarga & " - Debe Ingresar un Nombre y Apellido."
        OK = False
        Exit Sub
    End If
    
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Reporta = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Fing = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    
    If (Fing = "N/A") Then
        F_Ingreso = "Null"
    Else
        F_Ingreso = ConvFecha(Fing)
    End If
    
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    FBaja = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    
    If (FBaja = "N/A") Then
        F_Baja = "Null"
        empestado = -1
    Else
        F_Baja = ConvFecha(FBaja)
        empestado = 0
    End If
    
    ter_sexo = -1
    
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    RUT = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    RUT = Mid(RUT, 1, 30)
    
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Email = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    
    'Si nos dan el Password de la persona en la Interface General
    Emppass = "''"
    
    'Tipo de Documento
    
    StrSql = "SELECT * FROM tipodocu WHERE tidsigla = 'RUT'"
    OpenRecordset StrSql, rs_tdo
    
    ' Busca el Tercero
    StrSql = "SELECT empleado.ternro FROM ter_doc "
    StrSql = StrSql & " INNER JOIN empleado ON empleado.ternro = ter_doc.ternro"
    StrSql = StrSql & " WHERE tidnro = " & rs_tdo!tidnro & " AND nrodoc = '" & RUT & "'"
    OpenRecordset StrSql, rs
    
    If rs.EOF Then Exit Sub
    
    NroTercero = rs!Ternro

    If UCase(Reporta) <> "N/A" Then
       StrSql = "SELECT ternro FROM empleado WHERE empleado.empleg = " & Reporta
       OpenRecordset StrSql, rs_rep
       If Not rs_rep.EOF Then
       
            StrSql = "UPDATE empleado SET empreporta = " & rs_rep!Ternro & " WHERE empleado.ternro = " & NroTercero
            objConn.Execute StrSql, , adExecuteNoRecords
           
       End If
       

    End If
         
    If rs.State = adStateOpen Then
          rs.Close
    End If
    
    If rs_rep.State = adStateOpen Then
        rs_rep.Close
    End If
  
End Sub

Public Sub LineaModelo_654(ByVal strReg As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de ganancias anteriores (ficharet)
' Autor      : FGZ
' Fecha      : 17/06/2005
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim pos1            As Long
Dim pos2            As Long

Dim Legajo          As Long ' Legajo del Empleado
Dim Fecha           As String
Dim Monto           As String
Dim NroTercero      As Long
Dim rs              As New ADODB.Recordset
Dim rs_Ficharet     As New ADODB.Recordset

    LineaCarga = LineaCarga + 1
    Tabs = 1
    
    On Error GoTo SaltoLinea
    
    Flog.writeline
    FlogE.writeline
    FlogP.writeline
    
    'Legajo
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Legajo"
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        RegError = RegError + 1
        Exit Sub
    End If
    If IsNumeric(Aux) Then
        Legajo = Aux
    Else
        Texto = ": " & "El legajo no es numerico "
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        InsertaError 1, 8
        HuboError = True
        RegError = RegError + 1
        Exit Sub
    End If
        
    'Fecha
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Fecha Desde"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        RegError = RegError + 1
        Exit Sub
    End If
    Fecha = CDate(Aux)
    
    'Monto
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Monto"
    pos1 = pos2 + 2
    pos2 = Len(strReg)
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        HuboError = True
        RegError = RegError + 1
        Exit Sub
    End If
    Monto = Aux
' ===================================================================================
' ===================================================================================
'Busco el empleado asociado
StrSql = "SELECT ternro FROM empleado WHERE empleg = " & Legajo
OpenRecordset StrSql, rs
If Not rs.EOF Then
    NroTercero = rs!Ternro
Else
    Texto = ": " & " - Campo " & Campoetiqueta & " El legajo no existe"
    NroColumna = 1
    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    HuboError = True
    RegError = RegError + 1
    Exit Sub
End If
NroColumna = 1
Texto = "Legajo = " & Legajo & " Codigo de Tercero = " & NroTercero
Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, strReg)

StrSql = "SELECT * FROM ficharet "
StrSql = StrSql & " WHERE empleado = " & NroTercero
StrSql = StrSql & " AND fecha = " & ConvFecha(Fecha)
OpenRecordset StrSql, rs_Ficharet
If rs_Ficharet.EOF Then
    'Inserto el Desmen
    StrSql = " INSERT INTO ficharet(empleado,fecha,importe,pronro,liqsistema)"
    StrSql = StrSql & " VALUES(" & NroTercero & "," & ConvFecha(Fecha) & "," & Monto & ",0,0)"
    
    objConn.Execute StrSql, , adExecuteNoRecords
    
    Texto = "Legajo = " & Legajo & " Declaracion insertada - " & Fecha & " - " & Monto
    Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, strReg)
Else
    Texto = "Legajo = " & Legajo & " Ya existe una declaracion para esa fecha."
    NroColumna = 1
    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    RegError = RegError + 1
End If
OK = True
  
'Cierro y libero
If rs.State = adStateOpen Then rs.Close
Set rs = Nothing
If rs_Ficharet.State = adStateOpen Then rs_Ficharet.Close
Set rs_Ficharet = Nothing

Exit Sub
SaltoLinea:
    Texto = ": " & Err.Description
    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, strReg)
    MyRollbackTrans
    OK = False
End Sub


Public Sub LineaModelo_655(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migración de Cursos de Capacitación
' Autor      : Gustavo Ring
' Fecha      : 29/05/2007
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------

Dim pos1 As Long
Dim pos2 As Long

' Cursos
Dim curnro As Long
Dim curcodext As String
Dim curdesabr As String
Dim curdesext As String

' tipo Cursos
Dim tipcurnro As Long
Dim tipcurdesabr As String

' Modulos
Dim moddesabr As String
Dim Modnro As Long
Dim tipmodnro As Long
Dim tipmoddesabr As String

Dim Termine As Boolean
Dim longcadena As Integer
Dim Aux As String
Dim Encontro As Boolean

On Error GoTo SaltoLinea
    
    Tabs = 1

    Texto = "Procesando linea " & strLinea
    Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    
    NroColumna = NroColumna + 1
    
    'Código externo del curso
    
    pos1 = 1
    pos2 = InStr(pos1, strLinea, separador)
    
    curcodext = Mid$(strLinea, pos1, pos2 - pos1)
    If Len(curcodext) <= 25 Then
      If Trim(curcodext) = "" Then
        Texto = "El código externo del curso es vacio."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Exit Sub
      Else ' todo ok
        Texto = "Se obtuvo el código externo " & curcodext & " correctamente."
        Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
      End If
    Else
        Texto = "El código externo de curso tiene más de 25 caracteres."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Exit Sub
    End If
    
    NroColumna = NroColumna + 1
    
    
    'Descripción abreviada del curso
    
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    
    curdesabr = Mid$(strLinea, pos1, pos2 - pos1)
    If Len(curdesabr) <= 50 Then
      If Trim(curdesabr) = "" Then
        Texto = "La descripción abreviada del curso es vacio."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Exit Sub
      Else ' todo ok
        Texto = "Se obtuvo la descripción abreviada " & curdesabr & " correctamente."
        Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
      End If
    Else
        Texto = "La descripción abreviada del curso tiene más de 50 caracteres."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Exit Sub
    End If
    
    'Descripción abreviada del tipo de curso
    
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)

    
    tipcurdesabr = Mid$(strLinea, pos1, pos2 - pos1)
    If Len(tipcurdesabr) <= 50 Then
      If Trim(tipcurdesabr) = "" Then
        Texto = "La descripción abreviada del tipo de curso es vacio."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Exit Sub
      Else ' todo ok
        Texto = "Se obtuvo la descripción abreviada " & tipcurdesabr & " correctamente."
        Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
      End If
    Else
        Texto = "La descripción abreviada del tipo de curso tiene más de 50 caracteres."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Exit Sub
    End If
    
  ' Me fijo si existe el tipo de curso, si no exite lo agrego
    
    tipcurnro = TraerCodTipoCurso(tipcurdesabr)
    
  ' Me fijo si existe el curso, si no existe lo agrego
    
    curnro = TraerCodCursoDeloitte(curdesabr, tipcurnro, curcodext)
    
    
  ' Obtengos los módulos relacionados al curso
  
  longcadena = Len(strLinea)
  If (pos2 + 1) >= longcadena Then
        Termine = True
        Texto = "No ingreso ningún módulo."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Exit Sub
  Else
        Termine = False
  End If
  
  While Not Termine
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    
    
    If (pos2 = 0) Then
        ' Se olvido el último separador
        moddesabr = Mid$(strLinea, pos1, longcadena)
    Else
        moddesabr = Mid$(strLinea, pos1, pos2 - pos1)
    End If
        
    If moddesabr <> separador Then
        If Len(moddesabr) <= 50 Then
            If Trim(moddesabr) = "" Then
                Texto = "La descripción abreviada del módulo del curso es vacia."
                Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
                HuboError = True
            Exit Sub
            Else ' todo ok
                Texto = "Se obtuvo la descripción abreviada del módulo " & moddesabr & " correctamente."
                Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
            End If
        Else
            Texto = "La descripción abreviada del módulo del curso tiene más de 50 caracteres."
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
            Exit Sub
        End If
    
        pos1 = pos2 + 1
        pos2 = InStr(pos1 + 1, strLinea, separador)
        
        If (pos2 = 0) Then
            ' Se olvido el último separador
            tipmoddesabr = Mid$(strLinea, pos1, longcadena)
        Else
            tipmoddesabr = Mid$(strLinea, pos1, pos2 - pos1)
        End If
    
        If Len(tipmoddesabr) <= 50 Then
            If Trim(tipmoddesabr) = "" Then
                Texto = "La descripción abreviada del Tipo de módulo es vacia."
                Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
                HuboError = True
            Exit Sub
            Else ' todo ok
                Texto = "Se obtuvo la descripción abreviada del Tipo de módulo " & tipmoddesabr & " correctamente."
                Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
            End If
        Else
            Texto = "La descripción abreviada del Tipo de módulo tiene más de 50 caracteres."
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
            Exit Sub
        End If
'----.-.,.,-.-.-,-.,-.,-.,
        tipmodnro = TraerCodTipoModulo(tipmoddesabr)
        
        Modnro = TraerCodModulo2(moddesabr, tipmodnro)
        
        
        ' Creo la relación entre el curso y el modulo
        StrSql = " SELECT * FROM cap_cursomodulo WHERE modnro = " & Modnro
        StrSql = StrSql & " AND curnro=" & curnro
        OpenRecordset StrSql, rs
        If rs.EOF Then
            StrSql = " INSERT INTO cap_cursomodulo (curnro,modnro) "
            StrSql = StrSql & "  VALUES (" & curnro & "," & Modnro
            StrSql = StrSql & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
        rs.Close
    End If
    If (pos2 + 1) >= longcadena Or (pos2 = 0) Then
         Termine = True
    Else
         Termine = False
    End If
 
 Wend
   
Exit Sub
SaltoLinea:
    Texto = ": " & Err.Description
    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, strLinea)
    MyRollbackTrans
    OK = False
End Sub

Public Sub LineaModelo_656(ByVal strLinea As String)

' ---------------------------------------------------------------------------------------------
' Descripcion: Importación de Eventos de Capacitación.
' Autor      : Gustavo Ring.
' Fecha      : 29/05/2007.
' Ultima Mod.:
' ---------------------------------------------------------------------------------------------

Dim pos1 As Long
Dim pos2 As Long

' Evento

Dim evenro As Integer
Dim evecodext As String
Dim evedesabr As String

' Responsable Formación

Dim centrocap As Integer
Dim centroRazSoc As String

' Cursos

Dim curnro As Integer
Dim curcodext As String

' Modulos

Dim moddesabr As String
Dim Modnro As Integer

' Variables auxiliares

Dim Aux As String
Dim Termine As Boolean
Dim longcadena As Integer

On Error GoTo SaltoLinea
    
    Tabs = 1

    Texto = "Procesando linea " & strLinea
    Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    
    '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    ' Eventos
    '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    
    NroColumna = NroColumna + 1
    
    'Tomo de la linea el Código externo del evento
    
    pos1 = 1
    pos2 = InStr(pos1, strLinea, separador)
    
    evecodext = Mid$(strLinea, pos1, pos2 - pos1)
    If Len(evecodext) <= 25 Then
      If Trim(evecodext) = "" Then
        Texto = "El código externo del evento es vacio. "
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Exit Sub
      Else ' todo ok
        Texto = "Se obtuvo el código externo del evento " & evecodext & " correctamente."
        Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
      End If
    Else
        Texto = "El código externo del evento tiene más de 25 caracteres."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Exit Sub
    End If
    
    'Descripción abreviada del evento
    
    NroColumna = NroColumna + 1
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)

    evedesabr = Mid$(strLinea, pos1, pos2 - pos1)
    If Len(evedesabr) <= 50 Then
      If Trim(evedesabr) = "" Then
        Texto = "La descripción abreviada del evento es vacio."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Exit Sub
      Else ' todo ok
        Texto = "La descripción abreviada del evento " & evedesabr & " se obtuvo correctamente."
        Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
      End If
    Else
        Texto = "La descripción abreviada del evento tiene más de 50 caracteres."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Exit Sub
    End If
     
    
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    ' Centro de Formación
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    
    NroColumna = NroColumna + 1
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)

    centroRazSoc = Mid$(strLinea, pos1, pos2 - pos1)
    If Len(centroRazSoc) <= 60 Then
      If Trim(centroRazSoc) = "" Then
        Texto = "La razón social del centro de formación es vacio."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Exit Sub
      Else ' todo ok
        Texto = "Se obtuvo la razón social del centro de formación " & centroRazSoc & " correctamente."
        Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
      End If
    Else
        Texto = "La razón social del centro de formación tiene más de 60 caracteres."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Exit Sub
    End If
    
    centrocap = TraerCodResponsable(centroRazSoc)
    AsignarTerceroComoCentroCap (centrocap)
    
    NroColumna = NroColumna + 1
    
    '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    ' Cursos y Modulos
    '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    
    'Código externo del curso
    
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)

    curcodext = Mid$(strLinea, pos1, pos2 - pos1)
    If Len(curcodext) <= 25 Then
      If Trim(curcodext) = "" Then
        Texto = "El código externo del curso es vacio."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Exit Sub
      Else ' todo ok
        Texto = "Se obtuvo el código externo " & curcodext & " correctamente."
        Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
      End If
    Else
        Texto = "El código externo de curso tiene más de 25 caracteres."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Exit Sub
    End If
    
    NroColumna = NroColumna + 1
    
    ' Me fijo si existe el curso, si no existe lo agrego
    
    curnro = TraerCodCursoSinCrear(curcodext)
    
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    'Me fijo si estan todos los datos obligatorios
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    If curnro = 0 Then
        Texto = "No se encontro el curso. Y es un campo obligatorio."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Exit Sub
    Else
        evenro = TraerCodEventoCrear(evecodext, evedesabr, curnro, centrocap)
    End If
  
    ' Obtengos los módulos relacionados al curso
   
    longcadena = Len(strLinea)
    If (pos2 + 1) >= longcadena Then
          Termine = True
          Texto = "No ingreso ninguna Descripción de módulo."
          Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
          Exit Sub
    Else
          Termine = False
    End If
    
    While Not Termine
        pos1 = pos2 + 1
        pos2 = InStr(pos1 + 1, strLinea, separador)
        
        If (pos2 = 0) Then
                ' Se olvido el último separador
                moddesabr = Mid$(strLinea, pos1, longcadena)
        Else
                moddesabr = Mid$(strLinea, pos1, pos2 - pos1)
        End If
                
        If Trim(moddesabr) <> separador Then
            ' El campo no tiene que ser vacio
            If Len(moddesabr) <= 50 Then
                If Trim(moddesabr) = "" Then
                    Texto = "La descripción abreviada del módulo del curso es vacia."
                    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                    Call InsertaError(2, 8)
                    HuboError = True
                    Exit Sub
                Else ' todo ok
                    Texto = "Se obtuvo la descripción abreviada del módulo " & moddesabr & " correctamente."
                    Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
                End If
            Else
                Texto = "La descripción abreviada del módulo del curso tiene más de 50 caracteres."
                Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                Exit Sub
            End If
        
            Modnro = TraerCodModulo(moddesabr)
        
            ' Creo la relación entre el curso y el modulo
            StrSql = " SELECT * FROM cap_cursomodulo WHERE modnro = " & Modnro
            StrSql = StrSql & " AND curnro=" & curnro
            OpenRecordset StrSql, rs
            If rs.EOF Then
                StrSql = " INSERT INTO cap_cursomodulo (curnro,modnro) "
                StrSql = StrSql & "  VALUES (" & curnro & "," & Modnro
                StrSql = StrSql & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
            rs.Close
                
            ' Creo la relación entre el evento y el modulo
            StrSql = " SELECT * FROM cap_eventomodulo WHERE modnro = " & Modnro
            StrSql = StrSql & " AND evenro=" & evenro
            OpenRecordset StrSql, rs
            If rs.EOF Then
                StrSql = " INSERT INTO cap_eventomodulo (evenro,modnro) "
                StrSql = StrSql & "  VALUES (" & evenro & "," & Modnro
                StrSql = StrSql & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
            End If
            rs.Close
        
        End If
        If (pos2 + 1) >= longcadena Or (pos2 = 0) Then
            Termine = True
        Else
            Termine = False
        End If
     Wend

Exit Sub

SaltoLinea:
    Texto = ": " & Err.Description
    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, strLinea)
End Sub

Public Sub LineaModelo_657(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Importación de Participantes de Capacitación
' Autor      : Gustavo Ring
' Fecha      : 29/05/2007
' Ultima Mod.: 25/07/2007 - Gustavo Ring - Se relacionan calendarios y participantes
' Descripcion:
' ---------------------------------------------------------------------------------------------


Dim pos1 As Long
Dim pos2 As Long

' Evento

Dim evenro As Integer
Dim evecodext As String
Dim evedesabr As String

' Empleado as string

Dim empleg As String
Dim Ternro As Integer

On Error GoTo SaltoLinea
    
    Tabs = 1

    Texto = "Procesando linea " & strLinea
    Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Eventos
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    
    NroColumna = NroColumna + 1
    
    'Tomo de la linea el Código externo del evento
    
    pos1 = 1
    pos2 = InStr(pos1, strLinea, separador)
    
    evecodext = Mid$(strLinea, pos1, pos2 - pos1)
    If Len(evecodext) <= 25 Then
      If Trim(evecodext) = "" Then
        Texto = "El código externo del evento es vacio. "
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Exit Sub
      Else ' todo ok
        Texto = "Se obtuvo el código externo del evento " & evecodext & " correctamente."
        Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
      End If
    Else
        Texto = "El código externo del evento tiene más de 25 caracteres."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Exit Sub
    End If
    
    'Calculo el ternro del empleg
    
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    
    If (pos2 = 0) Then
                ' Se olvido el último separador
                empleg = Mid$(strLinea, pos1, Len(strLinea))
        Else
                empleg = Mid$(strLinea, pos1, pos2 - pos1)
    End If
    ' cambio por controlnum por esnum para chile que tiene mas de 5 digitos MB 19/08/2008
    If Not (esNum(empleg)) Then
        Texto = "El Legajo debe ser numerico."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Exit Sub
      Else ' todo ok
        Texto = "Se obtuvo el legajo " & empleg & " correctamente."
        Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    End If
    
    evenro = TraerCodEvento2(evecodext)
    
    Ternro = TraerCodTerno(empleg)
    
    If (evenro <> 0) And (Ternro <> 0) Then
         pasaracurso (evenro)
         If actualizar_candidato(Ternro, evenro) Then
                Call actualizar_calendario_participante(Ternro, evenro)
                Texto = "Se realizo ingreso el participante."
                Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
         Else
                Texto = "El empleado ya estaba en el evento."
                Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
         End If
    Else
         If evenro = 0 Then
            Texto = "El Evento no existe."
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
         Else
         Texto = "El Empleado no existe."
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
         End If
    End If
    
Exit Sub

SaltoLinea:
    Texto = ": " & Err.Description
    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, strLinea)

End Sub

Public Sub LineaModelo_658(ByVal strLinea As String)

' ----------------------------------------------------------------------------------------------------------------
' Descripcion: Importación de Calendarios de Capacitación
' Autor      : Gustavo Ring
' Fecha      : 29/05/2007
' Ultima Mod.: 27/07/2007 - Gustavo Ring - Se actualiza la fecha de inicio y fin del evento según los calendarios
' Descripcion:
' Modificacion: Lisdandro Moro - Correccion en la funcion TraerCodCalendario
'                               Correccion en la funcion controlhora
'                               Se agregaron los logs de error al log general.
'                               Se agrego el log de lineas procesadas.
' ----------------------------------------------------------------------------------------------------------------

Dim pos1 As Integer
Dim pos2 As Integer

' Evento

Dim evenro As Integer
Dim evecodext As String
Dim evedesabr As String
Dim evmodnro As Integer

'Modulos

Dim moddesabr As String
Dim Modnro As Integer

' Calendario

Dim calnro As Integer
Dim evmonro As Integer
Dim calfecha As String
Dim caldia As String
Dim calhordes As String
Dim calhorhas As String

'Lugar

Dim lugnro As Integer
Dim lugdesabr As String


'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Eventos
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    
    NroColumna = NroColumna + 1
    
    'Tomo de la linea el Código externo del evento
    
    pos1 = 1
    pos2 = InStr(pos1, strLinea, separador)
    
    evecodext = Mid$(strLinea, pos1, pos2 - pos1)
    If Len(evecodext) <= 25 Then
      If Trim(evecodext) = "" Then
        Texto = "El código externo del evento es vacio. "
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call Escribir_Log("flog", NroLinea, NroColumna, "Error: " & Texto, Tabs, Texto)
        Exit Sub
      Else ' todo ok
        Texto = "Se obtuvo el código externo del evento " & evecodext & " correctamente."
        Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
      End If
    Else
        Texto = "El código externo del evento tiene más de 25 caracteres."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Exit Sub
    End If
    
    evenro = TraerCodEvento2(evecodext)
    
    ' Traigo la descripción del módulo
    
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    moddesabr = Mid$(strLinea, pos1, pos2 - pos1)
    If Len(moddesabr) <= 50 Then
      If Trim(moddesabr) = "" Then
        Texto = "La descripción abreviada del módulo del curso es vacia."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call Escribir_Log("flog", NroLinea, NroColumna, "Error: " & Texto, Tabs, Texto)
        Exit Sub
      Else ' todo ok
        Texto = "Se obtuvo la descripción abreviada del módulo " & moddesabr & " correctamente."
        Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
      End If
    Else
        Texto = "La descripción abreviada del módulo del curso tiene más de 50 caracteres."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call Escribir_Log("flog", NroLinea, NroColumna, "Error: " & Texto, Tabs, Texto)
        Exit Sub
    End If
    
    'Levanto la fecha
    
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    calfecha = Mid$(strLinea, pos1, pos2 - pos1)
    If Not (IsDate(calfecha)) Then
        Texto = "La Fecha tiene un formato no válido."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call Escribir_Log("flog", NroLinea, NroColumna, "Error: " & Texto, Tabs, Texto)
        Exit Sub
    Else ' todo ok
        Texto = "Se obtuvo la fecha del calendario " & calfecha & " correctamente."
        Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    End If
    
    'Levanto la Hora Desde
    
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    calhordes = Mid$(strLinea, pos1, pos2 - pos1)
    If Not (controlHora(calhordes)) Then
        Texto = "La Hora Desde tiene un formato no válido."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call Escribir_Log("flog", NroLinea, NroColumna, "Error: " & Texto, Tabs, Texto)
        Exit Sub
    Else ' todo ok
        Texto = "Se obtuvo la fecha del calendario " & calhordes & " correctamente."
        Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    End If
    
    'Levanto la Hora Hasta
    
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    calhorhas = Mid$(strLinea, pos1, pos2 - pos1)
    If Not (controlHora(calhorhas)) Then
        Texto = "La Hora Hasta tiene un formato no válido."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call Escribir_Log("flog", NroLinea, NroColumna, "Error: " & Texto, Tabs, Texto)
        Exit Sub
    Else ' todo ok
        Texto = "Se obtuvo la fecha del calendario " & calhorhas & " correctamente."
        Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    End If
    
    'Tomo de la linea el lugar del calendario
    
    pos1 = pos2 + 1
    pos2 = InStr(pos1, strLinea, separador)
    
    If (pos2 = 0) Then
        ' Se olvido el último separador
        lugdesabr = Mid$(strLinea, pos1, Len(strLinea))
    Else
        lugdesabr = Mid$(strLinea, pos1, pos2 - pos1)
    End If
         
    If Len(lugdesabr) <= 50 Then
      If Trim(lugdesabr) = "" Then
        Texto = "El código de la descripcion del lugar es vacio. "
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call Escribir_Log("flog", NroLinea, NroColumna, "Error: " & Texto, Tabs, Texto)
        Exit Sub
      Else ' todo ok
        Texto = "Se obtuvo el código de la descripcion del lugar " & lugdesabr & " correctamente."
        Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
      End If
    Else
        Texto = "El código externo del evento tiene más de 25 caracteres."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call Escribir_Log("flog", NroLinea, NroColumna, "Error: " & Texto, Tabs, Texto)
        Exit Sub
    End If
    
    If evenro <> 0 Then
        Modnro = TraerCodModulo0(moddesabr)
        If Modnro <> 0 Then
            evmodnro = TraerCodEventoModulo(evenro, Modnro)
            lugnro = TraerCodLugar(lugdesabr)
            calnro = TraerCodCalendario(evmodnro, calfecha, calhordes, calhorhas, lugnro)
            Call ActualizarFechas(evenro)
            Texto = "Se actualizaron los datos correctamente. "
            Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Else
            Texto = "No existe el modulo, No se puede continuar."
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
            Call Escribir_Log("flog", NroLinea, NroColumna, "Error: " & Texto, Tabs, Texto)
            Exit Sub
        End If
    Else
        Texto = "No existe el evento."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call Escribir_Log("flog", NroLinea, NroColumna, "Error: " & Texto, Tabs, Texto)
        Exit Sub
    End If
    
End Sub

Public Sub LineaModelo_659(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Importación de asistencias de Capacitación
' Autor      : Gustavo Ring
' Fecha      : 29/05/2007
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Eventos
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
 Dim pos1 As Integer
 Dim pos2 As Integer
 Dim evecodext As String
 Dim evenro As Integer
 Dim empleg As String
 Dim emplega As String
 Dim Ternro As Integer
 Dim calfecha As String
 Dim calhordes As String
 Dim calhorhas As String
 Dim asistio As String
 Dim asipre As Integer
 Dim calnro As Integer
 
 
    NroColumna = NroColumna + 1
    
    'Tomo de la linea el Código externo del evento
    
    pos1 = 1
    pos2 = InStr(pos1, strLinea, separador)
    
    evecodext = Mid$(strLinea, pos1, pos2 - pos1)
    If Len(evecodext) <= 25 Then
      If Trim(evecodext) = "" Then
        Texto = "El código externo del evento es vacio. "
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Exit Sub
      Else ' todo ok
        Texto = "Se obtuvo el código externo del evento " & evecodext & " correctamente."
        Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
      End If
    Else
        Texto = "El código externo del evento tiene más de 25 caracteres."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Exit Sub
    End If
    
    evenro = TraerCodEvento2(evecodext)

    'Calculo el ternro del empleg
    
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    
    empleg = Mid$(strLinea, pos1, pos2 - pos1)
    If Not (esNum(empleg)) Then
         Texto = "El Legajo debe ser numerico."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Exit Sub
      Else ' todo ok
        Texto = "Se obtuvo el legajo " & empleg & " correctamente."
        Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    End If
    
    Ternro = TraerCodTerno(empleg)
    
    'Levanto la fecha
    
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    calfecha = Mid$(strLinea, pos1, pos2 - pos1)
    If Not (IsDate(calfecha)) Then
        Texto = "La Fecha tiene un formato no válido."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Exit Sub
    Else ' todo ok
        Texto = "Se obtuvo la fecha del calendario " & calfecha & " correctamente."
        Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    End If
    
    'Levanto la Hora Desde
    
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    calhordes = Mid$(strLinea, pos1, pos2 - pos1)
    If Not (controlHora(calhordes)) Then
        Texto = "La Hora Desde tiene un formato no válido."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Exit Sub
    Else ' todo ok
        Texto = "Se obtuvo la hora desde del calendario " & calhordes & " correctamente."
        Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    End If

    'Si asistio
    
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    
    If (pos2 = 0) Then
                ' Se olvido el último separador
                asistio = Mid$(strLinea, pos1, Len(strLinea))
        Else
                asistio = Mid$(strLinea, pos1, pos2 - pos1)
    End If
             
    If UCase(asistio) = "SI" Then
                asipre = -1
                Texto = "Se levanto asistencia: " & asistio & " correctamente."
                Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Else
        If UCase(asistio) = "NO" Then
                asipre = 0
                Texto = "Se levanto asistencia: " & asistio & " correctamente."
                Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Else
                Texto = "La asistencia debe ser SI o NO."
                Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
                Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
                Exit Sub
        End If
    End If
    
    calnro = TraerCodCalendario2(calfecha, calhordes, evenro)
    Ternro = TraerCodTerno(empleg)
    
    If calnro <> 0 Then
        Call actualizar_cap_asistencia(calnro, Ternro, asipre)
        Texto = "Se actualizo asistencias correctamente."
        Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Else
        Texto = "No tiene asociado un calendario existente."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    End If
    
End Sub
Public Sub LineaModelo_675(ByVal strReg As String, ByRef OK As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de Nick-Names
' Autor      : Sebastian Stremel
' Fecha      : 13/04/2014 - CAS-30411 - Salto Grande -  Creación de Interfase importación de  Nick Names
' ---------------------------------------------------------------------------------------------
Dim Legajo As Long
Dim Ternro As Long
Dim nickName As String
Dim param
Dim rs As New ADODB.Recordset
param = Split(strReg, separador)
If UBound(param) = 1 Then
    Legajo = param(0)
    'verifico el legajo
    If Not EsNulo(Legajo) Then
        StrSql = "SELECT * FROM empleado "
        StrSql = StrSql & " WHERE empleg=" & Legajo
        OpenRecordset StrSql, rs
        If rs.EOF Then
            FlogE.writeline "El legajo " & Legajo & " no existe, se sigue con la siguiente linea"
            InsertaError 1, 8
            RegError = RegError + 1
            Exit Sub
        End If
        rs.Close
    Else
        FlogE.writeline "El legajo es nulo o vacio, se sigue con la siguiente linea"
        InsertaError 1, 8
        RegError = RegError + 1
        Exit Sub
    End If
    
    nickName = param(1)
    nickName = Replace(nickName, "@", ",")
    
    If Len(nickName) > 50 Then
        nickName = Left(nickName, 50)
        Flog.writeline "Se muestran los primeros 50 caracteres del campo nickname ya que excede el maximo."
    End If
    
    'INSERTO LOS DATOS
    StrSql = "UPDATE empleado SET empnic='" & nickName & "'"
    StrSql = StrSql & " WHERE empleg=" & Legajo
    objConn.Execute StrSql, , adExecuteNoRecords
    'HASTA ACA
    Flog.writeline "La linea " & strReg & " se proceso correctamente"
    Call Escribir_Log("flogp", NroLinea, NroColumna, Texto, Tabs, strReg)
Else
    FlogE.writeline "La linea " & strReg & " es incorrecta, se sigue con la siguiente linea"
    InsertaError 1, 2
    RegError = RegError + 1
    Exit Sub
End If


End Sub

Public Sub LineaModelo_676(ByVal strReg As String, ByRef OK As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de Familiares con Obras sociales - Customizada - Salto Grande
' Autor      : Sebastian Stremel
' Fecha      : 18/05/2015
' Ultima Mod.:
' Descripcion:
' Ejemplo    : 550,González,Juan@Manuel,35699268,OSDE,Osde 310,Si,Si,Osde
' ---------------------------------------------------------------------------------------------

Dim StrSql  As String
Dim rs As New ADODB.Recordset
Dim rs_repl As New ADODB.Recordset

Dim legajoEmp As String
Dim ternroEmp As Long
Dim famTernro As Long
Dim apellidos
Dim famApe As String
Dim famApe2 As String
Dim nombres
Dim famNom As String
Dim famNom2 As String
Dim famNroDoc As String
Dim famOSocial As String
Dim famPlanOsocial As String
Dim famPagaSalarioFam As String
Dim famACargoCTM As String
Dim famEmergMedica As String

Dim datos
Dim Inserto_estr As Boolean
Dim CodExt As Long

Dim oSocialEleg_EstrNro As Long
Dim oSocialEleg_ternro As Long

Dim planOsocialEleg_ternro As Long
Dim planOsocialEleg_EstrNro As Long

Dim famEmergMedicaEstrnro As Long

On Error GoTo Fin
Flog.writeline "Procesando linea: " & strReg
datos = Split(strReg, separador)
legajoEmp = datos(0)
'--------------------------Legajo del empleado--------------------------------
If UCase(legajoEmp) <> "N/A" Then
    If EsNulo(legajoEmp) Then
        FlogE.writeline "El legajo del empleado no puede ser N/A o vacio. Se continua con la siguiente linea.Linea Abortada: " & strReg
        Exit Sub
    Else
        Flog.writeline "legajo del empleado: " & legajoEmp
    End If
End If
'-----------------------------------------------------------------------------

'-------------------------Apellidos del familiar-------------------------------
famApe = datos(1)
If UCase(famApe) = "N/A" Then
    FlogE.writeline "El nombre del familiar es obligatorio. Linea Abortada: " & strReg
    Exit Sub
End If
'busco si hay un @ para separar 1er nombre del segundo
If InStr(famApe, "@") Then
    apellidos = Split(famApe, "@")
    famApe = apellidos(0)
    famApe2 = apellidos(1)
End If
'-----------------------------------------------------------------------------

'-------------------------Nombres del familiar-------------------------------
famNom = datos(2)
If UCase(famNom) = "N/A" Then
    FlogE.writeline "El nombre del familiar es obligatorio. Linea Abortada: " & strReg
    Exit Sub
End If
'busco si hay un @ para separar 1er nombre del segundo
If InStr(famNom, "@") Then
    nombres = Split(famNom, "@")
    famNom = nombres(0)
    famNom2 = nombres(1)
End If
'-----------------------------------------------------------------------------

'---------------------------Nro de doc familiar-------------------------------
famNroDoc = datos(3)
If UCase(famNroDoc) = "N/A" Then
    FlogE.writeline "El nro de documento es obligatorio. Linea Abortada: " & strReg
    Exit Sub
End If
'-----------------------------------------------------------------------------

'---------------------------------OBRA SOCIAL --------------------------------
famOSocial = datos(4)
'-----------------------------------------------------------------------------

'---------------------------------PLAN OBRA SOCIAL ---------------------------
famPlanOsocial = datos(5)
'-----------------------------------------------------------------------------

'---------------------------------PAGA SALARIO FAM----------------------------
If UCase(datos(6)) = "SI" Then
    famPagaSalarioFam = -1
Else
    famPagaSalarioFam = 0
End If
'-----------------------------------------------------------------------------

'---------------------------------A CARGO CTM---------------------------------
If UCase(datos(7)) = "SI" Then
    famACargoCTM = -1
Else
    famACargoCTM = 0
End If
'-----------------------------------------------------------------------------

'---------------------------------EMERGENCIA MED------------------------------
If UCase(datos(8)) = "N/A" Then
    famEmergMedica = ""
Else
    famEmergMedica = datos(8)
End If
'-----------------------------------------------------------------------------

'VERIFICO SI EXISTE EL EMPLEADO
StrSql = "SELECT empleg, ternro FROM empleado "
StrSql = StrSql & " WHERE empleg=" & legajoEmp
OpenRecordset StrSql, rs
If Not rs.EOF Then
    'busco los familiares
    StrSql = "SELECT * FROM familiar "
    StrSql = StrSql & " INNER JOIN ter_doc ON ter_doc.ternro = familiar.ternro"
    StrSql = StrSql & " WHERE empleado=" & rs!Ternro & " AND ter_doc.nrodoc='" & famNroDoc & "'"
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        famTernro = rs!Ternro
        ternroEmp = rs!Empleado
        '----------------VALIDACIONES OBRA SOCIAL ELEGIDA-------------------------------
        Call ValidaEstructura(17, famOSocial, oSocialEleg_EstrNro, Inserto_estr)
        If Inserto_estr Then
            Call CreaTercero(4, famOSocial, oSocialEleg_ternro)
            Call CreaComplemento(17, oSocialEleg_ternro, oSocialEleg_EstrNro, famOSocial)
        Else
            StrSql = " SELECT origen FROM replica_estr WHERE estrnro = " & oSocialEleg_EstrNro
            OpenRecordset StrSql, rs_repl
            If Not rs_repl.EOF Then
                oSocialEleg_ternro = rs_repl!Origen
                rs_repl.Close
            End If
        End If
        '------------------------------------------------------------------------------
        
        '----------------VALIDACIONES PLAN OBRA SOCIAL ELEGIDA-------------------------
        If (famPlanOsocial <> "N/A" And famOSocial <> "") Then
            Call ValidaEstructura(23, famPlanOsocial, planOsocialEleg_EstrNro, Inserto_estr)
            If Inserto_estr Then
                Call CreaComplemento(23, oSocialEleg_ternro, planOsocialEleg_EstrNro, famPlanOsocial)
                planOsocialEleg_ternro = getLastIdentity(objConn, "planos")
                'Inserto_estr = False
                
            Else
                StrSql = " SELECT origen FROM replica_estr WHERE estrnro = " & planOsocialEleg_EstrNro
                OpenRecordset StrSql, rs_repl
                If Not rs_repl.EOF Then
                    planOsocialEleg_ternro = rs_repl!Origen
                    rs_repl.Close
                End If
            End If
        Else
            planOsocialEleg_ternro = 0
        End If
        '------------------------------------------------------------------------------
        
        '----------------VALIDACIONES PLAN OBRA SOCIAL ELEGIDA-------------------------
        If (famEmergMedica <> "N/A" And famEmergMedica <> "") Then
            Call ValidaEstructura(101, famEmergMedica, famEmergMedicaEstrnro, Inserto_estr)
        Else
            famEmergMedicaEstrnro = 0
        End If
        '------------------------------------------------------------------------------
        
        
        'Actualizo los datos del familiar
        StrSql = "UPDATE familiar "
        StrSql = StrSql & " SET osocial=" & oSocialEleg_ternro & ","
        StrSql = StrSql & " plnro=" & planOsocialEleg_ternro & ","
        StrSql = StrSql & " famsalario=" & famPagaSalarioFam & ","
        StrSql = StrSql & " famguarderia=" & famACargoCTM & ","
        StrSql = StrSql & " famemermed=" & famEmergMedicaEstrnro
        StrSql = StrSql & " WHERE ternro=" & famTernro
        StrSql = StrSql & " AND empleado=" & ternroEmp
        objConn.Execute StrSql, , adExecuteNoRecords
        FlogP.writeline "Se proceso la linea: " & strReg
        'hasta aca
    Else
        FlogE.writeline "El familiar no existe. Linea Abortada: " & strReg
    End If
Else
    Flog.writeline "El empleado no existe. Linea Abortada: " & strReg
    Exit Sub
End If
'HASTA ACA
Exit Sub
Fin:
    Flog.writeline "Se produjo un error al procesar la linea:" & strReg
    FlogE.writeline "Se produjo un error al procesar la linea:" & strReg
    
End Sub
Public Sub LineaModelo_677(ByVal strReg As String, ByRef OK As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de Asignaciones Familiares de los empleados - Salto Grande
' Autor      : Sebastian Stremel
' Fecha      : 20/05/2015
' Ultima Mod.:
' Descripcion:
' Ejemplo    : legajo - LEGAJO-  PAGO DE FAMILIAR( 1 ó 0)
               '71;1
' ---------------------------------------------------------------------------------------------

Dim StrSql  As String
Dim rs As New ADODB.Recordset
Dim rs_repl As New ADODB.Recordset

Dim empleg As Long
Dim empTernro As Long
Dim empAsigFam As Integer

Dim datos
On Error GoTo Fin

Flog.writeline "Procesando la linea:" & strReg
datos = Split(strReg, separador)
If UBound(datos) <> 1 Then
    Flog.writeline "La cantidad de datos informada en la linea es incorrecta. se aborta la linea"
    FlogE.writeline "La cantidad de datos informada en la linea es incorrecta. se aborta la linea"
    Exit Sub
Else
    If Not EsNulo(datos(0)) And IsNumeric(datos(0)) Then
        empleg = datos(0)
        Flog.writeline "Legajo del empleado:" & empleg
    Else
        Flog.writeline "El legajo del empleado esta mal informado. Legajo:" & datos(0)
        FlogE.writeline "El legajo del empleado esta mal informado. Legajo:" & datos(1)
        Exit Sub
    End If
    
    '--------------------VERIFICO SI EXISTE EL EMPLEADO--------------------------
    StrSql = "SELECT ternro, empleg FROM empleado "
    StrSql = StrSql & " WHERE empleg=" & empleg
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        empTernro = rs!Ternro
    Else
        Flog.writeline "El empleado no existe. Se aborta la linea."
        FlogE.writeline "El empleado no existe. Se aborta la linea."
        Exit Sub
    End If
    rs.Close
    '--------------------------------------------------------------------------
    
    '----------------------VALIDO EL CAMPO ASIG FAMILIAR-----------------------
    If Not EsNulo(datos(1)) And IsNumeric(datos(1)) Then
        empAsigFam = datos(1)
        Flog.writeline "Asignacion Familiar:" & datos(1)
    Else
        Flog.writeline "El dato de la asignacion familiar esta mal informado. Dato:" & datos(1)
        FlogE.writeline "El dato de la asignacion familiar esta mal informado. Dato:" & datos(1)
        Exit Sub
    End If
    '--------------------------------------------------------------------------
    
    '----------------------ACTUALIZO LOS DATOS DEL EMPLEADO--------------------
    StrSql = "UPDATE empleado "
    StrSql = StrSql & " SET asigfam=" & empAsigFam
    StrSql = StrSql & " WHERE ternro=" & empTernro & " AND empleg=" & empleg
    objConn.Execute StrSql, , adExecuteNoRecords
    FlogP.writeline "Se proceso la linea: " & strReg
    '--------------------------------------------------------------------------
End If

Exit Sub

Fin:
    Flog.writeline "Se produjo un error al procesar la linea:" & strReg
    FlogE.writeline "Se produjo un error al procesar la linea:" & strReg
    

End Sub
Public Sub LineaModelo_909(ByVal strReg As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de Familiares Customizada - Uruguay
' Autor      : Diego Rosso
' Fecha      : 21-06-2007
' Ultima Mod.: 04/10/2010 - Lisandro Moro - Se agrego el campo Fecha_IRPF (fecha desde ganancias)
'              31/07/2012 - Carmen Quintero - Agregué apellido@apellido2;nombre@nombre2
'                                           - Se modificó la manera de obtener el valor del campo Fecha_IRPF.
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Legajo          As Long    ' Legajo del Empleado
Dim Apellido        As String  ' Apellido del Familiar
Dim Apellido2       As String  ' Segundo Apellido del Familiar
Dim nombre          As String  ' Nombre del Familiar
Dim nombre2         As String  ' Segundo Nombre del Familiar
Dim Fnac            As String  ' Fecha de Nacimiento del Familiar
Dim NAC             As String  ' Nacionalidad del Familiar
Dim PaisNac         As String  ' Pais de Nacimiento
Dim EstCiv          As String  ' Estado Civil
Dim Sexo            As String  ' Sexo del Familiar
Dim GPare           As String  ' Grado de Parentesco
Dim Disc            As String  ' Discapacitado
Dim Estudia         As String  ' Estudia
Dim NivEst          As String  ' Nivel de Estudio
Dim TipDoc          As String  ' Tipo de Documento del Familiar
Dim NroDoc          As String  ' Nº de Documento del Familiar
Dim Calle           As String   'Calle                    -- detdom.calle
Dim Nro             As String   'Número                   -- detdom.nro
Dim Piso            As String   'Piso                     -- detdom.piso
Dim Depto           As String   'Depto                    -- detdom.depto
Dim Torre           As String   'Torre                    -- detdom.torre
Dim Manzana         As String   'Manzana                  -- detdom.manzana
Dim Cpostal         As String   'Cpostal                  -- detdom.codigopostal
Dim Entre           As String   'Entre Calles             -- detdom.entrecalles
Dim Barrio          As String   'Barrio                   -- detdom.barrio
Dim Localidad       As String   'Localidad                -- detdom.locnro
Dim Partido         As String   'Partido                  -- detdom.partnro
Dim Zona            As String   'Zona                     -- detdom.zonanro
Dim Provincia       As String   'Provincia                -- detdom.provnro
Dim Pais            As String   'Pais                     -- detdom.paisnro
Dim Telefono        As String   'Telefono                 -- telefono.telnro
Dim ObraSocial      As String   'Obra Social
Dim PlanOSocial     As String   'Plan Obra Social
Dim AvisoEmer       As String   'Aviso ante Emergencia
Dim PagaSalario     As String   'Paga Salario Familiar
Dim Ganancias       As String   'Se lo toma para ganancias
Dim Fecha_IRPF      As String   'Fecha desde para las deducciones irpf ganancias.


Dim pos1            As Long
Dim pos2            As Long

Dim NroTercero      As Long
Dim NroEmpleado     As Long
Dim Nro_Nrodom      As String
Dim NroDom          As Long
Dim Nro_TDocumento  As Long
Dim nro_nacionalidad As Long
Dim nro_paisnac      As Long
Dim nro_estciv      As Long
Dim nro_Sexo        As Long
Dim nro_estudia     As Long
Dim nro_nivest      As String
Dim nro_osocial     As Long
Dim nro_planos      As Long
Dim nro_aviso       As Long
Dim nro_salario     As Long
Dim nro_gan         As Long
Dim nro_disc        As Long
Dim nro_paren        As Long
Dim Nro_Barrio          As Long
Dim Nro_Localidad       As Long
Dim Nro_Partido         As Long
Dim Nro_Zona            As Long
Dim Nro_Provincia       As Long
Dim Nro_Pais            As Long
Dim OSocial             As String
Dim ter_osocial         As Long
Dim Inserto_estr        As Boolean
Dim IngresoDom          As Boolean
Dim Nro_Institucion As Long

Dim ape()             As String   'Agregado ver 4.31
Dim Nom()             As String   'Agregado ver 4.31

Dim rs_Sql          As New ADODB.Recordset
Dim rs              As New ADODB.Recordset
Dim rs_Tel          As New ADODB.Recordset


    LineaCarga = LineaCarga + 1
    Tabs = 1
    
    On Error GoTo SaltoLinea
    
    Flog.writeline
    FlogE.writeline
    FlogP.writeline
    
    'Legajo
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Legajo"
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Texto = "Levantando el Legajo."
    Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If IsNumeric(Aux) Then
        Legajo = Aux
        Texto = "Legajo Obtenido."
          Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    Else
        Texto = ": " & "El legajo no es numerico "
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        InsertaError 1, 8
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Apellido
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Apellido"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    'Modificado ver 4.31
    ape = Split(Aux, "@")
    'Fin
    Texto = "Levantando el Apellido."
    Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    'If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then 'Linea de la ver 4.30
    If (ape(0) = "N/A" Or EsNulo(ape(0))) And Obligatorio Then 'Modificado ver 4.31
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    'Apellido = Left(aux, 25) 'Linea de la ver 4.30
    Apellido = Left(ape(0), 25) 'Modificado ver 4.31
    '----------------Agregado ver 4.31---------------------------
    If Not (ape(1) = "N/A" Or EsNulo(ape(1)) Or ape(1) = "") Then
        Apellido2 = Left(ape(1), 25)
    Else
        Apellido2 = ""
    End If
    '---------------------------------------------------------
    Texto = "Apellido Obtenido."
    Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
        
    'Nombre
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Nombre"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    'Modificado ver 4.31
    Nom = Split(Aux, "@")
    'fin
    Texto = "Levantando el Nombre."
    Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    'If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then ' Linea de la ver 4.30
    If (Nom(0) = "N/A" Or EsNulo(Nom(0))) And Obligatorio Then 'Modificado ver 4.31
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    'nombre = Left(aux, 25) 'Linea de la ver 4.30
    nombre = Left(Nom(0), 25) 'Modificado ver 4.31
    If (Apellido = "" Or Apellido = "N/A") And (nombre = "" Or nombre = "N/A") Then
        Texto = ": " & " - Debe Ingresar un Nombre y Apellido."
        NroColumna = 2
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    '----------------Agregado ver 4.31---------------------------
    If Not (Nom(1) = "N/A" Or EsNulo(Nom(1)) Or Nom(1) = "") Then
        nombre2 = Left(Nom(1), 25)
    Else
        nombre2 = ""
    End If
    '---------------------------------------------------------
    
    Texto = "Nombre Obtenido."
    Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    
    'Fecha de Nacimiento
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Fecha de Nacimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Texto = "Levantando la Fecha de nacimiento."
      Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Fnac = Aux
    If Fnac = "N/A" Or EsNulo(Fnac) Then
       Fnac = "Null"
       Texto = "No se encontro la Fecha de Nacimiento."
         Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    Else
       Fnac = ConvFecha(Fnac)
       Texto = "Fecha de Nacimiento Obtenida."
         Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    End If
    
    'Pais de Nacimiento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Pais de Nacimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Texto = "Levantando el Pais de Nacimiento."
      Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)

    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    PaisNac = Aux
    If PaisNac <> "N/A" Then
        StrSql = " SELECT paisnro FROM pais WHERE UPPER(paisdesc) = '" & UCase(PaisNac) & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            nro_paisnac = rs!Paisnro
        Else
            StrSql = " INSERT INTO pais(paisdesc,paisdef) VALUES ('" & UCase(PaisNac) & "',0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_paisnac = getLastIdentity(objConn, "pais")
        End If
        Texto = "Pais de Nacimiento Obtenido."
          Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    Else
        nro_paisnac = 0
        Texto = "No se encontro el Pais de Nacimiento ."
          Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    End If
    
    'Nacionalidad
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Nacionalidad"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Texto = "Levantando la Nacionalidad."
      Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    NAC = UCase(Aux)
    If NAC <> "N/A" And Not EsNulo(NAC) Then
        StrSql = " SELECT nacionalnro FROM nacionalidad WHERE upper(nacionaldes) = '" & NAC & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            nro_nacionalidad = rs!nacionalnro
        Else
            StrSql = " INSERT INTO nacionalidad(nacionaldes) VALUES ('" & UCase(NAC) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_nacionalidad = getLastIdentity(objConn, "nacionalidad")
        End If
        Texto = "Nacionalidad Obtenida ."
          Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    Else
        nro_nacionalidad = 0
    End If
    If nro_nacionalidad = 0 Then
        Texto = ": " & " - Debe ingresar Nacionalidad."
        NroColumna = 5
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Estado Civil
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Estado Civil"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Texto = "Levantando Estado Civil."
      Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    EstCiv = Left(UCase(Aux), 30)
    If EstCiv <> "N/A" And Not EsNulo(EstCiv) Then
        StrSql = " SELECT estcivnro FROM estcivil WHERE upper(estcivdesabr) = '" & UCase(EstCiv) & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            nro_estciv = rs!estcivnro
        Else
            StrSql = " INSERT INTO estcivil(estcivdesabr) VALUES ('" & UCase(EstCiv) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_estciv = getLastIdentity(objConn, "estcivil")
        End If
        Texto = "Estado Civil obtenido."
          Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    Else
        nro_estciv = 0
    End If
    If nro_estciv = 0 Then
        Texto = ": " & " - Debe ingresar Estado Civil."
        NroColumna = 6
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Sexo
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Sexo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Texto = "Levantando el campo Sexo."
      Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Sexo = UCase(Aux)
    If Sexo = "M" Or Sexo = "MASCULINO" Or Sexo = "-1" Then
        nro_Sexo = -1
    Else
        nro_Sexo = 0
    End If
    Texto = "Campo Sexo obtenido."
      Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    
    'Parentesco
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Parentesco"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Texto = "Levantando Parentesco."
      Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    GPare = UCase(Aux)
    StrSql = " SELECT parenro FROM parentesco WHERE upper(paredesc) = '" & UCase(GPare) & "'"
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        nro_paren = rs!parenro
    Else
        nro_paren = 0
    End If
    If nro_paren = 0 Then
        Texto = ": " & " - El parentesco ingresado no existe, verifíquelo." & GPare
        NroColumna = 8
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Texto = "Parentesco obtenido."
      Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    
    'Discapacitado
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Discapacitado"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Texto = "Levantando campo Discapacitado."
      Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Disc = UCase(Aux)
    If Disc = "N/A" Or Disc = "NO" Then
        nro_disc = 0
    Else
        nro_disc = -1
    End If
    Texto = "Campo Discapacitado Obtenido"
      Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    
    
    'Estudia
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estudia"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = UCase(Trim(Mid(strReg, pos1, pos2 - pos1 + 1)))
    Texto = "Levantando campo Estudia."
      Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Estudia = Aux
    If Estudia = "N/A" Or Estudia = "NO" Then
        nro_estudia = 0
    Else
        nro_estudia = -1
    End If
    Texto = "Campo Estudia Obtenido."
      Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    
    'Nivel de estudio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nivel de estudio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = UCase(Trim(Mid(strReg, pos1, pos2 - pos1 + 1)))
    Texto = "Levantando Nivel de estudio."
      Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    NivEst = Aux
    If NivEst = "N/A" Or EsNulo(NivEst) Then
        nro_nivest = 0
    Else
        'busco el primer nivel de estudio, si no existe la creo
        StrSql = " SELECT * FROM nivest WHERE nivdesc = '" & NivEst & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            nro_nivest = rs!nivnro
        Else
            'creo una
            StrSql = " INSERT INTO nivest (nivdesc) VALUES ('" & NivEst & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_nivest = getLastIdentity(objConn, "nivest")
        End If
     End If
    Texto = "Nivel de estudio obtenido."
      Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
   
    'Tipo de Doc
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Tipo de Doc"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Texto = "Levantando campo Tipo de documento."
      Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    TipDoc = Aux
    If TipDoc <> "N/A" And Not EsNulo(TipDoc) Then
        StrSql = " SELECT tidnro FROM tipodocu WHERE UPPER(tidsigla) = '" & UCase(TipDoc) & "'"
        If rs_Sql.State = adStateOpen Then rs_Sql.Close
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            Nro_TDocumento = rs_Sql!tidnro
        Else
            'busco la primera institucion, si no existe la creo
            StrSql = " SELECT * FROM institucion "
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                Nro_Institucion = rs!InstNro
            Else
                'creo una
                StrSql = " INSERT INTO institucion (instdes,instabre) VALUES ('NACIONAL','NAC')"
                objConn.Execute StrSql, , adExecuteNoRecords
                Nro_Institucion = getLastIdentity(objConn, "institucion")
            End If
            'creo el tipo de documento
            StrSql = " INSERT INTO tipodocu(tidnom,tidsigla,tidsist,instnro,tidunico) VALUES ('" & UCase(TipDoc) & "','" & UCase(TipDoc) & "',0," & Nro_Institucion & ",0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            Nro_TDocumento = getLastIdentity(objConn, "tipodocu")
        End If
    Else
        Nro_TDocumento = 0
    End If
    Texto = "Tipo de documento obtenido."
      Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    
    'Nro de Doc
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Nro de Doc"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Texto = "Levantando campo el Numero de documento."
      Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    NroDoc = Aux
    If NroDoc = "N/A" Or EsNulo(NroDoc) Then
        NroDoc = "0"
    End If
    Texto = "Numero de documento Obtenido."
      Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    
    'Calle
    Texto = "Levantando la direccion."
      Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Calle"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Calle = Left(Aux, 250)
    IngresoDom = True
    If Calle = "N/A" Or EsNulo(Calle) Then
        Calle = ""
        IngresoDom = False
    End If
    
    'Nro
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nro"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Nro = Left(Aux, 8)
    If (Nro <> "N/A") And Not EsNulo(Nro) Then
        Nro_Nrodom = Nro
    Else
        Nro_Nrodom = "S/N"
    End If
    
    'Piso
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Piso"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Piso = Left(Aux, 8)
    If Piso = "N/A" Then
        Piso = ""
    End If
    
    'Depto
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Depto"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Depto = Left(Aux, 8)
    If Depto = "N/A" Then
        Depto = ""
    End If

    'Torre
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Torre"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Torre = Left(Aux, 8)
    If Torre = "N/A" Then
        Torre = ""
    End If
    
    'Manzana
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Manzana"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Manzana = Left(Aux, 8)
    If Manzana = "N/A" Then
        Manzana = ""
    End If

    'Codigo postal
    NroColumna = NroColumna + 1
    Obligatorio = IngresoDom
    Campoetiqueta = "Codigo postal"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Cpostal = Left(Aux, 12)
    If Cpostal = "N/A" Then
        Cpostal = ""
    End If

    'Entre calles
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Entre calles"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Entre = Left(Aux, 80)
    If Entre = "N/A" Then
        Entre = ""
    End If

    'Barrio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Barrio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Barrio = Left(Aux, 30)
    If Barrio = "N/A" Then
        Barrio = ""
    End If

    'Localidad
    NroColumna = NroColumna + 1
    Obligatorio = IngresoDom
    Campoetiqueta = "Localidad"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    '19/03/2010 - Se cambio la longitud a 60
    'Localidad = aux
    Localidad = Left(Aux, 60)
    
    'Partido
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Partido"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Partido = Aux
    
    'Zona
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Zona"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    '19/03/2010 - Se cambio la longitud a 60
    'Zona = aux
    Zona = Left(Aux, 60)
    
    
    
    'Provincia
    NroColumna = NroColumna + 1
    Obligatorio = IngresoDom
    Campoetiqueta = "Provincia"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Provincia = Aux
    
    'Pais
    NroColumna = NroColumna + 1
    Obligatorio = IngresoDom
    Campoetiqueta = "Pais"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Pais = Aux
    If Pais <> "N/A" Then
        Call ValidarPais(Pais, Nro_Pais)
    Else
        Nro_Pais = 0
    End If
    If (Provincia <> "N/A") And (Pais <> "N/A") Then
        Call ValidarProvincia(Provincia, Nro_Provincia, Nro_Pais)
    Else
        Nro_Provincia = 0
    End If
    If (Localidad <> "N/A") And (Provincia <> "N/A") And (Pais <> "N/A") Then
        Call ValidarLocalidad(Localidad, Nro_Localidad, Nro_Pais, Nro_Provincia)
    Else
        Nro_Localidad = 0
    End If
    If Partido <> "N/A" Then
        Call ValidarPartido(Partido, Nro_Partido)
    Else
        Nro_Partido = 0
    End If
    If Zona <> "N/A" Then
        Call ValidarZona(Zona, Nro_Zona, Nro_Provincia)
    Else
        Nro_Zona = 0
    End If
    
    If (IngresoDom = True) And (Nro_Localidad = 0) Then
        Texto = ": " & " - Debe Ingresar la Localidad."
        NroColumna = 23
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    
    If (IngresoDom = True) And (Nro_Provincia = 0) Then
        Texto = ": " & " - Debe Ingresar la Provincia."
        NroColumna = 26
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    
    If (IngresoDom = True) And (Nro_Pais = 0) Then
        Texto = ": " & " - Debe Ingresar la Pais."
        NroColumna = 27
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Texto = "Direccion Obtenida."
      Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    
    'Telefono
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Legajo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Texto = "Levantando Telefono."
      Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Telefono = Aux
    If Telefono = "N/A" Then
        Telefono = ""
    End If
    Texto = "Telefono Obtenido."
      Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    
    'Obra Social
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sistema de Salud"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Texto = "Levantando Sistema de Salud."
      Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    ObraSocial = Aux
    If ObraSocial = "N/A" Or ObraSocial = "" Then
        nro_osocial = 0
    Else
        StrSql = " SELECT ternro FROM osocial WHERE UPPER(osdesc) = '" & UCase(ObraSocial) & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            nro_osocial = rs!Ternro
        Else
            nro_osocial = 0
        End If
    End If
    Texto = "Sistema de Salud Obtenido."
      Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    
    'Plan de OS
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Plan de Salud"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Texto = "Levantando Plan de Salud."
      Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    PlanOSocial = Aux
    If PlanOSocial = "N/A" Or PlanOSocial = "" Then
        nro_planos = 0
    Else
        If nro_osocial <> 0 Then
            StrSql = " SELECT plnro FROM planos WHERE UPPER(plnom) = '" & UCase(PlanOSocial) & "'"
            StrSql = StrSql & " AND osocial = " & nro_osocial
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                nro_planos = rs!plnro
            Else
                nro_planos = 0
            End If
        Else
            nro_planos = 0
        End If
    End If
    Texto = "Plan de Salud Obtenido."
      Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)

'----------------Se reutliza el campo para porcentaje de deducciones
    'Aviso Emergencia
    'nrocolumna = nrocolumna + 1
    'Obligatorio = False
    'Campoetiqueta = "Aviso emergencia"
    'pos1 = pos2 + 2
    'pos2 = InStr(pos1, strReg, separador) - 1
    'aux = UCase(Trim(Mid(strReg, pos1, pos2 - pos1 + 1)))
    'If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
    '    Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
    '    Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
    '    RegError = RegError + 1
    '    Exit Sub
    'End If
    'AvisoEmer = aux
    'If AvisoEmer = "N/A" Or AvisoEmer = "NO" Then
    '    nro_aviso = 0
    'Else
    '    nro_aviso = -1
    'End If
'----------------------------------------------------

    'Paga Salario fliar
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Paga salario familiar"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = UCase(Trim(Mid(strReg, pos1, pos2 - pos1 + 1)))
    Texto = "Levantando Paga Salario."
      Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    PagaSalario = Aux
    If PagaSalario = "N/A" Or PagaSalario = "NO" Then
        nro_salario = 0
    Else
        nro_salario = -1
    End If
    Texto = "Campo Obtenido."
      Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    
    'Ganancias
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Deduccion IRPF"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Texto = "Levantando deducciones IPRF."
      Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Ganancias = Aux
    If Ganancias = "N/A" Or Ganancias = "NO" Or Ganancias = "N" Then
        nro_gan = 0
    Else
        nro_gan = -1
        If Ganancias = "50%" Or Ganancias = "50" Then
            nro_aviso = -1
        Else
            nro_aviso = 0
        End If
    End If
    Texto = "Deducciones IRPF obtenidas."
    Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    FlogP.writeline
    FlogP.writeline
    
    
    'Fecha_IRPF desde
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha desde Deduccion IRPF"
    pos1 = pos2 + 2
    pos2 = Len(strReg)
    'Comentado por Carmen Quintero
    'aux = Trim(Mid(strReg, pos1, pos2 - pos1))
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Texto = "Levantando fecha desde deducciones IPRF."
      Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Fecha_IRPF = Aux
    If Fecha_IRPF = "N/A" Or EsNulo(Fecha_IRPF) Then
       Fecha_IRPF = "Null"
       Texto = "No se encontro la Fecha de IRPF."
         Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    Else
       Fecha_IRPF = ConvFecha(Fecha_IRPF)
       Texto = "Fecha desde IRPF Obtenida."
         Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    End If
    Texto = "Fecha desde Deducciones IRPF obtenidas."
    Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    FlogP.writeline
    FlogP.writeline

' ==================================================================================
' ==================================================================================

'Busco el empleado asociado
StrSql = "SELECT ternro FROM empleado WHERE empleg = " & Legajo
If rs.State = adStateOpen Then rs.Close
OpenRecordset StrSql, rs
If Not rs.EOF Then
    NroEmpleado = rs!Ternro
Else
    Texto = ": " & " - Campo " & Campoetiqueta & " El legajo no existe"
    NroColumna = 1
    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    RegError = RegError + 1
    Exit Sub
End If
  
StrSql = "SELECT * FROM tercero "
StrSql = StrSql & " INNER JOIN ter_tip ON tercero.ternro = ter_tip.ternro AND ter_tip.tipnro = 3 "
StrSql = StrSql & " INNER JOIN familiar ON familiar.ternro = tercero.ternro AND familiar.empleado = " & NroEmpleado
StrSql = StrSql & " WHERE ternom = '" & nombre & "'"
StrSql = StrSql & " AND terape = '" & Apellido & "'"
If rs.State = adStateOpen Then rs.Close
OpenRecordset StrSql, rs
If rs.EOF Then
    'Inserto el tercero asociado al familiar
    StrSql = " INSERT INTO tercero(ternom,terape,terfecnac,tersex,nacionalnro,paisnro,ternom2,terape2,estcivnro)"
    StrSql = StrSql & " VALUES('" & nombre & "','" & Apellido & "'," & Fnac & "," & nro_Sexo & ","
    If nro_nacionalidad <> 0 Then
      StrSql = StrSql & nro_nacionalidad & ","
    Else
      StrSql = StrSql & "Null,"
    End If
    If nro_paisnac <> 0 Then
      StrSql = StrSql & nro_paisnac & ","
    Else
      StrSql = StrSql & "Null,"
    End If
    If nombre2 <> "" Then 'Agregado ver 4.31
      StrSql = StrSql & "'" & nombre2 & "',"
    Else
      StrSql = StrSql & "null,"
    End If
    If Apellido2 <> "" Then 'Agregado ver 4.31
       StrSql = StrSql & "'" & Apellido2 & "',"
    Else
        StrSql = StrSql & "null,"
    End If
    StrSql = StrSql & nro_estciv & ")"
    objConn.Execute StrSql, , adExecuteNoRecords

    NroTercero = getLastIdentity(objConn, "tercero")
    
    'Inserto el Registro correspondiente en ter_tip
    StrSql = " INSERT INTO ter_tip(ternro,tipnro) VALUES(" & NroTercero & ",3)"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    'Inserto el Familiar
    StrSql = " INSERT INTO familiar(empleado,ternro,parenro,famest,famestudia,famcernac,faminc,famsalario,famemergencia,famcargadgi,osocial,plnro,famternro, famdgidesde)"
    StrSql = StrSql & " values(" & NroEmpleado & "," & NroTercero & "," & nro_paren & ",-1," & nro_estudia & ",0," & nro_disc & "," & nro_salario & "," & nro_aviso & "," & nro_gan & "," & nro_osocial & "," & nro_planos & ",0," & Fecha_IRPF & " )"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    'Inserto los estudios de familiar
    If nro_estudia = -1 Then
        StrSql = " INSERT INTO estudio_actual (ternro, nivnro) VALUES (" & NroTercero & "," & nro_nivest & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
    End If
    
    Texto = "Inserte el Familiar - " & Legajo & " - " & Apellido & " - " & nombre
    Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
Else
    'Actualizo los datos
    StrSql = "UPDATE tercero SET "
    StrSql = StrSql & " terfecnac = " & Fnac
    StrSql = StrSql & " ,tersex = " & nro_Sexo
    StrSql = StrSql & " , ternom = " & "'" & nombre & "'"
    If nombre2 <> "" Then 'Agregado ver 4.31
      StrSql = StrSql & ", ternom2 = " & "'" & nombre2 & "'"
    End If
    StrSql = StrSql & ", terape = " & "'" & Apellido & "'"
    If Apellido2 <> "" Then 'Agregado ver 4.31
        StrSql = StrSql & ", terape2 = " & "'" & Apellido2 & "'"
    End If
    If nro_nacionalidad <> 0 Then
        StrSql = StrSql & " ,nacionalnro = " & nro_nacionalidad
    End If
    If nro_paisnac <> 0 Then
        StrSql = StrSql & " ,paisnro = " & nro_paisnac
    End If
    StrSql = StrSql & " WHERE ternro = " & rs!Ternro
    objConn.Execute StrSql, , adExecuteNoRecords

    NroTercero = rs!Ternro

    StrSql = "UPDATE familiar SET "
    StrSql = StrSql & " parenro = " & nro_paren
    StrSql = StrSql & " ,famestudia = " & nro_estudia
    StrSql = StrSql & " ,faminc = " & nro_disc
    StrSql = StrSql & " ,famsalario = " & nro_salario
    StrSql = StrSql & " ,famemergencia = " & nro_aviso
    StrSql = StrSql & " ,famcargadgi = " & nro_gan
    StrSql = StrSql & " ,osocial = " & nro_osocial
    StrSql = StrSql & " ,plnro = " & nro_planos
    StrSql = StrSql & " ,famternro = 0"
    StrSql = StrSql & " ,famdgidesde = " & Fecha_IRPF
    StrSql = StrSql & " WHERE empleado = " & NroEmpleado
    StrSql = StrSql & " AND ternro = " & NroTercero
    objConn.Execute StrSql, , adExecuteNoRecords

    If nro_estudia = -1 Then
        StrSql = " SELECT ternro FROM estudio_actual WHERE ternro = " & NroTercero
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
            StrSql = " INSERT INTO estudio_actual (ternro, nivnro) VALUES (" & NroTercero & "," & nro_nivest & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
        Else
            StrSql = " UPDATE estudio_actual SET nivnro = " & nro_nivest
            StrSql = StrSql & "WHERE ternro = " & NroTercero
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
    
    Else
        'StrSql = " DELETE FROM estudio_actual WHERE ternro = " & NroTercero
        'objConn.Execute StrSql, , adExecuteNoRecords
    End If
    
    Texto = "Familiar actualizado - " & Legajo & " - " & Apellido & " - " & nombre
    Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
End If


'Inserto los Documentos
If NroDoc <> "" And NroDoc <> "N/A" And TipDoc <> "N/A" Then
    StrSql = "SELECT * FROM ter_doc WHERE ternro = " & NroTercero
    StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs
    If rs.EOF Then
        StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
        StrSql = StrSql & " VALUES(" & NroTercero & "," & Nro_TDocumento & ",'" & NroDoc & "')"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = ": " & "Inserte el Documento - "
        Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    Else
        StrSql = " UPDATE ter_doc SET "
        StrSql = StrSql & " nrodoc = '" & NroDoc & "'"
        StrSql = StrSql & " WHERE ternro = " & NroTercero
        StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = ": " & "Documento actualizado - "
        Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    End If
End If


'Inserto el Domicilio
If Not IngresoDom = False Then
    StrSql = "SELECT * FROM cabdom  "
    StrSql = StrSql & " WHERE tipnro = 1"
    StrSql = StrSql & " AND ternro = " & NroTercero
    StrSql = StrSql & " AND domdefault = -1"
    StrSql = StrSql & " AND tidonro = 2"
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs
    If rs.EOF Then
        StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
        StrSql = StrSql & " VALUES(1," & NroTercero & ",-1,2)"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        NroDom = getLastIdentity(objConn, "cabdom")
        
        StrSql = " INSERT INTO detdom(domnro,calle,nro,piso,oficdepto,torre,manzana,codigopostal,"
        StrSql = StrSql & "locnro,provnro,paisnro,barrio,partnro,zonanro) "
        StrSql = StrSql & " VALUES (" & NroDom & ",'" & Calle & "','" & Nro_Nrodom & "','" & Piso & "','"
        StrSql = StrSql & Depto & "','" & Torre & "','" & Manzana & "','" & Cpostal & "'," & Nro_Localidad & ","
        StrSql = StrSql & Nro_Provincia & "," & Nro_Pais & ",'" & Barrio & "'," & Nro_Partido & "," & Nro_Zona & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = ": " & "Domicilio Insertado - "
        Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)

        If Telefono <> "" Then
            StrSql = " INSERT INTO telefono(domnro,telnro,teldefault) "
            StrSql = StrSql & " VALUES(" & NroDom & ",'" & Telefono & "',-1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            Texto = ": " & "Inserte el Telefono Principal - "
            Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
        End If
    Else
        StrSql = " UPDATE detdom SET "
        StrSql = StrSql & " calle =" & "'" & Calle & "'"
        StrSql = StrSql & ",nro =" & "'" & Nro_Nrodom & "'"
        StrSql = StrSql & ",piso =" & "'" & Piso & "'"
        StrSql = StrSql & ",oficdepto =" & "'" & Depto & "'"
        StrSql = StrSql & ",torre =" & "'" & Torre & "'"
        StrSql = StrSql & ",manzana =" & "'" & Manzana & "'"
        StrSql = StrSql & ",codigopostal =" & "'" & Cpostal & "'"
        StrSql = StrSql & ",entrecalles =" & "'" & Entre & "'"
        StrSql = StrSql & ",locnro =" & Nro_Localidad
        StrSql = StrSql & ",provnro =" & Nro_Provincia
        StrSql = StrSql & ",paisnro =" & Nro_Pais
        StrSql = StrSql & ", partnro = " & Nro_Partido
        StrSql = StrSql & ", zonanro =" & Nro_Zona
        StrSql = StrSql & " WHERE domnro = " & rs!domnro
        objConn.Execute StrSql, , adExecuteNoRecords
    
        Texto = ": " & "Domicilio Actualizado - "
        Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
    
        If Telefono <> "" Then
            StrSql = "SELECT * FROM telefono "
            StrSql = StrSql & " WHERE domnro =" & rs!domnro
            StrSql = StrSql & " AND telnro ='" & Telefono & "'"
            If rs_Tel.State = adStateOpen Then rs_Tel.Close
            OpenRecordset StrSql, rs_Tel
            If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & Telefono & "',0,-1,0,1)"
                objConn.Execute StrSql, , adExecuteNoRecords
                  
                Texto = ": " & "Inserte el Telefono Principal - "
                Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
            End If
        End If
    End If
End If

OK = True

'Cierro y libero
If rs.State = adStateOpen Then rs.Close
If rs_Tel.State = adStateOpen Then rs_Tel.Close
Set rs = Nothing
Set rs_Tel = Nothing


Exit Sub
SaltoLinea:
    Texto = ": " & Err.Description
    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, strReg)
    MyRollbackTrans
    OK = False
End Sub

Public Sub LineaModelo_660(ByVal strReg As String, ByRef OK As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de Cuestionarios de Capacitacion
' Autor      : FGZ
' Fecha      : 10/08/2007
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim pos1            As Long
Dim pos2            As Long

Dim Aux As String
Dim Formulario As String
Dim fornro As Long
Dim Pregunta As String
Dim Prenro As Long
Dim Ponderacion As Integer
Dim Explicacion As String
Dim Opcion As String
Dim Opcnro As Long
Dim Correcta As Boolean
Dim Inserto As Boolean
Dim TipoTest As Long

Dim rs As New ADODB.Recordset

'Tipo de Test(Valor Numerico);Formulario(Descripcion - 50);Pregunta(Descripcion - 500);Ponderacion(1..100);Explicacion(Descripcion - 1000); Opcion(Descripcion - 200); Correcta(SI/NO)

    Flog.writeline Espacios(Tabulador * 1) & "Procesando Linea: " & LineaCarga
    
    'Tipo de Test(Valor numerico)
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    TipoTest = Aux
      
    'Formulario(Descripcion - 50)
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Formulario = Left(Aux, 50)
    If Formulario = "" Or EsNulo(Formulario) Then
        Flog.writeline Espacios(Tabulador * 1) & "Linea: " & LineaCarga & " - Formulario sin Descripción"
        OK = False
        Exit Sub
    End If
      
    'Pregunta(Descripcion - 500)
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Pregunta = Left(Aux, 500)
    
    'Ponderacion(1..100)
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If IsNumeric(Aux) Then
        Ponderacion = Aux
    Else
        Flog.writeline Espacios(Tabulador * 1) & "Linea: " & LineaCarga & " - La Ponderación de la Pregunta no es numérica."
        OK = False
        Exit Sub
    End If
    
    
    'Explicacion(Descripcion - 1000)
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Explicacion = Left(Aux, 1000)
    
    'Opcion(Descripcion - 200)
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    Opcion = Left(Aux, 200)
    
    'Correcta(SI/NO)
    pos1 = pos2 + 2
    pos2 = Len(strReg) - 1
    Aux = UCase(Trim(Mid(strReg, pos1, pos2 - pos1 + 1)))
    If Aux = "SI" Or Aux = "S" Then
        Correcta = True
    Else
        If Aux = "NO" Or Aux = "N" Then
            Correcta = False
        Else
            Correcta = CBool(Aux)
        End If
    End If
    
    'Busco el nro del formulario correspondiente
    Flog.writeline Espacios(Tabulador * 1) & "Valido formulario "
    Call ValidaFormulario(TipoTest, Formulario, fornro, Inserto)
    If Not Inserto And fornro = 0 Then
        'LineaError.Writeline Mid(strReg, 1, Len(strReg))
        Flog.writeline Espacios(Tabulador * 1) & "Linea: " & LineaCarga & " - El formulario no existe y no se puede crear porque el tipo de test no existe."
        OK = False
        Exit Sub
    End If
        
    'Inserto la pregunta
    Flog.writeline Espacios(Tabulador * 1) & "Valido pregunta "
    StrSql = "SELECT prenro FROM pos_pregunta"
    StrSql = StrSql & " WHERE predesabr = '" & Left(Pregunta, 500) & "'"
    StrSql = StrSql & " AND fornro = " & fornro
    OpenRecordset StrSql, rs
    If rs.EOF Then
        Flog.writeline Espacios(Tabulador * 1) & "inserto pregunta "
        StrSql = "INSERT INTO pos_pregunta (predesabr,prepond,pretipo,fornro,preexp) VALUES ( "
        StrSql = StrSql & "'" & Left(Pregunta, 500) & "'"
        StrSql = StrSql & "," & Ponderacion
        StrSql = StrSql & "," & 0
        StrSql = StrSql & "," & fornro
        StrSql = StrSql & ",'" & Left(Explicacion, 1000) & "'"
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Prenro = getLastIdentity(objConn, "pos_pregunta")
    Else
        Prenro = rs!Prenro
        
        'Actualizo los datos de la pregunta
        StrSql = "UPDATE pos_pregunta SET "
        StrSql = StrSql & " prepond = " & Ponderacion
        StrSql = StrSql & " ,preexp = '" & Left(Pregunta, 500) & "'"
        StrSql = StrSql & " WHERE prenro = " & rs!Prenro
        objConn.Execute StrSql, , adExecuteNoRecords
        
    End If
    
    'Inserto las opciones
    Flog.writeline Espacios(Tabulador * 1) & "Valido opcion "
    StrSql = "SELECT * FROM pos_opcion"
    StrSql = StrSql & " WHERE opcdesabr = '" & Left(Opcion, 200) & "'"
    StrSql = StrSql & " AND prenro = " & Prenro
    OpenRecordset StrSql, rs
    If rs.EOF Then
        Flog.writeline Espacios(Tabulador * 1) & "inserto opcion "
        StrSql = "INSERT INTO pos_opcion (opcdesabr,opcok,prenro) VALUES ( "
        StrSql = StrSql & "'" & Left(Opcion, 200) & "'"
        StrSql = StrSql & "," & CInt(Correcta)
        StrSql = StrSql & "," & Prenro
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
    Else
        'Actualizo los datos de las opciones
        StrSql = "UPDATE pos_opcion SET "
        StrSql = StrSql & " opcok = " & CInt(Correcta)
        StrSql = StrSql & " WHERE opcnro = " & rs!Opcnro
        objConn.Execute StrSql, , adExecuteNoRecords
    End If
    
    Flog.writeline Espacios(Tabulador * 1) & "linea procesada "
    'Cierro y libero
    If rs.State = adStateOpen Then rs.Close
    Set rs = Nothing
End Sub

Public Sub LineaModelo_661(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Interface de Imágenes Empleados
' Autor      : Gustavo Ring
' Fecha      : 03/09/2007
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------

Dim pos1 As Long
Dim pos2 As Long

' Datos de la imagen

Dim tipoimagen As String
Dim nombrearchivo As String

' Datos del empleado

Dim empleg As String

On Error GoTo SaltoLinea
    
    Tabs = 1

    Texto = "Procesando linea " & strLinea
    Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Levanto la linea que se va a importar
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    
    NroColumna = NroColumna + 1
    
    ' Levanto el legajo del empleado
    
    pos1 = 1
    pos2 = InStr(pos1, strLinea, separador)
    
    empleg = Mid$(strLinea, pos1, pos2 - pos1)
    If Trim(empleg) = "" Or Not (esNum(empleg)) Then
        Texto = "El legajo del empleado debe ser númerico."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Exit Sub
    Else ' todo ok
        Texto = "Se obtuvo el legajo del empleado: " & empleg & " correctamente."
        Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    End If
    
    NroColumna = NroColumna + 1
    
    ' Levanto el Código del tipo de imagen
    
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    
    tipoimagen = Mid$(strLinea, pos1, pos2 - pos1)
    If Trim(tipoimagen) = "" Or Not (esNum(tipoimagen)) Then
        Texto = "El tipo de la imagen debe ser númerico.No se actualizaran los datos"
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Exit Sub
    Else ' todo ok
        Texto = "Se obtuvo el código:" & tipoimagen & "  del tipo de la imagen correctamente."
        Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    End If
    
    'Calculo el nombre completo del archivo
    
    NroColumna = NroColumna + 1
    
    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)
    
    If (pos2 = 0) Then
                ' Se olvido el último separador
                nombrearchivo = Mid$(strLinea, pos1, Len(strLinea))
        Else
                nombrearchivo = Mid$(strLinea, pos1, pos2 - pos1)
    End If

    If Trim(nombrearchivo) = "" Then
        Texto = "No se ingreso el nombre de la imagen."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Exit Sub
    Else
        Texto = "Se obtuvo el nombre:" & nombrearchivo & "  de la imagen correctamente."
        Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    End If
    
    Texto = "Comenzando a actualizar BD."
    Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
        
    Call grabar_imagen(empleg, tipoimagen, nombrearchivo, Pisa, strLinea)

Exit Sub

SaltoLinea:
    Texto = ": " & Err.Description
    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, strLinea)

End Sub

Public Sub LineaModelo_662(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Interface de Emails de Empleados
' Autor      : Gustavo Ring
' Fecha      : 21/02/2008
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------

Dim pos1 As Long
Dim pos2 As Long
Dim Ternro As Long
Dim empleg As Long
Dim teremail As String
Dim rs As New ADODB.Recordset

On Error GoTo SaltoLinea

    Tabs = 1

    Texto = "Procesando linea " & strLinea
    Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Levanto la linea que se va a importar
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

    NroColumna = NroColumna + 1

    ' Levanto el legajo del empleado

    pos1 = 1
    pos2 = InStr(pos1, strLinea, separador)

    empleg = Mid$(strLinea, pos1, pos2 - pos1)
    If Trim(empleg) = "" Then
        Texto = "El legajo del empleado debe ser númerico."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Exit Sub
    Else ' todo ok
        Texto = "Se obtuvo el legajo del empleado: " & empleg & " correctamente."
        Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    End If

    NroColumna = NroColumna + 1

    ' Levanto el email del empleado

    pos1 = pos2 + 1
    pos2 = InStr(pos1 + 1, strLinea, separador)

    teremail = ""
    If (pos2 = 0) Then
                ' Se olvido el último separador
                teremail = Mid$(strLinea, pos1, Len(strLinea))
        Else
                teremail = Mid$(strLinea, pos1, pos2 - pos1)
    End If

    teremail = Left(teremail, 100)

    If Trim(teremail) = "" Then
        Texto = "No se ingreso el email del empleado:" & empleg
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Exit Sub
    Else
        Texto = "Se obtuvo el mail:" & teremail & "  del empleado:" & empleg
        Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    End If

    ' Chequeo si el empleado existe en la base y si tiene un email anterior
    StrSql = "SELECT teremail,tercero.ternro FROM tercero "
    StrSql = StrSql & " INNER JOIN empleado ON tercero.ternro = empleado.ternro "
    StrSql = StrSql & " WHERE empleg=" & empleg
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs

    If rs.EOF Then
        Texto = "El legajo:" & empleg & " no existe"
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Exit Sub
    Else
        Ternro = rs!Ternro
        Texto = "El empleado:" & empleg & "tiene el ternro:" & Ternro
        Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)

        If Not IsNull(rs!teremail) And (rs!teremail <> "") Then
            Texto = "El empleado:" & empleg & "tenia asociado el mail:" & rs!teremail & " y se cambiara por " & teremail
            Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
        End If
    End If

    Texto = "Comenzando a actualizar BD."
    Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)

    StrSql = " UPDATE tercero SET "
    StrSql = StrSql & " teremail = '" & teremail & "'"
    StrSql = StrSql & " WHERE ternro = " & Ternro
    objConn.Execute StrSql, , adExecuteNoRecords
    Texto = "Se actualizo correctamente el empleado en tercero:" & Ternro
    Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)

    StrSql = " UPDATE empleado SET "
    StrSql = StrSql & " empemail = '" & teremail & "'"
    StrSql = StrSql & " WHERE ternro = " & Ternro
    objConn.Execute StrSql, , adExecuteNoRecords
    Texto = "Se actualizo correctamente el empleado en v_empleado:" & empleg
    Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)

Exit Sub

SaltoLinea:
    Texto = ": " & Err.Description
    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, strLinea)

End Sub


Public Sub grabar_imagen(empleg As String, tipoimag As String, nombreimag As String, reemplazar As Boolean, strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Graba las imagenes del empleado en la tabla ter_imag
' Autor      : Gustavo Ring
' Fecha      : 04/09/2007
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
    Dim rs_sub As New ADODB.Recordset
    Dim Ternro As Integer
    Dim tipimdesabr As String
    Dim tieneimagen As Boolean
    
    ' Chequeo si existe el tipo de imagen
    
    StrSql = " SELECT tipimdesabr FROM tipoimag "
    StrSql = StrSql & " WHERE tipimnro=" & tipoimag
        
    OpenRecordset StrSql, rs_sub
        
    If Not rs_sub.EOF Then
         tipimdesabr = rs_sub("tipimdesabr")
    Else
        Texto = "El tipo de imagen con el código:" & tipoimag & " no existe."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Texto = "El tipo de imagen con el código:" & tipoimag & " no existe. No se actualizo."
        Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Exit Sub
    End If
    
    rs_sub.Close
    
    StrSql = " SELECT ternro FROM empleado "
    StrSql = StrSql & " WHERE empleg=" & empleg
        
    OpenRecordset StrSql, rs_sub
    
    If Not rs_sub.EOF Then
         Ternro = rs_sub("ternro")
    Else
        Texto = "El empleado con legajo:" & empleg & " no es un tercero válido."
        Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Texto = "El empleado con legajo:" & empleg & " no es un tercero válido. No se actualizo."
        Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Exit Sub
    End If
    
    rs_sub.Close
    
    ' Me fijo si tiene imagen asociada
    
    StrSql = " SELECT ternro FROM ter_imag "
    StrSql = StrSql & " WHERE ternro = " & Ternro
    StrSql = StrSql & " AND tipimnro=" & tipoimag
    OpenRecordset StrSql, rs_sub
            
    If rs_sub.EOF Then
         tieneimagen = False
    Else
         tieneimagen = True
    End If
    
    rs_sub.Close
    
    If Not (tieneimagen) Then
        StrSql = " INSERT INTO ter_imag "
        StrSql = StrSql & "(ternro,tipimnro,terimnombre,terimlink,terimpag,terimdesabr,terimfecha,terimvalid) "
        StrSql = StrSql & "  VALUES (" & Ternro & "," & tipoimag
        StrSql = StrSql & ",'" & nombreimag & "','" & nombreimag & "',1,'" & tipimdesabr
        StrSql = StrSql & "'," & ConvFecha(Now()) & ",-1)"
                            
        objConn.Execute StrSql, , adExecuteNoRecords
        Texto = "Se agrego los datos de la foto del empleado correctamente."
        Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
    Else
        If reemplazar Then
            StrSql = " UPDATE ter_imag SET "
            StrSql = StrSql & " terimnombre = '" & nombreimag & "',"
            StrSql = StrSql & " terimlink ='" & nombreimag & "'"
            StrSql = StrSql & " WHERE ternro = " & Ternro
            StrSql = StrSql & " AND tipimnro = " & tipoimag
            objConn.Execute StrSql, , adExecuteNoRecords
            Texto = "El empleado:" & empleg & " ya tenia una imagen de tipo " & tipoimag & "  asociada. Se actualizo el nombre:" & nombreimag
            Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
        Else
            Texto = "El empleado:" & empleg & " ya tenia una imagen de tipo " & tipoimag & "  asociada. No se realizaron cambios"
            Call Escribir_Log("flog", NroLinea, NroColumna, Texto, Tabs, strLinea)
            Texto = "El empleado:" & empleg & " ya tenia una imagen de tipo " & tipoimag & "  asociada. No se realizaron cambios"
            Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
        End If
    End If
End Sub


Public Sub ValidaFormulario(ByVal TipoTest As Long, ByRef Valor As String, ByRef Cod As Long, ByRef Inserto As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Valida si el formulario existe retornando su codigo, si no existe ==> lo crea y retorna su codigo.
' Autor      : FGZ
' Fecha      : 14/08/2007
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim rs As New ADODB.Recordset

Dim l_pos1 As Long
Dim l_pos2 As Long

    'Valido que exista el tipo de test
    Flog.writeline Espacios(Tabulador * 1) & "'Valido que exista el tipo de test"
    StrSql = "SELECT ttesnro FROM pos_tipotest WHERE ttesnro = " & TipoTest
    OpenRecordset StrSql, rs
    If rs.EOF Then
        Cod = 0
        Inserto = False
        Exit Sub
    End If

    Flog.writeline Espacios(Tabulador * 1) & "'Valido que exista el formulario"
    StrSql = " SELECT fornro FROM pos_formulario WHERE UPPER(fordesabr) = '" & UCase(Mid(Valor, 1, 50)) & "'"
    StrSql = StrSql & " AND ttesnro = " & TipoTest
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        Cod = rs!fornro
        Inserto = False
    Else
        Flog.writeline Espacios(Tabulador * 1) & "'inserto el formulario"
        StrSql = " INSERT INTO pos_formulario(ttesnro,fordesabr,fordesext,fordef)"
        StrSql = StrSql & " VALUES(" & TipoTest & ",'" & UCase(Mid(Valor, 1, 50)) & "','" & Mid(Valor, 1, 200) & "',0)"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Flog.writeline Espacios(Tabulador * 1) & "getLastIdentity"
        Cod = getLastIdentity(objConn, "pos_formulario")
        Inserto = True
    End If
    Flog.writeline Espacios(Tabulador * 1) & "validado"
End Sub


Public Sub LineaModelo_663(ByVal strReg As String, ByRef OK As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de Prestadores Medicos
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' ---------------------------------------------------------------------------------------------
Dim RazSocial       As String
Dim Calle           As String   'Calle                    -- detdom.calle
Dim Nro             As String   'Número                   -- detdom.nro
Dim Piso            As String   'Piso                     -- detdom.piso
Dim Depto           As String   'Depto                    -- detdom.depto
Dim Torre           As String   'Torre                    -- detdom.torre
Dim Manzana         As String   'Manzana                  -- detdom.manzana
Dim Cpostal         As String   'Cpostal                  -- detdom.codigopostal
Dim Entre           As String   'Entre Calles             -- detdom.entrecalles
Dim Barrio          As String   'Barrio                   -- detdom.barrio
Dim Localidad       As String   'Localidad                -- detdom.locnro
Dim Partido         As String   'Partido                  -- detdom.partnro
Dim Zona            As String   'Zona                     -- detdom.zonanro
Dim Provincia       As String   'Provincia                -- detdom.provnro
Dim Pais            As String   'Pais                     -- detdom.paisnro
Dim Telefono        As String   'Telefono                 -- telefono.telnro
Dim TipDoc          As String  ' Tipo de Documento
Dim NroDoc          As String  ' Nº de Documento

Dim pos1            As Long
Dim pos2            As Long

Dim NroTercero      As Long
Dim Nro_Nrodom      As String
Dim NroDom          As Long
Dim Nro_TDocumento  As Long
Dim Nro_Barrio          As Long
Dim Nro_Localidad       As Long
Dim Nro_Partido         As Long
Dim Nro_Zona            As Long
Dim Nro_Provincia       As Long
Dim Nro_Pais            As Long
Dim IngresoDom          As Boolean
Dim Nro_Institucion As Long
Dim TipoTercero As Long

Dim rs_Sql          As New ADODB.Recordset
Dim rs              As New ADODB.Recordset
Dim rs_Tel          As New ADODB.Recordset


    LineaCarga = LineaCarga + 1
    Tabs = 1
    
    On Error GoTo SaltoLinea
    
    Flog.writeline
    FlogE.writeline
    FlogP.writeline
    
    'Razon Social
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Razon Social"
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    RazSocial = Left(Aux, 60)
    

    'Tipo de Doc
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tipo de Doc"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    TipDoc = Aux
    If TipDoc <> "N/A" And Not EsNulo(TipDoc) Then
        StrSql = " SELECT tidnro FROM tipodocu WHERE UPPER(tidsigla) = '" & UCase(TipDoc) & "'"
        If rs_Sql.State = adStateOpen Then rs_Sql.Close
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            Nro_TDocumento = rs_Sql!tidnro
        Else
            'busco la primera institucion, si no existe la creo
            StrSql = " SELECT * FROM institucion "
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                Nro_Institucion = rs!InstNro
            Else
                'creo una
                StrSql = " INSERT INTO institucion (instdes,instabre) VALUES ('NACIONAL','NAC')"
                objConn.Execute StrSql, , adExecuteNoRecords
                Nro_Institucion = getLastIdentity(objConn, "institucion")
            End If
            'creo el tipo de documento
            StrSql = " INSERT INTO tipodocu(tidnom,tidsigla,tidsist,instnro,tidunico) VALUES ('" & UCase(TipDoc) & "','" & UCase(TipDoc) & "',0," & Nro_Institucion & ",0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            Nro_TDocumento = getLastIdentity(objConn, "tipodocu")
        End If
    Else
        Nro_TDocumento = 0
    End If
    
    'Nro de Doc
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nro de Doc"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    NroDoc = Aux
    If NroDoc = "N/A" Or EsNulo(NroDoc) Then
        NroDoc = "0"
    End If
    
    'Calle
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Calle"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Calle = Left(Aux, 250)
    If Calle = "N/A" Or EsNulo(Calle) Then
        Calle = ""
        IngresoDom = False
    End If
    
    'Nro
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Nro"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Nro = Left(Aux, 8)
    If (Nro <> "N/A") And Not EsNulo(Nro) Then
        Nro_Nrodom = Nro
    Else
        Nro_Nrodom = "S/N"
    End If
    IngresoDom = True
    
    
    'Piso
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Piso"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Piso = Left(Aux, 8)
    If Piso = "N/A" Then
        Piso = ""
    End If
    
    'Depto
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Depto"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Depto = Left(Aux, 8)
    If Depto = "N/A" Then
        Depto = ""
    End If

    'Torre
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Torre"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Torre = Left(Aux, 8)
    If Torre = "N/A" Then
        Torre = ""
    End If
    
    'Manzana
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Manzana"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Manzana = Left(Aux, 8)
    If Manzana = "N/A" Then
        Manzana = ""
    End If

    'Codigo postal
    NroColumna = NroColumna + 1
    Obligatorio = IngresoDom
    Campoetiqueta = "Codigo postal"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Cpostal = Left(Aux, 12)
    If Cpostal = "N/A" Then
        Cpostal = ""
    End If

    'Entre calles
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Entre calles"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Entre = Left(Aux, 80)
    If Entre = "N/A" Then
        Entre = ""
    End If

    'Barrio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Barrio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Barrio = Left(Aux, 30)
    If Barrio = "N/A" Then
        Barrio = ""
    End If

    'Localidad
    NroColumna = NroColumna + 1
    Obligatorio = IngresoDom
    Campoetiqueta = "Localidad"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    '19/03/2010 - Se cambio la longitud a 60
    'Localidad = Left(aux, 30)
    Localidad = Left(Aux, 60)
    
    'Partido
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Partido"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Partido = Aux
    
    'Zona
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Zona"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    '19/03/2010 - Se cambio la longitud a 60
    'Zona = aux
    Zona = Left(Aux, 60)

    
    'Provincia
    NroColumna = NroColumna + 1
    Obligatorio = IngresoDom
    Campoetiqueta = "Provincia"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Provincia = Aux
    
    'Pais
    NroColumna = NroColumna + 1
    Obligatorio = IngresoDom
    Campoetiqueta = "Pais"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Pais = Aux
    If Pais <> "N/A" Then
        Call ValidarPais(Pais, Nro_Pais)
    Else
        Nro_Pais = 0
    End If
    If (Provincia <> "N/A") And (Pais <> "N/A") Then
        Call ValidarProvincia(Provincia, Nro_Provincia, Nro_Pais)
    Else
        Nro_Provincia = 0
    End If
    If (Localidad <> "N/A") And (Provincia <> "N/A") And (Pais <> "N/A") Then
        Call ValidarLocalidad(Localidad, Nro_Localidad, Nro_Pais, Nro_Provincia)
    Else
        Nro_Localidad = 0
    End If
    If Partido <> "N/A" Then
        Call ValidarPartido(Partido, Nro_Partido)
    Else
        Nro_Partido = 0
    End If
    If Zona <> "N/A" Then
        Call ValidarZona(Zona, Nro_Zona, Nro_Provincia)
    Else
        Nro_Zona = 0
    End If
    
    If (IngresoDom = True) And (Nro_Localidad = 0) Then
        Texto = ": " & " - Debe Ingresar la Localidad."
        NroColumna = 23
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    
    If (IngresoDom = True) And (Nro_Provincia = 0) Then
        Texto = ": " & " - Debe Ingresar la Provincia."
        NroColumna = 26
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    
    If (IngresoDom = True) And (Nro_Pais = 0) Then
        Texto = ": " & " - Debe Ingresar la Pais."
        NroColumna = 27
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Telefono
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Telefono"
    pos1 = pos2 + 2
    pos2 = Len(strReg)
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Telefono = Aux
    If Telefono = "N/A" Then
        Telefono = ""
    End If
   

' ==================================================================================
' ==================================================================================

'Buscar tercero por razon social
'Si existe debe actualizar y sino lo debe crear
TipoTercero = 28
StrSql = "SELECT * FROM tercero "
StrSql = StrSql & " INNER JOIN ter_tip ON tercero.ternro = ter_tip.ternro AND ter_tip.tipnro = " & TipoTercero
StrSql = StrSql & " WHERE terrazsoc = '" & RazSocial & "'"
OpenRecordset StrSql, rs
If rs.EOF Then
    'Inserto el tercero asociado al familiar
    StrSql = " INSERT INTO tercero(terrazsoc,tersex)"
    StrSql = StrSql & " VALUES('" & RazSocial & "',-1)"
    objConn.Execute StrSql, , adExecuteNoRecords

    NroTercero = getLastIdentity(objConn, "tercero")
    
    'Inserto el Registro correspondiente en ter_tip
    StrSql = " INSERT INTO ter_tip(ternro,tipnro) VALUES(" & NroTercero & "," & TipoTercero & ")"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    'Inserto el Registro correspondiente al complemento del prestador medico
    StrSql = " INSERT INTO soservmedico(ternro,servmedcosto) VALUES(" & NroTercero & ",0)"
    objConn.Execute StrSql, , adExecuteNoRecords
Else
    NroTercero = rs!Ternro
End If


'Inserto los Documentos
If NroDoc <> "" And NroDoc <> "N/A" And TipDoc <> "N/A" Then
    StrSql = "SELECT * FROM ter_doc WHERE ternro = " & NroTercero
    StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs
    If rs.EOF Then
        StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
        StrSql = StrSql & " VALUES(" & NroTercero & "," & Nro_TDocumento & ",'" & NroDoc & "')"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = ": " & "Inserte el Documento - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
    Else
        StrSql = " UPDATE ter_doc SET "
        StrSql = StrSql & " nrodoc = '" & NroDoc & "'"
        StrSql = StrSql & " WHERE ternro = " & NroTercero
        StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = ": " & "Documento actualizado - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
    End If
End If


'Inserto el Domicilio
If Not IngresoDom = False Then
    StrSql = "SELECT * FROM cabdom  "
    StrSql = StrSql & " WHERE tipnro = 1"
    StrSql = StrSql & " AND ternro = " & NroTercero
    StrSql = StrSql & " AND domdefault = -1"
    StrSql = StrSql & " AND tidonro = 2"
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs
    If rs.EOF Then
        StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
        StrSql = StrSql & " VALUES(1," & NroTercero & ",-1,2)"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        NroDom = getLastIdentity(objConn, "cabdom")
        
        StrSql = " INSERT INTO detdom(domnro,calle,nro,piso,oficdepto,torre,manzana,codigopostal,"
        StrSql = StrSql & "locnro,provnro,paisnro,barrio,partnro,zonanro) "
        StrSql = StrSql & " VALUES (" & NroDom & ",'" & Calle & "','" & Nro_Nrodom & "','" & Piso & "','"
        StrSql = StrSql & Depto & "','" & Torre & "','" & Manzana & "','" & Cpostal & "'," & Nro_Localidad & ","
        StrSql = StrSql & Nro_Provincia & "," & Nro_Pais & ",'" & Barrio & "'," & Nro_Partido & "," & Nro_Zona & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = ": " & "Domicilio Insertado - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)

        If Telefono <> "" Then
            StrSql = " INSERT INTO telefono(domnro,telnro,teldefault) "
            StrSql = StrSql & " VALUES(" & NroDom & ",'" & Telefono & "',-1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            Texto = ": " & "Inserte el Telefono Principal - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        End If
    Else
        StrSql = " UPDATE detdom SET "
        StrSql = StrSql & " calle =" & "'" & Calle & "'"
        StrSql = StrSql & ",nro =" & "'" & Nro_Nrodom & "'"
        StrSql = StrSql & ",piso =" & "'" & Piso & "'"
        StrSql = StrSql & ",oficdepto =" & "'" & Depto & "'"
        StrSql = StrSql & ",torre =" & "'" & Torre & "'"
        StrSql = StrSql & ",manzana =" & "'" & Manzana & "'"
        StrSql = StrSql & ",codigopostal =" & "'" & Cpostal & "'"
        StrSql = StrSql & ",entrecalles =" & "'" & Entre & "'"
        StrSql = StrSql & ",locnro =" & Nro_Localidad
        StrSql = StrSql & ",provnro =" & Nro_Provincia
        StrSql = StrSql & ",paisnro =" & Nro_Pais
        StrSql = StrSql & ", partnro = " & Nro_Partido
        StrSql = StrSql & ", zonanro =" & Nro_Zona
        StrSql = StrSql & " WHERE domnro = " & rs!domnro
        objConn.Execute StrSql, , adExecuteNoRecords
    
        Texto = ": " & "Domicilio Actualizado - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
    
        If Telefono <> "" Then
            StrSql = "SELECT * FROM telefono "
            StrSql = StrSql & " WHERE domnro =" & rs!domnro
            StrSql = StrSql & " AND telnro ='" & Telefono & "'"
            If rs_Tel.State = adStateOpen Then rs_Tel.Close
            OpenRecordset StrSql, rs_Tel
            If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & Telefono & "',0,-1,0,1)"
                objConn.Execute StrSql, , adExecuteNoRecords
                  
                Texto = ": " & "Inserte el Telefono Principal - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
    End If
End If

OK = True

'Cierro y libero
If rs.State = adStateOpen Then rs.Close
If rs_Tel.State = adStateOpen Then rs_Tel.Close
Set rs = Nothing
Set rs_Tel = Nothing


Exit Sub
SaltoLinea:
    Texto = ": " & Err.Description
    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, strReg)
    MyRollbackTrans
    OK = False
End Sub

Public Sub LineaModelo_910(ByVal strReg As String, ByRef OK As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de Familiares para Colombia
' Autor      : FGZ
' Fecha      :
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Legajo          As Long    ' Legajo del Empleado
Dim Apellido        As String  ' Apellido del Familiar
Dim nombre          As String  ' Nombre del Familiar
Dim Fnac            As String  ' Fecha de Nacimiento del Familiar
Dim NAC             As String  ' Nacionalidad del Familiar
Dim PaisNac         As String  ' Pais de Nacimiento
Dim EstCiv          As String  ' Estado Civil
Dim Sexo            As String  ' Sexo del Familiar
Dim GPare           As String  ' Grado de Parentesco
Dim Disc            As String  ' Discapacitado
Dim Estudia         As String  ' Estudia
Dim NivEst          As String  ' Nivel de Estudio
Dim TipDoc          As String  ' Tipo de Documento del Familiar
Dim NroDoc          As String  ' Nº de Documento del Familiar
Dim Calle           As String   'Calle                    -- detdom.calle
Dim Nro             As String   'Número                   -- detdom.nro
Dim Piso            As String   'Piso                     -- detdom.piso
Dim Depto           As String   'Depto                    -- detdom.depto
Dim Torre           As String   'Torre                    -- detdom.torre
Dim Manzana         As String   'Manzana                  -- detdom.manzana
Dim Cpostal         As String   'Cpostal                  -- detdom.codigopostal
Dim Entre           As String   'Entre Calles             -- detdom.entrecalles
Dim Barrio          As String   'Barrio                   -- detdom.barrio
Dim Localidad       As String   'Localidad                -- detdom.locnro
Dim Partido         As String   'Partido                  -- detdom.partnro
Dim Zona            As String   'Zona                     -- detdom.zonanro
Dim Provincia       As String   'Provincia                -- detdom.provnro
Dim Pais            As String   'Pais                     -- detdom.paisnro
Dim Telefono        As String   'Telefono                 -- telefono.telnro
Dim ObraSocial      As String   'Obra Social
Dim PlanOSocial     As String   'Plan Obra Social
Dim AvisoEmer       As String   'Aviso ante Emergencia
Dim PagaSalario     As String   'Paga Salario Familiar
Dim Ganancias       As String   'Se lo toma para ganancias
Dim fechaInicio     As String   ' Fecha de inicio de familiar
Dim fechaVto        As String   ' Fecha de vencimiento de familiar
Dim ESC             As String  ' Escolaridad
Dim GRADO           As String  ' Grado al que concurre
Dim NroTDoc         As String

Dim pos1            As Long
Dim pos2            As Long

Dim NroTercero      As Long
Dim NroEmpleado     As Long
Dim CodTerFam       As String
Dim Nro_Nrodom      As String
Dim NroDom          As Long
Dim Nro_TDocumento  As Long
Dim nro_nacionalidad As Long
Dim nro_paisnac      As Long
Dim nro_estciv      As Long
Dim nro_Sexo        As Long
Dim nro_estudia     As Long
Dim nro_nivest      As String
Dim nro_osocial     As Long
Dim nro_planos      As Long
Dim nro_aviso       As Long
Dim nro_salario     As Long
Dim nro_gan         As Long
Dim nro_disc        As Long
Dim nro_paren        As Long
Dim Nro_Barrio          As Long
Dim Nro_Localidad       As Long
Dim Nro_Partido         As Long
Dim Nro_Zona            As Long
Dim Nro_Provincia       As Long
Dim Nro_Pais            As Long
Dim OSocial             As String
Dim ter_osocial         As Long
Dim Inserto_estr        As Boolean
Dim IngresoDom          As Boolean
Dim Nro_Institucion As Long

Dim rs_Sql          As New ADODB.Recordset
Dim rs              As New ADODB.Recordset
Dim rs_Tel          As New ADODB.Recordset



    'No se usan asi que quedan en blanca
    Manzana = ""
    Cpostal = ""
    Partido = ""
    Zona = ""
    Provincia = ""

    LineaCarga = LineaCarga + 1
    Tabs = 1
    
    On Error GoTo SaltoLinea
    
    Flog.writeline
    FlogE.writeline
    FlogP.writeline
    
    'Legajo
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Legajo"
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If IsNumeric(Aux) Then
        Legajo = Aux
    Else
        Texto = ": " & "El legajo no es numerico "
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        InsertaError 1, 8
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Apellido
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Apellido"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Apellido = Left(Aux, 25)
    
    'Nombre
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Nombre"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    nombre = Left(Aux, 25)
    
    'Fecha de Nacimiento
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Fecha de Nacimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Fnac = Aux
    If Fnac = "N/A" Or EsNulo(Fnac) Then
        Fnac = "Null"
    End If
    
    'Pais de Nacimiento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Pais de Nacimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    PaisNac = Aux
    If PaisNac <> "N/A" Then
        StrSql = " SELECT paisnro FROM pais WHERE UPPER(paisdesc) = '" & UCase(PaisNac) & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            nro_paisnac = rs!Paisnro
        Else
            StrSql = " INSERT INTO pais(paisdesc,paisdef) VALUES ('" & UCase(PaisNac) & "',0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_paisnac = getLastIdentity(objConn, "pais")
        End If
    Else
        nro_paisnac = 0
    End If
    
    'Nacionalidad
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Nacionalidad"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    NAC = UCase(Aux)
    If NAC <> "N/A" And Not EsNulo(NAC) Then
        StrSql = " SELECT nacionalnro FROM nacionalidad WHERE upper(nacionaldes) = '" & NAC & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            nro_nacionalidad = rs!nacionalnro
        Else
            StrSql = " INSERT INTO nacionalidad(nacionaldes) VALUES ('" & UCase(NAC) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_nacionalidad = getLastIdentity(objConn, "nacionalidad")
        End If
    Else
        nro_nacionalidad = 0
    End If
    If nro_nacionalidad = 0 Then
        Texto = ": " & " - Debe ingresar Nacionalidad."
        NroColumna = 5
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    
    
    'Estado Civil
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Estado Civil"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    EstCiv = Left(UCase(Aux), 30)
    If EstCiv <> "N/A" And Not EsNulo(EstCiv) Then
        StrSql = " SELECT estcivnro FROM estcivil WHERE upper(estcivdesabr) = '" & UCase(EstCiv) & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            nro_estciv = rs!estcivnro
        Else
            StrSql = " INSERT INTO estcivil(estcivdesabr) VALUES ('" & UCase(EstCiv) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_estciv = getLastIdentity(objConn, "estcivil")
        End If
    Else
        nro_estciv = 0
    End If
    If nro_estciv = 0 Then
        Texto = ": " & " - Debe ingresar Estado Civil."
        NroColumna = 6
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Sexo
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Sexo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Sexo = UCase(Aux)
    If Sexo = "M" Or Sexo = "MASCULINO" Or Sexo = "-1" Then
        nro_Sexo = -1
    Else
        nro_Sexo = 0
    End If
    
    'Parentesco
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Parentesco"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    GPare = UCase(Aux)
    StrSql = " SELECT parenro FROM parentesco WHERE upper(paredesc) = '" & UCase(GPare) & "'"
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        nro_paren = rs!parenro
    Else
        nro_paren = 0
    End If
    If nro_paren = 0 Then
        Texto = ": " & " - El parentesco ingresado no existe, verifíquelo." & GPare
        NroColumna = 8
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Discapacitado
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Discapacitado"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Disc = UCase(Aux)
    If Disc = "N/A" Or Disc = "NO" Then
        nro_disc = 0
    Else
        nro_disc = -1
    End If
    
    'Estudia
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estudia"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = UCase(Trim(Mid(strReg, pos1, pos2 - pos1 + 1)))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Estudia = Aux
    If Estudia = "N/A" Or Estudia = "NO" Then
        nro_estudia = 0
    Else
        nro_estudia = -1
    End If
    
    'Nivel de estudio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nivel de estudio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = UCase(Trim(Mid(strReg, pos1, pos2 - pos1 + 1)))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    NivEst = Aux
    'Por ahora no hago nada con el nivel de estudio porque en Accor no lo pasaron
    If NivEst = "N/A" Or EsNulo(NivEst) Then
        'StrSql = " SELECT nivnro FROM nivest WHERE nivdes = '" & NivEst & "'"
        'OpenRecordset StrSql, rs
        nro_nivest = 0
    Else
        'busco el primer novel de estudio, si no existe la creo
        StrSql = " SELECT * FROM nivest WHERE nivdesc = '" & NivEst & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            nro_nivest = rs!nivnro
        Else
            'creo una
            StrSql = " INSERT INTO nivest (nivdesc) VALUES ('" & NivEst & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_nivest = getLastIdentity(objConn, "nivest")
        End If
     End If

    'Tipo de Doc
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Tipo de Doc"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    TipDoc = Aux
    If TipDoc <> "N/A" And Not EsNulo(TipDoc) Then
        StrSql = " SELECT tidnro FROM tipodocu WHERE UPPER(tidsigla) = '" & UCase(TipDoc) & "'"
        If rs_Sql.State = adStateOpen Then rs_Sql.Close
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            Nro_TDocumento = rs_Sql!tidnro
        Else
            'busco la primera institucion, si no existe la creo
            StrSql = " SELECT * FROM institucion "
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                Nro_Institucion = rs!InstNro
            Else
                'creo una
                StrSql = " INSERT INTO institucion (instdes,instabre) VALUES ('NACIONAL','NAC')"
                objConn.Execute StrSql, , adExecuteNoRecords
                Nro_Institucion = getLastIdentity(objConn, "institucion")
            End If
            'creo el tipo de documento
            StrSql = " INSERT INTO tipodocu(tidnom,tidsigla,tidsist,instnro,tidunico) VALUES ('" & UCase(TipDoc) & "','" & UCase(TipDoc) & "',0," & Nro_Institucion & ",0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            Nro_TDocumento = getLastIdentity(objConn, "tipodocu")
        End If
    Else
        Nro_TDocumento = 0
    End If
    
    'Nro de Doc
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Nro de Doc"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    NroDoc = Aux
    If NroDoc = "N/A" Or EsNulo(NroDoc) Then
        NroDoc = "0"
    End If
    
    'Calle
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Calle"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Calle = Left(Aux, 250)
    IngresoDom = True
    If Calle = "N/A" Or EsNulo(Calle) Then
        Calle = ""
        IngresoDom = False
    End If
    
    'Nro
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nro"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Nro = Left(Aux, 8)
    If (Nro <> "N/A") And Not EsNulo(Nro) Then
        Nro_Nrodom = Nro
    Else
        Nro_Nrodom = "S/N"
    End If
    
    'Piso
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Piso"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Piso = Left(Aux, 8)
    If Piso = "N/A" Then
        Piso = ""
    End If
    
    'Depto
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Depto"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Depto = Left(Aux, 8)
    If Depto = "N/A" Then
        Depto = ""
    End If

    'Torre
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Torre"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Torre = Left(Aux, 8)
    If Torre = "N/A" Then
        Torre = ""
    End If
    
'    'Codigo postal
'    nrocolumna = nrocolumna + 1
'    Obligatorio = IngresoDom
'    Campoetiqueta = "Codigo postal"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'        RegError = RegError + 1
'        Exit Sub
'    End If
'    Cpostal = Left(aux, 12)
'    If Cpostal = "N/A" Then
'        Cpostal = ""
'    End If

    'Entre calles
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Entre calles"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Entre = Left(Aux, 80)
    If Entre = "N/A" Then
        Entre = ""
    End If

    'Barrio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Barrio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Barrio = Left(Aux, 30)
    If Barrio = "N/A" Then
        Barrio = ""
    End If

    'Localidad
    NroColumna = NroColumna + 1
    Obligatorio = IngresoDom
    Campoetiqueta = "Localidad"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    '19/03/2010 - Se cambio la longitud a 60
    'Localidad = Left(aux, 30)
    Localidad = Left(Aux, 60)
    
    'Provincia
    NroColumna = NroColumna + 1
    Obligatorio = IngresoDom
    Campoetiqueta = "Provincia"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Provincia = Aux
    
    'Pais
    NroColumna = NroColumna + 1
    Obligatorio = IngresoDom
    Campoetiqueta = "Pais"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Pais = Aux
    If Pais <> "N/A" Then
        Call ValidarPais(Pais, Nro_Pais)
    Else
        Nro_Pais = 0
    End If
    If (Provincia <> "N/A") And (Pais <> "N/A") Then
        Call ValidarProvincia(Provincia, Nro_Provincia, Nro_Pais)
    Else
        Nro_Provincia = 0
    End If
    If (Localidad <> "N/A") And (Provincia <> "N/A") And (Pais <> "N/A") Then
        Call ValidarLocalidad(Localidad, Nro_Localidad, Nro_Pais, Nro_Provincia)
    Else
        Nro_Localidad = 0
    End If
    If (IngresoDom = True) And (Nro_Localidad = 0) Then
        Texto = ": " & " - Debe Ingresar la Localidad."
        NroColumna = 23
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If (IngresoDom = True) And (Nro_Provincia = 0) Then
        Texto = ": " & " - Debe Ingresar la Provincia."
        NroColumna = 26
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If (IngresoDom = True) And (Nro_Pais = 0) Then
        Texto = ": " & " - Debe Ingresar la Pais."
        NroColumna = 27
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    
    
    '------------------------------------
    If (Provincia <> "N/A") And (Pais <> "N/A") Then
        Call ValidarProvincia(Provincia, Nro_Provincia, Nro_Pais)
    Else
        Nro_Provincia = 0
    End If
    If (Localidad <> "N/A") And (Provincia <> "N/A") And (Pais <> "N/A") Then
        Call ValidarLocalidad(Localidad, Nro_Localidad, Nro_Pais, Nro_Provincia)
    Else
        Nro_Localidad = 0
    End If
    
    
    '------------------------------------
    
    
    
    
    
    'Telefono
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Legajo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Telefono = Aux
    If Telefono = "N/A" Then
        Telefono = ""
    End If

    'Obra Social
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Obra Social"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    ObraSocial = Aux
    If ObraSocial = "N/A" Or ObraSocial = "" Then
        nro_osocial = 0
    Else
        StrSql = " SELECT ternro FROM osocial WHERE UPPER(osdesc) = '" & UCase(ObraSocial) & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            nro_osocial = rs!Ternro
        Else
            nro_osocial = 0
        End If
    End If

    'Plan de OS
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Plan de Obra Social"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    PlanOSocial = Aux
    If PlanOSocial = "N/A" Or PlanOSocial = "" Then
        nro_planos = 0
    Else
        If nro_osocial <> 0 Then
            StrSql = " SELECT plnro FROM planos WHERE UPPER(plnom) = '" & UCase(PlanOSocial) & "'"
            StrSql = StrSql & " AND osocial = " & nro_osocial
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                nro_planos = rs!plnro
            Else
                nro_planos = 0
            End If
        Else
            nro_planos = 0
        End If
    End If

    'Aviso Emergencia
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Aviso emergencia"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = UCase(Trim(Mid(strReg, pos1, pos2 - pos1 + 1)))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    AvisoEmer = Aux
    If AvisoEmer = "N/A" Or AvisoEmer = "NO" Then
        nro_aviso = 0
    Else
        nro_aviso = -1
    End If

    'Paga Salario fliar
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Paga salario familiar"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = UCase(Trim(Mid(strReg, pos1, pos2 - pos1 + 1)))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    PagaSalario = Aux
    If PagaSalario = "N/A" Or PagaSalario = "NO" Then
        nro_salario = 0
    Else
        nro_salario = -1
    End If

    'Ganancias
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Ganancias"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Ganancias = Aux
    If Ganancias = "N/A" Or Ganancias = "NO" Or Ganancias = "N" Then
        nro_gan = 0
    Else
        nro_gan = -1
    End If


    'Fecha de Inicio del vinculo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de Inicio de Vinculo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    fechaInicio = Aux
    If fechaInicio = "N/A" Or EsNulo(fechaInicio) Then
        fechaInicio = "Null"
    End If
    If fechaInicio = "Null" Then
        ' Busco la fecha de alta reconocida
         Campoetiqueta = " Fecha de alta reconocida del empleado "
         StrSql = "SELECT altfec FROM fases "
         StrSql = StrSql & " INNER JOIN empleado ON empleado.ternro = fases.empleado "
         StrSql = StrSql & " WHERE empleg = " & Legajo
         StrSql = StrSql & " AND fasrecofec = -1 "
         OpenRecordset StrSql, rs
         If rs.EOF Then
             Texto = ": " & " - Campo " & Campoetiqueta & " no esta configurado para el empleado "
             NroColumna = 1
             Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
             Exit Sub
         End If
         'Calculo la fecha de Inicio
         If IsDate(Fnac) Then
             If CDate(rs!altfec) > CDate(Fnac) Then
                     fechaInicio = rs!altfec
             Else
                     fechaInicio = Fnac
             End If
         Else
             Texto = ": " & " - Campo Fecha de Nacimiento del familiar no es válida.El formato es (dd/mm/aaaa) "
             NroColumna = 1
             Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
             Exit Sub
         End If
    End If


   'Fecha Vto
    NroColumna = NroColumna + 1
    Campoetiqueta = "Fecha de Vencimiento"
    pos1 = pos2 + 2
    pos2 = Len(strReg)
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    
    'Es obligatoria si el empleado paga salario familiar
    If nro_salario = -1 Then
        Obligatorio = True
    Else
        Obligatorio = False
    End If
    
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        Exit Sub
        If Not IsDate(Aux) Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor: " & Aux & " no tiene un formato de fecha válido (dd/mm/aaaa)."
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            Exit Sub
        End If
    End If
    fechaVto = Aux
    If fechaVto = "N/A" Or EsNulo(fechaVto) Then
        fechaVto = "Null"
    End If
    
    'Veo que la fecha de vencimiento no sea menor que la de inicio
    If IsDate(fechaVto) Then
        If CDate(fechaInicio) > CDate(fechaVto) Then
            Texto = ": " & " - Campo Fecha de vencimiento es mayor al de fecha de inicio."
            NroColumna = 1
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            Exit Sub
        Else
            fechaVto = ConvFecha(fechaVto)
        End If
    End If
    fechaInicio = ConvFecha(fechaInicio)
    Fnac = ConvFecha(Fnac)
    
' ==================================================================================

'Busco el empleado asociado
StrSql = "SELECT ternro FROM empleado WHERE empleg = " & Legajo
If rs.State = adStateOpen Then rs.Close
OpenRecordset StrSql, rs
If Not rs.EOF Then
    NroEmpleado = rs!Ternro
Else
    Texto = ": " & " - Campo " & Campoetiqueta & " El legajo no existe"
    NroColumna = 1
    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    RegError = RegError + 1
    Exit Sub
End If
  
StrSql = "SELECT * FROM tercero "
StrSql = StrSql & " INNER JOIN ter_tip ON tercero.ternro = ter_tip.ternro AND ter_tip.tipnro = 3 "
StrSql = StrSql & " INNER JOIN familiar ON familiar.ternro = tercero.ternro AND familiar.empleado = " & NroEmpleado
StrSql = StrSql & " WHERE ternom = '" & nombre & "'"
StrSql = StrSql & " AND terape = '" & Apellido & "'"
If rs.State = adStateOpen Then rs.Close
OpenRecordset StrSql, rs
If rs.EOF Then
    'Inserto el tercero asociado al familiar
    StrSql = " INSERT INTO tercero(ternom,terape,terfecnac,tersex,nacionalnro,paisnro,estcivnro)"
    StrSql = StrSql & " VALUES('" & nombre & "','" & Apellido & "'," & Fnac & "," & nro_Sexo & ","
    If nro_nacionalidad <> 0 Then
      StrSql = StrSql & nro_nacionalidad & ","
    Else
      StrSql = StrSql & "Null,"
    End If
    If nro_paisnac <> 0 Then
      StrSql = StrSql & nro_paisnac & ","
    Else
      StrSql = StrSql & "Null,"
    End If
    StrSql = StrSql & nro_estciv & ")"
    objConn.Execute StrSql, , adExecuteNoRecords

    NroTercero = getLastIdentity(objConn, "tercero")
    
    'Inserto el Registro correspondiente en ter_tip
    StrSql = " INSERT INTO ter_tip(ternro,tipnro) VALUES(" & NroTercero & ",3)"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    'Inserto el Familiar
    StrSql = " INSERT INTO familiar(empleado,ternro,parenro,famest,famestudia,famcernac,faminc,famsalario,famemergencia,famcargadgi,osocial,plnro,famternro,famfec,famfecvto)"
    StrSql = StrSql & " values(" & NroEmpleado & "," & NroTercero & "," & nro_paren & ",-1," & nro_estudia & ",0," & nro_disc & "," & nro_salario & "," & nro_aviso & "," & nro_gan & "," & nro_osocial & "," & nro_planos & ",0," & fechaInicio & "," & fechaVto & ")"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    'Inserto los estudios de familiar
    If nro_estudia = -1 Then
        StrSql = " INSERT INTO estudio_actual (ternro, nivnro) VALUES (" & NroTercero & "," & nro_nivest & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
    End If
    
    Texto = "Inserte el Familiar - " & Legajo & " - " & Apellido & " - " & nombre
    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
Else
    'Actualizo los datos
    StrSql = "UPDATE tercero SET "
    StrSql = StrSql & " terfecnac = " & Fnac
    StrSql = StrSql & " ,tersex = " & nro_Sexo
    If nro_nacionalidad <> 0 Then
        StrSql = StrSql & " ,nacionalnro = " & nro_nacionalidad
    End If
    If nro_paisnac <> 0 Then
        StrSql = StrSql & " ,paisnro = " & nro_paisnac
    End If
    StrSql = StrSql & " WHERE ternro = " & rs!Ternro
    objConn.Execute StrSql, , adExecuteNoRecords

    NroTercero = rs!Ternro

    StrSql = "UPDATE familiar SET "
    StrSql = StrSql & " parenro = " & nro_paren
    StrSql = StrSql & " ,famestudia = " & nro_estudia
    StrSql = StrSql & " ,faminc = " & nro_disc
    StrSql = StrSql & " ,famsalario = " & nro_salario
    StrSql = StrSql & " ,famemergencia = " & nro_aviso
    StrSql = StrSql & " ,famcargadgi = " & nro_gan
    StrSql = StrSql & " ,osocial = " & nro_osocial
    StrSql = StrSql & " ,plnro = " & nro_planos
    StrSql = StrSql & " ,famternro = 0"
    StrSql = StrSql & " WHERE empleado = " & NroEmpleado
    StrSql = StrSql & " AND ternro = " & NroTercero
    objConn.Execute StrSql, , adExecuteNoRecords

    If nro_estudia = -1 Then
        StrSql = " SELECT ternro FROM estudio_actual WHERE ternro = " & NroTercero
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
            StrSql = " INSERT INTO estudio_actual (ternro, nivnro) VALUES (" & NroTercero & "," & nro_nivest & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
        Else
            StrSql = " UPDATE estudio_actual SET nivnro = " & nro_nivest
            StrSql = StrSql & "WHERE ternro = " & NroTercero
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
    Else
        'StrSql = " DELETE FROM estudio_actual WHERE ternro = " & NroTercero
        'objConn.Execute StrSql, , adExecuteNoRecords
    End If
    
    Texto = "Familiar actualizado - " & Legajo & " - " & Apellido & " - " & nombre
    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
End If


'Inserto los Documentos
If NroDoc <> "" And NroDoc <> "N/A" And TipDoc <> "N/A" Then
    StrSql = "SELECT * FROM ter_doc WHERE ternro = " & NroTercero
    StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs
    If rs.EOF Then
        StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
        StrSql = StrSql & " VALUES(" & NroTercero & "," & Nro_TDocumento & ",'" & NroDoc & "')"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = ": " & "Inserte el Documento - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
    Else
        StrSql = " UPDATE ter_doc SET "
        StrSql = StrSql & " nrodoc = '" & NroDoc & "'"
        StrSql = StrSql & " WHERE ternro = " & NroTercero
        StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = ": " & "Documento actualizado - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
    End If
End If


'Inserto el Domicilio
If Not IngresoDom = False Then
    StrSql = "SELECT * FROM cabdom  "
    StrSql = StrSql & " WHERE tipnro = 1"
    StrSql = StrSql & " AND ternro = " & NroTercero
    StrSql = StrSql & " AND domdefault = -1"
    StrSql = StrSql & " AND tidonro = 2"
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs
    If rs.EOF Then
        StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
        StrSql = StrSql & " VALUES(1," & NroTercero & ",-1,2)"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        NroDom = getLastIdentity(objConn, "cabdom")
        
        StrSql = " INSERT INTO detdom(domnro,calle,nro,piso,oficdepto,torre,manzana,codigopostal,"
        StrSql = StrSql & "locnro,provnro,paisnro,barrio,partnro,zonanro) "
        StrSql = StrSql & " VALUES (" & NroDom & ",'" & Calle & "','" & Nro_Nrodom & "','" & Piso & "','"
        StrSql = StrSql & Depto & "','" & Torre & "','" & Manzana & "','" & Cpostal & "'," & Nro_Localidad & ","
        StrSql = StrSql & Nro_Provincia & "," & Nro_Pais & ",'" & Barrio & "'," & Nro_Partido & "," & Nro_Zona & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = ": " & "Domicilio Insertado - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)

        If Telefono <> "" Then
            StrSql = " INSERT INTO telefono(domnro,telnro,teldefault) "
            StrSql = StrSql & " VALUES(" & NroDom & ",'" & Telefono & "',-1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            Texto = ": " & "Inserte el Telefono Principal - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        End If
    Else
        StrSql = " UPDATE detdom SET "
        StrSql = StrSql & " calle =" & "'" & Calle & "'"
        StrSql = StrSql & ",nro =" & "'" & Nro_Nrodom & "'"
        StrSql = StrSql & ",piso =" & "'" & Piso & "'"
        StrSql = StrSql & ",oficdepto =" & "'" & Depto & "'"
        StrSql = StrSql & ",torre =" & "'" & Torre & "'"
        StrSql = StrSql & ",manzana =" & "'" & Manzana & "'"
        StrSql = StrSql & ",codigopostal =" & "'" & Cpostal & "'"
        StrSql = StrSql & ",entrecalles =" & "'" & Entre & "'"
        StrSql = StrSql & ",locnro =" & Nro_Localidad
        StrSql = StrSql & ",provnro =" & Nro_Provincia
        StrSql = StrSql & ",paisnro =" & Nro_Pais
        StrSql = StrSql & ", partnro = " & Nro_Partido
        StrSql = StrSql & ", zonanro =" & Nro_Zona
        StrSql = StrSql & " WHERE domnro = " & rs!domnro
        objConn.Execute StrSql, , adExecuteNoRecords
    
        Texto = ": " & "Domicilio Actualizado - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
    
        If Telefono <> "" Then
            StrSql = "SELECT * FROM telefono "
            StrSql = StrSql & " WHERE domnro =" & rs!domnro
            StrSql = StrSql & " AND telnro ='" & Telefono & "'"
            If rs_Tel.State = adStateOpen Then rs_Tel.Close
            OpenRecordset StrSql, rs_Tel
            If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & Telefono & "',0,-1,0,1)"
                objConn.Execute StrSql, , adExecuteNoRecords
                  
                Texto = ": " & "Inserte el Telefono Principal - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
    End If
End If

OK = True

'Cierro y libero
If rs.State = adStateOpen Then rs.Close
If rs_Tel.State = adStateOpen Then rs_Tel.Close
Set rs = Nothing
Set rs_Tel = Nothing


Exit Sub
SaltoLinea:
    Texto = ": " & Err.Description
    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, strReg)
    MyRollbackTrans
    OK = False
End Sub

Public Sub LineaModelo_609(ByVal strReg As String, ByRef OK As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de Empleados
' Autor      : FGZ
' Fecha      : 30/07/2004
' Ultima Mod.: 27/04/2005 - FGZ - Estandarizacion del proceso
'              27/06/2005 - FGZ - Fecha fin de contrato.
' ---------------------------------------------------------------------------------------------
Dim pos1            As Long
Dim pos2            As Long

Dim Legajo          As String   'LEGAJO                   -- empleado.empleg
Dim Apellido        As String   'APELLIDO                 -- empleado.terape y tercero.terape
Dim nombre          As String   'NOMBRE                   -- empleado.ternom y tercero.ternom
Dim Fnac            As String   'FNAC                     -- tercero.terfecna
Dim Nacionalidad    As String   'Nacionalidad             -- tercero.nacionalnro
Dim PaisNac         As String   'Pais de Nacimiento       -- tercero.paisnro
Dim Fing            As String   'Fec.Ingreso al Pais      -- terecro.terfecing
Dim EstCivil        As String   'Est.Civil                -- tercero.estcivnro
Dim AsigFam         As String   'Asignación Familiar      -- empleado.asigfam
Dim Sexo            As String   'Sexo                     -- tercero.tersex
Dim FAlta           As String   'Fec. de Alta             -- empleado.empfaltagr y fases.altfec
Dim Estudio         As String   'Estudia                  -- empleado.empestudia
Dim NivEst          As String   'Nivel de Estudio         -- empleado.nivnro
Dim Tdocu           As String   'Tipo Documento           -- ter_dpc.tidnro (DU)
Dim Ndocu           As String   'Nro. Documento           -- ter_doc.nrodoc
Dim Cuil            As String   'CUIL                     -- ter_doc.nrodoc (10)
Dim Expreo          As String   'Exámen Preocupacional    -- empleado.expreo
Dim Calle           As String   'Calle                    -- detdom.calle
Dim Nro             As String   'Número                   -- detdom.nro
Dim Piso            As String   'Piso                     -- detdom.piso
Dim Depto           As String   'Depto                    -- detdom.depto
Dim Torre           As String   'Torre                    -- detdom.torre
Dim Manzana         As String   'Manzana                  -- detdom.manzana
Dim Cpostal         As String   'Cpostal                  -- detdom.codigopostal
Dim Entre           As String   'Entre Calles             -- detdom.entrecalles
Dim Barrio          As String   'Barrio                   -- detdom.barrio
Dim Localidad       As String   'Localidad                -- detdom.locnro
Dim Partido         As String   'Partido                  -- detdom.partnro
Dim Zona            As String   'Zona                     -- detdom.zonanro
Dim Provincia       As String   'Provincia                -- detdom.provnro
Dim Pais            As String   'Pais                     -- detdom.paisnro
Dim Telefono        As String   'Telefono                 -- telefono.telnro
Dim TelLaboral        As String   'Telefono                 -- telefono.telnro
Dim TelCelular        As String   'Telefono                 -- telefono.telnro
Dim Email           As String   'E-mail                   -- empleado.empemail
Dim Sucursal        As String   'Sucursal                 -- his_estructura.estrnro
Dim Sector          As String   'Sector                   -- his_estructura.estrnro
Dim categoria       As String   'Categoria                -- his_estructura.estrnro
Dim Puesto          As String   'Puesto                   -- his_estructura.estrnro
Dim CCosto          As String   'C.Costo                  -- his_estructura.estrnro
Dim Gerencia        As String   'Gerencia                 -- his_estructura.estrnro
Dim Departamento    As String   'Departamento             -- his_estructura.estrnro
Dim Direccion       As String   'Direccion                -- his_estructura.estrnro
Dim CajaJub         As String   'Caja de Jubilacion       -- his_estructura.estrnro
Dim Sindicato       As String   'Sindicato                -- his_estructura.estrnro
Dim OSocialLey         As String   'Obra Social              -- his_estructura.estrnro
Dim PlanOSLey          As String   'Plan OS                  -- his_estructura.estrnro
Dim OSocialElegida         As String   'Obra Social              -- his_estructura.estrnro
Dim PlanOSElegida          As String   'Plan OS                  -- his_estructura.estrnro
Dim Contrato        As String   'Contrato                 -- his_estructura.estrnro
Dim Convenio        As String   'Convenio                 -- his_estructura.estrnro
Dim LPago           As String   'Lugar de Pago            -- his_estructura.estrnro
Dim RegHorario      As String   'Regimen Horario          -- his_estructura.estrnro
Dim FormaLiq        As String   'Forma de Liquidacion     -- his_estructura.estrnro
Dim FormaPago       As String   'Forma de Pago            -- formapago.fpagdescabr
Dim SucBanco        As String   'Sucursal del Banco       -- ctabancaria.ctabsuc
Dim BancoPago       As String   'Banco Pago               -- his_estructura.estrnro, formapago.fpagbanc (siempre y cuando el Banco sea <> 0) y ctabancaria.banco
Dim NroCuenta       As String   'Nro. Cuenta              -- ctabancario.ctabnro
Dim NroCuentaAcreditacionE As String
Dim Actividad       As String   'Actividad                -- his_estructura.estrnro
Dim CondSIJP        As String   'Condicion SIJP           -- his_estructura.estrnro
Dim SitRev          As String   'Sit. de Revista SIJP     -- his_estructura.estrnro
Dim ModCont         As String   'Mod. de Contrat. SIJP    -- his_estructura.estrnro
Dim ART             As String   'ART                      -- his_estructura.estrnro
Dim Estado          As String   'Estado                   -- empleado.empest y fases.estado
Dim CausaBaja       As String   'Causa de Baja            -- fases.caunro
Dim FBaja           As String   'Fecha de Baja            -- fases.bajfec
Dim Empresa         As String   'Empresa                  -- his_estructura.estrnro
Dim Agencia         As String   'Agencia                  -- his_estructura.estrnro
Dim ModOrg          As String   'Empresa                  -- his_estructura.estrnro
Dim OSL             As String   'Empresa                  -- his_estructura.estrnro
Dim OSE             As String   'Empresa                  -- his_estructura.estrnro
Dim PlanOdon        As String   'Empresa                  -- his_estructura.estrnro
Dim Locacion        As String   'Empresa                  -- his_estructura.estrnro
Dim Area            As String   'Empresa                  -- his_estructura.estrnro
Dim SubDepto        As String   'Empresa                  -- his_estructura.estrnro
Dim NroCBU          As String   'Empresa                  -- his_estructura.estrnro
Dim Empremu         As String   'Remuneración del empleado
Dim GrupoSeguridad  As String   'Grupo de Seguridad
Dim Nro_GrupoSeguridad  As Long 'Grupo de Seguridad       -- his_estructura.estrnro
Dim FFinContrato    As String
Dim Fecha_FinContrato As String
Dim Reporta_a       As String
Dim Nro_Reporta_a   As Long

Dim Ternro As Long

Dim NroTercero          As Long

Dim Nro_Legajo          As Long
Dim Nro_TDocumento      As Long
Dim nro_nivest          As Long
Dim nro_estudio         As Long

Dim Nro_Nrodom          As String

Dim Nro_Barrio          As Long
Dim Nro_Localidad       As Long
Dim Nro_Partido         As Long
Dim Nro_Zona            As Long
Dim Nro_Provincia       As Long
Dim Nro_Pais            As Long
Dim nro_paisnac         As Long

Dim nro_sucursal        As Long
Dim nro_sector          As Long
Dim nro_categoria       As Long
Dim nro_puesto          As Long
Dim nro_ccosto          As Long
Dim nro_gerencia        As Long
Dim nro_cajajub         As Long
Dim nro_sindicato       As Long
Dim nro_osocial_ley     As Long
Dim nro_planos_ley      As Long
Dim nro_osocial_elegida As Long
Dim nro_planos_elegida  As Long
Dim nro_contrato        As Long
Dim nro_convenio        As Long
Dim nro_reghorario      As Long
Dim nro_formaliq        As Long
Dim nro_bancopago       As Long
Dim nro_actividad       As Long
Dim nro_sitrev          As Long
Dim nro_modcont         As Long
Dim nro_art             As Long
Dim nro_departamento    As Long
Dim nro_direccion       As Long
Dim nro_lpago           As Long
Dim nro_condsijp        As Long
Dim nro_formapago       As Long
Dim nro_causabaja       As Long
Dim nro_empresa         As Long
Dim nro_Agencia         As Long
Dim NroDom              As Long
Dim nro_osl             As Long
Dim nro_odon            As Long
Dim nro_ose             As Long
Dim nro_locacion        As Long
Dim nro_area            As Long
Dim nro_SubDepto        As Long
Dim nro_empremu         As Long

Dim nro_estcivil        As Long
Dim nro_nacionalidad    As Long

Dim F_Nacimiento        As String
Dim F_Fallecimiento     As String
Dim F_Alta              As String
Dim F_Baja              As String
Dim F_AltaStr           As String
Dim F_BajaStr           As String
Dim F_Ingreso           As String

Dim Inserto_estr        As Boolean

Dim ter_sucursal        As Long
Dim Ter_Empresa         As Long
Dim ter_agencia         As Long
Dim ter_cajajub         As Long
Dim ter_sindicato       As Long
Dim ter_osocial_ley     As Long
Dim ter_osocial_elegida As Long
Dim ter_bancopago       As Long
Dim ter_art             As Long
Dim ter_sexo            As Long
Dim ter_estudio         As Long
Dim ter_estado          As Long

Dim fpgo_bancaria       As Long

Dim rs As New ADODB.Recordset
Dim rs_Sql As New ADODB.Recordset
Dim rs_Empleado As New ADODB.Recordset
Dim rs_Tel As New ADODB.Recordset
Dim rs_repl As New ADODB.Recordset


Dim SucDesc             As Boolean   'Sucursal                 -- his_estructura
Dim SecDesc             As Boolean   'Sector                   -- his_estructura
Dim CatDesc             As Boolean   'Categoria                -- his_estructura
Dim PueDesc             As Boolean   'Puesto                   -- his_estructura
Dim CCoDesc             As Boolean   'C.Costo                  -- his_estructura
Dim GerDesc             As Boolean   'Gerencia                 -- his_estructura
Dim DepDesc             As Boolean   'Departamento             -- his_estructura
Dim DirDesc             As Boolean   'Direccion                -- his_estructura
Dim CaJDesc             As Boolean   'Caja de Jubilacion       --
Dim SinDesc             As Boolean   'Sindicato                -- his_estructura
Dim OSoElegidaDesc      As Boolean   'Obra Social              -- his_estructura
Dim PoSElegidaDesc      As Boolean   'Plan OS                  -- his_estructura
Dim OSoLeyDesc          As Boolean   'Obra Social              -- his_estructura
Dim PoSLeyDesc          As Boolean   'Plan OS                  -- his_estructura
Dim CotDesc             As Boolean   'Contrato                 -- his_estructura
Dim CovDesc             As Boolean   'Convenio                 -- his_estructura
Dim LPaDesc             As Boolean   'Lugar de Pago            -- his_estructura
Dim RegDesc             As Boolean   'Regimen Horario          -- his_estructura
Dim FLiDesc             As Boolean   'Forma de Liquidacion     -- his_estructura
Dim FPaDesc             As Boolean      'Forma de Pago            -- his_estructura
Dim BcoDesc             As Boolean      'Banco Pago               --
Dim ActDesc             As Boolean      'Actividad                --
Dim CSJDesc             As Boolean      'Condicion SIJP           --
Dim SReDesc             As Boolean      'Sit. de Revista SIJP     --
Dim MCoDesc             As Boolean      'Mod. de Contrat. SIJP    --
Dim ARTDesc             As Boolean      'ART                      --
Dim EmpDesc             As Boolean      'Empresa                  --
Dim AgenDesc            As Boolean      'Agencia                  --
Dim OSLDesc             As Boolean      'Empresa                  --
Dim POdoDesc             As Boolean     'Empresa                  --
Dim OSEDesc             As Boolean      'Empresa                  --
Dim LocDesc             As Boolean      'Empresa                  --
Dim AreaDesc             As Boolean     'Empresa                  --
Dim SubDepDesc             As Boolean   'Empresa                  --

Dim IngresoDom          As Boolean

Dim rs_tdoc As New ADODB.Recordset
Dim rs_emp  As New ADODB.Recordset
Dim rs_tpl  As New ADODB.Recordset
Dim rs_leg  As New ADODB.Recordset

Dim Nroadtemplate As Long
Dim Nro_Institucion As Long

Dim Sigue As Boolean
Dim ExisteLeg As Boolean
Dim CalculaLegajo As Boolean
Dim Valida_CUIL As Boolean


    On Error GoTo SaltoLinea


    ' True indica que se hace por Descripcion. False por Codigo Externo

    SucDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    SecDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CatDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    PueDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CCoDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    GerDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    DepDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    DirDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CaJDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    SinDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    OSoElegidaDesc = True ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    PoSElegidaDesc = True ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    OSoLeyDesc = True   ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    PoSLeyDesc = True   ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CotDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CovDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    LPaDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    RegDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    FLiDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    FPaDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    BcoDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    ActDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CSJDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    SReDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    MCoDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    ARTDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    EmpDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    AgenDesc = True     ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    OSLDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    POdoDesc = True     ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    OSEDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    LocDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    AreaDesc = True     ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    SubDepDesc = True   ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    
    
    'FGZ - 21/02/2009 - reviso si debo validar el CUIL o no --------------------
    Valida_CUIL = True
    StrSql = " SELECT tidvalida FROM tipodocu WHERE tidnro = 10"
    OpenRecordset StrSql, rs_Sql
    If Not rs_Sql.EOF Then
        If Not EsNulo(rs_Sql!tidvalida) Then
            Valida_CUIL = True
        Else
            Valida_CUIL = False
        End If
    Else
        Valida_CUIL = False
    End If
    'FGZ - 21/02/2009 - reviso si debo validar el CUIL o no --------------------
    
    
    Sigue = True 'Indica que si en el archivo viene mas de una vez un empleado, le crea las fases
    ExisteLeg = False
    'RegLeidos = RegLeidos + 1
    LineaCarga = LineaCarga + 1
    
    Flog.writeline
    FlogE.writeline
    FlogP.writeline
    
    'Legajo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Legajo"
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Legajo = Aux
    'Legajo = Mid(strReg, pos1, pos2 - pos1 + 1)
    If Legajo = "N/A" Or EsNulo(Legajo) Then
        CalculaLegajo = True
    Else
        StrSql = "SELECT * FROM empleado WHERE empleado.empleg = " & Legajo
        OpenRecordset StrSql, rs_emp
        If (Not rs_emp.EOF) Then
            If (Not Sigue) Then
                Texto = ": " & " - El Empleado ya Existe."
                NroColumna = 1
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                'Ok = False
                'RegError = RegError + 1
                'Exit Sub
            Else
                NroTercero = rs_emp!Ternro
                ExisteLeg = True
            End If
        End If
    End If
    
    'Apellido
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Apellido"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Apellido = Left(Aux, 25)
    
    'Nombre
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nombre"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    nombre = Left(Aux, 25)
    If (Apellido = "" Or Apellido = "N/A") And (nombre = "" Or nombre = "N/A") Then
        Texto = ": " & " - Debe Ingresar un Nombre y Apellido."
        NroColumna = 2
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    
    'Fecha de Nacimiento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de Nacimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Fnac = Aux
    If Fnac = "N/A" Then
       F_Nacimiento = "Null"
    Else
       F_Nacimiento = ConvFecha(Fnac)
    End If
    
    'Pais de Nacimiento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Pais de Nacimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    PaisNac = Aux
    If PaisNac <> "N/A" Then
        StrSql = " SELECT paisnro FROM pais WHERE UPPER(paisdesc) = '" & UCase(PaisNac) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_paisnac = rs_Sql!Paisnro
        Else
            StrSql = " INSERT INTO pais(paisdesc,paisdef) VALUES ('" & UCase(PaisNac) & "',0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_paisnac = getLastIdentity(objConn, "pais")
        End If
    Else
        nro_paisnac = 0
    End If
    
    'Nacionalidad
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nacionalidad"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Nacionalidad = Aux
    If Nacionalidad <> "N/A" Then
        StrSql = " SELECT nacionalnro FROM nacionalidad WHERE UPPER(nacionaldes) = '" & UCase(Nacionalidad) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_nacionalidad = rs_Sql!nacionalnro
        Else
            StrSql = " INSERT INTO nacionalidad(nacionaldes) VALUES ('" & UCase(Nacionalidad) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_nacionalidad = getLastIdentity(objConn, "nacionalidad")
        End If
    Else
        nro_nacionalidad = 0
    End If
    If nro_nacionalidad = 0 Then
        Texto = ": " & " - La Nacionalidad no Existe."
        NroColumna = 6
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    
    'Fecha de Ingreso al Pais
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de Ingreso al Pais"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Fing = Aux
    If (Fing = "N/A") Or EsNulo(Fing) Then
        F_Ingreso = "Null"
    Else
        F_Ingreso = ConvFecha(Fing)
    End If
    
    'Estado Civil
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estado Civil"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    EstCivil = Left(Aux, 30)
    If EstCivil <> "N/A" And Not EsNulo(EstCivil) Then
        StrSql = " SELECT estcivnro FROM estcivil WHERE UPPER(estcivdesabr) = '" & UCase(EstCivil) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_estcivil = rs_Sql!estcivnro
        Else
            StrSql = " INSERT INTO estcivil(estcivdesabr) VALUES ('" & UCase(EstCivil) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_estcivil = getLastIdentity(objConn, "estcivil")
        End If
    Else
        nro_estcivil = 0
    End If
    If nro_estcivil = 0 Then
        Texto = ": " & " - El Estado Civil no Existe."
        NroColumna = 8
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    '----------------------------------------------------------------------------------------
    '                           Agregado por DNN EL 09/03/2009
    'Asignaciones familiares
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Asignación Familiar"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    If (Aux = "N/A" Or EsNulo(Aux)) Then
        AsigFam = "0"
    Else
        AsigFam = Aux
    End If
    '-------------------------------------------------------------------------------------------
    
    'Sexo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sexo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Sexo = UCase(Aux)
    If (Sexo = "M") Or (Sexo = "-1") Or (Sexo = "MASCULINO") Then
        ter_sexo = -1
    Else
        ter_sexo = 0
    End If
                                                            
    'Fecha de alta
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de alta"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    FAlta = Aux
    If FAlta = "N/A" Or EsNulo(FAlta) Then
        F_Alta = "Null"
        Texto = ": " & " - La Fecha de Alta es Obligatoria."
        NroColumna = 10
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    Else
        F_AltaStr = FAlta
        F_Alta = ConvFecha(FAlta)
    End If
   
'    'Estudia?
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Estudia?"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'        RegError = RegError + 1
'        Exit Sub
'    End If
'    Estudio = UCase(aux)
'    If Estudio <> "N/A" And Estudio <> "NO" Then
'        If Estudio = "SI" Then
'            ter_estudio = -1
'        Else
'            ter_estudio = 0
'        End If
'    Else
'        ter_estudio = 0
'    End If
'
'    'Nivel de estudio
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Nivel de estudio"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'        RegError = RegError + 1
'        Exit Sub
'    End If
'    NivEst = Left(aux, 40)
'    If NivEst <> "N/A" Then
'        StrSql = " SELECT nivnro FROM nivest WHERE UPPER(nivdesc) = '" & UCase(NivEst) & "'"
'        OpenRecordset StrSql, rs_Sql
'        If Not rs_Sql.EOF Then
'            nro_nivest = rs_Sql!nivnro
'        Else
'            StrSql = " INSERT INTO nivest(nivdesc,nivsist,nivobligatorio,nivestfli) VALUES ('" & UCase(NivEst) & "',-1,0,-1)"
'            objConn.Execute StrSql, , adExecuteNoRecords
'            nro_nivest = getLastIdentity(objConn, "nivest")
'        End If
'    Else
'        nro_nivest = 0
'    End If
    
    'Tipo de Doc
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tipo de Doc"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Tdocu = Left(Aux, 8)
    If Tdocu <> "N/A" Then
        StrSql = " SELECT tidnro FROM tipodocu WHERE UPPER(tidsigla) = '" & UCase(Tdocu) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            Nro_TDocumento = rs_Sql!tidnro
        Else
            'busco la primera institucion, si no existe la creo
            StrSql = " SELECT * FROM institucion "
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                Nro_Institucion = rs!InstNro
            Else
                'creo una
                StrSql = " INSERT INTO institucion (instdes,instabre) VALUES ('NACIONAL','NAC')"
                objConn.Execute StrSql, , adExecuteNoRecords
                Nro_Institucion = getLastIdentity(objConn, "institucion")
            End If
            'creo el tipo de documento
            StrSql = " INSERT INTO tipodocu(tidnom,tidsigla,tidsist,instnro,tidunico) VALUES ('" & UCase(Tdocu) & "','" & UCase(Tdocu) & "',0," & Nro_Institucion & ",0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            Nro_TDocumento = getLastIdentity(objConn, "tipodocu")
        End If
    Else
        Nro_TDocumento = 0
    End If
    If Nro_TDocumento = 0 Then
        Texto = ": " & " - El Tipo de Documento no Existe."
        NroColumna = 13
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Nro de Documento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nro de Documento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Ndocu = Left(Aux, 30)
    If Ndocu = "N/A" Then
        Ndocu = ""
    End If
    
    StrSql = "SELECT * FROM empleado "
    StrSql = StrSql & " INNER JOIN ter_doc ON ter_doc.ternro = empleado.ternro "
    StrSql = StrSql & " WHERE ter_doc.tidnro = " & Nro_TDocumento & " AND ter_doc.nrodoc = '" & Ndocu & "'"
    OpenRecordset StrSql, rs_tdoc
    If (Not rs_tdoc.EOF) Then
        If (Not Sigue) Then
            Texto = ": " & " - Ese Tipo y Numero de Documento estan Asignados a otro Empleado."
            NroColumna = 14
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            'Ok = False
            RegError = RegError + 1
            Exit Sub
        Else
            NroTercero = rs_tdoc!Ternro
            ExisteLeg = True
            Texto = ": " & " - Empleado: " & Legajo & " - Ese Tipo y Numero de Documento estan Asignados a otro Empleado."
            NroColumna = 14
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        End If
    End If
    
    'CUIL
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "CUIL"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Cuil = Replace(Left(Aux, 30), "-", "")
    If Cuil = "N/A" Or EsNulo(Cuil) Then
        'FGZ - 23/02/2009 - validacion de cuil configurable ---------------
        If Valida_CUIL Then
            Cuil = Generar_Cuil(Ndocu, CBool(ter_sexo))
            'Cuil = CalcularCUIL(Ndocu)
            If Cuil = 0 Then
                Texto = ": " & " - Campo " & Campoetiqueta & " no se pudo generar automaticamente " & Ndocu
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                RegError = RegError + 1
                Exit Sub
            End If
        Else
            Cuil = ""
        End If
        'FGZ - 23/02/2009 - validacion de cuil configurable ---------------
    Else
        If Valida_CUIL Then
            OK = Cuil_Valido605(Cuil, Ndocu, Texto, Tdocu, nro_nacionalidad)
            If Not OK Then
                OK = True
                If Texto <> "El número de documento ingresado no coincide con el número de cuil. Se cambiará CUIL acorde al número de documento." Then
                    Texto = "El CUIL no es valido"
                End If
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                'Cuil = CalcularCUIL(Ndocu)
                Cuil = Generar_Cuil(Ndocu, CBool(ter_sexo))
            End If
        End If
    End If
    'FGZ - 23/02/2009 - validacion de cuil configurable ---------------
    If Cuil = "" And Not Valida_CUIL Then
        Cuil = ""
    Else
        Cuil = Left(Cuil, 2) & "-" & Mid(Cuil, 3, 8) & "-" & Right(Cuil, 1)
    End If
    'FGZ - 23/02/2009 - validacion de cuil configurable ---------------
    
    
    '----------------------------------------------------------------------------------------
    '                           Agregado por DNN EL 09/03/2009
    'Exámen preocupacional
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Exámen Preocupacional"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    If (Aux = "N/A" Or EsNulo(Aux)) Then
        Expreo = "0"
    Else
        Expreo = "-1"
    End If
    '-------------------------------------------------------------------------------------------
    
    
    
    
    
    
    'Hasta Aqui los Datos Obligatorios del Empleado
    IngresoDom = True
        
    'Calle
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Calle"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Calle = Left(Aux, 250)
    
    If Calle = "N/A" Then
        Calle = ""
        IngresoDom = False
    End If
    
    'Nro
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Nro"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Nro = Left(Aux, 8)
    If (Nro <> "N/A") Then
        Nro_Nrodom = Nro
    Else
        Nro_Nrodom = 0
    End If
    
    'Piso
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Piso"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Piso = Left(Aux, 8)
    If Piso = "N/A" Then
        Piso = ""
    End If
    
    'Departamento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Departamento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Depto = Left(Aux, 8)
    If Depto = "N/A" Then
        Depto = ""
    End If

    'Torre
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Torre"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Torre = Left(Aux, 8)
    If Torre = "N/A" Then
        Torre = ""
    End If
    
    'Manzana
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Manzana"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Manzana = Left(Aux, 8)
    If Manzana = "N/A" Then
        Manzana = ""
    End If

    'Codigo Postal
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Codigo Postal"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Cpostal = Left(Aux, 12)
    If Cpostal = "N/A" Then
        Cpostal = ""
    End If

    'Entre calles
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Entre calles"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Entre = Left(Aux, 80)
    If Entre = "N/A" Then
        Entre = ""
    End If

    'Barrio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Barrio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Barrio = Left(Aux, 30)
    If Barrio = "N/A" Then
        Barrio = ""
    End If

    'Localidad
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Localidad"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Localidad = Left(Aux, 60)
    
    'Partido
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Partido"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Partido = Left(Aux, 30)
    
    'Zona
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Zona"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Zona = Left(Aux, 60)
    
    'Provincia
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Provincia"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Provincia = Left(Aux, 20)
    
    'Pais
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Pais"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Pais = Left(Aux, 20)
    If Pais <> "N/A" Then
        Call ValidarPais(Pais, Nro_Pais)
    Else
        Nro_Pais = 0
    End If
    If Provincia <> "N/A" Then
        Call ValidarProvincia(Provincia, Nro_Provincia, Nro_Pais)
    Else
        Nro_Provincia = 0
    End If
    If Localidad <> "N/A" Then
        Call ValidarLocalidad(Localidad, Nro_Localidad, Nro_Pais, Nro_Provincia)
    Else
        Nro_Localidad = 0
    End If
    If Partido <> "N/A" Then
        Call ValidarPartido(Partido, Nro_Partido)
    Else
        Nro_Partido = 0
    End If
    If Zona <> "N/A" Then
        Call ValidarZona(Zona, Nro_Zona, Nro_Provincia)
    Else
        Nro_Zona = 0
    End If
    If (IngresoDom = True) And (Nro_Localidad = 0) Then
        Texto = ": " & " - Debe Ingresar la Localidad."
        NroColumna = 25
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    If (IngresoDom = True) And (Nro_Provincia = 0) Then
        Texto = ": " & " - Debe Ingresar la Provincia."
        NroColumna = 28
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    If (IngresoDom = True) And (Nro_Pais = 0) Then
        Texto = ": " & " - Debe Ingresar la Pais."
        NroColumna = 29
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    '    'Tel Particular
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Tel Particular"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
'    Telefono = Left(aux, 20)
'    If Telefono = "N/A" Then
'        Telefono = ""
'    End If
'
'    'Tel Laboral
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Tel Laboral"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
'    TelLaboral = Left(aux, 20)
'    If TelLaboral = "N/A" Then
'        TelLaboral = ""
'    End If
'
'    'Tel Celular
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Tel Celular"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
'    TelCelular = Left(aux, 20)
'    If TelCelular = "N/A" Then
'        TelCelular = ""
'    End If
'
'    'Email
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Email"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
'    Email = Left(aux, 100)
'    If Email = "N/A" Then
'        Email = ""
'    End If
'
'    'Sucursal
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Sucursal"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
'    Sucursal = aux
'    ' Validacion y Creacion de la Sucursal (junto con sus Complementos)
'    If Sucursal <> "N/A" Then
'        If SucDesc Then
'            Call ValidaEstructura(1, Sucursal, nro_sucursal, Inserto_estr)
'        Else
'            Call ValidaEstructuraCodExt(1, Sucursal, nro_sucursal, Inserto_estr)
'        End If
'        Call CreaTercero(10, Sucursal, ter_sucursal)
'
'        If Inserto_estr Then
'            Call CreaComplemento(1, ter_sucursal, nro_sucursal, Sucursal)
'            Inserto_estr = False
'        End If
'    Else
'        nro_sucursal = 0
'    End If

    'Sector
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sector"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Sector = Aux
    ' Validacion y Creacion del Sector
    If Sector <> "N/A" Then
        If SecDesc Then
            Call ValidaEstructura(2, Sector, nro_sector, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(2, Sector, nro_sector, Inserto_estr)
        End If
    Else
        nro_sector = 0
    End If

    'Convenio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Convenio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Convenio = Aux
    ' Validacion, Creacion del Convenio
    If Convenio <> "N/A" Then
        If CovDesc Then
            Call ValidaEstructura(19, Convenio, nro_convenio, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(19, Convenio, nro_convenio, Inserto_estr)
        End If
        
        If Inserto_estr Then
            Call CreaComplemento(19, 0, nro_convenio, Convenio)
            Inserto_estr = False
        End If
    Else
        nro_convenio = 0
    End If
    
    
    'Categoria
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Categoria"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    categoria = Aux
    ' Validacion, Creacion de la Categoria
    If (categoria <> "N/A" And nro_convenio <> 0) Then
        If CatDesc Then
            'Call ValidaEstructura(3, categoria, nro_categoria, Inserto_estr)
            Call ValidaCategoria(3, categoria, nro_convenio, nro_categoria, Inserto_estr)
            
        Else
            'Call ValidaEstructuraCodExt(3, categoria, nro_categoria, Inserto_estr)
            Call ValidaCategoriaCodExt(3, categoria, nro_convenio, nro_categoria, Inserto_estr)
        End If
    Else
        nro_categoria = 0
    End If
    
'    'Puesto
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Puesto"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
'    Puesto = aux
'    'Validacion y Creacion del Puesto (junto con sus Complementos)
'    If Puesto <> "N/A" Then
'        If PueDesc Then
'            Call ValidaEstructura(4, Puesto, nro_puesto, Inserto_estr)
'        Else
'            Call ValidaEstructuraCodExt(4, Puesto, nro_puesto, Inserto_estr)
'        End If
'
'        If Inserto_estr Then
'            Call CreaComplemento(4, 0, nro_puesto, Puesto)
'            Inserto_estr = False
'        End If
'    Else
'        nro_puesto = 0
'    End If
'
'    'Centro de Costo
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Centro de Costo"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
'    CCosto = aux
'    ' Validacion y Creacion del Centro de Costo
'    If CCosto <> "N/A" Then
'        If CCoDesc Then
'            Call ValidaEstructura(5, CCosto, nro_ccosto, Inserto_estr)
'        Else
'            Call ValidaEstructuraCodExt(5, CCosto, nro_ccosto, Inserto_estr)
'        End If
'    Else
'        nro_ccosto = 0
'    End If
'
'    'Gerencia
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Gerencia"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
'    Gerencia = aux
'    ' Validacion y Creacion de la Gerencia
'    If Gerencia <> "N/A" Then
'        If GerDesc Then
'            Call ValidaEstructura(6, Gerencia, nro_gerencia, Inserto_estr)
'        Else
'            Call ValidaEstructuraCodExt(6, Gerencia, nro_gerencia, Inserto_estr)
'        End If
'    Else
'        nro_gerencia = 0
'    End If
'
'
'    'Departamento
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Departamento"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
'    Departamento = aux
'    ' Validacion y Creacion del Departamento
'    If Departamento <> "N/A" Then
'        If DepDesc Then
'            Call ValidaEstructura(9, Departamento, nro_departamento, Inserto_estr)
'        Else
'            Call ValidaEstructuraCodExt(9, Departamento, nro_departamento, Inserto_estr)
'        End If
'    Else
'        nro_departamento = 0
'    End If
'
'    'Direccion
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Direccion"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
'    Direccion = aux
'    ' Validacion y Creacion de direccion
'    If Direccion <> "N/A" Then
'        If DirDesc Then
'            Call ValidaEstructura(35, Direccion, nro_direccion, Inserto_estr)
'        Else
'            Call ValidaEstructuraCodExt(35, Direccion, nro_direccion, Inserto_estr)
'        End If
'    Else
'        nro_direccion = 0
'    End If
'
'
'    'Caja de Jubilacion
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Caja de Jubilacion"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
'    CajaJub = aux
'    ' Validacion y Creacion de la Caja de Jubilacion
'    If CajaJub <> "N/A" Then
'        If CaJDesc Then
'            Call ValidaEstructura(15, CajaJub, nro_cajajub, Inserto_estr)
'        Else
'            Call ValidaEstructuraCodExt(15, CajaJub, nro_cajajub, Inserto_estr)
'        End If
'        Call CreaTercero(6, CajaJub, ter_cajajub)
'
'        If Inserto_estr Then
'            Call CreaComplemento(15, ter_cajajub, nro_cajajub, CajaJub)
'        End If
'    Else
'        nro_cajajub = 0
'    End If
'
'    'Sindicato
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Sindicato"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
'    Sindicato = aux
'    ' Validacion y Creacion del Sindicato
'    If Sindicato <> "N/A" Then
'        If SinDesc Then
'            Call ValidaEstructura(16, Sindicato, nro_sindicato, Inserto_estr)
'        Else
'            Call ValidaEstructuraCodExt(16, Sindicato, nro_sindicato, Inserto_estr)
'        End If
'        Call CreaTercero(5, Sindicato, ter_sindicato)
'
'        If Inserto_estr Then
'            Call CreaComplemento(16, ter_sindicato, nro_sindicato, Sindicato)
'        End If
'    Else
'        nro_sindicato = 0
'    End If
'
'
'    'Obra social por Ley
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Obra social por Ley"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
'    OSocialLey = aux
'    ' Validacion y Creacion de la Obra Social por Ley
'    If OSocialLey <> "N/A" Then
'        If OSoLeyDesc Then
'            Call ValidaEstructura(24, OSocialLey, nro_osocial_ley, Inserto_estr)
'        Else
'            Call ValidaEstructuraCodExt(24, OSocialLey, nro_osocial_ley, Inserto_estr)
'        End If
'        Call CreaTercero(4, OSocialLey, ter_osocial_ley)
'
'        If Inserto_estr Then
'            Call CreaComplemento(24, ter_osocial_ley, nro_osocial_ley, OSocialLey)
'        Else
'            StrSql = " SELECT origen FROM replica_estr WHERE estrnro = " & nro_osocial_ley
'            OpenRecordset StrSql, rs_repl
'
'            If Not rs_repl.EOF Then
'                ter_osocial_ley = rs_repl!Origen
'                rs_repl.Close
'            End If
'
'        End If
'    Else
'        nro_osocial_ley = 0
'    End If
'
'
'    'Plan de OS por Ley
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Plan de Obra social por Ley"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
'    PlanOSLey = aux
'    ' Validacion y Creacion del Plan de Obra Social por Ley
'    If (PlanOSLey <> "N/A" And nro_osocial_ley <> 0) Then
'        If PoSLeyDesc Then
'            Call ValidaEstructura(25, PlanOSLey, nro_planos_ley, Inserto_estr)
'        Else
'            Call ValidaEstructuraCodExt(25, PlanOSLey, nro_planos_ley, Inserto_estr)
'        End If
'
'        If Inserto_estr Then
'            Call CreaComplemento(25, ter_osocial_ley, nro_planos_ley, PlanOSLey)
'            Inserto_estr = False
'        End If
'    Else
'        nro_planos_ley = 0
'    End If
'
'    'OS Elegida
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Obra Social elegida"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
'    OSocialElegida = aux
'    ' Validacion y Creacion de la Obra Social Elegida
'    If OSocialElegida <> "N/A" Then
'        If OSoElegidaDesc Then
'            Call ValidaEstructura(17, OSocialElegida, nro_osocial_elegida, Inserto_estr)
'        Else
'            Call ValidaEstructuraCodExt(17, OSocialElegida, nro_osocial_elegida, Inserto_estr)
'        End If
'        Call CreaTercero(4, OSocialElegida, ter_osocial_elegida)
'
'        If Inserto_estr Then
'            Call CreaComplemento(17, ter_osocial_elegida, nro_osocial_elegida, OSocialElegida)
'        Else
'            StrSql = " SELECT origen FROM replica_estr WHERE estrnro = " & nro_osocial_elegida
'            OpenRecordset StrSql, rs_Sql
'            ter_osocial_elegida = rs_Sql!Origen
'            rs_Sql.Close
'        End If
'    Else
'        nro_osocial_elegida = 0
'    End If
'
'    'Plan de OS Elegida
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Plan Obra Social elegida"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
'    PlanOSElegida = aux
'    ' Validacion y Creacion del Plan de Obra Social Elegida
'    If (PlanOSElegida <> "N/A" And nro_osocial_elegida <> 0) Then
'        If PoSElegidaDesc Then
'            Call ValidaEstructura(23, PlanOSElegida, nro_planos_elegida, Inserto_estr)
'        Else
'            Call ValidaEstructuraCodExt(23, PlanOSElegida, nro_planos_elegida, Inserto_estr)
'        End If
'
'        If Inserto_estr Then
'            Call CreaComplemento(23, ter_osocial_elegida, nro_planos_elegida, PlanOSElegida)
'            Inserto_estr = False
'        End If
'    Else
'        nro_planos_elegida = 0
'    End If
'
'
'    'Contrato
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Contrato"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
'    Contrato = aux
'    ' Validacion y Creacion del Contrato
'    If Contrato <> "N/A" Then
'        If CotDesc Then
'            Call ValidaEstructura(18, Contrato, nro_contrato, Inserto_estr)
'        Else
'            Call ValidaEstructuraCodExt(18, Contrato, nro_contrato, Inserto_estr)
'        End If
'
'        If Inserto_estr Then
'            Call CreaComplemento(18, 0, nro_contrato, Contrato)
'            Inserto_estr = False
'        End If
'    Else
'        nro_contrato = 0
'    End If
'
'    'Fecha de fin de contrato
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Fecha de fin de contrato"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
'    FFinContrato = aux
'    If FFinContrato = "N/A" Or EsNulo(FFinContrato) Then
'        Fecha_FinContrato = "Null"
'    Else
'        Fecha_FinContrato = ConvFecha(FFinContrato)
'    End If
'
'    'Lugar de pago
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Lugar de pago"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
'    LPago = aux
'    ' Validacion y Creacion del Lugar de Pago
'    If LPago <> "N/A" Then
'        If LPaDesc Then
'            Call ValidaEstructura(20, LPago, nro_lpago, Inserto_estr)
'        Else
'            Call ValidaEstructuraCodExt(20, LPago, nro_lpago, Inserto_estr)
'        End If
'    Else
'        nro_lpago = 0
'    End If
'
'    'Regimen Horario
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Regimen Horario"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
'    RegHorario = aux
'    If RegHorario <> "N/A" Then
'        If RegDesc Then
'            Call ValidaEstructura(21, RegHorario, nro_reghorario, Inserto_estr)
'        Else
'            Call ValidaEstructuraCodExt(21, RegHorario, nro_reghorario, Inserto_estr)
'        End If
'    Else
'        nro_reghorario = 0
'    End If
'
'    'Forma de Liquidacion
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Forma de Liquidacion"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
'    FormaLiq = aux
'    If FormaLiq <> "N/A" Then
'        If FLiDesc Then
'            Call ValidaEstructura(22, FormaLiq, nro_formaliq, Inserto_estr)
'        Else
'            Call ValidaEstructuraCodExt(22, FormaLiq, nro_formaliq, Inserto_estr)
'        End If
'        ' Agregado por MB 10/08/2006
'        If Inserto_estr Then
'            Call CreaComplemento(22, 0, nro_formaliq, FormaLiq)
'            Inserto_estr = False
'        End If
'    Else
'        nro_formaliq = 0
'    End If

    'Forma de Pago
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Forma de Pago"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    FormaPago = Aux
    If FormaPago <> "N/A" Then
        StrSql = " SELECT fpagnro FROM formapago WHERE fpagdescabr = '" & FormaPago & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_formapago = rs_Sql!fpagnro
        Else
            StrSql = " INSERT INTO formapago(fpagdescabr,fpagbanc,acunro,monnro) VALUES ('" & FormaPago & "',0,6,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            nro_formapago = getLastIdentity(objConn, "formapago")
        End If
    Else
        nro_formapago = 0
    End If
    
'    'Banco de Pago
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Banco de Pago"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
'    BancoPago = aux
'    If BancoPago <> "N/A" Then
'        If BcoDesc Then
'            Call ValidaEstructura(41, BancoPago, nro_bancopago, Inserto_estr)
'        Else
'            Call ValidaEstructuraCodExt(41, BancoPago, nro_bancopago, Inserto_estr)
'        End If
'        Call CreaTercero(13, BancoPago, ter_bancopago)
'
'        If Inserto_estr Then
'            Call CreaComplemento(41, ter_bancopago, nro_bancopago, BancoPago)
'        End If
'        fpgo_bancaria = -1
'    Else
'        nro_bancopago = 0
'        fpgo_bancaria = 0
'    End If
'
'    'Nro de cuenta
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Nro de cuenta"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
'    NroCuenta = aux
'    If NroCuenta = "N/A" Then
'        NroCuenta = ""
'    End If
'
'    'CBU
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "CBU"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
'    NroCBU = aux
'    If NroCBU = "N/A" Then
'        NroCBU = ""
'    End If
'
'    'Sucursal del banco
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Sucursal del banco"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
'    SucBanco = aux
'    If SucBanco = "N/A" Then
'        SucBanco = ""
'    Else
'        SucBanco = Left(SucBanco, 10)
'    End If
'
'
'    'Nro de cuenta de acreditacion empresa
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Nro de cuenta de acreditacion empresa"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
'    NroCuentaAcreditacionE = aux
'    If NroCuentaAcreditacionE = "N/A" Or EsNulo(NroCuentaAcreditacionE) Then
'        NroCuentaAcreditacionE = ""
'    Else
'        StrSql = "SELECT * FROM ctabancaria WHERE cbnro ='" & NroCuentaAcreditacionE & "'"
'        If rs.State = adStateOpen Then rs.Close
'        OpenRecordset StrSql, rs
'        If rs.EOF Then
'            Texto = ": " & " - Nro de cuenta de acreditacion empresa no existe."
'            nrocolumna = 59
'            Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'            NroCuentaAcreditacionE = ""
'        End If
'    End If
'
'    'Actividad SIJP
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Actividad SIJP"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
'    Actividad = aux
'    If Actividad <> "N/A" Then
'        If ActDesc Then
'            Call ValidaEstructura(29, Actividad, nro_actividad, Inserto_estr)
'        Else
'            Call ValidaEstructuraCodExt(29, Actividad, nro_actividad, Inserto_estr)
'        End If
'    Else
'        nro_actividad = 0
'    End If
'
'    'Condicion SIJP
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Condicion SIJP"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
'    CondSIJP = aux
'    If CondSIJP <> "N/A" And Not EsNulo(CondSIJP) Then
'        If CSJDesc Then
'            Call ValidaEstructura(31, CondSIJP, nro_condsijp, Inserto_estr)
'        Else
'            Call ValidaEstructuraCodExt(31, CondSIJP, nro_condsijp, Inserto_estr)
'        End If
'    Else
'        nro_condsijp = 0
'    End If
'
'    'Situacion de Revista SIJP
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Situacion de Revista SIJP"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'    End If
'    SitRev = aux
'    If SitRev <> "N/A" And Not EsNulo(SitRev) Then
'        If SReDesc Then
'            Call ValidaEstructura(30, SitRev, nro_sitrev, Inserto_estr)
'        Else
'            Call ValidaEstructuraCodExt(30, SitRev, nro_sitrev, Inserto_estr)
'        End If
'    Else
'        nro_sitrev = 0
'    End If
'
'
'    'ART
'    nrocolumna = nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "ART"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
'        RegError = RegError + 1
'        Exit Sub
'    End If
'    ART = aux
'    If ART <> "N/A" And Not EsNulo(ART) Then
'        If ARTDesc Then
'            Call ValidaEstructura(40, ART, nro_art, Inserto_estr)
'        Else
'            Call ValidaEstructuraCodExt(40, ART, nro_art, Inserto_estr)
'        End If
'        Call CreaTercero(8, ART, ter_art)
'
'        If Inserto_estr Then
'            Call CreaComplemento(40, ter_art, nro_art, ART)
'        End If
'    Else
'        nro_art = 0
'    End If
    
    'Estado del empleado
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estado del empleado"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Estado = Aux
    If UCase(Estado) = "ACTIVO" Then
        ter_estado = -1
    Else
        ter_estado = 0
    End If
    
    'Causa de baja
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Causa de baja"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    CausaBaja = Aux
    If Not EsNulo(CausaBaja) And CausaBaja <> "N/A" Then
        StrSql = " SELECT caunro FROM causa WHERE caudes = '" & CausaBaja & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_causabaja = rs_Sql!caunro
        Else
            StrSql = " INSERT INTO causa(caudes,causist,caudesvin,empnro) VALUES ('" & CausaBaja & "',0,-1,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            nro_causabaja = getLastIdentity(objConn, "causa")
        End If
    Else
        nro_causabaja = 0
    End If
    
    'Fecha de baja
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de baja"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    FBaja = Aux
    If EsNulo(FBaja) Or FBaja = "N/A" Then
        F_Baja = "Null"
    Else
        F_BajaStr = FBaja
        F_Baja = ConvFecha(FBaja)
    End If
    
    'Empresa
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Empresa"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Empresa = Aux
    Else
        pos2 = Len(strReg)
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Empresa = Aux
    End If
    If Empresa <> "N/A" Or EsNulo(Empresa) Then
        If EmpDesc Then
            Call ValidaEstructura(10, Empresa, nro_empresa, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(10, Empresa, nro_empresa, Inserto_estr)
        End If
        Call CreaTercero(10, Empresa, Ter_Empresa)
        
        If Inserto_estr Then
            Call CreaComplemento(10, Ter_Empresa, nro_empresa, Empresa)
        End If
    Else
        nro_empresa = 0
    End If
    

    'Agencia
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Agencia"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Agencia = Aux
    Else
        pos2 = Len(strReg)
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Agencia = Aux
    End If
    If Agencia <> "N/A" Or EsNulo(Agencia) Then
        If AgenDesc Then
            Call ValidaEstructura(28, Agencia, nro_Agencia, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(28, Agencia, nro_Agencia, Inserto_estr)
        End If
        Call CreaTercero(28, Agencia, ter_agencia)
        
        If Inserto_estr Then
            Call CreaComplemento(28, ter_agencia, nro_Agencia, Agencia)
        End If
    Else
        nro_Agencia = 0
    End If


''    'Remuneración del Empleado
''    nrocolumna = nrocolumna + 1
''    Obligatorio = False
''    Campoetiqueta = "Remuneración del Empleado"
''    pos1 = pos2 + 2
''    pos2 = InStr(pos1, strReg, separador) - 1
''    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
''    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
''        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
''        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
''        RegError = RegError + 1
''        Exit Sub
''    End If
''    Empremu = aux
''    If Empremu = "N/A" Or EsNulo(Empremu) Then
''        Empremu = "Null"
''    End If
''
''    'Modelo de Organizacion
''    nrocolumna = nrocolumna + 1
''    Obligatorio = False
''    Campoetiqueta = "Modelo de Organizacion"
''    pos1 = pos2 + 2
''    pos2 = InStr(pos1, strReg, separador) - 1
''    If pos2 > 0 Then
''        aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
''        If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
''            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
''            Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
''            RegError = RegError + 1
''            Exit Sub
''        End If
''        ModOrg = aux
''        If ModOrg = "N/A" Or EsNulo(ModOrg) Then
''            nro_ModOrg = 0
''        Else
''            StrSql = "SELECT * FROM adptemplate WHERE tplatedesabr = '" & ModOrg & "'"
''            OpenRecordset StrSql, rs_tpl
''            If rs_tpl.EOF Then
''                StrSql = "INSERT INTO adptemplate (tplatedesabr,tplatedefault) VALUES ('" & ModOrg & "',-1)"
''                objConn.Execute StrSql, , adExecuteNoRecords
''                nro_ModOrg = getLastIdentity(objConn, "adptemplate")
''            Else
''                nro_ModOrg = rs_tpl!tplatenro
''            End If
''        End If
''    Else
''        nro_ModOrg = 0
''    End If
''
''    'Reporta_a  campo empleado.empreporta va el tercero
''    nrocolumna = nrocolumna + 1
''    Obligatorio = False
''    Campoetiqueta = "Reporta_a"
''    pos1 = pos2 + 2
''    pos2 = InStr(pos1, strReg, separador) - 1
''    If pos2 > 0 Then
''        aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
''        If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
''            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
''            Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
''            RegError = RegError + 1
''            Exit Sub
''        End If
''        Reporta_a = aux
''        If Not EsNulo(Reporta_a) And Reporta_a <> "N/A" Then
''            If IsNumeric(Reporta_a) Then
''                StrSql = "SELECT * FROM empleado WHERE empleado.empleg = " & Reporta_a
''                If rs_emp.State = adStateOpen Then rs_emp.Close
''                OpenRecordset StrSql, rs_emp
''                If (Not rs_emp.EOF) Then
''                    Nro_Reporta_a = rs_emp!ternro
''                Else
''                    Nro_Reporta_a = 0
''                    Texto = ": " & "El Empleado " & Reporta_a & " no existe."
''                    Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
''                End If
''            Else
''                Nro_Reporta_a = 0
''                Texto = "El valor no es numérico."
''                Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
''            End If
''        End If
''    Else
''        Nro_Reporta_a = 0
''        'no es obligatorio
''    End If
''    If rs_emp.State = adStateOpen Then rs_emp.Close
''
''
''    'Grupo de Seguridad
''    nrocolumna = nrocolumna + 1
''    Obligatorio = False
''    Campoetiqueta = "Grupo de Seguridad"
''    pos1 = pos2 + 2
''    pos2 = Len(strReg) 'InStr(pos1, strReg, Separador) - 1
''    If pos2 > 0 Then
''        aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
''        If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
''            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
''            Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
''            RegError = RegError + 1
''            Exit Sub
''        End If
''        GrupoSeguridad = aux
''        If GrupoSeguridad <> "N/A" And Not EsNulo(GrupoSeguridad) Then
''            Call ValidaEstructura(7, GrupoSeguridad, Nro_GrupoSeguridad, Inserto_estr)
''        Else
''            Nro_GrupoSeguridad = 0
''        End If
''    Else
''        Nro_GrupoSeguridad = 0
''    End If
'Fin lectura de campos
' =====================================================================================================

'JPB - Inicializo el pass+perfil (l_ess_Pass_Estandar y l_ess_Perfil_Estandar) por defecto del Autogestion en el caso que este habilitado el confper 12
'--------------------------------
Call ESS_Configuracion_Default
'-------------------------------

  ' Inserto el Tercero
  
  If F_Nacimiento = "Null" Then
    F_Nacimiento = "''"
  End If
  If F_Ingreso = "Null" Then
    F_Ingreso = "''"
  End If
  
  If CalculaLegajo Then
    Call CalcularLegajo(nro_empresa, Legajo)
  End If

    If Not ExisteLeg Then
        StrSql = " INSERT INTO tercero(ternom,terape,terfecnac,tersex,terestciv,estcivnro,nacionalnro,paisnro,terfecing)"
        StrSql = StrSql & " VALUES('" & nombre & "','" & Apellido & "'," & F_Nacimiento & "," & ter_sexo & "," & nro_estcivil & "," & nro_estcivil & ","
        If nro_nacionalidad <> 0 Then
            StrSql = StrSql & nro_nacionalidad & ","
        Else
            StrSql = StrSql & "null,"
        End If
        If nro_paisnac <> 0 Then
            StrSql = StrSql & nro_paisnac & ","
        Else
            StrSql = StrSql & "null,"
        End If
        StrSql = StrSql & F_Ingreso & ")"
        objConn.Execute StrSql, , adExecuteNoRecords

        NroTercero = getLastIdentity(objConn, "tercero")
        
        Texto = ": " & "Codigo de Tercero = " & NroTercero
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
    Else
        StrSql = " UPDATE tercero SET "
        StrSql = StrSql & " ternom = " & "'" & nombre & "'"
        StrSql = StrSql & ", terape = " & "'" & Apellido & "'"
        StrSql = StrSql & ", terfecnac = " & F_Nacimiento
        StrSql = StrSql & ", tersex = " & ter_sexo
        StrSql = StrSql & ", terestciv =" & nro_estcivil
        StrSql = StrSql & ", estcivnro =" & "'" & nro_estcivil & "'"
        If nro_nacionalidad <> 0 Then
            StrSql = StrSql & ", nacionalnro =" & nro_nacionalidad
        End If
        StrSql = StrSql & ", terfecing =" & F_Ingreso
        If nro_paisnac <> 0 Then
            StrSql = StrSql & ", paisnro =" & nro_paisnac
        End If
        StrSql = StrSql & " WHERE ternro = " & NroTercero
        objConn.Execute StrSql, , adExecuteNoRecords
      
        Texto = ": " & " - Empleado: " & Legajo & " - Ese Empleado ya existe en la base. Datos de tercero actualizados"
        NroColumna = 1
        Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    
    If Not ExisteLeg Then
'        StrSql = " INSERT INTO empleado(empleg,empfecalta,empfecbaja,empest,empfaltagr,empfbajaprev,"
'        StrSql = StrSql & "ternro,nivnro,empestudia,terape,ternom,empinterno,empemail,"
'        StrSql = StrSql & "empnro,tplatenro,empremu"
        StrSql = " INSERT INTO empleado(empleg,empfecalta,empfecbaja,empest,empfaltagr,"
        StrSql = StrSql & "ternro,terape,ternom,empinterno,"
        StrSql = StrSql & "empnro,asigfam,expreo"
        'If Nro_Reporta_a <> 0 Then
        '    StrSql = StrSql & ",empreporta"
        'End If
        
        'JPB - Si esta habilitado el confper 12 asigno el pass+perfil por defecto al empleado
        '------------------------------------------------------------------------------------
        If (l_ess_Pass_Estandar <> "") And (l_ess_Perfil_Estandar <> "") Then
             StrSql = StrSql & ",empessactivo,emppass,perfnro"
        End If
        '------------------------------------------------------------------------------------
        
      
        StrSql = StrSql & ") VALUES("
'        StrSql = StrSql & Legajo & "," & F_Alta & "," & F_Baja & "," & ter_estado & "," & F_Alta & "," & Fecha_FinContrato & ","
        StrSql = StrSql & Legajo & "," & F_Alta & "," & F_Baja & "," & ter_estado & "," & F_Alta & ","
'        StrSql = StrSql & NroTercero & "," & nro_nivest & "," & ter_estudio & ",'" & Apellido & "','"
        StrSql = StrSql & NroTercero & ",'" & Apellido & "','"
'        StrSql = StrSql & nombre & "',Null,'" & Email & "',1," & nro_ModOrg & "," & Empremu
        StrSql = StrSql & nombre & "',Null" & ",1," & AsigFam & "," & Expreo
'        If Nro_Reporta_a <> 0 Then
'            StrSql = StrSql & "," & Nro_Reporta_a
'        End If
        
        'JPB - Si esta habilitado el confper 12 asigno el pass+perfil por defecto al empleado
        '------------------------------------------------------------------------------------
        If (l_ess_Pass_Estandar <> "") And (l_ess_Perfil_Estandar <> "") Then
             StrSql = StrSql & ",-1,'" & l_ess_Pass_Estandar & "'," & l_ess_Perfil_Estandar
        End If
        '------------------------------------------------------------------------------------

        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = ": " & "Empleado insertado - " & Legajo & " - " & Apellido & " - " & nombre
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
    Else
        StrSql = " UPDATE empleado SET "
        StrSql = StrSql & " empleg = " & Legajo
        StrSql = StrSql & " ,empfecalta = " & F_Alta
        StrSql = StrSql & " ,empfecbaja = " & F_Baja
        'StrSql = StrSql & " ,empfbajaprev = " & Fecha_FinContrato
        StrSql = StrSql & " ,empest = " & ter_estado
        StrSql = StrSql & " ,empfaltagr = " & F_Alta
        'StrSql = StrSql & " ,nivnro = " & nro_nivest
        'StrSql = StrSql & " ,empestudia = " & ter_estudio
        StrSql = StrSql & " ,terape = " & "'" & Apellido & "'"
        StrSql = StrSql & " ,ternom = " & "'" & nombre & "'"
        'StrSql = StrSql & " ,empemail = " & "'" & Email & "'"
        StrSql = StrSql & " ,empnro = 1 "
        'StrSql = StrSql & " ,tplatenro =" & nro_ModOrg
        'StrSql = StrSql & " ,Empremu =" & Empremu
        'If Nro_Reporta_a <> 0 Then
        '    StrSql = StrSql & ", empreporta =" & Nro_Reporta_a
        'End If
        StrSql = StrSql & " ,asigfam = " & AsigFam
        StrSql = StrSql & " ,expreo = " & Expreo
        
        'JPB - Si esta habilitado el confper 12 asigno el pass+perfil por defecto al empleado
        '------------------------------------------------------------------------------------
        If (l_ess_Pass_Estandar <> "") And (l_ess_Perfil_Estandar <> "") Then
            StrSql = StrSql & ", empessactivo = -1"
            StrSql = StrSql & ", emppass = '" & l_ess_Pass_Estandar & "'"
            StrSql = StrSql & ", perfnro =" & l_ess_Perfil_Estandar
        End If
        '------------------------------------------------------------------------------------
        
        StrSql = StrSql & " WHERE ternro = " & NroTercero
        objConn.Execute StrSql, , adExecuteNoRecords
    
        Texto = ": " & "Empleado Actualizado - " & Legajo & " - " & Apellido & " - " & nombre
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
    End If
    
    ' Inserto el Registro correspondiente en ter_tip
    If Not ExisteLeg Then
        StrSql = " INSERT INTO ter_tip(ternro,tipnro) VALUES(" & NroTercero & ",1)"
        objConn.Execute StrSql, , adExecuteNoRecords
    End If

' Inserto los Documentos
    If Not ExisteLeg Then
        If Nro_TDocumento <> 0 Then
            StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
            StrSql = StrSql & " VALUES(" & NroTercero & "," & Nro_TDocumento & ",'" & Ndocu & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            Texto = ": " & "Inserte el Documento - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        End If
    Else
        If Nro_TDocumento <> 0 Then
            StrSql = "SELECT * FROM ter_doc WHERE ternro = " & NroTercero
            StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If rs.EOF Then
                StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
                StrSql = StrSql & " VALUES(" & NroTercero & "," & Nro_TDocumento & ",'" & Ndocu & "')"
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = ": " & "Inserte el Documento - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            Else
                StrSql = " UPDATE ter_doc SET "
                StrSql = StrSql & " nrodoc = '" & Ndocu & "'"
                StrSql = StrSql & " WHERE ternro = " & NroTercero
                StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = Texto = ": " & "Documento actualizado - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
    End If
  
    If Not ExisteLeg Then
        If Cuil <> "" Then
            StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
            StrSql = StrSql & " VALUES(" & NroTercero & ",10,'" & Cuil & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            Texto = ": " & "Inserte el CUIL - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        End If
    Else
        If Cuil <> "" Then
            StrSql = "SELECT * FROM ter_doc WHERE ternro = " & NroTercero
            StrSql = StrSql & " AND tidnro = 10 "
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If rs.EOF Then
                StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
                StrSql = StrSql & " VALUES(" & NroTercero & ",10,'" & Cuil & "')"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Inserte el CUIL - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            Else
                StrSql = " UPDATE ter_doc SET "
                StrSql = StrSql & " nrodoc = '" & Cuil & "'"
                StrSql = StrSql & " WHERE ternro = " & NroTercero
                StrSql = StrSql & " AND tidnro = 10"
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = Texto = ": " & "CUIL actualizado - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
    End If

' Inserto el Domicilio
  If rs.State = adStateOpen Then
    rs.Close
  End If
  
  If Not ExisteLeg Then
    If (Nro_Localidad <> 0 And Nro_Provincia <> 0 And Nro_Pais <> 0) Then
        StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
        StrSql = StrSql & " VALUES(1," & NroTercero & ",-1,2)"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        NroDom = getLastIdentity(objConn, "cabdom")
      
        StrSql = " INSERT INTO detdom(domnro,calle,nro,piso,oficdepto,torre,manzana,codigopostal,entrecalles,"
        StrSql = StrSql & "locnro,provnro,paisnro,barrio,partnro,zonanro) "
        StrSql = StrSql & " VALUES (" & NroDom & ",'" & Calle & "','" & Nro_Nrodom & "','" & Piso & "','"
        StrSql = StrSql & Depto & "','" & Torre & "','" & Manzana & "','" & Cpostal & "','" & Entre & "'," & Nro_Localidad & ","
        StrSql = StrSql & Nro_Provincia & "," & Nro_Pais & ",'" & Barrio & "'," & Nro_Partido & "," & Nro_Zona & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
      
        Texto = ": " & "Inserte el Domicilio - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        
'        If Telefono <> "" Then
'            StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular) "
'            StrSql = StrSql & " VALUES(" & NroDom & ",'" & Telefono & "',0,-1,0)"
'            objConn.Execute StrSql, , adExecuteNoRecords
'
'            Texto = ": " & "Inserte el Telefono Principal - "
'            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
'        End If
'        If TelLaboral <> "" Then
'            StrSql = "SELECT * FROM telefono "
'            StrSql = StrSql & " WHERE domnro =" & NroDom
'            StrSql = StrSql & " AND telnro ='" & TelLaboral & "'"
'            If rs_Tel.State = adStateOpen Then rs_Tel.Close
'            OpenRecordset StrSql, rs_Tel
'            If rs_Tel.EOF Then
'                StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular) "
'                StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelLaboral & "',0,0,0)"
'                objConn.Execute StrSql, , adExecuteNoRecords
'
'                Texto = ": " & "Inserte el Telefono Laboral - "
'                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
'            End If
'        End If
'        If TelCelular <> "" Then
'            StrSql = "SELECT * FROM telefono "
'            StrSql = StrSql & " WHERE domnro =" & NroDom
'            StrSql = StrSql & " AND telnro ='" & TelCelular & "'"
'            If rs_Tel.State = adStateOpen Then rs_Tel.Close
'            OpenRecordset StrSql, rs_Tel
'            If rs_Tel.EOF Then
'                StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular) "
'                StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelCelular & "',0,0,-1)"
'                objConn.Execute StrSql, , adExecuteNoRecords
'                Texto = ": " & "Inserte el Telefono Celular - "
'                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
'            End If
'        End If
    End If
  Else
    If (Nro_Localidad <> 0 And Nro_Provincia <> 0 And Nro_Pais <> 0) Then
        StrSql = "SELECT * FROM cabdom  "
        StrSql = StrSql & " WHERE tipnro = 1"
        StrSql = StrSql & " AND ternro = " & NroTercero
        StrSql = StrSql & " AND domdefault = -1"
        StrSql = StrSql & " AND tidonro = 2"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
          StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
          StrSql = StrSql & " VALUES(1," & NroTercero & ",-1,2)"
          objConn.Execute StrSql, , adExecuteNoRecords
          
          NroDom = getLastIdentity(objConn, "cabdom")
        
          StrSql = " INSERT INTO detdom(domnro,calle,nro,piso,oficdepto,torre,manzana,codigopostal,entrecalles,"
          StrSql = StrSql & "locnro,provnro,paisnro,barrio,partnro,zonanro) "
          StrSql = StrSql & " VALUES (" & NroDom & ",'" & Calle & "','" & Nro_Nrodom & "','" & Piso & "','"
          StrSql = StrSql & Depto & "','" & Torre & "','" & Manzana & "','" & Cpostal & "','" & Entre & "'," & Nro_Localidad & ","
          StrSql = StrSql & Nro_Provincia & "," & Nro_Pais & ",'" & Barrio & "'," & Nro_Partido & "," & Nro_Zona & ")"
          objConn.Execute StrSql, , adExecuteNoRecords
        
          Texto = ": " & "Inserte el Domicilio - "
          Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
          
'          If Telefono <> "" Then
'              StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular) "
'              StrSql = StrSql & " VALUES(" & NroDom & ",'" & Telefono & "',0,-1,0)"
'              objConn.Execute StrSql, , adExecuteNoRecords
'
'              Texto = ": " & "Inserte el Telefono Principal - "
'              Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
'          End If
'          If TelLaboral <> "" Then
'              StrSql = "SELECT * FROM telefono "
'              StrSql = StrSql & " WHERE domnro =" & NroDom
'              StrSql = StrSql & " AND telnro ='" & TelLaboral & "'"
'              If rs_Tel.State = adStateOpen Then rs_Tel.Close
'              OpenRecordset StrSql, rs_Tel
'              If rs_Tel.EOF Then
'                  StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular) "
'                  StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelLaboral & "',0,0,0)"
'                  objConn.Execute StrSql, , adExecuteNoRecords
'
'                  Texto = ": " & "Inserte el Telefono Laboral - "
'                  Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
'              End If
'          End If
'          If TelCelular <> "" Then
'              StrSql = "SELECT * FROM telefono "
'              StrSql = StrSql & " WHERE domnro =" & NroDom
'              StrSql = StrSql & " AND telnro ='" & TelCelular & "'"
'              If rs_Tel.State = adStateOpen Then rs_Tel.Close
'              OpenRecordset StrSql, rs_Tel
'              If rs_Tel.EOF Then
'                  StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular) "
'                  StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelCelular & "',0,0,-1)"
'                  objConn.Execute StrSql, , adExecuteNoRecords
'                  Texto = ": " & "Inserte el Telefono Celular - "
'                  Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
'              End If
'          End If
        Else
            StrSql = " UPDATE detdom SET "
            StrSql = StrSql & " calle =" & "'" & Calle & "'"
            StrSql = StrSql & ",nro =" & "'" & Nro_Nrodom & "'"
            StrSql = StrSql & ",piso =" & "'" & Piso & "'"
            StrSql = StrSql & ",oficdepto =" & "'" & Depto & "'"
            StrSql = StrSql & ",torre =" & "'" & Torre & "'"
            StrSql = StrSql & ",manzana =" & "'" & Manzana & "'"
            StrSql = StrSql & ",codigopostal =" & "'" & Cpostal & "'"
            StrSql = StrSql & ",entrecalles =" & "'" & Entre & "'"
            StrSql = StrSql & ",locnro =" & Nro_Localidad
            StrSql = StrSql & ",provnro =" & Nro_Provincia
            StrSql = StrSql & ",paisnro =" & Nro_Pais
            StrSql = StrSql & ", partnro = " & Nro_Partido
            StrSql = StrSql & ", zonanro =" & Nro_Zona
            StrSql = StrSql & " WHERE domnro = " & rs!domnro
            objConn.Execute StrSql, , adExecuteNoRecords
        
            Texto = ": " & "Domicilio Actualizado - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        
'            If Telefono <> "" Then
'                StrSql = "SELECT * FROM telefono "
'                StrSql = StrSql & " WHERE domnro =" & rs!domnro
'                StrSql = StrSql & " AND telnro ='" & Telefono & "'"
'                If rs_Tel.State = adStateOpen Then rs_Tel.Close
'                OpenRecordset StrSql, rs_Tel
'                If rs_Tel.EOF Then
'                    StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular) "
'                    StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & Telefono & "',0,-1,0)"
'                    objConn.Execute StrSql, , adExecuteNoRecords
'
'                    Texto = ": " & "Inserte el Telefono Principal - "
'                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
'                End If
'            End If
'            If TelLaboral <> "" Then
'                StrSql = "SELECT * FROM telefono "
'                StrSql = StrSql & " WHERE domnro =" & rs!domnro
'                StrSql = StrSql & " AND telnro ='" & TelLaboral & "'"
'                If rs_Tel.State = adStateOpen Then rs_Tel.Close
'                OpenRecordset StrSql, rs_Tel
'                If rs_Tel.EOF Then
'                    StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular) "
'                    StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & TelLaboral & "',0,0,0)"
'                    objConn.Execute StrSql, , adExecuteNoRecords
'
'                    Texto = ": " & "Inserte el Telefono Laboral - "
'                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
'                End If
'            End If
'            If TelCelular <> "" Then
'                StrSql = "SELECT * FROM telefono "
'                StrSql = StrSql & " WHERE domnro =" & rs!domnro
'                StrSql = StrSql & " AND telnro ='" & TelCelular & "'"
'                If rs_Tel.State = adStateOpen Then rs_Tel.Close
'                OpenRecordset StrSql, rs_Tel
'                If rs_Tel.EOF Then
'                    StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular) "
'                    StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & TelCelular & "',0,0,-1)"
'                    objConn.Execute StrSql, , adExecuteNoRecords
'                    Texto = ": " & "Inserte el Telefono Celular - "
'                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
'                End If
'            End If
        End If
    End If
  End If
  
  If Not ExisteLeg Then
    ' Inserto las Fases
    StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
    StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
    If nro_causabaja <> 0 Then
      StrSql = StrSql & nro_causabaja
    Else
      StrSql = StrSql & "null"
    End If
    StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
    objConn.Execute StrSql, , adExecuteNoRecords
    
  Else
    StrSql = "SELECT * FROM fases WHERE estado = -1 AND sueldo = -1 AND vacaciones = -1 AND indemnizacion = -1 AND real = -1 AND empleado = " & NroTercero
    OpenRecordset StrSql, rs
    If rs.EOF Then
        StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
        StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
        If nro_causabaja <> 0 Then
          StrSql = StrSql & nro_causabaja
        Else
          StrSql = StrSql & "null"
        End If
        StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
        objConn.Execute StrSql, , adExecuteNoRecords
    Else
        StrSql = " UPDATE fases SET "
        StrSql = StrSql & " altfec =" & F_Alta
        StrSql = StrSql & ",bajfec =" & F_Baja
        StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
        objConn.Execute StrSql, , adExecuteNoRecords
    
        Texto = ": " & "Fase Actualizada - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
    End If
  End If
  
  'Inserto la cuenta bancaria
    If Not ExisteLeg Then
        If (nro_formapago <> 0 And ter_bancopago <> 0 And NroCuenta <> "") Then
                StrSql = " INSERT INTO ctabancaria (ternro,fpagnro,banco,ctabestado,"
                StrSql = StrSql & "ctabsuc,ctabnro,ctabporc,ctabcbu"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",ctabacred"
                End If
                StrSql = StrSql & ") VALUES ("
                StrSql = StrSql & NroTercero & "," & nro_formapago & "," & ter_bancopago & ","
                StrSql = StrSql & "-1,'" & Left(SucBanco, 10) & "','" & NroCuenta & "',100,'" & NroCBU & "'"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",'" & NroCuentaAcreditacionE & "'"
                End If
                StrSql = StrSql & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Inserte la Cuenta Bancaria - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
        End If
    Else
        If (nro_formapago <> 0 And ter_bancopago <> 0 And NroCuenta <> "") Then
            StrSql = "SELECT * FROM ctabancaria"
            StrSql = StrSql & " WHERE ctabancaria.ternro =" & NroTercero
            StrSql = StrSql & " AND ctabestado = -1 "
            StrSql = StrSql & " AND banco =" & ter_bancopago
            StrSql = StrSql & " AND fpagnro =" & nro_formapago
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If rs.EOF Then
                StrSql = " INSERT INTO ctabancaria (ternro,fpagnro,banco,ctabestado,"
                StrSql = StrSql & "ctabsuc,ctabnro,ctabporc,ctabcbu"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",ctabacred"
                End If
                StrSql = StrSql & ") VALUES ("
                StrSql = StrSql & NroTercero & "," & nro_formapago & "," & ter_bancopago & ","
                StrSql = StrSql & "-1,'" & Left(SucBanco, 10) & "','" & NroCuenta & "',100,'" & NroCBU & "'"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",'" & NroCuentaAcreditacionE & "'"
                End If
                StrSql = StrSql & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Inserte la Cuenta Bancaria - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            Else
                If rs!ctabnro = NroCuenta Then
                    StrSql = "UPDATE ctabancaria SET "
                    StrSql = StrSql & " ctabsuc = '" & SucBanco & "'"
                    If Not EsNulo(NroCuentaAcreditacionE) Then
                        StrSql = StrSql & ", ctabacred = '" & NroCuentaAcreditacionE & "'"  '21-12-10
                    End If
                    StrSql = StrSql & ", ctabnro = " & "'" & NroCuenta & "'"
                    StrSql = StrSql & ", ctabporc = 100 "
                    StrSql = StrSql & ", ctabcbu = '" & NroCBU & "'"
                    StrSql = StrSql & " WHERE ctabancaria.ternro =" & NroTercero
                    StrSql = StrSql & " AND ctabestado = -1 "
                    StrSql = StrSql & " AND banco =" & ter_bancopago
                    StrSql = StrSql & " AND fpagnro =" & nro_formapago
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    Texto = ": " & "Cuenta Bancaria actualizada- "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                Else
                    'Desactivo la anterior
                    StrSql = " UPDATE ctabancaria SET "
                    StrSql = StrSql & " ctabestado = 0 "
                    StrSql = StrSql & " WHERE cbnro = " & rs!Cbnro
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    'inserto la nueva
                    StrSql = " INSERT INTO ctabancaria (ternro,fpagnro,banco,ctabestado,"
                    StrSql = StrSql & "ctabsuc,ctabnro,ctabporc,ctabcbu"
                    If Not EsNulo(NroCuentaAcreditacionE) Then
                        StrSql = StrSql & ",ctabacred"
                    End If
                    StrSql = StrSql & ") VALUES ("
                    StrSql = StrSql & NroTercero & "," & nro_formapago & "," & ter_bancopago & ","
                    StrSql = StrSql & "-1,'" & Left(SucBanco, 10) & "','" & NroCuenta & "',100,'" & NroCBU & "'"
                    If Not EsNulo(NroCuentaAcreditacionE) Then
                        StrSql = StrSql & ",'" & NroCuentaAcreditacionE & "'"
                    End If
                    StrSql = StrSql & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = ": " & "Inserte la Cuenta Bancaria - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            End If
        End If
    End If
  
  'Inserto las Estructuras
'  Call AsignarEstructura(1, nro_sucursal, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(2, nro_sector, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(3, nro_categoria, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(4, nro_puesto, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(5, nro_ccosto, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(6, nro_gerencia, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(7, Nro_GrupoSeguridad, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(9, nro_departamento, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(10, nro_empresa, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(15, nro_cajajub, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(16, nro_sindicato, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(17, nro_osocial_elegida, NroTercero, F_Alta, F_Baja)
'  'Call AsignarEstructura(18, nro_contrato, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(18, nro_contrato, NroTercero, F_Alta, Fecha_FinContrato)
'  Call AsignarEstructura(19, nro_convenio, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(20, nro_lpago, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(21, nro_reghorario, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(22, nro_formaliq, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(23, nro_planos_elegida, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(24, nro_osocial_ley, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(25, nro_planos_ley, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(29, nro_actividad, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(30, nro_sitrev, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(31, nro_condsijp, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(35, nro_direccion, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(40, nro_art, NroTercero, F_Alta, F_Baja)
'  Call AsignarEstructura(41, nro_bancopago, NroTercero, F_Alta, F_Baja)
  
  
  'Call AsignarEstructuraRadiotronica_NEW(1, nro_sucursal, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructuraRadiotronica_NEW(2, nro_sector, NroTercero, F_Alta, F_Baja, F_AltaStr, F_BajaStr)
  Call AsignarEstructuraRadiotronica_NEW(3, nro_categoria, NroTercero, F_Alta, F_Baja, F_AltaStr, F_BajaStr)
  'Call AsignarEstructuraRadiotronica_NEW(4, nro_puesto, NroTercero, F_Alta, F_Baja, F_AltaStr, F_BajaStr)
  'Call AsignarEstructuraRadiotronica_NEW(5, nro_ccosto, NroTercero, F_Alta, F_Baja, F_AltaStr, F_BajaStr)
  'Call AsignarEstructuraRadiotronica_NEW(6, nro_gerencia, NroTercero, F_Alta, F_Baja, F_AltaStr, F_BajaStr)
  'Call AsignarEstructuraRadiotronica_NEW(7, Nro_GrupoSeguridad, NroTercero, F_Alta, F_Baja, F_AltaStr, F_BajaStr)
  'Call AsignarEstructuraRadiotronica_NEW(9, nro_departamento, NroTercero, F_Alta, F_Baja, F_AltaStr, F_BajaStr)
  Call AsignarEstructuraRadiotronica_NEW(10, nro_empresa, NroTercero, F_Alta, F_Baja, F_AltaStr, F_BajaStr)
  'Call AsignarEstructuraRadiotronica_NEW(15, nro_cajajub, NroTercero, F_Alta, F_Baja, F_AltaStr, F_BajaStr)
  'Call AsignarEstructuraRadiotronica_NEW(16, nro_sindicato, NroTercero, F_Alta, F_Baja, F_AltaStr, F_BajaStr)
  'Call AsignarEstructuraRadiotronica_NEW(17, nro_osocial_elegida, NroTercero, F_Alta, F_Baja, F_AltaStr, F_BajaStr)
  'Call AsignarEstructuraRadiotronica_NEW(18, nro_contrato, NroTercero, F_Alta, F_Baja, F_AltaStr, F_BajaStr)
  'Call AsignarEstructuraRadiotronica_NEW(18, nro_contrato, NroTercero, F_Alta, Fecha_FinContrato)
  Call AsignarEstructuraRadiotronica_NEW(19, nro_convenio, NroTercero, F_Alta, F_Baja, F_AltaStr, F_BajaStr)
  'Call AsignarEstructuraRadiotronica_NEW(20, nro_lpago, NroTercero, F_Alta, F_Baja, F_AltaStr, F_BajaStr)
  'Call AsignarEstructuraRadiotronica_NEW(21, nro_reghorario, NroTercero, F_Alta, F_Baja, F_AltaStr, F_BajaStr)
  'Call AsignarEstructuraRadiotronica_NEW(22, nro_formaliq, NroTercero, F_Alta, F_Baja, F_AltaStr, F_BajaStr)
  'Call AsignarEstructuraRadiotronica_NEW(23, nro_planos_elegida, NroTercero, F_Alta, F_Baja, F_AltaStr, F_BajaStr)
  'Call AsignarEstructuraRadiotronica_NEW(24, nro_osocial_ley, NroTercero, F_Alta, F_Baja, F_AltaStr, F_BajaStr)
  'Call AsignarEstructuraRadiotronica_NEW(25, nro_planos_ley, NroTercero, F_Alta, F_Baja, F_AltaStr, F_BajaStr)
  Call AsignarEstructuraRadiotronica_NEW(28, nro_Agencia, NroTercero, F_Alta, F_Baja, F_AltaStr, F_BajaStr)
  'Call AsignarEstructuraRadiotronica_NEW(29, nro_actividad, NroTercero, F_Alta, F_Baja, F_AltaStr, F_BajaStr)
  'Call AsignarEstructuraRadiotronica_NEW(30, nro_sitrev, NroTercero, F_Alta, F_Baja, F_AltaStr, F_BajaStr)
  'Call AsignarEstructuraRadiotronica_NEW(31, nro_condsijp, NroTercero, F_Alta, F_Baja, F_AltaStr, F_BajaStr)
  'Call AsignarEstructuraRadiotronica_NEW(35, nro_direccion, NroTercero, F_Alta, F_Baja, F_AltaStr, F_BajaStr)
  'Call AsignarEstructuraRadiotronica_NEW(40, nro_art, NroTercero, F_Alta, F_Baja, F_AltaStr, F_BajaStr)
  'Call AsignarEstructuraRadiotronica_NEW(41, nro_bancopago, NroTercero, F_Alta, F_Baja, F_AltaStr, F_BajaStr)
  
  
Texto = ": " & "Linea procesada correctamente "
Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
'LineaOK.Writeline Mid(strReg, 1, Len(strReg))
OK = True
         
FinLinea:
If rs.State = adStateOpen Then
    rs.Close
End If
Exit Sub

SaltoLinea:
    Texto = ": " & " - Error:" & Err.Description
    NroColumna = 1
    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    MyRollbackTrans
    OK = False
    GoTo FinLinea
End Sub




Public Sub LineaModelo_611(ByVal strReg As String, ByRef OK As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de Empleados de Agencia en base al modelo 605 - (version 3.58 - migración de empleados)
' Autor      : Leticia Amadio
' Fecha      : 14/04/2011
' Ultima Mod.:
' ---------------------------------------------------------------------------------------------

Dim pos1            As Long
Dim pos2            As Long

Dim Legajo          As String   'LEGAJO                   -- empleado.empleg
Dim Apellido        As String   'APELLIDO                 -- empleado.terape y tercero.terape
Dim nombre          As String   'NOMBRE                   -- empleado.ternom y tercero.ternom
Dim Fnac            As String   'FNAC                     -- tercero.terfecna
Dim Nacionalidad    As String   'Nacionalidad             -- tercero.nacionalnro
Dim PaisNac         As String   'Pais de Nacimiento       -- tercero.paisnro
Dim Fing            As String   'Fec.Ingreso al Pais      -- terecro.terfecing
Dim EstCivil        As String   'Est.Civil                -- tercero.estcivnro
Dim Sexo            As String   'Sexo                     -- tercero.tersex
Dim FAlta           As String   'Fec. de Alta             -- empleado.empfaltagr y fases.altfec
Dim Estudio         As String   'Estudia                  -- empleado.empestudia
Dim NivEst          As String   'Nivel de Estudio         -- empleado.nivnro
Dim Tdocu           As String   'Tipo Documento           -- ter_dpc.tidnro (DU)
Dim Ndocu           As String   'Nro. Documento           -- ter_doc.nrodoc
Dim Cuil            As String   'CUIL                     -- ter_doc.nrodoc (10)
Dim Calle           As String   'Calle                    -- detdom.calle
Dim Nro             As String   'Número                   -- detdom.nro
Dim Piso            As String   'Piso                     -- detdom.piso
Dim Depto           As String   'Depto                    -- detdom.depto
Dim Torre           As String   'Torre                    -- detdom.torre
Dim Manzana         As String   'Manzana                  -- detdom.manzana
Dim Cpostal         As String   'Cpostal                  -- detdom.codigopostal
Dim Entre           As String   'Entre Calles             -- detdom.entrecalles
Dim Barrio          As String   'Barrio                   -- detdom.barrio
Dim Localidad       As String   'Localidad                -- detdom.locnro
Dim Partido         As String   'Partido                  -- detdom.partnro
Dim Zona            As String   'Zona                     -- detdom.zonanro
Dim Provincia       As String   'Provincia                -- detdom.provnro
Dim Pais            As String   'Pais                     -- detdom.paisnro
Dim Telefono        As String   'Telefono                 -- telefono.telnro
Dim TelLaboral      As String   'Telefono                 -- telefono.telnro
Dim TelCelular      As String   'Telefono                 -- telefono.telnro
Dim Email           As String   'E-mail                   -- empleado.empemail
Dim Sucursal        As String   'Sucursal                 -- his_estructura.estrnro
Dim Sector          As String   'Sector                   -- his_estructura.estrnro
Dim categoria       As String   'Categoria                -- his_estructura.estrnro
Dim Puesto          As String   'Puesto                   -- his_estructura.estrnro
Dim CCosto          As String   'C.Costo                  -- his_estructura.estrnro
Dim Gerencia        As String   'Gerencia                 -- his_estructura.estrnro
Dim Departamento    As String   'Departamento             -- his_estructura.estrnro
Dim Direccion       As String   'Direccion                -- his_estructura.estrnro
Dim CajaJub         As String   'Caja de Jubilacion       -- his_estructura.estrnro
Dim Sindicato       As String   'Sindicato                -- his_estructura.estrnro
Dim OSocialLey      As String   'Obra Social              -- his_estructura.estrnro
Dim PlanOSLey       As String   'Plan OS                  -- his_estructura.estrnro
Dim OSocialElegida  As String   'Obra Social              -- his_estructura.estrnro
Dim PlanOSElegida   As String   'Plan OS                  -- his_estructura.estrnro
Dim Contrato        As String   'Contrato                 -- his_estructura.estrnro
Dim Convenio        As String   'Convenio                 -- his_estructura.estrnro
Dim LPago           As String   'Lugar de Pago            -- his_estructura.estrnro
Dim RegHorario      As String   'Regimen Horario          -- his_estructura.estrnro
Dim FormaLiq        As String   'Forma de Liquidacion     -- his_estructura.estrnro
Dim FormaPago       As String   'Forma de Pago            -- formapago.fpagdescabr
Dim SucBanco        As String   'Sucursal del Banco       -- ctabancaria.ctabsuc
Dim BancoPago       As String   'Banco Pago               -- his_estructura.estrnro, formapago.fpagbanc (siempre y cuando el Banco sea <> 0) y ctabancaria.banco
Dim NroCuenta       As String   'Nro. Cuenta              -- ctabancario.ctabnro
Dim NroCuentaAcreditacionE As String
Dim Actividad       As String   'Actividad                -- his_estructura.estrnro
Dim CondSIJP        As String   'Condicion SIJP           -- his_estructura.estrnro
Dim SitRev          As String   'Sit. de Revista SIJP     -- his_estructura.estrnro
Dim ModCont         As String   'Mod. de Contrat. SIJP    -- his_estructura.estrnro
Dim ART             As String   'ART                      -- his_estructura.estrnro
Dim Estado          As String   'Estado                   -- empleado.empest y fases.estado
Dim CausaBaja       As String   'Causa de Baja            -- fases.caunro
Dim FBaja           As String   'Fecha de Baja            -- fases.bajfec
Dim Empresa         As String   'Empresa                  -- his_estructura.estrnro
Dim ModOrg          As String   'Empresa                  -- his_estructura.estrnro
Dim OSL             As String   'Empresa                  -- his_estructura.estrnro
Dim OSE             As String   'Empresa                  -- his_estructura.estrnro
Dim PlanOdon        As String   'Empresa                  -- his_estructura.estrnro
Dim Locacion        As String   'Empresa                  -- his_estructura.estrnro
Dim Area            As String   'Empresa                  -- his_estructura.estrnro
Dim SubDepto        As String   'Empresa                  -- his_estructura.estrnro
Dim NroCBU          As String   'Empresa                  -- his_estructura.estrnro
Dim Empremu         As String   'Remuneración del empleado
Dim GrupoSeguridad  As String   'Grupo de Seguridad
Dim Nro_GrupoSeguridad  As Long 'Grupo de Seguridad       -- his_estructura.estrnro
Dim FFinContrato    As String
Dim Fecha_FinContrato As String
Dim Reporta_a       As String
Dim Nro_Reporta_a   As Long
Dim EmpAgencia      As String   'Empleado de agencia      --
Dim Agencia         As String   'Agencia                  -- his_estructura.estrnro




Dim Ternro As Long

Dim NroTercero          As Long

Dim Nro_Legajo          As Long
Dim Nro_TDocumento      As Long
Dim nro_nivest          As Long
Dim nro_estudio         As Long

Dim Nro_Nrodom          As String

Dim Nro_Barrio          As Long
Dim Nro_Localidad       As Long
Dim Nro_Partido         As Long
Dim Nro_Zona            As Long
Dim Nro_Provincia       As Long
Dim Nro_Pais            As Long
Dim nro_paisnac         As Long

Dim nro_sucursal        As Long
Dim nro_sector          As Long
Dim nro_categoria       As Long
Dim nro_puesto          As Long
Dim nro_ccosto          As Long
Dim nro_gerencia        As Long
Dim nro_cajajub         As Long
Dim nro_sindicato       As Long
Dim nro_osocial_ley     As Long
Dim nro_planos_ley      As Long
Dim nro_osocial_elegida As Long
Dim nro_planos_elegida  As Long
Dim nro_contrato        As Long
Dim nro_convenio        As Long
Dim nro_reghorario      As Long
Dim nro_formaliq        As Long
Dim nro_bancopago       As Long
Dim nro_actividad       As Long
Dim nro_sitrev          As Long
Dim nro_modcont         As Long
Dim nro_art             As Long
Dim nro_departamento    As Long
Dim nro_direccion       As Long
Dim nro_lpago           As Long
Dim nro_condsijp        As Long
Dim nro_formapago       As Long
Dim nro_causabaja       As Long
Dim nro_empresa         As Long
Dim NroDom              As Long
Dim nro_osl             As Long
Dim nro_odon            As Long
Dim nro_ose             As Long
Dim nro_locacion        As Long
Dim nro_area            As Long
Dim nro_SubDepto        As Long
Dim nro_empremu         As Long

Dim nro_estcivil        As Long
Dim nro_nacionalidad    As Long
Dim nro_Agencia         As Long

Dim F_Nacimiento        As String
Dim F_Fallecimiento     As String
Dim F_Alta              As String
Dim F_Baja              As String
Dim F_Ingreso           As String

Dim Inserto_estr        As Boolean

Dim ter_sucursal        As Long
Dim Ter_Empresa         As Long
Dim ter_cajajub         As Long
Dim ter_sindicato       As Long
Dim ter_osocial_ley     As Long
Dim ter_osocial_elegida As Long
Dim ter_bancopago       As Long
Dim ter_art             As Long
Dim ter_sexo            As Long
Dim ter_estudio         As Long
Dim ter_estado          As Long
Dim ter_empagencia      As Long
Dim ter_agencia         As Long

Dim fpgo_bancaria       As Long


Dim rs As New ADODB.Recordset
Dim rs_Sql As New ADODB.Recordset
Dim rs_Empleado As New ADODB.Recordset
Dim rs_Tel As New ADODB.Recordset
Dim rs_repl As New ADODB.Recordset


Dim SucDesc             As Boolean   'Sucursal                 -- his_estructura
Dim SecDesc             As Boolean   'Sector                   -- his_estructura
Dim CatDesc             As Boolean   'Categoria                -- his_estructura
Dim PueDesc             As Boolean   'Puesto                   -- his_estructura
Dim CCoDesc             As Boolean   'C.Costo                  -- his_estructura
Dim GerDesc             As Boolean   'Gerencia                 -- his_estructura
Dim DepDesc             As Boolean   'Departamento             -- his_estructura
Dim DirDesc             As Boolean   'Direccion                -- his_estructura
Dim CaJDesc             As Boolean   'Caja de Jubilacion       --
Dim SinDesc             As Boolean   'Sindicato                -- his_estructura
Dim OSoElegidaDesc      As Boolean   'Obra Social              -- his_estructura
Dim PoSElegidaDesc      As Boolean   'Plan OS                  -- his_estructura
Dim OSoLeyDesc          As Boolean   'Obra Social              -- his_estructura
Dim PoSLeyDesc          As Boolean   'Plan OS                  -- his_estructura
Dim CotDesc             As Boolean   'Contrato                 -- his_estructura
Dim CovDesc             As Boolean   'Convenio                 -- his_estructura
Dim LPaDesc             As Boolean   'Lugar de Pago            -- his_estructura
Dim RegDesc             As Boolean   'Regimen Horario          -- his_estructura
Dim FLiDesc             As Boolean   'Forma de Liquidacion     -- his_estructura
Dim FPaDesc             As Boolean      'Forma de Pago            -- his_estructura
Dim BcoDesc             As Boolean      'Banco Pago               --
Dim ActDesc             As Boolean      'Actividad                --
Dim CSJDesc             As Boolean      'Condicion SIJP           --
Dim SReDesc             As Boolean      'Sit. de Revista SIJP     --
Dim MCoDesc             As Boolean      'Mod. de Contrat. SIJP    --
Dim ARTDesc             As Boolean      'ART                      --
Dim EmpDesc             As Boolean      'Empresa                  --
Dim OSLDesc             As Boolean      'Empresa                  --
Dim POdoDesc             As Boolean     'Empresa                  --
Dim OSEDesc             As Boolean      'Empresa                  --
Dim LocDesc             As Boolean      'Empresa                  --
Dim AreaDesc             As Boolean     'Empresa                  --
Dim SubDepDesc           As Boolean     'Empresa                  --
Dim AgenDesc            As Boolean      'Agencia                  --


Dim IngresoDom          As Boolean

Dim rs_tdoc As New ADODB.Recordset
Dim rs_emp  As New ADODB.Recordset
Dim rs_tpl  As New ADODB.Recordset
Dim rs_leg  As New ADODB.Recordset

Dim Nroadtemplate As Long
Dim Nro_Institucion As Long

Dim Sigue As Boolean
Dim ExisteLeg As Boolean
Dim CalculaLegajo As Boolean
Dim Valida_CUIL As Boolean

Dim F_NacAux As Date
Dim F_AltaAux As Date
Dim Edad As Integer
Dim MaxEmpl As Long
Dim CantEmpl As Long

    On Error GoTo SaltoLinea


    ' True indica que se hace por Descripcion. False por Codigo Externo

    SucDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    SecDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CatDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    PueDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CCoDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    GerDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    DepDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    DirDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CaJDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    SinDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    OSoElegidaDesc = True ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    PoSElegidaDesc = True ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    OSoLeyDesc = True   ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    PoSLeyDesc = True   ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CotDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CovDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    LPaDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    RegDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    FLiDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    FPaDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    BcoDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    ActDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    CSJDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    SReDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    MCoDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    ARTDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    EmpDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    OSLDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    POdoDesc = True     ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    OSEDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    LocDesc = True      ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    AreaDesc = True     ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    SubDepDesc = True   ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    AgenDesc = True     ' Indica si la Validacion de la Estructura es por Descripcion o Codigo Externo
    
    
    
    'FGZ - 21/02/2009 - reviso si debo validar el CUIL o no --------------------
    Valida_CUIL = True
    StrSql = " SELECT tidvalida FROM tipodocu WHERE tidnro = 10"
    OpenRecordset StrSql, rs_Sql
    If Not rs_Sql.EOF Then
        If Not EsNulo(rs_Sql!tidvalida) Then
            Valida_CUIL = True
        Else
            Valida_CUIL = False
        End If
    Else
        Valida_CUIL = False
    End If
    'FGZ - 21/02/2009 - reviso si debo validar el CUIL o no --------------------
    
    
    Sigue = True 'Indica que si en el archivo viene mas de una vez un empleado, le crea las fases
    ExisteLeg = False
    'RegLeidos = RegLeidos + 1
    LineaCarga = LineaCarga + 1
    
    Flog.writeline
    FlogE.writeline
    FlogP.writeline
    
    'Legajo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Legajo"
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Legajo = Aux
    'Legajo = Mid(strReg, pos1, pos2 - pos1 + 1)
    If Legajo = "N/A" Or EsNulo(Legajo) Then
        CalculaLegajo = True
    Else
        StrSql = "SELECT * FROM empleado WHERE empleado.empleg = " & Legajo
        OpenRecordset StrSql, rs_emp
        If (Not rs_emp.EOF) Then
            If (Not Sigue) Then
                Texto = ": " & " - El Empleado ya Existe."
                NroColumna = 1
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                'Ok = False
                'RegError = RegError + 1
                'Exit Sub
            Else
                NroTercero = rs_emp!Ternro
                ExisteLeg = True
            End If
        End If
    End If
    
    
    'Apellido
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Apellido"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If (Aux <> "N/A") Then
    Aux = EliminarCHInvalidosII(Aux, 0, "")
    End If
    Apellido = Left(Aux, 25)
    
    
    
    'Nombre
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nombre"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    If (Aux <> "N/A") Then
    Aux = EliminarCHInvalidosII(Aux, 0, "")
    End If
    nombre = Left(Aux, 25)
    If (Apellido = "" Or Apellido = "N/A") And (nombre = "" Or nombre = "N/A") Then
        Texto = ": " & " - Debe Ingresar un Nombre y Apellido."
        NroColumna = 2
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    
    'Fecha de Nacimiento
    NroColumna = NroColumna + 1
    'Obligatorio = False
    Obligatorio = True
    Campoetiqueta = "Fecha de Nacimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If Aux <> "N/A" Then
    Aux = EliminarCHInvalidosII(Aux, 2, "")
    End If
    Fnac = Aux
    If Fnac = "N/A" Then
       F_Nacimiento = "Null"
    Else
       F_Nacimiento = ConvFecha(Fnac)
       F_NacAux = CDate(Fnac)
    End If
    
    
    'Pais de Nacimiento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Pais de Nacimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    PaisNac = Aux
    If PaisNac <> "N/A" Then
        StrSql = " SELECT paisnro FROM pais WHERE UPPER(paisdesc) = '" & UCase(PaisNac) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_paisnac = rs_Sql!Paisnro
        Else
            StrSql = " INSERT INTO pais(paisdesc,paisdef) VALUES ('" & UCase(PaisNac) & "',0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_paisnac = getLastIdentity(objConn, "pais")
        End If
    Else
        nro_paisnac = 0
    End If
    
    
    'Nacionalidad
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nacionalidad"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Nacionalidad = Aux
    If (Nacionalidad <> "N/A") And Not EsNulo(Nacionalidad) Then
        StrSql = " SELECT nacionalnro FROM nacionalidad WHERE UPPER(nacionaldes) = '" & UCase(Nacionalidad) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_nacionalidad = rs_Sql!nacionalnro
        Else
            StrSql = " INSERT INTO nacionalidad(nacionaldes) VALUES ('" & UCase(Nacionalidad) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_nacionalidad = getLastIdentity(objConn, "nacionalidad")
        End If
    Else
        nro_nacionalidad = 0
    End If
    If nro_nacionalidad = 0 Then
        Texto = ": " & " - La Nacionalidad no Existe."
        NroColumna = 6
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    
    'Fecha de Ingreso al Pais
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de Ingreso al Pais"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If Aux <> "N/A" Then
    Aux = EliminarCHInvalidosII(Aux, 2, "")
    End If
    Fing = Aux
    If (Fing = "N/A") Or EsNulo(Fing) Then
        F_Ingreso = "Null"
    Else
        F_Ingreso = ConvFecha(Fing)
    End If
    
    'Estado Civil
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estado Civil"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    EstCivil = Left(Aux, 30)
    If EstCivil <> "N/A" And Not EsNulo(EstCivil) Then
        StrSql = " SELECT estcivnro FROM estcivil WHERE UPPER(estcivdesabr) = '" & UCase(EstCivil) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_estcivil = rs_Sql!estcivnro
        Else
            StrSql = " INSERT INTO estcivil(estcivdesabr) VALUES ('" & UCase(EstCivil) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_estcivil = getLastIdentity(objConn, "estcivil")
        End If
    Else
        nro_estcivil = 0
    End If
    If nro_estcivil = 0 Then
        Texto = ": " & " - El Estado Civil no Existe."
        NroColumna = 8
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Sexo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sexo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Sexo = UCase(Aux)
    If (Sexo = "M") Or (Sexo = "-1") Or (Sexo = "MASCULINO") Then
        ter_sexo = -1
    Else
        ter_sexo = 0
    End If
                                                            
    'Fecha de alta
    NroColumna = NroColumna + 1
    'Obligatorio = False
    Obligatorio = True
    Campoetiqueta = "Fecha de alta"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If Aux <> "N/A" Then
        Aux = EliminarCHInvalidosII(Aux, 2, "")
    End If
    FAlta = Aux
    If FAlta = "N/A" Or EsNulo(FAlta) Then
        F_Alta = "Null"
        Texto = ": " & " - La Fecha de Alta es Obligatoria."
        NroColumna = 10
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    Else
        F_Alta = ConvFecha(FAlta)
        F_AltaAux = CDate(FAlta)
        
        
        'Validar que el empleado sea mayor a 14 años
        Edad = 0
        If (Month(F_AltaAux) > Month(F_NacAux)) Then
           Edad = DateDiff("yyyy", F_NacAux, F_AltaAux)
        Else
           If (Month(F_AltaAux) = Month(F_NacAux)) And (Day(F_AltaAux) >= Day(F_NacAux)) Then
             Edad = DateDiff("yyyy", F_NacAux, F_AltaAux)
           Else
             Edad = DateDiff("yyyy", F_NacAux, F_AltaAux) - 1
           End If
        End If
        
        If Edad < 14 Then
            Texto = ": " & " - El empleado es menor a 14 años."
            NroColumna = 10
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            'Ok = False
            RegError = RegError + 1
            Exit Sub
        End If
        
    End If
   
   
    'Estudia?
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estudia?"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Estudio = UCase(Aux)
    If Estudio <> "N/A" And Estudio <> "NO" Then
        If Estudio = "SI" Then
            ter_estudio = -1
        Else
            ter_estudio = 0
        End If
    Else
        ter_estudio = 0
    End If
    
    
    'Nivel de estudio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nivel de estudio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    NivEst = Left(Aux, 40)
    If NivEst <> "N/A" Then
        StrSql = " SELECT nivnro FROM nivest WHERE UPPER(nivdesc) = '" & UCase(NivEst) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_nivest = rs_Sql!nivnro
        Else
            StrSql = " INSERT INTO nivest(nivdesc,nivsist,nivobligatorio,nivestfli) VALUES ('" & UCase(NivEst) & "',-1,0,-1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_nivest = getLastIdentity(objConn, "nivest")
        End If
    Else
        nro_nivest = 0
    End If
    
    
    'Tipo de Doc
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tipo de Doc"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Tdocu = Left(Aux, 8)
    If Tdocu <> "N/A" Then
        StrSql = " SELECT tidnro FROM tipodocu WHERE UPPER(tidsigla) = '" & UCase(Tdocu) & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            Nro_TDocumento = rs_Sql!tidnro
        Else
            'busco la primera institucion, si no existe la creo
            StrSql = " SELECT * FROM institucion "
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                Nro_Institucion = rs!InstNro
            Else
                'creo una
                StrSql = " INSERT INTO institucion (instdes,instabre) VALUES ('NACIONAL','NAC')"
                objConn.Execute StrSql, , adExecuteNoRecords
                Nro_Institucion = getLastIdentity(objConn, "institucion")
            End If
            'creo el tipo de documento
            StrSql = " INSERT INTO tipodocu(tidnom,tidsigla,tidsist,instnro,tidunico) VALUES ('" & UCase(Tdocu) & "','" & UCase(Tdocu) & "',0," & Nro_Institucion & ",0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            Nro_TDocumento = getLastIdentity(objConn, "tipodocu")
        End If
    Else
        Nro_TDocumento = 0
    End If
    If Nro_TDocumento = 0 Then
        Texto = ": " & " - El Tipo de Documento no Existe."
        NroColumna = 13
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    
    'Nro de Documento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nro de Documento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Ndocu = Left(Aux, 30)
    If Ndocu = "N/A" Then
        Ndocu = ""
    End If
    
    StrSql = "SELECT * FROM empleado "
    StrSql = StrSql & " INNER JOIN ter_doc ON ter_doc.ternro = empleado.ternro "
    StrSql = StrSql & " WHERE ter_doc.tidnro = " & Nro_TDocumento & " AND ter_doc.nrodoc = '" & Ndocu & "'"
    OpenRecordset StrSql, rs_tdoc
    If (Not rs_tdoc.EOF) Then
        If (Not Sigue) Then
            Texto = ": " & " - Ese Tipo y Numero de Documento estan Asignados a otro Empleado."
            NroColumna = 14
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            'Ok = False
            RegError = RegError + 1
            Exit Sub
        Else
            'FGZ - 11/11/2010 - Si es el mismo legajo no debe poner ningun cartel
            If NroTercero <> rs_tdoc!Ternro Then
                NroTercero = rs_tdoc!Ternro
                ExisteLeg = True
                Texto = ": " & " - Empleado: " & Legajo & " - Ese Tipo y Numero de Documento estan Asignados a otro Empleado."
                NroColumna = 14
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                
            End If
        End If
    End If
    
    'CUIL
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "CUIL"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Cuil = Replace(Left(Aux, 30), "-", "")
    If Cuil = "N/A" Or EsNulo(Cuil) Then
        'FGZ - 23/02/2009 - validacion de cuil configurable ---------------
        If Valida_CUIL Then
            Cuil = Generar_Cuil(Ndocu, CBool(ter_sexo))
            'Cuil = CalcularCUIL(Ndocu)
            If Cuil = 0 Then
                Texto = ": " & " - Campo " & Campoetiqueta & " no se pudo generar automaticamente " & Ndocu
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                RegError = RegError + 1
                Exit Sub
            End If
        Else
            Cuil = ""
        End If
        'FGZ - 23/02/2009 - validacion de cuil configurable ---------------
    Else
        If Valida_CUIL Then
            'OK = Cuil_Valido(Cuil, Texto)
            OK = Cuil_Valido605(Cuil, Ndocu, Texto, Tdocu, nro_nacionalidad)
            If Not OK Then
                OK = True
                'Texto = "El CUIL no es valido"
                'Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
                'Cuil = CalcularCUIL(Ndocu)
                
                'FGZ - 26/08/2010 ---------------
                'Cuil = Generar_Cuil(Ndocu, CBool(ter_sexo))
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                RegError = RegError + 1
                Exit Sub
                'FGZ - 26/08/2010 ---------------
            End If
        End If
    End If
    'FGZ - 23/02/2009 - validacion de cuil configurable ---------------
    If Cuil = "" And Not Valida_CUIL Then
        Cuil = ""
    Else
        Cuil = Left(Cuil, 2) & "-" & Mid(Cuil, 3, 8) & "-" & Right(Cuil, 1)
    End If
    'FGZ - 23/02/2009 - validacion de cuil configurable ---------------
    
    
    'Hasta Aqui los Datos Obligatorios del Empleado
    IngresoDom = True
        
    'Calle
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Calle"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Calle = Left(Aux, 250)
    If Calle = "N/A" Then
        Calle = ""
        IngresoDom = False
    End If
    
    
    'Nro
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Nro"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Nro = Left(Aux, 8)
    If (Nro <> "N/A") Then
        Nro_Nrodom = Nro
    Else
        Nro_Nrodom = 0
    End If
    
    'Piso
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Piso"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Piso = Left(Aux, 8)
    If Piso = "N/A" Then
        Piso = ""
    End If
    
    'Departamento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Departamento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Depto = Left(Aux, 8)
    If Depto = "N/A" Then
        Depto = ""
    End If

    'Torre
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Torre"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Torre = Left(Aux, 8)
    If Torre = "N/A" Then
        Torre = ""
    End If
    
    'Manzana
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion.Manzana"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Manzana = Left(Aux, 8)
    If Manzana = "N/A" Then
        Manzana = ""
    End If

    'Codigo Postal
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Codigo Postal"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Cpostal = Left(Aux, 12)
    If Cpostal = "N/A" Then
        Cpostal = ""
    End If

    'Entre calles
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Entre calles"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Entre = Left(Aux, 80)
    If Entre = "N/A" Then
        Entre = ""
    End If

    'Barrio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Barrio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Barrio = Left(Aux, 30)
    If Barrio = "N/A" Then
        Barrio = ""
    End If

    'Localidad
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Localidad"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    '19/03/2010 - Se cambio la longitud de 30 a 60
    'Localidad = Left(aux, 30)
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Localidad = Left(Aux, 60)
    
    'Partido
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Partido"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Partido = Left(Aux, 30)
    
    'Zona
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Zona"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    '19/03/2010 - Se cambio la longitud a 60
    'Zona = Left(aux, 20)
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Zona = Left(Aux, 60)
    
    'Provincia
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Provincia"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Provincia = Left(Aux, 20)
    
    'Pais
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Pais"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Pais = Left(Aux, 20)
    If Pais <> "N/A" Then
        Call ValidarPais(Pais, Nro_Pais)
    Else
        Nro_Pais = 0
    End If
    If Provincia <> "N/A" Then
        Call ValidarProvincia(Provincia, Nro_Provincia, Nro_Pais)
    Else
        Nro_Provincia = 0
    End If
    If Localidad <> "N/A" Then
        Call ValidarLocalidad(Localidad, Nro_Localidad, Nro_Pais, Nro_Provincia)
    Else
        Nro_Localidad = 0
    End If
    If Partido <> "N/A" Then
        Call ValidarPartido(Partido, Nro_Partido)
    Else
        Nro_Partido = 0
    End If
    If Zona <> "N/A" Then
        Call ValidarZona(Zona, Nro_Zona, Nro_Provincia)
    Else
        Nro_Zona = 0
    End If
    If (IngresoDom = True) And (Nro_Localidad = 0) Then
        Texto = ": " & " - Debe Ingresar la Localidad."
        NroColumna = 25
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    If (IngresoDom = True) And (Nro_Provincia = 0) Then
        Texto = ": " & " - Debe Ingresar la Provincia."
        NroColumna = 28
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    If (IngresoDom = True) And (Nro_Pais = 0) Then
        Texto = ": " & " - Debe Ingresar la Pais."
        NroColumna = 29
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
    
    'Tel Particular
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tel Particular"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    If Aux = "N/A" Then
        Telefono = ""
    Else
        Aux = EliminarCHInvalidosII(Aux, 3, "")
        Telefono = Left(Aux, 20)
    End If
    
    
    'Tel Laboral
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tel Laboral"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    If Aux = "N/A" Then
        TelLaboral = ""
    Else
        Aux = EliminarCHInvalidosII(Aux, 3, "")
        TelLaboral = Left(Aux, 20)
    End If
    
    'Tel Celular
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Tel Celular"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    If Aux = "N/A" Then
        TelCelular = ""
    Else
        Aux = EliminarCHInvalidosII(Aux, 3, "")
        TelCelular = Left(Aux, 20)
    End If

    
    'Email
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Email"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    If Aux <> "N/A" Then
        Aux = EliminarCHInvalidosII(Aux, 4, "")
        Email = Left(Aux, 100)
    Else
        Email = ""
    End If
    
    
    'Sucursal
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sucursal"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Sucursal = Aux
    ' Validacion y Creacion de la Sucursal (junto con sus Complementos)
    If Sucursal <> "N/A" Then
        If SucDesc Then
            Call ValidaEstructura(1, Sucursal, nro_sucursal, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(1, Sucursal, nro_sucursal, Inserto_estr)
        End If
        Call CreaTercero(10, Sucursal, ter_sucursal)
        
        If Inserto_estr Then
            Call CreaComplemento(1, ter_sucursal, nro_sucursal, Sucursal)
            Inserto_estr = False
        End If
    Else
        nro_sucursal = 0
    End If
    
    'Sector
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sector"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Sector = Aux
    ' Validacion y Creacion del Sector
    If Sector <> "N/A" Then
        If SecDesc Then
            Call ValidaEstructura(2, Sector, nro_sector, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(2, Sector, nro_sector, Inserto_estr)
        End If
    Else
        nro_sector = 0
    End If

    'Convenio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Convenio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Convenio = Aux
    ' Validacion, Creacion del Convenio
    If Convenio <> "N/A" Then
        If CovDesc Then
            Call ValidaEstructura(19, Convenio, nro_convenio, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(19, Convenio, nro_convenio, Inserto_estr)
        End If
        
        If Inserto_estr Then
            Call CreaComplemento(19, 0, nro_convenio, Convenio)
            Inserto_estr = False
        End If
    Else
        nro_convenio = 0
    End If
    
    
    'Categoria
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Categoria"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    categoria = Aux
    ' Validacion, Creacion de la Categoria
    If (categoria <> "N/A" And nro_convenio <> 0) Then
        If CatDesc Then
            'Call ValidaEstructura(3, categoria, nro_categoria, Inserto_estr)
            Call ValidaCategoria(3, categoria, nro_convenio, nro_categoria, Inserto_estr)
            
        Else
            'Call ValidaEstructuraCodExt(3, categoria, nro_categoria, Inserto_estr)
            Call ValidaCategoriaCodExt(3, categoria, nro_convenio, nro_categoria, Inserto_estr)
        End If
    Else
        nro_categoria = 0
    End If
    
    'Puesto
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Puesto"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Puesto = Aux
    'Validacion y Creacion del Puesto (junto con sus Complementos)
    If Puesto <> "N/A" Then
        If PueDesc Then
            Call ValidaEstructura(4, Puesto, nro_puesto, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(4, Puesto, nro_puesto, Inserto_estr)
        End If
        
        If Inserto_estr Then
            Call CreaComplemento(4, 0, nro_puesto, Puesto)
            Inserto_estr = False
        End If
    Else
        nro_puesto = 0
    End If

    'Centro de Costo
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Centro de Costo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    CCosto = Aux
    ' Validacion y Creacion del Centro de Costo
    If CCosto <> "N/A" Then
        If CCoDesc Then
            Call ValidaEstructura(5, CCosto, nro_ccosto, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(5, CCosto, nro_ccosto, Inserto_estr)
        End If
    Else
        nro_ccosto = 0
    End If

    'Gerencia
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Gerencia"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Gerencia = Aux
    ' Validacion y Creacion de la Gerencia
    If Gerencia <> "N/A" Then
        If GerDesc Then
            Call ValidaEstructura(6, Gerencia, nro_gerencia, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(6, Gerencia, nro_gerencia, Inserto_estr)
        End If
    Else
        nro_gerencia = 0
    End If

    
    'Departamento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Departamento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Departamento = Aux
    ' Validacion y Creacion del Departamento
    If Departamento <> "N/A" Then
        If DepDesc Then
            Call ValidaEstructura(9, Departamento, nro_departamento, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(9, Departamento, nro_departamento, Inserto_estr)
        End If
    Else
        nro_departamento = 0
    End If


    'Direccion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Direccion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Direccion = Aux
    ' Validacion y Creacion de direccion
    If Direccion <> "N/A" Then
        If DirDesc Then
            Call ValidaEstructura(35, Direccion, nro_direccion, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(35, Direccion, nro_direccion, Inserto_estr)
        End If
    Else
        nro_direccion = 0
    End If
    
    
    'Caja de Jubilacion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Caja de Jubilacion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    CajaJub = Aux
    ' Validacion y Creacion de la Caja de Jubilacion
    If CajaJub <> "N/A" Then
        If CaJDesc Then
            Call ValidaEstructura(15, CajaJub, nro_cajajub, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(15, CajaJub, nro_cajajub, Inserto_estr)
        End If
        Call CreaTercero(6, CajaJub, ter_cajajub)
        
        If Inserto_estr Then
            Call CreaComplemento(15, ter_cajajub, nro_cajajub, CajaJub)
        End If
    Else
        nro_cajajub = 0
    End If

    'Sindicato
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sindicato"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Sindicato = Aux
    ' Validacion y Creacion del Sindicato
    If Sindicato <> "N/A" Then
        If SinDesc Then
            Call ValidaEstructura(16, Sindicato, nro_sindicato, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(16, Sindicato, nro_sindicato, Inserto_estr)
        End If
        Call CreaTercero(5, Sindicato, ter_sindicato)
        
        If Inserto_estr Then
            Call CreaComplemento(16, ter_sindicato, nro_sindicato, Sindicato)
        End If
    Else
        nro_sindicato = 0
    End If
    
    
    'Obra social por Ley
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Obra social por Ley"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    OSocialLey = Aux
    ' Validacion y Creacion de la Obra Social por Ley
    If OSocialLey <> "N/A" Then
        If OSoLeyDesc Then
            Call ValidaEstructura(24, OSocialLey, nro_osocial_ley, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(24, OSocialLey, nro_osocial_ley, Inserto_estr)
        End If
        Call CreaTercero(4, OSocialLey, ter_osocial_ley)
        
        If Inserto_estr Then
            Call CreaComplemento(24, ter_osocial_ley, nro_osocial_ley, OSocialLey)
        Else
            StrSql = " SELECT origen FROM replica_estr WHERE estrnro = " & nro_osocial_ley
            OpenRecordset StrSql, rs_repl
            
            If Not rs_repl.EOF Then
                ter_osocial_ley = rs_repl!Origen
                rs_repl.Close
            End If
            
        End If
    Else
        nro_osocial_ley = 0
    End If


    'Plan de OS por Ley
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Plan de Obra social por Ley"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    PlanOSLey = Aux
    ' Validacion y Creacion del Plan de Obra Social por Ley
    If (PlanOSLey <> "N/A" And nro_osocial_ley <> 0) Then
        If PoSLeyDesc Then
            Call ValidaEstructura(25, PlanOSLey, nro_planos_ley, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(25, PlanOSLey, nro_planos_ley, Inserto_estr)
        End If
        
        If Inserto_estr Then
            Call CreaComplemento(25, ter_osocial_ley, nro_planos_ley, PlanOSLey)
            Inserto_estr = False
        End If
    Else
        nro_planos_ley = 0
    End If
    
    'OS Elegida
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Obra Social elegida"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    OSocialElegida = Aux
    ' Validacion y Creacion de la Obra Social Elegida
    If OSocialElegida <> "N/A" Then
        If OSoElegidaDesc Then
            Call ValidaEstructura(17, OSocialElegida, nro_osocial_elegida, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(17, OSocialElegida, nro_osocial_elegida, Inserto_estr)
        End If
        Call CreaTercero(4, OSocialElegida, ter_osocial_elegida)
        
        If Inserto_estr Then
            Call CreaComplemento(17, ter_osocial_elegida, nro_osocial_elegida, OSocialElegida)
        Else
            StrSql = " SELECT origen FROM replica_estr WHERE estrnro = " & nro_osocial_elegida
            OpenRecordset StrSql, rs_Sql
            ter_osocial_elegida = rs_Sql!Origen
            rs_Sql.Close
        End If
    Else
        nro_osocial_elegida = 0
    End If

    'Plan de OS Elegida
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Plan Obra Social elegida"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    PlanOSElegida = Aux
    ' Validacion y Creacion del Plan de Obra Social Elegida
    If (PlanOSElegida <> "N/A" And nro_osocial_elegida <> 0) Then
        If PoSElegidaDesc Then
            Call ValidaEstructura(23, PlanOSElegida, nro_planos_elegida, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(23, PlanOSElegida, nro_planos_elegida, Inserto_estr)
        End If
        
        If Inserto_estr Then
            Call CreaComplemento(23, ter_osocial_elegida, nro_planos_elegida, PlanOSElegida)
            Inserto_estr = False
        End If
    Else
        nro_planos_elegida = 0
    End If
    
    
    'Contrato
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Contrato"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Contrato = Aux
    ' Validacion y Creacion del Contrato
    If Contrato <> "N/A" Then
        If CotDesc Then
            Call ValidaEstructura(18, Contrato, nro_contrato, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(18, Contrato, nro_contrato, Inserto_estr)
        End If
        
        If Inserto_estr Then
            Call CreaComplemento(18, 0, nro_contrato, Contrato)
            Inserto_estr = False
        End If
    Else
        nro_contrato = 0
    End If
    
    'Fecha de fin de contrato
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Fecha de fin de contrato"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    If Aux <> "N/A" Then
        Aux = EliminarCHInvalidosII(Aux, 2, "")
    End If
    FFinContrato = Aux
    If FFinContrato = "N/A" Or EsNulo(FFinContrato) Then
        Fecha_FinContrato = "Null"
    Else
        Fecha_FinContrato = ConvFecha(FFinContrato)
    End If
    
    'Lugar de pago
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Lugar de pago"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    LPago = Aux
    ' Validacion y Creacion del Lugar de Pago
    If LPago <> "N/A" Then
        If LPaDesc Then
            Call ValidaEstructura(20, LPago, nro_lpago, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(20, LPago, nro_lpago, Inserto_estr)
        End If
    Else
        nro_lpago = 0
    End If

    'Regimen Horario
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Regimen Horario"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    RegHorario = Aux
    If RegHorario <> "N/A" Then
        If RegDesc Then
            Call ValidaEstructura(21, RegHorario, nro_reghorario, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(21, RegHorario, nro_reghorario, Inserto_estr)
        End If
    Else
        nro_reghorario = 0
    End If

    'Forma de Liquidacion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Forma de Liquidacion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    FormaLiq = Aux
    If FormaLiq <> "N/A" Then
        If FLiDesc Then
            Call ValidaEstructura(22, FormaLiq, nro_formaliq, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(22, FormaLiq, nro_formaliq, Inserto_estr)
        End If
        ' Agregado por MB 10/08/2006
        If Inserto_estr Then
            Call CreaComplemento(22, 0, nro_formaliq, FormaLiq)
            Inserto_estr = False
        End If
    Else
        nro_formaliq = 0
    End If

    'Forma de Pago
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Forma de Pago"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    FormaPago = Aux
    If FormaPago <> "N/A" Then
        StrSql = " SELECT fpagnro FROM formapago WHERE fpagdescabr = '" & FormaPago & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_formapago = rs_Sql!fpagnro
        Else
            StrSql = " INSERT INTO formapago(fpagdescabr,fpagbanc,acunro,monnro) VALUES ('" & FormaPago & "',0,6,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            nro_formapago = getLastIdentity(objConn, "formapago")
        End If
    Else
        nro_formapago = 0
    End If
    
    'Banco de Pago
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Banco de Pago"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    BancoPago = Aux
    If BancoPago <> "N/A" Then
        If BcoDesc Then
            Call ValidaEstructura(41, BancoPago, nro_bancopago, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(41, BancoPago, nro_bancopago, Inserto_estr)
        End If
        Call CreaTercero(13, BancoPago, ter_bancopago)
        
        If Inserto_estr Then
            Call CreaComplemento(41, ter_bancopago, nro_bancopago, BancoPago)
        End If
        fpgo_bancaria = -1
    Else
        nro_bancopago = 0
        fpgo_bancaria = 0
    End If
    
    'Nro de cuenta
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nro de cuenta"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    NroCuenta = Aux
    If NroCuenta = "N/A" Then
        NroCuenta = ""
    Else
        NroCuenta = Left(NroCuenta, 30)
    End If
    
    'CBU
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "CBU"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    NroCBU = Aux
    If NroCBU = "N/A" Then
        NroCBU = ""
    Else
        NroCBU = Left(NroCBU, 30)
    End If
    
    'Sucursal del banco
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Sucursal del banco"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    SucBanco = Aux
    If SucBanco = "N/A" Then
        SucBanco = ""
    Else
        SucBanco = Left(SucBanco, 10)
    End If


    'Nro de cuenta de acreditacion empresa
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nro de cuenta de acreditacion empresa"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    NroCuentaAcreditacionE = Aux
    If NroCuentaAcreditacionE = "N/A" Or EsNulo(NroCuentaAcreditacionE) Then
        NroCuentaAcreditacionE = ""
    Else
        StrSql = "SELECT * FROM ctabancaria WHERE cbnro ='" & NroCuentaAcreditacionE & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
            Texto = ": " & " - Nro de cuenta de acreditacion empresa no existe."
            NroColumna = 59
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            NroCuentaAcreditacionE = ""
        End If
    End If
    
    'Actividad SIJP
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Actividad SIJP"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Actividad = Aux
    If Actividad <> "N/A" Then
        If ActDesc Then
            Call ValidaEstructura(29, Actividad, nro_actividad, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(29, Actividad, nro_actividad, Inserto_estr)
        End If
    Else
        nro_actividad = 0
    End If

    'Condicion SIJP
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Condicion SIJP"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    CondSIJP = Aux
    If CondSIJP <> "N/A" And Not EsNulo(CondSIJP) Then
        If CSJDesc Then
            Call ValidaEstructura(31, CondSIJP, nro_condsijp, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(31, CondSIJP, nro_condsijp, Inserto_estr)
        End If
    Else
        nro_condsijp = 0
    End If

    'Situacion de Revista SIJP
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Situacion de Revista SIJP"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    SitRev = Aux
    If SitRev <> "N/A" And Not EsNulo(SitRev) Then
        If SReDesc Then
            Call ValidaEstructura(30, SitRev, nro_sitrev, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(30, SitRev, nro_sitrev, Inserto_estr)
        End If
    Else
        nro_sitrev = 0
    End If
    
    
    'ART
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "ART"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    ART = Aux
    If ART <> "N/A" And Not EsNulo(ART) Then
        If ARTDesc Then
            Call ValidaEstructura(40, ART, nro_art, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(40, ART, nro_art, Inserto_estr)
        End If
        Call CreaTercero(8, ART, ter_art)
        
        If Inserto_estr Then
            Call CreaComplemento(40, ter_art, nro_art, ART)
        End If
    Else
        nro_art = 0
    End If
    
    'Estado del empleado
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estado del empleado"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Estado = Aux
    If UCase(Estado) = "ACTIVO" Then
        ter_estado = -1
    Else
        ter_estado = 0
    End If
    
    
    'Causa de baja
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Causa de baja"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    CausaBaja = Aux
    If Not EsNulo(CausaBaja) And CausaBaja <> "N/A" Then
        StrSql = " SELECT caunro FROM causa WHERE caudes = '" & CausaBaja & "'"
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            nro_causabaja = rs_Sql!caunro
        Else
            StrSql = " INSERT INTO causa(caudes,causist,caudesvin,empnro) VALUES ('" & CausaBaja & "',0,-1,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            nro_causabaja = getLastIdentity(objConn, "causa")
        End If
    Else
        nro_causabaja = 0
    End If
    
    
    
    'Fecha de baja
    NroColumna = NroColumna + 1
        ' Si hay una causa de baja, se tiene que cargar ssi la Fecha de Baja (tablero adp)
    If nro_causabaja <> 0 Then
        Obligatorio = True
    Else
        Obligatorio = False
    End If
    Campoetiqueta = "Fecha de baja"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If Aux <> "N/A" Then
    Aux = EliminarCHInvalidosII(Aux, 2, "")
    End If
    FBaja = Aux
    If EsNulo(FBaja) Or FBaja = "N/A" Then
        F_Baja = "Null"
    Else
        F_Baja = ConvFecha(FBaja)
    End If

        
    
    'Empresa
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Empresa"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Empresa = Aux
    Else
        pos2 = Len(strReg)
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        Empresa = Aux
    End If
    If Empresa <> "N/A" Or EsNulo(Empresa) Then
        If EmpDesc Then
            Call ValidaEstructura(10, Empresa, nro_empresa, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(10, Empresa, nro_empresa, Inserto_estr)
        End If
        Call CreaTercero(10, Empresa, Ter_Empresa)
        
        If Inserto_estr Then
            Call CreaComplemento(10, Ter_Empresa, nro_empresa, Empresa)
        End If
    Else
        nro_empresa = 0
    End If
    
    'Remuneración del Empleado
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Remuneración del Empleado"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Empremu = Aux
    If Empremu = "N/A" Or EsNulo(Empremu) Then
        Empremu = "Null"
    End If
   
    'Modelo de Organizacion
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Modelo de Organizacion"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        ModOrg = Aux
        If ModOrg = "N/A" Or EsNulo(ModOrg) Then
            nro_ModOrg = 0
        Else
            StrSql = "SELECT * FROM adptemplate WHERE tplatedesabr = '" & ModOrg & "'"
            OpenRecordset StrSql, rs_tpl
            If rs_tpl.EOF Then
                StrSql = "INSERT INTO adptemplate (tplatedesabr,tplatedefault) VALUES ('" & ModOrg & "',-1)"
                objConn.Execute StrSql, , adExecuteNoRecords
                nro_ModOrg = getLastIdentity(objConn, "adptemplate")
            Else
                nro_ModOrg = rs_tpl!tplatenro
            End If
        End If
    Else
        nro_ModOrg = 0
    End If

    'Reporta_a  campo empleado.empreporta va el tercero
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Reporta_a"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Reporta_a = Aux
        If Not EsNulo(Reporta_a) And Reporta_a <> "N/A" Then
            If IsNumeric(Reporta_a) Then
                StrSql = "SELECT * FROM empleado WHERE empleado.empleg = " & Reporta_a
                If rs_emp.State = adStateOpen Then rs_emp.Close
                OpenRecordset StrSql, rs_emp
                If (Not rs_emp.EOF) Then
                    Nro_Reporta_a = rs_emp!Ternro
                Else
                    Nro_Reporta_a = 0
                    Texto = ": " & "El Empleado " & Reporta_a & " no existe."
                    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                End If
            Else
                Nro_Reporta_a = 0
                Texto = "El valor no es numérico."
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            End If
        End If
    Else
        Nro_Reporta_a = 0
        'no es obligatorio
    End If
    If rs_emp.State = adStateOpen Then rs_emp.Close
    

    'Grupo de Seguridad
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Grupo de Seguridad"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    If pos2 > 0 Then
        Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
        If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
            Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
            RegError = RegError + 1
            Exit Sub
        End If
        Aux = EliminarCHInvalidosII(Aux, 1, "")
        GrupoSeguridad = Aux
        If GrupoSeguridad <> "N/A" And Not EsNulo(GrupoSeguridad) Then
            Call ValidaEstructura(7, GrupoSeguridad, Nro_GrupoSeguridad, Inserto_estr)
        Else
            Nro_GrupoSeguridad = 0
        End If
    Else
        Nro_GrupoSeguridad = 0
    End If
    
    
    
    'Empleado de Agencia?
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Empleado de Agencia?"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    EmpAgencia = UCase(Aux)
    If EmpAgencia <> "N/A" And EmpAgencia <> "NO" Then
        If EmpAgencia = "SI" Then
            ter_empagencia = -1
        Else
            ter_empagencia = 0
        End If
    Else
        ter_empagencia = 0
    End If
    
    If ter_empagencia = 0 Then
        Texto = ": " & " - Campo " & Campoetiqueta & " debe tener valor SI "
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    
    
    
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Agencia"
    pos1 = pos2 + 2
    pos2 = Len(strReg)  ' InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Agencia = Left(Aux, 60)
    ' Validacion y Creacion de la Agencia (junto con sus Complementos)
    If Agencia <> "N/A" Then
        If AgenDesc Then
            Call ValidaEstructura(28, Agencia, nro_Agencia, Inserto_estr)
        Else
            Call ValidaEstructuraCodExt(28, Agencia, nro_Agencia, Inserto_estr)
        End If
        
        'FGZ - 05/07/2011 ------- el tipo de tercero es el 7 y no el 28
        'Call CreaTercero(28, Agencia, ter_agencia)
        Call CreaTercero(7, Agencia, ter_agencia)
        
        If Inserto_estr Then
            Call CreaComplemento(28, ter_agencia, nro_Agencia, Agencia)
        End If
    Else
        nro_Agencia = 0
    End If
    
    
'Fin lectura de campos
' =====================================================================================================

'JPB - Inicializo el pass+perfil (l_ess_Pass_Estandar y l_ess_Perfil_Estandar) por defecto del Autogestion en el caso que este habilitado el confper 12
'--------------------------------
Call ESS_Configuracion_Default
'-------------------------------


  ' Inserto el Tercero
  If F_Nacimiento = "Null" Then
    F_Nacimiento = "''"
  End If
  If F_Ingreso = "Null" Then
    F_Ingreso = "''"
  End If
  
  If CalculaLegajo Then
    Call CalcularLegajo(nro_empresa, Legajo)
  End If

    If Not ExisteLeg Then
    
        'Busco si esta config la maxima cant de empleados
        MaxEmpl = 0
        StrSql = "SELECT lib_generica FROM sistema"
        OpenRecordset StrSql, rs_Sql
        If Not EsNulo(rs_Sql!lib_generica) Then
            If IsNumeric(Decryptar("56238", rs_Sql!lib_generica)) Then MaxEmpl = Decryptar("56238", rs_Sql!lib_generica)
        End If
        
        If MaxEmpl > 0 Then
            'Calculo la cantidad actual de empleados
            StrSql = "SELECT COUNT(empleg) cant FROM empleado"
            OpenRecordset StrSql, rs_Sql
            If Not rs_Sql.EOF Then
                If Not EsNulo(rs_Sql!cant) Then CantEmpl = rs_Sql!cant
            End If
            
            'Controlo cantidad
            If CantEmpl >= MaxEmpl Then
                Texto = ": " & "El sistema alcanzo el maximo de " & MaxEmpl & " empleados permitidos."
                Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
                RegError = RegError + 1
                Exit Sub
            End If
        End If
    
        StrSql = " INSERT INTO tercero(ternom,terape,terfecnac,tersex,terestciv,estcivnro,nacionalnro,paisnro,terfecing)"
        StrSql = StrSql & " VALUES('" & nombre & "','" & Apellido & "'," & F_Nacimiento & "," & ter_sexo & "," & nro_estcivil & "," & nro_estcivil & ","
        If nro_nacionalidad <> 0 Then
            StrSql = StrSql & nro_nacionalidad & ","
        Else
            StrSql = StrSql & "null,"
        End If
        If nro_paisnac <> 0 Then
            StrSql = StrSql & nro_paisnac & ","
        Else
            StrSql = StrSql & "null,"
        End If
        StrSql = StrSql & F_Ingreso & ")"
        objConn.Execute StrSql, , adExecuteNoRecords

        NroTercero = getLastIdentity(objConn, "tercero")
        
        Texto = ": " & "Codigo de Tercero = " & NroTercero
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
    Else
        StrSql = " UPDATE tercero SET "
        StrSql = StrSql & " ternom = " & "'" & nombre & "'"
        StrSql = StrSql & ", terape = " & "'" & Apellido & "'"
        StrSql = StrSql & ", terfecnac = " & F_Nacimiento
        StrSql = StrSql & ", tersex = " & ter_sexo
        StrSql = StrSql & ", terestciv =" & nro_estcivil
        StrSql = StrSql & ", estcivnro =" & "'" & nro_estcivil & "'"
        If nro_nacionalidad <> 0 Then
            StrSql = StrSql & ", nacionalnro =" & nro_nacionalidad
        End If
        StrSql = StrSql & ", terfecing =" & F_Ingreso
        If nro_paisnac <> 0 Then
            StrSql = StrSql & ", paisnro =" & nro_paisnac
        End If
        StrSql = StrSql & " WHERE ternro = " & NroTercero
        objConn.Execute StrSql, , adExecuteNoRecords
      
        Texto = ": " & " - Empleado: " & Legajo & " - Ese Empleado ya existe en la base. Datos de tercero actualizados"
        NroColumna = 1
        Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    
    If Not ExisteLeg Then
        StrSql = " INSERT INTO empleado(empleg,empfecalta,empfecbaja,empest,empfaltagr,empfbajaprev,"
        StrSql = StrSql & "ternro,nivnro,empestudia,terape,ternom,empinterno,empemail,"
        StrSql = StrSql & "empnro,tplatenro,empremu"
        If Nro_Reporta_a <> 0 Then
            StrSql = StrSql & ",empreporta"
        End If
        
        'JPB - Si esta habilitado el confper 12 asigno el pass+perfil por defecto al empleado
        '------------------------------------------------------------------------------------
        If (l_ess_Pass_Estandar <> "") And (l_ess_Perfil_Estandar <> "") Then
             StrSql = StrSql & ",empessactivo,emppass,perfnro"
        End If
        '------------------------------------------------------------------------------------

        StrSql = StrSql & ") VALUES("
        StrSql = StrSql & Legajo & "," & F_Alta & "," & F_Baja & "," & ter_estado & "," & F_Alta & "," & Fecha_FinContrato & ","
        StrSql = StrSql & NroTercero & "," & nro_nivest & "," & ter_estudio & ",'" & Apellido & "','"
        StrSql = StrSql & nombre & "',Null,'" & Email & "',1," & nro_ModOrg & "," & Empremu
        If Nro_Reporta_a <> 0 Then
            StrSql = StrSql & "," & Nro_Reporta_a
        End If
        
        'JPB - Si esta habilitado el confper 12 asigno el pass+perfil por defecto al empleado
        '------------------------------------------------------------------------------------
        If (l_ess_Pass_Estandar <> "") And (l_ess_Perfil_Estandar <> "") Then
             StrSql = StrSql & ",-1,'" & l_ess_Pass_Estandar & "'," & l_ess_Perfil_Estandar
        End If
        '------------------------------------------------------------------------------------
        
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        Texto = ": " & "Empleado insertado - " & Legajo & " - " & Apellido & " - " & nombre
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
    Else
        StrSql = " UPDATE empleado SET "
        StrSql = StrSql & " empleg = " & Legajo
        StrSql = StrSql & " ,empfecalta = " & F_Alta
        StrSql = StrSql & " ,empfecbaja = " & F_Baja
        StrSql = StrSql & " ,empfbajaprev = " & Fecha_FinContrato
        StrSql = StrSql & " ,empest = " & ter_estado
        StrSql = StrSql & " ,empfaltagr = " & F_Alta
        StrSql = StrSql & " ,nivnro = " & nro_nivest
        StrSql = StrSql & " ,empestudia = " & ter_estudio
        StrSql = StrSql & " ,terape = " & "'" & Apellido & "'"
        StrSql = StrSql & " ,ternom = " & "'" & nombre & "'"
        StrSql = StrSql & " ,empemail = " & "'" & Email & "'"
        StrSql = StrSql & " ,empnro = 1 "
        StrSql = StrSql & " ,tplatenro =" & nro_ModOrg
        StrSql = StrSql & " ,Empremu =" & Empremu
        If Nro_Reporta_a <> 0 Then
            StrSql = StrSql & ", empreporta =" & Nro_Reporta_a
        End If
        
        'JPB - Si esta habilitado el confper 12 asigno el pass+perfil por defecto al empleado
        '------------------------------------------------------------------------------------
        If (l_ess_Pass_Estandar <> "") And (l_ess_Perfil_Estandar <> "") Then
            StrSql = StrSql & ", empessactivo = -1"
            StrSql = StrSql & ", emppass = '" & l_ess_Pass_Estandar & "'"
            StrSql = StrSql & ", perfnro =" & l_ess_Perfil_Estandar
        End If
        '------------------------------------------------------------------------------------
        
        StrSql = StrSql & " WHERE ternro = " & NroTercero
        objConn.Execute StrSql, , adExecuteNoRecords
    
        Texto = ": " & "Empleado Actualizado - " & Legajo & " - " & Apellido & " - " & nombre
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
    End If
    
    ' Inserto el Registro correspondiente en ter_tip
    If Not ExisteLeg Then
        StrSql = " INSERT INTO ter_tip(ternro,tipnro) VALUES(" & NroTercero & ",1)"
        objConn.Execute StrSql, , adExecuteNoRecords
    End If

' Inserto los Documentos
    If Not ExisteLeg Then
        If Nro_TDocumento <> 0 Then
            StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
            StrSql = StrSql & " VALUES(" & NroTercero & "," & Nro_TDocumento & ",'" & Ndocu & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            Texto = ": " & "Inserte el Documento - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        End If
    Else
        If Nro_TDocumento <> 0 Then
            StrSql = "SELECT * FROM ter_doc WHERE ternro = " & NroTercero
            StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If rs.EOF Then
                StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
                StrSql = StrSql & " VALUES(" & NroTercero & "," & Nro_TDocumento & ",'" & Ndocu & "')"
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = ": " & "Inserte el Documento - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            Else
                StrSql = " UPDATE ter_doc SET "
                StrSql = StrSql & " nrodoc = '" & Ndocu & "'"
                StrSql = StrSql & " WHERE ternro = " & NroTercero
                StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = Texto = ": " & "Documento actualizado - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
    End If
  
    If Not ExisteLeg Then
        If Cuil <> "" Then
            StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
            StrSql = StrSql & " VALUES(" & NroTercero & ",10,'" & Cuil & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            Texto = ": " & "Inserte el CUIL - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        End If
    Else
        If Cuil <> "" Then
            StrSql = "SELECT * FROM ter_doc WHERE ternro = " & NroTercero
            StrSql = StrSql & " AND tidnro = 10 "
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If rs.EOF Then
                StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
                StrSql = StrSql & " VALUES(" & NroTercero & ",10,'" & Cuil & "')"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Inserte el CUIL - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            Else
                StrSql = " UPDATE ter_doc SET "
                StrSql = StrSql & " nrodoc = '" & Cuil & "'"
                StrSql = StrSql & " WHERE ternro = " & NroTercero
                StrSql = StrSql & " AND tidnro = 10"
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = Texto = ": " & "CUIL actualizado - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
    End If

' Inserto el Domicilio
  If rs.State = adStateOpen Then
    rs.Close
  End If
  
  If Not ExisteLeg Then
    If (Nro_Localidad <> 0 And Nro_Provincia <> 0 And Nro_Pais <> 0) Then
        StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
        StrSql = StrSql & " VALUES(1," & NroTercero & ",-1,2)"
        objConn.Execute StrSql, , adExecuteNoRecords
        
        NroDom = getLastIdentity(objConn, "cabdom")
      
        StrSql = " INSERT INTO detdom(domnro,calle,nro,piso,oficdepto,torre,manzana,codigopostal,entrecalles,"
        StrSql = StrSql & "locnro,provnro,paisnro,barrio,partnro,zonanro) "
        StrSql = StrSql & " VALUES (" & NroDom & ",'" & Calle & "','" & Nro_Nrodom & "','" & Piso & "','"
        StrSql = StrSql & Depto & "','" & Torre & "','" & Manzana & "','" & Cpostal & "','" & Entre & "'," & Nro_Localidad & ","
        StrSql = StrSql & Nro_Provincia & "," & Nro_Pais & ",'" & Barrio & "'," & Nro_Partido & "," & Nro_Zona & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
      
        Texto = ": " & "Inserte el Domicilio - "
        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        
        If Telefono <> "" Then
            'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
            StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
            StrSql = StrSql & " VALUES(" & NroDom & ",'" & Telefono & "',0,-1,0,1)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            Texto = ": " & "Inserte el Telefono Principal - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        End If
        If TelLaboral <> "" Then
            StrSql = "SELECT * FROM telefono "
            StrSql = StrSql & " WHERE domnro =" & NroDom
            StrSql = StrSql & " AND telnro ='" & TelLaboral & "'"
            If rs_Tel.State = adStateOpen Then rs_Tel.Close
            OpenRecordset StrSql, rs_Tel
            If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelLaboral & "',0,0,0,3)"
                objConn.Execute StrSql, , adExecuteNoRecords
                  
                Texto = ": " & "Inserte el Telefono Laboral - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
        If TelCelular <> "" Then
            StrSql = "SELECT * FROM telefono "
            StrSql = StrSql & " WHERE domnro =" & NroDom
            StrSql = StrSql & " AND telnro ='" & TelCelular & "'"
            If rs_Tel.State = adStateOpen Then rs_Tel.Close
            OpenRecordset StrSql, rs_Tel
            If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelCelular & "',0,0,-1,2)"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Inserte el Telefono Celular - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
    End If
  Else
    If (Nro_Localidad <> 0 And Nro_Provincia <> 0 And Nro_Pais <> 0) Then
        StrSql = "SELECT * FROM cabdom  "
        StrSql = StrSql & " WHERE tipnro = 1"
        StrSql = StrSql & " AND ternro = " & NroTercero
        StrSql = StrSql & " AND domdefault = -1"
        StrSql = StrSql & " AND tidonro = 2"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
          StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
          StrSql = StrSql & " VALUES(1," & NroTercero & ",-1,2)"
          objConn.Execute StrSql, , adExecuteNoRecords
          
          NroDom = getLastIdentity(objConn, "cabdom")
        
          StrSql = " INSERT INTO detdom(domnro,calle,nro,piso,oficdepto,torre,manzana,codigopostal,entrecalles,"
          StrSql = StrSql & "locnro,provnro,paisnro,barrio,partnro,zonanro) "
          StrSql = StrSql & " VALUES (" & NroDom & ",'" & Calle & "','" & Nro_Nrodom & "','" & Piso & "','"
          StrSql = StrSql & Depto & "','" & Torre & "','" & Manzana & "','" & Cpostal & "','" & Entre & "'," & Nro_Localidad & ","
          StrSql = StrSql & Nro_Provincia & "," & Nro_Pais & ",'" & Barrio & "'," & Nro_Partido & "," & Nro_Zona & ")"
          objConn.Execute StrSql, , adExecuteNoRecords
        
          Texto = ": " & "Inserte el Domicilio - "
          Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
          
          If Telefono <> "" Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
              StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
              StrSql = StrSql & " VALUES(" & NroDom & ",'" & Telefono & "',0,-1,0,1)"
              objConn.Execute StrSql, , adExecuteNoRecords

              Texto = ": " & "Inserte el Telefono Principal - "
              Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
          End If
          If TelLaboral <> "" Then
              StrSql = "SELECT * FROM telefono "
              StrSql = StrSql & " WHERE domnro =" & NroDom
              StrSql = StrSql & " AND telnro ='" & TelLaboral & "'"
              If rs_Tel.State = adStateOpen Then rs_Tel.Close
              OpenRecordset StrSql, rs_Tel
              If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                  StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                  StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelLaboral & "',0,0,0,3)"
                  objConn.Execute StrSql, , adExecuteNoRecords
                    
                  Texto = ": " & "Inserte el Telefono Laboral - "
                  Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
              End If
          End If
          If TelCelular <> "" Then
              StrSql = "SELECT * FROM telefono "
              StrSql = StrSql & " WHERE domnro =" & NroDom
              StrSql = StrSql & " AND telnro ='" & TelCelular & "'"
              If rs_Tel.State = adStateOpen Then rs_Tel.Close
              OpenRecordset StrSql, rs_Tel
              If rs_Tel.EOF Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                  StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                  StrSql = StrSql & " VALUES(" & NroDom & ",'" & TelCelular & "',0,0,-1,2)"
                  objConn.Execute StrSql, , adExecuteNoRecords
                  Texto = ": " & "Inserte el Telefono Celular - "
                  Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
              End If
          End If
        Else
            StrSql = " UPDATE detdom SET "
            StrSql = StrSql & " calle =" & "'" & Calle & "'"
            StrSql = StrSql & ",nro =" & "'" & Nro_Nrodom & "'"
            StrSql = StrSql & ",piso =" & "'" & Piso & "'"
            StrSql = StrSql & ",oficdepto =" & "'" & Depto & "'"
            StrSql = StrSql & ",torre =" & "'" & Torre & "'"
            StrSql = StrSql & ",manzana =" & "'" & Manzana & "'"
            StrSql = StrSql & ",codigopostal =" & "'" & Cpostal & "'"
            StrSql = StrSql & ",entrecalles =" & "'" & Entre & "'"
            StrSql = StrSql & ",locnro =" & Nro_Localidad
            StrSql = StrSql & ",provnro =" & Nro_Provincia
            StrSql = StrSql & ",paisnro =" & Nro_Pais
            StrSql = StrSql & ", partnro = " & Nro_Partido
            StrSql = StrSql & ", zonanro =" & Nro_Zona
            StrSql = StrSql & " WHERE domnro = " & rs!domnro
            objConn.Execute StrSql, , adExecuteNoRecords
        
            Texto = ": " & "Domicilio Actualizado - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        
            If Telefono <> "" Then
                StrSql = "SELECT * FROM telefono "
                StrSql = StrSql & " WHERE domnro =" & rs!domnro
                StrSql = StrSql & " AND telnro ='" & Telefono & "'"
                If rs_Tel.State = adStateOpen Then rs_Tel.Close
                OpenRecordset StrSql, rs_Tel
                If rs_Tel.EOF Then
                    'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                    StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                    StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & Telefono & "',0,-1,0,1)"
                    objConn.Execute StrSql, , adExecuteNoRecords
                      
                    Texto = ": " & "Inserte el Telefono Principal - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            End If
            If TelLaboral <> "" Then
                StrSql = "SELECT * FROM telefono "
                StrSql = StrSql & " WHERE domnro =" & rs!domnro
                StrSql = StrSql & " AND telnro ='" & TelLaboral & "'"
                If rs_Tel.State = adStateOpen Then rs_Tel.Close
                OpenRecordset StrSql, rs_Tel
                If rs_Tel.EOF Then
                    'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                    StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                    StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & TelLaboral & "',0,0,0,3)"
                    objConn.Execute StrSql, , adExecuteNoRecords
                      
                    Texto = ": " & "Inserte el Telefono Laboral - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            End If
            If TelCelular <> "" Then
                StrSql = "SELECT * FROM telefono "
                StrSql = StrSql & " WHERE domnro =" & rs!domnro
                StrSql = StrSql & " AND telnro ='" & TelCelular & "'"
                If rs_Tel.State = adStateOpen Then rs_Tel.Close
                OpenRecordset StrSql, rs_Tel
                If rs_Tel.EOF Then
                    'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                    StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                    StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & TelCelular & "',0,0,-1,2)"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = ": " & "Inserte el Telefono Celular - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            End If
        End If
    End If
  End If
  


If Not ExisteLeg Then
    ' Inserto las Fases
    StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
    StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
    If nro_causabaja <> 0 Then
        StrSql = StrSql & nro_causabaja
        StrSql = StrSql & ",0,-1,-1,-1,-1,-1)"  ' estado fase=0  - no mira ter_estado
    Else
        StrSql = StrSql & "null"
        StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
    End If
    objConn.Execute StrSql, , adExecuteNoRecords
    
    If nro_causabaja <> 0 Then
        Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
    End If
    
Else
    'FGZ - 23/07/2010
    'SI existe el legajo reviso si estaba activo o inactivo.
    '   Si estaba inactivo y ahora el estado es activo dedeuzco que se trata de un reingreso
    '   ==> intento insertar la fase.
    '   Problemas potenciales
    '
    '   Existe Fase cerrada *****
    '   Fase anterior  ------[------------------]--------
    'Casos
    '   Fecha ingreso  ---FI----------------------------- ==> no se puede insertar (informar error)
    '   Fecha ingreso  ---------   FI-------------------- ==> tenfo 2 posibilidades
    '                                                           Cierro fase un dia antes de FI y creo nueva fase
    '                                                           no se puede insertar (informar error)
    '   Fecha ingreso  -----------------------------FI--- ==> inserto la nueva fase
    
    '   Existe Fase abierta *****
    '   Fase anterior  ------[---------------------------
    'Casos
    '   Fecha ingreso  ---FI----------------------------- ==> no se puede insertar (informar error)
    '   Fecha ingreso  -------------FI------------------- ==> Cierro fase un dia antes de FI y creo nueva fase
   
    'Si no existe fase ==> simplemente crea la fase
    
    StrSql = "SELECT * FROM fases WHERE empleado = " & NroTercero
    StrSql = StrSql & " ORDER BY altfec DESC"
    OpenRecordset StrSql, rs
    
    If rs.EOF Then
        'No Existe ==> Inserto
        StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
        StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
        If nro_causabaja <> 0 Then
          StrSql = StrSql & nro_causabaja
          StrSql = StrSql & ",0,-1,-1,-1,-1,-1)"  ' estado fase=0  - no mira ter_estado
        Else
          StrSql = StrSql & "null"
          StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
        End If
        objConn.Execute StrSql, , adExecuteNoRecords
        
        If nro_causabaja <> 0 Then
            Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
        End If
        
    Else
        'Existe
        Texto = ": " & "Existe Fase"
        If CBool(rs!Estado) Then
            'Activa
            Texto = Texto & " activa. " & rs!altfec & " - " & IIf(EsNulo(rs!bajfec), "#", rs!bajfec)
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            
            
            'Si ahora está inactivo ==> actualiza la fase
            If Not CBool(ter_estado) Then
                'la cierro y abro otro
                StrSql = " UPDATE fases SET "
                StrSql = StrSql & " bajfec =" & F_Baja
                StrSql = StrSql & ",estado = 0 "
                If nro_causabaja <> 0 Then
                StrSql = StrSql & ", caunro =" & nro_causabaja
                End If
                StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
                objConn.Execute StrSql, , adExecuteNoRecords
            
                Texto = ": " & "Fase Actualizada."
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                
                If nro_causabaja <> 0 Then
                    Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
                End If
                
            Else
                Texto = ": " & "Si desea actualizar debe corregir la situacion manualmente."
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
            
        Else
            'Inactiva
            Texto = Texto & " inactiva "
            If EsNulo(rs!bajfec) Then
                Texto = Texto & " abierta " & rs!altfec & " - #"
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                
                If CDate(rs!altfec) < CDate(FAlta) Then
                    Texto = ": " & "Cierro la fase anterior (un dia antes) y creo la nueva fase"
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    
                    'la cierro y abro otro - (se cierra a FAlta-1)
                    StrSql = " UPDATE fases SET "
                    StrSql = StrSql & "bajfec =" & ConvFecha(DateAdd("d", -1, FAlta))
                    StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
                    objConn.Execute StrSql, , adExecuteNoRecords
                        
                    'abro una nueva
                    StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
                    StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
                    If nro_causabaja <> 0 Then
                      StrSql = StrSql & nro_causabaja
                      StrSql = StrSql & ",0,-1,-1,-1,-1,-1)"
                    Else
                      StrSql = StrSql & "null"
                      StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    Texto = ": " & "Fase Actualizada."
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    
                    If nro_causabaja <> 0 Then
                        Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
                    End If
                    
                Else
                    If CDate(rs!altfec) > CDate(FAlta) Then
                        Texto = ": " & "No se puede actualizar las fases. Debe corregir la situacion manualmente."
                        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    Else
                        'es la misma fase, no hago nada.
                        ' actualiza
                        
                        StrSql = " UPDATE fases SET "
                        StrSql = StrSql & " bajfec =" & F_Baja
                        If nro_causabaja <> 0 Then
                        StrSql = StrSql & ", caunro =" & nro_causabaja
                        End If
                        StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
                        objConn.Execute StrSql, , adExecuteNoRecords
                    
                        Texto = ": " & "Fase Actualizada - "
                        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                            
                        If nro_causabaja <> 0 Then
                            Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
                        End If
                            
                    End If
                End If
            Else
                Texto = Texto & " cerrada " & rs!altfec & " - " & rs!bajfec
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            
                If CDate(rs!altfec) < CDate(FAlta) And CDate(rs!bajfec) < CDate(FAlta) Then
                    'Fase existente ------[------]-----------
                    'Nueva fase     ---------------[-----]---
                    
                    'abro una nueva
                    StrSql = " INSERT INTO fases(empleado,altfec,bajfec,caunro,estado,sueldo,vacaciones,indemnizacion,real,fasrecofec)"
                    StrSql = StrSql & " VALUES( " & NroTercero & "," & F_Alta & "," & F_Baja & ","
                    If nro_causabaja <> 0 Then
                      StrSql = StrSql & nro_causabaja
                      StrSql = StrSql & ",0,-1,-1,-1,-1,-1)"
                    Else
                      StrSql = StrSql & "null"
                      StrSql = StrSql & "," & ter_estado & ",-1,-1,-1,-1,-1)"
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    Texto = ": " & "Fase creada."
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    
                    If nro_causabaja <> 0 Then
                        Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
                    End If
                    
                Else
                    'FGZ - 11/11/2010 --------------------------
                    If CDate(rs!altfec) = CDate(FAlta) And CDate(rs!bajfec) = CDate(FBaja) Then
                        If nro_causabaja <> 0 Then
                            StrSql = " UPDATE fases SET "
                            StrSql = StrSql & " caunro =" & nro_causabaja
                            StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
                            objConn.Execute StrSql, , adExecuteNoRecords
                    
                            Texto = ": " & "Fase Actualizada - "
                            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                            
                            Call AsignarSitRevistaAsoc(nro_causabaja, NroTercero, F_Baja)
                            
                        Else
                        
                        End If
                    Else
                        Texto = ": " & "No se puede crear la fases nueva. Debe corregir la situacion manualmente."
                        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    End If
                End If
            End If
        End If
    End If
'        StrSql = " UPDATE fases SET "
'        StrSql = StrSql & " altfec =" & F_Alta
'        StrSql = StrSql & ",bajfec =" & F_Baja
'        StrSql = StrSql & " WHERE fasnro = " & rs!fasnro
'        objConn.Execute StrSql, , adExecuteNoRecords
'
'        Texto = ": " & "Fase Actualizada - "
'        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
'    End If
End If
    
    
    

  
  'Inserto la cuenta bancaria
    If Not ExisteLeg Then
        'FGZ - 09/04/2010 ------------------------------------------------------------------------------
        'FGZ - 09/04/2010 - Es obligatorio el nro de cuenta o el CBU -----------------------------------
        'If (nro_formapago <> 0 And ter_bancopago <> 0 And NroCuenta <> "") Then
        If (nro_formapago <> 0 And ter_bancopago <> 0 And (NroCuenta <> "" Or NroCBU <> "")) Then
                StrSql = " INSERT INTO ctabancaria (ternro,fpagnro,banco,ctabestado,"
                StrSql = StrSql & "ctabsuc,ctabnro,ctabporc,ctabcbu"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",ctabacred"
                End If
                StrSql = StrSql & ") VALUES ("
                StrSql = StrSql & NroTercero & "," & nro_formapago & "," & ter_bancopago & ","
                StrSql = StrSql & "-1,'" & Left(SucBanco, 10) & "','" & NroCuenta & "',100,'" & NroCBU & "'"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",'" & NroCuentaAcreditacionE & "'"
                End If
                StrSql = StrSql & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Inserte la Cuenta Bancaria - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs, strReg)
        End If
    Else
        'If (nro_formapago <> 0 And ter_bancopago <> 0 And NroCuenta <> "") Then
        If (nro_formapago <> 0 And ter_bancopago <> 0 And (NroCuenta <> "" Or NroCBU <> "")) Then
            StrSql = "SELECT * FROM ctabancaria"
            StrSql = StrSql & " WHERE ctabancaria.ternro =" & NroTercero
            StrSql = StrSql & " AND ctabestado = -1 "
            StrSql = StrSql & " AND banco =" & ter_bancopago
            StrSql = StrSql & " AND fpagnro =" & nro_formapago
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If rs.EOF Then
                StrSql = " INSERT INTO ctabancaria (ternro,fpagnro,banco,ctabestado,"
                StrSql = StrSql & "ctabsuc,ctabnro,ctabporc,ctabcbu"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",ctabacred"
                End If
                StrSql = StrSql & ") VALUES ("
                StrSql = StrSql & NroTercero & "," & nro_formapago & "," & ter_bancopago & ","
                StrSql = StrSql & "-1,'" & Left(SucBanco, 10) & "','" & NroCuenta & "',100,'" & NroCBU & "'"
                If Not EsNulo(NroCuentaAcreditacionE) Then
                    StrSql = StrSql & ",'" & NroCuentaAcreditacionE & "'"
                End If
                StrSql = StrSql & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                Texto = ": " & "Inserte la Cuenta Bancaria - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            Else
                If rs!ctabnro = NroCuenta Then
                    StrSql = "UPDATE ctabancaria SET "
                    StrSql = StrSql & " ctabsuc = '" & SucBanco & "'"
                    If Not EsNulo(NroCuentaAcreditacionE) Then
                        StrSql = StrSql & ", ctabacred = '" & NroCuentaAcreditacionE & "'" '20-12-2010
                    End If
                    StrSql = StrSql & ", ctabnro = '" & NroCuenta & "'"
                    StrSql = StrSql & ", ctabporc = 100 "
                    StrSql = StrSql & ", ctabcbu = '" & NroCBU & "'"
                    StrSql = StrSql & " WHERE ctabancaria.ternro =" & NroTercero
                    StrSql = StrSql & " AND ctabestado = -1 "
                    StrSql = StrSql & " AND banco =" & ter_bancopago
                    StrSql = StrSql & " AND fpagnro =" & nro_formapago
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    Texto = ": " & "Cuenta Bancaria actualizada- "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                Else
                    'Desactivo la anterior
                    StrSql = " UPDATE ctabancaria SET "
                    StrSql = StrSql & " ctabestado = 0 "
                    StrSql = StrSql & " WHERE cbnro = " & rs!Cbnro
                    objConn.Execute StrSql, , adExecuteNoRecords
                    
                    'inserto la nueva
                    StrSql = " INSERT INTO ctabancaria (ternro,fpagnro,banco,ctabestado,"
                    StrSql = StrSql & "ctabsuc,ctabnro,ctabporc,ctabcbu"
                    If Not EsNulo(NroCuentaAcreditacionE) Then
                        StrSql = StrSql & ",ctabacred"
                    End If
                    StrSql = StrSql & ") VALUES ("
                    StrSql = StrSql & NroTercero & "," & nro_formapago & "," & ter_bancopago & ","
                    StrSql = StrSql & "-1,'" & Left(SucBanco, 10) & "','" & NroCuenta & "',100,'" & NroCBU & "'"
                    If Not EsNulo(NroCuentaAcreditacionE) Then
                        StrSql = StrSql & ",'" & NroCuentaAcreditacionE & "'"
                    End If
                    StrSql = StrSql & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    Texto = ": " & "Inserte la Cuenta Bancaria - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            End If
        End If
    End If
  

  
  'FGZ - 02/03/2011 - se sacó la fecha de baja para el manejo de estructuras
  F_Baja = "Null"
  Call AsignarEstructura_NEW(1, nro_sucursal, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(2, nro_sector, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(3, nro_categoria, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(4, nro_puesto, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(5, nro_ccosto, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(6, nro_gerencia, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(7, Nro_GrupoSeguridad, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(9, nro_departamento, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(10, nro_empresa, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(15, nro_cajajub, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(16, nro_sindicato, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(17, nro_osocial_elegida, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(18, nro_contrato, NroTercero, F_Alta, F_Baja)
  'Call AsignarEstructura_NEW(18, nro_contrato, NroTercero, F_Alta, Fecha_FinContrato)
  Call AsignarEstructura_NEW(19, nro_convenio, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(20, nro_lpago, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(21, nro_reghorario, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(22, nro_formaliq, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(23, nro_planos_elegida, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(24, nro_osocial_ley, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(25, nro_planos_ley, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(28, nro_Agencia, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(29, nro_actividad, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(30, nro_sitrev, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(31, nro_condsijp, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(35, nro_direccion, NroTercero, F_Alta, F_Baja)
  Call AsignarEstructura_NEW(40, nro_art, NroTercero, F_Alta, F_Baja)
  'Call AsignarEstructura_NEW(41, nro_bancopago, NroTercero, F_Alta, F_Baja)
  
  
  
  
Texto = ": " & "Linea procesada correctamente "
Call Escribir_Log("flogp", LineaCarga, NroColumna, Texto, Tabs + 1, strReg)
'LineaOK.Writeline Mid(strReg, 1, Len(strReg))
OK = True
         
FinLinea:
If rs.State = adStateOpen Then
    rs.Close
End If
Exit Sub

SaltoLinea:
    Texto = ": " & " - Error:" & Err.Description & " -- Ultima consulta: " & StrSql
    NroColumna = 1
    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    MyRollbackTrans
    OK = False
    GoTo FinLinea
End Sub



Public Sub LineaModelo_911(ByVal strReg As String, ByRef OK As Boolean)
' ---------------------------------------------------------------------------------------------
' Descripcion: Migracion de Familiares CHile
'               Es una copia de modelo 602 con la idea de agregarle lo particular de Chile
' Autor      : FGZ
' Fecha      : 19/07/2011
' Ultima Mod.:
' Descripcion:
' ---------------------------------------------------------------------------------------------
Dim Legajo          As Long    ' Legajo del Empleado
Dim Apellido        As String  ' Apellido del Familiar
Dim nombre          As String  ' Nombre del Familiar
Dim Fnac            As String  ' Fecha de Nacimiento del Familiar
Dim NAC             As String  ' Nacionalidad del Familiar
Dim PaisNac         As String  ' Pais de Nacimiento
Dim EstCiv          As String  ' Estado Civil
Dim Sexo            As String  ' Sexo del Familiar
Dim GPare           As String  ' Grado de Parentesco
Dim Disc            As String  ' Discapacitado
Dim Estudia         As String  ' Estudia
Dim NivEst          As String  ' Nivel de Estudio
Dim TipDoc          As String  ' Tipo de Documento del Familiar
Dim NroDoc          As String  ' Nº de Documento del Familiar
Dim Calle           As String   'Calle                    -- detdom.calle
Dim Nro             As String   'Número                   -- detdom.nro
Dim Piso            As String   'Piso                     -- detdom.piso
Dim Depto           As String   'Depto                    -- detdom.depto
Dim Torre           As String   'Torre                    -- detdom.torre
Dim Manzana         As String   'Manzana                  -- detdom.manzana
Dim Cpostal         As String   'Cpostal                  -- detdom.codigopostal
Dim Entre           As String   'Entre Calles             -- detdom.entrecalles
Dim Barrio          As String   'Barrio                   -- detdom.barrio
Dim Localidad       As String   'Localidad                -- detdom.locnro
Dim Partido         As String   'Partido                  -- detdom.partnro
Dim Zona            As String   'Zona                     -- detdom.zonanro
Dim Provincia       As String   'Provincia                -- detdom.provnro
Dim Pais            As String   'Pais                     -- detdom.paisnro
Dim Telefono        As String   'Telefono                 -- telefono.telnro
Dim ObraSocial      As String   'Obra Social
Dim PlanOSocial     As String   'Plan Obra Social
Dim AvisoEmer       As String   'Aviso ante Emergencia

'FGZ - 19/07/2011 ------------------------------------------------
'Dim PagaSalario     As String   'Paga Salario Familiar
'Dim Ganancias       As String   'Se lo toma para ganancias
Dim fechaInicio     As String   ' Fecha de inicio de familiar
Dim fechaVto        As String   ' Fecha de vencimiento de familiar
'FGZ - 19/07/2011 ------------------------------------------------
Dim Cuil            As String  ' CUIL del Familiar
Dim ESC             As String  ' Escolaridad
Dim GRADO           As String  ' Grado al que concurre
Dim NroTDoc         As String

Dim pos1            As Long
Dim pos2            As Long

Dim NroTercero      As Long
Dim NroEmpleado     As Long
Dim CodTerFam       As String
Dim Nro_Nrodom      As String
Dim NroDom          As Long
Dim Nro_TDocumento  As Long
Dim nro_nacionalidad As Long
Dim nro_paisnac      As Long
Dim nro_estciv      As Long
Dim nro_Sexo        As Long
Dim nro_estudia     As Long
Dim nro_nivest      As String
Dim nro_osocial     As Long
Dim nro_planos      As Long
Dim nro_aviso       As Long
Dim nro_salario     As Long
Dim nro_gan         As Long
Dim nro_disc        As Long
Dim nro_paren        As Long
Dim Nro_Barrio          As Long
Dim Nro_Localidad       As Long
Dim Nro_Partido         As Long
Dim Nro_Zona            As Long
Dim Nro_Provincia       As Long
Dim Nro_Pais            As Long
Dim OSocial             As String
Dim ter_osocial         As Long
Dim Inserto_estr        As Boolean
Dim IngresoDom          As Boolean
Dim Nro_Institucion As Long

'FGZ - 19/07/2011 ------------------------------------------------
'Dim Item_DDJJ         As Long
'Dim Anio_DDJJ         As String
'Dim Desde_DDJJ        As String
'Dim Hasta_DDJJ        As String
'FGZ - 19/07/2011 ------------------------------------------------

Dim rs_Sql          As New ADODB.Recordset
Dim rs              As New ADODB.Recordset
Dim rs_Tel          As New ADODB.Recordset
Dim rs_Doc          As New ADODB.Recordset

    LineaCarga = LineaCarga + 1
    Tabs = 1
    
    On Error GoTo SaltoLinea
    
    Flog.writeline
    FlogE.writeline
    FlogP.writeline
    
    'Legajo
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Legajo"
    pos1 = 1
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If IsNumeric(Aux) Then
        Legajo = Aux
    Else
        Texto = ": " & "El legajo no es numerico "
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        InsertaError 1, 8
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Apellido
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Apellido"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 0, "")
    Apellido = Left(Aux, 25)
    
    'Nombre
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Nombre"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 0, "")
    nombre = Left(Aux, 25)
    
    'Fecha de Nacimiento
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Fecha de Nacimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Fnac = Aux
    If Fnac = "N/A" Or EsNulo(Fnac) Then
        Fnac = "Null"
    End If
    
    'Pais de Nacimiento
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Pais de Nacimiento"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    PaisNac = Aux
    If PaisNac <> "N/A" Then
        StrSql = " SELECT paisnro FROM pais WHERE UPPER(paisdesc) = '" & UCase(PaisNac) & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            nro_paisnac = rs!Paisnro
        Else
            StrSql = " INSERT INTO pais(paisdesc,paisdef) VALUES ('" & UCase(PaisNac) & "',0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_paisnac = getLastIdentity(objConn, "pais")
        End If
    Else
        nro_paisnac = 0
    End If
    
    'Nacionalidad
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Nacionalidad"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    NAC = UCase(Aux)
    If NAC <> "N/A" And Not EsNulo(NAC) Then
        StrSql = " SELECT nacionalnro FROM nacionalidad WHERE upper(nacionaldes) = '" & NAC & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            nro_nacionalidad = rs!nacionalnro
        Else
            StrSql = " INSERT INTO nacionalidad(nacionaldes) VALUES ('" & UCase(NAC) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_nacionalidad = getLastIdentity(objConn, "nacionalidad")
        End If
    Else
        nro_nacionalidad = 0
    End If
    If nro_nacionalidad = 0 Then
        Texto = ": " & " - Debe ingresar Nacionalidad."
        NroColumna = 5
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    
    
    'Estado Civil
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Estado Civil"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    EstCiv = Left(UCase(Aux), 30)
    If EstCiv <> "N/A" And Not EsNulo(EstCiv) Then
        StrSql = " SELECT estcivnro FROM estcivil WHERE upper(estcivdesabr) = '" & UCase(EstCiv) & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            nro_estciv = rs!estcivnro
        Else
            StrSql = " INSERT INTO estcivil(estcivdesabr) VALUES ('" & UCase(EstCiv) & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_estciv = getLastIdentity(objConn, "estcivil")
        End If
    Else
        nro_estciv = 0
    End If
    If nro_estciv = 0 Then
        Texto = ": " & " - Debe ingresar Estado Civil."
        NroColumna = 6
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Sexo
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Sexo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Sexo = UCase(Aux)
    If Sexo = "M" Or Sexo = "MASCULINO" Or Sexo = "-1" Then
        nro_Sexo = -1
    Else
        nro_Sexo = 0
    End If
    
    'Parentesco
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Parentesco"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    GPare = UCase(Aux)
    StrSql = " SELECT parenro FROM parentesco WHERE upper(paredesc) = '" & UCase(GPare) & "'"
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs
    If Not rs.EOF Then
        nro_paren = rs!parenro
    Else
        nro_paren = 0
    End If
    If nro_paren = 0 Then
        Texto = ": " & " - El parentesco ingresado no existe, verifíquelo." & GPare
        NroColumna = 8
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    
    'Discapacitado
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Discapacitado"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Disc = UCase(Aux)
    If Disc = "N/A" Or Disc = "NO" Then
        nro_disc = 0
    Else
        nro_disc = -1
    End If
    
    'Estudia
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Estudia"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = UCase(Trim(Mid(strReg, pos1, pos2 - pos1 + 1)))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Estudia = Aux
    If Estudia = "N/A" Or Estudia = "NO" Then
        nro_estudia = 0
    Else
        nro_estudia = -1
    End If
    
    'Nivel de estudio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nivel de estudio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = UCase(Trim(Mid(strReg, pos1, pos2 - pos1 + 1)))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    NivEst = Aux
    'Por ahora no hago nada con el nivel de estudio porque en Accor no lo pasaron
    If NivEst = "N/A" Or EsNulo(NivEst) Then
        'StrSql = " SELECT nivnro FROM nivest WHERE nivdes = '" & NivEst & "'"
        'OpenRecordset StrSql, rs
        nro_nivest = 0
    Else
        'busco el primer novel de estudio, si no existe la creo
        StrSql = " SELECT * FROM nivest WHERE nivdesc = '" & NivEst & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            nro_nivest = rs!nivnro
        Else
            'creo una
            StrSql = " INSERT INTO nivest (nivdesc) VALUES ('" & NivEst & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            nro_nivest = getLastIdentity(objConn, "nivest")
        End If
     End If

    'Tipo de Doc
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Tipo de Doc"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    TipDoc = Aux
    If TipDoc <> "N/A" And Not EsNulo(TipDoc) Then
        StrSql = " SELECT tidnro FROM tipodocu WHERE UPPER(tidsigla) = '" & UCase(TipDoc) & "'"
        If rs_Sql.State = adStateOpen Then rs_Sql.Close
        OpenRecordset StrSql, rs_Sql
        If Not rs_Sql.EOF Then
            Nro_TDocumento = rs_Sql!tidnro
        Else
            'busco la primera institucion, si no existe la creo
            StrSql = " SELECT * FROM institucion "
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                Nro_Institucion = rs!InstNro
            Else
                'creo una
                StrSql = " INSERT INTO institucion (instdes,instabre) VALUES ('NACIONAL','NAC')"
                objConn.Execute StrSql, , adExecuteNoRecords
                Nro_Institucion = getLastIdentity(objConn, "institucion")
            End If
            'creo el tipo de documento
            StrSql = " INSERT INTO tipodocu(tidnom,tidsigla,tidsist,instnro,tidunico) VALUES ('" & UCase(TipDoc) & "','" & UCase(TipDoc) & "',0," & Nro_Institucion & ",0)"
            objConn.Execute StrSql, , adExecuteNoRecords
            Nro_TDocumento = getLastIdentity(objConn, "tipodocu")
        End If
    Else
        Nro_TDocumento = 0
    End If
    
    'Nro de Doc
    NroColumna = NroColumna + 1
    Obligatorio = True
    Campoetiqueta = "Nro de Doc"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    NroDoc = Aux
    If NroDoc = "N/A" Or EsNulo(NroDoc) Then
        NroDoc = "0"
    End If
    
    'Calle
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Calle"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Calle = Left(Aux, 250)
    IngresoDom = True
    If Calle = "N/A" Or EsNulo(Calle) Then
        Calle = ""
        IngresoDom = False
    End If
    
    'Nro
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Nro"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Nro = Left(Aux, 8)
    If (Nro <> "N/A") And Not EsNulo(Nro) Then
        Nro_Nrodom = Nro
    Else
        Nro_Nrodom = "S/N"
    End If
    
    'Piso
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Piso"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Piso = Left(Aux, 8)
    If Piso = "N/A" Then
        Piso = ""
    End If
    
    'Depto
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Depto"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Depto = Left(Aux, 8)
    If Depto = "N/A" Then
        Depto = ""
    End If

    'Torre
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Torre"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Torre = Left(Aux, 8)
    If Torre = "N/A" Then
        Torre = ""
    End If
    
    'Manzana
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Manzana"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Manzana = Left(Aux, 8)
    If Manzana = "N/A" Then
        Manzana = ""
    End If

    'Codigo postal
    NroColumna = NroColumna + 1
    Obligatorio = IngresoDom
    Campoetiqueta = "Codigo postal"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Cpostal = Left(Aux, 12)
    If Cpostal = "N/A" Then
        Cpostal = ""
    End If

    'Entre calles
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Entre calles"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Entre = Left(Aux, 80)
    If Entre = "N/A" Then
        Entre = ""
    End If

    'Barrio
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Barrio"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Barrio = Left(Aux, 30)
    If Barrio = "N/A" Then
        Barrio = ""
    End If

    'Comuna
    NroColumna = NroColumna + 1
    Obligatorio = IngresoDom
    Campoetiqueta = "Comuna"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Localidad = Left(Aux, 60)
    
    'Provincia
    NroColumna = NroColumna + 1
    Obligatorio = IngresoDom
    Campoetiqueta = "Provincia"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Provincia = Aux
    
    'Region
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Region"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    '19/03/2010 - Se cambio la longitud a 60
    'Zona = aux
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Zona = Left(Aux, 60)
    
    
    'Pais
    NroColumna = NroColumna + 1
    Obligatorio = IngresoDom
    Campoetiqueta = "Pais"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    Pais = Left(Aux, 20)
    
    If Pais <> "N/A" Then
        Call ValidarPais(Pais, Nro_Pais)
    Else
        Nro_Pais = 0
    End If
       If Localidad <> "N/A" Then
        Call ValidarLocalidad(Localidad, Nro_Localidad, Nro_Pais, Nro_Provincia, Nro_Zona)
    Else
        Nro_Localidad = 0
    End If
    If Provincia <> "N/A" Then
        Call ValidarProvincia(Provincia, Nro_Provincia, Nro_Pais)
    Else
        Nro_Provincia = 0
    End If
    If Zona <> "N/A" Then
        Call ValidarZona(Zona, Nro_Zona, Nro_Provincia)
    Else
        Nro_Zona = 0
    End If
    If (IngresoDom = True) And (Nro_Localidad = 0) Then
        Texto = ": " & " - Debe Ingresar la Comuna."
        NroColumna = 24
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    If (IngresoDom = True) And (Nro_Provincia = 0) Then
        Texto = ": " & " - Debe Ingresar la Provincia."
        NroColumna = 25
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    If (IngresoDom = True) And (Nro_Pais = 0) Then
        Texto = ": " & " - Debe Ingresar la Pais."
        NroColumna = 27
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        'Ok = False
        RegError = RegError + 1
        Exit Sub
    End If
    
 
'    'FGZ - 19/07/2011 ----- cambio de validaciones ------------------
'    If Pais <> "N/A" Then
'        Call ValidarPais(Pais, Nro_Pais)
'    Else
'        Nro_Pais = 0
'    End If
'    If (Provincia <> "N/A") And (Pais <> "N/A") Then
'        Call ValidarProvincia(Provincia, Nro_Provincia, Nro_Pais)
'    Else
'        Nro_Provincia = 0
'    End If
'    If (Localidad <> "N/A") And (Provincia <> "N/A") And (Pais <> "N/A") Then
'        Call ValidarLocalidad(Localidad, Nro_Localidad, Nro_Pais, Nro_Provincia)
'    Else
'        Nro_Localidad = 0
'    End If
'    If Partido <> "N/A" Then
'        Call ValidarPartido(Partido, Nro_Partido)
'    Else
'        Nro_Partido = 0
'    End If
'    If Zona <> "N/A" Then
'        Call ValidarZona(Zona, Nro_Zona, Nro_Provincia)
'    Else
'        Nro_Zona = 0
'    End If
'
'    If (IngresoDom = True) And (Nro_Localidad = 0) Then
'        Texto = ": " & " - Debe Ingresar la Localidad."
'        Nrocolumna = 23
'        Call Escribir_Log("floge", LineaCarga, Nrocolumna, Texto, Tabs, strReg)
'        RegError = RegError + 1
'        Exit Sub
'    End If
'
'    If (IngresoDom = True) And (Nro_Provincia = 0) Then
'        Texto = ": " & " - Debe Ingresar la Provincia."
'        Nrocolumna = 26
'        Call Escribir_Log("floge", LineaCarga, Nrocolumna, Texto, Tabs, strReg)
'        RegError = RegError + 1
'        Exit Sub
'    End If
'
'    If (IngresoDom = True) And (Nro_Pais = 0) Then
'        Texto = ": " & " - Debe Ingresar la Pais."
'        Nrocolumna = 27
'        Call Escribir_Log("floge", LineaCarga, Nrocolumna, Texto, Tabs, strReg)
'        RegError = RegError + 1
'        Exit Sub
'    End If
'    'FGZ - 19/07/2011 ----- cambio de validaciones ------------------
    
    
    
    
    
    'Telefono
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Legajo"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    If Aux = "N/A" Then
        Telefono = ""
    Else
        Aux = EliminarCHInvalidosII(Aux, 3, "")
        Telefono = Aux
    End If

        
    'Obra Social
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Obra Social"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    ObraSocial = Aux
    If ObraSocial = "N/A" Or ObraSocial = "" Then
        nro_osocial = 0
    Else
        StrSql = " SELECT ternro FROM osocial WHERE UPPER(osdesc) = '" & UCase(ObraSocial) & "'"
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If Not rs.EOF Then
            nro_osocial = rs!Ternro
        Else
            nro_osocial = 0
        End If
    End If

    'Plan de OS
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Plan de Obra Social"
    pos1 = pos2 + 2
    pos2 = InStr(pos1, strReg, separador) - 1
    Aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    Aux = EliminarCHInvalidosII(Aux, 1, "")
    PlanOSocial = Aux
    If PlanOSocial = "N/A" Or PlanOSocial = "" Then
        nro_planos = 0
    Else
        If nro_osocial <> 0 Then
            StrSql = " SELECT plnro FROM planos WHERE UPPER(plnom) = '" & UCase(PlanOSocial) & "'"
            StrSql = StrSql & " AND osocial = " & nro_osocial
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If Not rs.EOF Then
                nro_planos = rs!plnro
            Else
                nro_planos = 0
            End If
        Else
            nro_planos = 0
        End If
    End If

    'Aviso Emergencia
    NroColumna = NroColumna + 1
    Obligatorio = False
    Campoetiqueta = "Aviso emergencia"
    pos1 = pos2 + 2
    'pos2 = InStr(pos1, strReg, separador) - 1
    pos2 = Len(strReg)
    Aux = UCase(Trim(Mid(strReg, pos1, pos2 - pos1 + 1)))
    If (Aux = "N/A" Or EsNulo(Aux)) And Obligatorio Then
        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
        Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
        RegError = RegError + 1
        Exit Sub
    End If
    AvisoEmer = Aux
    If AvisoEmer = "N/A" Or AvisoEmer = "NO" Then
        nro_aviso = 0
    Else
        nro_aviso = -1
    End If



    'FGZ - 19/07/2011
    ' Se sacó toda la informacion correspondientes a Ganancias, ddjj y Salario Familiar

    'Paga Salario fliar
'    Nrocolumna = Nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Paga salario familiar"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = UCase(Trim(Mid(strReg, pos1, pos2 - pos1 + 1)))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, Nrocolumna, Texto, Tabs, strReg)
'        RegError = RegError + 1
'        Exit Sub
'    End If
'    PagaSalario = aux
'    If PagaSalario = "N/A" Or PagaSalario = "NO" Then
'        nro_salario = 0
'    Else
'        nro_salario = -1
'    End If
'
'    'Ganancias
'    Nrocolumna = Nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Ganancias"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, Nrocolumna, Texto, Tabs, strReg)
'        RegError = RegError + 1
'        Exit Sub
'    End If
'    Ganancias = aux
'    If Ganancias = "N/A" Or Ganancias = "NO" Or Ganancias = "N" Then
'        nro_gan = 0
'    Else
'        nro_gan = -1
'    End If
'
'
'    'Fecha de Inicio del vinculo
'    Nrocolumna = Nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Fecha de Inicio de Vinculo"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'    If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'        Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'        Call Escribir_Log("floge", LineaCarga, Nrocolumna, Texto, Tabs, strReg)
'        RegError = RegError + 1
'        Exit Sub
'    End If
'    fechaInicio = aux
'    If fechaInicio = "N/A" Or EsNulo(fechaInicio) Then
'        fechaInicio = "Null"
'    End If
'    If fechaInicio = "Null" Then
'        ' Busco la fecha de alta reconocida
'         Campoetiqueta = " Fecha de alta reconocida del empleado "
'         StrSql = "SELECT altfec FROM fases "
'         StrSql = StrSql & " INNER JOIN empleado ON empleado.ternro = fases.empleado "
'         StrSql = StrSql & " WHERE empleg = " & Legajo
'         StrSql = StrSql & " AND fasrecofec = -1 "
'         OpenRecordset StrSql, rs
'         If rs.EOF Then
'             Texto = ": " & " - Campo " & Campoetiqueta & " no esta configurado para el empleado "
'             Nrocolumna = 1
'             Call Escribir_Log("floge", LineaCarga, Nrocolumna, Texto, Tabs, strReg)
'             Exit Sub
'         End If
'         'Calculo la fecha de Inicio
'         If IsDate(Fnac) Then
'             If CDate(rs!altfec) > CDate(Fnac) Then
'                     fechaInicio = rs!altfec
'             Else
'                     fechaInicio = Fnac
'             End If
'         Else
'             Texto = ": " & " - Campo Fecha de Nacimiento del familiar no es válida.El formato es (dd/mm/aaaa) "
'             Nrocolumna = 1
'             Call Escribir_Log("floge", LineaCarga, Nrocolumna, Texto, Tabs, strReg)
'             Exit Sub
'         End If
'    End If
'
'
'   'Fecha Vto
'    Nrocolumna = Nrocolumna + 1
'    Obligatorio = False
'    Campoetiqueta = "Fecha de Vencimiento"
'    pos1 = pos2 + 2
'    pos2 = InStr(pos1, strReg, separador) - 1
'    'pos2 = Len(strReg)
'    If pos2 <= pos1 Then
'        pos2 = Len(strReg)
'
'        aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'        ' Es obligatoria si el empleado paga salario familiar
'        If nro_salario = -1 Then
'            Obligatorio = True
'        Else
'            Obligatorio = False
'        End If
'
'        If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'            Call Escribir_Log("floge", LineaCarga, Nrocolumna, Texto, Tabs, strReg)
'            Exit Sub
'            If Not IsDate(aux) Then
'                Texto = ": " & " - Campo " & Campoetiqueta & " con valor: " & aux & " no tiene un formato de fecha válido (dd/mm/aaaa)."
'                Call Escribir_Log("floge", LineaCarga, Nrocolumna, Texto, Tabs, strReg)
'                Exit Sub
'            End If
'        End If
'        fechaVto = aux
'        If fechaVto = "N/A" Or EsNulo(fechaVto) Then
'            fechaVto = "Null"
'        End If
'    Else
'
'        aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'        ' Es obligatoria si el empleado paga salario familiar
'        If nro_salario = -1 Then
'            Obligatorio = True
'        Else
'            Obligatorio = False
'        End If
'
'        If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'            Call Escribir_Log("floge", LineaCarga, Nrocolumna, Texto, Tabs, strReg)
'            Exit Sub
'            If Not IsDate(aux) Then
'                Texto = ": " & " - Campo " & Campoetiqueta & " con valor: " & aux & " no tiene un formato de fecha válido (dd/mm/aaaa)."
'                Call Escribir_Log("floge", LineaCarga, Nrocolumna, Texto, Tabs, strReg)
'                Exit Sub
'            End If
'        End If
'        fechaVto = aux
'        If fechaVto = "N/A" Or EsNulo(fechaVto) Then
'            fechaVto = "Null"
'        End If
'
'        Item_DDJJ = 0
'
'        'Nro de Item
'        Nrocolumna = Nrocolumna + 1
'        Obligatorio = False
'        Campoetiqueta = "ITEM DDJJ"
'        pos1 = pos2 + 2
'        pos2 = InStr(pos1, strReg, separador) - 1
'        aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'        If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'            Call Escribir_Log("floge", LineaCarga, Nrocolumna, Texto, Tabs, strReg)
'            RegError = RegError + 1
'            Exit Sub
'        Else
'
'            If aux = "N/A" Or EsNulo(aux) Then
'                Item_DDJJ = 0
'            Else
'                Item_DDJJ = aux
'            End If
'            If CBool(nro_gan) Then
'                StrSql = "SELECT itenro FROM item WHERE itenro = " & Item_DDJJ
'                OpenRecordset StrSql, rs
'                If rs.EOF Then
'                    Texto = ": " & " - Campo " & Campoetiqueta & " no se encuentra"
'                    Call Escribir_Log("floge", LineaCarga, Nrocolumna, Texto, Tabs, strReg)
'                End If
'            End If
'        End If
'
'        'EGO - 07/06/2010 - fechas DDJJ
'
'        Desde_DDJJ = 0
'        'Desde fecha de DDJJ
'        Nrocolumna = Nrocolumna + 1
'        Obligatorio = False
'        Campoetiqueta = "Fecha desde DDJJ"
'        pos1 = pos2 + 2
'        pos2 = InStr(pos1, strReg, separador) - 1
'        aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'        If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'            Call Escribir_Log("floge", LineaCarga, Nrocolumna, Texto, Tabs, strReg)
'            RegError = RegError + 1
'            Exit Sub
'        End If
'        Desde_DDJJ = aux
'        If Desde_DDJJ = "N/A" Or EsNulo(Desde_DDJJ) Then
'            Desde_DDJJ = "Null"
'        End If
'
'        Hasta_DDJJ = 0
'        'Hasta fecha de DDJJ
'        Nrocolumna = Nrocolumna + 1
'        Obligatorio = False
'        Campoetiqueta = "Fecha hasta DDJJ"
'        pos1 = pos2 + 2
'        pos2 = Len(strReg)
'        aux = Trim(Mid(strReg, pos1, pos2 - pos1 + 1))
'        If (aux = "N/A" Or EsNulo(aux)) And Obligatorio Then
'            Texto = ": " & " - Campo " & Campoetiqueta & " con valor Nulo y es obligatorio"
'            Call Escribir_Log("floge", LineaCarga, Nrocolumna, Texto, Tabs, strReg)
'            RegError = RegError + 1
'            Exit Sub
'        End If
'        Hasta_DDJJ = aux
'        If Hasta_DDJJ = "N/A" Or EsNulo(Desde_DDJJ) Then
'            Hasta_DDJJ = "Null"
'        End If
'
'    End If
'
''   ' Busco la fecha de alta reconocida
''    Campoetiqueta = " Fecha de alta reconocida del empleado "
''    StrSql = "SELECT altfec FROM fases "
''    StrSql = StrSql & " INNER JOIN empleado ON empleado.ternro = fases.empleado "
''    StrSql = StrSql & " WHERE empleg = " & Legajo
''    StrSql = StrSql & " AND fasrecofec = -1 "
''    OpenRecordset StrSql, rs
''    If rs.EOF Then
''        Texto = ": " & " - Campo " & Campoetiqueta & " no esta configurado para el empleado "
''        nrocolumna = 1
''        Call Escribir_Log("floge", LineaCarga, nrocolumna, Texto, Tabs, strReg)
''        Exit Sub
''    End If
''
'    ' Calculo la fecha de Inicio
'    If IsDate(Fnac) Then
'        If CDate(rs!altfec) > CDate(Fnac) Then
'                fechaInicio = rs!altfec
'        Else
'                fechaInicio = Fnac
'        End If
'    Else
'        Texto = ": " & " - Campo Fecha de Nacimiento del familiar no es válida.El formato es (dd/mm/aaaa) "
'        Nrocolumna = 1
'        Call Escribir_Log("floge", LineaCarga, Nrocolumna, Texto, Tabs, strReg)
'        Exit Sub
'    End If

'    ' Veo que la fecha de vencimiento no sea menor que la de inicio
'    If IsDate(fechaVto) Then
'        If CDate(fechaInicio) > CDate(fechaVto) Then
'            Texto = ": " & " - Campo Fecha de vencimiento es mayor al de fecha de inicio."
'            Nrocolumna = 1
'            Call Escribir_Log("floge", LineaCarga, Nrocolumna, Texto, Tabs, strReg)
'            Exit Sub
'        Else
'            fechaVto = ConvFecha(fechaVto)
'        End If
'    End If
    
    
    
    fechaInicio = ConvFecha(Fnac)
    fechaVto = "Null"
    Fnac = ConvFecha(Fnac)
    
' ==================================================================================
' ==================================================================================


'Busco el empleado asociado
StrSql = "SELECT ternro FROM empleado WHERE empleg = " & Legajo
If rs.State = adStateOpen Then rs.Close
OpenRecordset StrSql, rs
If Not rs.EOF Then
    NroEmpleado = rs!Ternro
Else
    Texto = ": " & " - Campo " & Campoetiqueta & " El legajo no existe"
    NroColumna = 1
    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    RegError = RegError + 1
    Exit Sub
End If
  
StrSql = "SELECT * FROM tercero "
StrSql = StrSql & " INNER JOIN ter_tip ON tercero.ternro = ter_tip.ternro AND ter_tip.tipnro = 3 "
StrSql = StrSql & " INNER JOIN familiar ON familiar.ternro = tercero.ternro AND familiar.empleado = " & NroEmpleado
StrSql = StrSql & " WHERE ternom = '" & nombre & "'"
StrSql = StrSql & " AND terape = '" & Apellido & "'"
If rs.State = adStateOpen Then rs.Close
OpenRecordset StrSql, rs
If rs.EOF Then
    'Inserto el tercero asociado al familiar
    
    StrSql = " INSERT INTO tercero(ternom,terape,terfecnac,tersex,nacionalnro,paisnro,estcivnro)"
    StrSql = StrSql & " VALUES('" & nombre & "','" & Apellido & "'," & Fnac & "," & nro_Sexo & ","
    If nro_nacionalidad <> 0 Then
      StrSql = StrSql & nro_nacionalidad & ","
    Else
      StrSql = StrSql & "Null,"
    End If
    If nro_paisnac <> 0 Then
      StrSql = StrSql & nro_paisnac & ","
    Else
      StrSql = StrSql & "Null,"
    End If
    StrSql = StrSql & nro_estciv & ")"
    objConn.Execute StrSql, , adExecuteNoRecords

    NroTercero = getLastIdentity(objConn, "tercero")
    
    'Inserto el Registro correspondiente en ter_tip
    StrSql = " INSERT INTO ter_tip(ternro,tipnro) VALUES(" & NroTercero & ",3)"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    'Inserto el Familiar
    StrSql = " INSERT INTO familiar(empleado,ternro,parenro,famest,famestudia,famcernac,faminc,famsalario,famemergencia,famcargadgi,osocial,plnro,famternro,famfec,famfecvto)"
    StrSql = StrSql & " values(" & NroEmpleado & "," & NroTercero & "," & nro_paren & ",-1," & nro_estudia & ",0," & nro_disc & "," & nro_salario & "," & nro_aviso & "," & nro_gan & "," & nro_osocial & "," & nro_planos & ",0," & fechaInicio & "," & fechaVto & ")"
    objConn.Execute StrSql, , adExecuteNoRecords
    
    'Inserto los estudios de familiar
    If nro_estudia = -1 Then
        StrSql = " INSERT INTO estudio_actual (ternro, nivnro) VALUES (" & NroTercero & "," & nro_nivest & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
    End If
    
    Texto = "Inserte el Familiar - " & Legajo & " - " & Apellido & " - " & nombre
    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
Else
    'Actualizo los datos
    StrSql = "UPDATE tercero SET "
    StrSql = StrSql & " terfecnac = " & Fnac
    StrSql = StrSql & " ,tersex = " & nro_Sexo
    If nro_nacionalidad <> 0 Then
        StrSql = StrSql & " ,nacionalnro = " & nro_nacionalidad
    End If
    If nro_paisnac <> 0 Then
        StrSql = StrSql & " ,paisnro = " & nro_paisnac
    End If
    StrSql = StrSql & " WHERE ternro = " & rs!Ternro
    objConn.Execute StrSql, , adExecuteNoRecords

    NroTercero = rs!Ternro

    StrSql = "UPDATE familiar SET "
    StrSql = StrSql & " parenro = " & nro_paren
    StrSql = StrSql & " ,famestudia = " & nro_estudia
    StrSql = StrSql & " ,faminc = " & nro_disc
    StrSql = StrSql & " ,famsalario = " & nro_salario
    StrSql = StrSql & " ,famemergencia = " & nro_aviso
    StrSql = StrSql & " ,famcargadgi = " & nro_gan
    StrSql = StrSql & " ,osocial = " & nro_osocial
    StrSql = StrSql & " ,plnro = " & nro_planos
    StrSql = StrSql & " ,famternro = 0"
    StrSql = StrSql & " WHERE empleado = " & NroEmpleado
    StrSql = StrSql & " AND ternro = " & NroTercero
    objConn.Execute StrSql, , adExecuteNoRecords

    If nro_estudia = -1 Then
        StrSql = " SELECT ternro FROM estudio_actual WHERE ternro = " & NroTercero
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
            StrSql = " INSERT INTO estudio_actual (ternro, nivnro) VALUES (" & NroTercero & "," & nro_nivest & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
        Else
            StrSql = " UPDATE estudio_actual SET nivnro = " & nro_nivest
            StrSql = StrSql & "WHERE ternro = " & NroTercero
            objConn.Execute StrSql, , adExecuteNoRecords
        End If
    
    Else
        'StrSql = " DELETE FROM estudio_actual WHERE ternro = " & NroTercero
        'objConn.Execute StrSql, , adExecuteNoRecords
    End If
    
    Texto = "Familiar actualizado - " & Legajo & " - " & Apellido & " - " & nombre
    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
End If



'Inserto los Documentos
' Dimatz Rafael valido que no exista el documento
StrSql = "SELECT * FROM ter_doc WHERE nrodoc = '" & NroDoc & "'"
StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
OpenRecordset StrSql, rs_Doc
If Not rs_Doc.EOF Then
     'MsgBox ("Este documento ya existe") ' 13-12-2010 -se comenta-cuelga el proceso
    Texto = ": " & "Este documento ya existe"
    Call Escribir_Log("floge", LineaCarga, NroColumna, Texto, Tabs, strReg)
    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
Else
    If NroDoc <> "" And NroDoc <> "N/A" And TipDoc <> "N/A" Then
        StrSql = "SELECT * FROM ter_doc WHERE ternro = " & NroTercero
        StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
        If rs.State = adStateOpen Then rs.Close
        OpenRecordset StrSql, rs
        If rs.EOF Then
            StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
            StrSql = StrSql & " VALUES(" & NroTercero & "," & Nro_TDocumento & ",'" & NroDoc & "')"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            Texto = ": " & "Inserte el Documento - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        Else
            StrSql = " UPDATE ter_doc SET "
            StrSql = StrSql & " nrodoc = '" & NroDoc & "'"
            StrSql = StrSql & " WHERE ternro = " & NroTercero
            StrSql = StrSql & " AND tidnro = " & Nro_TDocumento
            objConn.Execute StrSql, , adExecuteNoRecords
            
            Texto = ": " & "Documento actualizado - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
        End If
    End If
End If



'Inserto el Domicilio
If Not IngresoDom = False Then
    StrSql = "SELECT * FROM cabdom  "
    StrSql = StrSql & " WHERE tipnro = 1"
    StrSql = StrSql & " AND ternro = " & NroTercero
    StrSql = StrSql & " AND domdefault = -1"
    StrSql = StrSql & " AND tidonro = 2"
    If rs.State = adStateOpen Then rs.Close
    OpenRecordset StrSql, rs
    If rs.EOF Then
        If (Nro_Localidad <> 0 And Nro_Provincia <> 0 And Nro_Pais <> 0) Then
            StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
            StrSql = StrSql & " VALUES(1," & NroTercero & ",-1,2)"
            objConn.Execute StrSql, , adExecuteNoRecords
            
            NroDom = getLastIdentity(objConn, "cabdom")
          
            StrSql = " INSERT INTO detdom(domnro,calle,nro,piso,oficdepto,torre,manzana,codigopostal,entrecalles,"
            StrSql = StrSql & "locnro,provnro,paisnro,barrio,zonanro) "
            StrSql = StrSql & " VALUES (" & NroDom & ",'" & Calle & "','" & Nro_Nrodom & "','" & Piso & "','"
            StrSql = StrSql & Depto & "','" & Torre & "','" & Manzana & "','" & Cpostal & "','" & Entre & "'," & Nro_Localidad & ","
            StrSql = StrSql & Nro_Provincia & "," & Nro_Pais & ",'" & Barrio & "'," & Nro_Zona & ")"
            objConn.Execute StrSql, , adExecuteNoRecords
          
            Texto = ": " & "Inserte el Domicilio - "
            Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            
            If Telefono <> "" Then
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                StrSql = StrSql & " VALUES(" & NroDom & ",'" & Telefono & "',0,-1,0,1)"
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = ": " & "Inserte el Telefono Principal - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            End If
        End If
    Else
        If (Nro_Localidad <> 0 And Nro_Provincia <> 0 And Nro_Pais <> 0) Then
            StrSql = "SELECT * FROM cabdom  "
            StrSql = StrSql & " WHERE tipnro = 1"
            StrSql = StrSql & " AND ternro = " & NroTercero
            StrSql = StrSql & " AND domdefault = -1"
            StrSql = StrSql & " AND tidonro = 2"
            If rs.State = adStateOpen Then rs.Close
            OpenRecordset StrSql, rs
            If rs.EOF Then
                StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro) "
                StrSql = StrSql & " VALUES(1," & NroTercero & ",-1,2)"
                objConn.Execute StrSql, , adExecuteNoRecords
                
                NroDom = getLastIdentity(objConn, "cabdom")
                
                StrSql = " INSERT INTO detdom(domnro,calle,nro,piso,oficdepto,torre,manzana,codigopostal,entrecalles,"
                StrSql = StrSql & "locnro,provnro,paisnro,barrio,zonanro) "
                StrSql = StrSql & " VALUES (" & NroDom & ",'" & Calle & "','" & Nro_Nrodom & "','" & Piso & "','"
                StrSql = StrSql & Depto & "','" & Torre & "','" & Manzana & "','" & Cpostal & "','" & Entre & "'," & Nro_Localidad & ","
                StrSql = StrSql & Nro_Provincia & "," & Nro_Pais & ",'" & Barrio & "'," & Nro_Zona & ")"
                objConn.Execute StrSql, , adExecuteNoRecords
                
                Texto = ": " & "Inserte el Domicilio - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                
                If Telefono <> "" Then
                  'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                    StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                    StrSql = StrSql & " VALUES(" & NroDom & ",'" & Telefono & "',0,-1,0,1)"
                    objConn.Execute StrSql, , adExecuteNoRecords
                
                    Texto = ": " & "Inserte el Telefono Principal - "
                    Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                End If
            Else
                StrSql = " UPDATE detdom SET "
                StrSql = StrSql & " calle =" & "'" & Calle & "'"
                StrSql = StrSql & ",nro =" & "'" & Nro_Nrodom & "'"
                StrSql = StrSql & ",piso =" & "'" & Piso & "'"
                StrSql = StrSql & ",oficdepto =" & "'" & Depto & "'"
                StrSql = StrSql & ",torre =" & "'" & Torre & "'"
                StrSql = StrSql & ",manzana =" & "'" & Manzana & "'"
                StrSql = StrSql & ",codigopostal =" & "'" & Cpostal & "'"
                StrSql = StrSql & ",entrecalles =" & "'" & Entre & "'"
                StrSql = StrSql & ",locnro =" & Nro_Localidad
                StrSql = StrSql & ",provnro =" & Nro_Provincia
                StrSql = StrSql & ",paisnro =" & Nro_Pais
                StrSql = StrSql & ", zonanro =" & Nro_Zona
                StrSql = StrSql & " WHERE domnro = " & rs!domnro
                objConn.Execute StrSql, , adExecuteNoRecords
            
                Texto = ": " & "Domicilio Actualizado - "
                Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
            
                If Telefono <> "" Then
                    StrSql = "SELECT * FROM telefono "
                    StrSql = StrSql & " WHERE domnro =" & rs!domnro
                    StrSql = StrSql & " AND telnro ='" & Telefono & "'"
                    If rs_Tel.State = adStateOpen Then rs_Tel.Close
                    OpenRecordset StrSql, rs_Tel
                    If rs_Tel.EOF Then
                        'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                        StrSql = " INSERT INTO telefono(domnro,telnro,telfax,teldefault,telcelular,tipotel) "
                        StrSql = StrSql & " VALUES(" & rs!domnro & ",'" & Telefono & "',0,-1,0,1)"
                        objConn.Execute StrSql, , adExecuteNoRecords
                          
                        Texto = ": " & "Inserte el Telefono Principal - "
                        Call Escribir_Log("flogp", LineaCarga, 1, Texto, Tabs + 1, strReg)
                    End If
                End If
            End If
        End If
    End If
End If

OK = True

'Cierro y libero
If rs.State = adStateOpen Then rs.Close
If rs_Tel.State = adStateOpen Then rs_Tel.Close
Set rs = Nothing
Set rs_Tel = Nothing


Exit Sub

SaltoLinea:
    Texto = " Error (602): " & Err.Description
    Call Escribir_Log("floge", LineaCarga, 1, Texto, Tabs + 1, strReg)
    MyRollbackTrans
    OK = False
End Sub

Public Sub LineaModelo_921(ByVal strLinea As String)
' ---------------------------------------------------------------------------------------------
' Descripcion: Importacion de Postulantes Peru
' Autor      : Dimatz Rafael
' Fecha      : 04/12/2013
' Ultima Mod.:13/05/2014 - Carmen Quintero - CAS-22751 - VILLA MARIA - Adecuacion Empleos y Postulantes - Bug en la interfaz 921
'                          'Se modificó la ubicacion de las columnas, al momento de tomar la informacion del modelo de domicilio de peru
                           'para el caso cuando el tipo de documento ya esta creado
'             23/06/2014 - Carmen Quintero - CAS-22751 - VILLA MARIA - Adecuacion Empleos y Postulantes - Bug en la interfaz 921 [Entrega 2]
                           ' Se reordenaron las columnas.
' Descripcion:
' ---------------------------------------------------------------------------------------------
    Dim datos() As String
    Dim TipItemInf(10) As Long
    Dim Ternro As Long
    Dim NroDom As Long
    Dim a As Long
    Dim Xconst As Long
    Dim ActPasos As Boolean
    Dim tempString As String
    Dim EstPosNro As Long
    Dim Aux As Integer
    Dim Inserto As Integer
    Dim l_desempresa As String
    Dim l_nivel_vacio As String
    Dim l_ins_upd As String
    
    Dim rs_Ter As New ADODB.Recordset
    Dim rs_Aux As New ADODB.Recordset
    Dim I As Long
    
    
    Flog.writeline "procesando linea " & strLinea
    
    'Si ocurre un error antes de insertar el tercero se aborta el postulante
    On Error GoTo Manejador_De_Error:
    
    datos = Split("0" & separador & strLinea, separador)
    For I = 0 To UBound(datos)
        datos(I) = Trim(datos(I))
    Next I
    '--Documentos--
    datos(1) = TraerCodTipoDocumento(CStr(datos(1)))  'tipoDocumento
    datos(2) = StrToStr(CStr(datos(2)), 30) 'numeroDocumento
    datos(2) = Replace(datos(2), ".", "") 'elimino puntos y comas
    datos(2) = Replace(datos(2), ",", "")
    
    '--Tercero
    datos(3) = StrToStr(datos(3), 25) 'ternom
    datos(4) = StrToStr(datos(4), 25)  'ternom2
    datos(5) = StrToStr(datos(5), 25) 'terape
    datos(6) = StrToStr(datos(6), 25) 'terape2
    datos(7) = ConvFecha(CDate(datos(7))) 'terfecnac
    'If UCase(Datos(8)) = "MASCULINO" Then Datos(8) = -1 Else Datos(8) = 0 'tersex
    If (UCase(datos(8)) = "M") Or (UCase(datos(8)) = "-1") Or (UCase(datos(8)) = "MASCULINO") Then
        datos(8) = -1
    Else
        datos(8) = 0
    End If

    datos(23) = StrToStr(datos(23), 100) ' teremail
    datos(13) = TraerCodNacionalidad(CStr(datos(13))) ' nacionalnro
    datos(9) = StrToStr(TraerCodEstadoCivil(CStr(datos(9))), 8) 'estcivnro
    If datos(14) = "" Then
        datos(14) = "''"
    Else
        datos(14) = ConvFecha(CDate(datos(14))) 'fechaingresopais
    End If
    datos(11) = StrToStr(datos(11), 25) 'tercasape
    If datos(10) = "" Then
        datos(10) = "NULL"
    Else
        datos(10) = ConvFecha(CDate(datos(10))) 'terfecestciv
    End If
    datos(12) = TraerCodPaisPorNro(CStr(datos(12))) 'paisnro


    'FGZ - 06/04/2005
    StrSql = "SELECT * FROM ter_doc  "
    StrSql = StrSql & " WHERE ter_doc.tidnro = " & datos(1)
    StrSql = StrSql & " AND nrodoc = '" & datos(2) & "'"
    OpenRecordset StrSql, rs_Ter

    If rs_Ter.EOF Then
        StrSql = " INSERT INTO tercero (ternom, ternom2, terape, terape2, terfecnac, tersex, teremail, nacionalnro, estcivnro, terfecing, tercasape,terfecestciv, paisnro ) VALUES ("
        StrSql = StrSql & "'" & datos(3) & "'"      'ternom
        StrSql = StrSql & ",'" & datos(4) & "'"     'ternom2
        StrSql = StrSql & ",'" & datos(5) & "'"      'terape
        StrSql = StrSql & ",'" & datos(6) & "'"     'terape2
        StrSql = StrSql & "," & datos(7)            'terfecnac
        StrSql = StrSql & "," & CLng(datos(8))      'tersex
        StrSql = StrSql & ",'" & datos(23) & "'"    'teremail
        StrSql = StrSql & "," & CLng(datos(13))     'nacionalnro
        StrSql = StrSql & ",'" & datos(9) & "'"     'estcivnro
        StrSql = StrSql & "," & datos(14)           'fechaingresopais
        StrSql = StrSql & ",'" & datos(11) & "'"    'tercasape
        StrSql = StrSql & "," & datos(10)           'terfecestciv
        StrSql = StrSql & "," & datos(12)           'paisnro
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline "Inserto en la tabla de tercero"
    
        '--Obtengo el ternro--
        Ternro = getLastIdentity(objConn, "tercero")
        Flog.writeline "-----------------------------------------------"
        Flog.writeline "Codigo de Tercero = " & Ternro
    
        '--Inserto el Registro correspondiente en ter_tip--
        StrSql = " INSERT INTO ter_tip(ternro,tipnro) VALUES(" & Ternro & ",14)"
        objConn.Execute StrSql, , adExecuteNoRecords
        'Flog.Writeline "Inserto el tipo de tercero 14 en ter_tip"
        
        'Desactivo el manejador de erorres
        On Error GoTo 0
        
        
        'Cualquier error que ocurra de aquí en adelante sigue adelante
        ' tratando de insertar la mayor cantidad de datos posible
        On Error Resume Next
        'HuboError = False
        
        StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
        StrSql = StrSql & " VALUES(" & Ternro & "," & datos(1) & ",'" & datos(2) & "')"
        objConn.Execute StrSql, , adExecuteNoRecords
    
        '--------------------------------------------------------------------------------
        '--Inserto el Domicilio--
            Dim rs_via As New ADODB.Recordset
    
    '--Inserto el Domicilio--
        StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro,modnro) "
        StrSql = StrSql & " VALUES(1," & Ternro & ",-1,2,10)"
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline "inserto el Domicilio"
    
        '--Obtengo el numero de domicilio en la tabla--
        NroDom = CLng(getLastIdentity(objConn, "cabdom"))
    
        '--Si no tiene algun dato le agregamos unos ficticios--
        datos(24) = StrToStr(datos(24), 30) 'dirCalle
        datos(25) = StrToStr(datos(25), 8) 'dirNumero
        datos(26) = StrToStr(datos(26), 8) 'dirPiso
        datos(27) = StrToStr(datos(27), 10) 'dirDepto
        datos(28) = StrToStr(datos(28), 80) 'Entrecalles
        datos(29) = StrToStr(datos(29), 8) 'Via
        datos(30) = TraerCodLocalidadPorNro(CStr(datos(30))) 'dirLocalidad
        If datos(30) = -1 Then
            Flog.writeline "No existe el Codigo de la Localidad ingresado"
            InsertaError 1, 8
            HuboError = True
            GoTo Manejador_De_Error
        End If
        datos(31) = TraerCodProvinciaPorNro(CStr(datos(31))) 'dirProvincia
        If datos(31) = -1 Then
            Flog.writeline "No existe el Codigo de la Provincia ingresado"
            InsertaError 1, 8
            HuboError = True
            GoTo Manejador_De_Error
        End If
        datos(32) = TraerCodPartidoPorNro(CStr(datos(32))) 'Distrito
        If datos(32) = -1 Then
            Flog.writeline "No existe el Codigo del Partido ingresado"
            InsertaError 1, 8
            HuboError = True
            GoTo Manejador_De_Error
        End If
        datos(33) = TraerCodPaisPorNro(CStr(datos(33))) 'dirpais
        If datos(33) = -1 Then
            Flog.writeline "No existe el Codigo del Pais ingresado"
            InsertaError 1, 8
            HuboError = True
            GoTo Manejador_De_Error
        End If
    
        datos(29) = 0
        StrSql = "SELECT vianro FROM via WHERE vianro = '" & datos(29) & "'"
        OpenRecordset StrSql, rs_via
        If Not rs_via.EOF Then
            datos(29) = rs_via("vianro")
        End If

        StrSql = " INSERT INTO detdom (domnro,calle,nro,piso,oficdepto,entrecalles,vianro,locnro,provnro,partnro,paisnro)"
        StrSql = StrSql & " VALUES ("
        StrSql = StrSql & NroDom
        StrSql = StrSql & ",'" & datos(24) & "'"
        StrSql = StrSql & ",'" & datos(25) & "'"
        StrSql = StrSql & ",'" & datos(26) & "'"
        StrSql = StrSql & ",'" & datos(27) & "'"
        StrSql = StrSql & ",'" & datos(28) & "'"
        StrSql = StrSql & "," & datos(29)
        StrSql = StrSql & "," & datos(30)
        StrSql = StrSql & "," & datos(31)
        StrSql = StrSql & ",'" & datos(32) & "'"
        StrSql = StrSql & ", " & datos(33)
        StrSql = StrSql & ")"
        objConn.Execute StrSql, , adExecuteNoRecords
        If Err Then
            Err.Clear
        Else
            Flog.writeline "Inserte el domicilio "
        End If
       
        Flog.writeline "Inserto el Domicilio "
    
        '--Telefonos-Personal--
        datos(21) = validatelefono(StrToStr(datos(21), 20))
        If datos(21) <> "" Then
            StrSql = " INSERT INTO telefono "
            'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
            StrSql = StrSql & " (domnro, telnro, telfax, teldefault, telcelular,tipotel ) "
            StrSql = StrSql & " VALUES (" & NroDom & ", '" & datos(21) & "' ,0 , -1 ,0,1 ) "
            objConn.Execute StrSql, , adExecuteNoRecords
            If Err Then
                Err.Clear
            Else
                Flog.writeline "Inserte el telefono"
            End If
        End If
        
        '--Telefonos-Celular--
        'FGZ 11/04/2005 - quieren que lo cargue como telefono comun
        datos(22) = validatelefono(StrToStr(datos(22), 20))
        If datos(22) <> "" Then
            StrSql = " INSERT INTO telefono "
            'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
            StrSql = StrSql & " (domnro, telnro, telfax, teldefault, telcelular,tipotel ) "
            StrSql = StrSql & " VALUES (" & NroDom & ", '" & datos(22) & "' , 0, -1, 0,2 ) "
            objConn.Execute StrSql, , adExecuteNoRecords
            'Flog.Writeline " Inserto el telefono calular "
            'Flog.Writeline " Inserto el segundo telefono "
            If Err Then
                Err.Clear
            Else
                Flog.writeline "Inserte el telefono2 "
            End If
        End If
    
        '--Complemento--
        If datos(15) = "" Then
            datos(15) = 0
        Else
            datos(15) = CLng(StrToInt(datos(15))) 'cantidadHijos
        End If
        datos(16) = StrToStr(datos(16), 60) 'imagen
        If datos(17) = "" Then
            datos(17) = "NULL"
        Else
            datos(17) = ConvFecha(CDate(datos(17))) 'fechaIngresoCV
        End If
        datos(18) = StrToStr(datos(18), 250) 'referencias
        If datos(19) = "" Then
            datos(19) = TraerCodProcedencia("Web Deloitte") 'procedencia
        Else
            datos(19) = TraerCodProcedencia(CStr(datos(19))) 'procedencia
        End If
        If datos(20) = "" Then
            datos(20) = 0
        Else
            datos(20) = CDbl(StrToDbl(datos(20))) 'remuneracionPretendida
        End If
        
        'FGZ - 02/03/2006 Se agrego el estposnro = 4 (postulantre activo)
        StrSql = " INSERT INTO pos_postulante "
        StrSql = StrSql & " ( ternro, posrempre, poscanhijos, posfoto, posfecpres, posref, procnro,estposnro) "
        StrSql = StrSql & " VALUES (" & Ternro & " ," & CDbl(datos(20)) & ", " & CLng(datos(15)) & ", '" & datos(16) & "', " & datos(17) & ",'" & datos(18) & "', " & datos(19) & ",4) "
        objConn.Execute StrSql, , adExecuteNoRecords
        If Err Then
            FlogE.writeline "Error al inserte el Complemento: " & Err.Description
            FlogE.writeline "SQL ejecutada: " & StrSql
            Err.Clear
        Else
            Flog.writeline "Inserte el Complemento "
        End If
    
        
    
        '--Estudios-formales--(49)(50)
        Xconst = 1
        For a = 0 To 3
            If datos(Xconst + 33) <> "" Then
                datos(Xconst + 33) = TraerCodNivelEstudio(datos(Xconst + 33))   'EFnivel8
                'FGZ - 29/08/2005
                'If Datos(Xconst + 38) = "Graduado" Then Datos(Xconst + 38) = -1 Else Datos(Xconst + 38) = 0
                'If datos(Xconst + 44) = -1 Then datos(Xconst + 44) = -1 Else datos(Xconst + 44) = 0
                If datos(Xconst + 34) = -1 Then datos(Xconst + 34) = -1 Else datos(Xconst + 34) = 0
                    'Datos(Xconst + 38) = Datos(Xconst + 38)   'EFcompleto8
                
                datos(Xconst + 36) = TraerCodInstitucionPorNro(CStr(datos(Xconst + 36)))   'EFinstitucion8
                If datos(Xconst + 36) = -1 Then
                    Flog.writeline "No existe el Codigo de la Institucion ingresado"
                    InsertaError 1, 8
                    HuboError = True
                    GoTo Manejador_De_Error
                End If
                datos(Xconst + 37) = TraerCodCarreraPorNro(CStr(datos(Xconst + 37)))    'EFcarrera8
                If datos(Xconst + 37) = -1 Then
                    Flog.writeline "No existe el Codigo de la Carrera ingresado"
                    InsertaError 1, 8
                    HuboError = True
                    GoTo Manejador_De_Error
                End If
                datos(Xconst + 35) = TraerCodTituloPorNro(CStr(datos(Xconst + 35)), CLng(datos(Xconst + 37)))   'EFtitulo8
                If datos(Xconst + 35) = -1 Then
                    Flog.writeline "No existe el Codigo de la Titulo ingresado"
                    InsertaError 1, 8
                    HuboError = True
                    GoTo Manejador_De_Error
                End If
                If datos(Xconst + 38) <> "" Then
                    datos(Xconst + 38) = ConvFecha(CDate(datos(Xconst + 38)))   'EFfechaDesde8
                Else
                    datos(Xconst + 38) = "NULL"
                End If
                If datos(Xconst + 39) <> "" Then
                    datos(Xconst + 39) = ConvFecha(CDate(datos(Xconst + 39)))   'EFfechaHasta8
                Else
                    datos(Xconst + 39) = "NULL"
                End If
                datos(Xconst + 40) = StrToStr(datos(Xconst + 40), 30)   'EFpromedio8
                datos(Xconst + 41) = StrToStr(datos(Xconst + 41), 60)   'EFrango8
                If datos(Xconst + 42) <> "" And UCase(datos(Xconst + 42)) <> "NO" Then
                    datos(Xconst + 42) = -1  'EFestudiaActualmente8
                Else
                    datos(Xconst + 42) = 0  'EFestudiaActualmente8
                End If
        
                StrSql = " INSERT INTO cap_estformal "
                StrSql = StrSql & " ( nivnro, ternro, titnro, instnro, carredunro, capfecdes, capfechas, capcomp , capestact, caprango, capprom) "
                StrSql = StrSql & " VALUES (" & CLng(datos(Xconst + 33)) & ", " & Ternro & " ," & datos(Xconst + 35) & "," & datos(Xconst + 36) & "," & datos(Xconst + 37) & "," & datos(Xconst + 38) & " ," & datos(Xconst + 39) & "," & datos(Xconst + 34) & "," & datos(Xconst + 42) & ",'" & datos(Xconst + 41) & "','" & datos(Xconst + 40) & "' ) "
                'StrSql = StrSql & " Go "
                Err.Clear
                objConn.Execute StrSql, , adExecuteNoRecords

                
                If Err Then
                    FlogE.writeline "Error al inserte el estudio formal: " & Err.Description
                    FlogE.writeline "SQL ejecutada: " & StrSql
                    Err.Clear
                Else
                    Flog.writeline "Inserte el estudio formal " & datos(Xconst + 37)
                    ActPasos = True
                End If
            End If
            Xconst = Xconst + 10
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 50)
        End If
        ActPasos = False
        
        
        '--Experiencia-Laboral----Empleos Anteriores
        'reemplazos
        Xconst = 1
        For a = 0 To 3
            If datos(Xconst + 74) <> "" And datos(Xconst + 73) <> "" Then
                datos(Xconst + 73) = TraerCodCargo(CStr(datos(Xconst + 73)))    'ELcargoAnterior16
                
                l_desempresa = CStr(datos(Xconst + 74))
                datos(Xconst + 74) = TraerCodListaEmpresa(CStr(datos(Xconst + 74)))   'ELempresa16 lempnro
                
                datos(Xconst + 75) = StrToStr(datos(Xconst + 75), 200) 'ELtareaDesempenada16
                If datos(Xconst + 76) <> "" Then
                    datos(Xconst + 76) = ConvFecha(CDate(datos(Xconst + 76)))  'ELfechaDesde16
                Else
                    datos(Xconst + 76) = "NULL"
                End If
                If datos(Xconst + 77) <> "" Then
                    datos(Xconst + 77) = ConvFecha(CDate(datos(Xconst + 77)))  'ELfechaHasta16
                Else
                    datos(Xconst + 77) = "NULL"
                End If
                If datos(Xconst + 78) = "" Then
                    datos(Xconst + 78) = 0
                Else
                    datos(Xconst + 78) = StrToDbl(datos(Xconst + 78))   'ELremuneracion16
                End If
                If datos(Xconst + 79) <> "" Then
                    datos(Xconst + 79) = TraerCodCausa(CStr(datos(Xconst + 79)))   'ELcausaBaja16
                Else
                    datos(Xconst + 79) = "NULL"
                End If
            
                StrSql = " INSERT INTO empant "
                'FGZ - 29/08/2005
                'cambié los nombres de los campos donde inserta las fechas desde y hasta
                'StrSql = StrSql & " ( empleado, empatareas, lempnro, empadesde, emmpahasta, carnro, emparemu ) "
                StrSql = StrSql & " ( empleado, empatareas, lempnro, empaini, empafin, carnro, emparemu, caunro, empresa ) "
                StrSql = StrSql & " VALUES (" & Ternro & ", '" & datos(Xconst + 75) & "' ," & datos(Xconst + 74) & "," & datos(Xconst + 76) & "," & datos(Xconst + 77) & "," & datos(Xconst + 73) & "," & datos(Xconst + 78) & "," & datos(Xconst + 79) & " ,'" & l_desempresa & "'  ) "

                
                objConn.Execute StrSql, , adExecuteNoRecords
                If Err Then
                    FlogE.writeline "Error al inserte el Empleo Anterior: " & Err.Description
                    FlogE.writeline "SQL ejecutada: " & StrSql
                    Err.Clear
                Else
                    Flog.writeline "Inserto los datos del Empleo Anterior"
                    ActPasos = True
                End If
            End If
            Xconst = Xconst + 7
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 58)
        End If
        ActPasos = False
    
        '--Idiomas--53 (54)
        'reemplazos
        ActPasos = False
        Xconst = 1
        For a = 0 To 3
            If datos(Xconst + 101) <> "" Then
                If datos(Xconst + 102) <> "" Or datos(Xconst + 103) <> "" Or datos(Xconst + 104) <> "" Then
                    datos(Xconst + 101) = TraerCodIdioma(CStr(datos(Xconst + 101))) 'idioma1
                    datos(Xconst + 102) = TraerCodIdiNivel(CStr(datos(Xconst + 102))) 'idiomaLee1
                    datos(Xconst + 103) = TraerCodIdiNivel(CStr(datos(Xconst + 103))) 'idiomaHabla1
                    datos(Xconst + 104) = TraerCodIdiNivel(CStr(datos(Xconst + 104))) 'idiomaEscribe1
                    
                    If Not TieneIdioma(Ternro, CLng(datos(Xconst + 101))) Then
                        StrSql = " INSERT INTO emp_idi "
                        StrSql = StrSql & " (idinro, empleado, empidlee, empidhabla, empidescr) "
                        StrSql = StrSql & " VALUES (" & CLng(datos(Xconst + 101)) & ", " & Ternro & " ," & datos(Xconst + 102) & ", " & datos(Xconst + 103) & ", " & datos(Xconst + 104) & " ) "
                    Else
                        StrSql = " UPDATE emp_idi SET "
                        StrSql = StrSql & " empidlee = " & datos(Xconst + 102)
                        StrSql = StrSql & ", empidhabla = " & datos(Xconst + 103)
                        StrSql = StrSql & ", empidescr = " & datos(Xconst + 104)
                        StrSql = StrSql & " where empleado = " & Ternro & " and idinro = " & CLng(datos(Xconst + 101))
                    End If
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If Err Then
                        FlogE.writeline "Error al inserte el Idioma " & datos(Xconst + 101) & "-" & Err.Description
                        FlogE.writeline "SQL ejecutada: " & StrSql
                        Err.Clear
                    Else
                        Flog.writeline "Inserte el Idioma " & datos(Xconst + 101)
                        ActPasos = True
                    End If
                End If
            End If
            Xconst = Xconst + 4
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 54)
        End If
        ActPasos = False
    
        
        '--Estudios-Informales--50 (51)
        'Reemplazos
        ActPasos = False
        ActPasos = False
        Xconst = 1
        For a = 0 To 3
            If datos(Xconst + 117) <> "" Then
                tempString = StrToStr(datos(117 + Xconst), 50) ''descCurso  estinfdesabr
                datos(117 + Xconst) = datos(117 + Xconst) ''descCurso  estinfdesabr
                datos(118 + Xconst) = TraerCodTipoCurso(StrToStr(datos(118 + Xconst), 50)) 'tipoCurso tipcurnro
                If datos(118 + Xconst) <> "" Then
                    datos(119 + Xconst) = ConvFecha(datos(119 + Xconst)) 'fechaCurso  estinffecha
                Else
                    datos(119 + Xconst) = ConvFecha(Date)
                End If
                datos(120 + Xconst) = TraerCodInstitucionPorNro(CStr(datos(120 + Xconst))) 'institucionCurso instnro
                If datos(Xconst + 120) = -1 Then
                    FlogE.writeline "No existe el Codigo de la Institucion ingresado"
                    InsertaError 1, 8
                    HuboError = True
                    GoTo Manejador_De_Error
                End If
                
                If datos(117 + Xconst) = "" Or datos(118 + Xconst) = "" Or datos(120 + Xconst) = "" Then
                    FlogE.writeline "Error al insertar el estudio informal por falta de datos "
                Else
                    StrSql = " INSERT INTO cap_estinformal "
                    StrSql = StrSql & " (ternro, estinfdesabr, estinffecha, tipcurnro, instnro) "
                    StrSql = StrSql & " VALUES (" & Ternro & " , '" & tempString & "'," & datos(119 + Xconst) & "," & CLng(datos(118 + Xconst)) & "," & CLng(datos(120 + Xconst)) & ")"
                    Err.Clear
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If Err Then
                        FlogE.writeline "Error al insertar el estudio informal: " & Err.Description
                        FlogE.writeline "SQL ejecutada: " & StrSql
                        Err.Clear
                    Else
                        Flog.writeline "Inserto los datos del estudio informal "
                        ActPasos = True
                    End If
                End If
            End If
            Xconst = Xconst + 4
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 51)
        End If
        ActPasos = False
        
        
        '--Especializaciones--51 (52)
        'reemplazos
        Xconst = 1
        ActPasos = False
        For a = 0 To 3
            If datos(Xconst + 135) <> "" Then
                datos(Xconst + 133) = TraerCodEspecializacion(CStr(datos(Xconst + 133))) 'tipo
                datos(Xconst + 134) = TraerCodEltoana(CStr(datos(Xconst + 134)), CLng(datos(Xconst + 133))) 'elemento
                datos(Xconst + 135) = TraerCodNivelEspecializacion(CStr(datos(Xconst + 135))) 'nivel
                
                StrSql = " INSERT INTO especemp "
                StrSql = StrSql & " (eltananro, ternro, espnivnro ) "
                StrSql = StrSql & " VALUES (" & datos(Xconst + 134) & ", " & Ternro & " ," & datos(Xconst + 135) & ") "
'                StrSql = StrSql & " VALUES (" & datosEltoAna(0, a) & ", " & ternro & " ," & Datos(Xconst + 139) & ") "
                Err.Clear
                objConn.Execute StrSql, , adExecuteNoRecords
                If Err Then
                    FlogE.writeline "Error al insertar la especialidad: " & Err.Description
                    FlogE.writeline "SQL ejecutada: " & StrSql
                    Err.Clear
                Else
                    Flog.writeline "Inserto los datos de la especialidad."
                    ActPasos = True
                End If
            Else
                Flog.writeline "Error al insertar la especialidad por falta de datos."
            End If
            Xconst = Xconst + 3
        Next a
        If ActPasos Then
           Flog.writeline "Inserto los datos de la especialidad"
           Call InsertarPaso(Ternro, 52)
           ActPasos = False
        End If
        
        '--Tipos e Items de Informacion
        ActPasos = False
        Xconst = 1
        
        For a = 0 To 4
            If datos(Xconst + 145) <> "" Then
                datos(145 + Xconst) = UCase(datos(145 + Xconst)) ''descTipoInformacion
              
                TipItemInf(Xconst) = TraerCodTipInformacion(datos(145 + Xconst))
                
                If datos(146 + Xconst) <> "" Then
                    datos(146 + Xconst) = UCase(datos(146 + Xconst)) ''descItemInformacion
                    
                    TipItemInf(Xconst + 1) = TraerCodItemInformacion(datos(146 + Xconst), TipItemInf(Xconst))
                    
                    'AHORA TENGO QUE ASOCIARLE EL PAR AL POSTULANTE
                    Inserto = AsociarParAPostulante(TipItemInf(Xconst + 1), Ternro)
                    If Inserto = -1 Then
                        Flog.writeline "Se Asocio el Par con el Postulante"
                        ActPasos = True
                    Else
                        Flog.writeline "El Postulante ya tenia el Par asociado"
                    End If
                Else
                    Flog.writeline "Falto especificar el Item de Informacion"
                End If
            Else
                Flog.writeline "Falto especificar el Tipo de Informacion"
            End If

            Xconst = Xconst + 2
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 86)
        End If
        ActPasos = False
                

    Else
        Ternro = rs_Ter!Ternro
        Flog.writeline "-----------------------------------------------"
        Flog.writeline "Codigo de Tercero = " & Ternro
        
        'FGZ - 27/07/2005
        'si el tercereo existe pero es de tipo empleado ==> no se hace nada
        '1       Empleado
        '2       Empleado Agencia
        StrSql = " SELECT * FROM ter_tip"
        StrSql = StrSql & " WHERE ternro = " & Ternro
        StrSql = StrSql & " AND tipnro = 1"
        'StrSql = StrSql & " AND (tipnro = 1 OR tipnro = 2)"
        If rs_Aux.State = adStateOpen Then rs_Aux.Close
        OpenRecordset StrSql, rs_Aux
        If Not rs_Aux.EOF Then
            Flog.writeline "El Postulante ya es empleado." & datos(5) & " " & datos(3) & " " & datos(4) & "No se procesará."
            Exit Sub
        End If
        
        'Actualizar los datos
        StrSql = " UPDATE tercero SET "
        StrSql = StrSql & " ternom = " & "'" & datos(3) & "'"
        StrSql = StrSql & ", ternom2 = " & "'" & datos(4) & "'"
        StrSql = StrSql & ", terape = " & "'" & datos(5) & "'"
        StrSql = StrSql & ", terape2 = " & "'" & datos(6) & "'"
        StrSql = StrSql & ", terfecnac = " & datos(7)
        StrSql = StrSql & ", tersex = " & CLng(datos(8))
        StrSql = StrSql & ", teremail =" & "'" & datos(23) & "'"
        StrSql = StrSql & ", nacionalnro =" & CLng(datos(13))
        StrSql = StrSql & ", estcivnro =" & "'" & datos(9) & "'"
        StrSql = StrSql & ", terfecing =" & datos(14)
        StrSql = StrSql & ", tercasape =" & "'" & datos(11) & "'"
        StrSql = StrSql & ",terfecestciv =" & datos(10)
        StrSql = StrSql & ", paisnro =" & datos(12)
        StrSql = StrSql & " WHERE ternro = " & Ternro
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline "Tercero Actualizado"
    
        'Desactivo el manejador de erorres
        On Error GoTo 0
        
        'Cualquier error que ocurra de aquí en adelante sigue adelante
        ' tratando de insertar la mayor cantidad de datos posible
        On Error Resume Next
        
        StrSql = "SELECT * FROM ter_doc  "
        StrSql = StrSql & " WHERE ter_doc.tidnro = " & datos(1)
        StrSql = StrSql & " AND ternro = " & Ternro
        If rs_Aux.State = adStateOpen Then rs_Aux.Close
        OpenRecordset StrSql, rs_Aux
        If rs_Aux.EOF Then
            StrSql = " INSERT INTO ter_doc(ternro,tidnro,nrodoc) "
            StrSql = StrSql & " VALUES(" & Ternro & "," & datos(1) & ",'" & datos(2) & "')"
        Else
            StrSql = "UPDATE ter_doc SET "
            StrSql = StrSql & " nrodoc = '" & datos(2) & "'"
            StrSql = StrSql & " WHERE ter_doc.tidnro = " & datos(1)
            StrSql = StrSql & " AND ternro = " & Ternro
        End If
        objConn.Execute StrSql, , adExecuteNoRecords
        Flog.writeline "Documento Actualizado"
        
        
        '--------------------------------------------------------------------------------
        '--Inserto el Domicilio--
        StrSql = "SELECT * FROM cabdom  "
        StrSql = StrSql & " WHERE tipnro = 1"
        StrSql = StrSql & " AND ternro = " & Ternro
        If rs_Aux.State = adStateOpen Then rs_Aux.Close
        OpenRecordset StrSql, rs_Aux
        If rs_Aux.EOF Then
            StrSql = " INSERT INTO cabdom(tipnro,ternro,domdefault,tidonro,modnro) "
            StrSql = StrSql & " VALUES(1," & Ternro & ",-1,2,10)"
            objConn.Execute StrSql, , adExecuteNoRecords
            Flog.writeline "inserto el Domicilio"
    
            '--Obtengo el numero de domicilio en la tabla--
            NroDom = CLng(getLastIdentity(objConn, "cabdom"))
        
            '--Si no tiene algun dato le agregamos unos ficticios--
            datos(24) = StrToStr(datos(24), 30) 'dirCalle
            datos(25) = StrToStr(datos(25), 8) 'dirNumero
            datos(26) = StrToStr(datos(26), 8) 'dirPiso
            'datos(27) = StrToStr(datos(27), 8) 'dirDepto
            datos(27) = StrToStr(datos(27), 10) 'dirDepto
            'datos(28) = StrToStr(datos(28), 8) 'dirTorre
            datos(28) = StrToStr(datos(28), 80) 'Entrecalles
            'datos(29) = StrToStr(datos(29), 8) 'dirManzana
            datos(29) = StrToStr(datos(29), 8) 'Via
            'datos(30) = StrToStr(datos(30), 8) 'dirSector
            datos(30) = TraerCodLocalidadPorNro(CStr(datos(30))) 'dirLocalidad
            If datos(30) = -1 Then
                 Flog.writeline "No existe el Codigo de la Localidad ingresado"
                 InsertaError 1, 8
                 HuboError = True
                 GoTo Manejador_De_Error
             End If
            'datos(31) = StrToStr(datos(31), 12) 'dirCP
            datos(31) = TraerCodProvinciaPorNro(CStr(datos(31))) 'dirProvincia
            If datos(31) = -1 Then
                 Flog.writeline "No existe el Codigo de la Provincia ingresado"
                 InsertaError 1, 8
                 HuboError = True
                 GoTo Manejador_De_Error
             End If
            'datos(32) = TraerCodLocalidad(CStr(datos(32))) 'dirLocalidad
            datos(32) = TraerCodPartidoPorNro(CStr(datos(32))) 'Distrito
            If datos(32) = -1 Then
                 Flog.writeline "No existe el Codigo del Partido ingresado"
                 InsertaError 1, 8
                 HuboError = True
                 GoTo Manejador_De_Error
             End If
            'datos(33) = TraerCodProvincia(CStr(datos(33)))   'dirProvincia
            datos(33) = TraerCodPaisPorNro(CStr(datos(33))) 'dirpais
            If datos(33) = -1 Then
                 Flog.writeline "No existe el Codigo del Pais ingresado"
                 InsertaError 1, 8
                 HuboError = True
                 GoTo Manejador_De_Error
             End If
            'datos(34) = TraerCodPartido(CStr(datos(34)))  'dirPartido
            'datos(35) = TraerCodZona(CStr(datos(35)), CLng(datos(33)))  'dirZona
             '   If datos(35) = "" Then datos(35) = "NULL"
            'datos(36) = TraerCodPais(CStr(datos(36))) 'dirPais
            
            
'            StrSql = " INSERT INTO detdom (domnro,calle,nro,sector,torre,piso,oficdepto,manzana,codigopostal,"
'            StrSql = StrSql & "locnro,provnro,paisnro, zonanro, partnro) "
'            StrSql = StrSql & " VALUES ("
'            StrSql = StrSql & NroDom
'            StrSql = StrSql & ",'" & datos(24) & "'"
'            StrSql = StrSql & ",'" & datos(25) & "'"
'            StrSql = StrSql & ",'" & datos(30) & "'"
'            StrSql = StrSql & ",'" & datos(28) & "'"
'            StrSql = StrSql & ",'" & datos(26) & "'"
'            StrSql = StrSql & ",'" & datos(27) & "'"
'            StrSql = StrSql & ",'" & datos(29) & "'"
'            StrSql = StrSql & ",'" & datos(31) & "'"
'            StrSql = StrSql & "," & datos(32)
'            StrSql = StrSql & "," & datos(33)
'            StrSql = StrSql & "," & datos(36)
'            StrSql = StrSql & "," & datos(35)
'            StrSql = StrSql & "," & datos(34)
'            StrSql = StrSql & ")"

            datos(29) = 0
            'StrSql = "SELECT * FROM via WHERE viadesc = '" & datos(29) & "'"
            StrSql = "SELECT vianro FROM via WHERE vianro = '" & datos(29) & "'"
            OpenRecordset StrSql, rs_via
            If Not rs_via.EOF Then
                datos(29) = rs_via("vianro")
            End If
            
            StrSql = " INSERT INTO detdom (domnro,calle,nro,piso,oficdepto,entrecalles,vianro,locnro,provnro,partnro,paisnro)"
            StrSql = StrSql & " VALUES ("
            StrSql = StrSql & NroDom
            StrSql = StrSql & ",'" & datos(24) & "'"
            StrSql = StrSql & ",'" & datos(25) & "'"
            StrSql = StrSql & ",'" & datos(26) & "'"
            StrSql = StrSql & ",'" & datos(27) & "'"
            StrSql = StrSql & ",'" & datos(28) & "'"
            StrSql = StrSql & "," & datos(29)
            StrSql = StrSql & "," & datos(30)
            StrSql = StrSql & "," & datos(31)
            StrSql = StrSql & ",'" & datos(32) & "'"
            StrSql = StrSql & ", " & datos(33)
            StrSql = StrSql & ")"

            objConn.Execute StrSql, , adExecuteNoRecords
            If Err Then
                Err.Clear
            Else
                Flog.writeline "Inserte el domicilio "
            End If
            Flog.writeline "Inserto el Domicilio "
        Else
            NroDom = rs_Aux!domnro
        
            '--Si no tiene algun dato le agregamos unos ficticios--
            datos(24) = StrToStr(datos(24), 30) 'dirCalle
            datos(25) = StrToStr(datos(25), 8) 'dirNumero
            datos(26) = StrToStr(datos(26), 8) 'dirPiso
            'datos(27) = StrToStr(datos(27), 8) 'dirDepto
            datos(27) = StrToStr(datos(27), 10) 'dirDepto
            'datos(28) = StrToStr(datos(28), 8) 'dirTorre
            datos(28) = StrToStr(datos(28), 80) 'Entrecalles
            'datos(29) = StrToStr(datos(29), 8) 'dirManzana
            datos(29) = StrToStr(datos(29), 8) 'Via
            'datos(30) = StrToStr(datos(30), 8) 'dirSector
            datos(30) = TraerCodLocalidadPorNro(CStr(datos(30))) 'dirLocalidad
            If datos(30) = -1 Then
                 Flog.writeline "No existe el Codigo de la Localidad ingresado"
                 InsertaError 1, 8
                 HuboError = True
                 GoTo Manejador_De_Error
             End If
            'datos(31) = StrToStr(datos(31), 12) 'dirCP
            datos(31) = TraerCodProvinciaPorNro(CStr(datos(31))) 'dirProvincia
            If datos(31) = -1 Then
                 Flog.writeline "No existe el Codigo de la Provincia ingresado"
                 InsertaError 1, 8
                 HuboError = True
                 GoTo Manejador_De_Error
             End If
            'datos(32) = TraerCodLocalidad(CStr(datos(32))) 'dirLocalidad
            datos(32) = TraerCodPartidoPorNro(CStr(datos(32))) 'Distrito
            If datos(32) = -1 Then
                 Flog.writeline "No existe el Codigo del Partido ingresado"
                 InsertaError 1, 8
                 HuboError = True
                 GoTo Manejador_De_Error
             End If
            'datos(33) = TraerCodProvincia(CStr(datos(33)))   'dirProvincia
            datos(33) = TraerCodPaisPorNro(CStr(datos(33))) 'dirpais
            If datos(33) = -1 Then
                 Flog.writeline "No existe el Codigo del Pais ingresado"
                 InsertaError 1, 8
                 HuboError = True
                 GoTo Manejador_De_Error
             End If
            
            StrSql = " UPDATE detdom SET "
            StrSql = StrSql & " calle =" & "'" & datos(24) & "'"
            StrSql = StrSql & ",nro =" & "'" & datos(25) & "'"
            StrSql = StrSql & ",piso =" & "'" & datos(26) & "'"
            StrSql = StrSql & ",oficdepto =" & "'" & datos(27) & "'"
            StrSql = StrSql & ",entrecalles=" & "'" & datos(28) & "'"
            StrSql = StrSql & ", vianro =" & datos(29)
            StrSql = StrSql & ", locnro =" & datos(30)
            StrSql = StrSql & ", provnro =" & datos(31)
            StrSql = StrSql & ", partnro = " & "'" & datos(32) & "'"
            StrSql = StrSql & ",paisnro =" & datos(33)
            StrSql = StrSql & " WHERE domnro = " & NroDom
            
            objConn.Execute StrSql, , adExecuteNoRecords
            If Err Then
                Err.Clear
                Flog.writeline "Domicilio NO actualizado"
                Flog.writeline "SQL ejecutada: " & StrSql
            Else
                Flog.writeline "Domicilio actualizado"
            End If
        End If
        
        
        '--Telefonos-Personal--
        datos(21) = validatelefono(StrToStr(datos(21), 20))
        If datos(21) <> "" Then
            StrSql = "SELECT * FROM telefono  "
            StrSql = StrSql & " WHERE domnro = " & NroDom
            StrSql = StrSql & " AND telnro = " & "'" & datos(21) & "'"
            If rs_Aux.State = adStateOpen Then rs_Aux.Close
            OpenRecordset StrSql, rs_Aux
            If rs_Aux.EOF Then
                StrSql = " INSERT INTO telefono "
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                StrSql = StrSql & " (domnro, telnro, telfax, teldefault, telcelular,tipotel ) "
                StrSql = StrSql & " VALUES (" & NroDom & ", '" & datos(21) & "' ,0 , -1 ,0,1 ) "
                objConn.Execute StrSql, , adExecuteNoRecords
                If Err Then
                    Err.Clear
                    FlogE.writeline "Error Insertando el telefono " & datos(21)
                    FlogE.writeline "SQL ejecutada: " & StrSql
                Else
                    Flog.writeline "Inserte el telefono"
                End If
            End If
        End If
        
        '--Telefonos-segundo--
        datos(22) = validatelefono(StrToStr(datos(22), 20))
        If datos(22) <> "" Then
            StrSql = "SELECT * FROM telefono  "
            StrSql = StrSql & " WHERE domnro = " & NroDom
            StrSql = StrSql & " AND telnro = " & "'" & datos(22) & "'"
            If rs_Aux.State = adStateOpen Then rs_Aux.Close
            OpenRecordset StrSql, rs_Aux
            If rs_Aux.EOF Then
                StrSql = " INSERT INTO telefono "
                'FGZ - 04/05/2011 --- le agregué el tipo de telefono ---------------------
                StrSql = StrSql & " (domnro, telnro, telfax, teldefault, telcelular,tipotel ) "
                StrSql = StrSql & " VALUES (" & NroDom & ", '" & datos(22) & "' , 0, -1, 0,2 ) "
                objConn.Execute StrSql, , adExecuteNoRecords
                If Err Then
                    Err.Clear
                    FlogE.writeline "Error Insertando el telefono " & datos(22)
                    FlogE.writeline "SQL ejecutada: " & StrSql
                Else
                    Flog.writeline "Inserte el telefono2 "
                End If
            End If
        End If
    
    
        '--Complemento--
        If datos(15) = "" Then
            datos(15) = 0
        Else
            datos(15) = CLng(StrToInt(datos(15))) 'cantidadHijos
        End If
        datos(16) = StrToStr(datos(16), 60) 'imagen
        If datos(17) = "" Then
            datos(17) = "NULL"
        Else
            datos(17) = ConvFecha(CDate(datos(17))) 'fechaIngresoCV
        End If
        datos(18) = StrToStr(datos(18), 250) 'referencias
        If datos(19) = "" Then
            datos(19) = TraerCodProcedencia("Web Deloitte") 'procedencia
        Else
            datos(19) = TraerCodProcedencia(CStr(datos(19))) 'procedencia
        End If
        If datos(20) = "" Then
            datos(20) = 0
        Else
            datos(20) = CDbl(StrToDbl(datos(20))) 'remuneracionPretendida
        End If
        
        'FGZ - 02/03/2006 Se agrego el estposnro = 4 (postulantre activo)
        StrSql = "SELECT * FROM pos_postulante  "
        StrSql = StrSql & " WHERE ternro = " & Ternro
        If rs_Aux.State = adStateOpen Then rs_Aux.Close
        OpenRecordset StrSql, rs_Aux
        If rs_Aux.EOF Then
            StrSql = " INSERT INTO pos_postulante "
            StrSql = StrSql & " ( ternro, posrempre, poscanhijos, posfoto, posfecpres, posref, procnro,estposnro) "
            StrSql = StrSql & " VALUES (" & Ternro & " ," & CDbl(datos(20)) & ", " & CLng(datos(15)) & ", '" & datos(16) & "', " & datos(17) & ",'" & datos(18) & "', " & datos(19) & ",4) "
            objConn.Execute StrSql, , adExecuteNoRecords
            If Err Then
                FlogE.writeline "Error al inserte el Complemento: " & Err.Description
                FlogE.writeline "SQL ejecutada: " & StrSql
                Err.Clear
            Else
                Flog.writeline "Inserte el Complemento "
            End If
        Else
            StrSql = "UPDATE pos_postulante SET "
            StrSql = StrSql & " posrempre = " & CDbl(datos(20))
            StrSql = StrSql & ", poscanhijos =" & CLng(datos(15))
            StrSql = StrSql & ", posfoto =" & "'" & datos(16) & "'"
            StrSql = StrSql & ", posfecpres =" & datos(17)
            StrSql = StrSql & ", posref =" & "'" & datos(18) & "'"
            StrSql = StrSql & ", procnro =" & datos(19)
            StrSql = StrSql & ", estposnro = 4"
            StrSql = StrSql & " WHERE ternro = " & Ternro
            objConn.Execute StrSql, , adExecuteNoRecords
            If Err Then
                FlogE.writeline "Error al actualizar el Complemento: " & Err.Description
                FlogE.writeline "SQL ejecutada: " & StrSql
                Err.Clear
            Else
                Flog.writeline "Complemento actualizado"
            End If
        End If
        
        '--Estudios-formales--(49) (50)
        Xconst = 1
        For a = 0 To 3
            If UBound(datos) > (Xconst + 33) Then
                If datos(Xconst + 33) <> "" Then
                    datos(Xconst + 33) = TraerCodNivelEstudio(datos(Xconst + 33))   'EFnivel8
                    'FGZ - 29/08/2005
                    'If Datos(Xconst + 38) = "Graduado" Then Datos(Xconst + 38) = -1 Else Datos(Xconst + 38) = 0
                    If datos(Xconst + 34) = -1 Then datos(Xconst + 34) = -1 Else datos(Xconst + 34) = 0
                        'Datos(Xconst + 38) = Datos(Xconst + 38)   'EFcompleto8
                    datos(Xconst + 35) = TraerCodTituloPorNro(CStr(datos(Xconst + 35)), CLng(datos(Xconst + 33)))   'EFtitulo8
                    If datos(Xconst + 35) = -1 Then
                        Flog.writeline "No existe el Codigo del Titulo ingresado"
                        InsertaError 1, 8
                        HuboError = True
                        GoTo Manejador_De_Error
                    End If
                    datos(Xconst + 36) = TraerCodInstitucionPorNro(CStr(datos(Xconst + 36)))   'EFinstitucion8
                    If datos(Xconst + 36) = -1 Then
                        Flog.writeline "No existe el Codigo de la Institucion ingresado"
                        InsertaError 1, 8
                        HuboError = True
                        GoTo Manejador_De_Error
                    End If
                    datos(Xconst + 37) = TraerCodCarreraPorNro(CStr(datos(Xconst + 37)))    'EFcarrera8
                    If datos(Xconst + 37) = -1 Then
                        Flog.writeline "No existe el Codigo de la Carrera ingresado"
                        InsertaError 1, 8
                        HuboError = True
                        GoTo Manejador_De_Error
                    End If
                    
                    If datos(Xconst + 38) <> "" Then
                        datos(Xconst + 38) = ConvFecha(CDate(datos(Xconst + 38)))   'EFfechaDesde8
                    Else
                        datos(Xconst + 38) = "NULL"
                    End If
                    If datos(Xconst + 39) <> "" Then
                        datos(Xconst + 39) = ConvFecha(CDate(datos(Xconst + 39)))   'EFfechaHasta8
                    Else
                        datos(Xconst + 39) = "NULL"
                    End If
                    datos(Xconst + 40) = StrToStr(datos(Xconst + 40), 30)   'EFpromedio8
                    datos(Xconst + 41) = StrToStr(datos(Xconst + 41), 60)   'EFrango8
                    If datos(Xconst + 42) <> "" And UCase(datos(Xconst + 42)) <> "NO" Then
                        datos(Xconst + 42) = -1  'EFestudiaActualmente8
                    Else
                        datos(Xconst + 42) = 0  'EFestudiaActualmente8
                    End If
            
                    'actualizo
                    StrSql = "SELECT * FROM cap_estformal  "
                    StrSql = StrSql & " WHERE nivnro = " & CLng(datos(Xconst + 33))
                    StrSql = StrSql & " AND ternro = " & Ternro
                    StrSql = StrSql & " AND titnro = " & datos(Xconst + 35)
                    StrSql = StrSql & " AND instnro = " & datos(Xconst + 36)
                    StrSql = StrSql & " AND carredunro = " & datos(Xconst + 37)
                    If rs_Aux.State = adStateOpen Then rs_Aux.Close
                    OpenRecordset StrSql, rs_Aux
                    If rs_Aux.EOF Then
                        StrSql = " INSERT INTO cap_estformal "
                        StrSql = StrSql & " ( nivnro, ternro, titnro, instnro, carredunro, capfecdes, capfechas, capcomp , capestact, caprango, capprom) "
                        StrSql = StrSql & " VALUES ("
                        StrSql = StrSql & CLng(datos(Xconst + 33))          'nivnro
                        StrSql = StrSql & "," & Ternro                      'ternro
                        StrSql = StrSql & "," & datos(Xconst + 35)          'titnro
                        StrSql = StrSql & "," & datos(Xconst + 36)          'instnro
                        StrSql = StrSql & "," & datos(Xconst + 37)          'carredunro
                        StrSql = StrSql & "," & datos(Xconst + 38)          'capfecdes
                        StrSql = StrSql & "," & datos(Xconst + 39)          'capfechas
                        StrSql = StrSql & "," & datos(Xconst + 34)          'capcomp
                        StrSql = StrSql & "," & datos(Xconst + 42)          'capestact
                        StrSql = StrSql & ",'" & datos(Xconst + 41) & "'"   'caprango
                        StrSql = StrSql & ",'" & datos(Xconst + 40) & "'"   'capprom
                        StrSql = StrSql & ")"
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If Err Then
                            FlogE.writeline "Error al inserte el estudio formal: " & Err.Description
                            FlogE.writeline "SQL ejecutada: " & StrSql
                            Err.Clear
                        Else
                            Flog.writeline "Inserte el estudio formal " & datos(Xconst + 33)
                            ActPasos = True
                        End If
                    Else
                        StrSql = "UPDATE  cap_estformal SET "
                        StrSql = StrSql & " capfecdes = " & datos(Xconst + 38)
                        StrSql = StrSql & ", capfechas =" & datos(Xconst + 39)
                        StrSql = StrSql & ", capcomp =" & datos(Xconst + 34)
                        StrSql = StrSql & ", capestact =" & datos(Xconst + 42)
                        StrSql = StrSql & ", caprango =" & "'" & datos(Xconst + 41) & "'"
                        StrSql = StrSql & ", capprom =" & "'" & datos(Xconst + 40) & "'"
                        StrSql = StrSql & " WHERE nivnro = " & CLng(datos(Xconst + 33))
                        StrSql = StrSql & " AND ternro = " & Ternro
                        StrSql = StrSql & " AND titnro = " & datos(Xconst + 35)
                        StrSql = StrSql & " AND instnro = " & datos(Xconst + 36)
                        StrSql = StrSql & " AND carredunro = " & datos(Xconst + 37)
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If Err Then
                            FlogE.writeline "Error al inserte Al actualizar studio formal: " & Err.Description
                            FlogE.writeline "SQL ejecutada: " & StrSql
                            Err.Clear
                        Else
                            Flog.writeline "Estudio formal " & datos(Xconst + 33) & " actualizado"
                            ActPasos = False
                        End If
                    End If
                End If
            Else
            End If
            Xconst = Xconst + 10
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 50)
        End If
        ActPasos = False
        
        
        '--Experiencia-Laboral----Empleos Anteriores
        Xconst = 1
        For a = 0 To 3
            If UBound(datos) > (Xconst + 73) Then
                If datos(Xconst + 74) <> "" And datos(Xconst + 73) <> "" Then
                    datos(Xconst + 73) = TraerCodCargo(CStr(datos(Xconst + 73)))    'ELcargoAnterior16
                    
                    l_desempresa = CStr(datos(Xconst + 74))
                    datos(Xconst + 74) = TraerCodListaEmpresa(CStr(datos(Xconst + 74)))   'ELempresa16 lempnro
                    
                    datos(Xconst + 75) = StrToStr(datos(Xconst + 75), 200) 'ELtareaDesempenada16
                    If datos(Xconst + 76) <> "" Then
                        datos(Xconst + 76) = ConvFecha(CDate(datos(Xconst + 76)))  'ELfechaDesde16
                    Else
                        datos(Xconst + 76) = "NULL"
                    End If
                    If datos(Xconst + 77) <> "" Then
                        datos(Xconst + 77) = ConvFecha(CDate(datos(Xconst + 77)))  'ELfechaHasta16
                    Else
                        datos(Xconst + 77) = "NULL"
                    End If
                    If datos(Xconst + 78) = "" Then
                        datos(Xconst + 78) = 0
                    Else
                        datos(Xconst + 78) = StrToDbl(datos(Xconst + 78))   'ELremuneracion16
                    End If
                    If datos(Xconst + 79) <> "" Then
                        datos(Xconst + 79) = TraerCodCausa(CStr(datos(Xconst + 79)))   'ELcausaBaja16
                    Else
                        datos(Xconst + 79) = "NULL"
                    End If
                
                    StrSql = "SELECT * FROM empant  "
                    StrSql = StrSql & " WHERE empleado = " & Ternro
                    StrSql = StrSql & " AND empatareas = " & "'" & datos(Xconst + 75) & "'"
                    StrSql = StrSql & " AND lempnro = " & datos(Xconst + 74)
                    StrSql = StrSql & " AND carnro = " & datos(Xconst + 73)
                    If rs_Aux.State = adStateOpen Then rs_Aux.Close
                    OpenRecordset StrSql, rs_Aux
                    If rs_Aux.EOF Then
                        StrSql = " INSERT INTO empant "
                        'FGZ - 29/08/2005
                        'cambié los nombres de los campos donde inserta las fechas desde y hasta
                        'StrSql = StrSql & " ( empleado, empatareas, lempnro, empadesde, emmpahasta, carnro, emparemu ) "
                        StrSql = StrSql & " ( empleado, empatareas, lempnro, empaini, empafin, carnro, emparemu, caunro, empresa ) "
                        StrSql = StrSql & " VALUES (" & Ternro & ", '" & datos(Xconst + 75) & "' ," & datos(Xconst + 74) & "," & datos(Xconst + 76) & "," & datos(Xconst + 77) & "," & datos(Xconst + 73) & "," & datos(Xconst + 78) & "," & datos(Xconst + 79) & ",'" & l_desempresa & "'  ) "
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If Err Then
                            FlogE.writeline "Error al inserte el Empleo Anterior: " & Err.Description
                            FlogE.writeline "SQL ejecutada: " & StrSql
                            Err.Clear
                        Else
                            Flog.writeline "Inserto los datos del Empleo Anterior"
                            ActPasos = True
                        End If
                    Else
                        StrSql = "UPDATE empant SET "
                        'FGZ - 29/08/2005
'                        StrSql = StrSql & " empadesde =" & Datos(Xconst + 120)
'                        StrSql = StrSql & ", emmpahasta =" & (Datos(Xconst + 121))
                        StrSql = StrSql & " empaini =" & datos(Xconst + 76)
                        StrSql = StrSql & ", empafin =" & (datos(Xconst + 77))
                        StrSql = StrSql & ", emparemu = " & datos(Xconst + 78)
                        StrSql = StrSql & ", caunro = " & datos(Xconst + 79)
                        StrSql = StrSql & ", empresa = '" & l_desempresa & "'"
                        StrSql = StrSql & " WHERE empantnro = " & rs_Aux!Empantnro
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If Err Then
                            FlogE.writeline "Error al actualizar el Empleo Anterior: " & Err.Description
                            FlogE.writeline "SQL ejecutada: " & StrSql
                            Err.Clear
                        Else
                            Flog.writeline "Actualizo los datos del Empleo Anterior"
                            ActPasos = False
                        End If
                    End If
                Else
                End If
            End If
            Xconst = Xconst + 7
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 58)
        End If
        ActPasos = False
    
        l_nivel_vacio = "Null" 'FMD variable para nivel vacio
        
        '--Idiomas--53 (54)
        ActPasos = False
        Xconst = 1
        For a = 0 To 3
            If UBound(datos) > (Xconst + 101) Then
                If datos(Xconst + 101) <> "" Then
                    If datos(Xconst + 102) <> "" Or datos(Xconst + 103) <> "" Or datos(Xconst + 104) <> "" Then
                        datos(Xconst + 101) = TraerCodIdioma(CStr(datos(Xconst + 101))) 'idioma1
                        'TraerCodIdiNivel devuelve 0 cuando se le envian datos ""
                        datos(Xconst + 102) = TraerCodIdiNivel(CStr(datos(Xconst + 102))) 'idiomaLee1
                        datos(Xconst + 103) = TraerCodIdiNivel(CStr(datos(Xconst + 103))) 'idiomaHabla1
                        datos(Xconst + 104) = TraerCodIdiNivel(CStr(datos(Xconst + 104))) 'idiomaEscribe1
                        
                        If Not TieneIdioma(Ternro, CLng(datos(Xconst + 101))) Then
                            StrSql = " INSERT INTO emp_idi "
                            StrSql = StrSql & " (idinro, empleado, empidlee, empidhabla, empidescr) "
                            StrSql = StrSql & " VALUES (" & CLng(datos(Xconst + 101)) & ", " & Ternro & " ,"
                            StrSql = StrSql & IIf(datos(Xconst + 102) = 0, l_nivel_vacio, CLng(datos(Xconst + 102))) & ", "
                            StrSql = StrSql & IIf(datos(Xconst + 103) = 0, l_nivel_vacio, CLng(datos(Xconst + 103))) & ", "
                            StrSql = StrSql & IIf(datos(Xconst + 104) = 0, l_nivel_vacio, CLng(datos(Xconst + 104))) & ")"
                            l_ins_upd = "Inserte"
                        Else
                            StrSql = " UPDATE emp_idi SET "
                            If (datos(Xconst + 102) <> 0) Then
                                StrSql = StrSql & " empidlee = " & datos(Xconst + 102)
                            End If
                            If (datos(Xconst + 103) <> 0) Then
                                StrSql = StrSql & ", empidhabla = " & datos(Xconst + 103)
                            End If
                            If (datos(Xconst + 104) <> 0) Then
                                StrSql = StrSql & ", empidescr = " & datos(Xconst + 104)
                            End If
                            StrSql = StrSql & " where empleado = " & Ternro & " and idinro = " & CLng(datos(Xconst + 101))
                            l_ins_upd = "Modifique"
                        End If
                        objConn.Execute StrSql, , adExecuteNoRecords
                        If Err Then
                            FlogE.writeline "Error al inserte el Idioma " & datos(Xconst + 101) & "-" & Err.Description
                            FlogE.writeline "SQL ejecutada: " & StrSql
                            Err.Clear
                        Else
                            Flog.writeline l_ins_upd & " el Idioma " & datos(Xconst + 101)
                            ActPasos = True
                        End If
                    End If
                End If
            End If
            Xconst = Xconst + 4
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 54)
        End If
        ActPasos = False
    
        
        '--Estudios-Informales--50 (51)
        ActPasos = False
        Xconst = 1
        For a = 0 To 3
            tempString = StrToStr(datos(Xconst + 117), 50) ''descCurso  estinfdesabr
            datos(Xconst + 117) = datos(Xconst + 117) ''descCurso  estinfdesabr
            datos(Xconst + 118) = TraerCodTipoCurso(StrToStr(datos(Xconst + 118), 50)) 'tipoCurso tipcurnro
            If datos(Xconst + 119) <> "" Then
                datos(Xconst + 119) = ConvFecha(datos(Xconst + 119)) 'fechaCurso  estinffecha
            Else
                datos(Xconst + 119) = ConvFecha(Date)
            End If
            datos(Xconst + 120) = TraerCodInstitucion(CStr(datos(Xconst + 120))) 'institucionCurso instnro
            
            If datos(Xconst + 117) = "" Or datos(Xconst + 118) = "" Or datos(Xconst + 120) = "" Then
                Flog.writeline "Error al insertar el estudio informal por falta de datos "
            Else
                'Reviso
                StrSql = "SELECT * FROM cap_estinformal  "
                StrSql = StrSql & " WHERE tipcurnro = " & CLng(datos(Xconst + 118))
                StrSql = StrSql & " AND ternro = " & Ternro
                StrSql = StrSql & " AND instnro = " & CLng(datos(Xconst + 120))
                If rs_Aux.State = adStateOpen Then rs_Aux.Close
                OpenRecordset StrSql, rs_Aux
                If rs_Aux.EOF Then
                    StrSql = " INSERT INTO cap_estinformal "
                    StrSql = StrSql & " (ternro, estinfdesabr, estinffecha, tipcurnro, instnro) "
                    StrSql = StrSql & " VALUES (" & Ternro & " , '" & tempString & "'," & datos(Xconst + 119) & "," & CLng(datos(Xconst + 118)) & "," & CLng(datos(Xconst + 120)) & ")"
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If Err Then
                        FlogE.writeline "Error al insertar el estudio informal: " & Err.Description
                        FlogE.writeline "SQL ejecutada: " & StrSql
                        Err.Clear
                    Else
                        Flog.writeline "Inserto los datos del estudio informal "
                        ActPasos = True
                    End If
                Else
                    StrSql = "UPDATE cap_estinformal SET "
                    StrSql = StrSql & " estinfdesabr = '" & tempString & "'"
                    StrSql = StrSql & ", estinffecha =" & (datos(Xconst + 119))
                    StrSql = StrSql & " WHERE tipcurnro = " & CLng(datos(Xconst + 118))
                    StrSql = StrSql & " AND ternro = " & Ternro
                    StrSql = StrSql & " AND instnro = " & CLng(datos(Xconst + 120))
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If Err Then
                        FlogE.writeline "Error al actualizar el estudio informal: " & Err.Description
                        FlogE.writeline "SQL ejecutada: " & StrSql
                        Err.Clear
                    Else
                        Flog.writeline "Actualizo los datos del estudio informal "
                        ActPasos = False
                    End If
                End If
            End If
            Xconst = Xconst + 4
        Next a
        If ActPasos Then
           Call InsertarPaso(Ternro, 51)
           ActPasos = False
        End If
        
        '--Especializaciones--51 (52)
        Xconst = 1
        ActPasos = False
        For a = 0 To 3
            If datos(Xconst + 135) <> "" Then
                datos(Xconst + 133) = TraerCodEspecializacion(CStr(datos(Xconst + 133))) 'tipo
                datos(Xconst + 134) = TraerCodEltoana(CStr(datos(Xconst + 134)), CLng(datos(Xconst + 133))) 'elemento
                datos(Xconst + 135) = TraerCodNivelEspecializacion(CStr(datos(Xconst + 135))) 'nivel
                
                'REVISO
                StrSql = "SELECT * FROM especemp  "
                StrSql = StrSql & " WHERE espnivnro = " & datos(Xconst + 135)
                StrSql = StrSql & " AND ternro = " & Ternro
                StrSql = StrSql & " AND eltananro = " & datos(Xconst + 134)
                If rs_Aux.State = adStateOpen Then rs_Aux.Close
                OpenRecordset StrSql, rs_Aux
                If rs_Aux.EOF Then
                    StrSql = " INSERT INTO especemp "
                    StrSql = StrSql & " (eltananro, ternro, espnivnro ) "
                    StrSql = StrSql & " VALUES (" & datos(Xconst + 134) & ", " & Ternro & " ," & datos(Xconst + 135) & ") "
    '                StrSql = StrSql & " VALUES (" & datosEltoAna(0, a) & ", " & ternro & " ," & Datos(Xconst + 139) & ") "
                
                    Err.Clear
                    objConn.Execute StrSql, , adExecuteNoRecords
                    If Err Then
                        FlogE.writeline "Error al insertar la especialidad: " & Err.Description
                        FlogE.writeline "SQL ejecutada: " & StrSql
                        Err.Clear
                    Else
                        Flog.writeline "Actualizo los datos de la especialidad."
                        ActPasos = True
                    End If
                End If
            Else
            End If
            Xconst = Xconst + 3
        Next a
        If ActPasos Then
           'Flog.Writeline "Inserto los datos de la especialidad"
           Call InsertarPaso(Ternro, 52)
           ActPasos = False
        End If
        
        '--Tipos e Items de Informacion
        ActPasos = False
        Xconst = 1
        
        For a = 0 To 4
            If datos(Xconst + 145) <> "" Then
                datos(145 + Xconst) = UCase(datos(145 + Xconst)) ''descTipoInformacion
                
                TipItemInf(Xconst) = TraerCodTipInformacion(datos(145 + Xconst))
                
                If datos(146 + Xconst) <> "" Then
                    datos(146 + Xconst) = UCase(datos(146 + Xconst)) ''descItemInformacion
                    
                    TipItemInf(Xconst + 1) = TraerCodItemInformacion(datos(146 + Xconst), TipItemInf(Xconst))
                    
                    'AHORA TENGO QUE ASOCIARLE EL PAR AL POSTULANTE
                    Inserto = AsociarParAPostulante(TipItemInf(Xconst + 1), Ternro)
                    If Inserto = -1 Then
                        Flog.writeline "Se Asocio el Par con el Postulante"
                        ActPasos = True
                    Else
                        Flog.writeline "El Postulante ya tenia el Par asociado"
                    End If
                Else
                    Flog.writeline "Falto especificar el Item de Informacion"
                End If
            Else
                Flog.writeline "Falto especificar el Tipo de Informacion"
            End If

            Xconst = Xconst + 2
        Next a
        If ActPasos Then
            Call InsertarPaso(Ternro, 86)
        End If
        ActPasos = False
    FlogP.writeline "Se Proceso empleado:" & Ternro
    End If
Fin:
Exit Sub

Manejador_De_Error:
    HuboError = True
    FlogE.writeline "SQL ejecutada: " & StrSql
    Texto = ": " & Err.Description
    Call Escribir_Log("floge", NroLinea, NroColumna, Texto, Tabs, strLinea)
    
    FlogE.writeline
    FlogE.writeline Espacios(Tabulador * 1) & "Error insalvable en la linea " & strLinea
    FlogE.writeline Espacios(Tabulador * 1) & "**********************************************************"
    FlogE.writeline Espacios(Tabulador * 1) & "Error. " & Format(Now, "dd/mm/yyyy hh:mm:ss")
    FlogE.writeline Espacios(Tabulador * 1) & "Error: " & Err.Number
    FlogE.writeline Espacios(Tabulador * 1) & "Decripcion: " & Err.Description
    FlogE.writeline
    'Fue error de Consulta de SQL
    FlogE.writeline
    FlogE.writeline Espacios(Tabulador * 1) & "SQL Ejecutado: " & StrSql
    FlogE.writeline
    FlogE.writeline Espacios(Tabulador * 1) & "**********************************************************"
    FlogE.writeline
    GoTo Fin
    
End Sub

